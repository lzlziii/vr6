using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using Assets.Cortopia.Scripts.WandsInput;
using Assets.Scripts;
using Assets.Scripts.Animation;
using Assets.Scripts.CustomEvents;
using Assets.Scripts.Enums;
using Assets.Scripts.Environmental;
using Assets.Scripts.InteractObjects;
using Assets.Scripts.Interfaces;
using Assets.Scripts.ItemDatabase;
using Assets.Scripts.Misc;
using Assets.Scripts.Network;
using Assets.Scripts.Pickup;
using Assets.Scripts.Platform;
using Assets.Scripts.Platform.Achievements;
using Assets.Scripts.PlayFab;
using Assets.Scripts.Player;
using Assets.Scripts.Relics;
using Assets.Scripts.Reporting;
using Assets.Scripts.SaveLoad;
using Assets.Scripts.SaveLoad.Converters;
using Assets.Scripts.Season;
using Assets.Scripts.Settings;
using Assets.Scripts.Sound;
using Assets.Scripts.Spells;
using Assets.Scripts.Spells.Defense;
using Assets.Scripts.Spells.Interfaces;
using Assets.Scripts.Spells.Projectile;
using Assets.Scripts.Spells.TileEffects;
using Assets.Scripts.Spells.Turret;
using Assets.Scripts.Spells.Utils;
using Assets.Scripts.Tiles;
using Assets.Scripts.UI;
using Assets.Scripts.UI.Basement;
using Assets.Scripts.UI.Button;
using Assets.Scripts.UI.Lobby;
using Assets.Scripts.UI.SpellSelection;
using Assets.Scripts.UI.Workshop;
using Assets.Scripts.UI.Workshop.CharacterSelection.MirrorStates;
using Assets.Scripts.UI.Workshop.Tutorial;
using Assets.Scripts.UI.Workshop.WandStation;
using Assets.Scripts.Utils;
using Assets.Scripts.Utils.Tweeners;
using Assets.Scripts.WandsIAP;
using Assets.Scripts.WandsInput;
using Assets.Scripts.WandsInput.Haptics;
using Assets.Scripts.Workshop;
using Cortopia.AI.Memory;
using Cortopia.AI.Predictions;
using Cortopia.BE.Runtime.Actions;
using Cortopia.BE.Runtime.Actions.Conditions;
using Cortopia.BE.Runtime.Components.Senses.Hearing;
using Cortopia.BE.Runtime.Components.Senses.Sight;
using Cortopia.BE.Runtime.Components.Senses.Sight.Collections;
using Cortopia.BE.Runtime.Instance;
using Cortopia.CortopiaAttributes;
using Cortopia.PlayFabManager;
using Cortopia.Scripts.AI;
using Cortopia.Scripts.AI.Casting;
using Cortopia.Scripts.AI.Casting.Interfaces;
using Cortopia.Scripts.AI.Casting.Spells;
using Cortopia.Scripts.AI.Movement;
using Cortopia.Scripts.AI.Params;
using Cortopia.Scripts.AI.Stats;
using Cortopia.Scripts.AI.Targeting;
using Cortopia.Scripts.Aiming;
using Cortopia.Scripts.Animation.Constraints;
using Cortopia.Scripts.Attributes;
using Cortopia.Scripts.Enums;
using Cortopia.Scripts.InteractObjects;
using Cortopia.Scripts.Network;
using Cortopia.Scripts.Pawns;
using Cortopia.Scripts.Platform;
using Cortopia.Scripts.Player;
using Cortopia.Scripts.Season;
using Cortopia.Scripts.Spells.Tile;
using Cortopia.Scripts.Spells.Utils;
using Cortopia.Scripts.UI;
using Cortopia.Scripts.UI.HUD;
using Cortopia.Scripts.Vanity;
using Cortopia.Scripts.Wand;
using Cortopia.Scripts.WandsInput;
using CortopiaEvents;
using DG.Tweening;
using ExitGames.Client.Photon;
using I2.Loc;
using Il2CppDummyDll;
using InControl;
using LitJson;
using MIVR;
using MagicalFX;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using OVR.OpenVR;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using PlayFab;
using PlayFab.ClientModels;
using PlayFab.MultiplayerModels;
using PlayFab.SharedModels;
using Pvr_UnitySDKAPI;
using RootMotion.FinalIK;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.PostProcessing;
using UnityEngine.Purchasing;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.U2D;
using UnityEngine.UI;
using UnityEngine.XR;
using Valve.VR;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DecalHandler : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Projector proj;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Shader shader;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material TempMaterial;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float time;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float OneProcent;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentValue;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float FadeOutTime;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float CurrentTime;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float directionBlending;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xF61080", Offset = "0xF61080", VA = "0xF61080")]
	public DecalHandler()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xF6109C", Offset = "0xF6109C", VA = "0xF6109C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF61550", Offset = "0xF61550", VA = "0xF61550")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC77F70", Offset = "0xC77F70")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF630E8", Offset = "0xF630E8", VA = "0xF630E8")]
	public EnableCameraDepthInForward()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF630F0", Offset = "0xF630F0", VA = "0xF630F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF630F4", Offset = "0xF630F4", VA = "0xF630F4")]
	private void Set()
	{
	}
}
[Token(Token = "0x2000004")]
public class ParticleLockedRoll : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem Ps;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastRotation;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1868110", Offset = "0x1868110", VA = "0x1868110")]
	public ParticleLockedRoll()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1868118", Offset = "0x1868118", VA = "0x1868118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x18681A0", Offset = "0x18681A0", VA = "0x18681A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x186836C", Offset = "0x186836C", VA = "0x186836C")]
	private void InitializeIfneeded()
	{
	}
}
[Token(Token = "0x2000005")]
public class PortalPosition : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tempEnemy;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x186962C", Offset = "0x186962C", VA = "0x186962C")]
	public PortalPosition()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1869634", Offset = "0x1869634", VA = "0x1869634")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x18696C4", Offset = "0x18696C4", VA = "0x18696C4")]
	private void EnemySpawns(GameObject enemy)
	{
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC77FD4", Offset = "0xC77FD4")]
public class RFX4_TrailRenderer : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VertexLifeTime;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TrailLifeTime;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC78038", Offset = "0xC78038")]
	public float MinVertexDistance;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gravity;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Force;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float InheritVelocity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Drag;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC78054", Offset = "0xC78054")]
	public float Frequency;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC78070", Offset = "0xC78070")]
	public float OffsetSpeed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7808C", Offset = "0xC7808C")]
	public float Amplitude;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurbulenceStrength;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool SmoothCurves;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> positions;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> currentTimes;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float currentLifeTime;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 prevPosition;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int curveCount;

	[Token(Token = "0x4000028")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x4000029")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x400002A")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentVelocity;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float turbulenceRandomOffset;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isInitialized;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xFA3160", Offset = "0xFA3160", VA = "0xFA3160")]
	public RFX4_TrailRenderer()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xFA3274", Offset = "0xFA3274", VA = "0xFA3274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xFA34D8", Offset = "0xFA34D8", VA = "0xFA34D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xFA329C", Offset = "0xFA329C", VA = "0xFA329C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xFA34E8", Offset = "0xFA34E8", VA = "0xFA34E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xFA45B4", Offset = "0xFA45B4", VA = "0xFA45B4")]
	private int GetLastDeletedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xFA3694", Offset = "0xFA3694", VA = "0xFA3694")]
	private void UpdatePositionsCount()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xFA4F60", Offset = "0xFA4F60", VA = "0xFA4F60")]
	private void AddInterpolatedPositions(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xFA46D8", Offset = "0xFA46D8", VA = "0xFA46D8")]
	private void RemovePositionsBeforeIndex(int lastDeletedIndex)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xFA38EC", Offset = "0xFA38EC", VA = "0xFA38EC")]
	private void UpdateForce()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xFA3F6C", Offset = "0xFA3F6C", VA = "0xFA3F6C")]
	private void UpdateImpulse()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xFA4220", Offset = "0xFA4220", VA = "0xFA4220")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xFA482C", Offset = "0xFA482C", VA = "0xFA482C")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xFA4E74", Offset = "0xFA4E74", VA = "0xFA4E74")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xFA51C8", Offset = "0xFA51C8", VA = "0xFA51C8")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xFA545C", Offset = "0xFA545C", VA = "0xFA545C")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xFA5318", Offset = "0xFA5318", VA = "0xFA5318")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xFA5758", Offset = "0xFA5758", VA = "0xFA5758")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000007")]
public class CustomDissolve : MonoBehaviour
{
	[Token(Token = "0x2000008")]
	public enum EventType
	{
		[Token(Token = "0x400003E")]
		StartDissolve,
		[Token(Token = "0x400003F")]
		EndDissolve,
		[Token(Token = "0x4000040")]
		StartUndissolve,
		[Token(Token = "0x4000041")]
		EndUnsidissolve
	}

	[Token(Token = "0x2000009")]
	public class EventInfo
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventType messageInfo;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomDissolve sender;

		[Token(Token = "0x6000027")]
		[Address(RVA = "0xF602D0", Offset = "0xF602D0", VA = "0xF602D0")]
		public EventInfo()
		{
		}
	}

	[Token(Token = "0x200000A")]
	public delegate void CallbackEventHandler(EventInfo eventInfo);

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dissolveDuration;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D noiseTexture;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color dissolveColor;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC780B8", Offset = "0xC780B8")]
	public float dissolveThickness;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float tilingX;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tilingY;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Shader> originalObjetsShader;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Shader dissolveShader;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dissolve;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float t;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startValue;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float endValue;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Component[] renderers;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CallbackEventHandler CallBackFunction;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventType nextType;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF5FC10", Offset = "0xF5FC10", VA = "0xF5FC10")]
	public CustomDissolve()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF5FC64", Offset = "0xF5FC64", VA = "0xF5FC64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF60044", Offset = "0xF60044", VA = "0xF60044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF60A34", Offset = "0xF60A34", VA = "0xF60A34")]
	public void Dissolve()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF60AF0", Offset = "0xF60AF0", VA = "0xF60AF0")]
	public void Undissolve()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF5FD50", Offset = "0xF5FD50", VA = "0xF5FD50")]
	public void ReplaceShaders()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF60BB4", Offset = "0xF60BB4", VA = "0xF60BB4")]
	public void RestoreShaders()
	{
	}
}
namespace MagicalFX
{
	[Token(Token = "0x200000B")]
	public class FX_Rotation : MonoBehaviour
	{
		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Speed;

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xF68558", Offset = "0xF68558", VA = "0xF68558")]
		public FX_Rotation()
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xF685D4", Offset = "0xF685D4", VA = "0xF685D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xF685D8", Offset = "0xF685D8", VA = "0xF685D8")]
		private void FixedUpdate()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Actions
{
	[Token(Token = "0x200000C")]
	public class ChangeStatsProfile : BE_Action
	{
		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StatsManagementProfileType NewProfile;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private StatsDataManager m_statsDataManager;

		[Token(Token = "0x600002F")]
		[Address(RVA = "0x1018B48", Offset = "0x1018B48", VA = "0x1018B48")]
		public ChangeStatsProfile()
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1018B50", Offset = "0x1018B50", VA = "0x1018B50", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x1018BA4", Offset = "0x1018BA4", VA = "0x1018BA4", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x200000D")]
	public class PredictingIncomingProjectile : BE_Action
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float WithinDuration;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Prediction m_prediction;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x1018CFC", Offset = "0x1018CFC", VA = "0x1018CFC")]
		public PredictingIncomingProjectile()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x1018D0C", Offset = "0x1018D0C", VA = "0x1018D0C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1018DD8", Offset = "0x1018DD8", VA = "0x1018DD8", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x200000E")]
	public class StatCheck : RelationalCondition
	{
		[Token(Token = "0x200000F")]
		public enum StatType
		{
			[Token(Token = "0x400004F")]
			Health,
			[Token(Token = "0x4000050")]
			Mana
		}

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StatType Type;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public RelationalOperator Relation;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Value;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseFactor;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private StatsDataManager m_statsDataManager;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1018EFC", Offset = "0x1018EFC", VA = "0x1018EFC")]
		public StatCheck()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x1018F04", Offset = "0x1018F04", VA = "0x1018F04", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x1018FD0", Offset = "0x1018FD0", VA = "0x1018FD0", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x10190E0", Offset = "0x10190E0", VA = "0x10190E0")]
		private float GetCurrentValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x1019210", Offset = "0x1019210", VA = "0x1019210", Slot = "6")]
		public override void DrawCustomProperties()
		{
		}
	}
}
namespace Cortopia.Scripts.AI
{
	[Token(Token = "0x2000010")]
	public class BotAI : BE_AI, IBotCaster, IBotMover, IBotTargeter
	{
		[Token(Token = "0x2000011")]
		private struct SpellPriorityPaths
		{
			[Token(Token = "0x4000082")]
			public const string Default = "Bots/VindicatorSpellPriority";

			[Token(Token = "0x4000083")]
			public const string Impossible = "Bots/ImpossibleSpellPriority";
		}

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] sm_difficultyLevels;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC78178", Offset = "0xC78178")]
		[SerializeField]
		private bool m_useScalingDifficulty;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_levelBasedScalingRatio;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_minLevel;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_maxLevel;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_levelScaling;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_minRating;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_maxRating;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve m_ratingScaling;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC78234", Offset = "0xC78234")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC78234", Offset = "0xC78234")]
		private float m_accurracy;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC78298", Offset = "0xC78298")]
		private float m_reactionTime;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC782DC", Offset = "0xC782DC")]
		[SerializeField]
		private Spell[] m_availableSpells;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BotControl m_botControl;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BotWandControl m_wandControl;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_resetAllOutDuration;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_damageTakenEventToken;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_teleportEndEventToken;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000063")]
		public const float MinAccurracy = 0f;

		[Token(Token = "0x4000064")]
		public const float MaxAccuracy = 1f;

		[Token(Token = "0x4000065")]
		public const float MinTeleportCooldown = 0.2f;

		[Token(Token = "0x4000066")]
		private const float MinReactionTime = 0f;

		[Token(Token = "0x4000067")]
		private const float MaxReactionTime = 0.3f;

		[Token(Token = "0x4000068")]
		private const float ResetAllOutDelay = 30f;

		[Token(Token = "0x4000069")]
		private const float CooldownMultiplier = 20f;

		[Token(Token = "0x400006A")]
		private const float ReactiveActionMultiplier = 2f;

		[Token(Token = "0x400006B")]
		private const float MinHandMovementDuration = 0.05f;

		[Token(Token = "0x400006C")]
		private const float MaxHandMovementDuration = 0.2f;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] m_currentVisibleTeleportColliders;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_difficulty;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_defensiveResultDuration;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_defensiveSuccessResult;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_backupSpellAttempt;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78328", Offset = "0xC78328")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78328", Offset = "0xC78328")]
		private SpellPriorities <SpellPriority>k__BackingField;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78364", Offset = "0xC78364")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78364", Offset = "0xC78364")]
		private bool <IsActivatingPickup>k__BackingField;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC783A0", Offset = "0xC783A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC783A0", Offset = "0xC783A0")]
		private PickupBase <ActivePickup>k__BackingField;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC783DC", Offset = "0xC783DC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC783DC", Offset = "0xC783DC")]
		private BotTargeting <Targeting>k__BackingField;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78418", Offset = "0xC78418")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78418", Offset = "0xC78418")]
		private BotCharacter <Character>k__BackingField;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78454", Offset = "0xC78454")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78454", Offset = "0xC78454")]
		private CharacterMovement <CharacterMovement>k__BackingField;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78490", Offset = "0xC78490")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78490", Offset = "0xC78490")]
		private StatsDataManager <StatsDataManager>k__BackingField;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC784CC", Offset = "0xC784CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC784CC", Offset = "0xC784CC")]
		private BehaviourParams <BehaviourParams>k__BackingField;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78508", Offset = "0xC78508")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78508", Offset = "0xC78508")]
		private BotMovement <BotMovement>k__BackingField;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78544", Offset = "0xC78544")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78544", Offset = "0xC78544")]
		private Prediction <Prediction>k__BackingField;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78580", Offset = "0xC78580")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78580", Offset = "0xC78580")]
		private Sight <Sight>k__BackingField;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC785BC", Offset = "0xC785BC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC785BC", Offset = "0xC785BC")]
		private Memory <Memory>k__BackingField;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC785F8", Offset = "0xC785F8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC785F8", Offset = "0xC785F8")]
		private Hearing <Hearing>k__BackingField;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78634", Offset = "0xC78634")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78634", Offset = "0xC78634")]
		private BotSpellCasting <SpellCasting>k__BackingField;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78670", Offset = "0xC78670")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78670", Offset = "0xC78670")]
		private bool <Enabled>k__BackingField;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC786AC", Offset = "0xC786AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC786AC", Offset = "0xC786AC")]
		private float <TeleportCost>k__BackingField;

		[Token(Token = "0x17000001")]
		public Spell[] AvailableSpells
		{
			[Token(Token = "0x600003B")]
			[Address(RVA = "0x1019394", Offset = "0x1019394", VA = "0x1019394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC786E8", Offset = "0xC786E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		public TeleportHandler TeleportHandler
		{
			[Token(Token = "0x600003C")]
			[Address(RVA = "0x101939C", Offset = "0x101939C", VA = "0x101939C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC786F8", Offset = "0xC786F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000003")]
		public WandManager Wand
		{
			[Token(Token = "0x600003D")]
			[Address(RVA = "0x10193C8", Offset = "0x10193C8", VA = "0x10193C8", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78708", Offset = "0xC78708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		public BotWandControl WandControl
		{
			[Token(Token = "0x600003E")]
			[Address(RVA = "0x10193F4", Offset = "0x10193F4", VA = "0x10193F4", Slot = "51")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78718", Offset = "0xC78718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000005")]
		public Aim Aim
		{
			[Token(Token = "0x600003F")]
			[Address(RVA = "0x10194F4", Offset = "0x10194F4", VA = "0x10194F4", Slot = "48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78728", Offset = "0xC78728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		public SpellPriorities SpellPriority
		{
			[Token(Token = "0x6000040")]
			[Address(RVA = "0x1019524", Offset = "0x1019524", VA = "0x1019524", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78738", Offset = "0xC78738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x101952C", Offset = "0x101952C", VA = "0x101952C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78748", Offset = "0xC78748")]
			private set
			{
			}
		}

		[Token(Token = "0x17000007")]
		public Tile CurrentTile
		{
			[Token(Token = "0x6000042")]
			[Address(RVA = "0x1019534", Offset = "0x1019534", VA = "0x1019534", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78758", Offset = "0xC78758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		public Tile HighlightedTile
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0x1019560", Offset = "0x1019560", VA = "0x1019560", Slot = "52")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78768", Offset = "0xC78768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		public bool HasActiveCollarsOnCurrentTile
		{
			[Token(Token = "0x6000044")]
			[Address(RVA = "0x10195BC", Offset = "0x10195BC", VA = "0x10195BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78778", Offset = "0xC78778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000A")]
		public bool IsCurrentTileInescapeable
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0x101960C", Offset = "0x101960C", VA = "0x101960C", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78788", Offset = "0xC78788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000B")]
		public bool IsActivatingPickup
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x1019678", Offset = "0x1019678", VA = "0x1019678", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78798", Offset = "0xC78798")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000047")]
			[Address(RVA = "0x1019680", Offset = "0x1019680", VA = "0x1019680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787A8", Offset = "0xC787A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000C")]
		public PickupBase ActivePickup
		{
			[Token(Token = "0x6000048")]
			[Address(RVA = "0x101968C", Offset = "0x101968C", VA = "0x101968C", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787B8", Offset = "0xC787B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000049")]
			[Address(RVA = "0x1019694", Offset = "0x1019694", VA = "0x1019694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787C8", Offset = "0xC787C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000D")]
		public BotTargeting Targeting
		{
			[Token(Token = "0x600004A")]
			[Address(RVA = "0x101969C", Offset = "0x101969C", VA = "0x101969C", Slot = "37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787D8", Offset = "0xC787D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004B")]
			[Address(RVA = "0x10196A4", Offset = "0x10196A4", VA = "0x10196A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787E8", Offset = "0xC787E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000E")]
		public BotCharacter Character
		{
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x10196AC", Offset = "0x10196AC", VA = "0x10196AC", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC787F8", Offset = "0xC787F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004D")]
			[Address(RVA = "0x10196B4", Offset = "0x10196B4", VA = "0x10196B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78808", Offset = "0xC78808")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public CharacterMovement CharacterMovement
		{
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x10196BC", Offset = "0x10196BC", VA = "0x10196BC", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78818", Offset = "0xC78818")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004F")]
			[Address(RVA = "0x10196C4", Offset = "0x10196C4", VA = "0x10196C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78828", Offset = "0xC78828")]
			private set
			{
			}
		}

		[Token(Token = "0x17000010")]
		public StatsDataManager StatsDataManager
		{
			[Token(Token = "0x6000050")]
			[Address(RVA = "0x10196CC", Offset = "0x10196CC", VA = "0x10196CC", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78838", Offset = "0xC78838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x10196D4", Offset = "0x10196D4", VA = "0x10196D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78848", Offset = "0xC78848")]
			private set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public BehaviourParams BehaviourParams
		{
			[Token(Token = "0x6000052")]
			[Address(RVA = "0x10196DC", Offset = "0x10196DC", VA = "0x10196DC", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78858", Offset = "0xC78858")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000053")]
			[Address(RVA = "0x10196E4", Offset = "0x10196E4", VA = "0x10196E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78868", Offset = "0xC78868")]
			private set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public BotMovement BotMovement
		{
			[Token(Token = "0x6000054")]
			[Address(RVA = "0x10196EC", Offset = "0x10196EC", VA = "0x10196EC", Slot = "50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78878", Offset = "0xC78878")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000055")]
			[Address(RVA = "0x10196F4", Offset = "0x10196F4", VA = "0x10196F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78888", Offset = "0xC78888")]
			private set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public Prediction Prediction
		{
			[Token(Token = "0x6000056")]
			[Address(RVA = "0x1019604", Offset = "0x1019604", VA = "0x1019604", Slot = "44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78898", Offset = "0xC78898")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000057")]
			[Address(RVA = "0x10196FC", Offset = "0x10196FC", VA = "0x10196FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788A8", Offset = "0xC788A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000014")]
		public Sight Sight
		{
			[Token(Token = "0x6000058")]
			[Address(RVA = "0x1019704", Offset = "0x1019704", VA = "0x1019704", Slot = "49")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788B8", Offset = "0xC788B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000059")]
			[Address(RVA = "0x101970C", Offset = "0x101970C", VA = "0x101970C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788C8", Offset = "0xC788C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000015")]
		public Memory Memory
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0x1019714", Offset = "0x1019714", VA = "0x1019714", Slot = "45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788D8", Offset = "0xC788D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600005B")]
			[Address(RVA = "0x101971C", Offset = "0x101971C", VA = "0x101971C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788E8", Offset = "0xC788E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000016")]
		public Hearing Hearing
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0x1019724", Offset = "0x1019724", VA = "0x1019724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC788F8", Offset = "0xC788F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600005D")]
			[Address(RVA = "0x101972C", Offset = "0x101972C", VA = "0x101972C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78908", Offset = "0xC78908")]
			private set
			{
			}
		}

		[Token(Token = "0x17000017")]
		public BotSpellCasting SpellCasting
		{
			[Token(Token = "0x600005E")]
			[Address(RVA = "0x1019734", Offset = "0x1019734", VA = "0x1019734", Slot = "46")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78918", Offset = "0xC78918")]
			get
			{
				return null;
			}
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x101973C", Offset = "0x101973C", VA = "0x101973C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78928", Offset = "0xC78928")]
			private set
			{
			}
		}

		[Token(Token = "0x17000018")]
		public bool Enabled
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0x1019744", Offset = "0x1019744", VA = "0x1019744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78938", Offset = "0xC78938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x101974C", Offset = "0x101974C", VA = "0x101974C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78948", Offset = "0xC78948")]
			set
			{
			}
		}

		[Token(Token = "0x17000019")]
		public float TeleportCost
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x1019758", Offset = "0x1019758", VA = "0x1019758", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78958", Offset = "0xC78958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000063")]
			[Address(RVA = "0x1019760", Offset = "0x1019760", VA = "0x1019760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78968", Offset = "0xC78968")]
			private set
			{
			}
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x1019214", Offset = "0x1019214", VA = "0x1019214")]
		public BotAI()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1019768", Offset = "0x1019768", VA = "0x1019768", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x101990C", Offset = "0x101990C", VA = "0x101990C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x10199EC", Offset = "0x10199EC", VA = "0x10199EC")]
		public void Initialize(BotControl botControl, BotCharacter character, Sight sight, Hearing hearing)
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1019F0C", Offset = "0x1019F0C", VA = "0x1019F0C")]
		public void RandomizeSpells()
		{
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x1019D74", Offset = "0x1019D74", VA = "0x1019D74")]
		private void SetSelectedDifficultyLevel(int level)
		{
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1019E20", Offset = "0x1019E20", VA = "0x1019E20")]
		private void LoadSpellPriority()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x101A160", Offset = "0x101A160", VA = "0x101A160")]
		private void SetBotDifficulty(float difficulty)
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x101A2EC", Offset = "0x101A2EC", VA = "0x101A2EC")]
		private void SetScalingDifficulty(int level, int rating)
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0x101A454", Offset = "0x101A454", VA = "0x101A454")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC78978", Offset = "0xC78978")]
		private void AddToDebugString(string s)
		{
		}

		[Token(Token = "0x600006D")]
		[Address(RVA = "0x101A458", Offset = "0x101A458", VA = "0x101A458")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC789B0", Offset = "0xC789B0")]
		private void PrintDebugString()
		{
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x101A45C", Offset = "0x101A45C", VA = "0x101A45C", Slot = "16")]
		public void AbortSpellCasting()
		{
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x101A51C", Offset = "0x101A51C", VA = "0x101A51C")]
		private bool IsPlayerDead()
		{
			return default(bool);
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x101A5A4", Offset = "0x101A5A4", VA = "0x101A5A4")]
		private void OnDamageTaken(Events.DamageTakenEvent eventData)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x101AD64", Offset = "0x101AD64", VA = "0x101AD64")]
		private void OnTeleportEnd(Events.TeleportEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x101AEB8", Offset = "0x101AEB8", VA = "0x101AEB8")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x101AF08", Offset = "0x101AF08", VA = "0x101AF08", Slot = "47")]
		public void TryTrackTileHit()
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x101AF40", Offset = "0x101AF40", VA = "0x101AF40", Slot = "6")]
		public void Teleport(BE_Action action)
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x101B020", Offset = "0x101B020", VA = "0x101B020")]
		private void CastSpell(SpellActionType spellActionType, BE_Action action)
		{
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0x101AF88", Offset = "0x101AF88", VA = "0x101AF88")]
		private void TryCastBackupSpell(BE_Action action)
		{
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x101B1C0", Offset = "0x101B1C0", VA = "0x101B1C0", Slot = "10")]
		public void PrimaryAttack(BE_Action action)
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x101B1D0", Offset = "0x101B1D0", VA = "0x101B1D0", Slot = "11")]
		public void SecondaryAttack(BE_Action action)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0x101B1E0", Offset = "0x101B1E0", VA = "0x101B1E0", Slot = "12")]
		public void Utility(BE_Action action)
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0x101B1F0", Offset = "0x101B1F0", VA = "0x101B1F0", Slot = "13")]
		public void Defend(BE_Action action)
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x101B2D0", Offset = "0x101B2D0", VA = "0x101B2D0", Slot = "7")]
		public void AvoidDamageAction(BE_Action action)
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x101B554", Offset = "0x101B554", VA = "0x101B554")]
		public void FacePlayer(BE_Action action)
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0x101B988", Offset = "0x101B988", VA = "0x101B988", Slot = "8")]
		public void AvoidDamageInstantly()
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x101BC10", Offset = "0x101BC10", VA = "0x101BC10", Slot = "14")]
		public void DefendInstantly()
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x101BC50", Offset = "0x101BC50", VA = "0x101BC50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC789E8", Offset = "0xC789E8")]
		private void DrawCoordinate(Vector3 pos, Color color)
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x101BFAC", Offset = "0x101BFAC", VA = "0x101BFAC")]
		public void TryFindHealth(BE_Action action)
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x101CBC0", Offset = "0x101CBC0", VA = "0x101CBC0")]
		private void ActivatePickup(PickupBase pickup)
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x101B090", Offset = "0x101B090", VA = "0x101B090")]
		private void DeactivatePickup()
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x101CEF0", Offset = "0x101CEF0", VA = "0x101CEF0")]
		private void StartTeleport()
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x101AD68", Offset = "0x101AD68", VA = "0x101AD68")]
		private void EndTeleport()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x101CF34", Offset = "0x101CF34", VA = "0x101CF34")]
		private void HandleAllOutBehaviour()
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x101D084", Offset = "0x101D084", VA = "0x101D084")]
		private void AdaptiveReactions()
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x101CEA0", Offset = "0x101CEA0", VA = "0x101CEA0", Slot = "36")]
		public bool TryTeleportToTile(Tile targetTile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x101B230", Offset = "0x101B230", VA = "0x101B230")]
		private bool CanTryToDefend()
		{
			return default(bool);
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x101D9D0", Offset = "0x101D9D0", VA = "0x101D9D0")]
		private void UpdateDefensiveSuccesRate()
		{
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x101DA14", Offset = "0x101DA14", VA = "0x101DA14", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x101DC30", Offset = "0x101DC30", VA = "0x101DC30")]
		public void ResetBot()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Casting
{
	[Token(Token = "0x2000012")]
	public class BotSpellCasting : MonoBehaviour
	{
		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Spell[] m_primarySpellTypes;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Spell[] m_secondarySpellTypes;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Spell[] m_utilitySpellTypes;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Spell[] m_defensiveSpellTypes;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Random m_rng;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AISpell[] m_currentSpells;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BotSpellEvents m_spellEvents;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78A60", Offset = "0xC78A60")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78A60", Offset = "0xC78A60")]
		private AISpell <ActiveSpell>k__BackingField;

		[Token(Token = "0x1700001A")]
		public AISpell ActiveSpell
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0x101A508", Offset = "0x101A508", VA = "0x101A508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78A9C", Offset = "0xC78A9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x101EA08", Offset = "0x101EA08", VA = "0x101EA08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78AAC", Offset = "0xC78AAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public AISpell[] Spells
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0x101A130", Offset = "0x101A130", VA = "0x101A130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0x101E9A0", Offset = "0x101E9A0", VA = "0x101E9A0")]
		public BotSpellCasting()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x101A10C", Offset = "0x101A10C", VA = "0x101A10C")]
		public void RandomizeSpells()
		{
		}

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x101EA10", Offset = "0x101EA10", VA = "0x101EA10")]
		private AISpell[] GetRandomSpells()
		{
			return null;
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x101EBE0", Offset = "0x101EBE0", VA = "0x101EBE0")]
		private AISpell[] GetInstantiatedSpells(Spell[] randomSpellTypes)
		{
			return null;
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x101ED68", Offset = "0x101ED68", VA = "0x101ED68")]
		private AISpell GetAISpellInstanceFromType(Spell spellType)
		{
			return null;
		}

		[Token(Token = "0x6000095")]
		private void Shuffle<T>(T[] spells)
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x101B0D0", Offset = "0x101B0D0", VA = "0x101B0D0")]
		public void CastAction(SpellActionType spellType, BE_Action action)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x101F43C", Offset = "0x101F43C", VA = "0x101F43C")]
		private void OnSpellPress(AISpell spell)
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x101F47C", Offset = "0x101F47C", VA = "0x101F47C")]
		private void OnSpellRelease(AISpell spell)
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x101B3A0", Offset = "0x101B3A0", VA = "0x101B3A0")]
		public void DefendInstantly()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x101BAA8", Offset = "0x101BAA8", VA = "0x101BAA8")]
		public void TeleportInstantly()
		{
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x101D854", Offset = "0x101D854", VA = "0x101D854")]
		public bool TryTeleportToTile(Tile targetTile)
		{
			return default(bool);
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x10201FC", Offset = "0x10201FC", VA = "0x10201FC")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000013")]
	public struct BotSpellEvents
	{
		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<AISpell> OnPress;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Action<AISpell> OnRelease;
	}
}
namespace Cortopia.Scripts.AI.Casting.Interfaces
{
	[Token(Token = "0x2000014")]
	public interface IBotCaster
	{
		[Token(Token = "0x1700001C")]
		BehaviourParams BehaviourParams
		{
			[Token(Token = "0x60000A8")]
			get;
		}

		[Token(Token = "0x1700001D")]
		TeleportHandler TeleportHandler
		{
			[Token(Token = "0x60000A9")]
			get;
		}

		[Token(Token = "0x1700001E")]
		WandManager Wand
		{
			[Token(Token = "0x60000AA")]
			get;
		}

		[Token(Token = "0x1700001F")]
		BotWandControl WandControl
		{
			[Token(Token = "0x60000AB")]
			get;
		}

		[Token(Token = "0x17000020")]
		Aim Aim
		{
			[Token(Token = "0x60000AC")]
			get;
		}

		[Token(Token = "0x17000021")]
		Tile CurrentTile
		{
			[Token(Token = "0x60000AD")]
			get;
		}

		[Token(Token = "0x17000022")]
		Tile HighlightedTile
		{
			[Token(Token = "0x60000AE")]
			get;
		}

		[Token(Token = "0x17000023")]
		SpellPriorities SpellPriority
		{
			[Token(Token = "0x60000AF")]
			get;
		}

		[Token(Token = "0x17000024")]
		BotTargeting Targeting
		{
			[Token(Token = "0x60000B0")]
			get;
		}

		[Token(Token = "0x17000025")]
		BotMovement BotMovement
		{
			[Token(Token = "0x60000B1")]
			get;
		}

		[Token(Token = "0x17000026")]
		Sight Sight
		{
			[Token(Token = "0x60000B2")]
			get;
		}

		[Token(Token = "0x17000027")]
		StatsDataManager StatsDataManager
		{
			[Token(Token = "0x60000B3")]
			get;
		}

		[Token(Token = "0x17000028")]
		Prediction Prediction
		{
			[Token(Token = "0x60000B4")]
			get;
		}

		[Token(Token = "0x17000029")]
		Memory Memory
		{
			[Token(Token = "0x60000B5")]
			get;
		}

		[Token(Token = "0x1700002A")]
		BotSpellCasting SpellCasting
		{
			[Token(Token = "0x60000B6")]
			get;
		}

		[Token(Token = "0x1700002B")]
		float TeleportCost
		{
			[Token(Token = "0x60000B7")]
			get;
		}

		[Token(Token = "0x1700002C")]
		bool IsCurrentTileInescapeable
		{
			[Token(Token = "0x60000B8")]
			get;
		}

		[Token(Token = "0x1700002D")]
		bool IsActivatingPickup
		{
			[Token(Token = "0x60000B9")]
			get;
		}

		[Token(Token = "0x1700002E")]
		PickupBase ActivePickup
		{
			[Token(Token = "0x60000BA")]
			get;
		}

		[Token(Token = "0x600009D")]
		void Teleport(BE_Action action);

		[Token(Token = "0x600009E")]
		void AvoidDamageAction(BE_Action action);

		[Token(Token = "0x600009F")]
		void AvoidDamageInstantly();

		[Token(Token = "0x60000A0")]
		bool TryTeleportToTile(Tile tile);

		[Token(Token = "0x60000A1")]
		void PrimaryAttack(BE_Action action);

		[Token(Token = "0x60000A2")]
		void SecondaryAttack(BE_Action action);

		[Token(Token = "0x60000A3")]
		void Utility(BE_Action action);

		[Token(Token = "0x60000A4")]
		void Defend(BE_Action action);

		[Token(Token = "0x60000A5")]
		void DefendInstantly();

		[Token(Token = "0x60000A6")]
		void TryTrackTileHit();

		[Token(Token = "0x60000A7")]
		void AbortSpellCasting();
	}
	[Token(Token = "0x2000015")]
	public interface IBotMover
	{
		[Token(Token = "0x1700002F")]
		BotTargeting Targeting
		{
			[Token(Token = "0x60000BC")]
			get;
		}

		[Token(Token = "0x17000030")]
		BotCharacter Character
		{
			[Token(Token = "0x60000BD")]
			get;
		}

		[Token(Token = "0x17000031")]
		Sight Sight
		{
			[Token(Token = "0x60000BE")]
			get;
		}

		[Token(Token = "0x17000032")]
		CharacterMovement CharacterMovement
		{
			[Token(Token = "0x60000BF")]
			get;
		}

		[Token(Token = "0x17000033")]
		StatsDataManager StatsDataManager
		{
			[Token(Token = "0x60000C0")]
			get;
		}

		[Token(Token = "0x17000034")]
		BehaviourParams BehaviourParams
		{
			[Token(Token = "0x60000C1")]
			get;
		}

		[Token(Token = "0x17000035")]
		BotMovement BotMovement
		{
			[Token(Token = "0x60000C2")]
			get;
		}

		[Token(Token = "0x17000036")]
		Prediction Prediction
		{
			[Token(Token = "0x60000C3")]
			get;
		}

		[Token(Token = "0x17000037")]
		Memory Memory
		{
			[Token(Token = "0x60000C4")]
			get;
		}

		[Token(Token = "0x17000038")]
		BotSpellCasting SpellCasting
		{
			[Token(Token = "0x60000C5")]
			get;
		}

		[Token(Token = "0x60000BB")]
		bool TryTeleportToTile(Tile targetTile);
	}
	[Token(Token = "0x2000016")]
	public interface IBotTargeter
	{
		[Token(Token = "0x17000039")]
		Aim Aim
		{
			[Token(Token = "0x60000C7")]
			get;
		}

		[Token(Token = "0x1700003A")]
		Sight Sight
		{
			[Token(Token = "0x60000C8")]
			get;
		}

		[Token(Token = "0x1700003B")]
		BotMovement BotMovement
		{
			[Token(Token = "0x60000C9")]
			get;
		}

		[Token(Token = "0x1700003C")]
		BotWandControl WandControl
		{
			[Token(Token = "0x60000CA")]
			get;
		}

		[Token(Token = "0x1700003D")]
		Tile HighlightedTile
		{
			[Token(Token = "0x60000CB")]
			get;
		}

		[Token(Token = "0x60000C6")]
		void TryTrackTileHit();
	}
}
namespace Cortopia.Scripts.AI.Casting
{
	[Token(Token = "0x2000017")]
	public enum SpellActionType
	{
		[Token(Token = "0x400008F")]
		Teleport,
		[Token(Token = "0x4000090")]
		Primary,
		[Token(Token = "0x4000091")]
		Secondary,
		[Token(Token = "0x4000092")]
		Utility,
		[Token(Token = "0x4000093")]
		Defensive
	}
}
namespace Cortopia.Scripts.AI.Casting.Spells
{
	[Token(Token = "0x2000018")]
	public abstract class AISpell
	{
		[Token(Token = "0x4000094")]
		protected const float DefaultRaycastLength = 30f;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IBotCaster m_caster;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected BotSpellEvents m_spellEvents;

		[Token(Token = "0x4000097")]
		private const int MinHoldTime = 50;

		[Token(Token = "0x4000098")]
		private const int MaxHoldTime = 300;

		[Token(Token = "0x1700003E")]
		public abstract Spell SpellType
		{
			[Token(Token = "0x60000CD")]
			get;
		}

		[Token(Token = "0x1700003F")]
		public SpellBase ActiveSpell
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0x1020310", Offset = "0x1020310", VA = "0x1020310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78ABC", Offset = "0xC78ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x10202D0", Offset = "0x10202D0", VA = "0x10202D0")]
		public AISpell(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000CF")]
		public abstract void CastAction(BE_Action action);

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x10203DC", Offset = "0x10203DC", VA = "0x10203DC")]
		protected void SelectSpellIfNeeded()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x10209C4", Offset = "0x10209C4", VA = "0x10209C4")]
		protected void SetCooldown(bool shouldActivate)
		{
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x1020B04", Offset = "0x1020B04", VA = "0x1020B04")]
		protected void SetCustomCooldown(float factor)
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x1020BFC", Offset = "0x1020BFC", VA = "0x1020BFC")]
		protected bool IsOnCooldown()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x1020CE8", Offset = "0x1020CE8", VA = "0x1020CE8")]
		protected void CastSpell()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1020D14", Offset = "0x1020D14", VA = "0x1020D14")]
		protected void ReleaseSpellAfterDelay()
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1020F00", Offset = "0x1020F00", VA = "0x1020F00", Slot = "6")]
		protected virtual void SpellPress()
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1021054", Offset = "0x1021054", VA = "0x1021054", Slot = "7")]
		protected virtual void SpellHold()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x102109C", Offset = "0x102109C", VA = "0x102109C", Slot = "8")]
		protected virtual void SpellRelease()
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1020214", Offset = "0x1020214", VA = "0x1020214")]
		public void Update()
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x101A510", Offset = "0x101A510", VA = "0x101A510")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1021268", Offset = "0x1021268", VA = "0x1021268")]
		protected bool IsTargetValid(BotAimTargetType targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1021648", Offset = "0x1021648", VA = "0x1021648")]
		protected void CastSpellOrTeleport(BE_Action action, Vector3 targetPos)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1021C1C", Offset = "0x1021C1C", VA = "0x1021C1C", Slot = "9")]
		protected virtual void CastSpellAfterAiming()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1021FA8", Offset = "0x1021FA8", VA = "0x1021FA8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC78ACC", Offset = "0xC78ACC")]
		protected void DrawCoordinate(Vector3 pos, Color color)
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1022304", Offset = "0x1022304", VA = "0x1022304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B04", Offset = "0xC78B04")]
		private void <ReleaseSpellAfterDelay>m__0(Task ta)
		{
		}
	}
	[Token(Token = "0x2000019")]
	public class BlazingMeteor : AISpell
	{
		[Token(Token = "0x4000099")]
		private const float BelowHeadTargetDistance = 0.1f;

		[Token(Token = "0x17000040")]
		public override Spell SpellType
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x1022310", Offset = "0x1022310", VA = "0x1022310", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B14", Offset = "0xC78B14")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x101EF98", Offset = "0x101EF98", VA = "0x101EF98")]
		public BlazingMeteor(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1022318", Offset = "0x1022318", VA = "0x1022318", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x200001A")]
	public class ChillingClutch : AISpell
	{
		[Token(Token = "0x400009A")]
		private const float BelowHeadTargetDistance = 0.1f;

		[Token(Token = "0x400009B")]
		private const float AimRadiusFactor = 0.8f;

		[Token(Token = "0x17000041")]
		public override Spell SpellType
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x10231F4", Offset = "0x10231F4", VA = "0x10231F4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B24", Offset = "0xC78B24")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x101EFD8", Offset = "0x101EFD8", VA = "0x101EFD8")]
		public ChillingClutch(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x10231FC", Offset = "0x10231FC", VA = "0x10231FC", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x200001B")]
	public abstract class Defensive : AISpell, IDefender
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_shieldDuration;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_currentShieldDuration;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_castCost;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_reactiveDuration;

		[Token(Token = "0x40000A0")]
		private const float PredictingIncomingProjectilesTime = 0.5f;

		[Token(Token = "0x40000A1")]
		private const float MinDefensiveCooldown = 0.1f;

		[Token(Token = "0x40000A2")]
		private const float DefensiveCooldownFactor = 0.25f;

		[Token(Token = "0x17000042")]
		protected abstract float MinDefenseDuration
		{
			[Token(Token = "0x60000E7")]
			get;
		}

		[Token(Token = "0x17000043")]
		protected abstract float CostReserveFactor
		{
			[Token(Token = "0x60000E8")]
			get;
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1023B10", Offset = "0x1023B10", VA = "0x1023B10")]
		public Defensive(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1023B50", Offset = "0x1023B50", VA = "0x1023B50", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x10243E8", Offset = "0x10243E8", VA = "0x10243E8")]
		private float GetReactiveDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x10244E8", Offset = "0x10244E8", VA = "0x10244E8")]
		private float GetCastCost()
		{
			return default(float);
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x10240AC", Offset = "0x10240AC", VA = "0x10240AC")]
		private bool CanAffordSpell(float margin = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x1024540", Offset = "0x1024540", VA = "0x1024540")]
		private void ActivateShield()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x1023F54", Offset = "0x1023F54", VA = "0x1023F54")]
		private float GetShieldDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1024624", Offset = "0x1024624", VA = "0x1024624")]
		private bool IsManaLow()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x102480C", Offset = "0x102480C", VA = "0x102480C")]
		private void UpdateDuration()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1024A50", Offset = "0x1024A50", VA = "0x1024A50")]
		private void Reset()
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1024A58", Offset = "0x1024A58", VA = "0x1024A58", Slot = "6")]
		protected override void SpellPress()
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1024A7C", Offset = "0x1024A7C", VA = "0x1024A7C", Slot = "7")]
		protected override void SpellHold()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1024AA0", Offset = "0x1024AA0", VA = "0x1024AA0", Slot = "8")]
		protected override void SpellRelease()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1024C64", Offset = "0x1024C64", VA = "0x1024C64", Slot = "13")]
		protected virtual bool CanUseDefensiveSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x1024E10", Offset = "0x1024E10", VA = "0x1024E10", Slot = "14")]
		public virtual void DefendInstantly()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public class Demi : AISpell
	{
		[Token(Token = "0x40000A3")]
		private const float BelowHeadTargetDistance = 0.1f;

		[Token(Token = "0x40000A4")]
		private const float AimRadiusFactor = 0.5f;

		[Token(Token = "0x17000044")]
		public override Spell SpellType
		{
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0x1024E64", Offset = "0x1024E64", VA = "0x1024E64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B34", Offset = "0xC78B34")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x101F018", Offset = "0x101F018", VA = "0x101F018")]
		public Demi(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x1024E6C", Offset = "0x1024E6C", VA = "0x1024E6C", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x200001D")]
	public class DevilsSpit : AISpell
	{
		[Token(Token = "0x40000A5")]
		private const int MaxIterations = 15;

		[Token(Token = "0x40000A6")]
		private const int MinIterations = 5;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] sm_trajectoryPoints;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2 sm_trajectoryCurveRotationOffset;

		[Token(Token = "0x17000045")]
		public override Spell SpellType
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x102577C", Offset = "0x102577C", VA = "0x102577C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B44", Offset = "0xC78B44")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x101F058", Offset = "0x101F058", VA = "0x101F058")]
		public DevilsSpit(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x1025784", Offset = "0x1025784", VA = "0x1025784", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x10264A0", Offset = "0x10264A0", VA = "0x10264A0", Slot = "9")]
		protected override void CastSpellAfterAiming()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x1026A84", Offset = "0x1026A84", VA = "0x1026A84")]
		private void SetTrajectoryPoints(Vector3 start, Vector3 mid, Vector3 end)
		{
		}
	}
	[Token(Token = "0x200001E")]
	public class ElectricFist : AISpell
	{
		[Token(Token = "0x40000A9")]
		private const float BelowHeadTargetDistance = 0.1f;

		[Token(Token = "0x40000AA")]
		private const float AimRadiusFactor = 0.7f;

		[Token(Token = "0x17000046")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x1026C5C", Offset = "0x1026C5C", VA = "0x1026C5C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B54", Offset = "0xC78B54")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x101F098", Offset = "0x101F098", VA = "0x101F098")]
		public ElectricFist(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x1026C64", Offset = "0x1026C64", VA = "0x1026C64", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class HeavenlyDome : Defensive
	{
		[Token(Token = "0x40000AB")]
		private const float DefaultCostReserveFactor = 5f;

		[Token(Token = "0x40000AC")]
		private const float DefaultMinDefenseDuration = 0.12f;

		[Token(Token = "0x17000047")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000104")]
			[Address(RVA = "0x1027578", Offset = "0x1027578", VA = "0x1027578", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B64", Offset = "0xC78B64")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x17000048")]
		protected override float MinDefenseDuration
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x1027580", Offset = "0x1027580", VA = "0x1027580", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B74", Offset = "0xC78B74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000049")]
		protected override float CostReserveFactor
		{
			[Token(Token = "0x6000106")]
			[Address(RVA = "0x102758C", Offset = "0x102758C", VA = "0x102758C", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B84", Offset = "0xC78B84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x101F0D8", Offset = "0x101F0D8", VA = "0x101F0D8")]
		public HeavenlyDome(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}
	}
	[Token(Token = "0x2000020")]
	public interface IDefender
	{
		[Token(Token = "0x6000107")]
		void DefendInstantly();
	}
	[Token(Token = "0x2000021")]
	public class MagicMissile : AISpell
	{
		[Token(Token = "0x40000AD")]
		private const float BelowHeadTargetDistance = 0.1f;

		[Token(Token = "0x40000AE")]
		private const float AimRadiusFactor = 0.7f;

		[Token(Token = "0x1700004A")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000109")]
			[Address(RVA = "0x1027594", Offset = "0x1027594", VA = "0x1027594", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78B94", Offset = "0xC78B94")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x101F118", Offset = "0x101F118", VA = "0x101F118")]
		public MagicMissile(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x102759C", Offset = "0x102759C", VA = "0x102759C", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x2000022")]
	public class ShieldOfLight : Defensive
	{
		[Token(Token = "0x40000AF")]
		private const float DefaultShieldCostReserveFactor = 5f;

		[Token(Token = "0x40000B0")]
		private const float DefaultMinDefenseDuration = 0.12f;

		[Token(Token = "0x40000B1")]
		private const int ProjectileAimDistance = 10;

		[Token(Token = "0x40000B2")]
		private const float ShieldAimDistance = 0.3f;

		[Token(Token = "0x1700004B")]
		public override Spell SpellType
		{
			[Token(Token = "0x600010C")]
			[Address(RVA = "0x1027EB0", Offset = "0x1027EB0", VA = "0x1027EB0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BA4", Offset = "0xC78BA4")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x1700004C")]
		protected override float MinDefenseDuration
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0x1027EB8", Offset = "0x1027EB8", VA = "0x1027EB8", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BB4", Offset = "0xC78BB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004D")]
		protected override float CostReserveFactor
		{
			[Token(Token = "0x600010E")]
			[Address(RVA = "0x1027EC4", Offset = "0x1027EC4", VA = "0x1027EC4", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BC4", Offset = "0xC78BC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x101F158", Offset = "0x101F158", VA = "0x101F158")]
		public ShieldOfLight(IBotCaster botCaster, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x1027ECC", Offset = "0x1027ECC", VA = "0x1027ECC", Slot = "6")]
		protected override void SpellPress()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x1028E98", Offset = "0x1028E98", VA = "0x1028E98", Slot = "9")]
		protected override void CastSpellAfterAiming()
		{
		}
	}
	[Token(Token = "0x2000023")]
	public class SkullSpecter : AISpell
	{
		[Token(Token = "0x40000B3")]
		private const float MaxAllowedWaitTime = 3f;

		[Token(Token = "0x40000B4")]
		private const float AimTime = 0.2f;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Tile> sm_availableTiles;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_playerOneLayer;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_currentTeleportColliders;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tile m_currentTile;

		[Token(Token = "0x1700004E")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000112")]
			[Address(RVA = "0x10290C8", Offset = "0x10290C8", VA = "0x10290C8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BD4", Offset = "0xC78BD4")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x101F198", Offset = "0x101F198", VA = "0x101F198")]
		public SkullSpecter(BotAI botAI, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x10290D0", Offset = "0x10290D0", VA = "0x10290D0", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x102A5F8", Offset = "0x102A5F8", VA = "0x102A5F8", Slot = "9")]
		protected override void CastSpellAfterAiming()
		{
		}
	}
	[Token(Token = "0x2000024")]
	public class SoilSpikes : AISpell
	{
		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComponentCollection<Tile> m_currentAvailableTiles;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] m_currentTeleportColliders;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tile m_currentTile;

		[Token(Token = "0x1700004F")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0x102A798", Offset = "0x102A798", VA = "0x102A798", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BE4", Offset = "0xC78BE4")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x101F22C", Offset = "0x101F22C", VA = "0x101F22C")]
		public SoilSpikes(BotAI botAI, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x102A7A0", Offset = "0x102A7A0", VA = "0x102A7A0", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}
	}
	[Token(Token = "0x2000025")]
	public class StoneDemon : AISpell
	{
		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_currentTeleportColliders;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tile m_currentTile;

		[Token(Token = "0x40000BE")]
		private const float MaxAllowedWaitTime = 3f;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Tile> sm_availableTiles;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_playerOneLayer;

		[Token(Token = "0x17000050")]
		public override Spell SpellType
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x102B9F4", Offset = "0x102B9F4", VA = "0x102B9F4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78BF4", Offset = "0xC78BF4")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x101F2EC", Offset = "0x101F2EC", VA = "0x101F2EC")]
		public StoneDemon(BotAI botAI, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x102B9FC", Offset = "0x102B9FC", VA = "0x102B9FC", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x102D214", Offset = "0x102D214", VA = "0x102D214", Slot = "9")]
		protected override void CastSpellAfterAiming()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x102CD3C", Offset = "0x102CD3C", VA = "0x102CD3C")]
		private bool HasActiveDemon()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000026")]
	public class Teleport : AISpell
	{
		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_currentVisibleTeleportColliders;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider m_currentTeleportCollider;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tile m_currentTile;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly HashSet<Tile> m_excludedTiles;

		[Token(Token = "0x17000051")]
		public override Spell SpellType
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x102D3B0", Offset = "0x102D3B0", VA = "0x102D3B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78C04", Offset = "0xC78C04")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x101F380", Offset = "0x101F380", VA = "0x101F380")]
		public Teleport(BotAI botAI, BotSpellEvents spellEvents)
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x102D3B8", Offset = "0x102D3B8", VA = "0x102D3B8")]
		private bool TryActivateTeleport(Vector3 validHandPosition, Vector3 targetColliderPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x102DAA8", Offset = "0x102DAA8", VA = "0x102DAA8", Slot = "9")]
		protected override void CastSpellAfterAiming()
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x102DE10", Offset = "0x102DE10", VA = "0x102DE10")]
		private bool TryAimAtAvailableTile(out Vector3 validHandPosition, out Vector3 targetColliderPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x102E9BC", Offset = "0x102E9BC", VA = "0x102E9BC", Slot = "5")]
		public override void CastAction(BE_Action action)
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x101F484", Offset = "0x101F484", VA = "0x101F484")]
		public void TeleportInstantly()
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x101F6C8", Offset = "0x101F6C8", VA = "0x101F6C8")]
		public bool TryTeleportToTile(Tile targetTile)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.AI.Memory
{
	[Token(Token = "0x2000027")]
	public class Memory : MonoBehaviour
	{
		[Token(Token = "0x40000C5")]
		public const int TileQueueCapacity = 8;

		[Token(Token = "0x40000C6")]
		public const int SpellQueueCapacity = 8;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<Tile> m_visitedTiles;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<SpellBase> m_spellQueue;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_lastOpponentDamageTime;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_lastDamageTime;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_damageTakenEventToken;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78C14", Offset = "0xC78C14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78C14", Offset = "0xC78C14")]
		private float <LastTeleportTime>k__BackingField;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78C50", Offset = "0xC78C50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78C50", Offset = "0xC78C50")]
		private SpellBase <MostRecentSpell>k__BackingField;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78C8C", Offset = "0xC78C8C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78C8C", Offset = "0xC78C8C")]
		private Tile <MostRecentOpponentTile>k__BackingField;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78CC8", Offset = "0xC78CC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78CC8", Offset = "0xC78CC8")]
		private Tile <PreferredTile>k__BackingField;

		[Token(Token = "0x17000052")]
		public float LastTeleportTime
		{
			[Token(Token = "0x6000128")]
			[Address(RVA = "0x1015A6C", Offset = "0x1015A6C", VA = "0x1015A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D04", Offset = "0xC78D04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000129")]
			[Address(RVA = "0x1015A74", Offset = "0x1015A74", VA = "0x1015A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D14", Offset = "0xC78D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public SpellBase MostRecentSpell
		{
			[Token(Token = "0x600012A")]
			[Address(RVA = "0x1015A7C", Offset = "0x1015A7C", VA = "0x1015A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D24", Offset = "0xC78D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600012B")]
			[Address(RVA = "0x1015A84", Offset = "0x1015A84", VA = "0x1015A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D34", Offset = "0xC78D34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public Tile MostRecentOpponentTile
		{
			[Token(Token = "0x600012C")]
			[Address(RVA = "0x1015A8C", Offset = "0x1015A8C", VA = "0x1015A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D44", Offset = "0xC78D44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600012D")]
			[Address(RVA = "0x1015A94", Offset = "0x1015A94", VA = "0x1015A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D54", Offset = "0xC78D54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public Tile PreferredTile
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0x1015A9C", Offset = "0x1015A9C", VA = "0x1015A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D64", Offset = "0xC78D64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x1015AA4", Offset = "0x1015AA4", VA = "0x1015AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D74", Offset = "0xC78D74")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Queue<SpellBase> SpellQueue
		{
			[Token(Token = "0x6000130")]
			[Address(RVA = "0x1015AAC", Offset = "0x1015AAC", VA = "0x1015AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D84", Offset = "0xC78D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x10159C0", Offset = "0x10159C0", VA = "0x10159C0")]
		public Memory()
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1015AB4", Offset = "0x1015AB4", VA = "0x1015AB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x1015B70", Offset = "0x1015B70", VA = "0x1015B70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x1015BF0", Offset = "0x1015BF0", VA = "0x1015BF0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x1015C88", Offset = "0x1015C88", VA = "0x1015C88")]
		private void OnDamageTaken(Events.DamageTakenEvent eventData)
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x1015DE8", Offset = "0x1015DE8", VA = "0x1015DE8")]
		public void RegisterOpponentTile(Tile tile)
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x1015DF0", Offset = "0x1015DF0", VA = "0x1015DF0")]
		public void RegisterTileVisited(Tile tile)
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x1015E58", Offset = "0x1015E58", VA = "0x1015E58")]
		public void RegisterSpellCast(SpellBase spell)
		{
		}

		[Token(Token = "0x6000138")]
		private void UpdateList<T>(T element, Queue<T> collection, int capacity)
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x1015EC4", Offset = "0x1015EC4", VA = "0x1015EC4")]
		public void RegisterOpponentDamage()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x1015EE8", Offset = "0x1015EE8", VA = "0x1015EE8")]
		public void RegisterDamage()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x1015F0C", Offset = "0x1015F0C", VA = "0x1015F0C")]
		public float GetDurationSinceOpponentDamaged()
		{
			return default(float);
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x1015F30", Offset = "0x1015F30", VA = "0x1015F30")]
		public float GetDurationSinceDamaged()
		{
			return default(float);
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x1015D64", Offset = "0x1015D64", VA = "0x1015D64")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x1015F54", Offset = "0x1015F54", VA = "0x1015F54")]
		public int GetSpellStacks(Spell spellType)
		{
			return default(int);
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x1016084", Offset = "0x1016084", VA = "0x1016084")]
		public bool IsAllowedToStackSpell(Spell spellType, int maxStacks)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.AI.Movement
{
	[Token(Token = "0x2000028")]
	public class BotMovement
	{
		[Token(Token = "0x40000D0")]
		private const float MaxDurationNotFacingPlayer = 5f;

		[Token(Token = "0x40000D1")]
		private const float RotationTargetDeltaTolerance = 2f;

		[Token(Token = "0x40000D2")]
		private const float HandOffsetTolerance = 0.01f;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ComponentCollection<Tile> m_currentAvailableTiles;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] m_currentTeleportColliders;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tile m_currentTile;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IBotMover m_botMover;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_rotationTarget;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_durationAwayFromPlayer;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78D94", Offset = "0xC78D94")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78D94", Offset = "0xC78D94")]
		private bool <HasRotationTarget>k__BackingField;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78DD0", Offset = "0xC78DD0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78DD0", Offset = "0xC78DD0")]
		private bool <ShouldFacePlayer>k__BackingField;

		[Token(Token = "0x17000057")]
		public bool HasRotationTarget
		{
			[Token(Token = "0x6000141")]
			[Address(RVA = "0x101CBFC", Offset = "0x101CBFC", VA = "0x101CBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78E0C", Offset = "0xC78E0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000142")]
			[Address(RVA = "0x102F000", Offset = "0x102F000", VA = "0x102F000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78E1C", Offset = "0xC78E1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public bool ShouldFacePlayer
		{
			[Token(Token = "0x6000143")]
			[Address(RVA = "0x102F00C", Offset = "0x102F00C", VA = "0x102F00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78E2C", Offset = "0xC78E2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000144")]
			[Address(RVA = "0x102F014", Offset = "0x102F014", VA = "0x102F014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78E3C", Offset = "0xC78E3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x1019CC8", Offset = "0x1019CC8", VA = "0x1019CC8")]
		public BotMovement(IBotMover botMover)
		{
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0x1028B60", Offset = "0x1028B60", VA = "0x1028B60")]
		public float GetHeadIKRotationThreshold()
		{
			return default(float);
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x101CC04", Offset = "0x101CC04", VA = "0x101CC04")]
		public void LookAtCollider(Collider targetCollider)
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x102F020", Offset = "0x102F020", VA = "0x102F020")]
		public Vector3 GetFacingDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x102F104", Offset = "0x102F104", VA = "0x102F104")]
		public Vector3 GetCharacterRootForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x102F200", Offset = "0x102F200", VA = "0x102F200")]
		public Quaternion GetCharacterRootRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x1028950", Offset = "0x1028950", VA = "0x1028950")]
		public float GetHeadRotationDeltaAngle(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x101B63C", Offset = "0x101B63C", VA = "0x101B63C")]
		public void FacePlayer()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1028C2C", Offset = "0x1028C2C", VA = "0x1028C2C")]
		public void FacePosition(Vector3 position)
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x101A71C", Offset = "0x101A71C", VA = "0x101A71C")]
		public void FaceAvailableTile()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x102E758", Offset = "0x102E758", VA = "0x102E758")]
		public void TurnAround()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x102F314", Offset = "0x102F314", VA = "0x102F314")]
		private float GetTargetRotationDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x101CA40", Offset = "0x101CA40", VA = "0x101CA40")]
		public bool IsLookingAtTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x102F47C", Offset = "0x102F47C", VA = "0x102F47C")]
		private bool IsLookingAtPosition(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x102F744", Offset = "0x102F744", VA = "0x102F744")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x101D238", Offset = "0x101D238", VA = "0x101D238")]
		public void MoveOutOfSightFrom(Tile avoidTile)
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x101DBB8", Offset = "0x101DBB8", VA = "0x101DBB8")]
		public void UpdateMovement()
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x102F8C8", Offset = "0x102F8C8", VA = "0x102F8C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC78E4C", Offset = "0xC78E4C")]
		private void DrawCoordinate(Vector3 pos, Color color)
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Params
{
	[Token(Token = "0x2000029")]
	public class BehaviourParams
	{
		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpellParams SpellParams;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MovementParams MovementParams;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecisionParams DecisionParams;

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x10192EC", Offset = "0x10192EC", VA = "0x10192EC")]
		public BehaviourParams()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x1019C28", Offset = "0x1019C28", VA = "0x1019C28")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class DecisionParams
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float m_cooldownDuration;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected float m_teleportCoolDownDuration;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsAvoidingDamage;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool HasReactedToSound;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78E84", Offset = "0xC78E84")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78E84", Offset = "0xC78E84")]
		private float <TeleportCooldownTime>k__BackingField;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78EC0", Offset = "0xC78EC0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78EC0", Offset = "0xC78EC0")]
		private float <ReactionToActionTime>k__BackingField;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78EFC", Offset = "0xC78EFC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC78EFC", Offset = "0xC78EFC")]
		private float <CooldownTime>k__BackingField;

		[Token(Token = "0x17000059")]
		public float TeleportCooldownTime
		{
			[Token(Token = "0x6000159")]
			[Address(RVA = "0x102FC3C", Offset = "0x102FC3C", VA = "0x102FC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F38", Offset = "0xC78F38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600015A")]
			[Address(RVA = "0x101A2E4", Offset = "0x101A2E4", VA = "0x101A2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F48", Offset = "0xC78F48")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public float ReactionToActionTime
		{
			[Token(Token = "0x600015B")]
			[Address(RVA = "0x102FC44", Offset = "0x102FC44", VA = "0x102FC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F58", Offset = "0xC78F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x101A2D4", Offset = "0x101A2D4", VA = "0x101A2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F68", Offset = "0xC78F68")]
			set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public float CooldownTime
		{
			[Token(Token = "0x600015D")]
			[Address(RVA = "0x1024C5C", Offset = "0x1024C5C", VA = "0x1024C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F78", Offset = "0xC78F78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x101A2DC", Offset = "0x101A2DC", VA = "0x101A2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F88", Offset = "0xC78F88")]
			set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x600015F")]
			[Address(RVA = "0x1020CD8", Offset = "0x1020CD8", VA = "0x1020CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78F98", Offset = "0xC78F98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public bool CanDoReactiveAction
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x1024DF8", Offset = "0x1024DF8", VA = "0x1024DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC78FA8", Offset = "0xC78FA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x102FC34", Offset = "0x102FC34", VA = "0x102FC34")]
		public DecisionParams()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x102EF54", Offset = "0x102EF54", VA = "0x102EF54")]
		public bool IsReadyToTeleport(bool urgentTeleport)
		{
			return default(bool);
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x1020AC4", Offset = "0x1020AC4", VA = "0x1020AC4")]
		public void SetCooldown(bool shouldActivate)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1020BEC", Offset = "0x1020BEC", VA = "0x1020BEC")]
		public void SetCustomCooldown(float factor)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x101CEF4", Offset = "0x101CEF4", VA = "0x101CEF4")]
		public void SetTeleportCooldown(bool shouldActivate)
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x101DB8C", Offset = "0x101DB8C", VA = "0x101DB8C")]
		public void UpdateCooldown(float deltaTime)
		{
		}
	}
	[Token(Token = "0x200002B")]
	public class MovementParams
	{
		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseRaisedHandPosition;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool HasHandPositionTarget;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool HasRotationTarget;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool ShouldFacePlayer;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsPreparingFire;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TurnInPlaceTimes;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandMovementDuration;

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x102FC2C", Offset = "0x102FC2C", VA = "0x102FC2C")]
		public MovementParams()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x101DD94", Offset = "0x101DD94", VA = "0x101DD94")]
		public void SetPreparingFire(bool setActive)
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class SpellParams
	{
		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool AllowedToDepleteMana;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsDefensiveSpellActive;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool UseUrgentTeleport;

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x102FC24", Offset = "0x102FC24", VA = "0x102FC24")]
		public SpellParams()
		{
		}
	}
	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xC78FB8", Offset = "0xC78FB8")]
	public class SpellPriorities : ScriptableObject
	{
		[Token(Token = "0x40000EF")]
		public const float Max = 1f;

		[Token(Token = "0x40000F0")]
		public const float Min = 0f;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC79028", Offset = "0xC79028")]
		[SerializeField]
		private float m_randomPriorityFactor;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79074", Offset = "0xC79074")]
		[SerializeField]
		private SpellPriority[] m_spellPriorities;

		[Token(Token = "0x1700005E")]
		public float RandomPriorityFactor
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0x103002C", Offset = "0x103002C", VA = "0x103002C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x102FC4C", Offset = "0x102FC4C", VA = "0x102FC4C")]
		public SpellPriorities()
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x1030034", Offset = "0x1030034", VA = "0x1030034")]
		private SpellPriority GetPriority(Spell spellType)
		{
			return default(SpellPriority);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x1030204", Offset = "0x1030204", VA = "0x1030204")]
		private float GetModifiedPriority(SpellPriority spellPriority, int stacks)
		{
			return default(float);
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x1022D58", Offset = "0x1022D58", VA = "0x1022D58")]
		public float GetModifiedPriorityForSpell(Spell spellType, int stacks)
		{
			return default(float);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x1022C28", Offset = "0x1022C28", VA = "0x1022C28")]
		public int GetMaxStackEntries(Spell spellType)
		{
			return default(int);
		}
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public struct SpellPriority
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly SpellPriority Invalid;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Spell m_spellType;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	private float m_priority;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private float m_decreasePerStack;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int m_maxStackEntries;

	[Token(Token = "0x1700005F")]
	public Spell SpellType
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xFAC8E8", Offset = "0xFAC8E8", VA = "0xFAC8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79100", Offset = "0xC79100")]
		get
		{
			return default(Spell);
		}
	}

	[Token(Token = "0x17000060")]
	public float Priority
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xFAC8F8", Offset = "0xFAC8F8", VA = "0xFAC8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79110", Offset = "0xC79110")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000061")]
	public float DecreasePerStack
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0xFAC908", Offset = "0xFAC908", VA = "0xFAC908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79120", Offset = "0xC79120")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000062")]
	public int MaxStackEntries
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0xFAC918", Offset = "0xFAC918", VA = "0xFAC918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79130", Offset = "0xC79130")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xFAC8D0", Offset = "0xFAC8D0", VA = "0xFAC8D0")]
	public SpellPriority(Spell type, float priority, float decreasePerStack, int maxStackEntries)
	{
	}
}
namespace Cortopia.AI.Predictions
{
	[Token(Token = "0x200002F")]
	public class Prediction : MonoBehaviour
	{
		[Token(Token = "0x40000F8")]
		private const int MaxPredictionIterations = 500;

		[Token(Token = "0x40000F9")]
		private const int TrajectoryResolution = 9;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayerMask m_botTrajectoryBlockMask;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_defencePredictionMaxDuration;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_timeSinceLasteDefensiveSpell;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_projectileCastEventToken;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_defensiveSpellCastEventToken;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_tilePredictedUnsafeEventToken;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_tilePredictedSafeEventToken;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_instantSpellInitiatedEventToken;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_instantSpellChargedEventToken;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_instantSpellReleasedEventToken;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_predictableCurverCastEventToken;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_collarsActivatedEventToken;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_collarsDeactivatedEventToken;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<TileHitPrediction> m_predictedTileHits;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Tile> m_tilesWithCollarsActive;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_secondsUntilImpact;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TileHitPrediction InstantSpellHitPrediction;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action<Tile> GetCurrentTile;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79150", Offset = "0xC79150")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79150", Offset = "0xC79150")]
		private readonly List<TileHitPrediction> <PredictedTileHits>k__BackingField;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7918C", Offset = "0xC7918C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7918C", Offset = "0xC7918C")]
		private Tile <AvoidTrajectoryFromTile>k__BackingField;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC791C8", Offset = "0xC791C8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC791C8", Offset = "0xC791C8")]
		private bool <PredictingDefence>k__BackingField;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79204", Offset = "0xC79204")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79204", Offset = "0xC79204")]
		private bool <PredictingInstantDamage>k__BackingField;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79240", Offset = "0xC79240")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79240", Offset = "0xC79240")]
		private TileHitPrediction <CurrentTileHitPrediction>k__BackingField;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7927C", Offset = "0xC7927C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7927C", Offset = "0xC7927C")]
		private HashSet<Tile> <UnsafeTiles>k__BackingField;

		[Token(Token = "0x17000063")]
		public List<TileHitPrediction> PredictedTileHits
		{
			[Token(Token = "0x6000176")]
			[Address(RVA = "0x101617C", Offset = "0x101617C", VA = "0x101617C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC792B8", Offset = "0xC792B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public Tile AvoidTrajectoryFromTile
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x1016184", Offset = "0x1016184", VA = "0x1016184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC792C8", Offset = "0xC792C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000178")]
			[Address(RVA = "0x101618C", Offset = "0x101618C", VA = "0x101618C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC792D8", Offset = "0xC792D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public bool PredictingDefence
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0x1016194", Offset = "0x1016194", VA = "0x1016194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC792E8", Offset = "0xC792E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600017A")]
			[Address(RVA = "0x101619C", Offset = "0x101619C", VA = "0x101619C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC792F8", Offset = "0xC792F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public bool PredictingInstantDamage
		{
			[Token(Token = "0x600017B")]
			[Address(RVA = "0x10161A8", Offset = "0x10161A8", VA = "0x10161A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79308", Offset = "0xC79308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x10161B0", Offset = "0x10161B0", VA = "0x10161B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79318", Offset = "0xC79318")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public TileHitPrediction CurrentTileHitPrediction
		{
			[Token(Token = "0x600017D")]
			[Address(RVA = "0x10161BC", Offset = "0x10161BC", VA = "0x10161BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79328", Offset = "0xC79328")]
			get
			{
				return default(TileHitPrediction);
			}
			[Token(Token = "0x600017E")]
			[Address(RVA = "0x10161D8", Offset = "0x10161D8", VA = "0x10161D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79338", Offset = "0xC79338")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public HashSet<Tile> UnsafeTiles
		{
			[Token(Token = "0x600017F")]
			[Address(RVA = "0x10161F0", Offset = "0x10161F0", VA = "0x10161F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79348", Offset = "0xC79348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000180")]
			[Address(RVA = "0x10161F8", Offset = "0x10161F8", VA = "0x10161F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79358", Offset = "0xC79358")]
			private set
			{
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x10160AC", Offset = "0x10160AC", VA = "0x10160AC")]
		public Prediction()
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x1016200", Offset = "0x1016200", VA = "0x1016200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x1016694", Offset = "0x1016694", VA = "0x1016694")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x10167E4", Offset = "0x10167E4", VA = "0x10167E4")]
		private void OnTilePredictedUnsafe(Events.TilePredictedUnsafeEvent eventData)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x101685C", Offset = "0x101685C", VA = "0x101685C")]
		private void OnTilePredictedSafe(Events.TilePredictedSafeEvent eventData)
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x10168D4", Offset = "0x10168D4", VA = "0x10168D4")]
		private void OnCollarsActivated(Events.CollarsActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1016994", Offset = "0x1016994", VA = "0x1016994")]
		private void OnCollarsDeactivated(Events.CollarsDeactivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1016A0C", Offset = "0x1016A0C", VA = "0x1016A0C")]
		private void OnDefensiveSpellCast(Events.DefensiveSpellCastEvent eventData)
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1016A2C", Offset = "0x1016A2C", VA = "0x1016A2C")]
		private void OnInstantSpellInitiated(Events.InstantSpellInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x1016A30", Offset = "0x1016A30", VA = "0x1016A30")]
		private void OnInstantSpellCharged(Events.InstantSpellChargedEvent eventData)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x1016E8C", Offset = "0x1016E8C", VA = "0x1016E8C")]
		private void OnInstantSpellReleased(Events.InstantSpellReleasedEvent eventData)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x1016E94", Offset = "0x1016E94", VA = "0x1016E94")]
		private void OnProjectileCast(Events.ProjectileCastEvent eventData)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1017660", Offset = "0x1017660", VA = "0x1017660")]
		private void OnPredictableCurverCast(Events.PredictableCurverCastEvent eventData)
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1016FB0", Offset = "0x1016FB0", VA = "0x1016FB0")]
		private void PredictTilesHit(Vector3[] vectors, float speed, float accelerationSpeed, float maxSpeed, float projectileRadius, float splashDamageRadius, bool returnToSender, ProjectileMover projectileMover)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x1017F04", Offset = "0x1017F04", VA = "0x1017F04")]
		private void UpdateDefencePrediction()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1016A1C", Offset = "0x1016A1C", VA = "0x1016A1C")]
		private void SetDefencePrediction(bool shouldPredictDefence)
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x1017F5C", Offset = "0x1017F5C", VA = "0x1017F5C")]
		public bool IsTrajectoryBlocked(Vector3[] arcPoints, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x10181EC", Offset = "0x10181EC", VA = "0x10181EC")]
		public bool IsTileUnsafe(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x1018258", Offset = "0x1018258", VA = "0x1018258")]
		public bool IsPredictingIncomingProjectile(float duration)
		{
			return default(bool);
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x10184BC", Offset = "0x10184BC", VA = "0x10184BC")]
		public float GetTimeUntilLastPredictedImpactOnCurrentTile(float withinDuration)
		{
			return default(float);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x10186EC", Offset = "0x10186EC", VA = "0x10186EC")]
		public bool IsTileSafe(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x101889C", Offset = "0x101889C", VA = "0x101889C")]
		public bool IsCollarsActiveOnTile(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1018908", Offset = "0x1018908", VA = "0x1018908")]
		public float GetSecondsUntilImpacFromLastPrediction()
		{
			return default(float);
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1016D20", Offset = "0x1016D20", VA = "0x1016D20")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1018910", Offset = "0x1018910", VA = "0x1018910")]
		private void FixedUpdate()
		{
		}
	}
	[Token(Token = "0x2000030")]
	public struct TileHitPrediction
	{
		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79388", Offset = "0xC79388")]
		private sealed class <TileHitPrediction>c__AnonStorey0
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ProjectileMover projecitleMover;

			[Token(Token = "0x600285A")]
			[Address(RVA = "0x1018ADC", Offset = "0x1018ADC", VA = "0x1018ADC")]
			public <TileHitPrediction>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600285B")]
			[Address(RVA = "0x1018B0C", Offset = "0x1018B0C", VA = "0x1018B0C")]
			internal bool <>m__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79398", Offset = "0xC79398")]
		private sealed class <TileHitPrediction>c__AnonStorey1
		{
			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IPredictableCurver predictableCurver;

			[Token(Token = "0x600285C")]
			[Address(RVA = "0x1018AF4", Offset = "0x1018AF4", VA = "0x1018AF4")]
			public <TileHitPrediction>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600285D")]
			[Address(RVA = "0x1018B38", Offset = "0x1018B38", VA = "0x1018B38")]
			internal bool <>m__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tile Tile;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float HitMatchTime;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Func<bool> IsProjectileMoving;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 ProjectileDirection;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79368", Offset = "0xC79368")]
		private static Func<bool> <>f__am$cache0;

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1018AE4", Offset = "0x1018AE4", VA = "0x1018AE4")]
		public TileHitPrediction(Tile tile, float hitMatchTime, Vector3 hitDirection, ProjectileMover projecitleMover)
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1018AEC", Offset = "0x1018AEC", VA = "0x1018AEC")]
		public TileHitPrediction(Tile tile, float hitMatchTime, Vector3 hitDirection)
		{
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1018AFC", Offset = "0x1018AFC", VA = "0x1018AFC")]
		public TileHitPrediction(Tile tile, float hitMatchTime, IPredictableCurver predictableCurver)
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x1018B04", Offset = "0x1018B04", VA = "0x1018B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79378", Offset = "0xC79378")]
		private static bool <TileHitPrediction>m__0()
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.AI
{
	[Token(Token = "0x2000031")]
	public enum BotDifficultyLevel
	{
		[Token(Token = "0x4000118")]
		NotSelected,
		[Token(Token = "0x4000119")]
		VeryEasy,
		[Token(Token = "0x400011A")]
		Easy,
		[Token(Token = "0x400011B")]
		Normal,
		[Token(Token = "0x400011C")]
		Hard,
		[Token(Token = "0x400011D")]
		Unfair,
		[Token(Token = "0x400011E")]
		Impossible
	}
	[Token(Token = "0x2000032")]
	public static class BotDifficultyUtils
	{
		[Token(Token = "0x2000033")]
		private struct Stats
		{
			[Token(Token = "0x4000122")]
			public const float MaxHealthDefault = 100f;

			[Token(Token = "0x4000123")]
			public const float MaxHealthUnfair = 200f;

			[Token(Token = "0x4000124")]
			public const float MaxHealthImpossible = 350f;

			[Token(Token = "0x4000125")]
			public const float MaxManaDefault = 100f;

			[Token(Token = "0x4000126")]
			public const float MaxManaUnfair = 200f;

			[Token(Token = "0x4000127")]
			public const float MaxManaImpossible = 350f;

			[Token(Token = "0x4000128")]
			public const float MaxRegenDefault = 17f;

			[Token(Token = "0x4000129")]
			public const float MaxRegenHard = 20f;

			[Token(Token = "0x400012A")]
			public const float MaxRegenUnfair = 30f;

			[Token(Token = "0x400012B")]
			public const float MaxRegenImpossible = 50f;
		}

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<BotDifficultyLevel, BotRating> sm_ratingChart;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject sm_selectedTooltip;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BotDifficultyLevel DifficultyLevel;

		[Token(Token = "0x17000069")]
		public static int Elo
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0x101DE64", Offset = "0x101DE64", VA = "0x101DE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC793A8", Offset = "0xC793A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700006A")]
		public static int Level
		{
			[Token(Token = "0x600019E")]
			[Address(RVA = "0x101DF54", Offset = "0x101DF54", VA = "0x101DF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC793B8", Offset = "0xC793B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700006B")]
		public static int SeasonScore
		{
			[Token(Token = "0x600019F")]
			[Address(RVA = "0x101E044", Offset = "0x101E044", VA = "0x101E044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC793C8", Offset = "0xC793C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x101E134", Offset = "0x101E134", VA = "0x101E134")]
		public static bool IsSelected(BotDifficultyLevel difficultyLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x101E1A8", Offset = "0x101E1A8", VA = "0x101E1A8")]
		public static void SetSelectedTooltip(GameObject tooltip)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x101E214", Offset = "0x101E214", VA = "0x101E214")]
		public static void LookEnter()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x101E290", Offset = "0x101E290", VA = "0x101E290")]
		public static void LookExit()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x101E30C", Offset = "0x101E30C", VA = "0x101E30C")]
		public static float GetMaxHealth()
		{
			return default(float);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x101E45C", Offset = "0x101E45C", VA = "0x101E45C")]
		public static Tuple<float, float> GetManaStats()
		{
			return null;
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x101E660", Offset = "0x101E660", VA = "0x101E660")]
		public static void TryUnlockReward()
		{
		}
	}
	[Token(Token = "0x2000034")]
	public class BotRating
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Elo;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Level;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SeasonScore;

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x101E960", Offset = "0x101E960", VA = "0x101E960")]
		public BotRating(int elo, int level, int seasonScore)
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Stats
{
	[Token(Token = "0x2000035")]
	public class StatsDataManager : MonoBehaviour
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatsManagementProfile m_stalkProfile;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StatsManagementProfile m_offensiveProfile;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StatsManagementProfile m_defensiveProfile;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StatsManagementProfileType CurrentProfileType;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79408", Offset = "0xC79408")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79408", Offset = "0xC79408")]
		private StatsManagementProfile <CurrentProfile>k__BackingField;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StatsData m_health;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StatsData m_mana;

		[Token(Token = "0x1700006C")]
		public StatsManagementProfile CurrentProfile
		{
			[Token(Token = "0x60001AA")]
			[Address(RVA = "0x101D07C", Offset = "0x101D07C", VA = "0x101D07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79444", Offset = "0xC79444")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001AB")]
			[Address(RVA = "0x10302E4", Offset = "0x10302E4", VA = "0x10302E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79454", Offset = "0xC79454")]
			private set
			{
			}
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x10302DC", Offset = "0x10302DC", VA = "0x10302DC")]
		public StatsDataManager()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x10302EC", Offset = "0x10302EC", VA = "0x10302EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x1018CC8", Offset = "0x1018CC8", VA = "0x1018CC8")]
		public void ChangeProfile(StatsManagementProfileType newProfile)
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x1022D94", Offset = "0x1022D94", VA = "0x1022D94")]
		public bool AllowedToCast(SpellBase spell, float priority, bool allowedToDepleteMana)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x1019168", Offset = "0x1019168", VA = "0x1019168")]
		public float GetCurrentHealthFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x10191BC", Offset = "0x10191BC", VA = "0x10191BC")]
		public float GetCurrentManaFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x1019194", Offset = "0x1019194", VA = "0x1019194")]
		public float GetCurrentHealth()
		{
			return default(float);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x10191E8", Offset = "0x10191E8", VA = "0x10191E8")]
		public float GetCurrentMana()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000036")]
	public class StatsManagementProfile
	{
		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatsManagementProfileType StatsManagementProfileType;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxManaReserveTarget;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float NormalManaReserveTarget;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinManaReserveTarget;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseAllOutAttack;

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x10303A0", Offset = "0x10303A0", VA = "0x10303A0")]
		public StatsManagementProfile()
		{
		}
	}
	[Token(Token = "0x2000037")]
	public enum StatsManagementProfileType
	{
		[Token(Token = "0x400013C")]
		Stalk,
		[Token(Token = "0x400013D")]
		Offensive,
		[Token(Token = "0x400013E")]
		Defensive
	}
}
namespace Cortopia.Scripts.AI.Targeting
{
	[Token(Token = "0x2000038")]
	public enum AimResult
	{
		[Token(Token = "0x4000140")]
		NonValidTrajectory,
		[Token(Token = "0x4000141")]
		NonValidSightray,
		[Token(Token = "0x4000142")]
		Success
	}
	[Token(Token = "0x2000039")]
	public struct BotAimTarget
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tile FromTile;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Time;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BotAimTargetType TargetType;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Ray AimRay;

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x10303F8", Offset = "0x10303F8", VA = "0x10303F8")]
		public BotAimTarget(Tile fromTile, BotAimTargetType targetType, Ray aimRay)
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x10305E8", Offset = "0x10305E8", VA = "0x10305E8")]
		public bool IsEqual(BotAimTarget otherAimTarget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200003A")]
	public enum BotAimTargetType
	{
		[Token(Token = "0x4000148")]
		Offensive,
		[Token(Token = "0x4000149")]
		Defensive,
		[Token(Token = "0x400014A")]
		Pickup,
		[Token(Token = "0x400014B")]
		Teleport
	}
	[Token(Token = "0x200003B")]
	public class BotTargeting
	{
		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC795C4", Offset = "0xC795C4")]
		private sealed class <AimAtPosition>c__AnonStorey0
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action onAimedAtPosition;

			[Token(Token = "0x600285E")]
			[Address(RVA = "0x10315B0", Offset = "0x10315B0", VA = "0x10315B0")]
			public <AimAtPosition>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600285F")]
			[Address(RVA = "0x1031BBC", Offset = "0x1031BBC", VA = "0x1031BBC")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x400014C")]
		private const float AimAccuracyTolerance = 1.2f;

		[Token(Token = "0x400014D")]
		private const float AimTargetRadius = 2f;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IBotTargeter m_botTargeter;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_validationDuration;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_currentAimOffsetPosition;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] sm_aimOffsetPositions;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3? m_wandOffset;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79464", Offset = "0xC79464")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79464", Offset = "0xC79464")]
		private BotAimTarget <AimTarget>k__BackingField;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC794A0", Offset = "0xC794A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC794A0", Offset = "0xC794A0")]
		private readonly float <Accuracy>k__BackingField;

		[Token(Token = "0x1700006D")]
		private Vector3 WandOffset
		{
			[Token(Token = "0x60001B7")]
			[Address(RVA = "0x1030628", Offset = "0x1030628", VA = "0x1030628")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700006E")]
		public BotAimTarget AimTarget
		{
			[Token(Token = "0x60001B8")]
			[Address(RVA = "0x1021500", Offset = "0x1021500", VA = "0x1021500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC794DC", Offset = "0xC794DC")]
			get
			{
				return default(BotAimTarget);
			}
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0x1030888", Offset = "0x1030888", VA = "0x1030888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC794EC", Offset = "0xC794EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float Accuracy
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x1020EF8", Offset = "0x1020EF8", VA = "0x1020EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC794FC", Offset = "0xC794FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000070")]
		public float ElapsedTimeSinceTargetChange
		{
			[Token(Token = "0x60001BB")]
			[Address(RVA = "0x102A584", Offset = "0x102A584", VA = "0x102A584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7950C", Offset = "0xC7950C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1019EC0", Offset = "0x1019EC0", VA = "0x1019EC0")]
		public BotTargeting(IBotTargeter botTargeter, float accuracy, float validationDuration)
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x1021F94", Offset = "0x1021F94", VA = "0x1021F94")]
		public void SetAimTarget(BotAimTarget aimTarget)
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x101A6E0", Offset = "0x101A6E0", VA = "0x101A6E0")]
		public bool HasValidAimTarget(Tile fromTile)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x102151C", Offset = "0x102151C", VA = "0x102151C")]
		public bool HasValidAimTarget(Tile fromTile, BotAimTarget aimTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1022F94", Offset = "0x1022F94", VA = "0x1022F94")]
		public Vector3 GetModifiedTargetPosition(Vector3 targetPos, float aimRadiusFactor = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1022E7C", Offset = "0x1022E7C", VA = "0x1022E7C")]
		public Vector3 GetTargetHeadPosition(float belowHeadDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x102A3C8", Offset = "0x102A3C8", VA = "0x102A3C8")]
		public AimResult GetHasValidTrajectoryToCollider(Collider targetCollider, out Vector3 validHandPosition, out Vector3 targetColliderPosition)
		{
			return default(AimResult);
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x103089C", Offset = "0x103089C", VA = "0x103089C")]
		public bool GetHasValidTrajectory(Vector3 targetPos, bool useTileTracking, out Vector3 validHandPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1021AA8", Offset = "0x1021AA8", VA = "0x1021AA8")]
		public bool GetHasValidTrajectory(Vector3 targetPos, float radius, out Vector3 validHandPosition, float aimOffsetTolerance = 1.2f)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x10308B0", Offset = "0x10308B0", VA = "0x10308B0")]
		private bool GetHasValidTrajectory(Vector3 targetPosition, float radius, float aimOffsetTolerance, bool useTileTracking, out Vector3 validHandPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x1021AB8", Offset = "0x1021AB8", VA = "0x1021AB8")]
		public void AimAtPosition(Vector3 handPosition, Vector3 aimTarget, float duration, Action onAimedAtPosition)
		{
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1030CAC", Offset = "0x1030CAC", VA = "0x1030CAC")]
		private bool GetIsHighlightingTile(Vector3 fromPosition, Vector3 targetPosition, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x10311B0", Offset = "0x10311B0", VA = "0x10311B0")]
		private bool GetHasValidTrajectory(Vector3 fromPosition, Vector3 targetPosition, float radius, float minTargetDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1031994", Offset = "0x1031994", VA = "0x1031994")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC7951C", Offset = "0xC7951C")]
		private void DrawUntestedCoordinatesAndFinalAim(Vector3 targetPosition, Vector3 validHandPosition)
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1031998", Offset = "0x1031998", VA = "0x1031998")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC79554", Offset = "0xC79554")]
		private void DrawCoordinate(Vector3 pos, Color color)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x103199C", Offset = "0x103199C", VA = "0x103199C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC7958C", Offset = "0xC7958C")]
		private void DrawCoordinate(Vector3 pos, Color color, float duration)
		{
		}
	}
	[Token(Token = "0x200003C")]
	public struct BotTileTarget
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tile FromTile;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Time;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BotAimTargetType TargetType;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tile Tile;

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x1031C2C", Offset = "0x1031C2C", VA = "0x1031C2C")]
		public BotTileTarget(Tile fromTile, float time, BotAimTargetType targetType, Tile tile)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1031D2C", Offset = "0x1031D2C", VA = "0x1031D2C")]
		public bool IsEqual(BotTileTarget otherTileTarget)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.Aiming
{
	[Token(Token = "0x200003D")]
	public class Aim
	{
		[Token(Token = "0x4000159")]
		protected const float StandardAimLength = 1.2f;

		[Token(Token = "0x400015A")]
		protected const float OriginForwardHead = 0.75f;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AimData m_aimData;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AimInput m_aimInput;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC795D4", Offset = "0xC795D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC795D4", Offset = "0xC795D4")]
		private LayerMask <AimHitMask>k__BackingField;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79610", Offset = "0xC79610")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79610", Offset = "0xC79610")]
		private Transform <AimPivot>k__BackingField;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7964C", Offset = "0xC7964C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7964C", Offset = "0xC7964C")]
		private Transform <WandPivot>k__BackingField;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79688", Offset = "0xC79688")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79688", Offset = "0xC79688")]
		private float <AimDistance>k__BackingField;

		[Token(Token = "0x17000071")]
		public LayerMask AimHitMask
		{
			[Token(Token = "0x60001CF")]
			[Address(RVA = "0x1031DA8", Offset = "0x1031DA8", VA = "0x1031DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC796C4", Offset = "0xC796C4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60001D0")]
			[Address(RVA = "0x1031DA0", Offset = "0x1031DA0", VA = "0x1031DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC796D4", Offset = "0xC796D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public Transform AimPivot
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0x1026A7C", Offset = "0x1026A7C", VA = "0x1026A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC796E4", Offset = "0xC796E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x1031DB0", Offset = "0x1031DB0", VA = "0x1031DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC796F4", Offset = "0xC796F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public Transform WandPivot
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0x1031DB8", Offset = "0x1031DB8", VA = "0x1031DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79704", Offset = "0xC79704")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x1031DC0", Offset = "0x1031DC0", VA = "0x1031DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79714", Offset = "0xC79714")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float AimDistance
		{
			[Token(Token = "0x60001D5")]
			[Address(RVA = "0x1031DC8", Offset = "0x1031DC8", VA = "0x1031DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79724", Offset = "0xC79724")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60001D6")]
			[Address(RVA = "0x1031DD0", Offset = "0x1031DD0", VA = "0x1031DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79734", Offset = "0xC79734")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Ray AimRay
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0x1021E54", Offset = "0x1021E54", VA = "0x1021E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79744", Offset = "0xC79744")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1031D64", Offset = "0x1031D64", VA = "0x1031D64")]
		public Aim(AimData data)
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1031DD8", Offset = "0x1031DD8", VA = "0x1031DD8")]
		public void SetPivotTransforms(Transform aimPivot, Transform wandPivot)
		{
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1031EA8", Offset = "0x1031EA8", VA = "0x1031EA8", Slot = "4")]
		public virtual Vector3 GetAimOrigin(float offset = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1031888", Offset = "0x1031888", VA = "0x1031888")]
		public void SetAimDistance(Vector3 endPoint)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x102B8B4", Offset = "0x102B8B4", VA = "0x102B8B4")]
		public void AimAtPosition(Vector3 newAimPosition)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x10315B8", Offset = "0x10315B8", VA = "0x10315B8")]
		public void AimAtPosition(Vector3 newAimPosition, float duration, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1031848", Offset = "0x1031848", VA = "0x1031848")]
		public Vector3 GetHitPointOrClosest(float collisionRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1031728", Offset = "0x1031728", VA = "0x1031728")]
		public Vector3 GetHitPointOrClosest(float collisionRadius, float maxDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1031F00", Offset = "0x1031F00", VA = "0x1031F00")]
		public bool RaycastTeleportTile(out RaycastHit hit)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Animation
{
	[Token(Token = "0x200003E")]
	public class AnimationConstants
	{
		[Token(Token = "0x4000161")]
		public const string Hit = "Hit";

		[Token(Token = "0x4000162")]
		public const string NewAttack = "NewAttack";

		[Token(Token = "0x4000163")]
		public const string IsChanneling = "isChannelling";

		[Token(Token = "0x4000164")]
		public const string IsDead = "isDead";

		[Token(Token = "0x4000165")]
		public const string IsMirrored = "isMirrored";

		[Token(Token = "0x4000166")]
		public const string InLobby = "inLobby";

		[Token(Token = "0x4000167")]
		public const string HitDirectionX = "HitDirectionX";

		[Token(Token = "0x4000168")]
		public const string HitDirectionY = "HitDirectionY";

		[Token(Token = "0x4000169")]
		public const string AttackAnimation = "AttackAnimation";

		[Token(Token = "0x400016A")]
		public const string ChannelAnimation = "ChannelAnimation";

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xF03B24", Offset = "0xF03B24", VA = "0xF03B24")]
		public AnimationConstants()
		{
		}
	}
	[Token(Token = "0x200003F")]
	public class AnimationNetworkRelay : MonoBehaviourPun
	{
		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79754", Offset = "0xC79754")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79754", Offset = "0xC79754")]
		private Wielder <Wielder>k__BackingField;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79790", Offset = "0xC79790")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79790", Offset = "0xC79790")]
		private CustomAnimationController <CustomAnimationController>k__BackingField;

		[Token(Token = "0x17000076")]
		public Wielder Wielder
		{
			[Token(Token = "0x60001E2")]
			[Address(RVA = "0xF03B34", Offset = "0xF03B34", VA = "0xF03B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC797CC", Offset = "0xC797CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0xF03B3C", Offset = "0xF03B3C", VA = "0xF03B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC797DC", Offset = "0xC797DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public CustomAnimationController CustomAnimationController
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0xF03B44", Offset = "0xF03B44", VA = "0xF03B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC797EC", Offset = "0xC797EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0xF03B4C", Offset = "0xF03B4C", VA = "0xF03B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC797FC", Offset = "0xC797FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		private RpcTarget RPCTarget
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0xF03B54", Offset = "0xF03B54", VA = "0xF03B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7980C", Offset = "0xC7980C")]
			get
			{
				return default(RpcTarget);
			}
		}

		[Token(Token = "0x17000079")]
		private bool PlayForAll
		{
			[Token(Token = "0x60001E7")]
			[Address(RVA = "0xF03B8C", Offset = "0xF03B8C", VA = "0xF03B8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xF03B2C", Offset = "0xF03B2C", VA = "0xF03B2C")]
		public AnimationNetworkRelay()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xF03BB8", Offset = "0xF03BB8", VA = "0xF03BB8")]
		public void PlayAttackAnimation(AttackAnimationType animationType)
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xF03CD8", Offset = "0xF03CD8", VA = "0xF03CD8")]
		[PunRPC]
		private void PunPlayAttackAnimation(int animationIndex)
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xF03DBC", Offset = "0xF03DBC", VA = "0xF03DBC")]
		public void PlayChannelingAnimation(ChannelAnimationType animationType)
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xF03F44", Offset = "0xF03F44", VA = "0xF03F44")]
		public void StopChannelingAnimation(ChannelAnimationType animationType)
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xF040C8", Offset = "0xF040C8", VA = "0xF040C8")]
		[PunRPC]
		private void PunPlayChannelingAnimation(bool isChanneling, int animationIndex)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xF041C4", Offset = "0xF041C4", VA = "0xF041C4")]
		public void PlayHitAnimation(Vector2 hitNormal)
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xF042F0", Offset = "0xF042F0", VA = "0xF042F0")]
		[PunRPC]
		private void PunPlayHitAnimation(Vector2 hitNormal)
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xF04444", Offset = "0xF04444", VA = "0xF04444")]
		public void SetDeadAnimationState(bool isDead)
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xF04568", Offset = "0xF04568", VA = "0xF04568")]
		[PunRPC]
		private void PunSetDeadAnimationState(bool isDead)
		{
		}
	}
	[Token(Token = "0x2000040")]
	public class AnimationSceneController : MonoBehaviour
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CustomAnimationController[] m_allAnimationsControllers;

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xF04634", Offset = "0xF04634", VA = "0xF04634")]
		public AnimationSceneController()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xF0463C", Offset = "0xF0463C", VA = "0xF0463C")]
		private void Start()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xF046B4", Offset = "0xF046B4", VA = "0xF046B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xF046D8", Offset = "0xF046D8", VA = "0xF046D8")]
		private void HandleMouseInput()
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xF0475C", Offset = "0xF0475C", VA = "0xF0475C")]
		private void HandleDebugInput()
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xF04D7C", Offset = "0xF04D7C", VA = "0xF04D7C")]
		private void Attack()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.Constraints
{
	[Token(Token = "0x2000041")]
	public class LerpConstraint : MonoBehaviour
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7985C", Offset = "0xC7985C")]
		[SerializeField]
		private Transform m_parentJoint;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_childJoint;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC798B8", Offset = "0xC798B8")]
		[SerializeField]
		private bool m_constrainPosition;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_keepPositionOffset;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_positionLerpStrength;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79924", Offset = "0xC79924")]
		[SerializeField]
		private bool m_constrainRotation;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_keepRotationOffset;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_rotationLerpStrength;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79990", Offset = "0xC79990")]
		[SerializeField]
		private bool m_constrainOnStart;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isConstrainActive;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_childRotationOffset;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_parentRotationOffset;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_deltaAngle;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_deltaDistance;

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1031FA0", Offset = "0x1031FA0", VA = "0x1031FA0")]
		public LerpConstraint()
		{
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1031FA8", Offset = "0x1031FA8", VA = "0x1031FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x10321D0", Offset = "0x10321D0", VA = "0x10321D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x1031FB8", Offset = "0x1031FB8", VA = "0x1031FB8")]
		public void ActivateConstraint()
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x103270C", Offset = "0x103270C", VA = "0x103270C")]
		public void DeactivateConstraint()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x10321E0", Offset = "0x10321E0", VA = "0x10321E0")]
		private void Constrain()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x10326CC", Offset = "0x10326CC", VA = "0x10326CC")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}
	}
}
namespace Assets.Scripts.Animation
{
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC799DC", Offset = "0xC799DC")]
	public class CustomAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterMovement m_characterMovement;

		[Token(Token = "0x1700007A")]
		public Animator Animator
		{
			[Token(Token = "0x60001FF")]
			[Address(RVA = "0xF050A4", Offset = "0xF050A4", VA = "0xF050A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xF051C4", Offset = "0xF051C4", VA = "0xF051C4")]
		public CustomAnimationController()
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0xF051CC", Offset = "0xF051CC", VA = "0xF051CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0xF04384", Offset = "0xF04384", VA = "0xF04384")]
		public void OnHit(Vector2 AttackDirection)
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0xF03CE8", Offset = "0xF03CE8", VA = "0xF03CE8")]
		public void OneShotAttackAnimation(int animationType)
		{
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xF040E4", Offset = "0xF040E4", VA = "0xF040E4")]
		public void ChannelAttackAnimation(int animationType, bool isChannelling)
		{
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0xF05034", Offset = "0xF05034", VA = "0xF05034")]
		public void DeathAnimationToggle()
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0xF0457C", Offset = "0xF0457C", VA = "0xF0457C")]
		public void DeathAnimationToggle(bool isDead)
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0xF050AC", Offset = "0xF050AC", VA = "0xF050AC")]
		public void MirrorAnimator(bool isMirrored)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xF05154", Offset = "0xF05154", VA = "0xF05154")]
		public void LobbyAnimationToggle()
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0xF05224", Offset = "0xF05224", VA = "0xF05224")]
		public void LobbyAnimationToggle(bool inLobby)
		{
		}
	}
	[Token(Token = "0x2000043")]
	public class DesertDoorAnimationState : StateMachineBehaviour
	{
		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplitAudioSoundPlayer[] m_audioPlayers;

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xF052CC", Offset = "0xF052CC", VA = "0xF052CC")]
		public DesertDoorAnimationState()
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xF052D4", Offset = "0xF052D4", VA = "0xF052D4")]
		public void OnDoorAnimationStart(Animator animator, float duration)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xF053DC", Offset = "0xF053DC", VA = "0xF053DC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x2000044")]
	public class FloatingObject : MonoBehaviour
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_amplitude;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_tempY;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_tempPos;

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xF05410", Offset = "0xF05410", VA = "0xF05410")]
		public FloatingObject()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xF05418", Offset = "0xF05418", VA = "0xF05418")]
		private void Start()
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0xF05460", Offset = "0xF05460", VA = "0xF05460")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC79A70", Offset = "0xC79A70")]
	public abstract class HandAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000187")]
		public const float WandGripMainAngle = 0f;

		[Token(Token = "0x4000188")]
		public const float PistolGripMainAngle = 0f;

		[Token(Token = "0x4000189")]
		protected const string IndexTrigger = "HandIndexFinger";

		[Token(Token = "0x400018A")]
		protected const string HandTrigger = "HandLongFinger";

		[Token(Token = "0x400018B")]
		protected const string ThumbButtons = "HandThumb";

		[Token(Token = "0x400018C")]
		protected const string WandGripTrigger = "WandGrip";

		[Token(Token = "0x400018D")]
		protected const string IndexClick = "HandActivate";

		[Token(Token = "0x400018E")]
		protected const string DefaultGrip = "DefaultGrip";

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AimInput m_hand;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform m_aimPoint;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_isPrimaryHand;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool m_isHoldingWand;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		protected bool m_isHoldingIndexTrigger;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		protected bool m_isHoldingHandTrigger;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_holdWeight;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator m_animator;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected PlayerControl m_playerControl;

		[Token(Token = "0x600020F")]
		[Address(RVA = "0xF05530", Offset = "0xF05530", VA = "0xF05530")]
		protected HandAnimator()
		{
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0xF05540", Offset = "0xF05540", VA = "0xF05540")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0xF055BC", Offset = "0xF055BC", VA = "0xF055BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0xF05604", Offset = "0xF05604", VA = "0xF05604")]
		public void SetPlayerReference(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0xF0560C", Offset = "0xF0560C", VA = "0xF0560C", Slot = "4")]
		public virtual void ChangePrimaryHand(AimInput aimInput, bool isDualWielding)
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0xF05760", Offset = "0xF05760", VA = "0xF05760", Slot = "5")]
		public virtual void ChangeWandGrip(WandGrip wandGrip)
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0xF05928", Offset = "0xF05928", VA = "0xF05928")]
		public void DisableWandGrip()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xF0597C", Offset = "0xF0597C", VA = "0xF0597C")]
		protected void TryEnableWandGrip()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xF05AB8", Offset = "0xF05AB8", VA = "0xF05AB8", Slot = "6")]
		protected virtual void TrackIndexTrigger()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xF05ABC", Offset = "0xF05ABC", VA = "0xF05ABC", Slot = "7")]
		protected virtual void TrackHandTrigger()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xF056F4", Offset = "0xF056F4", VA = "0xF056F4")]
		protected void SetAnimationBool(string boolName, bool value)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xF05A08", Offset = "0xF05A08", VA = "0xF05A08")]
		protected void SetAnimationTrigger(string triggerName)
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xF05A60", Offset = "0xF05A60", VA = "0xF05A60")]
		protected void ClearAnimationTrigger(string triggerName)
		{
		}
	}
	[Token(Token = "0x2000046")]
	public class OculusHandAnimator : HandAnimator
	{
		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRInput.RawButton m_indexTrigger;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private OVRInput.RawButton m_handTrigger;

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xF05AC0", Offset = "0xF05AC0", VA = "0xF05AC0")]
		public OculusHandAnimator()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xF05ADC", Offset = "0xF05ADC", VA = "0xF05ADC", Slot = "4")]
		public override void ChangePrimaryHand(AimInput aimInput, bool isDualWielding)
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xF05B48", Offset = "0xF05B48", VA = "0xF05B48", Slot = "6")]
		protected override void TrackIndexTrigger()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xF05D9C", Offset = "0xF05D9C", VA = "0xF05D9C", Slot = "7")]
		protected override void TrackHandTrigger()
		{
		}
	}
	[Token(Token = "0x2000047")]
	public class PicoHandAnimator : HandAnimator
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pvr_KeyCode m_indexTrigger;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Pvr_KeyCode m_handTrigger;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int Hand;

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xF05E64", Offset = "0xF05E64", VA = "0xF05E64")]
		public PicoHandAnimator()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xF05E88", Offset = "0xF05E88", VA = "0xF05E88", Slot = "4")]
		public override void ChangePrimaryHand(AimInput aimInput, bool isDualWielding)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0xF05EF0", Offset = "0xF05EF0", VA = "0xF05EF0", Slot = "6")]
		protected override void TrackIndexTrigger()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xF060E8", Offset = "0xF060E8", VA = "0xF060E8", Slot = "7")]
		protected override void TrackHandTrigger()
		{
		}
	}
	[Token(Token = "0x2000048")]
	public class PlayStationHandAnimator : HandAnimator
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xF06188", Offset = "0xF06188", VA = "0xF06188")]
		public PlayStationHandAnimator()
		{
		}
	}
}
[Token(Token = "0x2000049")]
public class RandomIdleSelector : StateMachineBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xC79AF4", Offset = "0xC79AF4")]
	public string Notes;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79B04", Offset = "0xC79B04")]
	public string BlendParameterName;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79B3C", Offset = "0xC79B3C")]
	public int IdleVariations;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79B74", Offset = "0xC79B74")]
	public float VariationChance;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC79BAC", Offset = "0xC79BAC")]
	public int MinLoops;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaxLoops;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _elapsedTime;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _currentLoop;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xFA282C", Offset = "0xFA282C", VA = "0xFA282C")]
	public RandomIdleSelector()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xFA2884", Offset = "0xFA2884", VA = "0xFA2884", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xFA28D0", Offset = "0xFA28D0", VA = "0xFA28D0", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xFA29F8", Offset = "0xFA29F8", VA = "0xFA29F8")]
	private float _selectRandomIdle()
	{
		return default(float);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xFA29DC", Offset = "0xFA29DC", VA = "0xFA29DC")]
	private int _getRandomVariation()
	{
		return default(int);
	}
}
namespace Assets.Scripts.Animation
{
	[Token(Token = "0x200004A")]
	public class SanctumGateAnimationListener : MonoBehaviour
	{
		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DoorHandler m_doorHandler;

		[Token(Token = "0x600022A")]
		[Address(RVA = "0xF06198", Offset = "0xF06198", VA = "0xF06198")]
		public SanctumGateAnimationListener()
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xF061A0", Offset = "0xF061A0", VA = "0xF061A0")]
		public void PlaySoundEffect(GateSoundClipType clipType)
		{
		}
	}
	[Token(Token = "0x200004B")]
	public class ViveHandAnimator : HandAnimator
	{
		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_wandGripOpenVrAngle;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_pistolGripOpenVrAngle;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SteamVR_Action_Boolean m_indexTrigger;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Action_Boolean m_handTrigger;

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xF0622C", Offset = "0xF0622C", VA = "0xF0622C")]
		public ViveHandAnimator()
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xF06248", Offset = "0xF06248", VA = "0xF06248", Slot = "4")]
		public override void ChangePrimaryHand(AimInput aimInput, bool isDualWielding)
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xF06354", Offset = "0xF06354", VA = "0xF06354", Slot = "5")]
		public override void ChangeWandGrip(WandGrip wandGrip)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xF0652C", Offset = "0xF0652C", VA = "0xF0652C", Slot = "6")]
		protected override void TrackIndexTrigger()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xF06770", Offset = "0xF06770", VA = "0xF06770", Slot = "7")]
		protected override void TrackHandTrigger()
		{
		}
	}
}
[Token(Token = "0x200004C")]
public class Bezier
{
	[Token(Token = "0x6000231")]
	[Address(RVA = "0xEF660C", Offset = "0xEF660C", VA = "0xEF660C")]
	public Bezier()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xEF6614", Offset = "0xEF6614", VA = "0xEF6614")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xEF67B8", Offset = "0xEF67B8", VA = "0xEF67B8")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xEF6934", Offset = "0xEF6934", VA = "0xEF6934")]
	public static Vector3 GetVelocity(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 currentPos, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xEF6A44", Offset = "0xEF6A44", VA = "0xEF6A44")]
	public static Vector3 GetDirection(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 currentPos, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xEF6AA0", Offset = "0xEF6AA0", VA = "0xEF6AA0")]
	public static float GetSimpleBezierLength(Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(float);
	}
}
[Token(Token = "0x200004D")]
public class BezierCurve : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] m_points;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xEF6B9C", Offset = "0xEF6B9C", VA = "0xEF6B9C")]
	public BezierCurve()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xEF6BA4", Offset = "0xEF6BA4", VA = "0xEF6BA4")]
	public void SetPoints(Vector3[] points)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xEF6C50", Offset = "0xEF6C50", VA = "0xEF6C50")]
	public void Reset()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xEF6D9C", Offset = "0xEF6D9C", VA = "0xEF6D9C")]
	public Vector3 GetCleanPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xEF6EA8", Offset = "0xEF6EA8", VA = "0xEF6EA8")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xEF6FF0", Offset = "0xEF6FF0", VA = "0xEF6FF0")]
	public float GetLength()
	{
		return default(float);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xEF70EC", Offset = "0xEF70EC", VA = "0xEF70EC")]
	public float GetLength(Vector3 currentPos, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xEF71AC", Offset = "0xEF71AC", VA = "0xEF71AC")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xEF739C", Offset = "0xEF739C", VA = "0xEF739C")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200004E")]
public abstract class BezierFollower : MonoBehaviourPun
{
	[Token(Token = "0x40001AB")]
	public const float StepLength = 0.1f;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly Vector3[] m_moveVectors;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3[] m_originalMoveVectors;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79C14", Offset = "0xC79C14")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79C14", Offset = "0xC79C14")]
	private float <BezierLength>k__BackingField;

	[Token(Token = "0x1700007B")]
	public float BezierLength
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xEF7438", Offset = "0xEF7438", VA = "0xEF7438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79C50", Offset = "0xC79C50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xEF7440", Offset = "0xEF7440", VA = "0xEF7440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79C60", Offset = "0xC79C60")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	protected Vector3 P0
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xEF7448", Offset = "0xEF7448", VA = "0xEF7448")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007D")]
	protected Vector3 P1
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xEF7488", Offset = "0xEF7488", VA = "0xEF7488")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007E")]
	protected Vector3 P2
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xEF74CC", Offset = "0xEF74CC", VA = "0xEF74CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007F")]
	public Vector3[] Points
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xEF7510", Offset = "0xEF7510", VA = "0xEF7510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xEF73CC", Offset = "0xEF73CC", VA = "0xEF73CC")]
	protected BezierFollower()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xEF7518", Offset = "0xEF7518", VA = "0xEF7518")]
	public void SetBezierPointsAndLength(params Vector3[] moveVectors)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xEF7780", Offset = "0xEF7780", VA = "0xEF7780")]
	private void SetBezierPointsAndLength(Vector3 p0, Vector3 p1, Vector3 p2)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xEF7960", Offset = "0xEF7960", VA = "0xEF7960")]
	public void ResetBezierCurve(Vector3 forward)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xEF7B08", Offset = "0xEF7B08", VA = "0xEF7B08")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xEF7BA4", Offset = "0xEF7BA4", VA = "0xEF7BA4")]
	public float GetLength(Vector3 currentPos, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xEF7C64", Offset = "0xEF7C64", VA = "0xEF7C64")]
	public Vector3 GetVelocity(Vector3 currentPos, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xEF7D7C", Offset = "0xEF7D7C", VA = "0xEF7D7C")]
	public Vector3 GetDirection(Vector3 currentPos, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200004F")]
public class CacheAnimator : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform idlePos;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform openPos;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cachePos;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem cacheFx;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string season;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool activated;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x100E44C", Offset = "0x100E44C", VA = "0x100E44C")]
	public CacheAnimator()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x100E454", Offset = "0x100E454", VA = "0x100E454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x100E7E8", Offset = "0x100E7E8", VA = "0x100E7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x100EA18", Offset = "0x100EA18", VA = "0x100EA18")]
	private void OnMouseDown()
	{
	}
}
namespace Cortopia.Scripts.CortopiaAttributes
{
	[Token(Token = "0x2000050")]
	public class MinSizeAttribute : CortopiaAttribute
	{
		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79C80", Offset = "0xC79C80")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79C80", Offset = "0xC79C80")]
		private int <Size>k__BackingField;

		[Token(Token = "0x17000080")]
		public int Size
		{
			[Token(Token = "0x6000253")]
			[Address(RVA = "0x1032748", Offset = "0x1032748", VA = "0x1032748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79CBC", Offset = "0xC79CBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000254")]
			[Address(RVA = "0x1032740", Offset = "0x1032740", VA = "0x1032740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79CCC", Offset = "0xC79CCC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x1032714", Offset = "0x1032714", VA = "0x1032714")]
		public MinSizeAttribute(int size)
		{
		}
	}
}
namespace Assets.Scripts.CustomEvents
{
	[Token(Token = "0x2000051")]
	public class CustomEvent
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<CustomEventSpecialSettings, string> SpecialSettings;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CustomEventElo m_customEventElo;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<CustomEvent> m_claimCallback;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isAvailableForCurrentUser;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Dictionary<Language, string> Name;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Dictionary<Language, string> Description;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly int Id;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly DateTime StartDate;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly DateTime EndDate;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsRanked;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79CDC", Offset = "0xC79CDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79CDC", Offset = "0xC79CDC")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79D18", Offset = "0xC79D18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79D18", Offset = "0xC79D18")]
		private bool <IsUpcoming>k__BackingField;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79D54", Offset = "0xC79D54")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79D54", Offset = "0xC79D54")]
		private bool <IsPlayerEligibleForReward>k__BackingField;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79D90", Offset = "0xC79D90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79D90", Offset = "0xC79D90")]
		private string <RewardCode>k__BackingField;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79DCC", Offset = "0xC79DCC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79DCC", Offset = "0xC79DCC")]
		private string <Url>k__BackingField;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79E08", Offset = "0xC79E08")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79E08", Offset = "0xC79E08")]
		private bool <RewardClaimed>k__BackingField;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79E44", Offset = "0xC79E44")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79E44", Offset = "0xC79E44")]
		private List<CustomEventReward> <Rewards>k__BackingField;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79E80", Offset = "0xC79E80")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC79E80", Offset = "0xC79E80")]
		private List<Dictionary<Language, CustomEventReward>> <RealRewards>k__BackingField;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<CustomEvent, bool> OnIsEligibleForReward;

		[Token(Token = "0x17000081")]
		public bool IsActive
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0xF07474", Offset = "0xF07474", VA = "0xF07474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79EBC", Offset = "0xC79EBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000257")]
			[Address(RVA = "0xF079F4", Offset = "0xF079F4", VA = "0xF079F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79ECC", Offset = "0xC79ECC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public bool IsUpcoming
		{
			[Token(Token = "0x6000258")]
			[Address(RVA = "0xF0747C", Offset = "0xF0747C", VA = "0xF0747C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79EDC", Offset = "0xC79EDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000259")]
			[Address(RVA = "0xF07A00", Offset = "0xF07A00", VA = "0xF07A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79EEC", Offset = "0xC79EEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public bool IsAvailableForCurrentUser
		{
			[Token(Token = "0x600025A")]
			[Address(RVA = "0xF07A0C", Offset = "0xF07A0C", VA = "0xF07A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79EFC", Offset = "0xC79EFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public bool IsPlayerEligibleForReward
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0xF07A14", Offset = "0xF07A14", VA = "0xF07A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F0C", Offset = "0xC79F0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600025C")]
			[Address(RVA = "0xF07A1C", Offset = "0xF07A1C", VA = "0xF07A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F1C", Offset = "0xC79F1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public string RewardCode
		{
			[Token(Token = "0x600025D")]
			[Address(RVA = "0xF07A28", Offset = "0xF07A28", VA = "0xF07A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F2C", Offset = "0xC79F2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600025E")]
			[Address(RVA = "0xF07A30", Offset = "0xF07A30", VA = "0xF07A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F3C", Offset = "0xC79F3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public string Url
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0xF07A38", Offset = "0xF07A38", VA = "0xF07A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F4C", Offset = "0xC79F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000260")]
			[Address(RVA = "0xF07A40", Offset = "0xF07A40", VA = "0xF07A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F5C", Offset = "0xC79F5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public bool RewardClaimed
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0xF07A48", Offset = "0xF07A48", VA = "0xF07A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F6C", Offset = "0xC79F6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000262")]
			[Address(RVA = "0xF07A50", Offset = "0xF07A50", VA = "0xF07A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F7C", Offset = "0xC79F7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public List<CustomEventReward> Rewards
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0xF07A5C", Offset = "0xF07A5C", VA = "0xF07A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F8C", Offset = "0xC79F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000264")]
			[Address(RVA = "0xF07464", Offset = "0xF07464", VA = "0xF07464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79F9C", Offset = "0xC79F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public List<Dictionary<Language, CustomEventReward>> RealRewards
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xF07A64", Offset = "0xF07A64", VA = "0xF07A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79FAC", Offset = "0xC79FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xF0746C", Offset = "0xF0746C", VA = "0xF0746C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC79FBC", Offset = "0xC79FBC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public string RewardsString
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0xF07A6C", Offset = "0xF07A6C", VA = "0xF07A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0xF06858", Offset = "0xF06858", VA = "0xF06858")]
		public CustomEvent(JToken name, int id, JToken description, DateTime startDate, DateTime endDate, bool ranked, string region, Dictionary<string, bool> devices, JToken specialSettings)
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xF080A8", Offset = "0xF080A8", VA = "0xF080A8")]
		private void OnRewardsClaimed(bool claimed)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xF0733C", Offset = "0xF0733C", VA = "0xF0733C")]
		public void RecalculateActiveStatus()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xF083EC", Offset = "0xF083EC", VA = "0xF083EC")]
		public void ClaimReward(Action<CustomEvent> callback)
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xF089AC", Offset = "0xF089AC", VA = "0xF089AC")]
		private void OnIsEligibleForRewardFetched(bool result)
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xF07060", Offset = "0xF07060", VA = "0xF07060")]
		private void CheckAvailabilityForCurrentUser(string region, Dictionary<string, bool> devices)
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xF08F58", Offset = "0xF08F58", VA = "0xF08F58")]
		private bool IsUsingRiftOnOpenVR()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000052")]
	public class CustomEventControl : MonoBehaviour
	{
		[Token(Token = "0x2000053")]
		private enum Tab
		{
			[Token(Token = "0x40001E6")]
			Global,
			[Token(Token = "0x40001E7")]
			CurrentEvents,
			[Token(Token = "0x40001E8")]
			PastEvents,
			[Token(Token = "0x40001E9")]
			PlayStation
		}

		[Token(Token = "0x40001CA")]
		private const float MinimumMinutesBetweenFetches = 5f;

		[Token(Token = "0x40001CB")]
		private const int MaxDaysAlive = 5;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_childGameObject;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomEventTab m_globalTab;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonTextColorPulser m_currentEventsTab;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ButtonTextColorPulser m_pastEventsTab;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_rewardMarkerPastEventsTab;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CustomEventTab m_playstationTab;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_season;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_currentEventsGroup;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_pastEventsGroup;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CustomEventInfo m_eventInfo;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_playStationLeaderboard;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CustomEventName[] m_activeEventComponents;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CustomEventName[] m_upcomingEventComponents;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CustomEventName[] m_pastEventComponents;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_internetMissingMessage;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_rewardMarkerLeaderboardTab;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private WorkshopTile m_blackboardTile;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Tab m_tab;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CustomEventTab m_defaultTab;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private DateTime m_lastActiveUpcomingFetch;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DateTime m_lastPastFetch;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<CustomEvent> m_activeAndUpcomingCustomEvents;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CustomEvent> m_sortedPastEvents;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private EventToken m_rewardClaimedEventToken;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A0DC", Offset = "0xC7A0DC")]
		private static Func<CustomEvent, int> <>f__am$cache0;

		[Token(Token = "0x1700008B")]
		private bool IsActive
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0xF090E8", Offset = "0xF090E8", VA = "0xF090E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A0EC", Offset = "0xC7A0EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xF0903C", Offset = "0xF0903C", VA = "0xF0903C")]
		public CustomEventControl()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xF09114", Offset = "0xF09114", VA = "0xF09114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xF09218", Offset = "0xF09218", VA = "0xF09218")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xF092DC", Offset = "0xF092DC", VA = "0xF092DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xF0985C", Offset = "0xF0985C", VA = "0xF0985C")]
		public void ActivateLeaderboards()
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xF09A28", Offset = "0xF09A28", VA = "0xF09A28")]
		public void DeactivateLeaderboards()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xF0954C", Offset = "0xF0954C", VA = "0xF0954C")]
		public void ResetFetchTimers()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xF09B0C", Offset = "0xF09B0C", VA = "0xF09B0C")]
		public void ShowGlobalLeaderboard()
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xF09CE4", Offset = "0xF09CE4", VA = "0xF09CE4")]
		public void ShowCurrentEvents()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xF09F1C", Offset = "0xF09F1C", VA = "0xF09F1C")]
		public void ShowPastEvents()
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xF09FDC", Offset = "0xF09FDC", VA = "0xF09FDC")]
		public void ShowPlayStationLeaderboard()
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xF0A09C", Offset = "0xF0A09C", VA = "0xF0A09C")]
		public void ShowEventInfo(CustomEventName customEventName)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xF0A768", Offset = "0xF0A768", VA = "0xF0A768")]
		public void ClaimRewards()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xF09BC8", Offset = "0xF09BC8", VA = "0xF09BC8")]
		private bool TryDisplayInternetMissingMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xF09750", Offset = "0xF09750", VA = "0xF09750")]
		private bool FetchIfAllowed(ref DateTime lastFetch, Action<Action<List<CustomEvent>>> fetchMethod, Action<List<CustomEvent>> callback)
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xF0A838", Offset = "0xF0A838", VA = "0xF0A838")]
		private void OnRewardsClaimed(CustomEvent customEvent)
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xF0A918", Offset = "0xF0A918", VA = "0xF0A918")]
		private void AssignCustomEvent(List<CustomEvent> events, CustomEventName[] eventObjects)
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xF0AC20", Offset = "0xF0AC20", VA = "0xF0AC20")]
		private List<CustomEvent>[] SplitActiveAndUpcoming(List<CustomEvent> customEvents)
		{
			return null;
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xF0AEAC", Offset = "0xF0AEAC", VA = "0xF0AEAC")]
		private void OnPastEventsFetched(List<CustomEvent> customEvents)
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xF0B4A4", Offset = "0xF0B4A4", VA = "0xF0B4A4")]
		private void OnIsEligibleForReward(CustomEvent customEvent, bool result)
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xF0B3AC", Offset = "0xF0B3AC", VA = "0xF0B3AC")]
		private void SortPastEventsAndAssignToUI()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xF094E4", Offset = "0xF094E4", VA = "0xF094E4")]
		private void StopPastEventsPulse()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xF09A04", Offset = "0xF09A04", VA = "0xF09A04")]
		private void TryRestartPastEventsPulse()
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xF09A30", Offset = "0xF09A30", VA = "0xF09A30")]
		private void CheckSortedEventsForClaims()
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xF0B348", Offset = "0xF0B348", VA = "0xF0B348")]
		private void TryStartPastEventsPulse()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xF0B5C0", Offset = "0xF0B5C0", VA = "0xF0B5C0")]
		private void TryStartMainPulse()
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xF0B548", Offset = "0xF0B548", VA = "0xF0B548")]
		private void TryStartTabsPulse()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xF0B620", Offset = "0xF0B620", VA = "0xF0B620")]
		private void OnActiveAndUpcomingEventsFetched(List<CustomEvent> events)
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xF0B848", Offset = "0xF0B848", VA = "0xF0B848")]
		private void OnRewardClaimed(Events.EventRewardClaimedEvent eventData)
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xF0B86C", Offset = "0xF0B86C", VA = "0xF0B86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A0FC", Offset = "0xC7A0FC")]
		private static int <SortPastEventsAndAssignToUI>m__0(CustomEvent x)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000054")]
	public class LeaderboardData
	{
		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] Ranks;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Names;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] Ratings;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Placement;

		[Token(Token = "0x600028D")]
		[Address(RVA = "0xF14380", Offset = "0xF14380", VA = "0xF14380")]
		public LeaderboardData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000055")]
	public class ResultData
	{
		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Result;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Error;

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xF14388", Offset = "0xF14388", VA = "0xF14388")]
		public ResultData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000056")]
	public class CustomEventData
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JToken Name;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Id;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JToken Description;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string StartDate;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string EndDate;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Ranked;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Regions;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, bool> Devices;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public JToken Special;

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xF0B8B0", Offset = "0xF0B8B0", VA = "0xF0B8B0")]
		public CustomEventData()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class CustomEventElo
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A12C", Offset = "0xC7A12C")]
		private sealed class <FetchEloFromServer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string <url>__0;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] <fieldNames>__0;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string[] <fieldValues>__0;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Action<CustomEventElo, bool> callback;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal CustomEventElo $this;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x1700051C")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002862")]
				[Address(RVA = "0xF0D328", Offset = "0xF0D328", VA = "0xF0D328", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002863")]
				[Address(RVA = "0xF0D330", Offset = "0xF0D330", VA = "0xF0D330", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002860")]
			[Address(RVA = "0xF0C07C", Offset = "0xF0C07C", VA = "0xF0C07C")]
			[DebuggerHidden]
			public <FetchEloFromServer>c__Iterator0()
			{
			}

			[Token(Token = "0x6002861")]
			[Address(RVA = "0xF0CC00", Offset = "0xF0CC00", VA = "0xF0CC00", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002864")]
			[Address(RVA = "0xF0D338", Offset = "0xF0D338", VA = "0xF0D338", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002865")]
			[Address(RVA = "0xF0D34C", Offset = "0xF0D34C", VA = "0xF0D34C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A18C", Offset = "0xC7A18C")]
		private sealed class <ChangeEloOnServer>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int eloChange;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float <timeOutTimer>__1;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action<CustomEventElo, bool> callback;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string <url>__0;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal string[] <fieldNames>__0;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal string[] <fieldValues>__0;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal CustomEventElo $this;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x1700051E")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002868")]
				[Address(RVA = "0xF0CB78", Offset = "0xF0CB78", VA = "0xF0CB78", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002869")]
				[Address(RVA = "0xF0CB80", Offset = "0xF0CB80", VA = "0xF0CB80", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002866")]
			[Address(RVA = "0xF0C37C", Offset = "0xF0C37C", VA = "0xF0C37C")]
			[DebuggerHidden]
			public <ChangeEloOnServer>c__Iterator1()
			{
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0xF0C384", Offset = "0xF0C384", VA = "0xF0C384", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600286A")]
			[Address(RVA = "0xF0CB88", Offset = "0xF0CB88", VA = "0xF0CB88", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600286B")]
			[Address(RVA = "0xF0CB9C", Offset = "0xF0CB9C", VA = "0xF0CB9C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_elo;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_eventId;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_canUpdateElo;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_fetchEloFromServerCoroutine;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_changeEloOnServerCoroutine;

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xF0B8B8", Offset = "0xF0B8B8", VA = "0xF0B8B8")]
		public CustomEventElo(int eventId)
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xF0B8E4", Offset = "0xF0B8E4", VA = "0xF0B8E4")]
		public void FetchElo(Action<CustomEventElo, bool> callback)
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xF0BC04", Offset = "0xF0BC04", VA = "0xF0BC04")]
		public void ChangeElo(int eloChange, Action<CustomEventElo, bool> callback)
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xF0BE78", Offset = "0xF0BE78", VA = "0xF0BE78")]
		private void OnEloFetchedFromServer(JObject jsonObject, object[] parameters)
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xF0BF8C", Offset = "0xF0BF8C", VA = "0xF0BF8C")]
		private void OnEloFetchFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xF0BB78", Offset = "0xF0BB78", VA = "0xF0BB78")]
		[DebuggerHidden]
		private IEnumerator FetchEloFromServer(Action<CustomEventElo, bool> callback)
		{
			return null;
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0xF0C084", Offset = "0xF0C084", VA = "0xF0C084")]
		private void OnChangeEloOnServerSuccess(object data, object[] parameters)
		{
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xF0C1C8", Offset = "0xF0C1C8", VA = "0xF0C1C8")]
		private void OnChangeEloFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xF0BDD8", Offset = "0xF0BDD8", VA = "0xF0BDD8")]
		[DebuggerHidden]
		private IEnumerator ChangeEloOnServer(int eloChange, Action<CustomEventElo, bool> callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000058")]
	public class CustomEventEloControl : MonoBehaviour
	{
		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CustomEventEloControl sm_instance;

		[Token(Token = "0x40001FF")]
		private const int PointsPerWin = 1;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, CustomEventElo> m_customEventElos;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_eloChangedEventToken;

		[Token(Token = "0x1700008C")]
		public static CustomEventEloControl Instance
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0xF0BAA8", Offset = "0xF0BAA8", VA = "0xF0BAA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xF0D3B0", Offset = "0xF0D3B0", VA = "0xF0D3B0")]
		public CustomEventEloControl()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xF0D3B8", Offset = "0xF0D3B8", VA = "0xF0D3B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0xF0D480", Offset = "0xF0D480", VA = "0xF0D480")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xF0D588", Offset = "0xF0D588", VA = "0xF0D588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0xF0D658", Offset = "0xF0D658", VA = "0xF0D658")]
		private void OnEloChanged(Events.EloChangedEvent eventData)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0xF0D6AC", Offset = "0xF0D6AC", VA = "0xF0D6AC")]
		private void EloChanged()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xF0D7DC", Offset = "0xF0D7DC", VA = "0xF0D7DC")]
		public bool HasCustomEventElo(int eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xF0D848", Offset = "0xF0D848", VA = "0xF0D848")]
		public CustomEventElo CreateCustomEventElo(int eventId)
		{
			return null;
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xF0D8F4", Offset = "0xF0D8F4", VA = "0xF0D8F4")]
		public CustomEventElo GetCustomEventElo(int eventId)
		{
			return null;
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xF0D960", Offset = "0xF0D960", VA = "0xF0D960")]
		public bool RemoveCustomEventElo(int eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xF0D9CC", Offset = "0xF0D9CC", VA = "0xF0D9CC")]
		public CustomEventElo[] GetAllCustomEventElos()
		{
			return null;
		}
	}
	[Token(Token = "0x2000059")]
	public class CustomEventFetcher : MonoBehaviour
	{
		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A2A8", Offset = "0xC7A2A8")]
		private sealed class <FetchJsonArrayFromServer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x2000560")]
			private sealed class <FetchJsonArrayFromServer>c__AnonStorey3
			{
				[Token(Token = "0x4001E9A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal string text;

				[Token(Token = "0x4001E9B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal object deserializedObj;

				[Token(Token = "0x4001E9C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				internal Action<string, object[]> OnError;

				[Token(Token = "0x4001E9D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				internal object[] invokeParameters;

				[Token(Token = "0x4001E9E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				internal Action<JArray, object[]> OnFinished;

				[Token(Token = "0x4001E9F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				internal <FetchJsonArrayFromServer>c__Iterator0 <>f__ref$0;

				[Token(Token = "0x600287E")]
				[Address(RVA = "0xF0FDB8", Offset = "0xF0FDB8", VA = "0xF0FDB8")]
				public <FetchJsonArrayFromServer>c__AnonStorey3()
				{
				}

				[Token(Token = "0x600287F")]
				[Address(RVA = "0xF0FE48", Offset = "0xF0FE48", VA = "0xF0FE48")]
				internal void <>m__0()
				{
				}

				[Token(Token = "0x6002880")]
				[Address(RVA = "0xF0FEC0", Offset = "0xF0FEC0", VA = "0xF0FEC0")]
				internal void <>m__1(Task t)
				{
				}
			}

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string path;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] fieldNames;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string[] fieldValues;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal WWW <www>__0;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal string <responseText>__0;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Action<string, object[]> OnError;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object[] invokeParameters;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal char expectedFirstCharacter;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Action<JArray, object[]> OnFinished;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal CustomEventFetcher $this;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal object $current;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal bool $disposing;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal int $PC;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private <FetchJsonArrayFromServer>c__AnonStorey3 $locvar0;

			[Token(Token = "0x17000520")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600286E")]
				[Address(RVA = "0xF0FDC0", Offset = "0xF0FDC0", VA = "0xF0FDC0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000521")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286F")]
				[Address(RVA = "0xF0FDC8", Offset = "0xF0FDC8", VA = "0xF0FDC8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600286C")]
			[Address(RVA = "0xF0EED8", Offset = "0xF0EED8", VA = "0xF0EED8")]
			[DebuggerHidden]
			public <FetchJsonArrayFromServer>c__Iterator0()
			{
			}

			[Token(Token = "0x600286D")]
			[Address(RVA = "0xF0F954", Offset = "0xF0F954", VA = "0xF0F954", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002870")]
			[Address(RVA = "0xF0FDD0", Offset = "0xF0FDD0", VA = "0xF0FDD0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002871")]
			[Address(RVA = "0xF0FDE4", Offset = "0xF0FDE4", VA = "0xF0FDE4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A308", Offset = "0xC7A308")]
		private sealed class <FetchJsonObjectFromServer>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string path;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] fieldNames;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string[] fieldValues;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal WWW <www>__0;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal string <responseText>__0;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Action<string, object[]> OnError;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object[] invokeParameters;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal string <text>__0;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal char expectedFirstCharacter;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal Action<JObject, object[]> OnFinished;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal CustomEventFetcher $this;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal object $current;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal bool $disposing;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal int $PC;

			[Token(Token = "0x17000522")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002874")]
				[Address(RVA = "0xF10350", Offset = "0xF10350", VA = "0xF10350", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000523")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002875")]
				[Address(RVA = "0xF10358", Offset = "0xF10358", VA = "0xF10358", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002872")]
			[Address(RVA = "0xF0EEE0", Offset = "0xF0EEE0", VA = "0xF0EEE0")]
			[DebuggerHidden]
			public <FetchJsonObjectFromServer>c__Iterator1()
			{
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0xF0FFCC", Offset = "0xF0FFCC", VA = "0xF0FFCC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0xF10360", Offset = "0xF10360", VA = "0xF10360", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002877")]
			[Address(RVA = "0xF10374", Offset = "0xF10374", VA = "0xF10374", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A368", Offset = "0xC7A368")]
		private sealed class <FetchUnserializedJsonDataFromServer>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string path;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] fieldNames;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string[] fieldValues;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal WWW <www>__0;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal string <responseText>__0;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Action<string, object[]> OnError;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object[] invokeParameters;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal string <text>__0;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal char expectedFirstCharacter;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal Action<object, object[]> OnFinished;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal CustomEventFetcher $this;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal object $current;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal bool $disposing;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal int $PC;

			[Token(Token = "0x17000524")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600287A")]
				[Address(RVA = "0xF10744", Offset = "0xF10744", VA = "0xF10744", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000525")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600287B")]
				[Address(RVA = "0xF1074C", Offset = "0xF1074C", VA = "0xF1074C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002878")]
			[Address(RVA = "0xF0EEE8", Offset = "0xF0EEE8", VA = "0xF0EEE8")]
			[DebuggerHidden]
			public <FetchUnserializedJsonDataFromServer>c__Iterator2()
			{
			}

			[Token(Token = "0x6002879")]
			[Address(RVA = "0xF103D8", Offset = "0xF103D8", VA = "0xF103D8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600287C")]
			[Address(RVA = "0xF10754", Offset = "0xF10754", VA = "0xF10754", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0xF10768", Offset = "0xF10768", VA = "0xF10768", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000202")]
		private const string UserPassword = "618d2b1c6c62d635b6bf06f2d0637da7f5d9d2e542c16af874732a61ac363ac7";

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] sm_fieldNames;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] sm_fieldValues;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isUserNameSet;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CustomEventFetcher sm_instance;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A1EC", Offset = "0xC7A1EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7A1EC", Offset = "0xC7A1EC")]
		private int <ExperienceMultiplier>k__BackingField;

		[Token(Token = "0x1700008D")]
		public static CustomEventFetcher Instance
		{
			[Token(Token = "0x60002A6")]
			[Address(RVA = "0xF09650", Offset = "0xF09650", VA = "0xF09650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public int ExperienceMultiplier
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0xF0DBA0", Offset = "0xF0DBA0", VA = "0xF0DBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A228", Offset = "0xC7A228")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60002A8")]
			[Address(RVA = "0xF0DBA8", Offset = "0xF0DBA8", VA = "0xF0DBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A238", Offset = "0xC7A238")]
			private set
			{
			}
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xF0DB98", Offset = "0xF0DB98", VA = "0xF0DB98")]
		public CustomEventFetcher()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xF0DBB0", Offset = "0xF0DBB0", VA = "0xF0DBB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xF0DCB4", Offset = "0xF0DCB4", VA = "0xF0DCB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xF0DDD4", Offset = "0xF0DDD4", VA = "0xF0DDD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xF0DEC8", Offset = "0xF0DEC8", VA = "0xF0DEC8")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xF0E0C8", Offset = "0xF0E0C8", VA = "0xF0E0C8")]
		private void TrySetUserName()
		{
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xF0E5C4", Offset = "0xF0E5C4", VA = "0xF0E5C4")]
		private void OnUserNameUpdated(JObject jsonObject, object[] parameters)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xF0E740", Offset = "0xF0E740", VA = "0xF0E740")]
		private void OnUserNameUpdateFailed(string error, object[] parameters)
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xF0E7E4", Offset = "0xF0E7E4", VA = "0xF0E7E4")]
		private void OnEventsFetched(JArray jsonArray, object[] parameters)
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xF0EC9C", Offset = "0xF0EC9C", VA = "0xF0EC9C")]
		public WWW CreateWWW(string path, string[] fieldNames, string[] fieldValues)
		{
			return null;
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xF0EDC4", Offset = "0xF0EDC4", VA = "0xF0EDC4")]
		[DebuggerHidden]
		public IEnumerator FetchJsonArrayFromServer(string path, string[] fieldNames, string[] fieldValues, char expectedFirstCharacter, Action<JArray, object[]> OnFinished, Action<string, object[]> OnError, params object[] invokeParameters)
		{
			return null;
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xF0D214", Offset = "0xF0D214", VA = "0xF0D214")]
		[DebuggerHidden]
		public IEnumerator FetchJsonObjectFromServer(string path, string[] fieldNames, string[] fieldValues, char expectedFirstCharacter, Action<JObject, object[]> OnFinished, Action<string, object[]> OnError, params object[] invokeParameters)
		{
			return null;
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xF0CA64", Offset = "0xF0CA64", VA = "0xF0CA64")]
		[DebuggerHidden]
		public IEnumerator FetchUnserializedJsonDataFromServer(string path, string[] fieldNames, string[] fieldValues, char expectedFirstCharacter, Action<object, object[]> OnFinished, Action<string, object[]> OnError, params object[] invokeParameters)
		{
			return null;
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xF0EEF0", Offset = "0xF0EEF0", VA = "0xF0EEF0")]
		private void OnEventsFetchFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xF0EA44", Offset = "0xF0EA44", VA = "0xF0EA44")]
		private List<CustomEvent> ExtractCustomEvents(JArray jsonArray)
		{
			return null;
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xF0EFBC", Offset = "0xF0EFBC", VA = "0xF0EFBC")]
		public void FetchActiveAndUpcomingEvents([Optional] Action<List<CustomEvent>> onActiveUpcomingEventsFetched)
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xF0DF24", Offset = "0xF0DF24", VA = "0xF0DF24")]
		public void FetchActiveEvents([Optional] Action<List<CustomEvent>> onActiveEventsFetched)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xF0F160", Offset = "0xF0F160", VA = "0xF0F160")]
		public void FetchUpcomingEvents([Optional] Action<List<CustomEvent>> onUpcomingEventsFetched)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xF0F304", Offset = "0xF0F304", VA = "0xF0F304")]
		public void FetchPastEvents([Optional] Action<List<CustomEvent>> onPastEventsFetched)
		{
		}
	}
	[Token(Token = "0x200005A")]
	public class CustomEventInfo : MonoBehaviour
	{
		[Token(Token = "0x200005B")]
		private enum TextMeshType
		{
			[Token(Token = "0x4000219")]
			Name,
			[Token(Token = "0x400021A")]
			Description,
			[Token(Token = "0x400021B")]
			TimeText,
			[Token(Token = "0x400021C")]
			Timer
		}

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A58C", Offset = "0xC7A58C")]
		private sealed class <SetDateText>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TextMeshPro <timer>__0;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal TimeSpan <timeSpan>__1;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal CustomEventInfo $this;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000526")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002883")]
				[Address(RVA = "0xF10F34", Offset = "0xF10F34", VA = "0xF10F34", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000527")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002884")]
				[Address(RVA = "0xF10F3C", Offset = "0xF10F3C", VA = "0xF10F3C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002881")]
			[Address(RVA = "0xF10924", Offset = "0xF10924", VA = "0xF10924")]
			[DebuggerHidden]
			public <SetDateText>c__Iterator0()
			{
			}

			[Token(Token = "0x6002882")]
			[Address(RVA = "0xF10D2C", Offset = "0xF10D2C", VA = "0xF10D2C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0xF10F44", Offset = "0xF10F44", VA = "0xF10F44", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0xF10F58", Offset = "0xF10F58", VA = "0xF10F58", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7A3C8", Offset = "0xC7A3C8")]
		[SerializeField]
		private GameObject m_rankedGroup;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_rankedEventName;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_rankedEventDescription;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro m_rankedEventTimeText;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro m_rankedEventTimer;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CustomEventLeaderboard m_rankedEventLeaderboard;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro m_rewardText;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro m_claimReward;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro m_rewardClaimed;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7A494", Offset = "0xC7A494")]
		[SerializeField]
		private GameObject m_unrankedGroup;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro m_unrankedEventName;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshPro m_unrankedEventDescription;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshPro m_unrankedEventTimeText;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshPro m_unrankedEventTimer;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A520", Offset = "0xC7A520")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7A520", Offset = "0xC7A520")]
		private CustomEvent <CustomEvent>k__BackingField;

		[Token(Token = "0x1700008F")]
		public CustomEvent CustomEvent
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xF0A830", Offset = "0xF0A830", VA = "0xF0A830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A55C", Offset = "0xC7A55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0xF107D4", Offset = "0xF107D4", VA = "0xF107D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A56C", Offset = "0xC7A56C")]
			private set
			{
			}
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xF107CC", Offset = "0xF107CC", VA = "0xF107CC")]
		public CustomEventInfo()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xF107DC", Offset = "0xF107DC", VA = "0xF107DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xF09CA8", Offset = "0xF09CA8", VA = "0xF09CA8")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xF107E4", Offset = "0xF107E4", VA = "0xF107E4")]
		private TextMeshPro GetCorrectTextMesh(TextMeshType type)
		{
			return null;
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xF108B8", Offset = "0xF108B8", VA = "0xF108B8")]
		[DebuggerHidden]
		private IEnumerator SetDateText()
		{
			return null;
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xF0A174", Offset = "0xF0A174", VA = "0xF0A174")]
		public void SetCustomEventInfo(CustomEvent customEvent)
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xF10A00", Offset = "0xF10A00", VA = "0xF10A00")]
		private TimeSpan GetCorrectTimeSpan()
		{
			return default(TimeSpan);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xF10B28", Offset = "0xF10B28", VA = "0xF10B28")]
		private string GetDateText(TimeSpan timeSpan)
		{
			return null;
		}
	}
	[Token(Token = "0x200005C")]
	public class CustomEventLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_namesParent;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_linesGameObject;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private TextMeshPro[] m_names;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private TextMeshPro[] m_points;

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xF10FBC", Offset = "0xF10FBC", VA = "0xF10FBC")]
		public CustomEventLeaderboard()
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xF1092C", Offset = "0xF1092C", VA = "0xF1092C")]
		public void LoadLeaderboard(CustomEvent customEvent)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xF1148C", Offset = "0xF1148C", VA = "0xF1148C")]
		private void OnLeaderboardFetched(int[] userRanks, string[] userNames, int[] userRatings, int place)
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xF118D0", Offset = "0xF118D0", VA = "0xF118D0")]
		private void OnFetchLeaderboardSuccess(object data, object[] parameters)
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xF11AD4", Offset = "0xF11AD4", VA = "0xF11AD4")]
		private void OnFetchLeaderboardFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xF1102C", Offset = "0xF1102C", VA = "0xF1102C")]
		private void FetchLeaderboard(int eventId)
		{
		}
	}
	[Token(Token = "0x200005D")]
	public class CustomEventName : InteractableButton
	{
		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro m_nameText;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Localize m_timeLocalize;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LocalizationParamsManager m_timeLocalizationParamsManager;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_updateEventTime;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A6AC", Offset = "0xC7A6AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7A6AC", Offset = "0xC7A6AC")]
		private CustomEvent <CustomEvent>k__BackingField;

		[Token(Token = "0x17000090")]
		public CustomEvent CustomEvent
		{
			[Token(Token = "0x60002CD")]
			[Address(RVA = "0xF0A16C", Offset = "0xF0A16C", VA = "0xF0A16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A6E8", Offset = "0xC7A6E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0xF11B6C", Offset = "0xF11B6C", VA = "0xF11B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A6F8", Offset = "0xC7A6F8")]
			private set
			{
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xF11B64", Offset = "0xF11B64", VA = "0xF11B64")]
		public CustomEventName()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xF11B74", Offset = "0xF11B74", VA = "0xF11B74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xF11BA8", Offset = "0xF11BA8", VA = "0xF11BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xF0AA80", Offset = "0xF0AA80", VA = "0xF0AA80")]
		public void SetCustomEvent(CustomEvent customEvent)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xF11CB4", Offset = "0xF11CB4", VA = "0xF11CB4")]
		private void UpdateEventName()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xF11BB8", Offset = "0xF11BB8", VA = "0xF11BB8")]
		private void UpdateTimeTextContiniuous()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xF11DB0", Offset = "0xF11DB0", VA = "0xF11DB0")]
		private TimeSpan GetCorrectTimeSpan()
		{
			return default(TimeSpan);
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xF11ED8", Offset = "0xF11ED8", VA = "0xF11ED8")]
		private void UpdateTimeText()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class CustomEventReward
	{
		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TranslationPath;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int Amount;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly WandType WandType;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly CharacterType CharacterType;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly bool IsCharacter;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public readonly bool IsWand;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xF1220C", Offset = "0xF1220C", VA = "0xF1220C")]
		public CustomEventReward(string name, int amount)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xF12248", Offset = "0xF12248", VA = "0xF12248")]
		public CustomEventReward(string name, int amount, string translationPath)
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xF12288", Offset = "0xF12288", VA = "0xF12288")]
		public CustomEventReward(CharacterType characterType, int amount)
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xF1239C", Offset = "0xF1239C", VA = "0xF1239C")]
		public CustomEventReward(WandType wandType, int amount)
		{
		}
	}
	[Token(Token = "0x200005F")]
	public static class CustomEventRewardControl
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A708", Offset = "0xC7A708")]
		private static Action<object, object[]> <>f__mg$cache0;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A718", Offset = "0xC7A718")]
		private static Action<string, object[]> <>f__mg$cache1;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A728", Offset = "0xC7A728")]
		private static Action<object, object[]> <>f__mg$cache2;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A738", Offset = "0xC7A738")]
		private static Action<string, object[]> <>f__mg$cache3;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A748", Offset = "0xC7A748")]
		private static Action<JArray, object[]> <>f__mg$cache4;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7A758", Offset = "0xC7A758")]
		private static Action<string, object[]> <>f__mg$cache5;

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xF08480", Offset = "0xF08480", VA = "0xF08480")]
		public static void ClaimReward(CustomEvent customEvent, Action<bool> callBack)
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xF124D4", Offset = "0xF124D4", VA = "0xF124D4")]
		public static void OnRewardClaimed(object data, object[] parameters)
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xF126F0", Offset = "0xF126F0", VA = "0xF126F0")]
		public static void OnRewardClaimFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xF07484", Offset = "0xF07484", VA = "0xF07484")]
		public static void FetchIsEligibleForReward(CustomEvent customEvent, Action<bool> callBack)
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xF127E4", Offset = "0xF127E4", VA = "0xF127E4")]
		private static void OnFetchIsEligibleForRewardSuccess(object data, object[] parameters)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xF12B84", Offset = "0xF12B84", VA = "0xF12B84")]
		private static void OnFetchIsEligibleForRewardFailed(string message, object[] parameters)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xF08A30", Offset = "0xF08A30", VA = "0xF08A30")]
		public static void FetchRewards(CustomEvent customEvent)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xF12ED0", Offset = "0xF12ED0", VA = "0xF12ED0")]
		public static void OnFetchRewardsSuccess(JArray jsonData, object[] parameters)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xF13B68", Offset = "0xF13B68", VA = "0xF13B68")]
		public static void OnFetchRewardsFailed(string message, object[] parameters)
		{
		}
	}
	[Token(Token = "0x2000060")]
	public class CustomEventTab : InteractableButton
	{
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CustomEventTab sm_selectedTab;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro m_text;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Color m_hoverColor;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ButtonTextColorPulser m_buttonTextColorFader;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject m_chalkLine;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject m_chalkEffect;

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xF13BF8", Offset = "0xF13BF8", VA = "0xF13BF8")]
		public CustomEventTab()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xF13C58", Offset = "0xF13C58", VA = "0xF13C58")]
		private void Start()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xF13CA8", Offset = "0xF13CA8", VA = "0xF13CA8", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xF13E10", Offset = "0xF13E10", VA = "0xF13E10", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xF13F68", Offset = "0xF13F68", VA = "0xF13F68", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xF1417C", Offset = "0xF1417C", VA = "0xF1417C")]
		public void Unselect()
		{
		}
	}
	[Token(Token = "0x2000061")]
	public class CustomEventTextColorer : WandsButtonHighlighter
	{
		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_eventName;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_eventTime;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_hoverColor;

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xF14204", Offset = "0xF14204", VA = "0xF14204")]
		public CustomEventTextColorer()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xF14250", Offset = "0xF14250", VA = "0xF14250", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xF142E8", Offset = "0xF142E8", VA = "0xF142E8", Slot = "5")]
		public override void LookExit()
		{
		}
	}
}
namespace Assets.Scripts.InteractObjects
{
	[Serializable]
	[Token(Token = "0x2000062")]
	public class DustContainerPrefabs
	{
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Standard;

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xDE74D8", Offset = "0xDE74D8", VA = "0xDE74D8")]
		public DustContainerPrefabs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000063")]
	public class OutfitPrefabs
	{
		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Blau;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Weyman;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Inquisitor;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Fennec;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Knot;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Takeo;

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xDEB84C", Offset = "0xDEB84C", VA = "0xDEB84C")]
		public OutfitPrefabs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000064")]
	public class RendererMaterialPair
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Renderer m_renderer;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_material;

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xDE9E18", Offset = "0xDE9E18", VA = "0xDE9E18")]
		public RendererMaterialPair(Renderer renderer, Material material)
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xDE9EC4", Offset = "0xDE9EC4", VA = "0xDE9EC4")]
		public void SetMaterialHighlighted(bool highlighted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000065")]
	public class WandPrefabs
	{
		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Classic;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Inductor;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Sword;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Lion;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Remnant;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Scepter;

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xDED934", Offset = "0xDED934", VA = "0xDED934")]
		public WandPrefabs()
		{
		}
	}
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x2000066")]
	public enum AchievementType
	{
		[Token(Token = "0x400024F")]
		Unknown = -1,
		[Token(Token = "0x4000250")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A818", Offset = "0xC7A818")]
		Craftsman,
		[Token(Token = "0x4000251")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A828", Offset = "0xC7A828")]
		Duelist,
		[Token(Token = "0x4000252")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A838", Offset = "0xC7A838")]
		Wands,
		[Token(Token = "0x4000253")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A848", Offset = "0xC7A848")]
		Winner,
		[Token(Token = "0x4000254")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A858", Offset = "0xC7A858")]
		Addict,
		[Token(Token = "0x4000255")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A868", Offset = "0xC7A868")]
		TrainingForDummies,
		[Token(Token = "0x4000256")]
		TutorialComplete,
		[Token(Token = "0x4000257")]
		WinFirstDuel,
		[Token(Token = "0x4000258")]
		WinAllArenas,
		[Token(Token = "0x4000259")]
		ChangeRelicLoadout,
		[Token(Token = "0x400025A")]
		ChangeTitle,
		[Token(Token = "0x400025B")]
		Deal200Damage,
		[Token(Token = "0x400025C")]
		Win25Duels,
		[Token(Token = "0x400025D")]
		Unlock20Relics,
		[Token(Token = "0x400025E")]
		Purchase7Wands,
		[Token(Token = "0x400025F")]
		Purchase9Characters,
		[Token(Token = "0x4000260")]
		ReachLevel100
	}
	[Token(Token = "0x2000067")]
	public enum ActivatedSubtitlesReasonType
	{
		[Token(Token = "0x4000262")]
		Blackboard,
		[Token(Token = "0x4000263")]
		PreTutorial
	}
	[Token(Token = "0x2000068")]
	public enum AimInput
	{
		[Token(Token = "0x4000265")]
		Head = 1,
		[Token(Token = "0x4000266")]
		Remote = 2,
		[Token(Token = "0x4000267")]
		LeftHand = 4,
		[Token(Token = "0x4000268")]
		RightHand = 8,
		[Token(Token = "0x4000269")]
		Hand = 12
	}
	[Token(Token = "0x2000069")]
	public enum AnimationType
	{
		[Token(Token = "0x400026B")]
		SelectStart = 1,
		[Token(Token = "0x400026C")]
		SelectIdle = 2,
		[Token(Token = "0x400026D")]
		SelectWand = 4,
		[Token(Token = "0x400026E")]
		WalkForward = 8,
		[Token(Token = "0x400026F")]
		WalkRight = 16,
		[Token(Token = "0x4000270")]
		HitSmallForward = 32,
		[Token(Token = "0x4000271")]
		HitSmallBack = 64,
		[Token(Token = "0x4000272")]
		HitSmallRight = 128,
		[Token(Token = "0x4000273")]
		HitSmallLeft = 256,
		[Token(Token = "0x4000274")]
		CastSmall = 512,
		[Token(Token = "0x4000275")]
		CastMedium = 1024,
		[Token(Token = "0x4000276")]
		CastLarge = 2048,
		[Token(Token = "0x4000277")]
		CastArea = 4096,
		[Token(Token = "0x4000278")]
		CastShield = 8192,
		[Token(Token = "0x4000279")]
		CastCharge = 16384,
		[Token(Token = "0x400027A")]
		Dead = 32768,
		[Token(Token = "0x400027B")]
		OnDummy = 33255,
		[Token(Token = "0x400027C")]
		OnGhost = -33256
	}
	[Token(Token = "0x200006A")]
	public enum AreaOfEffectBehaviour
	{
		[Token(Token = "0x400027E")]
		OneShot,
		[Token(Token = "0x400027F")]
		Timed,
		[Token(Token = "0x4000280")]
		Mine
	}
	[Token(Token = "0x200006B")]
	public enum Arena
	{
		[Token(Token = "0x4000282")]
		None = 0,
		[Token(Token = "0x4000283")]
		AspisPrison = 1,
		[Token(Token = "0x4000284")]
		TempleOfOphidian = 2,
		[Token(Token = "0x4000285")]
		TheCelestialHalls = 4,
		[Token(Token = "0x4000286")]
		OrtusStation = 8,
		[Token(Token = "0x4000287")]
		DeadMastersVale = 16,
		[Token(Token = "0x4000288")]
		Marrakech = 32,
		[Token(Token = "0x4000289")]
		Market = 64,
		[Token(Token = "0x400028A")]
		SanctumOfSahir = 128,
		[Token(Token = "0x400028B")]
		TheCelestialHalls_AIBot = 256,
		[Token(Token = "0x400028C")]
		FountainOfTheFallen = 512,
		[Token(Token = "0x400028D")]
		EasternRealms = 24
	}
	[Token(Token = "0x200006C")]
	public enum AssetBundleType
	{
		[Token(Token = "0x400028F")]
		Default,
		[Token(Token = "0x4000290")]
		Vanity,
		[Token(Token = "0x4000291")]
		Spells,
		[Token(Token = "0x4000292")]
		Platform,
		[Token(Token = "0x4000293")]
		UI,
		[Token(Token = "0x4000294")]
		CombinedUI,
		[Token(Token = "0x4000295")]
		VFX,
		[Token(Token = "0x4000296")]
		CombinedCharacter
	}
	[Token(Token = "0x200006D")]
	public enum AttackAnimationType
	{
		[Token(Token = "0x4000298")]
		Light,
		[Token(Token = "0x4000299")]
		Heavy,
		[Token(Token = "0x400029A")]
		TileEffect,
		[Token(Token = "0x400029B")]
		Channeling
	}
	[Token(Token = "0x200006E")]
	public enum BlackboardState
	{
		[Token(Token = "0x400029D")]
		News,
		[Token(Token = "0x400029E")]
		Tutorial,
		[Token(Token = "0x400029F")]
		Leaderboards,
		[Token(Token = "0x40002A0")]
		Profile,
		[Token(Token = "0x40002A1")]
		Options,
		[Token(Token = "0x40002A2")]
		Credits,
		[Token(Token = "0x40002A3")]
		Titles
	}
	[Token(Token = "0x200006F")]
	public enum BtnOptionsTypes
	{
		[Token(Token = "0x40002A5")]
		Sfx,
		[Token(Token = "0x40002A6")]
		Aim,
		[Token(Token = "0x40002A7")]
		PlayerVoIP,
		[Token(Token = "0x40002A8")]
		OpponentVoIP,
		[Token(Token = "0x40002A9")]
		Hand,
		[Token(Token = "0x40002AA")]
		Language,
		[Token(Token = "0x40002AB")]
		PositionalTrackingOpponent,
		[Token(Token = "0x40002AC")]
		Grip,
		[Token(Token = "0x40002AD")]
		ControlSchemeWandInput,
		[Token(Token = "0x40002AE")]
		ResetTutorial,
		[Token(Token = "0x40002AF")]
		Subtitle,
		[Token(Token = "0x40002B0")]
		ControlSchemeDualWield
	}
	[Token(Token = "0x2000070")]
	public enum ButtonState
	{
		[Token(Token = "0x40002B2")]
		Equip,
		[Token(Token = "0x40002B3")]
		Equipped,
		[Token(Token = "0x40002B4")]
		Unlock,
		[Token(Token = "0x40002B5")]
		Locked
	}
	[Token(Token = "0x2000071")]
	public enum ChannelAnimationType
	{
		[Token(Token = "0x40002B7")]
		Default,
		[Token(Token = "0x40002B8")]
		Fast
	}
	[Token(Token = "0x2000072")]
	public enum CharacterEquipSource
	{
		[Token(Token = "0x40002BA")]
		Drag,
		[Token(Token = "0x40002BB")]
		Equip,
		[Token(Token = "0x40002BC")]
		Teleport
	}
	[Token(Token = "0x2000073")]
	public enum CharacterMaterialType
	{
		[Token(Token = "0x40002BE")]
		Default,
		[Token(Token = "0x40002BF")]
		Rim,
		[Token(Token = "0x40002C0")]
		Highlight
	}
	[Token(Token = "0x2000074")]
	public enum CharacterMirrorState
	{
		[Token(Token = "0x40002C2")]
		Buy,
		[Token(Token = "0x40002C3")]
		Buying,
		[Token(Token = "0x40002C4")]
		Equip,
		[Token(Token = "0x40002C5")]
		Equipped,
		[Token(Token = "0x40002C6")]
		Special
	}
	[Token(Token = "0x2000075")]
	public enum CharacterType
	{
		[Token(Token = "0x40002C8")]
		Scavenger,
		[Token(Token = "0x40002C9")]
		Collector,
		[Token(Token = "0x40002CA")]
		Widow,
		[Token(Token = "0x40002CB")]
		Raven,
		[Token(Token = "0x40002CC")]
		Inquisitor,
		[Token(Token = "0x40002CD")]
		Templar,
		[Token(Token = "0x40002CE")]
		Vindicator,
		[Token(Token = "0x40002CF")]
		General,
		[Token(Token = "0x40002D0")]
		Vanguard,
		[Token(Token = "0x40002D1")]
		Assassin,
		[Token(Token = "0x40002D2")]
		Komuso,
		[Token(Token = "0x40002D3")]
		Nemesis
	}
	[Token(Token = "0x2000076")]
	public static class EnumHelper
	{
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] CharacterTypeNames;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] sm_tagTypeStrings;

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xF14390", Offset = "0xF14390", VA = "0xF14390")]
		public static bool TryParse(string name, out TagType type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000077")]
	public enum ConnectionType
	{
		[Token(Token = "0x40002D7")]
		Release = 1,
		[Token(Token = "0x40002D8")]
		Develop = 2,
		[Token(Token = "0x40002D9")]
		Beta = 4,
		[Token(Token = "0x40002DA")]
		Trailer = 8,
		[Token(Token = "0x40002DB")]
		CIN = 0x10
	}
	[Token(Token = "0x2000078")]
	public enum ControlType
	{
		[Token(Token = "0x40002DD")]
		GearVr = 1,
		[Token(Token = "0x40002DE")]
		GearVrRemote = 2,
		[Token(Token = "0x40002DF")]
		GoRemote = 4,
		[Token(Token = "0x40002E0")]
		MiVrRemote = 8,
		[Token(Token = "0x40002E1")]
		Daydream = 131072,
		[Token(Token = "0x40002E2")]
		Pico = 16,
		[Token(Token = "0x40002E3")]
		Gamepad = 32,
		[Token(Token = "0x40002E4")]
		RiftTouchRight = 64,
		[Token(Token = "0x40002E5")]
		RiftTouchLeft = 128,
		[Token(Token = "0x40002E6")]
		ViveController = 256,
		[Token(Token = "0x40002E7")]
		Unsupported = 512,
		[Token(Token = "0x40002E8")]
		QuestRight = 1024,
		[Token(Token = "0x40002E9")]
		QuestLeft = 2048,
		[Token(Token = "0x40002EA")]
		PlayStationMotion = 4096,
		[Token(Token = "0x40002EB")]
		PlayStationDualShock = 8192,
		[Token(Token = "0x40002EC")]
		ViveKnuckles = 16384,
		[Token(Token = "0x40002ED")]
		ViveCosmos = 32768,
		[Token(Token = "0x40002EE")]
		WindowsMixedReality = 65536,
		[Token(Token = "0x40002EF")]
		PicoNeo2 = 262144,
		[Token(Token = "0x40002F0")]
		DualWieldButtons = 314560,
		[Token(Token = "0x40002F1")]
		DualWieldTouchpad = 65792,
		[Token(Token = "0x40002F2")]
		DualWield = 380352
	}
	[Token(Token = "0x2000079")]
	public enum CostType
	{
		[Token(Token = "0x40002F4")]
		Mana,
		[Token(Token = "0x40002F5")]
		Health
	}
	[Token(Token = "0x200007A")]
	public enum CountdownType
	{
		[Token(Token = "0x40002F7")]
		Warmup,
		[Token(Token = "0x40002F8")]
		MatchStart,
		[Token(Token = "0x40002F9")]
		Default
	}
	[Token(Token = "0x200007B")]
	public enum CrystalState
	{
		[Token(Token = "0x40002FB")]
		Neutral,
		[Token(Token = "0x40002FC")]
		Healing,
		[Token(Token = "0x40002FD")]
		Damaging
	}
	[Token(Token = "0x200007C")]
	public enum CustomEventSpecialSettings
	{
		[Token(Token = "0x40002FF")]
		XpMultiplier
	}
	[Token(Token = "0x200007D")]
	public enum DamageType
	{
		[Token(Token = "0x4000301")]
		Once,
		[Token(Token = "0x4000302")]
		OnceContinuous,
		[Token(Token = "0x4000303")]
		Continuous
	}
	[Token(Token = "0x200007E")]
	public enum DesertTempleEnvironmentType
	{
		[Token(Token = "0x4000305")]
		Sandstorm,
		[Token(Token = "0x4000306")]
		Gas
	}
	[Token(Token = "0x200007F")]
	public enum DesertTempleStage
	{
		[Token(Token = "0x4000308")]
		BuildUpSandstorm,
		[Token(Token = "0x4000309")]
		StartSandstorm,
		[Token(Token = "0x400030A")]
		OpenOutsideDoors,
		[Token(Token = "0x400030B")]
		CloseOutsideDoors,
		[Token(Token = "0x400030C")]
		BuildUpGas,
		[Token(Token = "0x400030D")]
		OpenInnerDoors,
		[Token(Token = "0x400030E")]
		StartGas,
		[Token(Token = "0x400030F")]
		CloseInnerDoors
	}
	[Token(Token = "0x2000080")]
	public enum DummyType
	{
		[Token(Token = "0x4000311")]
		Local,
		[Token(Token = "0x4000312")]
		Twin,
		[Token(Token = "0x4000313")]
		Projection
	}
	[Token(Token = "0x2000081")]
	public enum EffectType
	{
		[Token(Token = "0x4000315")]
		OrtusPickup,
		[Token(Token = "0x4000316")]
		CelestialPortal,
		[Token(Token = "0x4000317")]
		AcidCamEffect,
		[Token(Token = "0x4000318")]
		AstralCamEffect,
		[Token(Token = "0x4000319")]
		AstralProjectionEffect,
		[Token(Token = "0x400031A")]
		ChillingClutchLingeringEffect,
		[Token(Token = "0x400031B")]
		SandstormEffect,
		[Token(Token = "0x400031C")]
		GasEffect,
		[Token(Token = "0x400031D")]
		Count
	}
	[Token(Token = "0x2000082")]
	public enum EInputMethod
	{
		[Token(Token = "0x400031F")]
		MouseKeyboard,
		[Token(Token = "0x4000320")]
		Gamepad,
		[Token(Token = "0x4000321")]
		GearVrTouchpad,
		[Token(Token = "0x4000322")]
		GearVrOrientation,
		[Token(Token = "0x4000323")]
		Daydream,
		[Token(Token = "0x4000324")]
		RiftController,
		[Token(Token = "0x4000325")]
		Pico
	}
	[Token(Token = "0x2000083")]
	public enum EmitterState
	{
		[Token(Token = "0x4000327")]
		Play,
		[Token(Token = "0x4000328")]
		Pause,
		[Token(Token = "0x4000329")]
		Stop
	}
	[Token(Token = "0x2000084")]
	public enum EndState
	{
		[Token(Token = "0x400032B")]
		Draw = 1,
		[Token(Token = "0x400032C")]
		Won = 2,
		[Token(Token = "0x400032D")]
		Lost = 4,
		[Token(Token = "0x400032E")]
		ConnectionLostClient = 8,
		[Token(Token = "0x400032F")]
		ConnectionLostServer = 16,
		[Token(Token = "0x4000330")]
		Close = 32,
		[Token(Token = "0x4000331")]
		ForceLost = 64,
		[Token(Token = "0x4000332")]
		FoundMatch = 128,
		[Token(Token = "0x4000333")]
		MatchEnd = 199,
		[Token(Token = "0x4000334")]
		Disconnected = 24
	}
	[Token(Token = "0x2000085")]
	public enum EnemyAttackType
	{
		[Token(Token = "0x4000336")]
		Straight,
		[Token(Token = "0x4000337")]
		Arching
	}
	[Token(Token = "0x2000086")]
	public enum EnemyMovementType
	{
		[Token(Token = "0x4000339")]
		Moving,
		[Token(Token = "0x400033A")]
		Stationary
	}
	[Token(Token = "0x2000087")]
	public enum EnemyType
	{
		[Token(Token = "0x400033C")]
		None,
		[Token(Token = "0x400033D")]
		Trash,
		[Token(Token = "0x400033E")]
		Arcer,
		[Token(Token = "0x400033F")]
		Hulk
	}
	[Token(Token = "0x2000088")]
	public enum GameAccess
	{
		[Token(Token = "0x4000341")]
		Free,
		[Token(Token = "0x4000342")]
		Full
	}
	[Token(Token = "0x2000089")]
	public enum GateSoundClipType
	{
		[Token(Token = "0x4000344")]
		LightSmall,
		[Token(Token = "0x4000345")]
		LightLarge,
		[Token(Token = "0x4000346")]
		ScarabSeal
	}
	[Token(Token = "0x200008A")]
	public enum HandMaterialType
	{
		[Token(Token = "0x4000348")]
		Default,
		[Token(Token = "0x4000349")]
		Astral
	}
	[Token(Token = "0x200008B")]
	public enum VibrationForce
	{
		[Token(Token = "0x400034B")]
		Light,
		[Token(Token = "0x400034C")]
		Medium,
		[Token(Token = "0x400034D")]
		Hard
	}
	[Token(Token = "0x200008C")]
	public enum VibrateController
	{
		[Token(Token = "0x400034F")]
		Primary,
		[Token(Token = "0x4000350")]
		Secondary,
		[Token(Token = "0x4000351")]
		Both,
		[Token(Token = "0x4000352")]
		GamePad
	}
	[Token(Token = "0x200008D")]
	public enum VibrationType
	{
		[Token(Token = "0x4000354")]
		None,
		[Token(Token = "0x4000355")]
		Continuous,
		[Token(Token = "0x4000356")]
		Timed,
		[Token(Token = "0x4000357")]
		TimedIncreasing
	}
	[Token(Token = "0x200008E")]
	public enum HitSfxType
	{
		[Token(Token = "0x4000359")]
		Default,
		[Token(Token = "0x400035A")]
		Shield,
		[Token(Token = "0x400035B")]
		Lava,
		[Token(Token = "0x400035C")]
		Player
	}
	[Token(Token = "0x200008F")]
	public enum IconState
	{
		[Token(Token = "0x400035E")]
		Selected,
		[Token(Token = "0x400035F")]
		Deselected,
		[Token(Token = "0x4000360")]
		Channeling,
		[Token(Token = "0x4000361")]
		Disabled
	}
	[Token(Token = "0x2000090")]
	public enum InfoType
	{
		[Token(Token = "0x4000363")]
		InteractWand,
		[Token(Token = "0x4000364")]
		InteractRelics,
		[Token(Token = "0x4000365")]
		InteractUnsupported,
		[Token(Token = "0x4000366")]
		LoadoutLocked,
		[Token(Token = "0x4000367")]
		LoadoutUnlocked,
		[Token(Token = "0x4000368")]
		LoadoutIncomplete,
		[Token(Token = "0x4000369")]
		SpellToken,
		[Token(Token = "0x400036A")]
		SpellInfo,
		[Token(Token = "0x400036B")]
		Empty
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x2000091")]
	public enum InputButtons
	{
		[Token(Token = "0x400036D")]
		ActionMain,
		[Token(Token = "0x400036E")]
		ActionSecond,
		[Token(Token = "0x400036F")]
		Home,
		[Token(Token = "0x4000370")]
		Back
	}
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x2000092")]
	[Flags]
	public enum InputState
	{
		[Token(Token = "0x4000372")]
		None = 0,
		[Token(Token = "0x4000373")]
		Down = 1,
		[Token(Token = "0x4000374")]
		Up = 2,
		[Token(Token = "0x4000375")]
		Hold = 4,
		[Token(Token = "0x4000376")]
		AxisRight = 8,
		[Token(Token = "0x4000377")]
		AxisLeft = 0x10,
		[Token(Token = "0x4000378")]
		AxisUp = 0x20,
		[Token(Token = "0x4000379")]
		AxisDown = 0x40,
		[Token(Token = "0x400037A")]
		Axis = 0x78
	}
	[Token(Token = "0x2000093")]
	public enum ItemMaterialType
	{
		[Token(Token = "0x400037C")]
		Default,
		[Token(Token = "0x400037D")]
		Locked
	}
	[Token(Token = "0x2000094")]
	public enum ItemRarity
	{
		[Token(Token = "0x400037F")]
		Common,
		[Token(Token = "0x4000380")]
		Rare,
		[Token(Token = "0x4000381")]
		Epic
	}
	[Token(Token = "0x2000095")]
	public enum ItemType
	{
		[Token(Token = "0x4000383")]
		Wand = 1,
		[Token(Token = "0x4000384")]
		Character
	}
	[Token(Token = "0x2000096")]
	public enum JoinState
	{
		[Token(Token = "0x4000386")]
		Ranked = 0,
		[Token(Token = "0x4000387")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A888", Offset = "0xC7A888")]
		HostPublic = 1,
		[Token(Token = "0x4000388")]
		HostFriendly = 1,
		[Token(Token = "0x4000389")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A8C0", Offset = "0xC7A8C0")]
		HostInviteOnly = 2,
		[Token(Token = "0x400038A")]
		Join = 3,
		[Token(Token = "0x400038B")]
		Exploration = 4,
		[Token(Token = "0x400038C")]
		Bot = 5,
		[Token(Token = "0x400038D")]
		None = 6
	}
	[Token(Token = "0x2000097")]
	public enum Language
	{
		[Token(Token = "0x400038F")]
		English,
		[Token(Token = "0x4000390")]
		Chinese,
		[Token(Token = "0x4000391")]
		Japanese,
		[Token(Token = "0x4000392")]
		French,
		[Token(Token = "0x4000393")]
		German,
		[Token(Token = "0x4000394")]
		Spanish,
		[Token(Token = "0x4000395")]
		Korean,
		[Token(Token = "0x4000396")]
		Hindi
	}
	[Token(Token = "0x2000098")]
	public enum Legacy_CharacterType
	{
		[Token(Token = "0x4000398")]
		Weyman,
		[Token(Token = "0x4000399")]
		Blau,
		[Token(Token = "0x400039A")]
		Inquisitor,
		[Token(Token = "0x400039B")]
		Fennec,
		[Token(Token = "0x400039C")]
		Knot,
		[Token(Token = "0x400039D")]
		Takeo
	}
	[Token(Token = "0x2000099")]
	public enum Legacy_LootCacheType
	{
		[Token(Token = "0x400039F")]
		Default,
		[Token(Token = "0x40003A0")]
		Special
	}
	[Token(Token = "0x200009A")]
	public enum Legacy_MaskType
	{
		[Token(Token = "0x40003A2")]
		Termite_1,
		[Token(Token = "0x40003A3")]
		Termite_2,
		[Token(Token = "0x40003A4")]
		Termite_3,
		[Token(Token = "0x40003A5")]
		Termite_4,
		[Token(Token = "0x40003A6")]
		Termite_5,
		[Token(Token = "0x40003A7")]
		Termite_6,
		[Token(Token = "0x40003A8")]
		Descendant_1,
		[Token(Token = "0x40003A9")]
		Descendant_2,
		[Token(Token = "0x40003AA")]
		Descendant_3,
		[Token(Token = "0x40003AB")]
		Descendant_4,
		[Token(Token = "0x40003AC")]
		Descendant_5,
		[Token(Token = "0x40003AD")]
		Tranquil_1,
		[Token(Token = "0x40003AE")]
		Tranquil_2,
		[Token(Token = "0x40003AF")]
		Tranquil_3,
		[Token(Token = "0x40003B0")]
		Tranquil_4,
		[Token(Token = "0x40003B1")]
		Tranquil_5,
		[Token(Token = "0x40003B2")]
		Guard_1,
		[Token(Token = "0x40003B3")]
		Guard_2,
		[Token(Token = "0x40003B4")]
		Guard_3,
		[Token(Token = "0x40003B5")]
		Guard_4,
		[Token(Token = "0x40003B6")]
		Guard_5,
		[Token(Token = "0x40003B7")]
		Frenzied_1,
		[Token(Token = "0x40003B8")]
		Frenzied_2,
		[Token(Token = "0x40003B9")]
		Frenzied_3,
		[Token(Token = "0x40003BA")]
		Frenzied_4,
		[Token(Token = "0x40003BB")]
		Frenzied_5,
		[Token(Token = "0x40003BC")]
		Plague_1,
		[Token(Token = "0x40003BD")]
		Plague_2,
		[Token(Token = "0x40003BE")]
		Plague_3,
		[Token(Token = "0x40003BF")]
		Plague_4,
		[Token(Token = "0x40003C0")]
		Plague_5,
		[Token(Token = "0x40003C1")]
		Plague_6,
		[Token(Token = "0x40003C2")]
		Chameleon_1,
		[Token(Token = "0x40003C3")]
		Chameleon_2,
		[Token(Token = "0x40003C4")]
		Chameleon_3,
		[Token(Token = "0x40003C5")]
		Chameleon_4,
		[Token(Token = "0x40003C6")]
		Chameleon_5,
		[Token(Token = "0x40003C7")]
		Skull_1,
		[Token(Token = "0x40003C8")]
		Skull_2,
		[Token(Token = "0x40003C9")]
		Skull_3,
		[Token(Token = "0x40003CA")]
		Skull_4,
		[Token(Token = "0x40003CB")]
		Skull_5,
		[Token(Token = "0x40003CC")]
		Vitis_1,
		[Token(Token = "0x40003CD")]
		Vitis_2,
		[Token(Token = "0x40003CE")]
		Vitis_3
	}
	[Token(Token = "0x200009B")]
	public enum Legacy_OutfitType
	{
		[Token(Token = "0x40003D0")]
		Weyman_1,
		[Token(Token = "0x40003D1")]
		Weyman_2,
		[Token(Token = "0x40003D2")]
		Blau_1,
		[Token(Token = "0x40003D3")]
		Blau_2,
		[Token(Token = "0x40003D4")]
		Inquisitor_1,
		[Token(Token = "0x40003D5")]
		Inquisitor_2,
		[Token(Token = "0x40003D6")]
		Fennec_1,
		[Token(Token = "0x40003D7")]
		Fennec_2,
		[Token(Token = "0x40003D8")]
		Knot_1,
		[Token(Token = "0x40003D9")]
		Knot_2,
		[Token(Token = "0x40003DA")]
		Takeo_1,
		[Token(Token = "0x40003DB")]
		Takeo_2
	}
	[Token(Token = "0x200009C")]
	public enum Legacy_WandType
	{
		[Token(Token = "0x40003DD")]
		Classic,
		[Token(Token = "0x40003DE")]
		Sword,
		[Token(Token = "0x40003DF")]
		Inductor,
		[Token(Token = "0x40003E0")]
		Lion,
		[Token(Token = "0x40003E1")]
		Remnant,
		[Token(Token = "0x40003E2")]
		Scepter,
		[Token(Token = "0x40003E3")]
		SnakeGold,
		[Token(Token = "0x40003E4")]
		SnakeSilver,
		[Token(Token = "0x40003E5")]
		SnakeJade,
		[Token(Token = "0x40003E6")]
		Invicta,
		[Token(Token = "0x40003E7")]
		None
	}
	[Token(Token = "0x200009D")]
	[Flags]
	public enum Level
	{
		[Token(Token = "0x40003E9")]
		Unknown = 0,
		[Token(Token = "0x40003EA")]
		MainMenu = 1,
		[Token(Token = "0x40003EB")]
		Workshop = 2,
		[Token(Token = "0x40003EC")]
		Basement = 4,
		[Token(Token = "0x40003ED")]
		Lobby = 8,
		[Token(Token = "0x40003EE")]
		AspisPrison = 0x10,
		[Token(Token = "0x40003EF")]
		TempleOfOphidian = 0x20,
		[Token(Token = "0x40003F0")]
		TheCelestialHalls = 0x40,
		[Token(Token = "0x40003F1")]
		OrtusStation = 0x80,
		[Token(Token = "0x40003F2")]
		DeadMastersVale = 0x100,
		[Token(Token = "0x40003F3")]
		Marrakech = 0x200,
		[Token(Token = "0x40003F4")]
		Market = 0x400,
		[Token(Token = "0x40003F5")]
		SanctumOfSahir = 0x800,
		[Token(Token = "0x40003F6")]
		TheCelestialHalls_AIBot = 0x1000,
		[Token(Token = "0x40003F7")]
		FountainOfTheFallen = 0x2000,
		[Token(Token = "0x40003F8")]
		UnpausableLevel = 7,
		[Token(Token = "0x40003F9")]
		InteractableLevel = 0xF,
		[Token(Token = "0x40003FA")]
		Arena = 0x39F4
	}
	[Token(Token = "0x200009E")]
	public enum LobbyLeaveReason
	{
		[Token(Token = "0x40003FC")]
		Quit = 1,
		[Token(Token = "0x40003FD")]
		MatchFound = 2,
		[Token(Token = "0x40003FE")]
		Left = 4
	}
	[Token(Token = "0x200009F")]
	public enum LobbyState
	{
		[Token(Token = "0x4000400")]
		Pre,
		[Token(Token = "0x4000401")]
		Post
	}
	[Token(Token = "0x20000A0")]
	public enum LogColor
	{
		[Token(Token = "0x4000403")]
		Default,
		[Token(Token = "0x4000404")]
		System,
		[Token(Token = "0x4000405")]
		Loading,
		[Token(Token = "0x4000406")]
		Login,
		[Token(Token = "0x4000407")]
		PlayFab,
		[Token(Token = "0x4000408")]
		Bundles,
		[Token(Token = "0x4000409")]
		Debug,
		[Token(Token = "0x400040A")]
		PlayerData,
		[Token(Token = "0x400040B")]
		Tutorial,
		[Token(Token = "0x400040C")]
		Database,
		[Token(Token = "0x400040D")]
		ObjectPooling,
		[Token(Token = "0x400040E")]
		PlayerPrefs,
		[Token(Token = "0x400040F")]
		Conversion,
		[Token(Token = "0x4000410")]
		CustomEvent,
		[Token(Token = "0x4000411")]
		Photon,
		[Token(Token = "0x4000412")]
		Inventory,
		[Token(Token = "0x4000413")]
		PlayFabFieldParsing,
		[Token(Token = "0x4000414")]
		VoIP,
		[Token(Token = "0x4000415")]
		Events,
		[Token(Token = "0x4000416")]
		Matchmaking,
		[Token(Token = "0x4000417")]
		Achievements,
		[Token(Token = "0x4000418")]
		Audio,
		[Token(Token = "0x4000419")]
		WandProperty
	}
	[Token(Token = "0x20000A1")]
	public enum MaskMeshType
	{
		[Token(Token = "0x400041B")]
		Termite,
		[Token(Token = "0x400041C")]
		Descendant,
		[Token(Token = "0x400041D")]
		Tranquil,
		[Token(Token = "0x400041E")]
		Guard,
		[Token(Token = "0x400041F")]
		Frenzied,
		[Token(Token = "0x4000420")]
		Plague,
		[Token(Token = "0x4000421")]
		Chameleon,
		[Token(Token = "0x4000422")]
		Skull,
		[Token(Token = "0x4000423")]
		Vitis
	}
	[Token(Token = "0x20000A2")]
	public enum MatchEndReasonType
	{
		[Token(Token = "0x4000425")]
		Elimination = 1,
		[Token(Token = "0x4000426")]
		Time = 2,
		[Token(Token = "0x4000427")]
		OpponentLeft = 4,
		[Token(Token = "0x4000428")]
		ExcessivePause = 8,
		[Token(Token = "0x4000429")]
		OpponentDisconnect = 0x10,
		[Token(Token = "0x400042A")]
		FoundMatch = 0x20
	}
	[Token(Token = "0x20000A3")]
	public enum MatchRewardType
	{
		[Token(Token = "0x400042C")]
		Win,
		[Token(Token = "0x400042D")]
		Loss,
		[Token(Token = "0x400042E")]
		Draw,
		[Token(Token = "0x400042F")]
		FirstMatchOfTheDay,
		[Token(Token = "0x4000430")]
		FirstWinOfTheDay,
		[Token(Token = "0x4000431")]
		FlawlessVictory,
		[Token(Token = "0x4000432")]
		WinWithoutPickups,
		[Token(Token = "0x4000433")]
		FirstBlood,
		[Token(Token = "0x4000434")]
		HighestDamage,
		[Token(Token = "0x4000435")]
		Stop
	}
	[Token(Token = "0x20000A4")]
	public enum MatchStartedReasonType
	{
		[Token(Token = "0x4000437")]
		Exploration = 1,
		[Token(Token = "0x4000438")]
		NormalMatch = 2,
		[Token(Token = "0x4000439")]
		Rematch = 4,
		[Token(Token = "0x400043A")]
		Bot = 8
	}
	[Token(Token = "0x20000A5")]
	[Flags]
	public enum MatchType
	{
		[Token(Token = "0x400043C")]
		Competitive = 1,
		[Token(Token = "0x400043D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A918", Offset = "0xC7A918")]
		Public = 2,
		[Token(Token = "0x400043E")]
		Friendly = 2,
		[Token(Token = "0x400043F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A950", Offset = "0xC7A950")]
		InviteOnly = 4,
		[Token(Token = "0x4000440")]
		Exhibition = 8,
		[Token(Token = "0x4000441")]
		Exploration = 0x10,
		[Token(Token = "0x4000442")]
		Tutorial = 0x20,
		[Token(Token = "0x4000443")]
		Bot = 0x40,
		[Token(Token = "0x4000444")]
		None = 0x80,
		[Token(Token = "0x4000445")]
		Matchmade = 9,
		[Token(Token = "0x4000446")]
		Casual = 0x42,
		[Token(Token = "0x4000447")]
		SoloExperience = 0xB0,
		[Token(Token = "0x4000448")]
		SinglePlayer = 0xF0,
		[Token(Token = "0x4000449")]
		MultiPlayer = -241
	}
	[Token(Token = "0x20000A6")]
	public enum MirusMenuType
	{
		[Token(Token = "0x400044B")]
		Start,
		[Token(Token = "0x400044C")]
		DuelFriend,
		[Token(Token = "0x400044D")]
		StartDuel,
		[Token(Token = "0x400044E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A988", Offset = "0xC7A988")]
		HostFriend,
		[Token(Token = "0x400044F")]
		LevelSelect,
		[Token(Token = "0x4000450")]
		ExplorationLevelSelect,
		[Token(Token = "0x4000451")]
		MatchSelect,
		[Token(Token = "0x4000452")]
		OfflinePlay,
		[Token(Token = "0x4000453")]
		Close,
		[Token(Token = "0x4000454")]
		Exploration,
		[Token(Token = "0x4000455")]
		Basement,
		[Token(Token = "0x4000456")]
		FreeVersion,
		[Token(Token = "0x4000457")]
		FreeVersionInformation,
		[Token(Token = "0x4000458")]
		ThankYou
	}
	[Token(Token = "0x20000A7")]
	public enum MusicType
	{
		[Token(Token = "0x400045A")]
		Default,
		[Token(Token = "0x400045B")]
		LastMinute
	}
	[Token(Token = "0x20000A8")]
	public enum NetworkState
	{
		[Token(Token = "0x400045D")]
		Unavailable = 0,
		[Token(Token = "0x400045E")]
		Offline = 1,
		[Token(Token = "0x400045F")]
		InProgress = 2,
		[Token(Token = "0x4000460")]
		InLobby = 4,
		[Token(Token = "0x4000461")]
		InRoom = 8,
		[Token(Token = "0x4000462")]
		Connected = 12
	}
	[Token(Token = "0x20000A9")]
	public enum Option
	{
		[Token(Token = "0x4000464")]
		None,
		[Token(Token = "0x4000465")]
		Menu,
		[Token(Token = "0x4000466")]
		Quit,
		[Token(Token = "0x4000467")]
		Options,
		[Token(Token = "0x4000468")]
		Music,
		[Token(Token = "0x4000469")]
		PlayerVoIP,
		[Token(Token = "0x400046A")]
		OpponentVoIP,
		[Token(Token = "0x400046B")]
		Grip,
		[Token(Token = "0x400046C")]
		Ready,
		[Token(Token = "0x400046D")]
		ControlSchemeWandInput,
		[Token(Token = "0x400046E")]
		ControlSchemeDualWield
	}
	[Token(Token = "0x20000AA")]
	public enum ParseState
	{
		[Token(Token = "0x4000470")]
		Success,
		[Token(Token = "0x4000471")]
		Failure,
		[Token(Token = "0x4000472")]
		Exception
	}
	[Token(Token = "0x20000AB")]
	public enum PickupType
	{
		[Token(Token = "0x4000474")]
		Health,
		[Token(Token = "0x4000475")]
		Mana,
		[Token(Token = "0x4000476")]
		FreeTeleport
	}
	[Token(Token = "0x20000AC")]
	[Flags]
	public enum PlatformBuildTarget
	{
		[Token(Token = "0x4000478")]
		OculusAndroid = 2,
		[Token(Token = "0x4000479")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7A9D0", Offset = "0xC7A9D0")]
		Google = 4,
		[Token(Token = "0x400047A")]
		Pico = 8,
		[Token(Token = "0x400047B")]
		Rift = 0x10,
		[Token(Token = "0x400047C")]
		Steam = 0x20,
		[Token(Token = "0x400047D")]
		Viveport = 0x40,
		[Token(Token = "0x400047E")]
		MiVr = 0x80,
		[Token(Token = "0x400047F")]
		Quest = 0x100,
		[Token(Token = "0x4000480")]
		PlayStation = 0x200,
		[Token(Token = "0x4000481")]
		PicoNeo2 = 0x400
	}
	[Token(Token = "0x20000AD")]
	[Flags]
	public enum PlatformType
	{
		[Token(Token = "0x4000483")]
		GearVr = 1,
		[Token(Token = "0x4000484")]
		Go = 2,
		[Token(Token = "0x4000485")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7AA18", Offset = "0xC7AA18")]
		Google = 4,
		[Token(Token = "0x4000486")]
		Pico = 8,
		[Token(Token = "0x4000487")]
		Rift = 0x10,
		[Token(Token = "0x4000488")]
		Steam = 0x20,
		[Token(Token = "0x4000489")]
		Viveport = 0x40,
		[Token(Token = "0x400048A")]
		MiVr = 0x80,
		[Token(Token = "0x400048B")]
		Quest = 0x100,
		[Token(Token = "0x400048C")]
		PlayStation = 0x200,
		[Token(Token = "0x400048D")]
		PicoNeo2 = 0x400
	}
	[Token(Token = "0x20000AE")]
	public enum PlatformTarget
	{
		[Token(Token = "0x400048F")]
		Oculus = 275,
		[Token(Token = "0x4000490")]
		OculusAndroid = 259,
		[Token(Token = "0x4000491")]
		Pico = 1032,
		[Token(Token = "0x4000492")]
		Android = 1419,
		[Token(Token = "0x4000493")]
		LowEndMobile = 139,
		[Token(Token = "0x4000494")]
		HighEndMobile = 1280,
		[Token(Token = "0x4000495")]
		PC = 624,
		[Token(Token = "0x4000496")]
		PlayStation = 512,
		[Token(Token = "0x4000497")]
		Invite = 307,
		[Token(Token = "0x4000498")]
		OpenVr = 96,
		[Token(Token = "0x4000499")]
		Android3DoF = 139,
		[Token(Token = "0x400049A")]
		Android6DoF = 1280,
		[Token(Token = "0x400049B")]
		SixDoF = 1904
	}
	[Token(Token = "0x20000AF")]
	public enum PoolObjectType
	{
		[Token(Token = "0x400049D")]
		Teleport,
		[Token(Token = "0x400049E")]
		TeleportArrive,
		[Token(Token = "0x400049F")]
		ArmorOfTheSunStart,
		[Token(Token = "0x40004A0")]
		ArmorOfTheSunEnd,
		[Token(Token = "0x40004A1")]
		CerberusCollarsInit,
		[Token(Token = "0x40004A2")]
		CurseOfTheUndeadExplosion,
		[Token(Token = "0x40004A3")]
		OxymoraProjectileBad,
		[Token(Token = "0x40004A4")]
		OxymoraProjectileGood,
		[Token(Token = "0x40004A5")]
		SkullSpecterInit,
		[Token(Token = "0x40004A6")]
		SkullSpecterProjectile,
		[Token(Token = "0x40004A7")]
		StoneDemonProjectile,
		[Token(Token = "0x40004A8")]
		ShockRifleSmall,
		[Token(Token = "0x40004A9")]
		DevilsTwinDead,
		[Token(Token = "0x40004AA")]
		TrailProjectile,
		[Token(Token = "0x40004AB")]
		SkeletonProjectile,
		[Token(Token = "0x40004AC")]
		ValeCrystalProjectile,
		[Token(Token = "0x40004AD")]
		ValeCrystalHeal,
		[Token(Token = "0x40004AE")]
		TrashProjectile,
		[Token(Token = "0x40004AF")]
		ArcerProjectile,
		[Token(Token = "0x40004B0")]
		HulkLightning,
		[Token(Token = "0x40004B1")]
		CurseOfTheUndeadLingering,
		[Token(Token = "0x40004B2")]
		TileDamageOccupier
	}
	[Token(Token = "0x20000B0")]
	public enum PositionalTracking
	{
		[Token(Token = "0x40004B4")]
		NotAllowed,
		[Token(Token = "0x40004B5")]
		Allowed,
		[Token(Token = "0x40004B6")]
		Used
	}
	[Token(Token = "0x20000B1")]
	[Flags]
	public enum PostTutorialTriggerType
	{
		[Token(Token = "0x40004B8")]
		TeleportedToPortal = 1,
		[Token(Token = "0x40004B9")]
		EnteredLobby = 2,
		[Token(Token = "0x40004BA")]
		FoundOpponent = 8,
		[Token(Token = "0x40004BB")]
		EnteredWorkshop = 0x10
	}
	[Token(Token = "0x20000B2")]
	public enum PrimaryAxisState
	{
		[Token(Token = "0x40004BD")]
		Release = -1,
		[Token(Token = "0x40004BE")]
		Up = 1,
		[Token(Token = "0x40004BF")]
		Down = 4,
		[Token(Token = "0x40004C0")]
		Left = 2,
		[Token(Token = "0x40004C1")]
		Right = 3
	}
	[Token(Token = "0x20000B3")]
	public enum ProjectileBehaviour
	{
		[Token(Token = "0x40004C3")]
		Arching,
		[Token(Token = "0x40004C4")]
		Straight,
		[Token(Token = "0x40004C5")]
		Threaded,
		[Token(Token = "0x40004C6")]
		Homing,
		[Token(Token = "0x40004C7")]
		Scatter,
		[Token(Token = "0x40004C8")]
		Instant,
		[Token(Token = "0x40004C9")]
		Arrow,
		[Token(Token = "0x40004CA")]
		Tile
	}
	[Token(Token = "0x20000B4")]
	public enum RatingTitle
	{
		[Token(Token = "0x40004CC")]
		GoatHerder,
		[Token(Token = "0x40004CD")]
		DustCollector,
		[Token(Token = "0x40004CE")]
		RelicChaser,
		[Token(Token = "0x40004CF")]
		Beyonder,
		[Token(Token = "0x40004D0")]
		Wandsmith,
		[Token(Token = "0x40004D1")]
		Outlaw,
		[Token(Token = "0x40004D2")]
		Wielder,
		[Token(Token = "0x40004D3")]
		Aspirant,
		[Token(Token = "0x40004D4")]
		Duelist,
		[Token(Token = "0x40004D5")]
		Tactician,
		[Token(Token = "0x40004D6")]
		Veteran,
		[Token(Token = "0x40004D7")]
		Champion,
		[Token(Token = "0x40004D8")]
		GrandMaster,
		[Token(Token = "0x40004D9")]
		Legend,
		[Token(Token = "0x40004DA")]
		Developer,
		[Token(Token = "0x40004DB")]
		Bot
	}
	[Token(Token = "0x20000B5")]
	public enum RelicType
	{
		[Token(Token = "0x40004DD")]
		Life,
		[Token(Token = "0x40004DE")]
		Death,
		[Token(Token = "0x40004DF")]
		Chaos,
		[Token(Token = "0x40004E0")]
		Order,
		[Token(Token = "0x40004E1")]
		Teleport
	}
}
namespace Cortopia.Scripts.Enums
{
	[Token(Token = "0x20000B6")]
	public enum ResetBehaviour
	{
		[Token(Token = "0x40004E3")]
		Position = 1,
		[Token(Token = "0x40004E4")]
		Rotation = 2,
		[Token(Token = "0x40004E5")]
		Scale = 4,
		[Token(Token = "0x40004E6")]
		PositionAndRotation = 3,
		[Token(Token = "0x40004E7")]
		All = 7
	}
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x20000B7")]
	public enum ReticleType
	{
		[Token(Token = "0x40004E9")]
		Default,
		[Token(Token = "0x40004EA")]
		Defense,
		[Token(Token = "0x40004EB")]
		CloseCombat,
		[Token(Token = "0x40004EC")]
		Tile
	}
	[Token(Token = "0x20000B8")]
	public enum RewardType
	{
		[Token(Token = "0x40004EE")]
		Spell,
		[Token(Token = "0x40004EF")]
		Dust
	}
	[Token(Token = "0x20000B9")]
	public enum RoomCreationReason
	{
		[Token(Token = "0x40004F1")]
		None = 0,
		[Token(Token = "0x40004F2")]
		Debug = 1,
		[Token(Token = "0x40004F3")]
		Basement = 2,
		[Token(Token = "0x40004F4")]
		Survival = 4,
		[Token(Token = "0x40004F5")]
		Coordinated = 8,
		[Token(Token = "0x40004F6")]
		HostRanked = 16,
		[Token(Token = "0x40004F7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7AA60", Offset = "0xC7AA60")]
		HostPublic = 32,
		[Token(Token = "0x40004F8")]
		HostFriendly = 32,
		[Token(Token = "0x40004F9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7AA98", Offset = "0xC7AA98")]
		HostInviteOnly = 64,
		[Token(Token = "0x40004FA")]
		LevelExploration = 128,
		[Token(Token = "0x40004FB")]
		Bot = 256,
		[Token(Token = "0x40004FC")]
		SinglePlayer = 135,
		[Token(Token = "0x40004FD")]
		Friendly = 352
	}
	[Token(Token = "0x20000BA")]
	public enum RoomCreationType
	{
		[Token(Token = "0x40004FF")]
		Create,
		[Token(Token = "0x4000500")]
		JoinOrCreate,
		[Token(Token = "0x4000501")]
		Join
	}
	[Token(Token = "0x20000BB")]
	public enum RotationDirection
	{
		[Token(Token = "0x4000503")]
		Left,
		[Token(Token = "0x4000504")]
		Right,
		[Token(Token = "0x4000505")]
		Back
	}
	[Token(Token = "0x20000BC")]
	public enum SlotState
	{
		[Token(Token = "0x4000507")]
		Enabled = 1,
		[Token(Token = "0x4000508")]
		Disabled = 2,
		[Token(Token = "0x4000509")]
		Occupied = 4,
		[Token(Token = "0x400050A")]
		Locked = 8,
		[Token(Token = "0x400050B")]
		Undraggable = 10
	}
	[Token(Token = "0x20000BD")]
	public enum Spell
	{
		[Token(Token = "0x400050D")]
		None,
		[Token(Token = "0x400050E")]
		Spell_Teleport,
		[Token(Token = "0x400050F")]
		Spell_ShieldOfLight,
		[Token(Token = "0x4000510")]
		Spell_HeavenlyDome,
		[Token(Token = "0x4000511")]
		Spell_ArmorOfTheSun,
		[Token(Token = "0x4000512")]
		Spell_LightningStrike,
		[Token(Token = "0x4000513")]
		Spell_AcidCloud,
		[Token(Token = "0x4000514")]
		Spell_DevilsTwins,
		[Token(Token = "0x4000515")]
		Spell_HailOfDeath,
		[Token(Token = "0x4000516")]
		Spell_DevilsSpit,
		[Token(Token = "0x4000517")]
		Spell_FlamingPhoenix,
		[Token(Token = "0x4000518")]
		Spell_ElectricFist,
		[Token(Token = "0x4000519")]
		Spell_ChaosLeap,
		[Token(Token = "0x400051A")]
		Spell_BlazingMeteor,
		[Token(Token = "0x400051B")]
		Spell_StoneDemon,
		[Token(Token = "0x400051C")]
		Spell_SoilSpikes,
		[Token(Token = "0x400051D")]
		Spell_PetrifyingPrison,
		[Token(Token = "0x400051E")]
		Spell_MagicMissile,
		[Token(Token = "0x400051F")]
		Spell_BloodBolt,
		[Token(Token = "0x4000520")]
		Spell_CurseOfTheUndead,
		[Token(Token = "0x4000521")]
		Spell_DragonsBreath,
		[Token(Token = "0x4000522")]
		Spell_Oxymora,
		[Token(Token = "0x4000523")]
		Spell_Demi,
		[Token(Token = "0x4000524")]
		Spell_DiscOfAntioch,
		[Token(Token = "0x4000525")]
		Spell_CerberusCollars,
		[Token(Token = "0x4000526")]
		Spell_ChillingClutch,
		[Token(Token = "0x4000527")]
		Spell_SkullSpecter,
		[Token(Token = "0x4000528")]
		Spell_Rocket,
		[Token(Token = "0x4000529")]
		Spell_Alchemy,
		[Token(Token = "0x400052A")]
		Spell_ShockRifle,
		[Token(Token = "0x400052B")]
		Spell_Dispel,
		[Token(Token = "0x400052C")]
		Spell_DivineRetribution,
		[Token(Token = "0x400052D")]
		Spell_ComboShot,
		[Token(Token = "0x400052E")]
		Spell_AstralProjection,
		[Token(Token = "0x400052F")]
		Spell_CalciteShield,
		[Token(Token = "0x4000530")]
		Spell_CrystalShards
	}
	[Token(Token = "0x20000BE")]
	public enum TagType
	{
		[Token(Token = "0x4000532")]
		Unknown,
		[Token(Token = "0x4000533")]
		Player,
		[Token(Token = "0x4000534")]
		Dummy,
		[Token(Token = "0x4000535")]
		Lava,
		[Token(Token = "0x4000536")]
		Environment,
		[Token(Token = "0x4000537")]
		Shield,
		[Token(Token = "0x4000538")]
		Projectile,
		[Token(Token = "0x4000539")]
		Destructable,
		[Token(Token = "0x400053A")]
		KillPlane,
		[Token(Token = "0x400053B")]
		Train
	}
}
[Token(Token = "0x20000BF")]
public enum TileOccupyState
{
	[Token(Token = "0x400053D")]
	Unoccupied,
	[Token(Token = "0x400053E")]
	Occupied,
	[Token(Token = "0x400053F")]
	Locked
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x20000C0")]
	public enum Title
	{
		[Token(Token = "0x4000541")]
		SeasonOneChampion = 100,
		[Token(Token = "0x4000542")]
		SeasonTwoChampion = 101,
		[Token(Token = "0x4000543")]
		SeasonThreeChampion = 102,
		[Token(Token = "0x4000544")]
		SeasonFourChampion = 103,
		[Token(Token = "0x4000545")]
		SeasonFiveChampion = 104,
		[Token(Token = "0x4000546")]
		SeasonSixChampion = 105,
		[Token(Token = "0x4000547")]
		SeasonSevenChampion = 106,
		[Token(Token = "0x4000548")]
		SeasonEightChampion = 107,
		[Token(Token = "0x4000549")]
		SeasonNineChampion = 108,
		[Token(Token = "0x400054A")]
		SeasonTenChampion = 109,
		[Token(Token = "0x400054B")]
		SeasonElevenChampion = 110,
		[Token(Token = "0x400054C")]
		SeasonTwelveChampion = 111,
		[Token(Token = "0x400054D")]
		SeasonThirteenChampion = 112,
		[Token(Token = "0x400054E")]
		SeasonFourteenChampion = 113,
		[Token(Token = "0x400054F")]
		SeasonFifteenChampion = 114,
		[Token(Token = "0x4000550")]
		SeasonSixteenChampion = 115,
		[Token(Token = "0x4000551")]
		SeasonSeventeenChampion = 116,
		[Token(Token = "0x4000552")]
		SeasonEighteenChampion = 117,
		[Token(Token = "0x4000553")]
		SeasonNineteenChampion = 118,
		[Token(Token = "0x4000554")]
		SeasonTwentyChampion = 119,
		[Token(Token = "0x4000555")]
		SeasonTwentyOneChampion = 120,
		[Token(Token = "0x4000556")]
		SeasonTwentyTwoChampion = 121,
		[Token(Token = "0x4000557")]
		SeasonTwentyThreeChampion = 122,
		[Token(Token = "0x4000558")]
		SeasonTwentyFourChampion = 123,
		[Token(Token = "0x4000559")]
		SeasonTwentyFiveChampion = 124,
		[Token(Token = "0x400055A")]
		SeasonTwentySixChampion = 125,
		[Token(Token = "0x400055B")]
		SeasonTwentySevenChampion = 126,
		[Token(Token = "0x400055C")]
		SeasonTwentyEightChampion = 127,
		[Token(Token = "0x400055D")]
		SeasonTwentyNineChampion = 128,
		[Token(Token = "0x400055E")]
		SeasonThirtyChampion = 129,
		[Token(Token = "0x400055F")]
		SeasonThirtyOneChampion = 130,
		[Token(Token = "0x4000560")]
		SeasonThirtyTwoChampion = 131,
		[Token(Token = "0x4000561")]
		SeasonThirtyThreeChampion = 132,
		[Token(Token = "0x4000562")]
		SeasonThirtyFourChampion = 133,
		[Token(Token = "0x4000563")]
		SeasonThirtyFiveChampion = 134,
		[Token(Token = "0x4000564")]
		SeasonThirtySixChampion = 135,
		[Token(Token = "0x4000565")]
		SeasonThirtySevenChampion = 136,
		[Token(Token = "0x4000566")]
		SeasonThirtyEightChampion = 137,
		[Token(Token = "0x4000567")]
		SeasonThirtyNineChampion = 138,
		[Token(Token = "0x4000568")]
		SeasonFourtyChampion = 139,
		[Token(Token = "0x4000569")]
		SeasonFourtyOneChampion = 140,
		[Token(Token = "0x400056A")]
		SeasonFourtyTwoChampion = 141,
		[Token(Token = "0x400056B")]
		SeasonFourtyThreeChampion = 142,
		[Token(Token = "0x400056C")]
		SeasonFourtyFourChampion = 143,
		[Token(Token = "0x400056D")]
		SeasonFourtyFiveChampion = 144,
		[Token(Token = "0x400056E")]
		SeasonFourtySixChampion = 145,
		[Token(Token = "0x400056F")]
		SeasonFourtySevenChampion = 146,
		[Token(Token = "0x4000570")]
		SeasonFourtyEightChampion = 147,
		[Token(Token = "0x4000571")]
		SeasonFourtyNineChampion = 148,
		[Token(Token = "0x4000572")]
		SeasonFiftyChampion = 149,
		[Token(Token = "0x4000573")]
		SeasonOneTopTen = 200,
		[Token(Token = "0x4000574")]
		SeasonTwoTopTen = 201,
		[Token(Token = "0x4000575")]
		SeasonThreeTopTen = 202,
		[Token(Token = "0x4000576")]
		SeasonFourTopTen = 203,
		[Token(Token = "0x4000577")]
		SeasonFiveTopTen = 204,
		[Token(Token = "0x4000578")]
		SeasonSixTopTen = 205,
		[Token(Token = "0x4000579")]
		SeasonSevenTopTen = 206,
		[Token(Token = "0x400057A")]
		SeasonEightTopTen = 207,
		[Token(Token = "0x400057B")]
		SeasonNineTopTen = 208,
		[Token(Token = "0x400057C")]
		SeasonTenTopTen = 209,
		[Token(Token = "0x400057D")]
		SeasonElevenTopTen = 210,
		[Token(Token = "0x400057E")]
		SeasonTwelveTopTen = 211,
		[Token(Token = "0x400057F")]
		SeasonThirteenTopTen = 212,
		[Token(Token = "0x4000580")]
		SeasonFourteenTopTen = 213,
		[Token(Token = "0x4000581")]
		SeasonFifteenTopTen = 214,
		[Token(Token = "0x4000582")]
		SeasonSixteenTopTen = 215,
		[Token(Token = "0x4000583")]
		SeasonSeventeenTopTen = 216,
		[Token(Token = "0x4000584")]
		SeasonEighteenTopTen = 217,
		[Token(Token = "0x4000585")]
		SeasonNineteenTopTen = 218,
		[Token(Token = "0x4000586")]
		SeasonTwentyTopTen = 219,
		[Token(Token = "0x4000587")]
		SeasonTwentyOneTopTen = 220,
		[Token(Token = "0x4000588")]
		SeasonTwentyTwoTopTen = 221,
		[Token(Token = "0x4000589")]
		SeasonTwentyThreeTopTen = 222,
		[Token(Token = "0x400058A")]
		SeasonTwentyFourTopTen = 223,
		[Token(Token = "0x400058B")]
		SeasonTwentyFiveTopTen = 224,
		[Token(Token = "0x400058C")]
		SeasonTwentySixTopTen = 225,
		[Token(Token = "0x400058D")]
		SeasonTwentySevenTopTen = 226,
		[Token(Token = "0x400058E")]
		SeasonTwentyEightTopTen = 227,
		[Token(Token = "0x400058F")]
		SeasonTwentyNineTopTen = 228,
		[Token(Token = "0x4000590")]
		SeasonThirtyTopTen = 229,
		[Token(Token = "0x4000591")]
		SeasonThirtyOneTopTen = 230,
		[Token(Token = "0x4000592")]
		SeasonThirtyTwoTopTen = 231,
		[Token(Token = "0x4000593")]
		SeasonThirtyThreeTopTen = 232,
		[Token(Token = "0x4000594")]
		SeasonThirtyFourTopTen = 233,
		[Token(Token = "0x4000595")]
		SeasonThirtyFiveTopTen = 234,
		[Token(Token = "0x4000596")]
		SeasonThirtySixTopTen = 235,
		[Token(Token = "0x4000597")]
		SeasonThirtySevenTopTen = 236,
		[Token(Token = "0x4000598")]
		SeasonThirtyEightTopTen = 237,
		[Token(Token = "0x4000599")]
		SeasonThirtyNineTopTen = 238,
		[Token(Token = "0x400059A")]
		SeasonFourtyTopTen = 239,
		[Token(Token = "0x400059B")]
		SeasonFourtyOneTopTen = 240,
		[Token(Token = "0x400059C")]
		SeasonFourtyTwoTopTen = 241,
		[Token(Token = "0x400059D")]
		SeasonFourtyThreeTopTen = 242,
		[Token(Token = "0x400059E")]
		SeasonFourtyFourTopTen = 243,
		[Token(Token = "0x400059F")]
		SeasonFourtyFiveTopTen = 244,
		[Token(Token = "0x40005A0")]
		SeasonFourtySixTopTen = 245,
		[Token(Token = "0x40005A1")]
		SeasonFourtySevenTopTen = 246,
		[Token(Token = "0x40005A2")]
		SeasonFourtyEightTopTen = 247,
		[Token(Token = "0x40005A3")]
		SeasonFourtyNineTopTen = 248,
		[Token(Token = "0x40005A4")]
		SeasonFiftyTopTen = 249,
		[Token(Token = "0x40005A5")]
		SeasonOneTopHundred = 300,
		[Token(Token = "0x40005A6")]
		SeasonTwoTopHundred = 301,
		[Token(Token = "0x40005A7")]
		SeasonThreeTopHundred = 302,
		[Token(Token = "0x40005A8")]
		SeasonFourTopHundred = 303,
		[Token(Token = "0x40005A9")]
		SeasonFiveTopHundred = 304,
		[Token(Token = "0x40005AA")]
		SeasonSixTopHundred = 305,
		[Token(Token = "0x40005AB")]
		SeasonSevenTopHundred = 306,
		[Token(Token = "0x40005AC")]
		SeasonEightTopHundred = 307,
		[Token(Token = "0x40005AD")]
		SeasonNineTopHundred = 308,
		[Token(Token = "0x40005AE")]
		SeasonTenTopHundred = 309,
		[Token(Token = "0x40005AF")]
		SeasonElevenTopHundred = 310,
		[Token(Token = "0x40005B0")]
		SeasonTwelveTopHundred = 311,
		[Token(Token = "0x40005B1")]
		SeasonThirteenTopHundred = 312,
		[Token(Token = "0x40005B2")]
		SeasonFourteenTopHundred = 313,
		[Token(Token = "0x40005B3")]
		SeasonFifteenTopHundred = 314,
		[Token(Token = "0x40005B4")]
		SeasonSixteenTopHundred = 315,
		[Token(Token = "0x40005B5")]
		SeasonSeventeenTopHundred = 316,
		[Token(Token = "0x40005B6")]
		SeasonEighteenTopHundred = 317,
		[Token(Token = "0x40005B7")]
		SeasonNineteenTopHundred = 318,
		[Token(Token = "0x40005B8")]
		SeasonTwentyTopHundred = 319,
		[Token(Token = "0x40005B9")]
		SeasonTwentyOneTopHundred = 320,
		[Token(Token = "0x40005BA")]
		SeasonTwentyTwoTopHundred = 321,
		[Token(Token = "0x40005BB")]
		SeasonTwentyThreeTopHundred = 322,
		[Token(Token = "0x40005BC")]
		SeasonTwentyFourTopHundred = 323,
		[Token(Token = "0x40005BD")]
		SeasonTwentyFiveTopHundred = 324,
		[Token(Token = "0x40005BE")]
		SeasonTwentySixTopHundred = 325,
		[Token(Token = "0x40005BF")]
		SeasonTwentySevenTopHundred = 326,
		[Token(Token = "0x40005C0")]
		SeasonTwentyEightTopHundred = 327,
		[Token(Token = "0x40005C1")]
		SeasonTwentyNineTopHundred = 328,
		[Token(Token = "0x40005C2")]
		SeasonThirtyTopHundred = 329,
		[Token(Token = "0x40005C3")]
		SeasonThirtyOneTopHundred = 330,
		[Token(Token = "0x40005C4")]
		SeasonThirtyTwoTopHundred = 331,
		[Token(Token = "0x40005C5")]
		SeasonThirtyThreeTopHundred = 332,
		[Token(Token = "0x40005C6")]
		SeasonThirtyFourTopHundred = 333,
		[Token(Token = "0x40005C7")]
		SeasonThirtyFiveTopHundred = 334,
		[Token(Token = "0x40005C8")]
		SeasonThirtySixTopHundred = 335,
		[Token(Token = "0x40005C9")]
		SeasonThirtySevenTopHundred = 336,
		[Token(Token = "0x40005CA")]
		SeasonThirtyEightTopHundred = 337,
		[Token(Token = "0x40005CB")]
		SeasonThirtyNineTopHundred = 338,
		[Token(Token = "0x40005CC")]
		SeasonFourtyTopHundred = 339,
		[Token(Token = "0x40005CD")]
		SeasonFourtyOneTopHundred = 340,
		[Token(Token = "0x40005CE")]
		SeasonFourtyTwoTopHundred = 341,
		[Token(Token = "0x40005CF")]
		SeasonFourtyThreeTopHundred = 342,
		[Token(Token = "0x40005D0")]
		SeasonFourtyFourTopHundred = 343,
		[Token(Token = "0x40005D1")]
		SeasonFourtyFiveTopHundred = 344,
		[Token(Token = "0x40005D2")]
		SeasonFourtySixTopHundred = 345,
		[Token(Token = "0x40005D3")]
		SeasonFourtySevenTopHundred = 346,
		[Token(Token = "0x40005D4")]
		SeasonFourtyEightTopHundred = 347,
		[Token(Token = "0x40005D5")]
		SeasonFourtyNineTopHundred = 348,
		[Token(Token = "0x40005D6")]
		SeasonFiftyTopHundred = 349,
		[Token(Token = "0x40005D7")]
		RelicWielder = 400,
		[Token(Token = "0x40005D8")]
		WielderInTraining = 401,
		[Token(Token = "0x40005D9")]
		RelicMentor = 402,
		[Token(Token = "0x40005DA")]
		HolyAdjudicator = 500,
		[Token(Token = "0x40005DB")]
		HunterOfTheDamned = 501,
		[Token(Token = "0x40005DC")]
		Centurion = 502,
		[Token(Token = "0x40005DD")]
		AngelOfDeath = 503,
		[Token(Token = "0x40005DE")]
		Sinner = 504,
		[Token(Token = "0x40005DF")]
		Dilettante = 1000,
		[Token(Token = "0x40005E0")]
		Apprentice = 1001,
		[Token(Token = "0x40005E1")]
		Journeyman = 1002,
		[Token(Token = "0x40005E2")]
		Adept = 1003,
		[Token(Token = "0x40005E3")]
		Expert = 1004,
		[Token(Token = "0x40005E4")]
		Master = 1005,
		[Token(Token = "0x40005E5")]
		GrandMaster = 1006,
		[Token(Token = "0x40005E6")]
		Legend = 1007,
		[Token(Token = "0x40005E7")]
		Prophet = 1008,
		[Token(Token = "0x40005E8")]
		Conqueror = 1009,
		[Token(Token = "0x40005E9")]
		KingOfTheBeyond = 1010,
		[Token(Token = "0x40005EA")]
		QueenOfTheBeyond = 1011,
		[Token(Token = "0x40005EB")]
		Demigod = 1012,
		[Token(Token = "0x40005EC")]
		Vindicator = 2000
	}
	[Token(Token = "0x20000C1")]
	public enum TutorialConditionType
	{
		[Token(Token = "0x40005EE")]
		State,
		[Token(Token = "0x40005EF")]
		PlayerLevelEqual,
		[Token(Token = "0x40005F0")]
		PlayerLevelLesserThan,
		[Token(Token = "0x40005F1")]
		PlayerLevelGreaterThan,
		[Token(Token = "0x40005F2")]
		SpellTokensEqual,
		[Token(Token = "0x40005F3")]
		SpellTokensLesserThan,
		[Token(Token = "0x40005F4")]
		SpellTokensGreaterThan,
		[Token(Token = "0x40005F5")]
		SpellSlotState,
		[Token(Token = "0x40005F6")]
		DragTimeLesserThan,
		[Token(Token = "0x40005F7")]
		DragTimeGreaterThan,
		[Token(Token = "0x40005F8")]
		SpellEqual,
		[Token(Token = "0x40005F9")]
		SpellNotEqual,
		[Token(Token = "0x40005FA")]
		PostTutorialStateNotTriggered,
		[Token(Token = "0x40005FB")]
		DevelopmentBuild,
		[Token(Token = "0x40005FC")]
		PlayerInputLocked,
		[Token(Token = "0x40005FD")]
		MatchTypeContainsFlag
	}
	[Token(Token = "0x20000C2")]
	public enum TutorialReactionType
	{
		[Token(Token = "0x40005FF")]
		ProgressTutorial,
		[Token(Token = "0x4000600")]
		ActivatePostTutorialTrigger
	}
	[Token(Token = "0x20000C3")]
	public enum TutorialState
	{
		[Token(Token = "0x4000602")]
		None = 0,
		[Token(Token = "0x4000603")]
		EnteredWorkshop = 1,
		[Token(Token = "0x4000604")]
		ReadLetter = 2,
		[Token(Token = "0x4000605")]
		TeleportedToPortal = 3,
		[Token(Token = "0x4000606")]
		ActivatedPortal = 4,
		[Token(Token = "0x4000607")]
		EnteringBasement = 5,
		[Token(Token = "0x4000608")]
		EnteredBasement = 6,
		[Token(Token = "0x4000609")]
		SelectedSpell = 7,
		[Token(Token = "0x400060A")]
		CastSpell = 8,
		[Token(Token = "0x400060B")]
		LeftBasement = 9,
		[Token(Token = "0x400060C")]
		TeleportedToSpellTable = 10,
		[Token(Token = "0x400060D")]
		SelectedRelic = 11,
		[Token(Token = "0x400060E")]
		UnlockedRelic = 12,
		[Token(Token = "0x400060F")]
		TeleportedToSpellTableWithoutSpellTokens = 13,
		[Token(Token = "0x4000610")]
		SpellTableCompleted = 14,
		[Token(Token = "0x4000611")]
		TeleportedToWandStation = 15,
		[Token(Token = "0x4000612")]
		TeleportedToWardrobe = 16,
		[Token(Token = "0x4000613")]
		Completed = 100,
		[Token(Token = "0x4000614")]
		Any = 101
	}
	[Token(Token = "0x20000C4")]
	public enum TweenerControlOption
	{
		[Token(Token = "0x4000616")]
		None,
		[Token(Token = "0x4000617")]
		ResetOnAwake,
		[Token(Token = "0x4000618")]
		PlayOnAwake
	}
	[Token(Token = "0x20000C5")]
	public enum UpdateUserDataSource
	{
		[Token(Token = "0x400061A")]
		None,
		[Token(Token = "0x400061B")]
		LevelUp,
		[Token(Token = "0x400061C")]
		UserDataEmpty,
		[Token(Token = "0x400061D")]
		ReSave,
		[Token(Token = "0x400061E")]
		Clear,
		[Token(Token = "0x400061F")]
		RewardClaimed,
		[Token(Token = "0x4000620")]
		UpdateRating,
		[Token(Token = "0x4000621")]
		FirstTimeUser,
		[Token(Token = "0x4000622")]
		AddExperience,
		[Token(Token = "0x4000623")]
		AddVirtualCurrency,
		[Token(Token = "0x4000624")]
		BuySpell,
		[Token(Token = "0x4000625")]
		UnlockSpell,
		[Token(Token = "0x4000626")]
		UnlockSpells,
		[Token(Token = "0x4000627")]
		BuyCharacter,
		[Token(Token = "0x4000628")]
		UnlockCharacter,
		[Token(Token = "0x4000629")]
		UnlockCharacters,
		[Token(Token = "0x400062A")]
		BuyWand,
		[Token(Token = "0x400062B")]
		UnlockWand,
		[Token(Token = "0x400062C")]
		UnlockWands,
		[Token(Token = "0x400062D")]
		UnlockTitle,
		[Token(Token = "0x400062E")]
		UnlockTitles,
		[Token(Token = "0x400062F")]
		UpdateLoadout,
		[Token(Token = "0x4000630")]
		SetGameAccess
	}
	[Token(Token = "0x20000C6")]
	public enum VirtualCurrencySource
	{
		[Token(Token = "0x4000632")]
		Debug = 1,
		[Token(Token = "0x4000633")]
		Dailies = 2,
		[Token(Token = "0x4000634")]
		LevelUp = 4,
		[Token(Token = "0x4000635")]
		PurchasedWand = 8,
		[Token(Token = "0x4000636")]
		PurchasedCharacter = 0x10,
		[Token(Token = "0x4000637")]
		Conversion = 0x20,
		[Token(Token = "0x4000638")]
		CustomEventReward = 0x40,
		[Token(Token = "0x4000639")]
		LoadedUserData = 0x80
	}
	[Token(Token = "0x20000C7")]
	[Flags]
	public enum WandInput
	{
		[Token(Token = "0x400063B")]
		None = 0,
		[Token(Token = "0x400063C")]
		Point = 1,
		[Token(Token = "0x400063D")]
		Move = 2,
		[Token(Token = "0x400063E")]
		Stick = 4,
		[Token(Token = "0x400063F")]
		Press = 8,
		[Token(Token = "0x4000640")]
		Swipe = 0x10,
		[Token(Token = "0x4000641")]
		Directional = 0xC,
		[Token(Token = "0x4000642")]
		Pointing = 3,
		[Token(Token = "0x4000643")]
		PressMove = 0xA
	}
	[Token(Token = "0x20000C8")]
	public enum WandGrip
	{
		[Token(Token = "0x4000645")]
		Wand,
		[Token(Token = "0x4000646")]
		Pistol
	}
	[Token(Token = "0x20000C9")]
	public enum WandHand
	{
		[Token(Token = "0x4000648")]
		Right,
		[Token(Token = "0x4000649")]
		Left
	}
	[Token(Token = "0x20000CA")]
	public enum WandsColor
	{
		[Token(Token = "0x400064B")]
		ProjectorBlack,
		[Token(Token = "0x400064C")]
		White
	}
	[Token(Token = "0x20000CB")]
	public enum WandStates
	{
		[Token(Token = "0x400064E")]
		Active,
		[Token(Token = "0x400064F")]
		InActive,
		[Token(Token = "0x4000650")]
		Highlighted,
		[Token(Token = "0x4000651")]
		Invisible,
		[Token(Token = "0x4000652")]
		Selected
	}
	[Token(Token = "0x20000CC")]
	public enum WandType
	{
		[Token(Token = "0x4000654")]
		Classic,
		[Token(Token = "0x4000655")]
		Inductor,
		[Token(Token = "0x4000656")]
		Sword,
		[Token(Token = "0x4000657")]
		Lion,
		[Token(Token = "0x4000658")]
		Remnant,
		[Token(Token = "0x4000659")]
		Scepter,
		[Token(Token = "0x400065A")]
		ScarabOfSahir,
		[Token(Token = "0x400065B")]
		Invicta,
		[Token(Token = "0x400065C")]
		Snake,
		[Token(Token = "0x400065D")]
		Claw,
		[Token(Token = "0x400065E")]
		Vigil,
		[Token(Token = "0x400065F")]
		Spine,
		[Token(Token = "0x4000660")]
		Armament,
		[Token(Token = "0x4000661")]
		Staff,
		[Token(Token = "0x4000662")]
		Crystal
	}
}
namespace Assets.Scripts.Environmental
{
	[Token(Token = "0x20000CD")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_speed;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_rectTf;

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xF14B68", Offset = "0xF14B68", VA = "0xF14B68")]
		public AutoRotate()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xF14B78", Offset = "0xF14B78", VA = "0xF14B78")]
		private void Start()
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xF14BD0", Offset = "0xF14BD0", VA = "0xF14BD0")]
		private void FixedUpdate()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7AAE0", Offset = "0xC7AAE0")]
	public class Boulder : MonoBehaviourPunCallbacks, IPauseObject
	{
		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AC6C", Offset = "0xC7AC6C")]
		private sealed class <StartBoulderMovement>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float currentMatchTime;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Boulder $this;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000528")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002889")]
				[Address(RVA = "0xF16874", Offset = "0xF16874", VA = "0xF16874", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000529")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600288A")]
				[Address(RVA = "0xF1687C", Offset = "0xF1687C", VA = "0xF1687C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0xF166A4", Offset = "0xF166A4", VA = "0xF166A4")]
			[DebuggerHidden]
			public <StartBoulderMovement>c__Iterator0()
			{
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0xF166AC", Offset = "0xF166AC", VA = "0xF166AC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0xF16884", Offset = "0xF16884", VA = "0xF16884", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0xF16898", Offset = "0xF16898", VA = "0xF16898", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000665")]
		private const float BotAvoidDistance = 3f;

		[Token(Token = "0x4000666")]
		private const float BotAvoidRadius = 3f;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundHandler m_soundHandler;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip m_boulderStartClip;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_damageOnImpact;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_boulderModel;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_trajectoryPoints;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_boulderRotationPerFrame;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_journeyTime;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_enableWhenRolling;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_startingPosition;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_endingPosition;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_distanceTrajectoryPoints;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_totalDistanceOfTravel;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_timeOfJourneySegment;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<string> m_affectedTiles;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_startTime;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_stepsCounter;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_followPath;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] m_botPreditionColliders;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Collider> m_unsafeTileColliders;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Collider> m_collidersPreditctedSafe;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RaycastHit m_hit;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7ABF0", Offset = "0xC7ABF0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7ABF0", Offset = "0xC7ABF0")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x17000091")]
		public bool IsPaused
		{
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0xF14E34", Offset = "0xF14E34", VA = "0xF14E34", Slot = "54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AC2C", Offset = "0xC7AC2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002F8")]
			[Address(RVA = "0xF14E3C", Offset = "0xF14E3C", VA = "0xF14E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AC3C", Offset = "0xC7AC3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public float JourneyTime
		{
			[Token(Token = "0x60002F9")]
			[Address(RVA = "0xF14E48", Offset = "0xF14E48", VA = "0xF14E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AC4C", Offset = "0xC7AC4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xF14CF4", Offset = "0xF14CF4", VA = "0xF14CF4")]
		public Boulder()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xF14E88", Offset = "0xF14E88", VA = "0xF14E88", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xF14FA4", Offset = "0xF14FA4", VA = "0xF14FA4", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xF1504C", Offset = "0xF1504C", VA = "0xF1504C")]
		private void Start()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xF15578", Offset = "0xF15578", VA = "0xF15578")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xF16218", Offset = "0xF16218", VA = "0xF16218", Slot = "55")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xF16224", Offset = "0xF16224", VA = "0xF16224")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xF16254", Offset = "0xF16254", VA = "0xF16254")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xF150BC", Offset = "0xF150BC", VA = "0xF150BC")]
		private void PrepareDistances()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xF15384", Offset = "0xF15384", VA = "0xF15384")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xF1627C", Offset = "0xF1627C", VA = "0xF1627C")]
		private void AdjustToNextPoint()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xF163E8", Offset = "0xF163E8", VA = "0xF163E8")]
		private float DeterminePosition(float fracJourney)
		{
			return default(float);
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xF155BC", Offset = "0xF155BC", VA = "0xF155BC")]
		private void DetectCollision()
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xF1601C", Offset = "0xF1601C", VA = "0xF1601C")]
		private void Movement()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0xF16504", Offset = "0xF16504", VA = "0xF16504")]
		private void ResetBoulder()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xF16618", Offset = "0xF16618", VA = "0xF16618")]
		[DebuggerHidden]
		public IEnumerator StartBoulderMovement(float currentMatchTime)
		{
			return null;
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xF15490", Offset = "0xF15490", VA = "0xF15490")]
		private void SetEnabledWhenRollingActive(bool active)
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7ACCC", Offset = "0xC7ACCC")]
	public class BoulderHandler : MonoBehaviourPun
	{
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AD70", Offset = "0xC7AD70")]
		private sealed class <BoulderMovement>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <i>__1;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal BoulderHandler $this;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700052A")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600288F")]
				[Address(RVA = "0xF16F44", Offset = "0xF16F44", VA = "0xF16F44", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002890")]
				[Address(RVA = "0xF16F4C", Offset = "0xF16F4C", VA = "0xF16F4C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0xF16BA0", Offset = "0xF16BA0", VA = "0xF16BA0")]
			[DebuggerHidden]
			public <BoulderMovement>c__Iterator0()
			{
			}

			[Token(Token = "0x600288E")]
			[Address(RVA = "0xF16C2C", Offset = "0xF16C2C", VA = "0xF16C2C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002891")]
			[Address(RVA = "0xF16F54", Offset = "0xF16F54", VA = "0xF16F54", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002892")]
			[Address(RVA = "0xF16F68", Offset = "0xF16F68", VA = "0xF16F68", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Boulder[] m_boulders;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_initialWaitTime;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xF168FC", Offset = "0xF168FC", VA = "0xF168FC")]
		public BoulderHandler()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xF1695C", Offset = "0xF1695C", VA = "0xF1695C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xF169D4", Offset = "0xF169D4", VA = "0xF169D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xF16B30", Offset = "0xF16B30", VA = "0xF16B30")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xF16A94", Offset = "0xF16A94", VA = "0xF16A94")]
		private void StartBoulderMovement()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xF16B34", Offset = "0xF16B34", VA = "0xF16B34")]
		[DebuggerHidden]
		private IEnumerator BoulderMovement()
		{
			return null;
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xF16BA8", Offset = "0xF16BA8", VA = "0xF16BA8")]
		[PunRPC]
		private void PunActivateBoulder(int boulderIndex, float currentTime)
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7ADD0", Offset = "0xC7ADD0")]
	public class Crystal : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B0A0", Offset = "0xC7B0A0")]
		private sealed class <ChangeStateCountdown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Crystal $this;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700052C")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002895")]
				[Address(RVA = "0xF18F94", Offset = "0xF18F94", VA = "0xF18F94", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002896")]
				[Address(RVA = "0xF18F9C", Offset = "0xF18F9C", VA = "0xF18F9C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0xF17CB8", Offset = "0xF17CB8", VA = "0xF17CB8")]
			[DebuggerHidden]
			public <ChangeStateCountdown>c__Iterator0()
			{
			}

			[Token(Token = "0x6002894")]
			[Address(RVA = "0xF18D68", Offset = "0xF18D68", VA = "0xF18D68", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002897")]
			[Address(RVA = "0xF18FA4", Offset = "0xF18FA4", VA = "0xF18FA4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002898")]
			[Address(RVA = "0xF18FB8", Offset = "0xF18FB8", VA = "0xF18FB8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B100", Offset = "0xC7B100")]
		private sealed class <Damage>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <tileIndex>__0;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int <counter>__0;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int <i>__1;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector3[] <bezierPoints>__2;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Crystal $this;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x1700052E")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600289B")]
				[Address(RVA = "0xF192C8", Offset = "0xF192C8", VA = "0xF192C8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600289C")]
				[Address(RVA = "0xF192D0", Offset = "0xF192D0", VA = "0xF192D0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0xF185B0", Offset = "0xF185B0", VA = "0xF185B0")]
			[DebuggerHidden]
			public <Damage>c__Iterator1()
			{
			}

			[Token(Token = "0x600289A")]
			[Address(RVA = "0xF1901C", Offset = "0xF1901C", VA = "0xF1901C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0xF192D8", Offset = "0xF192D8", VA = "0xF192D8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xF192EC", Offset = "0xF192EC", VA = "0xF192EC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B160", Offset = "0xC7B160")]
		private sealed class <Heal>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <tileIndex>__0;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Crystal $this;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000530")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028A1")]
				[Address(RVA = "0xF196BC", Offset = "0xF196BC", VA = "0xF196BC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000531")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A2")]
				[Address(RVA = "0xF196C4", Offset = "0xF196C4", VA = "0xF196C4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0xF185B8", Offset = "0xF185B8", VA = "0xF185B8")]
			[DebuggerHidden]
			public <Heal>c__Iterator2()
			{
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xF19350", Offset = "0xF19350", VA = "0xF19350", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xF196CC", Offset = "0xF196CC", VA = "0xF196CC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xF196E0", Offset = "0xF196E0", VA = "0xF196E0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000684")]
		private const float AnticipationTime = 3f;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<CrystalState> m_acceptedStates;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7AE44", Offset = "0xC7AE44")]
		[SerializeField]
		private SoundHandler m_soundHandler;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7AE90", Offset = "0xC7AE90")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_originalColor;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7AEEC", Offset = "0xC7AEEC")]
		[SerializeField]
		private float m_neutralCycleTime;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_damageCycleTime;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7AF48", Offset = "0xC7AF48")]
		[SerializeField]
		private float m_shootingInterval;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int m_damageAmount;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_projectileSpawnPoint;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Tile[] m_visibleTiles;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_projectileSpeed;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_aimProjectileSpeed;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CrystalState m_crystalState;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color m_nextColor;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_nextStateDuration;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_suddenDeath;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_hasCreatedPools;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_anticipationPerState;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IPoolObject m_projectile;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ProjectileMoverEnvironment m_trailRendererPoolObject;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_suddenDeathStartedEventToken;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7AFE4", Offset = "0xC7AFE4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7AFE4", Offset = "0xC7AFE4")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x17000093")]
		public bool IsPaused
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0xF170A4", Offset = "0xF170A4", VA = "0xF170A4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B020", Offset = "0xC7B020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000313")]
			[Address(RVA = "0xF170AC", Offset = "0xF170AC", VA = "0xF170AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B030", Offset = "0xC7B030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float FireTime
		{
			[Token(Token = "0x6000314")]
			[Address(RVA = "0xF170B8", Offset = "0xF170B8", VA = "0xF170B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B040", Offset = "0xC7B040")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xF16FCC", Offset = "0xF16FCC", VA = "0xF16FCC")]
		public Crystal()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xF1712C", Offset = "0xF1712C", VA = "0xF1712C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xF172E4", Offset = "0xF172E4", VA = "0xF172E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xF173B0", Offset = "0xF173B0", VA = "0xF173B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0xF17480", Offset = "0xF17480", VA = "0xF17480", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xF1748C", Offset = "0xF1748C", VA = "0xF1748C")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xF174BC", Offset = "0xF174BC", VA = "0xF174BC")]
		private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xF175EC", Offset = "0xF175EC", VA = "0xF175EC")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xF178C4", Offset = "0xF178C4", VA = "0xF178C4")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xF17900", Offset = "0xF17900", VA = "0xF17900")]
		private void TrySpawnCrystalSpells()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xF179EC", Offset = "0xF179EC", VA = "0xF179EC")]
		private void StartChangeState()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xF17C2C", Offset = "0xF17C2C", VA = "0xF17C2C")]
		[DebuggerHidden]
		private IEnumerator ChangeStateCountdown(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xF17618", Offset = "0xF17618", VA = "0xF17618")]
		[PunRPC]
		private void PunChangeState(CrystalState crystalState)
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xF17CC0", Offset = "0xF17CC0", VA = "0xF17CC0")]
		private void FireLineProjectile(Vector3[] bezierPoints)
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xF1812C", Offset = "0xF1812C", VA = "0xF1812C")]
		private void Fire(Vector3[] arcPoints)
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xF1847C", Offset = "0xF1847C", VA = "0xF1847C")]
		private void PrepareAction()
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xF184D8", Offset = "0xF184D8", VA = "0xF184D8")]
		[DebuggerHidden]
		private IEnumerator Damage()
		{
			return null;
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xF18544", Offset = "0xF18544", VA = "0xF18544")]
		[DebuggerHidden]
		private IEnumerator Heal()
		{
			return null;
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xF185C0", Offset = "0xF185C0", VA = "0xF185C0")]
		private int GetClosestOccupiedTileIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xF18880", Offset = "0xF18880", VA = "0xF18880")]
		private Vector3 AimAtTarget(int tileId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xF174C0", Offset = "0xF174C0", VA = "0xF174C0")]
		private void OnSuddenDeath()
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0xF18B10", Offset = "0xF18B10", VA = "0xF18B10")]
		private Vector3[] GetBezierPoints(Vector3 targetPos)
		{
			return null;
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xF1800C", Offset = "0xF1800C", VA = "0xF1800C")]
		public IPoolObject GrabFromPool(PoolObjectType type)
		{
			return null;
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xF17AC4", Offset = "0xF17AC4", VA = "0xF17AC4")]
		private IPoolObject Spawn(PoolObjectType type, object[] data)
		{
			return null;
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xF18C68", Offset = "0xF18C68", VA = "0xF18C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B090", Offset = "0xC7B090")]
		private float <Start>m__0(Tile tile)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7B1C0", Offset = "0xC7B1C0")]
	public class DesertController : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B910", Offset = "0xC7B910")]
		private sealed class <DelayedEnableEnviroment>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal GameObject enviroment;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool enable;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal GameObject colliders;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal GameObject door;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal TileOccupyState occupyState;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal Tile[] tiles;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal DesertController $this;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal object $current;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool $disposing;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal int $PC;

			[Token(Token = "0x17000532")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028A7")]
				[Address(RVA = "0xF1AE40", Offset = "0xF1AE40", VA = "0xF1AE40", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000533")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A8")]
				[Address(RVA = "0xF1AE48", Offset = "0xF1AE48", VA = "0xF1AE48", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0xF1A9EC", Offset = "0xF1A9EC", VA = "0xF1A9EC")]
			[DebuggerHidden]
			public <DelayedEnableEnviroment>c__Iterator0()
			{
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xF1ACAC", Offset = "0xF1ACAC", VA = "0xF1ACAC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xF1AE50", Offset = "0xF1AE50", VA = "0xF1AE50", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xF1AE64", Offset = "0xF1AE64", VA = "0xF1AE64", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_environmentEffectDamage;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7B234", Offset = "0xC7B234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B234", Offset = "0xC7B234")]
		[SerializeField]
		private float m_sandstormFadeTime;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B2A4", Offset = "0xC7B2A4")]
		[SerializeField]
		private float m_sandstormTravelTime;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B2F0", Offset = "0xC7B2F0")]
		[SerializeField]
		private float m_gasFadeTime;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B33C", Offset = "0xC7B33C")]
		[SerializeField]
		private float m_gasTravelTime;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7B388", Offset = "0xC7B388")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B388", Offset = "0xC7B388")]
		[SerializeField]
		private float m_startSandstormBuildup;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B3F8", Offset = "0xC7B3F8")]
		[SerializeField]
		private float m_startSandstorm;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B444", Offset = "0xC7B444")]
		[SerializeField]
		private float m_openOutsideDoors;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B490", Offset = "0xC7B490")]
		[SerializeField]
		private float m_closeOutsideDoors;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B4DC", Offset = "0xC7B4DC")]
		[SerializeField]
		private float m_startGasBuildup;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B528", Offset = "0xC7B528")]
		[SerializeField]
		private float m_openInnerDoors;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B574", Offset = "0xC7B574")]
		[SerializeField]
		private float m_startGas;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7B5C0", Offset = "0xC7B5C0")]
		[SerializeField]
		private float m_closeInnerDoors;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7B60C", Offset = "0xC7B60C")]
		[SerializeField]
		private GameObject m_outsideTilesParent;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_insideTilesParent;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_treasureTilesParent;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7B678", Offset = "0xC7B678")]
		[SerializeField]
		private GameObject m_outside;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_middle;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_inner;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_outsideDoor;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_innerDoor;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7B704", Offset = "0xC7B704")]
		[SerializeField]
		private GameObject m_outsideColliders;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject m_middleColliders;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_innerColliders;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_activateDesertDoorsToken;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EventToken m_matchEndEventToken;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isLevelProgressing;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isInnerSanctumReached;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_currentTimer;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<TileDamageOccupier> m_occupyObjectPool;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DesertTempleStage m_currentStage;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private DesertTempleEnvironmentType m_type;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B770", Offset = "0xC7B770")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7B770", Offset = "0xC7B770")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B7AC", Offset = "0xC7B7AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7B7AC", Offset = "0xC7B7AC")]
		private Tile[] <OutsideTiles>k__BackingField;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B7E8", Offset = "0xC7B7E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7B7E8", Offset = "0xC7B7E8")]
		private Tile[] <InsideTiles>k__BackingField;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B824", Offset = "0xC7B824")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7B824", Offset = "0xC7B824")]
		private Tile[] <TreasureTiles>k__BackingField;

		[Token(Token = "0x17000095")]
		public bool IsPaused
		{
			[Token(Token = "0x600032E")]
			[Address(RVA = "0xF197DC", Offset = "0xF197DC", VA = "0xF197DC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B860", Offset = "0xC7B860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600032F")]
			[Address(RVA = "0xF197E4", Offset = "0xF197E4", VA = "0xF197E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B870", Offset = "0xC7B870")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public Tile[] OutsideTiles
		{
			[Token(Token = "0x6000330")]
			[Address(RVA = "0xF197F0", Offset = "0xF197F0", VA = "0xF197F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B880", Offset = "0xC7B880")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000331")]
			[Address(RVA = "0xF197F8", Offset = "0xF197F8", VA = "0xF197F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B890", Offset = "0xC7B890")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public Tile[] InsideTiles
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0xF19800", Offset = "0xF19800", VA = "0xF19800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B8A0", Offset = "0xC7B8A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000333")]
			[Address(RVA = "0xF19808", Offset = "0xF19808", VA = "0xF19808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B8B0", Offset = "0xC7B8B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public Tile[] TreasureTiles
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0xF19810", Offset = "0xF19810", VA = "0xF19810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B8C0", Offset = "0xC7B8C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000335")]
			[Address(RVA = "0xF19818", Offset = "0xF19818", VA = "0xF19818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7B8D0", Offset = "0xC7B8D0")]
			private set
			{
			}
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xF19744", Offset = "0xF19744", VA = "0xF19744")]
		public DesertController()
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xF19820", Offset = "0xF19820", VA = "0xF19820")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xF199D8", Offset = "0xF199D8", VA = "0xF199D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xF19AA4", Offset = "0xF19AA4", VA = "0xF19AA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0xF19B48", Offset = "0xF19B48", VA = "0xF19B48")]
		private void Start()
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xF19DA4", Offset = "0xF19DA4", VA = "0xF19DA4", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xF19DB0", Offset = "0xF19DB0", VA = "0xF19DB0")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xF19DE0", Offset = "0xF19DE0", VA = "0xF19DE0")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xF1A140", Offset = "0xF1A140", VA = "0xF1A140")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xF1A168", Offset = "0xF1A168", VA = "0xF1A168")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xF1A4D8", Offset = "0xF1A4D8", VA = "0xF1A4D8")]
		[PunRPC]
		private void PunDesertStageActivate(DesertTempleStage stage, float matchTime, DesertTempleEnvironmentType type)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xF19BE0", Offset = "0xF19BE0", VA = "0xF19BE0")]
		public void OccupyTiles(TileOccupyState occupyState, Tile[] m_tiles)
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xF1A8CC", Offset = "0xF1A8CC", VA = "0xF1A8CC")]
		[DebuggerHidden]
		private IEnumerator DelayedEnableEnviroment(TileOccupyState occupyState, bool enable, float time, GameObject enviroment, GameObject colliders, Tile[] tiles, [Optional] GameObject door)
		{
			return null;
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xF1A9F4", Offset = "0xF1A9F4", VA = "0xF1A9F4")]
		private void EnableEnvironment(Events.ActivateDesertTempleDoorsEvent eventData)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xF19F80", Offset = "0xF19F80", VA = "0xF19F80")]
		public void CreateObjectPool(int poolSize, params object[] data)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xF1AAF4", Offset = "0xF1AAF4", VA = "0xF1AAF4")]
		public TileDamageOccupier GrabFromPool()
		{
			return null;
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xF1A7C0", Offset = "0xF1A7C0", VA = "0xF1A7C0")]
		public void ResetPool()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7B970", Offset = "0xC7B970")]
	public class DesertTempleEnvironment : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x40006C4")]
		private const float BotSafetyDistance = 10f;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DesertTempleEnvironmentType m_type;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DesertController m_desertController;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BA10", Offset = "0xC7BA10")]
		[SerializeField]
		private Vector3 m_endPosition;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BA5C", Offset = "0xC7BA5C")]
		[SerializeField]
		private EffectType m_effectType;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_startUpEffect;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<MeshRenderer> m_effectRenderers;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<ParticleSystem> m_effectParticleSystems;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Material> m_effectMaterials;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_activateSandstormDesertTempleToken;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_activateGasDesertTempleToken;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_buildupSandstormDesertTempleToken;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_buildupGasDesertTempleToken;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_activateDesertDoorsToken;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_startPosition;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_followPath;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_tileCounter;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_startTime;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_movePercentage;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_journeyTime;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_isBotMatch;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_safetyDistance;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Tile[] m_affectableTiles;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Tile m_nextTile;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HashSet<Tile> m_unsafeTiles;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BAF8", Offset = "0xC7BAF8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7BAF8", Offset = "0xC7BAF8")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BB34", Offset = "0xC7BB34")]
		private static Func<Tile, float> <>f__am$cache0;

		[Token(Token = "0x17000099")]
		public bool IsPaused
		{
			[Token(Token = "0x6000347")]
			[Address(RVA = "0xF1AF6C", Offset = "0xF1AF6C", VA = "0xF1AF6C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BB44", Offset = "0xC7BB44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000348")]
			[Address(RVA = "0xF1AF74", Offset = "0xF1AF74", VA = "0xF1AF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BB54", Offset = "0xC7BB54")]
			set
			{
			}
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xF1AEC8", Offset = "0xF1AEC8", VA = "0xF1AEC8")]
		public DesertTempleEnvironment()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xF1AF80", Offset = "0xF1AF80", VA = "0xF1AF80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xF1B27C", Offset = "0xF1B27C", VA = "0xF1B27C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xF1B3EC", Offset = "0xF1B3EC", VA = "0xF1B3EC")]
		private void BuildupSandstorm(Events.BuildupSandstormDesertTempleEvent eventData)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xF1B8E0", Offset = "0xF1B8E0", VA = "0xF1B8E0")]
		private void BuildupGas(Events.BuildupGasDesertTempleEvent eventData)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xF1B4C4", Offset = "0xF1B4C4", VA = "0xF1B4C4")]
		private void SetRenderersEnabled(bool enable)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xF1B9B8", Offset = "0xF1B9B8", VA = "0xF1B9B8")]
		private void ActivateSandstorm(Events.ActivateSandstormDesertTempleEvent eventData)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xF1BB00", Offset = "0xF1BB00", VA = "0xF1BB00")]
		private void ActivateGas(Events.ActivateGasDesertTempleEvent eventData)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xF1BB4C", Offset = "0xF1BB4C", VA = "0xF1BB4C")]
		private void DisableEnvironment(Events.ActivateDesertTempleDoorsEvent eventData)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xF1BD88", Offset = "0xF1BD88", VA = "0xF1BD88")]
		private void ResetBotAvoidance()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0xF1BF14", Offset = "0xF1BF14", VA = "0xF1BF14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xF1C220", Offset = "0xF1C220", VA = "0xF1C220", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xF1C22C", Offset = "0xF1C22C", VA = "0xF1C22C")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xF1C134", Offset = "0xF1C134", VA = "0xF1C134")]
		private void SetupAffectableTiles()
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xF1C25C", Offset = "0xF1C25C", VA = "0xF1C25C", Slot = "6")]
		public virtual void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xF1BA04", Offset = "0xF1BA04", VA = "0xF1BA04")]
		private void StartSandstormMovement(float currentRoomTime)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xF1C4CC", Offset = "0xF1C4CC", VA = "0xF1C4CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xF1C620", Offset = "0xF1C620", VA = "0xF1C620")]
		private void DetectCollision()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xF1C2E4", Offset = "0xF1C2E4", VA = "0xF1C2E4")]
		private void ResetTilesAndMovePlayer()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xF1B790", Offset = "0xF1B790", VA = "0xF1B790")]
		private void EnableMaterials(bool enable, float waitTime)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xF1B6BC", Offset = "0xF1B6BC", VA = "0xF1B6BC")]
		private void FadeInSound()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0xF1BC8C", Offset = "0xF1BC8C", VA = "0xF1BC8C")]
		private void FadeOutSound()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xF1CA60", Offset = "0xF1CA60", VA = "0xF1CA60")]
		private void StopSound()
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xF1CB30", Offset = "0xF1CB30", VA = "0xF1CB30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BB64", Offset = "0xC7BB64")]
		private void <DisableEnvironment>m__0(Task t)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xF1CBE4", Offset = "0xF1CBE4", VA = "0xF1CBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BB74", Offset = "0xC7BB74")]
		private static float <SetupAffectableTiles>m__1(Tile tile)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7BB84", Offset = "0xC7BB84")]
	public class DoorHandler : MonoBehaviourPun
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BBE8", Offset = "0xC7BBE8")]
		[SerializeField]
		private Animator m_outsideDoor;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_insideDoor;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BC44", Offset = "0xC7BC44")]
		[SerializeField]
		private AudioSource m_effectAudioSource;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip[] m_effectAudioClips;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource m_backgroundEffectAudioSource;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SplitAudioSoundPlayer m_outsideDoorSfx;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SplitAudioSoundPlayer m_insideDoorSfx;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_activateDesertDoorsToken;

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xF1CC28", Offset = "0xF1CC28", VA = "0xF1CC28")]
		public DoorHandler()
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xF1CC88", Offset = "0xF1CC88", VA = "0xF1CC88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xF1CED4", Offset = "0xF1CED4", VA = "0xF1CED4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xF1CFAC", Offset = "0xF1CFAC", VA = "0xF1CFAC")]
		private void ActivateDoors(Events.ActivateDesertTempleDoorsEvent eventData)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xF1D180", Offset = "0xF1D180", VA = "0xF1D180")]
		private void MoveAndPlayDoorActivationClip(Transform tf)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xF061D0", Offset = "0xF061D0", VA = "0xF061D0")]
		public void PlaySoundEffect(GateSoundClipType clipType)
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xF1D2B4", Offset = "0xF1D2B4", VA = "0xF1D2B4")]
		private void PlayAudioClip(AudioClip clip)
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class LocalMove : MonoBehaviour
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_speedMp;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_moveValue;

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xF1D3E4", Offset = "0xF1D3E4", VA = "0xF1D3E4")]
		public LocalMove()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xF1D3FC", Offset = "0xF1D3FC", VA = "0xF1D3FC")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7BCD0", Offset = "0xC7BCD0")]
	public class Move : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BD50", Offset = "0xC7BD50")]
		[SerializeField]
		private Vector3 m_endPosOffset;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float m_moveTime;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool m_networkSync;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7BDBC", Offset = "0xC7BDBC")]
		[SerializeField]
		private bool m_playSound;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource[] m_audioSources;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Rigidbody m_rigidBody;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_move;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int m_moveIndex;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float m_startTime;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_startPosition;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_endPosition;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_pauseTime;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BE18", Offset = "0xC7BE18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7BE18", Offset = "0xC7BE18")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BE54", Offset = "0xC7BE54")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7BE54", Offset = "0xC7BE54")]
		private bool <IsAffectedByEnvironment>k__BackingField;

		[Token(Token = "0x1700009A")]
		public bool IsPaused
		{
			[Token(Token = "0x600036B")]
			[Address(RVA = "0xF1D580", Offset = "0xF1D580", VA = "0xF1D580", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BE90", Offset = "0xC7BE90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600036C")]
			[Address(RVA = "0xF1D588", Offset = "0xF1D588", VA = "0xF1D588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BEA0", Offset = "0xC7BEA0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsAffectedByEnvironment
		{
			[Token(Token = "0x600036D")]
			[Address(RVA = "0xF1D594", Offset = "0xF1D594", VA = "0xF1D594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BEB0", Offset = "0xC7BEB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600036E")]
			[Address(RVA = "0xF1D59C", Offset = "0xF1D59C", VA = "0xF1D59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7BEC0", Offset = "0xC7BEC0")]
			set
			{
			}
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xF1D4DC", Offset = "0xF1D4DC", VA = "0xF1D4DC")]
		public Move()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xF1D5A8", Offset = "0xF1D5A8", VA = "0xF1D5A8", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xF1D70C", Offset = "0xF1D70C", VA = "0xF1D70C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xF1D7C4", Offset = "0xF1D7C4", VA = "0xF1D7C4", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xF1D8E4", Offset = "0xF1D8E4", VA = "0xF1D8E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xF1D8FC", Offset = "0xF1D8FC", VA = "0xF1D8FC", Slot = "9")]
		protected virtual void UpdateMove()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xF1DBC0", Offset = "0xF1DBC0", VA = "0xF1DBC0")]
		protected void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xF1DBE8", Offset = "0xF1DBE8", VA = "0xF1DBE8")]
		protected void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xF1DCB0", Offset = "0xF1DCB0", VA = "0xF1DCB0")]
		[PunRPC]
		protected void PunInitiateMovement()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xF1DCB4", Offset = "0xF1DCB4", VA = "0xF1DCB4")]
		protected void InitiateMovement()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xF1DD50", Offset = "0xF1DD50", VA = "0xF1DD50", Slot = "10")]
		public virtual void StartMovement()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xF1DEDC", Offset = "0xF1DEDC", VA = "0xF1DEDC")]
		public void PauseMovement()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xF1E0F0", Offset = "0xF1E0F0", VA = "0xF1E0F0")]
		public void UnPauseMovement()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xF1DBA8", Offset = "0xF1DBA8", VA = "0xF1DBA8")]
		private void SetMoveProperties(float time, bool increaseIndex = false)
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xF1DD78", Offset = "0xF1DD78", VA = "0xF1DD78")]
		protected void PlaySound()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xF1DF90", Offset = "0xF1DF90", VA = "0xF1DF90")]
		private void StopSound()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xF1E1A4", Offset = "0xF1E1A4", VA = "0xF1E1A4", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xF1E1B8", Offset = "0xF1E1B8", VA = "0xF1E1B8")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7BEE0", Offset = "0xC7BEE0")]
	public class Portal : MonoBehaviour
	{
		[Token(Token = "0x20000D7")]
		private struct Multipliers
		{
			[Token(Token = "0x4000704")]
			public const float Mana = 1.5f;

			[Token(Token = "0x4000705")]
			public const float Damage = 2f;
		}

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Tile m_connectedTile;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_portalEffects;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Wielder m_portalWielder;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterControl m_characterControl;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_sceneLoadInitiatedEventToken;

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xF1E1E8", Offset = "0xF1E1E8", VA = "0xF1E1E8")]
		public Portal()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xF1E1F0", Offset = "0xF1E1F0", VA = "0xF1E1F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xF1E2FC", Offset = "0xF1E2FC", VA = "0xF1E2FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xF1E3D0", Offset = "0xF1E3D0", VA = "0xF1E3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xF1E428", Offset = "0xF1E428", VA = "0xF1E428")]
		private void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xF1E430", Offset = "0xF1E430", VA = "0xF1E430")]
		private void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xF1E790", Offset = "0xF1E790", VA = "0xF1E790")]
		private void OnTileOccupied(bool occupied)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xF1E570", Offset = "0xF1E570", VA = "0xF1E570")]
		private void SetPortalVfx(bool enabled)
		{
		}
	}
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7BF64", Offset = "0xC7BF64")]
	public class RisingLava : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C1A8", Offset = "0xC7C1A8")]
		private sealed class <MovementCountdown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RisingLava $this;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000534")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028AD")]
				[Address(RVA = "0xF1FC48", Offset = "0xF1FC48", VA = "0xF1FC48", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000535")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028AE")]
				[Address(RVA = "0xF1FC50", Offset = "0xF1FC50", VA = "0xF1FC50", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028AB")]
			[Address(RVA = "0xF1F808", Offset = "0xF1F808", VA = "0xF1F808")]
			[DebuggerHidden]
			public <MovementCountdown>c__Iterator0()
			{
			}

			[Token(Token = "0x60028AC")]
			[Address(RVA = "0xF1FA7C", Offset = "0xF1FA7C", VA = "0xF1FA7C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028AF")]
			[Address(RVA = "0xF1FC58", Offset = "0xF1FC58", VA = "0xF1FC58", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xF1FC6C", Offset = "0xF1FC6C", VA = "0xF1FC6C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C008", Offset = "0xC7C008")]
		[SerializeField]
		private Vector3 m_endPosition;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_waitTimeBeforeRise;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_riseTime;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C074", Offset = "0xC7C074")]
		[SerializeField]
		private float m_damagePerSecond;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C0C0", Offset = "0xC7C0C0")]
		[SerializeField]
		private Move m_elevatorMove;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Tile m_cellTile;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_startTime;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_movePercentage;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_followPath;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_hasPublishedUnsafeEvent;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_startPosition;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_boxRenderer;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<string> m_affectedTiles;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TileDamageOccupier m_tileDamageEffect;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C11C", Offset = "0xC7C11C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C11C", Offset = "0xC7C11C")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x1700009C")]
		public bool IsPaused
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0xF1E938", Offset = "0xF1E938", VA = "0xF1E938", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C158", Offset = "0xC7C158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038A")]
			[Address(RVA = "0xF1E940", Offset = "0xF1E940", VA = "0xF1E940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C168", Offset = "0xC7C168")]
			set
			{
			}
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xF1E88C", Offset = "0xF1E88C", VA = "0xF1E88C")]
		public RisingLava()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xF1E94C", Offset = "0xF1E94C", VA = "0xF1E94C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xF1EA5C", Offset = "0xF1EA5C", VA = "0xF1EA5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xF1EAF8", Offset = "0xF1EAF8", VA = "0xF1EAF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xF1EB94", Offset = "0xF1EB94", VA = "0xF1EB94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xF1F0DC", Offset = "0xF1F0DC", VA = "0xF1F0DC", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xF1F0E8", Offset = "0xF1F0E8", VA = "0xF1F0E8")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xF1F118", Offset = "0xF1F118", VA = "0xF1F118")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xF1F360", Offset = "0xF1F360", VA = "0xF1F360")]
		private void ResetMatch()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xF1F6D8", Offset = "0xF1F6D8", VA = "0xF1F6D8")]
		private void StartMovement()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xF1F77C", Offset = "0xF1F77C", VA = "0xF1F77C")]
		[DebuggerHidden]
		private IEnumerator MovementCountdown(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xF1F810", Offset = "0xF1F810", VA = "0xF1F810")]
		[PunRPC]
		private void PunStartLavaMovement(float currentMatchTime)
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xF1EE28", Offset = "0xF1EE28", VA = "0xF1EE28")]
		private void DetectCollision()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xF1F880", Offset = "0xF1F880", VA = "0xF1F880")]
		private void OccupyTile(Tile targetedTile)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xF1F4E4", Offset = "0xF1F4E4", VA = "0xF1F4E4")]
		private void ResetTilesAndPlayer()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xF1F384", Offset = "0xF1F384", VA = "0xF1F384")]
		private IPoolObject InstantiateTileDamageEffect(params object[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D9")]
	public class Rotate : Move
	{
		[Token(Token = "0x20000DA")]
		[SerializeField]
		private enum RotationAxis
		{
			[Token(Token = "0x400071D")]
			X,
			[Token(Token = "0x400071E")]
			Y,
			[Token(Token = "0x400071F")]
			Z
		}

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private RotationAxis m_axis;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_rotationSpeed;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion m_startRotation;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion m_endRotation;

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xF1FCD0", Offset = "0xF1FCD0", VA = "0xF1FCD0")]
		public Rotate()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xF1FCDC", Offset = "0xF1FCDC", VA = "0xF1FCDC", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xF1FEF8", Offset = "0xF1FEF8", VA = "0xF1FEF8", Slot = "9")]
		protected override void UpdateMove()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xF20120", Offset = "0xF20120", VA = "0xF20120", Slot = "10")]
		public override void StartMovement()
		{
		}
	}
}
namespace Cortopia.Scripts.Environmental
{
	[Token(Token = "0x20000DB")]
	public class RubiksCube : MonoBehaviourPun
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int AnimatorParamScramble;

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1032900", Offset = "0x1032900", VA = "0x1032900")]
		public RubiksCube()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1032964", Offset = "0x1032964", VA = "0x1032964", Slot = "4")]
		public virtual bool TryScramble()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x103297C", Offset = "0x103297C", VA = "0x103297C")]
		protected void Scramble()
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1032A08", Offset = "0x1032A08", VA = "0x1032A08")]
		public void Unscramble()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1032A94", Offset = "0x1032A94", VA = "0x1032A94")]
		[PunRPC]
		protected void PunScramble()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1032ACC", Offset = "0x1032ACC", VA = "0x1032ACC", Slot = "5")]
		[PunRPC]
		protected virtual void PunUnscramble()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class RubiksHandler : MonoBehaviour
	{
		[Token(Token = "0x20000DD")]
		private enum RubiksState
		{
			[Token(Token = "0x400072C")]
			Disabled,
			[Token(Token = "0x400072D")]
			Scramble,
			[Token(Token = "0x400072E")]
			Unscramble
		}

		[Token(Token = "0x4000722")]
		public const float ScrambleTime = 12f;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7C268", Offset = "0xC7C268")]
		private int m_minCubesToScramble;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private MinMax m_timeBetweenScrambles;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RubiksCube[] m_rubiksCubes;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RubiksState m_currentState;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<RubiksCube> m_scrambledCubes;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_nextScramble;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1032B04", Offset = "0x1032B04", VA = "0x1032B04")]
		public RubiksHandler()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1032B9C", Offset = "0x1032B9C", VA = "0x1032B9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1032CAC", Offset = "0x1032CAC", VA = "0x1032CAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1032D2C", Offset = "0x1032D2C", VA = "0x1032D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x10332C8", Offset = "0x10332C8", VA = "0x10332C8")]
		private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1033380", Offset = "0x1033380", VA = "0x1033380")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x103322C", Offset = "0x103322C", VA = "0x103322C")]
		private void SetNextScramble()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1033044", Offset = "0x1033044", VA = "0x1033044")]
		private void SetNextUnscramble()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1032E20", Offset = "0x1032E20", VA = "0x1032E20")]
		private void ScrambleCubes()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x10330C4", Offset = "0x10330C4", VA = "0x10330C4")]
		private void UnscrambleCubes()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class RubiksTile : RubiksCube
	{
		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Tile m_tile;

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1033388", Offset = "0x1033388", VA = "0x1033388")]
		public RubiksTile()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x103338C", Offset = "0x103338C", VA = "0x103338C", Slot = "4")]
		public override bool TryScramble()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x103349C", Offset = "0x103349C", VA = "0x103349C", Slot = "5")]
		[PunRPC]
		protected override void PunUnscramble()
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1033578", Offset = "0x1033578", VA = "0x1033578")]
		private void OnOccupyDone(bool occupySuccessful)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1033584", Offset = "0x1033584", VA = "0x1033584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C2E8", Offset = "0xC7C2E8")]
		private void <TryScramble>m__0(Tile tile, bool occupySuccessful)
		{
		}
	}
}
namespace Assets.Scripts.Environmental
{
	[Token(Token = "0x20000DF")]
	public class ScrollingUVs : MonoBehaviour
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int materialIndex;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 uvAnimationRate;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string textureName;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer _renderer;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 _uvOffset;

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xF20168", Offset = "0xF20168", VA = "0xF20168")]
		public ScrollingUVs()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xF201F0", Offset = "0xF201F0", VA = "0xF201F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xF20248", Offset = "0xF20248", VA = "0xF20248")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7C2F8", Offset = "0xC7C2F8")]
	public class Skeleton : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C4F4", Offset = "0xC7C4F4")]
		private sealed class <SkeletonController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector3 <selectedTilePosition>__1;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector3[] <arcPoints>__1;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Skeleton $this;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000536")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028B3")]
				[Address(RVA = "0xDDCD4C", Offset = "0xDDCD4C", VA = "0xDDCD4C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000537")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B4")]
				[Address(RVA = "0xDDCD54", Offset = "0xDDCD54", VA = "0xDDCD54", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0xDDC148", Offset = "0xDDC148", VA = "0xDDC148")]
			[DebuggerHidden]
			public <SkeletonController>c__Iterator0()
			{
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0xDDC7EC", Offset = "0xDDC7EC", VA = "0xDDC7EC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B5")]
			[Address(RVA = "0xDDCD5C", Offset = "0xDDCD5C", VA = "0xDDCD5C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xDDCD70", Offset = "0xDDCD70", VA = "0xDDCD70", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_waitForApperance;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_skeletonAnimator;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SkeletonAnimationEvents m_skeletonAnimationEvents;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Tile[] m_targetedTiles;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C39C", Offset = "0xC7C39C")]
		[SerializeField]
		private Transform m_projectileSpawnPoint;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_fireInterval;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_projectileDamage;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_projectileSpeed;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_aimProjectileSpeed;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_entraceTime;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_fireTime;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ProjectileMover m_projectile;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ProjectileMoverEnvironment m_trailRendererPoolObject;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C428", Offset = "0xC7C428")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C428", Offset = "0xC7C428")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x1700009D")]
		public bool IsPaused
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0xDDB7A0", Offset = "0xDDB7A0", VA = "0xDDB7A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C464", Offset = "0xC7C464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xDDB7A8", Offset = "0xDDB7A8", VA = "0xDDB7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C474", Offset = "0xC7C474")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public float FireTime
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xDDB7B4", Offset = "0xDDB7B4", VA = "0xDDB7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C484", Offset = "0xC7C484")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xDDB720", Offset = "0xDDB720", VA = "0xDDB720")]
		public Skeleton()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xDDB828", Offset = "0xDDB828", VA = "0xDDB828")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xDDB98C", Offset = "0xDDB98C", VA = "0xDDB98C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xDDBA40", Offset = "0xDDBA40", VA = "0xDDBA40")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xDDBB44", Offset = "0xDDBB44", VA = "0xDDBB44", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xDDBB50", Offset = "0xDDBB50", VA = "0xDDBB50")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xDDBB80", Offset = "0xDDBB80", VA = "0xDDBB80")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xDDC140", Offset = "0xDDC140", VA = "0xDDC140")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xDDC0B4", Offset = "0xDDC0B4", VA = "0xDDC0B4")]
		[DebuggerHidden]
		private IEnumerator SkeletonController(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xDDC150", Offset = "0xDDC150", VA = "0xDDC150")]
		[PunRPC]
		private void PunFireWarningShoot(Vector3[] arcPoints)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xDDC478", Offset = "0xDDC478", VA = "0xDDC478")]
		[PunRPC]
		private void PunFireProjectile(Vector3[] arcPoints)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xDDC7A4", Offset = "0xDDC7A4", VA = "0xDDC7A4")]
		[PunRPC]
		private void PunShowSkeleton()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xDDBDD8", Offset = "0xDDBDD8", VA = "0xDDBDD8")]
		private IPoolObject InstantiateProjectile(params object[] data)
		{
			return null;
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xDDBF54", Offset = "0xDDBF54", VA = "0xDDBF54")]
		private IPoolObject InstantiateProjectileTrail(params object[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E1")]
	public class SkeletonAnimationEvents : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource[] m_dropAudioSources;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] m_skeletonAudioClips;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] m_breathingClips;

		[Token(Token = "0x1700009F")]
		private AudioSource MainAudioSource
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0xDDCDDC", Offset = "0xDDCDDC", VA = "0xDDCDDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xDDCDD4", Offset = "0xDDCDD4", VA = "0xDDCDD4")]
		public SkeletonAnimationEvents()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xDDBD34", Offset = "0xDDBD34", VA = "0xDDBD34")]
		public void Reset()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xDDCE18", Offset = "0xDDCE18", VA = "0xDDCE18")]
		public void PlayAudio(int value)
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xDDD00C", Offset = "0xDDD00C", VA = "0xDDD00C")]
		public void Breathing()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xDDD0D0", Offset = "0xDDD0D0", VA = "0xDDD0D0")]
		public void Shoot()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xDDCF24", Offset = "0xDDCF24", VA = "0xDDCF24")]
		private AudioSource GetAudioSource()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E2")]
	public class TileDamageOccupier : MonoBehaviourPun, IPunInstantiateMagicCallback, IPoolObject, IPauseObject
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_damagePerSecond;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tile m_connectedTile;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Wielder m_targetWielder;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Summoned m_summoned;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_shouldEnableEffectWhenDamaging;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_isBeingDestroyed;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private EffectType m_effectType;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_pauseGameEventToken;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_unpauseGameEventToken;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C584", Offset = "0xC7C584")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C584", Offset = "0xC7C584")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C5C0", Offset = "0xC7C5C0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C5C0", Offset = "0xC7C5C0")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x170000A0")]
		public bool IsPaused
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0xDDD180", Offset = "0xDDD180", VA = "0xDDD180", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C5FC", Offset = "0xC7C5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0xDDD188", Offset = "0xDDD188", VA = "0xDDD188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C60C", Offset = "0xC7C60C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool IsActive
		{
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0xDDD194", Offset = "0xDDD194", VA = "0xDDD194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C61C", Offset = "0xC7C61C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xDDD19C", Offset = "0xDDD19C", VA = "0xDDD19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C62C", Offset = "0xC7C62C")]
			private set
			{
			}
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xDDD178", Offset = "0xDDD178", VA = "0xDDD178")]
		public TileDamageOccupier()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xDDD1A8", Offset = "0xDDD1A8", VA = "0xDDD1A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xDDD264", Offset = "0xDDD264", VA = "0xDDD264")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xDDD2DC", Offset = "0xDDD2DC", VA = "0xDDD2DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xDDD2E8", Offset = "0xDDD2E8", VA = "0xDDD2E8")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xDDD318", Offset = "0xDDD318", VA = "0xDDD318", Slot = "9")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xDDD324", Offset = "0xDDD324", VA = "0xDDD324", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xDDD600", Offset = "0xDDD600", VA = "0xDDD600")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xDDD798", Offset = "0xDDD798", VA = "0xDDD798", Slot = "6")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xDDD918", Offset = "0xDDD918", VA = "0xDDD918")]
		[PunRPC]
		private void PunEnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xDDDF48", Offset = "0xDDDF48", VA = "0xDDDF48")]
		private void OnTileOccupied(bool occupy)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xDDDC68", Offset = "0xDDDC68", VA = "0xDDDC68")]
		private void TileOccupy()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xDDDF54", Offset = "0xDDDF54", VA = "0xDDDF54")]
		private void TileUnoccupy()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xDDD4A8", Offset = "0xDDD4A8", VA = "0xDDD4A8", Slot = "7")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xDDE010", Offset = "0xDDE010", VA = "0xDDE010")]
		private void ResetTarget()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xDDE0EC", Offset = "0xDDE0EC", VA = "0xDDE0EC", Slot = "5")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7C66C", Offset = "0xC7C66C")]
	public class Train : MonoBehaviourPun, IPauseObject
	{
		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C894", Offset = "0xC7C894")]
		private sealed class <StartMovementCountdown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int waitTime;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Train $this;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000538")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028B9")]
				[Address(RVA = "0xDDF310", Offset = "0xDDF310", VA = "0xDDF310", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000539")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028BA")]
				[Address(RVA = "0xDDF318", Offset = "0xDDF318", VA = "0xDDF318", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xDDE6D0", Offset = "0xDDE6D0", VA = "0xDDE6D0")]
			[DebuggerHidden]
			public <StartMovementCountdown>c__Iterator0()
			{
			}

			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xDDF144", Offset = "0xDDF144", VA = "0xDDF144", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xDDF320", Offset = "0xDDF320", VA = "0xDDF320", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xDDF334", Offset = "0xDDF334", VA = "0xDDF334", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] m_wheels;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoadSfx[] m_cartSfxHandlers;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_pickUpCart;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PickupBase m_pickUp;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C750", Offset = "0xC7C750")]
		[SerializeField]
		private Vector3 m_endPosition;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_speedMultiplier;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_journeyTime;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_wheelRotationPerFrame;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C7CC", Offset = "0xC7C7CC")]
		[SerializeField]
		private AudioClip[] m_audioClips;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_playedStopSound;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_playedStartSound;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_startPosition;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_startTime;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_journeyLength;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_followPath;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_nextPosition;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_isStopping;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_previousPosition;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C818", Offset = "0xC7C818")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C818", Offset = "0xC7C818")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x170000A2")]
		public bool IsPaused
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0xDDE1D8", Offset = "0xDDE1D8", VA = "0xDDE1D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C854", Offset = "0xC7C854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0xDDE1E0", Offset = "0xDDE1E0", VA = "0xDDE1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C864", Offset = "0xC7C864")]
			set
			{
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xDDE0F4", Offset = "0xDDE0F4", VA = "0xDDE0F4")]
		public Train()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xDDE1EC", Offset = "0xDDE1EC", VA = "0xDDE1EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xDDE350", Offset = "0xDDE350", VA = "0xDDE350")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xDDE404", Offset = "0xDDE404", VA = "0xDDE404")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xDDE4A0", Offset = "0xDDE4A0", VA = "0xDDE4A0", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xDDE528", Offset = "0xDDE528", VA = "0xDDE528")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xDDE558", Offset = "0xDDE558", VA = "0xDDE558")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xDDE61C", Offset = "0xDDE61C", VA = "0xDDE61C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xDDE55C", Offset = "0xDDE55C", VA = "0xDDE55C")]
		private void StartMovement()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xDDE644", Offset = "0xDDE644", VA = "0xDDE644")]
		[DebuggerHidden]
		private IEnumerator StartMovementCountdown(int waitTime)
		{
			return null;
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xDDE6D8", Offset = "0xDDE6D8", VA = "0xDDE6D8")]
		[PunRPC]
		private void PunStartTrainMovement(float currentRoomTime)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xDDE944", Offset = "0xDDE944", VA = "0xDDE944")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xDDF048", Offset = "0xDDF048", VA = "0xDDF048")]
		public void SetSfxActive(bool enable, float fadeTime)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xDDEE38", Offset = "0xDDEE38", VA = "0xDDEE38")]
		private void SoundActivation(float nextPosition)
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class TrainCollider : MonoBehaviour, IPauseObject
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask m_collisionMask;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_toggleOn;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C934", Offset = "0xC7C934")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7C934", Offset = "0xC7C934")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x170000A3")]
		public bool IsPaused
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0xDDF3A8", Offset = "0xDDF3A8", VA = "0xDDF3A8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C970", Offset = "0xC7C970")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xDDF3B0", Offset = "0xDDF3B0", VA = "0xDDF3B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7C980", Offset = "0xC7C980")]
			set
			{
			}
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xDDF398", Offset = "0xDDF398", VA = "0xDDF398")]
		public TrainCollider()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xDDF3BC", Offset = "0xDDF3BC", VA = "0xDDF3BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xDDF478", Offset = "0xDDF478", VA = "0xDDF478")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xDDF4F0", Offset = "0xDDF4F0", VA = "0xDDF4F0", Slot = "5")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xDDF5C4", Offset = "0xDDF5C4", VA = "0xDDF5C4")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xDDF5F4", Offset = "0xDDF5F4", VA = "0xDDF5F4")]
		private void OnTriggerEnter(Collider collider)
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class TrainHandler : Move
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7C990", Offset = "0xC7C990")]
		[SerializeField]
		private Rigidbody[] m_trains;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector3[] m_endPosOffsets;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7C9EC", Offset = "0xC7C9EC")]
		private float m_randomMoveTimeMin;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7CA30", Offset = "0xC7CA30")]
		private float m_randomMoveTimeMax;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] m_moveTimes;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] m_startPositions;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] m_endPositions;

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xDDF754", Offset = "0xDDF754", VA = "0xDDF754")]
		public TrainHandler()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xDDF7D4", Offset = "0xDDF7D4", VA = "0xDDF7D4", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xDDFA6C", Offset = "0xDDFA6C", VA = "0xDDFA6C", Slot = "9")]
		protected override void UpdateMove()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xDE0324", Offset = "0xDE0324", VA = "0xDE0324", Slot = "10")]
		public override void StartMovement()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xDE01B8", Offset = "0xDE01B8", VA = "0xDE01B8")]
		private void StartMovement(int index)
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xDDFF98", Offset = "0xDDFF98", VA = "0xDDFF98")]
		private void SetMoveProperties(int index)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xDE0384", Offset = "0xDE0384", VA = "0xDE0384")]
		private float SetGetMoveTime(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xDDFCD4", Offset = "0xDDFCD4", VA = "0xDDFCD4")]
		private float GetCurrentMoveTime(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xDDFE28", Offset = "0xDDFE28", VA = "0xDDFE28")]
		private float GetMoveTime(int index)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7CA74", Offset = "0xC7CA74")]
	public class ValeHealEffect : MonoBehaviourPun, IPunInstantiateMagicCallback, IPoolObject, IPauseObject
	{
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CB84", Offset = "0xC7CB84")]
		private sealed class <DisableAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ValeHealEffect $this;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700053A")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028BF")]
				[Address(RVA = "0xDE1248", Offset = "0xDE1248", VA = "0xDE1248", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C0")]
				[Address(RVA = "0xDE1250", Offset = "0xDE1250", VA = "0xDE1250", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xDE0C3C", Offset = "0xDE0C3C", VA = "0xDE0C3C")]
			[DebuggerHidden]
			public <DisableAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xDE1170", Offset = "0xDE1170", VA = "0xDE1170", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xDE1258", Offset = "0xDE1258", VA = "0xDE1258", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xDE126C", Offset = "0xDE126C", VA = "0xDE126C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000779")]
		public const float DefaultHealingCycleTime = 10f;

		[Token(Token = "0x400077A")]
		public const float DefaultHealingPerSeconds = 2f;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SplitAudioSoundPlayer m_soundPlayer;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tile m_connectedTile;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Wielder m_targetWielder;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CAD8", Offset = "0xC7CAD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CAD8", Offset = "0xC7CAD8")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x170000A4")]
		public bool IsPaused
		{
			[Token(Token = "0x6000404")]
			[Address(RVA = "0xDE0438", Offset = "0xDE0438", VA = "0xDE0438", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CB14", Offset = "0xC7CB14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000405")]
			[Address(RVA = "0xDE0440", Offset = "0xDE0440", VA = "0xDE0440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CB24", Offset = "0xC7CB24")]
			set
			{
			}
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xDE0430", Offset = "0xDE0430", VA = "0xDE0430")]
		public ValeHealEffect()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xDE044C", Offset = "0xDE044C", VA = "0xDE044C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xDE05B0", Offset = "0xDE05B0", VA = "0xDE05B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xDE0664", Offset = "0xDE0664", VA = "0xDE0664")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xDE07F4", Offset = "0xDE07F4", VA = "0xDE07F4")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xDE098C", Offset = "0xDE098C", VA = "0xDE098C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xDE0990", Offset = "0xDE0990", VA = "0xDE0990")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xDE09C0", Offset = "0xDE09C0", VA = "0xDE09C0", Slot = "9")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xDE09CC", Offset = "0xDE09CC", VA = "0xDE09CC", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xDE0A60", Offset = "0xDE0A60", VA = "0xDE0A60", Slot = "6")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xDE0BD0", Offset = "0xDE0BD0", VA = "0xDE0BD0")]
		[DebuggerHidden]
		private IEnumerator DisableAfterTime()
		{
			return null;
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xDE0C44", Offset = "0xDE0C44", VA = "0xDE0C44")]
		[PunRPC]
		private void PunEnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xDE1030", Offset = "0xDE1030", VA = "0xDE1030")]
		private void OnTileOccupied(bool occupy)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xDE0F48", Offset = "0xDE0F48", VA = "0xDE0F48")]
		private void TileOccupy()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xDE1074", Offset = "0xDE1074", VA = "0xDE1074")]
		private void TileUnoccupy()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xDE10A4", Offset = "0xDE10A4", VA = "0xDE10A4", Slot = "10")]
		public virtual void DisableObject()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xDE07F8", Offset = "0xDE07F8", VA = "0xDE07F8")]
		[PunRPC]
		private void PunDisableObject()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xDE0A28", Offset = "0xDE0A28", VA = "0xDE0A28")]
		private void DisableGameObject()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xDE1168", Offset = "0xDE1168", VA = "0xDE1168", Slot = "5")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
}
namespace CortopiaEvents
{
	[Token(Token = "0x20000E7")]
	public class Events
	{
		[Token(Token = "0x20000E8")]
		public class SpellSlotDragBeginEvent : EventBase
		{
			[Token(Token = "0x4000782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellSlot SpellSlot;

			[Token(Token = "0x4000783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WandSlot WandSlot;

			[Token(Token = "0x6000419")]
			[Address(RVA = "0xF5F180", Offset = "0xF5F180", VA = "0xF5F180")]
			public SpellSlotDragBeginEvent()
			{
			}
		}

		[Token(Token = "0x20000E9")]
		public class SpellSlotDragEndEvent : EventBase
		{
			[Token(Token = "0x4000784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellSlot SpellSlot;

			[Token(Token = "0x4000785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WandSlot WandSlot;

			[Token(Token = "0x600041A")]
			[Address(RVA = "0xF5F188", Offset = "0xF5F188", VA = "0xF5F188")]
			public SpellSlotDragEndEvent()
			{
			}
		}

		[Token(Token = "0x20000EA")]
		public class SpellSlotSelectedEvent : EventBase
		{
			[Token(Token = "0x4000786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellSlot SpellSlot;

			[Token(Token = "0x4000787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WandSlot WandSlot;

			[Token(Token = "0x600041B")]
			[Address(RVA = "0xF5F190", Offset = "0xF5F190", VA = "0xF5F190")]
			public SpellSlotSelectedEvent()
			{
			}
		}

		[Token(Token = "0x20000EB")]
		public class SpellSlotDeselectedEvent : EventBase
		{
			[Token(Token = "0x4000788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellSlot SpellSlot;

			[Token(Token = "0x600041C")]
			[Address(RVA = "0xF5F178", Offset = "0xF5F178", VA = "0xF5F178")]
			public SpellSlotDeselectedEvent()
			{
			}
		}

		[Token(Token = "0x20000EC")]
		public class SpellUnlockedEvent : EventBase
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xF5F198", Offset = "0xF5F198", VA = "0xF5F198")]
			public SpellUnlockedEvent()
			{
			}
		}

		[Token(Token = "0x20000ED")]
		public class SpellInfoUpdatedEvent : EventBase
		{
			[Token(Token = "0x4000789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellSlot SpellSlot;

			[Token(Token = "0x600041E")]
			[Address(RVA = "0xF5F170", Offset = "0xF5F170", VA = "0xF5F170")]
			public SpellInfoUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x20000EE")]
		public class MatchPausedEvent : EventBase
		{
			[Token(Token = "0x400078A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsPaused;

			[Token(Token = "0x400078B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PausesLeft;

			[Token(Token = "0x600041F")]
			[Address(RVA = "0xF5F080", Offset = "0xF5F080", VA = "0xF5F080")]
			public MatchPausedEvent()
			{
			}
		}

		[Token(Token = "0x20000EF")]
		public class LobbyPausedEvent : EventBase
		{
			[Token(Token = "0x400078C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsPaused;

			[Token(Token = "0x6000420")]
			[Address(RVA = "0xF5F058", Offset = "0xF5F058", VA = "0xF5F058")]
			public LobbyPausedEvent()
			{
			}
		}

		[Token(Token = "0x20000F0")]
		public class MatchResetEvent : EventBase
		{
			[Token(Token = "0x400078D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType MatchType;

			[Token(Token = "0x6000421")]
			[Address(RVA = "0xF5F088", Offset = "0xF5F088", VA = "0xF5F088")]
			public MatchResetEvent()
			{
			}
		}

		[Token(Token = "0x20000F1")]
		public class SuddenDeathStartedEvent : EventBase
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0xF5F1A8", Offset = "0xF5F1A8", VA = "0xF5F1A8")]
			public SuddenDeathStartedEvent()
			{
			}
		}

		[Token(Token = "0x20000F2")]
		public class MatchEndedEvent : EventBase
		{
			[Token(Token = "0x400078E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EndState EndState;

			[Token(Token = "0x6000423")]
			[Address(RVA = "0xF5F060", Offset = "0xF5F060", VA = "0xF5F060")]
			public MatchEndedEvent()
			{
			}
		}

		[Token(Token = "0x20000F3")]
		public class ConnectToMatch : EventBase
		{
			[Token(Token = "0x400078F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string RoomName;

			[Token(Token = "0x4000790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JoinState JoinState;

			[Token(Token = "0x4000791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Arena Arena;

			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchType MatchType;

			[Token(Token = "0x6000424")]
			[Address(RVA = "0xF5EF68", Offset = "0xF5EF68", VA = "0xF5EF68")]
			public ConnectToMatch()
			{
			}
		}

		[Token(Token = "0x20000F4")]
		public class ConnectedToMatchRoom : EventBase
		{
			[Token(Token = "0x4000793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string RoomName;

			[Token(Token = "0x4000794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RoomCreationReason CreationReason;

			[Token(Token = "0x4000795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public JoinState JoinState;

			[Token(Token = "0x4000796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arena Arena;

			[Token(Token = "0x4000797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MatchType MatchType;

			[Token(Token = "0x6000425")]
			[Address(RVA = "0xF5EF58", Offset = "0xF5EF58", VA = "0xF5EF58")]
			public ConnectedToMatchRoom()
			{
			}
		}

		[Token(Token = "0x20000F5")]
		public class ConnectedToMatchLobby : EventBase
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0xF5EF50", Offset = "0xF5EF50", VA = "0xF5EF50")]
			public ConnectedToMatchLobby()
			{
			}
		}

		[Token(Token = "0x20000F6")]
		public class ReceivedRoomListUpdate : EventBase
		{
			[Token(Token = "0x4000798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomInfo[] Rooms;

			[Token(Token = "0x6000427")]
			[Address(RVA = "0xF5F148", Offset = "0xF5F148", VA = "0xF5F148")]
			public ReceivedRoomListUpdate()
			{
			}
		}

		[Token(Token = "0x20000F7")]
		public class ConnectToMatchRoomFailed : EventBase
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0xF5EF78", Offset = "0xF5EF78", VA = "0xF5EF78")]
			public ConnectToMatchRoomFailed()
			{
			}
		}

		[Token(Token = "0x20000F8")]
		public class ConnectToMatchLobbyFailed : EventBase
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0xF5EF70", Offset = "0xF5EF70", VA = "0xF5EF70")]
			public ConnectToMatchLobbyFailed()
			{
			}
		}

		[Token(Token = "0x20000F9")]
		public class ConnectedToPhotonMasterEvent : EventBase
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0xF5EF60", Offset = "0xF5EF60", VA = "0xF5EF60")]
			public ConnectedToPhotonMasterEvent()
			{
			}
		}

		[Token(Token = "0x20000FA")]
		public class MatchTypeUpdatedEvent : EventBase
		{
			[Token(Token = "0x4000799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType MatchType;

			[Token(Token = "0x600042B")]
			[Address(RVA = "0xF5F090", Offset = "0xF5F090", VA = "0xF5F090")]
			public MatchTypeUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x20000FB")]
		public class EnterPreMatchEvent : EventBase
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0xF5EFD8", Offset = "0xF5EFD8", VA = "0xF5EFD8")]
			public EnterPreMatchEvent()
			{
			}
		}

		[Token(Token = "0x20000FC")]
		public class EnterPostMatchEvent : EventBase
		{
			[Token(Token = "0x600042D")]
			[Address(RVA = "0xF5EFD0", Offset = "0xF5EFD0", VA = "0xF5EFD0")]
			public EnterPostMatchEvent()
			{
			}
		}

		[Token(Token = "0x20000FD")]
		public class PostMatchUiSkippedEvent : EventBase
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0xF5F110", Offset = "0xF5F110", VA = "0xF5F110")]
			public PostMatchUiSkippedEvent()
			{
			}
		}

		[Token(Token = "0x20000FE")]
		public class TryToFindNewMatchEvent : EventBase
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0xF5F1E8", Offset = "0xF5F1E8", VA = "0xF5F1E8")]
			public TryToFindNewMatchEvent()
			{
			}
		}

		[Token(Token = "0x20000FF")]
		public class PlayerReadyEvent : EventBase
		{
			[Token(Token = "0x400079A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsLocalPlayer;

			[Token(Token = "0x400079B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool IsReady;

			[Token(Token = "0x6000430")]
			[Address(RVA = "0xF5F0D8", Offset = "0xF5F0D8", VA = "0xF5F0D8")]
			public PlayerReadyEvent()
			{
			}
		}

		[Token(Token = "0x2000100")]
		public class PlayerRequestedRematchEvent : EventBase
		{
			[Token(Token = "0x400079C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsLocalPlayer;

			[Token(Token = "0x6000431")]
			[Address(RVA = "0xF5F0E0", Offset = "0xF5F0E0", VA = "0xF5F0E0")]
			public PlayerRequestedRematchEvent()
			{
			}
		}

		[Token(Token = "0x2000101")]
		public class WielderSpawnedEvent : EventBase
		{
			[Token(Token = "0x400079D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Wielder Wielder;

			[Token(Token = "0x6000432")]
			[Address(RVA = "0xF5F250", Offset = "0xF5F250", VA = "0xF5F250")]
			public WielderSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000102")]
		public class PlayerControlSpawnedEvent : EventBase
		{
			[Token(Token = "0x400079E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControl PlayerControl;

			[Token(Token = "0x6000433")]
			[Address(RVA = "0xF5F0C8", Offset = "0xF5F0C8", VA = "0xF5F0C8")]
			public PlayerControlSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000103")]
		public class BotControlSpawnedEvent : EventBase
		{
			[Token(Token = "0x400079F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BotControl BotControl;

			[Token(Token = "0x6000434")]
			[Address(RVA = "0xF5EF10", Offset = "0xF5EF10", VA = "0xF5EF10")]
			public BotControlSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000104")]
		public class TileAreaEnterEvent : EventBase
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xF5F1B8", Offset = "0xF5F1B8", VA = "0xF5F1B8")]
			public TileAreaEnterEvent()
			{
			}
		}

		[Token(Token = "0x2000105")]
		public class TileAreaExitEvent : EventBase
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0xF5F1C0", Offset = "0xF5F1C0", VA = "0xF5F1C0")]
			public TileAreaExitEvent()
			{
			}
		}

		[Token(Token = "0x2000106")]
		public class ResetToTileAreaEvent : EventBase
		{
			[Token(Token = "0x40007A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 TilePosition;

			[Token(Token = "0x6000437")]
			[Address(RVA = "0xF5F150", Offset = "0xF5F150", VA = "0xF5F150")]
			public ResetToTileAreaEvent()
			{
			}
		}

		[Token(Token = "0x2000107")]
		public class WandPositionValidationEvent : EventBase
		{
			[Token(Token = "0x40007A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsWandPositionValid;

			[Token(Token = "0x6000438")]
			[Address(RVA = "0xF4EBEC", Offset = "0xF4EBEC", VA = "0xF4EBEC")]
			public WandPositionValidationEvent()
			{
			}
		}

		[Token(Token = "0x2000108")]
		public class OnCameraRecenteredEvent : EventBase
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0xF5F0A8", Offset = "0xF5F0A8", VA = "0xF5F0A8")]
			public OnCameraRecenteredEvent()
			{
			}
		}

		[Token(Token = "0x2000109")]
		public class DamageTakenEvent : EventBase
		{
			[Token(Token = "0x40007A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterControl CharacterControl;

			[Token(Token = "0x40007A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Damage;

			[Token(Token = "0x600043A")]
			[Address(RVA = "0xF5EFB0", Offset = "0xF5EFB0", VA = "0xF5EFB0")]
			public DamageTakenEvent()
			{
			}
		}

		[Token(Token = "0x200010A")]
		public class TeleportEndedEvent : EventBase
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0xF5F1B0", Offset = "0xF5F1B0", VA = "0xF5F1B0")]
			public TeleportEndedEvent()
			{
			}
		}

		[Token(Token = "0x200010B")]
		public class TilePredictedUnsafeEvent : EventBase
		{
			[Token(Token = "0x40007A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tile Tile;

			[Token(Token = "0x600043C")]
			[Address(RVA = "0xF5F1D0", Offset = "0xF5F1D0", VA = "0xF5F1D0")]
			public TilePredictedUnsafeEvent()
			{
			}
		}

		[Token(Token = "0x200010C")]
		public class TilePredictedSafeEvent : EventBase
		{
			[Token(Token = "0x40007A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tile Tile;

			[Token(Token = "0x600043D")]
			[Address(RVA = "0xF5F1C8", Offset = "0xF5F1C8", VA = "0xF5F1C8")]
			public TilePredictedSafeEvent()
			{
			}
		}

		[Token(Token = "0x200010D")]
		public class DefensiveSpellCastEvent : EventBase
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0xF5EFB8", Offset = "0xF5EFB8", VA = "0xF5EFB8")]
			public DefensiveSpellCastEvent()
			{
			}
		}

		[Token(Token = "0x200010E")]
		public class InstantSpellInitiatedEvent : EventBase
		{
			[Token(Token = "0x40007A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tile Tile;

			[Token(Token = "0x600043F")]
			[Address(RVA = "0xF5F018", Offset = "0xF5F018", VA = "0xF5F018")]
			public InstantSpellInitiatedEvent()
			{
			}
		}

		[Token(Token = "0x200010F")]
		public class InstantSpellChargedEvent : EventBase
		{
			[Token(Token = "0x40007A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 FromPosition;

			[Token(Token = "0x40007A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float TimeUntilFullyCharged;

			[Token(Token = "0x6000440")]
			[Address(RVA = "0xF5F010", Offset = "0xF5F010", VA = "0xF5F010")]
			public InstantSpellChargedEvent()
			{
			}
		}

		[Token(Token = "0x2000110")]
		public class InstantSpellReleasedEvent : EventBase
		{
			[Token(Token = "0x6000441")]
			[Address(RVA = "0xF5F020", Offset = "0xF5F020", VA = "0xF5F020")]
			public InstantSpellReleasedEvent()
			{
			}
		}

		[Token(Token = "0x2000111")]
		public class PredictableCurverCastEvent : EventBase
		{
			[Token(Token = "0x40007A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IPredictableCurver PredictableCurver;

			[Token(Token = "0x6000442")]
			[Address(RVA = "0xF5F120", Offset = "0xF5F120", VA = "0xF5F120")]
			public PredictableCurverCastEvent()
			{
			}
		}

		[Token(Token = "0x2000112")]
		public class CollarsActivatedEvent : EventBase
		{
			[Token(Token = "0x40007AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tile Tile;

			[Token(Token = "0x6000443")]
			[Address(RVA = "0xF5EF40", Offset = "0xF5EF40", VA = "0xF5EF40")]
			public CollarsActivatedEvent()
			{
			}
		}

		[Token(Token = "0x2000113")]
		public class CollarsDeactivatedEvent : EventBase
		{
			[Token(Token = "0x40007AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tile Tile;

			[Token(Token = "0x6000444")]
			[Address(RVA = "0xF5EF48", Offset = "0xF5EF48", VA = "0xF5EF48")]
			public CollarsDeactivatedEvent()
			{
			}
		}

		[Token(Token = "0x2000114")]
		public class BotDifficultySelectedEvent : EventBase
		{
			[Token(Token = "0x40007AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BotDifficultyLevel DifficultyLevel;

			[Token(Token = "0x6000445")]
			[Address(RVA = "0xF5EF18", Offset = "0xF5EF18", VA = "0xF5EF18")]
			public BotDifficultySelectedEvent()
			{
			}
		}

		[Token(Token = "0x2000115")]
		public class CountdownEndedEvent : EventBase
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xF5EF88", Offset = "0xF5EF88", VA = "0xF5EF88")]
			public CountdownEndedEvent()
			{
			}
		}

		[Token(Token = "0x2000116")]
		public class CountdownStartedEvent : EventBase
		{
			[Token(Token = "0x40007AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Time;

			[Token(Token = "0x6000447")]
			[Address(RVA = "0xF5EF98", Offset = "0xF5EF98", VA = "0xF5EF98")]
			public CountdownStartedEvent()
			{
			}
		}

		[Token(Token = "0x2000117")]
		public class CountdownCanceledEvent : EventBase
		{
			[Token(Token = "0x6000448")]
			[Address(RVA = "0xF5EF80", Offset = "0xF5EF80", VA = "0xF5EF80")]
			public CountdownCanceledEvent()
			{
			}
		}

		[Token(Token = "0x2000118")]
		public class CountdownPausedEvent : EventBase
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xF5EF90", Offset = "0xF5EF90", VA = "0xF5EF90")]
			public CountdownPausedEvent()
			{
			}
		}

		[Token(Token = "0x2000119")]
		public class CountdownTimeUpdatedEvent : EventBase
		{
			[Token(Token = "0x40007AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Time;

			[Token(Token = "0x600044A")]
			[Address(RVA = "0xF5EFA0", Offset = "0xF5EFA0", VA = "0xF5EFA0")]
			public CountdownTimeUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x200011A")]
		public class FinalCountdownStartedEvent : EventBase
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0xF5EFE8", Offset = "0xF5EFE8", VA = "0xF5EFE8")]
			public FinalCountdownStartedEvent()
			{
			}
		}

		[Token(Token = "0x200011B")]
		public class EloChangedEvent : EventBase
		{
			[Token(Token = "0x40007AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EndState EndState;

			[Token(Token = "0x40007B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MatchType MatchType;

			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int EloChange;

			[Token(Token = "0x600044C")]
			[Address(RVA = "0xF5EFC8", Offset = "0xF5EFC8", VA = "0xF5EFC8")]
			public EloChangedEvent()
			{
			}
		}

		[Token(Token = "0x200011C")]
		public class DestructableSpawnedEvent : EventBase
		{
			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IDestructableObject Destructable;

			[Token(Token = "0x600044D")]
			[Address(RVA = "0xF5EFC0", Offset = "0xF5EFC0", VA = "0xF5EFC0")]
			public DestructableSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x200011D")]
		public class SceneLoadInitiatedEvent : EventBase
		{
			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level CurrentLevel;

			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Level LevelToLoad;

			[Token(Token = "0x600044E")]
			[Address(RVA = "0xF5F160", Offset = "0xF5F160", VA = "0xF5F160")]
			public SceneLoadInitiatedEvent()
			{
			}
		}

		[Token(Token = "0x200011E")]
		public class SceneLoadedEvent : EventBase
		{
			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene Scene;

			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LoadSceneMode LoadSceneMode;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Level Level;

			[Token(Token = "0x600044F")]
			[Address(RVA = "0xF5F158", Offset = "0xF5F158", VA = "0xF5F158")]
			public SceneLoadedEvent()
			{
			}
		}

		[Token(Token = "0x200011F")]
		public class LeadboardLoadedEvent : EventBase
		{
			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LeaderboardType LeaderboardType;

			[Token(Token = "0x6000450")]
			[Address(RVA = "0xF5F040", Offset = "0xF5F040", VA = "0xF5F040")]
			public LeadboardLoadedEvent()
			{
			}
		}

		[Token(Token = "0x2000120")]
		public class WandUiToggledEvent : EventBase
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0xF54930", Offset = "0xF54930", VA = "0xF54930")]
			public WandUiToggledEvent()
			{
			}
		}

		[Token(Token = "0x2000121")]
		public class ActivateDesertTempleDoorsEvent : EventBase
		{
			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enable;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public DesertTempleEnvironmentType EnvironmentType;

			[Token(Token = "0x6000452")]
			[Address(RVA = "0xF5EED8", Offset = "0xF5EED8", VA = "0xF5EED8")]
			public ActivateDesertTempleDoorsEvent()
			{
			}
		}

		[Token(Token = "0x2000122")]
		public class ActivateSandstormDesertTempleEvent : EventBase
		{
			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float JourneyTime;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float CurrentMatchTime;

			[Token(Token = "0x6000453")]
			[Address(RVA = "0xF5EEE8", Offset = "0xF5EEE8", VA = "0xF5EEE8")]
			public ActivateSandstormDesertTempleEvent()
			{
			}
		}

		[Token(Token = "0x2000123")]
		public class BuildupSandstormDesertTempleEvent : EventBase
		{
			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float JourneyTime;

			[Token(Token = "0x6000454")]
			[Address(RVA = "0xF5EF28", Offset = "0xF5EF28", VA = "0xF5EF28")]
			public BuildupSandstormDesertTempleEvent()
			{
			}
		}

		[Token(Token = "0x2000124")]
		public class BuildupGasDesertTempleEvent : EventBase
		{
			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float JourneyTime;

			[Token(Token = "0x6000455")]
			[Address(RVA = "0xF5EF20", Offset = "0xF5EF20", VA = "0xF5EF20")]
			public BuildupGasDesertTempleEvent()
			{
			}
		}

		[Token(Token = "0x2000125")]
		public class ActivateGasDesertTempleEvent : EventBase
		{
			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float JourneyTime;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float CurrentMatchTime;

			[Token(Token = "0x6000456")]
			[Address(RVA = "0xF5EEE0", Offset = "0xF5EEE0", VA = "0xF5EEE0")]
			public ActivateGasDesertTempleEvent()
			{
			}
		}

		[Token(Token = "0x2000126")]
		public class UserFetchCompletedEvent : EventBase
		{
			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ErrorMsg;

			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string AccountID;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string EncryptionID;

			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool IsLoggedIn;

			[Token(Token = "0x6000457")]
			[Address(RVA = "0xF5F210", Offset = "0xF5F210", VA = "0xF5F210")]
			public UserFetchCompletedEvent()
			{
			}
		}

		[Token(Token = "0x2000127")]
		public class MirrorOpenedEvent : EventBase
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0xF5F0A0", Offset = "0xF5F0A0", VA = "0xF5F0A0")]
			public MirrorOpenedEvent()
			{
			}
		}

		[Token(Token = "0x2000128")]
		public class MirrorClosedEvent : EventBase
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0xF5F098", Offset = "0xF5F098", VA = "0xF5F098")]
			public MirrorClosedEvent()
			{
			}
		}

		[Token(Token = "0x2000129")]
		public class AssetBundlesLoadedEvent : EventBase
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0xF5EF08", Offset = "0xF5EF08", VA = "0xF5EF08")]
			public AssetBundlesLoadedEvent()
			{
			}
		}

		[Token(Token = "0x200012A")]
		public class AreaBundlesLoadedEvent : EventBase
		{
			[Token(Token = "0x600045B")]
			[Address(RVA = "0xF5EEF8", Offset = "0xF5EEF8", VA = "0xF5EEF8")]
			public AreaBundlesLoadedEvent()
			{
			}
		}

		[Token(Token = "0x200012B")]
		public class InternetConnectionVerifiedEvent : EventBase
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0xF5F030", Offset = "0xF5F030", VA = "0xF5F030")]
			public InternetConnectionVerifiedEvent()
			{
			}
		}

		[Token(Token = "0x200012C")]
		public class InternetConnectionNotAvailableEvent : EventBase
		{
			[Token(Token = "0x600045D")]
			[Address(RVA = "0xF5F028", Offset = "0xF5F028", VA = "0xF5F028")]
			public InternetConnectionNotAvailableEvent()
			{
			}
		}

		[Token(Token = "0x200012D")]
		public class InternetRequiredButNotAvailableEvent : EventBase
		{
			[Token(Token = "0x600045E")]
			[Address(RVA = "0xF5F038", Offset = "0xF5F038", VA = "0xF5F038")]
			public InternetRequiredButNotAvailableEvent()
			{
			}
		}

		[Token(Token = "0x200012E")]
		public class PlatformLoginFailedEvent : EventBase
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0xF5F0C0", Offset = "0xF5F0C0", VA = "0xF5F0C0")]
			public PlatformLoginFailedEvent()
			{
			}
		}

		[Token(Token = "0x200012F")]
		public class PlayFabLoadingEvent : EventBase
		{
			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Success;

			[Token(Token = "0x40007C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LoginErrorCode ErrorCode;

			[Token(Token = "0x6000460")]
			[Address(RVA = "0xF5F0F0", Offset = "0xF5F0F0", VA = "0xF5F0F0")]
			public PlayFabLoadingEvent()
			{
			}
		}

		[Token(Token = "0x2000130")]
		public class PlayfabDataLoadedEvent : EventBase
		{
			[Token(Token = "0x40007C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Success;

			[Token(Token = "0x6000461")]
			[Address(RVA = "0xF5F0E8", Offset = "0xF5F0E8", VA = "0xF5F0E8")]
			public PlayfabDataLoadedEvent()
			{
			}
		}

		[Token(Token = "0x2000131")]
		public class PlayFabSessionExpiredEvent : EventBase
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0xF5F0F8", Offset = "0xF5F0F8", VA = "0xF5F0F8")]
			public PlayFabSessionExpiredEvent()
			{
			}
		}

		[Token(Token = "0x2000132")]
		public class InitiateStartupSceneLoadEvent : EventBase
		{
			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level LoadLevel;

			[Token(Token = "0x6000463")]
			[Address(RVA = "0xF5F008", Offset = "0xF5F008", VA = "0xF5F008")]
			public InitiateStartupSceneLoadEvent()
			{
			}
		}

		[Token(Token = "0x2000133")]
		public class StartupSceneFinishedLoadingEvent : EventBase
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0xF5F1A0", Offset = "0xF5F1A0", VA = "0xF5F1A0")]
			public StartupSceneFinishedLoadingEvent()
			{
			}
		}

		[Token(Token = "0x2000134")]
		public class ActivateStartupSceneEvent : EventBase
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0xF5EEF0", Offset = "0xF5EEF0", VA = "0xF5EEF0")]
			public ActivateStartupSceneEvent()
			{
			}
		}

		[Token(Token = "0x2000135")]
		public class GameSaveDataLoadedEvent : EventBase
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xF5F000", Offset = "0xF5F000", VA = "0xF5F000")]
			public GameSaveDataLoadedEvent()
			{
			}
		}

		[Token(Token = "0x2000136")]
		public class LevelInitializedEvent : EventBase
		{
			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level Level;

			[Token(Token = "0x6000467")]
			[Address(RVA = "0xF5F048", Offset = "0xF5F048", VA = "0xF5F048")]
			public LevelInitializedEvent()
			{
			}
		}

		[Token(Token = "0x2000137")]
		public class WriteEntitlementFailedMessage : EventBase
		{
			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Message;

			[Token(Token = "0x6000468")]
			[Address(RVA = "0xF5F278", Offset = "0xF5F278", VA = "0xF5F278")]
			public WriteEntitlementFailedMessage()
			{
			}
		}

		[Token(Token = "0x2000138")]
		public class WriteDebugMessage : EventBase
		{
			[Token(Token = "0x40007CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Message;

			[Token(Token = "0x6000469")]
			[Address(RVA = "0xF5F270", Offset = "0xF5F270", VA = "0xF5F270")]
			public WriteDebugMessage()
			{
			}
		}

		[Token(Token = "0x2000139")]
		public class PurchasedFullGameEvent : EventBase
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0xF5F138", Offset = "0xF5F138", VA = "0xF5F138")]
			public PurchasedFullGameEvent()
			{
			}
		}

		[Token(Token = "0x200013A")]
		public class PurchasedFullGameFailedEvent : EventBase
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0xF5F140", Offset = "0xF5F140", VA = "0xF5F140")]
			public PurchasedFullGameFailedEvent()
			{
			}
		}

		[Token(Token = "0x200013B")]
		public class PrimaryInputDownEvent : EventBase
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0xF5F128", Offset = "0xF5F128", VA = "0xF5F128")]
			public PrimaryInputDownEvent()
			{
			}
		}

		[Token(Token = "0x200013C")]
		public class LoadoutSelectedEvent : EventBase
		{
			[Token(Token = "0x40007CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int WandIndex;

			[Token(Token = "0x600046D")]
			[Address(RVA = "0xF5F050", Offset = "0xF5F050", VA = "0xF5F050")]
			public LoadoutSelectedEvent()
			{
			}
		}

		[Token(Token = "0x200013D")]
		public class TutorialProgressedEvent : EventBase
		{
			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialState State;

			[Token(Token = "0x600046E")]
			[Address(RVA = "0xF5F1F0", Offset = "0xF5F1F0", VA = "0xF5F1F0")]
			public TutorialProgressedEvent()
			{
			}
		}

		[Token(Token = "0x200013E")]
		public class TutorialVoiceOverCompleted : EventBase
		{
			[Token(Token = "0x40007CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialState State;

			[Token(Token = "0x600046F")]
			[Address(RVA = "0xF5F208", Offset = "0xF5F208", VA = "0xF5F208")]
			public TutorialVoiceOverCompleted()
			{
			}
		}

		[Token(Token = "0x200013F")]
		public class TutorialVoiceOverClipStartedEvent : EventBase
		{
			[Token(Token = "0x40007CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip AudioClip;

			[Token(Token = "0x6000470")]
			[Address(RVA = "0xF5F200", Offset = "0xF5F200", VA = "0xF5F200")]
			public TutorialVoiceOverClipStartedEvent()
			{
			}
		}

		[Token(Token = "0x2000140")]
		public class TutorialVoiceOverClipCompletedEvent : EventBase
		{
			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip AudioClip;

			[Token(Token = "0x6000471")]
			[Address(RVA = "0xF5F1F8", Offset = "0xF5F1F8", VA = "0xF5F1F8")]
			public TutorialVoiceOverClipCompletedEvent()
			{
			}
		}

		[Token(Token = "0x2000141")]
		public class PostTutorialTriggeredEvent : EventBase
		{
			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PostTutorialTriggerType Trigger;

			[Token(Token = "0x6000472")]
			[Address(RVA = "0xF5F118", Offset = "0xF5F118", VA = "0xF5F118")]
			public PostTutorialTriggeredEvent()
			{
			}
		}

		[Token(Token = "0x2000142")]
		public class OnSubtitlesShowEvent : EventBase
		{
			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsShown;

			[Token(Token = "0x6000473")]
			[Address(RVA = "0xF5F0B0", Offset = "0xF5F0B0", VA = "0xF5F0B0")]
			public OnSubtitlesShowEvent()
			{
			}
		}

		[Token(Token = "0x2000143")]
		public class WorkshopTileChangedEvent : EventBase
		{
			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorkshopTile NewTile;

			[Token(Token = "0x6000474")]
			[Address(RVA = "0xF5F258", Offset = "0xF5F258", VA = "0xF5F258")]
			public WorkshopTileChangedEvent()
			{
			}
		}

		[Token(Token = "0x2000144")]
		public class WandPurchasedEvent : EventBase
		{
			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WandType WandType;

			[Token(Token = "0x6000475")]
			[Address(RVA = "0xF5F230", Offset = "0xF5F230", VA = "0xF5F230")]
			public WandPurchasedEvent()
			{
			}
		}

		[Token(Token = "0x2000145")]
		public class WandTypeChangedEvent : EventBase
		{
			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WandType WandType;

			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public WandHand WandHand;

			[Token(Token = "0x6000476")]
			[Address(RVA = "0xF5F248", Offset = "0xF5F248", VA = "0xF5F248")]
			public WandTypeChangedEvent()
			{
			}
		}

		[Token(Token = "0x2000146")]
		public class WandLoadoutSwitchedEvent : EventBase
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xF5F228", Offset = "0xF5F228", VA = "0xF5F228")]
			public WandLoadoutSwitchedEvent()
			{
			}
		}

		[Token(Token = "0x2000147")]
		public class WorkshopWandOpenedEvent : EventBase
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0xF5F268", Offset = "0xF5F268", VA = "0xF5F268")]
			public WorkshopWandOpenedEvent()
			{
			}
		}

		[Token(Token = "0x2000148")]
		public class WorkshopWandClosedEvent : EventBase
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xF5F260", Offset = "0xF5F260", VA = "0xF5F260")]
			public WorkshopWandClosedEvent()
			{
			}
		}

		[Token(Token = "0x2000149")]
		public class WandStationWandSelectedEvent : EventBase
		{
			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WandStationWand Wand;

			[Token(Token = "0x600047A")]
			[Address(RVA = "0xF5F240", Offset = "0xF5F240", VA = "0xF5F240")]
			public WandStationWandSelectedEvent()
			{
			}
		}

		[Token(Token = "0x200014A")]
		public class TitleChangedEvent : EventBase
		{
			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Title Title;

			[Token(Token = "0x600047B")]
			[Address(RVA = "0xF5F1D8", Offset = "0xF5F1D8", VA = "0xF5F1D8")]
			public TitleChangedEvent()
			{
			}
		}

		[Token(Token = "0x200014B")]
		public class WandStationPageChangedEvent : EventBase
		{
			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Index;

			[Token(Token = "0x600047C")]
			[Address(RVA = "0xF5F238", Offset = "0xF5F238", VA = "0xF5F238")]
			public WandStationPageChangedEvent()
			{
			}
		}

		[Token(Token = "0x200014C")]
		public class VirtualCurrencyChanged : EventBase
		{
			[Token(Token = "0x40007DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Amount;

			[Token(Token = "0x600047D")]
			[Address(RVA = "0xF5F220", Offset = "0xF5F220", VA = "0xF5F220")]
			public VirtualCurrencyChanged()
			{
			}
		}

		[Token(Token = "0x200014D")]
		public class SpellSelectActivatedEvent : EventBase
		{
			[Token(Token = "0x40007DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Active;

			[Token(Token = "0x600047E")]
			[Address(RVA = "0xF5491C", Offset = "0xF5491C", VA = "0xF5491C")]
			public SpellSelectActivatedEvent()
			{
			}
		}

		[Token(Token = "0x200014E")]
		public class CharacterTypeChangedEvent : EventBase
		{
			[Token(Token = "0x40007DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterType CharacterType;

			[Token(Token = "0x600047F")]
			[Address(RVA = "0xF5EF30", Offset = "0xF5EF30", VA = "0xF5EF30")]
			public CharacterTypeChangedEvent()
			{
			}
		}

		[Token(Token = "0x200014F")]
		public class FriendlyMatchesUpdatedEvent : EventBase
		{
			[Token(Token = "0x40007DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IReadOnlyList<RoomInfo> RoomInfos;

			[Token(Token = "0x6000480")]
			[Address(RVA = "0xF5EFF8", Offset = "0xF5EFF8", VA = "0xF5EFF8")]
			public FriendlyMatchesUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x2000150")]
		public class PortalLeverInteractedWithEvent : EventBase
		{
			[Token(Token = "0x40007DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x6000481")]
			[Address(RVA = "0xF5F100", Offset = "0xF5F100", VA = "0xF5F100")]
			public PortalLeverInteractedWithEvent()
			{
			}
		}

		[Token(Token = "0x2000151")]
		public class PortalLeverRotatedEvent : EventBase
		{
			[Token(Token = "0x40007DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x6000482")]
			[Address(RVA = "0xF5F108", Offset = "0xF5F108", VA = "0xF5F108")]
			public PortalLeverRotatedEvent()
			{
			}
		}

		[Token(Token = "0x2000152")]
		public class TriedStartingWithoutCompleteLoadoutEvent : EventBase
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0xF5F1E0", Offset = "0xF5F1E0", VA = "0xF5F1E0")]
			public TriedStartingWithoutCompleteLoadoutEvent()
			{
			}
		}

		[Token(Token = "0x2000153")]
		public class EventRewardClaimedEvent : EventBase
		{
			[Token(Token = "0x40007E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomEvent CustomEvent;

			[Token(Token = "0x6000484")]
			[Address(RVA = "0xF5EFE0", Offset = "0xF5EFE0", VA = "0xF5EFE0")]
			public EventRewardClaimedEvent()
			{
			}
		}

		[Token(Token = "0x2000154")]
		public class SpellSelectedEvent : EventBase
		{
			[Token(Token = "0x40007E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpellBase Spell;

			[Token(Token = "0x6000485")]
			[Address(RVA = "0xF4DBB8", Offset = "0xF4DBB8", VA = "0xF4DBB8")]
			public SpellSelectedEvent()
			{
			}
		}

		[Token(Token = "0x2000155")]
		public class SpellCastEvent : EventBase
		{
			[Token(Token = "0x40007E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spell Spell;

			[Token(Token = "0x6000486")]
			[Address(RVA = "0xF5F168", Offset = "0xF5F168", VA = "0xF5F168")]
			public SpellCastEvent()
			{
			}
		}

		[Token(Token = "0x2000156")]
		public class ProjectileCastEvent : EventBase
		{
			[Token(Token = "0x40007E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spell Spell;

			[Token(Token = "0x40007E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] MoveVectors;

			[Token(Token = "0x40007E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Speed;

			[Token(Token = "0x40007E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float Acceleration;

			[Token(Token = "0x40007E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float MaxSpeed;

			[Token(Token = "0x40007E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int OpponentId;

			[Token(Token = "0x40007E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float ProjectileRadius;

			[Token(Token = "0x40007EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float SplashDamageRadius;

			[Token(Token = "0x40007EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Damage;

			[Token(Token = "0x40007EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public DamageType DamageType;

			[Token(Token = "0x40007ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool ReturnToSender;

			[Token(Token = "0x40007EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ProjectileMover ProjectileMover;

			[Token(Token = "0x6000487")]
			[Address(RVA = "0xF5F130", Offset = "0xF5F130", VA = "0xF5F130")]
			public ProjectileCastEvent()
			{
			}
		}

		[Token(Token = "0x2000157")]
		public class EnergyDepletedEvent : EventBase
		{
			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CostType CostType;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 WandPosition;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WandHand WandHand;

			[Token(Token = "0x6000488")]
			[Address(RVA = "0xF518B4", Offset = "0xF518B4", VA = "0xF518B4")]
			public EnergyDepletedEvent()
			{
			}
		}

		[Token(Token = "0x2000158")]
		public class ArmorActivationEvent : EventBase
		{
			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsActive;

			[Token(Token = "0x6000489")]
			[Address(RVA = "0xF5EF00", Offset = "0xF5EF00", VA = "0xF5EF00")]
			public ArmorActivationEvent()
			{
			}
		}

		[Token(Token = "0x2000159")]
		public class CurseActivationEvent : EventBase
		{
			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsActive;

			[Token(Token = "0x600048A")]
			[Address(RVA = "0xF5EFA8", Offset = "0xF5EFA8", VA = "0xF5EFA8")]
			public CurseActivationEvent()
			{
			}
		}

		[Token(Token = "0x200015A")]
		public class ChillingClutchActivationEvent : EventBase
		{
			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsActive;

			[Token(Token = "0x600048B")]
			[Address(RVA = "0xF5EF38", Offset = "0xF5EF38", VA = "0xF5EF38")]
			public ChillingClutchActivationEvent()
			{
			}
		}

		[Token(Token = "0x200015B")]
		public class FreeTeleportActivationEvent : EventBase
		{
			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsActive;

			[Token(Token = "0x600048C")]
			[Address(RVA = "0xF5EFF0", Offset = "0xF5EFF0", VA = "0xF5EFF0")]
			public FreeTeleportActivationEvent()
			{
			}
		}

		[Token(Token = "0x200015C")]
		public class OpponentMissingEvent : EventBase
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0xF5F0B8", Offset = "0xF5F0B8", VA = "0xF5F0B8")]
			public OpponentMissingEvent()
			{
			}
		}

		[Token(Token = "0x200015D")]
		public class MatchmakingErrorEvent : EventBase
		{
			[Token(Token = "0x600048E")]
			[Address(RVA = "0xF5F068", Offset = "0xF5F068", VA = "0xF5F068")]
			public MatchmakingErrorEvent()
			{
			}
		}

		[Token(Token = "0x200015E")]
		public class MatchmakingStartedEvent : EventBase
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0xF5F078", Offset = "0xF5F078", VA = "0xF5F078")]
			public MatchmakingStartedEvent()
			{
			}
		}

		[Token(Token = "0x200015F")]
		public class MatchmakingFinishedEvent : EventBase
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0xF5F070", Offset = "0xF5F070", VA = "0xF5F070")]
			public MatchmakingFinishedEvent()
			{
			}
		}

		[Token(Token = "0x2000160")]
		public class PlayerNameUpdated : EventBase
		{
			[Token(Token = "0x40007F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Photon.Realtime.Player PhotonPlayer;

			[Token(Token = "0x6000491")]
			[Address(RVA = "0xF5F0D0", Offset = "0xF5F0D0", VA = "0xF5F0D0")]
			public PlayerNameUpdated()
			{
			}
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xF5EED0", Offset = "0xF5EED0", VA = "0xF5EED0")]
		public Events()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class InputEvents
	{
		[Token(Token = "0x2000162")]
		public class PlatformInputUpdated : EventBase
		{
			[Token(Token = "0x40007F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AimInput AimInput;

			[Token(Token = "0x40007F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public WandInput WandInput;

			[Token(Token = "0x40007F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool IsDualWieldEnabled;

			[Token(Token = "0x6000493")]
			[Address(RVA = "0xF5F2A0", Offset = "0xF5F2A0", VA = "0xF5F2A0")]
			public PlatformInputUpdated()
			{
			}
		}

		[Token(Token = "0x2000163")]
		public class WandControllerSpawnedEvent : EventBase
		{
			[Token(Token = "0x40007FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AimInput AimInput;

			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public WandGrip WandGrip;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool IsDualWieldEnabled;

			[Token(Token = "0x6000494")]
			[Address(RVA = "0xF5F2C0", Offset = "0xF5F2C0", VA = "0xF5F2C0")]
			public WandControllerSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000164")]
		public class WandControllerDespawnedEvent : EventBase
		{
			[Token(Token = "0x6000495")]
			[Address(RVA = "0xF457F4", Offset = "0xF457F4", VA = "0xF457F4")]
			public WandControllerDespawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000165")]
		public class WandGripChangedEvent : EventBase
		{
			[Token(Token = "0x40007FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WandGrip WandGrip;

			[Token(Token = "0x6000496")]
			[Address(RVA = "0xF5F2C8", Offset = "0xF5F2C8", VA = "0xF5F2C8")]
			public WandGripChangedEvent()
			{
			}
		}

		[Token(Token = "0x2000166")]
		public class InputChangedEvent : EventBase
		{
			[Token(Token = "0x40007FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AimInput AimInput;

			[Token(Token = "0x40007FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public WandInput WandInput;

			[Token(Token = "0x4000800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WandGrip WandGrip;

			[Token(Token = "0x4000801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool IsDualWieldEnabled;

			[Token(Token = "0x6000497")]
			[Address(RVA = "0xF5F298", Offset = "0xF5F298", VA = "0xF5F298")]
			public InputChangedEvent()
			{
			}
		}

		[Token(Token = "0x2000167")]
		public class DualWieldStateUpdatedEvent : EventBase
		{
			[Token(Token = "0x4000802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsDualWieldEnabled;

			[Token(Token = "0x6000498")]
			[Address(RVA = "0xF5F290", Offset = "0xF5F290", VA = "0xF5F290")]
			public DualWieldStateUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x2000168")]
		public class SystemMenuInputEvent : EventBase
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0xF5F2B8", Offset = "0xF5F2B8", VA = "0xF5F2B8")]
			public SystemMenuInputEvent()
			{
			}
		}

		[Token(Token = "0x2000169")]
		public class RotateCameraEvent : EventBase
		{
			[Token(Token = "0x4000803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RotationDirection RotationDirection;

			[Token(Token = "0x600049A")]
			[Address(RVA = "0xF5F2B0", Offset = "0xF5F2B0", VA = "0xF5F2B0")]
			public RotateCameraEvent()
			{
			}
		}

		[Token(Token = "0x200016A")]
		public class RecenterCameraEvent : EventBase
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0xF5F2A8", Offset = "0xF5F2A8", VA = "0xF5F2A8")]
			public RecenterCameraEvent()
			{
			}
		}

		[Token(Token = "0x200016B")]
		public class ControllerConnectionStatusChanged : EventBase
		{
			[Token(Token = "0x4000804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsConnected;

			[Token(Token = "0x600049C")]
			[Address(RVA = "0xF5F288", Offset = "0xF5F288", VA = "0xF5F288")]
			public ControllerConnectionStatusChanged()
			{
			}
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xF5F280", Offset = "0xF5F280", VA = "0xF5F280")]
		public InputEvents()
		{
		}
	}
}
namespace Cortopia.Scripts.CustomEvents
{
	[Token(Token = "0x200016C")]
	public static class SpellEvents
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSpellCollision;

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1032750", Offset = "0x1032750", VA = "0x1032750")]
		public static void RegisterListener(Action eventHandler)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x1032828", Offset = "0x1032828", VA = "0x1032828")]
		public static void UnregisterListener(Action eventHandler)
		{
		}
	}
}
[Token(Token = "0x200016D")]
public abstract class ExpandedSingleton<T> : MonoBehaviour where T : ExpandedSingleton<T>
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T sm_instance;

	[Token(Token = "0x170000A5")]
	public static T Instance
	{
		[Token(Token = "0x60004A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049F")]
	protected ExpandedSingleton()
	{
	}

	[Token(Token = "0x60004A1")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60004A2")]
	protected virtual void OnDisable()
	{
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x200016E")]
	public class GameControl : MonoBehaviour
	{
		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D090", Offset = "0xC7D090")]
		private sealed class <ReturnToWorkshop>c__AnonStorey0
		{
			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal GameControl $this;

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xDE3D94", Offset = "0xDE3D94", VA = "0xDE3D94")]
			public <ReturnToWorkshop>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xDE6FE8", Offset = "0xDE6FE8", VA = "0xDE6FE8")]
			internal void <>m__0(NetworkEvents.PhotonNetworkDisconnectedEvent t)
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D0A0", Offset = "0xC7D0A0")]
		private sealed class <IncrementAchievement>c__AnonStorey1
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Assets.Scripts.Enums.AchievementType achievementType;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal GameControl $this;

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xDE4914", Offset = "0xDE4914", VA = "0xDE4914")]
			public <IncrementAchievement>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xDE69F8", Offset = "0xDE69F8", VA = "0xDE69F8")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D0B0", Offset = "0xC7D0B0")]
		private sealed class <OnGetCombinedBackendRepresentationSuccess>c__AnonStorey2
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ExecuteCloudScriptResult result;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CombinedBackendRepresentation dataObject;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal GameControl $this;

			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xDE5EE8", Offset = "0xDE5EE8", VA = "0xDE5EE8")]
			public <OnGetCombinedBackendRepresentationSuccess>c__AnonStorey2()
			{
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xDE6A3C", Offset = "0xDE6A3C", VA = "0xDE6A3C")]
			internal void <>m__0()
			{
			}

			[Token(Token = "0x60028C9")]
			[Address(RVA = "0xDE6C64", Offset = "0xDE6C64", VA = "0xDE6C64")]
			internal void <>m__1(Task task)
			{
			}
		}

		[Token(Token = "0x4000807")]
		private const byte MaxBackendDataRetrievalAttempts = 5;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadSfx m_loadSfx;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandsSceneManager m_sceneManager;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StartupOptionsHandler m_startupOptionsHandler;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7CC14", Offset = "0xC7CC14")]
		[SerializeField]
		private WandsLeaderboards m_leaderboards;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WandsLanguageController m_languageController;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISaveManager m_saveManager;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ServerBridge m_serverBridge;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LobbyArenaControl m_lobbyArenaHandler;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_clientVersionClean;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Version m_clientVersion;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action m_onFinishedLoading;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte m_backendDataRetrievalAttemptCounter;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_userFetchedEventToken;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_systemMenuInputEventToken;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_playFabSessionExpiredEventToken;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_photonNetworkDisconnectedEventToken;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CC70", Offset = "0xC7CC70")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CC70", Offset = "0xC7CC70")]
		private static GameControl <Instance>k__BackingField;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CCAC", Offset = "0xC7CCAC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CCAC", Offset = "0xC7CCAC")]
		private AssetHandler <AssetHandler>k__BackingField;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CCE8", Offset = "0xC7CCE8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CCE8", Offset = "0xC7CCE8")]
		private Assets.Scripts.Player.Player <Player>k__BackingField;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CD24", Offset = "0xC7CD24")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CD24", Offset = "0xC7CD24")]
		private Assets.Scripts.Platform.Platform <Platform>k__BackingField;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CD60", Offset = "0xC7CD60")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CD60", Offset = "0xC7CD60")]
		private WandsBuildSettings <PlatformSettings>k__BackingField;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CD9C", Offset = "0xC7CD9C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CD9C", Offset = "0xC7CD9C")]
		private ICloudManager <CloudManager>k__BackingField;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CDD8", Offset = "0xC7CDD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CDD8", Offset = "0xC7CDD8")]
		private StartupOptionsHandler <PreTutorialHandler>k__BackingField;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE14", Offset = "0xC7CE14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7CE14", Offset = "0xC7CE14")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string sm_persistantDebugMessage;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE50", Offset = "0xC7CE50")]
		private static Func<JsonSerializerSettings> <>f__am$cache0;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE60", Offset = "0xC7CE60")]
		private static Action <>f__am$cache1;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE70", Offset = "0xC7CE70")]
		private static Action<Exception> <>f__am$cache2;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE80", Offset = "0xC7CE80")]
		private static EventHandler<ErrorEventArgs> <>f__am$cache3;

		[Token(Token = "0x170000A6")]
		public static GameControl Instance
		{
			[Token(Token = "0x60004A4")]
			[Address(RVA = "0xDE12D8", Offset = "0xDE12D8", VA = "0xDE12D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CE90", Offset = "0xC7CE90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0xDE1328", Offset = "0xDE1328", VA = "0xDE1328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CEA0", Offset = "0xC7CEA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public Version ClientVersion
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0xDE137C", Offset = "0xDE137C", VA = "0xDE137C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CEB0", Offset = "0xC7CEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public string NetworkVersion
		{
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0xDE1410", Offset = "0xDE1410", VA = "0xDE1410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CEC0", Offset = "0xC7CEC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public string PlayfabClientVersion
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0xDE1600", Offset = "0xDE1600", VA = "0xDE1600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CED0", Offset = "0xC7CED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public ServerBridge ServerBridge
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0xDE1628", Offset = "0xDE1628", VA = "0xDE1628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CEE0", Offset = "0xC7CEE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public LobbyArenaControl LobbyArenaControl
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xDE16C4", Offset = "0xDE16C4", VA = "0xDE16C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CEF0", Offset = "0xC7CEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public WandsLeaderboards Leaderboards
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0xDE1778", Offset = "0xDE1778", VA = "0xDE1778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF00", Offset = "0xC7CF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public bool MusicEnabled
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xDE1814", Offset = "0xDE1814", VA = "0xDE1814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF10", Offset = "0xC7CF10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool PositionalTrackingOpponentEnabled
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0xDE1888", Offset = "0xDE1888", VA = "0xDE1888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF20", Offset = "0xC7CF20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsGamePaused
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xDE18FC", Offset = "0xDE18FC", VA = "0xDE18FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF30", Offset = "0xC7CF30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public AssetHandler AssetHandler
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0xDE19CC", Offset = "0xDE19CC", VA = "0xDE19CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF40", Offset = "0xC7CF40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0xDE19D4", Offset = "0xDE19D4", VA = "0xDE19D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF50", Offset = "0xC7CF50")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public Assets.Scripts.Player.Player Player
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0xDE19DC", Offset = "0xDE19DC", VA = "0xDE19DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF60", Offset = "0xC7CF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0xDE19E4", Offset = "0xDE19E4", VA = "0xDE19E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF70", Offset = "0xC7CF70")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public Assets.Scripts.Platform.Platform Platform
		{
			[Token(Token = "0x60004B3")]
			[Address(RVA = "0xDE19EC", Offset = "0xDE19EC", VA = "0xDE19EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF80", Offset = "0xC7CF80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0xDE19F4", Offset = "0xDE19F4", VA = "0xDE19F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CF90", Offset = "0xC7CF90")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public WandsBuildSettings PlatformSettings
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0xDE1408", Offset = "0xDE1408", VA = "0xDE1408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFA0", Offset = "0xC7CFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0xDE19FC", Offset = "0xDE19FC", VA = "0xDE19FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFB0", Offset = "0xC7CFB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public ICloudManager CloudManager
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0xDE1A04", Offset = "0xDE1A04", VA = "0xDE1A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFC0", Offset = "0xC7CFC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0xDE1A0C", Offset = "0xDE1A0C", VA = "0xDE1A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFD0", Offset = "0xC7CFD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public StartupOptionsHandler PreTutorialHandler
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0xDE1A14", Offset = "0xDE1A14", VA = "0xDE1A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFE0", Offset = "0xC7CFE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0xDE1A1C", Offset = "0xDE1A1C", VA = "0xDE1A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7CFF0", Offset = "0xC7CFF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0xDE1A24", Offset = "0xDE1A24", VA = "0xDE1A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D000", Offset = "0xC7D000")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0xDE1A2C", Offset = "0xDE1A2C", VA = "0xDE1A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D010", Offset = "0xC7D010")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool IsDualWieldSupportedAndActive
		{
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0xDE1A34", Offset = "0xDE1A34", VA = "0xDE1A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D020", Offset = "0xC7D020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B8")]
		public bool IsDevelopmentBuild
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0xDE1AE8", Offset = "0xDE1AE8", VA = "0xDE1AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D030", Offset = "0xC7D030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B9")]
		public bool CanPlayerEarnRating
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xDE1B18", Offset = "0xDE1B18", VA = "0xDE1B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D040", Offset = "0xC7D040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xDE12D0", Offset = "0xDE12D0", VA = "0xDE12D0")]
		public GameControl()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xDE1414", Offset = "0xDE1414", VA = "0xDE1414")]
		private string GetNetworkVersion()
		{
			return null;
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xDE1B90", Offset = "0xDE1B90", VA = "0xDE1B90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xDE1E98", Offset = "0xDE1E98", VA = "0xDE1E98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xDE2024", Offset = "0xDE2024", VA = "0xDE2024")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xDE21BC", Offset = "0xDE21BC", VA = "0xDE21BC")]
		public void SpawnPlayerControl()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xDE2310", Offset = "0xDE2310", VA = "0xDE2310")]
		public void InternetConnectionVerified()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xDE28B0", Offset = "0xDE28B0", VA = "0xDE28B0")]
		private void OnPlayFabSessionExpired(Events.PlayFabSessionExpiredEvent eventData)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xDE2A48", Offset = "0xDE2A48", VA = "0xDE2A48")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xDE2A78", Offset = "0xDE2A78", VA = "0xDE2A78")]
		private void SceneLoaded(Level level)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xDE2B9C", Offset = "0xDE2B9C", VA = "0xDE2B9C")]
		public string GetClientVersionString()
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xDE2FE8", Offset = "0xDE2FE8", VA = "0xDE2FE8")]
		public string GetVersionSuffix(int revisionVersion)
		{
			return null;
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xDE24CC", Offset = "0xDE24CC", VA = "0xDE24CC")]
		public bool IsCurrentLevel(Level compareLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xDE30F0", Offset = "0xDE30F0", VA = "0xDE30F0")]
		public Level GetCurrentLevel(bool callBeforeLevelLoaded = false)
		{
			return default(Level);
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xDE3124", Offset = "0xDE3124", VA = "0xDE3124")]
		public Level GetPreviousLevel()
		{
			return default(Level);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xDE30C8", Offset = "0xDE30C8", VA = "0xDE30C8")]
		public ConnectionType GetConnectionType()
		{
			return default(ConnectionType);
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xDE26FC", Offset = "0xDE26FC", VA = "0xDE26FC")]
		public bool IsExpectedConnectionType(ConnectionType expectedType)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xDE3150", Offset = "0xDE3150", VA = "0xDE3150")]
		public AimInput GetInputAim()
		{
			return default(AimInput);
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xDE3224", Offset = "0xDE3224", VA = "0xDE3224")]
		public WandType[] GetWandTypes()
		{
			return null;
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xDE3310", Offset = "0xDE3310", VA = "0xDE3310")]
		public Language GetCurrentLanguage()
		{
			return default(Language);
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xDE33D0", Offset = "0xDE33D0", VA = "0xDE33D0")]
		public void SetLanguage(Language language)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xDE33E4", Offset = "0xDE33E4", VA = "0xDE33E4")]
		public string GetNextLanguage(bool setLanguage)
		{
			return null;
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xDE3400", Offset = "0xDE3400", VA = "0xDE3400")]
		public WandGrip ToggleWandGrip()
		{
			return default(WandGrip);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xDE3500", Offset = "0xDE3500", VA = "0xDE3500")]
		public void TogglePrimaryHand()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xDE2648", Offset = "0xDE2648", VA = "0xDE2648")]
		public void ToggleLoadSource(bool active)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xDE35AC", Offset = "0xDE35AC", VA = "0xDE35AC")]
		public void ToggleMusic(bool active)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xDE3624", Offset = "0xDE3624", VA = "0xDE3624")]
		public void LeaveGame(float waitTime, bool penalizePlayer, bool quitGame)
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xDE3A60", Offset = "0xDE3A60", VA = "0xDE3A60")]
		private void AddRatingPenalty()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xDE3B78", Offset = "0xDE3B78", VA = "0xDE3B78")]
		private void ReturnToWorkshop(float delay = 0f)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xDE3DF0", Offset = "0xDE3DF0", VA = "0xDE3DF0")]
		private void OnPhotonNetworkDisconnected(float delay)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xDE3B40", Offset = "0xDE3B40", VA = "0xDE3B40")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xDE3EC0", Offset = "0xDE3EC0", VA = "0xDE3EC0")]
		public void UnlockSpell(Spell spell)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xDE4294", Offset = "0xDE4294", VA = "0xDE4294")]
		public void BuyWand(WandType wand)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xDE4310", Offset = "0xDE4310", VA = "0xDE4310")]
		public void BuyCharacter(CharacterType character)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xDE438C", Offset = "0xDE438C", VA = "0xDE438C")]
		public void UnlockAllSpells()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xDE44EC", Offset = "0xDE44EC", VA = "0xDE44EC")]
		public void LoadLeaderboards()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xDE3F40", Offset = "0xDE3F40", VA = "0xDE3F40")]
		public void UnlockAchievement(Assets.Scripts.Enums.AchievementType achievementType)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xDE4528", Offset = "0xDE4528", VA = "0xDE4528")]
		public void IncrementAchievement(Assets.Scripts.Enums.AchievementType achievementType, int incrementValue, int target)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xDE3CAC", Offset = "0xDE3CAC", VA = "0xDE3CAC")]
		public void TryUpdatePlayerRating(int newRating)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xDE3D20", Offset = "0xDE3D20", VA = "0xDE3D20")]
		public void TryUpdateSeasonScore(int newScore)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xDE491C", Offset = "0xDE491C", VA = "0xDE491C")]
		public void TogglePositionalTrackingOpponent(bool active)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xDE4994", Offset = "0xDE4994", VA = "0xDE4994")]
		public bool IsControlScheme(WandInput wandInput)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xDE4AC4", Offset = "0xDE4AC4", VA = "0xDE4AC4")]
		public WandInput GetControlScheme()
		{
			return default(WandInput);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xDE4BDC", Offset = "0xDE4BDC", VA = "0xDE4BDC")]
		public void SetControlScheme(WandInput scheme)
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xDE4C7C", Offset = "0xDE4C7C", VA = "0xDE4C7C")]
		private void OnSystemMenuPress(InputEvents.SystemMenuInputEvent eventData)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xDE4CE8", Offset = "0xDE4CE8", VA = "0xDE4CE8")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xDE4F7C", Offset = "0xDE4F7C", VA = "0xDE4F7C")]
		public void OnUserFetchCompleted(Events.UserFetchCompletedEvent eventData)
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xDE500C", Offset = "0xDE500C", VA = "0xDE500C")]
		private void AccountIDFetchFailed(PlatformType platformType, [Optional] string errorMessage)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xDE2790", Offset = "0xDE2790", VA = "0xDE2790")]
		private void AccountIDFetchComplete(ICloudManager cloudManager, string userName, string userId, bool didLogInToPlatform)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xDE51C4", Offset = "0xDE51C4", VA = "0xDE51C4")]
		private void OnIAPInitialized()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xDE28B4", Offset = "0xDE28B4", VA = "0xDE28B4")]
		public void AttemptCloudServiceLogin()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xDE51C8", Offset = "0xDE51C8", VA = "0xDE51C8")]
		private void LogInToCloudSuccess(LoginResult loginResult)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xDE5734", Offset = "0xDE5734", VA = "0xDE5734")]
		private void LogInToCloudFailure(string errorMessage)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xDE5840", Offset = "0xDE5840", VA = "0xDE5840")]
		private void OnGetMinimumVersion()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xDE5CD8", Offset = "0xDE5CD8", VA = "0xDE5CD8")]
		public void LoadNewUser()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xDE5ADC", Offset = "0xDE5ADC", VA = "0xDE5ADC")]
		private void LoadCombinedBackendRepresentation()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xDE5D68", Offset = "0xDE5D68", VA = "0xDE5D68")]
		private void OnGetCombinedBackendRepresentationSuccess(ExecuteCloudScriptResult result)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xDE5EF0", Offset = "0xDE5EF0", VA = "0xDE5EF0")]
		private void OnGetCombinedBackendRepresentationFailure(string errorMessage)
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xDE6250", Offset = "0xDE6250", VA = "0xDE6250")]
		private void LoadGame()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xDE6480", Offset = "0xDE6480", VA = "0xDE6480")]
		public void BuyFullGame()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xDE64E0", Offset = "0xDE64E0", VA = "0xDE64E0")]
		public static void PrintDebug(string msg, bool persistant = false)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xDE6680", Offset = "0xDE6680", VA = "0xDE6680")]
		private void HandleUnityLogMessages(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xDE2734", Offset = "0xDE2734", VA = "0xDE2734")]
		private ICloudManager CreateCloudManager()
		{
			return null;
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xDE6724", Offset = "0xDE6724", VA = "0xDE6724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D050", Offset = "0xC7D050")]
		private static JsonSerializerSettings <OnEnable>m__0()
		{
			return null;
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xDE68A8", Offset = "0xDE68A8", VA = "0xDE68A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D060", Offset = "0xC7D060")]
		private static void <UnlockAchievement>m__1()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xDE68AC", Offset = "0xDE68AC", VA = "0xDE68AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D070", Offset = "0xC7D070")]
		private static void <UnlockAchievement>m__2(Exception e)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xDE68B0", Offset = "0xDE68B0", VA = "0xDE68B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D080", Offset = "0xC7D080")]
		private static void <OnEnable>m__3(object _, ErrorEventArgs e)
		{
		}
	}
}
namespace Assets.Scripts.WandsIAP
{
	[Token(Token = "0x200016F")]
	public class IAPController : IStoreListener
	{
		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStoreController m_storeController;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IExtensionProvider m_storeExtensionProvider;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string m_productIdWandsGame;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action m_onInitializedCallback;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D0C0", Offset = "0xC7D0C0")]
		private static Action<ExecuteCloudScriptResult> <>f__am$cache0;

		[Token(Token = "0x170000BA")]
		private bool IsInitialized
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0xEDEDE0", Offset = "0xEDEDE0", VA = "0xEDEDE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xEDEC24", Offset = "0xEDEC24", VA = "0xEDEC24")]
		public IAPController(Action onInitialized)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xEDECC4", Offset = "0xEDECC4", VA = "0xEDECC4")]
		private void InitializePurchasing()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xEDEE7C", Offset = "0xEDEE7C", VA = "0xEDEE7C", Slot = "7")]
		public void OnInitialized(IStoreController controller, IExtensionProvider extensions)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xEDEF18", Offset = "0xEDEF18", VA = "0xEDEF18", Slot = "4")]
		public void OnInitializeFailed(InitializationFailureReason error)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xEDEFF4", Offset = "0xEDEFF4", VA = "0xEDEFF4", Slot = "5")]
		public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs args)
		{
			return default(PurchaseProcessingResult);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xEDF1CC", Offset = "0xEDF1CC", VA = "0xEDF1CC", Slot = "6")]
		public void OnPurchaseFailed(UnityEngine.Purchasing.Product product, PurchaseFailureReason failureReason)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xEDF258", Offset = "0xEDF258", VA = "0xEDF258")]
		private void PublishPurchaseEvent()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xEDF5A4", Offset = "0xEDF5A4", VA = "0xEDF5A4")]
		private void BuyProductID(string productId)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xEDF860", Offset = "0xEDF860", VA = "0xEDF860")]
		public void BuyFullGame()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xEDF8C8", Offset = "0xEDF8C8", VA = "0xEDF8C8")]
		public bool HasFullGameReceipt()
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xEDF9DC", Offset = "0xEDF9DC", VA = "0xEDF9DC")]
		public string GetFullGamePrice()
		{
			return null;
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xEDFB64", Offset = "0xEDFB64", VA = "0xEDFB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D0D0", Offset = "0xC7D0D0")]
		private static void <ProcessPurchase>m__0(ExecuteCloudScriptResult result)
		{
		}
	}
}
[Token(Token = "0x2000170")]
public class CleanInteractObject : InteractObject
{
	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1010D34", Offset = "0x1010D34", VA = "0x1010D34")]
	public CleanInteractObject()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1010D9C", Offset = "0x1010D9C", VA = "0x1010D9C", Slot = "10")]
	protected override void Interact()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1010DA0", Offset = "0x1010DA0", VA = "0x1010DA0", Slot = "11")]
	protected override void Interact(InputButtons inputBtn)
	{
	}
}
[Token(Token = "0x2000171")]
public class ControlsImg : InteractObject
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7D0E0", Offset = "0xC7D0E0")]
	[SerializeField]
	private SpriteRenderer[] m_imgRenderers;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] m_txtHolders;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] m_texturesGearVR;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite[] m_texturesOrientationController;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite[] m_texturesDaydream;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x101517C", Offset = "0x101517C", VA = "0x101517C")]
	public ControlsImg()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x101524C", Offset = "0x101524C", VA = "0x101524C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1015254", Offset = "0x1015254", VA = "0x1015254", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x101525C", Offset = "0x101525C", VA = "0x101525C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1015510", Offset = "0x1015510", VA = "0x1015510")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1015578", Offset = "0x1015578", VA = "0x1015578", Slot = "10")]
	protected override void Interact()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1015680", Offset = "0x1015680", VA = "0x1015680", Slot = "11")]
	protected override void Interact(InputButtons inputBtn)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x10157A8", Offset = "0x10157A8", VA = "0x10157A8", Slot = "9")]
	public override void SetInteractable(bool active)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1015298", Offset = "0x1015298", VA = "0x1015298")]
	private void UpdateControlImages()
	{
	}
}
[Token(Token = "0x2000172")]
public class Credits : InteractObject
{
	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D1B4", Offset = "0xC7D1B4")]
	private sealed class <ScalePaper>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector3 <startScale>__0;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Vector3 <endScale>__0;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float <currentTime>__0;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float <t>__0;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Credits $this;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal object $current;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool $disposing;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal int $PC;

		[Token(Token = "0x1700053C")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0xF5FA0C", Offset = "0xF5FA0C", VA = "0xF5FA0C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xF5FA14", Offset = "0xF5FA14", VA = "0xF5FA14", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xF5F67C", Offset = "0xF5F67C", VA = "0xF5F67C")]
		[DebuggerHidden]
		public <ScalePaper>c__Iterator0()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xF5F684", Offset = "0xF5F684", VA = "0xF5F684", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xF5FA1C", Offset = "0xF5FA1C", VA = "0xF5FA1C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xF5FA30", Offset = "0xF5FA30", VA = "0xF5FA30", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7D16C", Offset = "0xC7D16C")]
	public Transform m_creditsPaper;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider m_toggleCollider;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isScaling;

	[Token(Token = "0x4000833")]
	private const float SCALE_MP = 1f;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xF5F308", Offset = "0xF5F308", VA = "0xF5F308")]
	public Credits()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xF5F370", Offset = "0xF5F370", VA = "0xF5F370", Slot = "10")]
	protected override void Interact()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xF5F4BC", Offset = "0xF5F4BC", VA = "0xF5F4BC", Slot = "11")]
	protected override void Interact(InputButtons inputBtn)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xF5F610", Offset = "0xF5F610", VA = "0xF5F610")]
	[DebuggerHidden]
	private IEnumerator ScalePaper()
	{
		return null;
	}
}
namespace Assets.Scripts.InteractObjects
{
	[Token(Token = "0x2000173")]
	public abstract class Interactable : MonoBehaviour
	{
		[Token(Token = "0x2000174")]
		public delegate void InteractDelegate();

		[Token(Token = "0x2000175")]
		public delegate void LookEnterDelegate();

		[Token(Token = "0x2000176")]
		public delegate void LookExitDelegate();

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_lockInteract;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_lockLook;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject m_particleEffect;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider m_collider;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D2F8", Offset = "0xC7D2F8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D2F8", Offset = "0xC7D2F8")]
		private HashSet<Action<Interactable>> <OnLookEnterListeners>k__BackingField;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D334", Offset = "0xC7D334")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D334", Offset = "0xC7D334")]
		private HashSet<Action<Interactable>> <OnLookExitListeners>k__BackingField;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D370", Offset = "0xC7D370")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D370", Offset = "0xC7D370")]
		private HashSet<Action<Interactable>> <OnInteractListeners>k__BackingField;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D3AC", Offset = "0xC7D3AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D3AC", Offset = "0xC7D3AC")]
		private static bool <LockAllInteraction>k__BackingField;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D3E8", Offset = "0xC7D3E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D3E8", Offset = "0xC7D3E8")]
		private static bool <LockAllLook>k__BackingField;

		[Token(Token = "0x170000BB")]
		public HashSet<Action<Interactable>> OnLookEnterListeners
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0xDE7AF8", Offset = "0xDE7AF8", VA = "0xDE7AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D424", Offset = "0xC7D424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public HashSet<Action<Interactable>> OnLookExitListeners
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0xDE7B00", Offset = "0xDE7B00", VA = "0xDE7B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D434", Offset = "0xC7D434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public HashSet<Action<Interactable>> OnInteractListeners
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0xDE7B08", Offset = "0xDE7B08", VA = "0xDE7B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D444", Offset = "0xC7D444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public Collider Collider
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0xDE7B10", Offset = "0xDE7B10", VA = "0xDE7B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public bool InteractionLocked
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0xDE7C48", Offset = "0xDE7C48", VA = "0xDE7C48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052C")]
			[Address(RVA = "0xDE7D00", Offset = "0xDE7D00", VA = "0xDE7D00")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool LookLocked
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0xDE7E80", Offset = "0xDE7E80", VA = "0xDE7E80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052E")]
			[Address(RVA = "0xDE7F38", Offset = "0xDE7F38", VA = "0xDE7F38")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public static bool LockAllInteraction
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0xDE7CB0", Offset = "0xDE7CB0", VA = "0xDE7CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D454", Offset = "0xC7D454")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000530")]
			[Address(RVA = "0xDE7FE0", Offset = "0xDE7FE0", VA = "0xDE7FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D464", Offset = "0xC7D464")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public static bool LockAllLook
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0xDE7EE8", Offset = "0xDE7EE8", VA = "0xDE7EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D474", Offset = "0xC7D474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000532")]
			[Address(RVA = "0xDE8038", Offset = "0xDE8038", VA = "0xDE8038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D484", Offset = "0xC7D484")]
			set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public event LookEnterDelegate OnLookEnter
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0xDE7588", Offset = "0xDE7588", VA = "0xDE7588")]
			add
			{
			}
			[Token(Token = "0x6000522")]
			[Address(RVA = "0xDE7670", Offset = "0xDE7670", VA = "0xDE7670")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event LookExitDelegate OnLookExit
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0xDE7758", Offset = "0xDE7758", VA = "0xDE7758")]
			add
			{
			}
			[Token(Token = "0x6000524")]
			[Address(RVA = "0xDE7840", Offset = "0xDE7840", VA = "0xDE7840")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public event InteractDelegate OnInteract
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xDE7928", Offset = "0xDE7928", VA = "0xDE7928")]
			add
			{
			}
			[Token(Token = "0x6000526")]
			[Address(RVA = "0xDE7A10", Offset = "0xDE7A10", VA = "0xDE7A10")]
			remove
			{
			}
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xDE74E0", Offset = "0xDE74E0", VA = "0xDE74E0")]
		protected Interactable()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xDE8090", Offset = "0xDE8090", VA = "0xDE8090", Slot = "4")]
		public virtual void LookEnter()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xDE8618", Offset = "0xDE8618", VA = "0xDE8618", Slot = "5")]
		public virtual void LookExit()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xDE7DD0", Offset = "0xDE7DD0", VA = "0xDE7DD0")]
		public void ToggleParticleEffects(bool active)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xDE8B98", Offset = "0xDE8B98", VA = "0xDE8B98", Slot = "6")]
		public virtual void Interact()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xDE9118", Offset = "0xDE9118", VA = "0xDE9118")]
		public void LockInteraction(bool locked)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xDE9124", Offset = "0xDE9124", VA = "0xDE9124")]
		public void LockLook(bool locked)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class InteractableButton : Interactable
	{
		[Token(Token = "0x2000178")]
		public struct SingleCheckAction
		{
			[Token(Token = "0x4000846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action OnSuccess;

			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action OnFailure;
		}

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent _onClick;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected WandsButtonHighlighter[] m_buttonHighlighters;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7D4E0", Offset = "0xC7D4E0")]
		private bool m_requiresMultiplayerFeatures;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7D52C", Offset = "0xC7D52C")]
		private bool m_requiresParentalOnlineAccess;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D578", Offset = "0xC7D578")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D578", Offset = "0xC7D578")]
		private Queue<SingleCheckAction> <SingleCheckActions>k__BackingField;

		[Token(Token = "0x170000C3")]
		public Queue<SingleCheckAction> SingleCheckActions
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0xDE948C", Offset = "0xDE948C", VA = "0xDE948C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D5B4", Offset = "0xC7D5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		private event Action OnPreClick
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xDE92BC", Offset = "0xDE92BC", VA = "0xDE92BC")]
			add
			{
			}
			[Token(Token = "0x6000547")]
			[Address(RVA = "0xDE93A4", Offset = "0xDE93A4", VA = "0xDE93A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xDE9250", Offset = "0xDE9250", VA = "0xDE9250")]
		public InteractableButton()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xDE9494", Offset = "0xDE9494", VA = "0xDE9494", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xDE94F0", Offset = "0xDE94F0", VA = "0xDE94F0")]
		public void AddClickListener(Action action)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xDE94F4", Offset = "0xDE94F4", VA = "0xDE94F4")]
		public void RemoveClickListener(Action action)
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xDE94F8", Offset = "0xDE94F8", VA = "0xDE94F8")]
		protected void DisableInteractions()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xDE9580", Offset = "0xDE9580", VA = "0xDE9580")]
		protected void EnableInteractions()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xDE9600", Offset = "0xDE9600", VA = "0xDE9600", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xDE9798", Offset = "0xDE9798", VA = "0xDE9798")]
		private void Success()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xDE9854", Offset = "0xDE9854", VA = "0xDE9854")]
		private void Failure()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xDE98F8", Offset = "0xDE98F8", VA = "0xDE98F8", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xDE9990", Offset = "0xDE9990", VA = "0xDE9990", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xDE9A28", Offset = "0xDE9A28", VA = "0xDE9A28", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xDE9A34", Offset = "0xDE9A34", VA = "0xDE9A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D5C4", Offset = "0xC7D5C4")]
		private void <Interact>m__0(bool hasInternet)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xDE9BD0", Offset = "0xDE9BD0", VA = "0xDE9BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D5D4", Offset = "0xC7D5D4")]
		private void <Interact>m__1(bool success)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class InteractableGameObject : Interactable
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer[] m_renderer;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RendererMaterialPair> m_meshMaterials;

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xDE9CB8", Offset = "0xDE9CB8", VA = "0xDE9CB8")]
		public InteractableGameObject()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xDE9CBC", Offset = "0xDE9CBC", VA = "0xDE9CBC", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xDEA014", Offset = "0xDEA014", VA = "0xDEA014", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xDEA158", Offset = "0xDEA158", VA = "0xDEA158", Slot = "5")]
		public override void LookExit()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class InteractableText : Interactable
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected TMP_Text m_textComponent;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color m_defaultColor;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xDEA29C", Offset = "0xDEA29C", VA = "0xDEA29C")]
		public InteractableText()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xDEA2A0", Offset = "0xDEA2A0", VA = "0xDEA2A0", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xDEA3AC", Offset = "0xDEA3AC", VA = "0xDEA3AC", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xDEA434", Offset = "0xDEA434", VA = "0xDEA434")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xDEA498", Offset = "0xDEA498", VA = "0xDEA498")]
		public Color GetColor()
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200017B")]
	public class InteractableUnlockable : Interactable
	{
		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<UnlockableRendererMaterialPair> m_meshMaterials;

		[Token(Token = "0x170000C4")]
		protected virtual bool IsHighlightToggleActive
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0xDEA53C", Offset = "0xDEA53C", VA = "0xDEA53C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D614", Offset = "0xC7D614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xDEA4CC", Offset = "0xDEA4CC", VA = "0xDEA4CC")]
		public InteractableUnlockable()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xDEA544", Offset = "0xDEA544", VA = "0xDEA544", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xDEA850", Offset = "0xDEA850", VA = "0xDEA850", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xDEA9D0", Offset = "0xDEA9D0", VA = "0xDEA9D0", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xDEAA14", Offset = "0xDEAA14", VA = "0xDEAA14")]
		public void AssignMaterial(ItemMaterialType type, bool highlighted)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xDEA894", Offset = "0xDEA894", VA = "0xDEA894")]
		protected void SetHighlighted(bool highlighted)
		{
		}
	}
	[Token(Token = "0x200017C")]
	public abstract class InteractObject : MonoBehaviourPun
	{
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D6B8", Offset = "0xC7D6B8")]
		private sealed class <SetIObjsActive>c__AnonStorey0
		{
			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Type type;

			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xDEB24C", Offset = "0xDEB24C", VA = "0xDEB24C")]
			public <SetIObjsActive>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60028D1")]
			[Address(RVA = "0xDEB7A4", Offset = "0xDEB7A4", VA = "0xDEB7A4")]
			internal int <>m__0(InteractObject i)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<InteractObject> AllInteractables;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static LayerMask sm_mask;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7D624", Offset = "0xC7D624")]
		public Renderer m_affectedMesh;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_highlightMat;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_originalMat;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_highlightEffect;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool _isHighlighted;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider _collider;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D65C", Offset = "0xC7D65C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7D65C", Offset = "0xC7D65C")]
		private bool <IsInteractable>k__BackingField;

		[Token(Token = "0x170000C5")]
		public bool IsInteractable
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0xDEAF38", Offset = "0xDEAF38", VA = "0xDEAF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D698", Offset = "0xC7D698")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000568")]
			[Address(RVA = "0xDEAF40", Offset = "0xDEAF40", VA = "0xDEAF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D6A8", Offset = "0xC7D6A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		protected Collider Col
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xDEAF4C", Offset = "0xDEAF4C", VA = "0xDEAF4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xDEAF30", Offset = "0xDEAF30", VA = "0xDEAF30")]
		protected InteractObject()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xDEAFEC", Offset = "0xDEAFEC", VA = "0xDEAFEC")]
		public static void SetIObjsActive(Type type, bool enable)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xDEB254", Offset = "0xDEB254", VA = "0xDEB254", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xDEB2DC", Offset = "0xDEB2DC", VA = "0xDEB2DC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xDEB364", Offset = "0xDEB364", VA = "0xDEB364", Slot = "6")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xDEB3FC", Offset = "0xDEB3FC", VA = "0xDEB3FC")]
		public void OnInteract()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xDEB408", Offset = "0xDEB408", VA = "0xDEB408")]
		public void OnInteract(InputButtons inputBtn)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xDEB414", Offset = "0xDEB414", VA = "0xDEB414")]
		public void OnHold(InputButtons inputBtn)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xDEB420", Offset = "0xDEB420", VA = "0xDEB420", Slot = "7")]
		public virtual void OnLookEnter()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xDEB42C", Offset = "0xDEB42C", VA = "0xDEB42C", Slot = "8")]
		public virtual void OnLookExit()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xDEB438", Offset = "0xDEB438", VA = "0xDEB438", Slot = "9")]
		public virtual void SetInteractable(bool active)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xDEB5B0", Offset = "0xDEB5B0", VA = "0xDEB5B0", Slot = "10")]
		protected virtual void Interact()
		{
		}

		[Token(Token = "0x6000575")]
		protected abstract void Interact(InputButtons inputBtn);

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xDEB5B4", Offset = "0xDEB5B4", VA = "0xDEB5B4", Slot = "12")]
		protected virtual void Hold(InputButtons inputBtn)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xDEB5B8", Offset = "0xDEB5B8", VA = "0xDEB5B8", Slot = "13")]
		protected virtual void LookEnter()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xDEB5CC", Offset = "0xDEB5CC", VA = "0xDEB5CC", Slot = "14")]
		protected virtual void LookExit()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xDEB5E0", Offset = "0xDEB5E0", VA = "0xDEB5E0", Slot = "15")]
		protected virtual void SetHighlighted(bool value)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xDEB5FC", Offset = "0xDEB5FC", VA = "0xDEB5FC", Slot = "16")]
		protected virtual void SetHighlighted(bool value, bool force, bool reset = false)
		{
		}
	}
}
namespace Cortopia.Scripts.InteractObjects
{
	[Token(Token = "0x200017D")]
	public interface IWandInteractable
	{
		[Token(Token = "0x600057C")]
		void Interact(WandHand wandHand);

		[Token(Token = "0x600057D")]
		void LookEnter(WandHand wandHand);

		[Token(Token = "0x600057E")]
		void LookExit(WandHand wandHand);
	}
}
[Token(Token = "0x200017E")]
public class MirrorObject : InteractObject
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PortalHandler m_mirror;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xF69DE0", Offset = "0xF69DE0", VA = "0xF69DE0")]
	public MirrorObject()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xF69E48", Offset = "0xF69E48", VA = "0xF69E48", Slot = "10")]
	protected override void Interact()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xF69E4C", Offset = "0xF69E4C", VA = "0xF69E4C", Slot = "11")]
	protected override void Interact(InputButtons inputBtn)
	{
	}
}
[Token(Token = "0x200017F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7D6C8", Offset = "0xC7D6C8")]
public class MusicBox : MonoBehaviour
{
	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D73C", Offset = "0xC7D73C")]
	private sealed class <RotateBallerina>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MusicBox $this;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x1700053E")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x18473A0", Offset = "0x18473A0", VA = "0x18473A0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x18473A8", Offset = "0x18473A8", VA = "0x18473A8", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x1847170", Offset = "0x1847170", VA = "0x1847170")]
		[DebuggerHidden]
		public <RotateBallerina>c__Iterator0()
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x1847178", Offset = "0x1847178", VA = "0x1847178", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x18473B0", Offset = "0x18473B0", VA = "0x18473B0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x18473C4", Offset = "0x18473C4", VA = "0x18473C4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_ballerina;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_rotationSpeed;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isPlaying;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource m_audioSource;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Phonograph m_phonograph;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds m_rotationWait;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Interactable _interactable;

	[Token(Token = "0x170000C7")]
	private AudioSource AudioSource
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1846CA8", Offset = "0x1846CA8", VA = "0x1846CA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1846C98", Offset = "0x1846C98", VA = "0x1846C98")]
	public MusicBox()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1846D48", Offset = "0x1846D48", VA = "0x1846D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1846E18", Offset = "0x1846E18", VA = "0x1846E18")]
	private void Interact()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1846F1C", Offset = "0x1846F1C", VA = "0x1846F1C")]
	public void TogglePlaying(bool playing)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1847104", Offset = "0x1847104", VA = "0x1847104")]
	[DebuggerHidden]
	private IEnumerator RotateBallerina()
	{
		return null;
	}
}
[Token(Token = "0x2000180")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7D79C", Offset = "0xC7D79C")]
public class Phonograph : InteractableGameObject
{
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D810", Offset = "0xC7D810")]
	private sealed class <WaitForMusicEnd>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Phonograph $this;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x17000540")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x186889C", Offset = "0x186889C", VA = "0x186889C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000541")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x18688A4", Offset = "0x18688A4", VA = "0x18688A4", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x1868778", Offset = "0x1868778", VA = "0x1868778")]
		[DebuggerHidden]
		public <WaitForMusicEnd>c__Iterator0()
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x1868780", Offset = "0x1868780", VA = "0x1868780", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x18688AC", Offset = "0x18688AC", VA = "0x18688AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x18688C0", Offset = "0x18688C0", VA = "0x18688C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource m_audioSource;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isPlaying;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x186844C", Offset = "0x186844C", VA = "0x186844C")]
	public Phonograph()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1868454", Offset = "0x1868454", VA = "0x1868454")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x18684AC", Offset = "0x18684AC", VA = "0x18684AC", Slot = "6")]
	public override void Interact()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1868564", Offset = "0x1868564", VA = "0x1868564")]
	private void TogglePlaying(bool shouldPlay)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x186870C", Offset = "0x186870C", VA = "0x186870C")]
	[DebuggerHidden]
	private IEnumerator WaitForMusicEnd()
	{
		return null;
	}
}
namespace Assets.Scripts.InteractObjects
{
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7D870", Offset = "0xC7D870")]
	public class PortalLever : MonoBehaviour, IWorkshopTileListener
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_rotationTime;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_degrees;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_opened;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable m_interactable;

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xDEB854", Offset = "0xDEB854", VA = "0xDEB854")]
		public PortalLever()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xDEB864", Offset = "0xDEB864", VA = "0xDEB864")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xDEB8BC", Offset = "0xDEB8BC", VA = "0xDEB8BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xDEB944", Offset = "0xDEB944", VA = "0xDEB944")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xDEB9CC", Offset = "0xDEB9CC", VA = "0xDEB9CC")]
		private void OnInteract()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xDEBCCC", Offset = "0xDEBCCC", VA = "0xDEBCCC")]
		private void OnRotateComplete()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xDEBD4C", Offset = "0xDEBD4C", VA = "0xDEBD4C", Slot = "4")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xDEBD9C", Offset = "0xDEBD9C", VA = "0xDEBD9C", Slot = "5")]
		public void ToggleActive(bool active)
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class StartBotMatchActivationObject : MonoBehaviour
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_wand;

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xDEBDA0", Offset = "0xDEBDA0", VA = "0xDEBDA0")]
		public StartBotMatchActivationObject()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xDEBDA8", Offset = "0xDEBDA8", VA = "0xDEBDA8")]
		private void OnEnable()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7D904", Offset = "0xC7D904")]
	public class StartBotMatchWand : MonoBehaviour
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_tooltip;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InteractableUnlockable m_interactable;

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xDEBE30", Offset = "0xDEBE30", VA = "0xDEBE30")]
		public StartBotMatchWand()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xDEBE38", Offset = "0xDEBE38", VA = "0xDEBE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xDEBE90", Offset = "0xDEBE90", VA = "0xDEBE90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xDEBFA0", Offset = "0xDEBFA0", VA = "0xDEBFA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xDEC0B0", Offset = "0xDEC0B0", VA = "0xDEC0B0")]
		public void Interact()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xDEC2F0", Offset = "0xDEC2F0", VA = "0xDEC2F0")]
		private void LookEnter()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xDEC320", Offset = "0xDEC320", VA = "0xDEC320")]
		private void LookExit()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class TutorialEntrance : MonoSingleton<TutorialEntrance>
	{
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7D9C8", Offset = "0xC7D9C8")]
		private sealed class <LoadLevelOnNetworkChange>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Level levelToLoad;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TutorialEntrance $this;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000542")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028E0")]
				[Address(RVA = "0xDECE14", Offset = "0xDECE14", VA = "0xDECE14", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000543")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E1")]
				[Address(RVA = "0xDECE1C", Offset = "0xDECE1C", VA = "0xDECE1C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028DE")]
			[Address(RVA = "0xDECCD8", Offset = "0xDECCD8", VA = "0xDECCD8")]
			[DebuggerHidden]
			public <LoadLevelOnNetworkChange>c__Iterator0()
			{
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0xDECCE0", Offset = "0xDECCE0", VA = "0xDECCE0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xDECE24", Offset = "0xDECE24", VA = "0xDECE24", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028E3")]
			[Address(RVA = "0xDECE38", Offset = "0xDECE38", VA = "0xDECE38", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Tile m_connectedTile;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Interactable m_interactable;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_connectedToMatchRoomToken;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_connectToMatchRoomFailedToken;

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xDEC350", Offset = "0xDEC350", VA = "0xDEC350")]
		public TutorialEntrance()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xDEC3A8", Offset = "0xDEC3A8", VA = "0xDEC3A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xDEC4B8", Offset = "0xDEC4B8", VA = "0xDEC4B8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xDEC55C", Offset = "0xDEC55C", VA = "0xDEC55C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xDEC5F8", Offset = "0xDEC5F8", VA = "0xDEC5F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xDEC68C", Offset = "0xDEC68C", VA = "0xDEC68C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xDE37B8", Offset = "0xDE37B8", VA = "0xDE37B8")]
		public void Interact()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xDEC8E4", Offset = "0xDEC8E4", VA = "0xDEC8E4")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xDECA90", Offset = "0xDECA90", VA = "0xDECA90")]
		private void OnConnectToMatchRoomFailed(Events.ConnectToMatchRoomFailed eventData)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xDEC858", Offset = "0xDEC858", VA = "0xDEC858")]
		private void LoadWorkshop()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xDEC794", Offset = "0xDEC794", VA = "0xDEC794")]
		private void LoadBasement()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xDECA04", Offset = "0xDECA04", VA = "0xDECA04")]
		[DebuggerHidden]
		private IEnumerator LoadLevelOnNetworkChange(Level levelToLoad)
		{
			return null;
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xDECB50", Offset = "0xDECB50", VA = "0xDECB50")]
		private void OnEnterBasementFailed(string reason)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000185")]
	public class UnlockableRendererMaterialPair
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material[] m_materials;

		[Token(Token = "0x170000C8")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0xDECF14", Offset = "0xDECF14", VA = "0xDECF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DA48", Offset = "0xC7DA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xDECE9C", Offset = "0xDECE9C", VA = "0xDECE9C")]
		public UnlockableRendererMaterialPair()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xDECF1C", Offset = "0xDECF1C", VA = "0xDECF1C")]
		public void PreloadMaterials()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xDEA650", Offset = "0xDEA650", VA = "0xDEA650")]
		public void ReplaceMaterial(ItemMaterialType startType)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xDEAB58", Offset = "0xDEAB58", VA = "0xDEAB58")]
		public void AssignMaterial(ItemMaterialType type, bool highlighted)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xDEAD80", Offset = "0xDEAD80", VA = "0xDEAD80")]
		public void SetHighlighted()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xDEAE58", Offset = "0xDEAE58", VA = "0xDEAE58")]
		public void SetDefault()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7DA58", Offset = "0xC7DA58")]
	public class WandHandle : MonoBehaviour
	{
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DB98", Offset = "0xC7DB98")]
		private sealed class <Dissolve>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <startValue>__1;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool enable;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float <endValue>__1;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float <t>__1;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <lerpValue>__2;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal WandHandle $this;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0xDED8AC", Offset = "0xDED8AC", VA = "0xDED8AC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E7")]
				[Address(RVA = "0xDED8B4", Offset = "0xDED8B4", VA = "0xDED8B4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E4")]
			[Address(RVA = "0xDED668", Offset = "0xDED668", VA = "0xDED668")]
			[DebuggerHidden]
			public <Dissolve>c__Iterator0()
			{
			}

			[Token(Token = "0x60028E5")]
			[Address(RVA = "0xDED670", Offset = "0xDED670", VA = "0xDED670", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xDED8BC", Offset = "0xDED8BC", VA = "0xDED8BC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xDED8D0", Offset = "0xDED8D0", VA = "0xDED8D0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7DABC", Offset = "0xC7DABC")]
		[SerializeField]
		private WorkshopWand m_workshopWand;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_mainMeshRenderer;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] m_additionalWandRenderers;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoxCollider m_baseCollider;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxCollider m_tipCollider;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider m_relicCollider;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InteractableUnlockable m_interactable;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractableUnlockable m_tipInteractable;

		[Token(Token = "0x170000C9")]
		public BoxCollider BaseCollider
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xDED004", Offset = "0xDED004", VA = "0xDED004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DB58", Offset = "0xC7DB58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public BoxCollider TipCollider
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xDED00C", Offset = "0xDED00C", VA = "0xDED00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DB68", Offset = "0xC7DB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public BoxCollider RelicCollider
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xDED014", Offset = "0xDED014", VA = "0xDED014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DB78", Offset = "0xC7DB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xDECFA4", Offset = "0xDECFA4", VA = "0xDECFA4")]
		public WandHandle()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xDED01C", Offset = "0xDED01C", VA = "0xDED01C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xDED164", Offset = "0xDED164", VA = "0xDED164")]
		public void SetActive(bool active, bool dissolve = true)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xDED5D8", Offset = "0xDED5D8", VA = "0xDED5D8")]
		[DebuggerHidden]
		private IEnumerator Dissolve(bool enable)
		{
			return null;
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xDED490", Offset = "0xDED490", VA = "0xDED490")]
		private void SetDissolveValue(float value)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xDED37C", Offset = "0xDED37C", VA = "0xDED37C")]
		public void LockInteractables(bool locked)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class WorkshopWand : InteractableGameObject
	{
		[Token(Token = "0x4000877")]
		private const float MoveStepSmall = 0.2f;

		[Token(Token = "0x4000878")]
		private const float MoveStepBig = 0.2f;

		[Token(Token = "0x4000879")]
		private const float MoveStepPingPong = 0.19f;

		[Token(Token = "0x400087A")]
		private const float MoveTimePingPong = 0.1f;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC7DBF8", Offset = "0xC7DBF8")]
		[SerializeField]
		private Transform m_wandTipTransform;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private WandHandle m_currentWand;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private WandHandle[] m_wands;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BoxCollider[] m_handleCol;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BoxCollider m_relicCollider;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3? m_originalPos;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_startPos;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_endPos;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3? m_originalPosBig;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 m_startPosBig;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 m_endPosBig;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_isOpen;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_currentTime;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private EventToken m_wandTypeChangedEventToken;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EventToken m_loadoutChangedEventToken;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DC64", Offset = "0xC7DC64")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DC64", Offset = "0xC7DC64")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x170000CC")]
		public bool IsMoving
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xDED998", Offset = "0xDED998", VA = "0xDED998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DCA0", Offset = "0xC7DCA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0xDED9A0", Offset = "0xDED9A0", VA = "0xDED9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DCB0", Offset = "0xC7DCB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public Transform WandTipTransform
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0xDED9AC", Offset = "0xDED9AC", VA = "0xDED9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DCC0", Offset = "0xC7DCC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public WandHandle CurrentWand
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0xDED9B4", Offset = "0xDED9B4", VA = "0xDED9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DCD0", Offset = "0xC7DCD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xDED93C", Offset = "0xDED93C", VA = "0xDED93C")]
		public WorkshopWand()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xDED9BC", Offset = "0xDED9BC", VA = "0xDED9BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xDEDDBC", Offset = "0xDEDDBC", VA = "0xDEDDBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xDEDE3C", Offset = "0xDEDE3C", VA = "0xDEDE3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xDEE274", Offset = "0xDEE274", VA = "0xDEE274")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xDED488", Offset = "0xDED488", VA = "0xDED488")]
		public void SetWandTipTransform(Transform wandHandleRenderer)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xDEE570", Offset = "0xDEE570", VA = "0xDEE570")]
		private void OnWandTypeChanged(Events.WandTypeChangedEvent eventData)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xDEE5A4", Offset = "0xDEE5A4", VA = "0xDEE5A4")]
		private void OnLoadoutChanged(Events.WandLoadoutSwitchedEvent eventData)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xDEE628", Offset = "0xDEE628", VA = "0xDEE628")]
		public void LockWandHandles(bool locked)
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xDEE6A8", Offset = "0xDEE6A8", VA = "0xDEE6A8", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xDEE914", Offset = "0xDEE914", VA = "0xDEE914")]
		public void ForceCloseWand()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xDEE7A4", Offset = "0xDEE7A4", VA = "0xDEE7A4")]
		public void TryCloseWand()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xDEE894", Offset = "0xDEE894", VA = "0xDEE894")]
		public void TryOpenWand()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xDEEE1C", Offset = "0xDEEE1C", VA = "0xDEEE1C")]
		public void FailMoveWandHandle(TweenCallback onStepComplete)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xDEF1D0", Offset = "0xDEF1D0", VA = "0xDEF1D0")]
		private void OnFailMoveComplete()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xDEE994", Offset = "0xDEE994", VA = "0xDEE994")]
		private void MoveWandHandle(bool open)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xDEDB34", Offset = "0xDEDB34", VA = "0xDEDB34")]
		private void ChangeWandLooks(WandType wandType, bool dissolve = true)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xDEDF54", Offset = "0xDEDF54", VA = "0xDEDF54")]
		private void SetCurrentWand(WandHandle wand, bool dissolve)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xDEF1D8", Offset = "0xDEF1D8", VA = "0xDEF1D8")]
		private void SetColliderRefs(WandHandle wand)
		{
		}
	}
}
namespace Cortopia.Scripts.InteractObjects
{
	[Token(Token = "0x2000188")]
	public class WorkshopWandVisualChanger : MonoBehaviour
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WandHand m_wandHand;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandHandle[] m_wands;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WandType m_currentWandType;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_wandTypeChangedEventToken;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_loadoutChangedEventToken;

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1033590", Offset = "0x1033590", VA = "0x1033590")]
		public WorkshopWandVisualChanger()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x10335F0", Offset = "0x10335F0", VA = "0x10335F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1033934", Offset = "0x1033934", VA = "0x1033934")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x10339B4", Offset = "0x10339B4", VA = "0x10339B4")]
		private void OnWandTypeChanged(Events.WandTypeChangedEvent eventData)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1033A04", Offset = "0x1033A04", VA = "0x1033A04")]
		private void OnLoadoutChanged(Events.WandLoadoutSwitchedEvent eventData)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1033750", Offset = "0x1033750", VA = "0x1033750")]
		private void ChangeWandLooks(WandType wandType, bool dissolve)
		{
		}
	}
}
namespace Assets.Scripts.Interfaces
{
	[Token(Token = "0x2000189")]
	public interface IAimTracker
	{
		[Token(Token = "0x170000CF")]
		Transform AimPivotTransform
		{
			[Token(Token = "0x60005D8")]
			get;
		}

		[Token(Token = "0x170000D0")]
		Ray CameraRay
		{
			[Token(Token = "0x60005D9")]
			get;
		}

		[Token(Token = "0x170000D1")]
		Ray AimRay
		{
			[Token(Token = "0x60005DA")]
			get;
		}

		[Token(Token = "0x170000D2")]
		AimInput AimInput
		{
			[Token(Token = "0x60005DB")]
			get;
			[Token(Token = "0x60005DC")]
			set;
		}

		[Token(Token = "0x60005DD")]
		void TryInstantiateCamera();

		[Token(Token = "0x60005DE")]
		void TryUpdateAimPivot(AimInput aimInput, WandInput wandInput);

		[Token(Token = "0x60005DF")]
		void UpdateHandedness(AimInput aimInput);
	}
	[Token(Token = "0x200018A")]
	public interface ICursable
	{
		[Token(Token = "0x60005E0")]
		void EnableCurse(float waitTime, CurseLingeringEffect curseLinderingEffect);

		[Token(Token = "0x60005E1")]
		void DisableCurse();
	}
	[Token(Token = "0x200018B")]
	public interface IDamageable
	{
		[Token(Token = "0x170000D3")]
		float Health
		{
			[Token(Token = "0x60005E5")]
			get;
		}

		[Token(Token = "0x60005E2")]
		bool TakeDamage(DamageType damageType, float damage, Vector2 hitDirection);

		[Token(Token = "0x60005E3")]
		Transform GetHitTransform();

		[Token(Token = "0x60005E4")]
		void ApplyChillingClutch(float chillingClutchPercent, float time);
	}
}
[Token(Token = "0x200018C")]
public interface IDestructableObject
{
	[Token(Token = "0x60005E6")]
	void OnHit(float damage);
}
namespace Assets.Scripts.Interfaces
{
	[Token(Token = "0x200018D")]
	public interface IDragObject
	{
		[Token(Token = "0x170000D4")]
		bool IsBeingDragged
		{
			[Token(Token = "0x60005EB")]
			get;
		}

		[Token(Token = "0x170000D5")]
		bool IsDraggable
		{
			[Token(Token = "0x60005EC")]
			get;
		}

		[Token(Token = "0x170000D6")]
		bool IsSnappable
		{
			[Token(Token = "0x60005ED")]
			get;
		}

		[Token(Token = "0x170000D7")]
		bool ShouldRaycastToDragPlane
		{
			[Token(Token = "0x60005EE")]
			get;
		}

		[Token(Token = "0x170000D8")]
		float DragTime
		{
			[Token(Token = "0x60005EF")]
			get;
		}

		[Token(Token = "0x14000005")]
		event DragBeginDelegate OnDragBegin;

		[Token(Token = "0x14000006")]
		event DragEndDelegate OnDragEnd;

		[Token(Token = "0x60005F0")]
		void BeginDrag(Vector3 dragPoint, Vector3 cameraPoint);

		[Token(Token = "0x60005F1")]
		void Drag(Vector3 dragPoint, Vector3 cameraPoint);

		[Token(Token = "0x60005F2")]
		void EndDrag();

		[Token(Token = "0x60005F3")]
		void SnapToObject(ISnapObject snapObject);
	}
	[Token(Token = "0x200018E")]
	public delegate void DragBeginDelegate();
	[Token(Token = "0x200018F")]
	public delegate void DragEndDelegate();
	[Token(Token = "0x2000190")]
	public interface IEffectEmitter
	{
		[Token(Token = "0x170000D9")]
		ParticleSystem[] Emitters
		{
			[Token(Token = "0x60005FC")]
			get;
			[Token(Token = "0x60005FD")]
			set;
		}

		[Token(Token = "0x60005FE")]
		void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false);
	}
	[Token(Token = "0x2000191")]
	public interface IInputListener
	{
		[Token(Token = "0x170000DA")]
		PlayerInput PlayerInput
		{
			[Token(Token = "0x60005FF")]
			get;
		}

		[Token(Token = "0x6000600")]
		void OnMenuInput(InputState inputState);

		[Token(Token = "0x6000601")]
		void OnPrimaryAxisInput(InputState inputState);

		[Token(Token = "0x6000602")]
		void OnSecondaryAxisInput(InputState inputState);

		[Token(Token = "0x6000603")]
		void OnRecenterInput(InputState inputState);

		[Token(Token = "0x6000604")]
		void OnReverseInput(InputState inputState);

		[Token(Token = "0x6000605")]
		void OnPrimaryInput(InputState inputState);

		[Token(Token = "0x6000606")]
		void OnSecondaryInput(InputState inputState);

		[Token(Token = "0x6000607")]
		void OnTeleportInput(InputState inputState);

		[Token(Token = "0x6000608")]
		void OnPointTriggerInput(InputState inputState);

		[Token(Token = "0x6000609")]
		void OnSwipeInput(InputState inputState, float speed);

		[Token(Token = "0x600060A")]
		void OnInteractionInput(InputState inputState);
	}
	[Token(Token = "0x2000192")]
	public interface IInputListenerTwoWands : IInputListener
	{
		[Token(Token = "0x600060B")]
		void OnInteractionLeftInput(InputState inputState);

		[Token(Token = "0x600060C")]
		void OnAutoTeleportLeftInput(InputState inputState);

		[Token(Token = "0x600060D")]
		void OnAutoTeleportRightInput(InputState inputState);

		[Token(Token = "0x600060E")]
		void OnSpellInput01(InputState inputState);

		[Token(Token = "0x600060F")]
		void OnSpellInput02(InputState inputState);

		[Token(Token = "0x6000610")]
		void OnSpellInput03(InputState inputState);

		[Token(Token = "0x6000611")]
		void OnSpellInput04(InputState inputState);
	}
	[Token(Token = "0x2000193")]
	public interface IPauseObject
	{
		[Token(Token = "0x170000DB")]
		bool IsPaused
		{
			[Token(Token = "0x6000612")]
			get;
		}

		[Token(Token = "0x6000613")]
		void Pause(bool pause);
	}
	[Token(Token = "0x2000194")]
	public interface IPoolObject
	{
		[Token(Token = "0x170000DC")]
		PhotonView photonView
		{
			[Token(Token = "0x6000614")]
			get;
		}

		[Token(Token = "0x6000615")]
		void EnableObject(Vector3 position, params object[] data);

		[Token(Token = "0x6000616")]
		void DisableObject();
	}
	[Token(Token = "0x2000195")]
	public interface IProjectileAccelerate
	{
		[Token(Token = "0x170000DD")]
		bool ShouldAccelerate
		{
			[Token(Token = "0x6000617")]
			get;
			[Token(Token = "0x6000618")]
			set;
		}

		[Token(Token = "0x170000DE")]
		float AccelerationSpeed
		{
			[Token(Token = "0x6000619")]
			get;
			[Token(Token = "0x600061A")]
			set;
		}

		[Token(Token = "0x170000DF")]
		float MaxSpeed
		{
			[Token(Token = "0x600061B")]
			get;
		}

		[Token(Token = "0x600061C")]
		void Accelerate();
	}
	[Token(Token = "0x2000196")]
	public interface IProjectileSplash
	{
		[Token(Token = "0x170000E0")]
		SplashDamageHandler SplashDamageHandler
		{
			[Token(Token = "0x600061D")]
			get;
		}
	}
	[Token(Token = "0x2000197")]
	public interface ISnapObject
	{
		[Token(Token = "0x170000E1")]
		Vector3 SnapPoint
		{
			[Token(Token = "0x600061E")]
			get;
		}

		[Token(Token = "0x170000E2")]
		Quaternion SnapRotation
		{
			[Token(Token = "0x600061F")]
			get;
		}

		[Token(Token = "0x170000E3")]
		bool IsSnappable
		{
			[Token(Token = "0x6000620")]
			get;
		}
	}
	[Token(Token = "0x2000198")]
	public interface ITileSpell
	{
		[Token(Token = "0x6000621")]
		void SetHighlightTile(Tile tile);

		[Token(Token = "0x6000622")]
		Tile GetHighlightedTile();

		[Token(Token = "0x6000623")]
		void ResetHighlightedTile();

		[Token(Token = "0x6000624")]
		void TrackTiles();
	}
	[Token(Token = "0x2000199")]
	public interface ITileTimedEffect
	{
		[Token(Token = "0x170000E4")]
		AudioSource LoopingAudioSource
		{
			[Token(Token = "0x6000625")]
			get;
		}

		[Token(Token = "0x6000626")]
		IEnumerator LatentStart(float waitTime);

		[Token(Token = "0x6000627")]
		IEnumerator LatentDestroy(float waitTime);
	}
	[Token(Token = "0x200019A")]
	public interface ITileTrap
	{
		[Token(Token = "0x170000E5")]
		bool IsArmed
		{
			[Token(Token = "0x6000628")]
			get;
			[Token(Token = "0x6000629")]
			set;
		}

		[Token(Token = "0x170000E6")]
		bool HasDeployed
		{
			[Token(Token = "0x600062A")]
			get;
			[Token(Token = "0x600062B")]
			set;
		}

		[Token(Token = "0x600062C")]
		IEnumerator ArmTrap(float armTime);

		[Token(Token = "0x600062D")]
		void DeployTrap();
	}
	[Token(Token = "0x200019B")]
	public interface IUnlockable
	{
		[Token(Token = "0x170000E7")]
		Vector3 StartingPosition
		{
			[Token(Token = "0x600062E")]
			get;
		}

		[Token(Token = "0x170000E8")]
		Quaternion StartingRotation
		{
			[Token(Token = "0x600062F")]
			get;
		}

		[Token(Token = "0x6000630")]
		Sequence MoveToUnlock(Transform parent, float time);

		[Token(Token = "0x6000631")]
		Sequence ReturnToSlot(float time);

		[Token(Token = "0x6000632")]
		void Unlock(GameObject vfx);
	}
}
namespace Cortopia.Scripts.Attributes
{
	[Token(Token = "0x200019C")]
	public interface IVisibilityToggleable
	{
		[Token(Token = "0x170000E9")]
		bool ShouldBeEnabled
		{
			[Token(Token = "0x6000633")]
			get;
		}
	}
}
namespace Assets.Scripts.Interfaces
{
	[Token(Token = "0x200019D")]
	public interface IWandControllable
	{
		[Token(Token = "0x170000EA")]
		WandManager WandManager
		{
			[Token(Token = "0x6000634")]
			get;
		}

		[Token(Token = "0x6000635")]
		void SetWandControl(WandManager wandManager);
	}
	[Token(Token = "0x200019E")]
	public interface IWorkshopTileListener
	{
		[Token(Token = "0x6000636")]
		void ToggleInteractionActive(bool active);

		[Token(Token = "0x6000637")]
		void ToggleActive(bool active);
	}
}
namespace Assets.Scripts.ItemDatabase
{
	[Token(Token = "0x200019F")]
	public class CatalogItemWrapper
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DD10", Offset = "0xC7DD10")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DD10", Offset = "0xC7DD10")]
		private CatalogItem <RawItem>k__BackingField;

		[Token(Token = "0x170000EB")]
		public CatalogItem RawItem
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0xDEFC10", Offset = "0xDEFC10", VA = "0xDEFC10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DD4C", Offset = "0xC7DD4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600063A")]
			[Address(RVA = "0xDEFC08", Offset = "0xDEFC08", VA = "0xDEFC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DD5C", Offset = "0xC7DD5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public string ItemId
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xDEFC18", Offset = "0xDEFC18", VA = "0xDEFC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public int DustPrice
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0xDEFC40", Offset = "0xDEFC40", VA = "0xDEFC40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public int SpellTokenPrice
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xDEFCB4", Offset = "0xDEFCB4", VA = "0xDEFCB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EF")]
		public string DisplayName
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xDEFD28", Offset = "0xDEFD28", VA = "0xDEFD28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public string Description
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xDEFD50", Offset = "0xDEFD50", VA = "0xDEFD50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xDEFBDC", Offset = "0xDEFBDC", VA = "0xDEFBDC")]
		public CatalogItemWrapper(CatalogItem catalogItem)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public enum CatalogVersion
	{
		[Token(Token = "0x4000892")]
		Wands,
		[Token(Token = "0x4000893")]
		Characters,
		[Token(Token = "0x4000894")]
		Titles,
		[Token(Token = "0x4000895")]
		Spells
	}
	[Token(Token = "0x20001A1")]
	public class CatalogWrapper
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CatalogVersion;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CatalogItem> Items;

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xDEFD78", Offset = "0xDEFD78", VA = "0xDEFD78")]
		public CatalogWrapper()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class LegacyItemPrices
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<Legacy_MaskType, int> Masks;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<Legacy_OutfitType, int> Outfits;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Dictionary<Legacy_WandType, int> Wands;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Dictionary<Legacy_LootCacheType, int> LootCaches;

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xDEFD80", Offset = "0xDEFD80", VA = "0xDEFD80")]
		public LegacyItemPrices()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public static class WandsDatabase
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LegacyItemPrices LegacyItems;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<WandType, CatalogItemWrapper> Wands;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<CharacterType, CatalogItemWrapper> Characters;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<Title, CatalogItemWrapper> Titles;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<Spell, CatalogItemWrapper> Spells;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Action m_onCompleted;

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xDE6BB0", Offset = "0xDE6BB0", VA = "0xDE6BB0")]
		public static void Initialize(List<CatalogItem>[] catalogs)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xDF09E4", Offset = "0xDF09E4", VA = "0xDF09E4")]
		public static void PopulateItemLists(List<CatalogItem> items)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xDF0F44", Offset = "0xDF0F44", VA = "0xDF0F44")]
		public static CatalogItemWrapper GetWand(WandType type)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xDF1028", Offset = "0xDF1028", VA = "0xDF1028")]
		public static Dictionary<WandType, CatalogItemWrapper> GetAllWands()
		{
			return null;
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xDF10BC", Offset = "0xDF10BC", VA = "0xDF10BC")]
		public static Dictionary<WandType, CatalogItemWrapper> GetAllWandsNonAlloc()
		{
			return null;
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xDF1124", Offset = "0xDF1124", VA = "0xDF1124")]
		public static CatalogItemWrapper GetCharacter(CharacterType type)
		{
			return null;
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xDF1240", Offset = "0xDF1240", VA = "0xDF1240")]
		public static Dictionary<CharacterType, CatalogItemWrapper> GetAllCharacters()
		{
			return null;
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xDF12D4", Offset = "0xDF12D4", VA = "0xDF12D4")]
		public static Dictionary<CharacterType, CatalogItemWrapper> GetAllCharactersNonAlloc()
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xDF133C", Offset = "0xDF133C", VA = "0xDF133C")]
		public static CatalogItemWrapper GetTitle(Title type)
		{
			return null;
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xDF1420", Offset = "0xDF1420", VA = "0xDF1420")]
		public static Dictionary<Title, CatalogItemWrapper> GetAllTitles()
		{
			return null;
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xDF14B4", Offset = "0xDF14B4", VA = "0xDF14B4")]
		public static Dictionary<Title, CatalogItemWrapper> GetAllTitlesNonAlloc()
		{
			return null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xDF151C", Offset = "0xDF151C", VA = "0xDF151C")]
		public static CatalogItemWrapper GetSpell(Spell type)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xDF1600", Offset = "0xDF1600", VA = "0xDF1600")]
		public static Dictionary<Spell, CatalogItemWrapper> GetAllSpells()
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xDF1694", Offset = "0xDF1694", VA = "0xDF1694")]
		public static Dictionary<Spell, CatalogItemWrapper> GetAllSpellsNonAlloc()
		{
			return null;
		}
	}
}
[Token(Token = "0x20001A4")]
public class LevelLoader : ExpandedSingleton<LevelLoader>
{
	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DDD8", Offset = "0xC7DDD8")]
	private sealed class <StartLevelLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Level level;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float delayTime;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LevelLoader $this;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000546")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xF67F54", Offset = "0xF67F54", VA = "0xF67F54", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000547")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xF67F5C", Offset = "0xF67F5C", VA = "0xF67F5C", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0xF676A8", Offset = "0xF676A8", VA = "0xF676A8")]
		[DebuggerHidden]
		public <StartLevelLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0xF67804", Offset = "0xF67804", VA = "0xF67804", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0xF67F64", Offset = "0xF67F64", VA = "0xF67F64", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0xF67F78", Offset = "0xF67F78", VA = "0xF67F78", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds sm_shortWait;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource m_loadSound;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncOperation m_asyncOp;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventToken m_areaBundlesLoadedEventToken;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_hasLoadedAreaBundles;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DD6C", Offset = "0xC7DD6C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DD6C", Offset = "0xC7DD6C")]
	private bool <IsLoadingLevel>k__BackingField;

	[Token(Token = "0x170000F1")]
	public bool IsLoadingLevel
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xF66F90", Offset = "0xF66F90", VA = "0xF66F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DDA8", Offset = "0xC7DDA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000653")]
		[Address(RVA = "0xF66F98", Offset = "0xF66F98", VA = "0xF66F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DDB8", Offset = "0xC7DDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xF66F40", Offset = "0xF66F40", VA = "0xF66F40")]
	public LevelLoader()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xF66FA4", Offset = "0xF66FA4", VA = "0xF66FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xF67060", Offset = "0xF67060", VA = "0xF67060", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xF670E0", Offset = "0xF670E0", VA = "0xF670E0")]
	public void SetLoadingSound(AudioSource source)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xF671CC", Offset = "0xF671CC", VA = "0xF671CC")]
	private void TryRemoveLoadSound()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xF672A4", Offset = "0xF672A4", VA = "0xF672A4")]
	public bool LoadLevel(Level level, float delayTime = 0f, bool forceIfSameScene = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xF67400", Offset = "0xF67400", VA = "0xF67400")]
	public bool LoadLevel(Arena arena, float delayTime = 0f, bool forceIfSameScene = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xF672AC", Offset = "0xF672AC", VA = "0xF672AC")]
	private bool LoadLevelInternal(Level level, float delayTime = 0f, bool forceIfSameScene = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xF675B4", Offset = "0xF675B4", VA = "0xF675B4")]
	private bool LoadLevel(Level level, float delayTime = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xF67604", Offset = "0xF67604", VA = "0xF67604")]
	[DebuggerHidden]
	private IEnumerator StartLevelLoad(Level level, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xF676B0", Offset = "0xF676B0", VA = "0xF676B0")]
	private void TurnOnInteractObjects()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xF676DC", Offset = "0xF676DC", VA = "0xF676DC")]
	private void SetCameraRender()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xF67788", Offset = "0xF67788", VA = "0xF67788")]
	private void OnAreaBundlesLoaded(Events.AreaBundlesLoadedEvent eventData)
	{
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001A5")]
	public class LoadingListener : MonoBehaviour
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_listener;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_gameInitializedEventToken;

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xE12B40", Offset = "0xE12B40", VA = "0xE12B40")]
		public LoadingListener()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xE12B48", Offset = "0xE12B48", VA = "0xE12B48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xE12DB8", Offset = "0xE12DB8", VA = "0xE12DB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xE12E40", Offset = "0xE12E40", VA = "0xE12E40")]
		private void OnGameInitialized(Events.GameSaveDataLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xE12C9C", Offset = "0xE12C9C", VA = "0xE12C9C")]
		private void GameInitialized()
		{
		}
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x20001A6")]
	public class MainMenuManager : MonoBehaviour
	{
		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DE98", Offset = "0xC7DE98")]
		private sealed class <QuitAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000548")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0xDFA74C", Offset = "0xDFA74C", VA = "0xDFA74C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000549")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F3")]
				[Address(RVA = "0xDFA754", Offset = "0xDFA754", VA = "0xDFA754", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xDF90F8", Offset = "0xDF90F8", VA = "0xDF90F8")]
			[DebuggerHidden]
			public <QuitAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xDFA640", Offset = "0xDFA640", VA = "0xDFA640", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xDFA75C", Offset = "0xDFA75C", VA = "0xDFA75C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xDFA770", Offset = "0xDFA770", VA = "0xDFA770", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DEF8", Offset = "0xC7DEF8")]
		private sealed class <LoginFailed>c__AnonStorey2
		{
			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string platform;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool autoQuit;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal MainMenuManager $this;

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xDF9F1C", Offset = "0xDF9F1C", VA = "0xDF9F1C")]
			public <LoginFailed>c__AnonStorey2()
			{
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xDFA504", Offset = "0xDFA504", VA = "0xDFA504")]
			internal void <>m__0(bool success)
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DF08", Offset = "0xC7DF08")]
		private sealed class <LoadLevelAsync>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Level level;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal MainMenuManager $this;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700054A")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0xDFA47C", Offset = "0xDFA47C", VA = "0xDFA47C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028FB")]
				[Address(RVA = "0xDFA484", Offset = "0xDFA484", VA = "0xDFA484", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xDF9FB0", Offset = "0xDF9FB0", VA = "0xDF9FB0")]
			[DebuggerHidden]
			public <LoadLevelAsync>c__Iterator1()
			{
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xDF9FB8", Offset = "0xDF9FB8", VA = "0xDF9FB8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xDFA48C", Offset = "0xDFA48C", VA = "0xDFA48C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xDFA4A0", Offset = "0xDFA4A0", VA = "0xDFA4A0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40008AA")]
		private const string BackendUnresponsiveTerm = "Info/BackendUnresponsive";

		[Token(Token = "0x40008AB")]
		private const string EntitlementFailedTerm = "Info/EntitlementFailed";

		[Token(Token = "0x40008AC")]
		private const string AssetRetrievalTerm = "Info/AssetRetrieval";

		[Token(Token = "0x40008AD")]
		private const string DataRetrievalTerm = "Info/DataRetrieval";

		[Token(Token = "0x40008AE")]
		private const string LoginTerm = "Info/Login";

		[Token(Token = "0x40008AF")]
		private const string UnsupportedInputTerm = "Info/UnsupportedInput";

		[Token(Token = "0x40008B0")]
		private const string InternetRequiredTerm = "Info/InternetRequired";

		[Token(Token = "0x40008B1")]
		private const string UpdateRequiredTerm = "Info/UpdateRequired";

		[Token(Token = "0x40008B2")]
		private const string LoadingTerm = "Info/Loading";

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_infoText;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_infoLocalize;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isInputSupported;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_hasLoadedPlayfabData;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_hasLoadedAssetBundles;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool m_hasLoadedAreaBundles;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_oculusRoomId;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_quitCoroutine;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine m_levelLoadCoroutine;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation m_asyncSceneLoadOp;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_levelInitializedEventToken;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_platformLoginFailedEventToken;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_playFabLoadingEventToken;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_playfabDataLoadedEventToken;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_assetBundlesLoadedToken;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_initiateStartupSceneLoadEventToken;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_writeStartupDebugMessageToken;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_writeEntitlementFailedMessageToken;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_internetConnectedMessageToken;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_internetConnectionNotAvailableMessageToken;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_areaBundlesLoadedEventToken;

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xDF8A9C", Offset = "0xDF8A9C", VA = "0xDF8A9C")]
		public MainMenuManager()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xDF8AAC", Offset = "0xDF8AAC", VA = "0xDF8AAC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xDF8F04", Offset = "0xDF8F04", VA = "0xDF8F04")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xDF9084", Offset = "0xDF9084", VA = "0xDF9084")]
		[DebuggerHidden]
		private IEnumerator QuitAfterTime(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xDF9100", Offset = "0xDF9100", VA = "0xDF9100")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xDF9228", Offset = "0xDF9228", VA = "0xDF9228")]
		private void OnLevelInitialized(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xDF9418", Offset = "0xDF9418", VA = "0xDF9418")]
		private void OnPlatformLoginFailed(Events.PlatformLoginFailedEvent eventData)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xDF959C", Offset = "0xDF959C", VA = "0xDF959C")]
		private void OnPlayFabLoadingEvent(Events.PlayFabLoadingEvent eventData)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xDF9898", Offset = "0xDF9898", VA = "0xDF9898")]
		private void OnAssetBundlesLoaded(Events.AssetBundlesLoadedEvent eventData)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xDF98A4", Offset = "0xDF98A4", VA = "0xDF98A4")]
		private void OnPlayfabDataLoaded(Events.PlayfabDataLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xDF9928", Offset = "0xDF9928", VA = "0xDF9928")]
		private void OnInitiateStartupSceneLoad(Events.InitiateStartupSceneLoadEvent eventData)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xDF9A30", Offset = "0xDF9A30", VA = "0xDF9A30")]
		private void OnWriteStartupDebugMessage(Events.WriteDebugMessage eventData)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xDF9D4C", Offset = "0xDF9D4C", VA = "0xDF9D4C")]
		private void OnWriteEntitlementFailedMessage(Events.WriteEntitlementFailedMessage eventData)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xDF9E3C", Offset = "0xDF9E3C", VA = "0xDF9E3C")]
		private void OnInternetConnectedEvent(Events.InternetConnectionVerifiedEvent eventData)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xDF9E98", Offset = "0xDF9E98", VA = "0xDF9E98")]
		private void OnInternetConnectionNotAvailableEvent(Events.InternetConnectionNotAvailableEvent eventData)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xDF9F08", Offset = "0xDF9F08", VA = "0xDF9F08")]
		private void OnAreaBundlesLoaded(Events.AreaBundlesLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xDF946C", Offset = "0xDF946C", VA = "0xDF946C")]
		public void LoginFailed(string platform = "Generic", bool autoQuit = false)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xDF9720", Offset = "0xDF9720", VA = "0xDF9720")]
		public void RequireClientUpdate()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xDF9790", Offset = "0xDF9790", VA = "0xDF9790")]
		private void ConnectionToDatabaseFailed()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xDF99D4", Offset = "0xDF99D4", VA = "0xDF99D4")]
		private void TryLoadLevel(Level level, bool holdSceneActivation)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xDF9F24", Offset = "0xDF9F24", VA = "0xDF9F24")]
		[DebuggerHidden]
		private IEnumerator LoadLevelAsync(Level level)
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xDF9BA4", Offset = "0xDF9BA4", VA = "0xDF9BA4")]
		public void WriteInfo(params string[] terms)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xDF9188", Offset = "0xDF9188", VA = "0xDF9188")]
		public void WriteInfo(string term)
		{
		}
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x20001A7")]
	public struct MatchReward
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MatchRewardType Type;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ExperienceGain;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ExperienceMultiplier;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float DustGain;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float DustMultiplier;

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xDF70A8", Offset = "0xDF70A8", VA = "0xDF70A8")]
		public MatchReward(MatchRewardType type, float experienceGain, float experienceMultiplier, float dustGain, float dustMultiplier)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class LobbyArenaControl : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_totalXpGain;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ISet<MatchRewardType> m_playerEarnedBadges;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<MatchReward> m_playerEarnedRewards;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Queue<MatchRewardType> m_opponentEarnedBadges;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EloHandler m_eloHandler;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MatchType m_matchType;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DF68", Offset = "0xC7DF68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DF68", Offset = "0xC7DF68")]
		private PlayerMatchStatsData <PlayerData>k__BackingField;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DFA4", Offset = "0xC7DFA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DFA4", Offset = "0xC7DFA4")]
		private PlayerMatchStatsData <OpponentData>k__BackingField;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7DFE0", Offset = "0xC7DFE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7DFE0", Offset = "0xC7DFE0")]
		private int <PlayerLevel>k__BackingField;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E01C", Offset = "0xC7E01C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E01C", Offset = "0xC7E01C")]
		private int <PlayerExperience>k__BackingField;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E058", Offset = "0xC7E058")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E058", Offset = "0xC7E058")]
		private int <TotalDustGain>k__BackingField;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E094", Offset = "0xC7E094")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E094", Offset = "0xC7E094")]
		private int[] <MatchScores>k__BackingField;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E0D0", Offset = "0xC7E0D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E0D0", Offset = "0xC7E0D0")]
		private int[] <PrevEloRatings>k__BackingField;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E10C", Offset = "0xC7E10C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E10C", Offset = "0xC7E10C")]
		private int[] <UpdatedEloRatings>k__BackingField;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E148", Offset = "0xC7E148")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E148", Offset = "0xC7E148")]
		private EndState <MatchEndState>k__BackingField;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E184", Offset = "0xC7E184")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E184", Offset = "0xC7E184")]
		private int? <PrevSeasonScore>k__BackingField;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E1C0", Offset = "0xC7E1C0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E1C0", Offset = "0xC7E1C0")]
		private int? <UpdatedSeasonScore>k__BackingField;

		[Token(Token = "0x170000F2")]
		public PlayerMatchStatsData PlayerData
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xDF18E4", Offset = "0xDF18E4", VA = "0xDF18E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E1FC", Offset = "0xC7E1FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000680")]
			[Address(RVA = "0xDF18EC", Offset = "0xDF18EC", VA = "0xDF18EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E20C", Offset = "0xC7E20C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public PlayerMatchStatsData OpponentData
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0xDF18F4", Offset = "0xDF18F4", VA = "0xDF18F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E21C", Offset = "0xC7E21C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000682")]
			[Address(RVA = "0xDF18FC", Offset = "0xDF18FC", VA = "0xDF18FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E22C", Offset = "0xC7E22C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public int PlayerLevel
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0xDF1904", Offset = "0xDF1904", VA = "0xDF1904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E23C", Offset = "0xC7E23C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000684")]
			[Address(RVA = "0xDF190C", Offset = "0xDF190C", VA = "0xDF190C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E24C", Offset = "0xC7E24C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public int PlayerExperience
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0xDF1914", Offset = "0xDF1914", VA = "0xDF1914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E25C", Offset = "0xC7E25C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000686")]
			[Address(RVA = "0xDF191C", Offset = "0xDF191C", VA = "0xDF191C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E26C", Offset = "0xC7E26C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public int TotalDustGain
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xDF1924", Offset = "0xDF1924", VA = "0xDF1924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E27C", Offset = "0xC7E27C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000688")]
			[Address(RVA = "0xDF192C", Offset = "0xDF192C", VA = "0xDF192C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E28C", Offset = "0xC7E28C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public int[] MatchScores
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xDF1934", Offset = "0xDF1934", VA = "0xDF1934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E29C", Offset = "0xC7E29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068A")]
			[Address(RVA = "0xDF193C", Offset = "0xDF193C", VA = "0xDF193C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2AC", Offset = "0xC7E2AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public int[] PrevEloRatings
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0xDF1944", Offset = "0xDF1944", VA = "0xDF1944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2BC", Offset = "0xC7E2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068C")]
			[Address(RVA = "0xDF194C", Offset = "0xDF194C", VA = "0xDF194C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2CC", Offset = "0xC7E2CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public int[] UpdatedEloRatings
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0xDF1954", Offset = "0xDF1954", VA = "0xDF1954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2DC", Offset = "0xC7E2DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xDF195C", Offset = "0xDF195C", VA = "0xDF195C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2EC", Offset = "0xC7E2EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public EndState MatchEndState
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xDF1964", Offset = "0xDF1964", VA = "0xDF1964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E2FC", Offset = "0xC7E2FC")]
			get
			{
				return default(EndState);
			}
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xDF196C", Offset = "0xDF196C", VA = "0xDF196C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E30C", Offset = "0xC7E30C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public int? PrevSeasonScore
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xDF1974", Offset = "0xDF1974", VA = "0xDF1974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E31C", Offset = "0xC7E31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xDF197C", Offset = "0xDF197C", VA = "0xDF197C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E32C", Offset = "0xC7E32C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public int? UpdatedSeasonScore
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xDF1984", Offset = "0xDF1984", VA = "0xDF1984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E33C", Offset = "0xC7E33C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xDF198C", Offset = "0xDF198C", VA = "0xDF198C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E34C", Offset = "0xC7E34C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		private EloHandler EloHandler
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0xDF1994", Offset = "0xDF1994", VA = "0xDF1994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E35C", Offset = "0xC7E35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private MatchType MatchType
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0xDF1A08", Offset = "0xDF1A08", VA = "0xDF1A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E36C", Offset = "0xC7E36C")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x170000FF")]
		private bool ShouldAffectRating
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0xDF1A40", Offset = "0xDF1A40", VA = "0xDF1A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E37C", Offset = "0xC7E37C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		private bool CanPlayerEarnRating
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0xDF1A4C", Offset = "0xDF1A4C", VA = "0xDF1A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E38C", Offset = "0xC7E38C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xDF1824", Offset = "0xDF1824", VA = "0xDF1824")]
		public LobbyArenaControl()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xDF1AA8", Offset = "0xDF1AA8", VA = "0xDF1AA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xDF1B64", Offset = "0xDF1B64", VA = "0xDF1B64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xDF1BDC", Offset = "0xDF1BDC", VA = "0xDF1BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xDF1C44", Offset = "0xDF1C44", VA = "0xDF1C44")]
		private void OnLevelUpdated(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xDF1C74", Offset = "0xDF1C74", VA = "0xDF1C74")]
		private void UpdateLevel(Level level)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xDF1FF4", Offset = "0xDF1FF4", VA = "0xDF1FF4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xDF1BE0", Offset = "0xDF1BE0", VA = "0xDF1BE0")]
		public void ResetMatchScores()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xDF1DDC", Offset = "0xDF1DDC", VA = "0xDF1DDC")]
		private void ClearMatchStats()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xDF2024", Offset = "0xDF2024", VA = "0xDF2024")]
		private void ArenaMatchEnd(EndState endState)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xDF274C", Offset = "0xDF274C", VA = "0xDF274C")]
		private void SavePlayerStatsData(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xDF238C", Offset = "0xDF238C", VA = "0xDF238C")]
		private void UpdateEloRatings(EndState endState, MatchType matchType)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xDF2260", Offset = "0xDF2260", VA = "0xDF2260")]
		private void UpdateSeasonScore(EndState endState)
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xDF2BE8", Offset = "0xDF2BE8", VA = "0xDF2BE8")]
		private int[] GetUpdatedRatings(EndState endState)
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xDF2C68", Offset = "0xDF2C68", VA = "0xDF2C68")]
		private int GetUpdatedSeasonScore(EndState endState)
		{
			return default(int);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xDF2DF4", Offset = "0xDF2DF4", VA = "0xDF2DF4")]
		private void SaveLevelData(PlayerLevelData levelData)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xDF1DE4", Offset = "0xDF1DE4", VA = "0xDF1DE4")]
		private void EmptyQueues()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xDF2504", Offset = "0xDF2504", VA = "0xDF2504")]
		private void CheckBadgesEarned(EndState state)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xDF2E54", Offset = "0xDF2E54", VA = "0xDF2E54")]
		public bool GetBadgeEarned(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xDF2FB4", Offset = "0xDF2FB4", VA = "0xDF2FB4")]
		public bool GetPlayerBadgeEarned(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xDF30DC", Offset = "0xDF30DC", VA = "0xDF30DC")]
		public bool DequeuePlayerBadge(out MatchReward matchReward)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xDF3194", Offset = "0xDF3194", VA = "0xDF3194")]
		public MatchRewardType DequeueOpponentBadge()
		{
			return default(MatchRewardType);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xDF3220", Offset = "0xDF3220", VA = "0xDF3220")]
		private void EnqueuePlayerBadge(MatchRewardType badge)
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xDF3540", Offset = "0xDF3540", VA = "0xDF3540")]
		private void EnqueueOpponentBadge(MatchRewardType badge)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class LobbyManager : PunSingleton<LobbyManager>
	{
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E5A0", Offset = "0xC7E5A0")]
		private sealed class <PendingRematch>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LobbyManager $this;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700054C")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0xDF7020", Offset = "0xDF7020", VA = "0xDF7020", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002901")]
				[Address(RVA = "0xDF7028", Offset = "0xDF7028", VA = "0xDF7028", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xDF5D00", Offset = "0xDF5D00", VA = "0xDF5D00")]
			[DebuggerHidden]
			public <PendingRematch>c__Iterator0()
			{
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xDF6EE8", Offset = "0xDF6EE8", VA = "0xDF6EE8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002902")]
			[Address(RVA = "0xDF7030", Offset = "0xDF7030", VA = "0xDF7030", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002903")]
			[Address(RVA = "0xDF7044", Offset = "0xDF7044", VA = "0xDF7044", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E600", Offset = "0xC7E600")]
		private sealed class <PendingReady>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LobbyManager $this;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700054E")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0xDF6E60", Offset = "0xDF6E60", VA = "0xDF6E60", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002907")]
				[Address(RVA = "0xDF6E68", Offset = "0xDF6E68", VA = "0xDF6E68", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002904")]
			[Address(RVA = "0xDF616C", Offset = "0xDF616C", VA = "0xDF616C")]
			[DebuggerHidden]
			public <PendingReady>c__Iterator1()
			{
			}

			[Token(Token = "0x6002905")]
			[Address(RVA = "0xDF6C70", Offset = "0xDF6C70", VA = "0xDF6C70", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002908")]
			[Address(RVA = "0xDF6E70", Offset = "0xDF6E70", VA = "0xDF6E70", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002909")]
			[Address(RVA = "0xDF6E84", Offset = "0xDF6E84", VA = "0xDF6E84", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E660", Offset = "0xC7E660")]
		private sealed class <AwaitOpponent>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LobbyManager $this;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000550")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600290C")]
				[Address(RVA = "0xDF6A1C", Offset = "0xDF6A1C", VA = "0xDF6A1C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000551")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600290D")]
				[Address(RVA = "0xDF6A24", Offset = "0xDF6A24", VA = "0xDF6A24", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600290A")]
			[Address(RVA = "0xDF61E0", Offset = "0xDF61E0", VA = "0xDF61E0")]
			[DebuggerHidden]
			public <AwaitOpponent>c__Iterator2()
			{
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0xDF6934", Offset = "0xDF6934", VA = "0xDF6934", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600290E")]
			[Address(RVA = "0xDF6A2C", Offset = "0xDF6A2C", VA = "0xDF6A2C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0xDF6A40", Offset = "0xDF6A40", VA = "0xDF6A40", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E6C0", Offset = "0xC7E6C0")]
		private sealed class <AwaitWielderDestroyed>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal LobbyManager $this;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000552")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002912")]
				[Address(RVA = "0xDF6BE8", Offset = "0xDF6BE8", VA = "0xDF6BE8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000553")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002913")]
				[Address(RVA = "0xDF6BF0", Offset = "0xDF6BF0", VA = "0xDF6BF0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002910")]
			[Address(RVA = "0xDF657C", Offset = "0xDF657C", VA = "0xDF657C")]
			[DebuggerHidden]
			public <AwaitWielderDestroyed>c__Iterator3()
			{
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0xDF6AA4", Offset = "0xDF6AA4", VA = "0xDF6AA4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0xDF6BF8", Offset = "0xDF6BF8", VA = "0xDF6BF8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002915")]
			[Address(RVA = "0xDF6C0C", Offset = "0xDF6C0C", VA = "0xDF6C0C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_forceSpawnBot;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CountdownHandler m_countdownHandler;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_survivalTransitionTime;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_remoteCharacterSpawnParent;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isInitialized;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_rematchPending;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_readyRematchWaitTime;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine m_awaitOpponentCoroutine;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds m_opponentWait;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_relicIconParent;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_teleportArrive;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_photonPlayerConnectedEventToken;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_wielderSpawnedEventToken;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_levelInitializedEventToken;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_photonConnectionFailedEventToken;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_lobbyPausedEventToken;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_connectedToMatchRoomEventToken;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E3CC", Offset = "0xC7E3CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E3CC", Offset = "0xC7E3CC")]
		private int <ReadyRematchCount>k__BackingField;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E408", Offset = "0xC7E408")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E408", Offset = "0xC7E408")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E444", Offset = "0xC7E444")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E444", Offset = "0xC7E444")]
		private LobbyState <State>k__BackingField;

		[Token(Token = "0x17000101")]
		private bool IsBotMatch
		{
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0xDF3664", Offset = "0xDF3664", VA = "0xDF3664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E480", Offset = "0xC7E480")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public CountdownHandler CountdownHandler
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0xDF3760", Offset = "0xDF3760", VA = "0xDF3760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E490", Offset = "0xC7E490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public Transform RemoteCharacterSpawnParent
		{
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0xDF3768", Offset = "0xDF3768", VA = "0xDF3768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4A0", Offset = "0xC7E4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public Transform RelicIconParent
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0xDF3770", Offset = "0xDF3770", VA = "0xDF3770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4B0", Offset = "0xC7E4B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public int ReadyRematchCount
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0xDF3828", Offset = "0xDF3828", VA = "0xDF3828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4C0", Offset = "0xC7E4C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0xDF3830", Offset = "0xDF3830", VA = "0xDF3830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4D0", Offset = "0xC7E4D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public bool IsReady
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0xDF3838", Offset = "0xDF3838", VA = "0xDF3838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4E0", Offset = "0xC7E4E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0xDF3840", Offset = "0xDF3840", VA = "0xDF3840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E4F0", Offset = "0xC7E4F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public LobbyState State
		{
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0xDF384C", Offset = "0xDF384C", VA = "0xDF384C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E500", Offset = "0xC7E500")]
			get
			{
				return default(LobbyState);
			}
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0xDF3854", Offset = "0xDF3854", VA = "0xDF3854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E510", Offset = "0xC7E510")]
			private set
			{
			}
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xDF35E8", Offset = "0xDF35E8", VA = "0xDF35E8")]
		public LobbyManager()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xDF385C", Offset = "0xDF385C", VA = "0xDF385C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xDF3B10", Offset = "0xDF3B10", VA = "0xDF3B10", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xDF3C80", Offset = "0xDF3C80", VA = "0xDF3C80", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xDF3D50", Offset = "0xDF3D50", VA = "0xDF3D50")]
		private void Start()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xDF46E0", Offset = "0xDF46E0", VA = "0xDF46E0")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xDF4748", Offset = "0xDF4748", VA = "0xDF4748")]
		private void OnLevelInitialized(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xDF4958", Offset = "0xDF4958", VA = "0xDF4958")]
		private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xDF4B68", Offset = "0xDF4B68", VA = "0xDF4B68")]
		private void OnPhotonPlayerConnected(NetworkEvents.PhotonPlayerConnectedEvent eventData)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xDF4C4C", Offset = "0xDF4C4C", VA = "0xDF4C4C")]
		private void OnLobbyPaused(Events.LobbyPausedEvent eventData)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xDF4B90", Offset = "0xDF4B90", VA = "0xDF4B90")]
		private void PhotonPlayerConnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xDF5080", Offset = "0xDF5080", VA = "0xDF5080")]
		private void OnPhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xDF50A8", Offset = "0xDF50A8", VA = "0xDF50A8")]
		private void PhotonPlayerDisconnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xDF5624", Offset = "0xDF5624", VA = "0xDF5624")]
		private void OnPhotonConnectionFailedEvent(NetworkEvents.PhotonConnectionFailedEvent eventData)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xDF5628", Offset = "0xDF5628", VA = "0xDF5628")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xDF4D10", Offset = "0xDF4D10", VA = "0xDF4D10")]
		private void OnConnectionLost()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xDF45C8", Offset = "0xDF45C8", VA = "0xDF45C8")]
		public void ChangeState(LobbyState newState, bool force = false)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xDF56E0", Offset = "0xDF56E0", VA = "0xDF56E0")]
		private void ChangeToPreState()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xDF582C", Offset = "0xDF582C", VA = "0xDF582C")]
		private void ChangeToPostState()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xDEC184", Offset = "0xDEC184", VA = "0xDEC184")]
		public void StartBotMatch()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xDF59E8", Offset = "0xDF59E8", VA = "0xDF59E8")]
		[PunRPC]
		public void ShowLobbyScenery()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xDF58C8", Offset = "0xDF58C8", VA = "0xDF58C8")]
		private void ShowPostMatchScenery()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xDF5398", Offset = "0xDF5398", VA = "0xDF5398")]
		private void ResetRoomProperties()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xDF5070", Offset = "0xDF5070", VA = "0xDF5070")]
		private void ResetVariables()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xDF59F4", Offset = "0xDF59F4", VA = "0xDF59F4")]
		public void RequestRematch()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xDF5BC8", Offset = "0xDF5BC8", VA = "0xDF5BC8")]
		[PunRPC]
		private void PunPingRematch(bool localRequest)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xDF5C94", Offset = "0xDF5C94", VA = "0xDF5C94")]
		[DebuggerHidden]
		private IEnumerator PendingRematch()
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xDF5D08", Offset = "0xDF5D08", VA = "0xDF5D08")]
		public void InitiateRematch(bool startWaitForOpponent)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xDF5DEC", Offset = "0xDF5DEC", VA = "0xDF5DEC")]
		public void ToggleReady()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xDF5FE4", Offset = "0xDF5FE4", VA = "0xDF5FE4")]
		[PunRPC]
		private void PunPingReady(bool isReady, bool localRequest)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xDF6100", Offset = "0xDF6100", VA = "0xDF6100")]
		[DebuggerHidden]
		private IEnumerator PendingReady()
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xDF4908", Offset = "0xDF4908", VA = "0xDF4908")]
		public void StartWaitForOpponent(bool showMsg = false)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xDF6174", Offset = "0xDF6174", VA = "0xDF6174")]
		[DebuggerHidden]
		private IEnumerator AwaitOpponent()
		{
			return null;
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xDF495C", Offset = "0xDF495C", VA = "0xDF495C")]
		private void EndCountdown()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xDF61E8", Offset = "0xDF61E8", VA = "0xDF61E8")]
		private void StartMatch()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xDF621C", Offset = "0xDF621C", VA = "0xDF621C")]
		private void ClearPlayerObjects()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xDF6510", Offset = "0xDF6510", VA = "0xDF6510")]
		[DebuggerHidden]
		private IEnumerator AwaitWielderDestroyed()
		{
			return null;
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xDF6584", Offset = "0xDF6584", VA = "0xDF6584")]
		public void InitiateSceneryChange()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xDF41B8", Offset = "0xDF41B8", VA = "0xDF41B8")]
		private Arena GetNextArena()
		{
			return default(Arena);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xDF6698", Offset = "0xDF6698", VA = "0xDF6698")]
		[PunRPC]
		private void PunLoadRematchLevel(int arenaValue)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xDF67C4", Offset = "0xDF67C4", VA = "0xDF67C4")]
		private void OnApplicationQuit()
		{
		}
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x20001AA")]
	public class MatchManager : MonoBehaviour
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventToken m_photonConnectionFailedEventToken;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_playerControlSpawnedEventToken;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_levelInitializedEventToken;

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xDFBB14", Offset = "0xDFBB14", VA = "0xDFBB14")]
		public MatchManager()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xDFBB1C", Offset = "0xDFBB1C", VA = "0xDFBB1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xDFBCD4", Offset = "0xDFBCD4", VA = "0xDFBCD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xDFBD94", Offset = "0xDFBD94", VA = "0xDFBD94")]
		private void OnLevelInitializedEvent(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xDFBDFC", Offset = "0xDFBDFC", VA = "0xDFBDFC")]
		private void OnPhotonPlayerDisconnectedEvent(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xDFBEF4", Offset = "0xDFBEF4", VA = "0xDFBEF4")]
		public void OnPhotonConnectionFailedEvent(NetworkEvents.PhotonConnectionFailedEvent eventData)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xDFC4C4", Offset = "0xDFC4C4", VA = "0xDFC4C4")]
		public void OnPlayerControlSpawnedEvent(Events.PlayerControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xDFC000", Offset = "0xDFC000", VA = "0xDFC000")]
		private void EndGame(EndState endState)
		{
		}
	}
}
[Token(Token = "0x20001AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7E720", Offset = "0xC7E720")]
public class MeshMorpher : MonoBehaviour
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] m_Meshes;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AnimateAutomatically;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_OneLoopLength;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WrapMode m_WrapMode;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_AutomaticTime;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_SrcMesh;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_DstMesh;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_Weight;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m_Mesh;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_animate;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_enable;

	[Token(Token = "0x17000108")]
	public bool IsAnimating
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xF69440", Offset = "0xF69440", VA = "0xF69440")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xF69414", Offset = "0xF69414", VA = "0xF69414")]
	public MeshMorpher()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xF69448", Offset = "0xF69448", VA = "0xF69448")]
	public void SetComplexMorph(int srcIndex, int dstIndex, float t)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xF69724", Offset = "0xF69724", VA = "0xF69724")]
	public void SetMorph(float t)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xF697F0", Offset = "0xF697F0", VA = "0xF697F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xF69A60", Offset = "0xF69A60", VA = "0xF69A60")]
	public void SetVinesActive(bool enable)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xF69BB4", Offset = "0xF69BB4", VA = "0xF69BB4")]
	private void Update()
	{
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001AC")]
	public static class MinimumVersionControl
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E784", Offset = "0xC7E784")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E784", Offset = "0xC7E784")]
		private static Version <MinimumVersion>k__BackingField;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Action m_onCompleted;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E7C0", Offset = "0xC7E7C0")]
		private static Action<ExecuteCloudScriptResult> <>f__mg$cache0;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E7D0", Offset = "0xC7E7D0")]
		private static Action<string> <>f__mg$cache1;

		[Token(Token = "0x17000109")]
		public static Version MinimumVersion
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xE12E44", Offset = "0xE12E44", VA = "0xE12E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E7E0", Offset = "0xC7E7E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0xE12E94", Offset = "0xE12E94", VA = "0xE12E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E7F0", Offset = "0xC7E7F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xE12EE8", Offset = "0xE12EE8", VA = "0xE12EE8")]
		public static void GetMinimumVersion(ICloudManager cloudManager, Action onCompleted)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xE13098", Offset = "0xE13098", VA = "0xE13098")]
		private static void OnGetMinimumVersionSuccess(ExecuteCloudScriptResult result)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xE13300", Offset = "0xE13300", VA = "0xE13300")]
		private static void OnGetMinimumVersionError(string error)
		{
		}
	}
}
[Token(Token = "0x20001AD")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xF69E50", Offset = "0xF69E50", VA = "0xF69E50")]
	public MirrorReflection()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xF69EE4", Offset = "0xF69EE4", VA = "0xF69EE4")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xF6B5C0", Offset = "0xF6B5C0", VA = "0xF6B5C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xF6AD1C", Offset = "0xF6AD1C", VA = "0xF6AD1C")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xF6A648", Offset = "0xF6A648", VA = "0xF6A648")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xF6B9EC", Offset = "0xF6B9EC", VA = "0xF6B9EC")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xF6B3C8", Offset = "0xF6B3C8", VA = "0xF6B3C8")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xF6B128", Offset = "0xF6B128", VA = "0xF6B128")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}
}
[Token(Token = "0x20001AE")]
public class Bound : MonoBehaviour
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer m_renderer;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isActive;

	[Token(Token = "0x1700010A")]
	public static LayerMask Mask
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xEF80F0", Offset = "0xEF80F0", VA = "0xEF80F0")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xEF80E8", Offset = "0xEF80E8", VA = "0xEF80E8")]
	public Bound()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xEF8160", Offset = "0xEF8160", VA = "0xEF8160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xEF81B8", Offset = "0xEF81B8", VA = "0xEF81B8")]
	public void SetActive(bool value)
	{
	}
}
[Token(Token = "0x20001AF")]
public class CameraRotate : MonoBehaviour
{
	[Token(Token = "0x6000704")]
	[Address(RVA = "0x100FBF4", Offset = "0x100FBF4", VA = "0x100FBF4")]
	public CameraRotate()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Colors : MonoBehaviour
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color ClearWhite;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Color ArmorActiveRim;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Color TextGold;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Color TextBlackboard;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Color TextHighlight;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Color TextInactive;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Color RadialDefault;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly Color RadialHighlight;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly Color FormAcceptEnable;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly Color FormAcceptDisable;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly Color TileColor;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly Color TileEffectColor;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly Color TileColorLeft;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly Color TileColorRight;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static readonly Color HealthDefault;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static readonly Color HealthArmorActive;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static readonly Color ManaDefault;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static readonly Color ManaSuddenDeath;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static readonly Color IconSelected;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static readonly Color IconSelectedDiscrete;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static readonly Color IconDisabled;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static readonly Color IconEnabled;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static readonly Color IconBackgroundColor;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static readonly Color[] RarityColors;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static readonly IReadOnlyDictionary<Spell, Color> LingeringEffectColors;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1010ED0", Offset = "0x1010ED0", VA = "0x1010ED0")]
	public Colors()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1010ED8", Offset = "0x1010ED8", VA = "0x1010ED8")]
	public static Color GetColor(float r, float g, float b, float a)
	{
		return default(Color);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1010F1C", Offset = "0x1010F1C", VA = "0x1010F1C")]
	public static Color GetColor(WandsColor color)
	{
		return default(Color);
	}
}
[Token(Token = "0x20001B1")]
public class Constants
{
	[Token(Token = "0x400092D")]
	public const string PROJECT_ID = "96335c74-719a-4fd9-ad83-d1c46984ac36";

	[Token(Token = "0x400092E")]
	private const int WarmupLength = 25;

	[Token(Token = "0x400092F")]
	public const float MATCH_LENGTH = 3.5f;

	[Token(Token = "0x4000930")]
	public const float WARMUP_TIME = 30f;

	[Token(Token = "0x4000931")]
	public const float COUNTDOWN_TIME = 5f;

	[Token(Token = "0x4000932")]
	public const float TELEPORT_SPEED = 45f;

	[Token(Token = "0x4000933")]
	public const float TELEPORT_COLLIDER_RADIUS = 1f;

	[Token(Token = "0x4000934")]
	public const int MAX_VIRTUAL_CURRENCY = 16000;

	[Token(Token = "0x4000935")]
	public const float DefaultMaxHealth = 100f;

	[Token(Token = "0x4000936")]
	public const float DefaultMaxMana = 100f;

	[Token(Token = "0x4000937")]
	public const float DefaultManaRegenSpeed3DoF = 17f;

	[Token(Token = "0x4000938")]
	public const float DefaultManaRegenSpeed6DoF = 13f;

	[Token(Token = "0x4000939")]
	public const float DefaultManaRegenSpeedBotLevel4 = 20f;

	[Token(Token = "0x400093A")]
	public const float DefaultManaRegenSpeedBotLevel5 = 30f;

	[Token(Token = "0x400093B")]
	public const float SuddenDeathManaRegenMultiplier = 1.5f;

	[Token(Token = "0x400093C")]
	public const float AimPointBuffer = 0.05f;

	[Token(Token = "0x400093D")]
	public const float AimMinSize = 0.1f;

	[Token(Token = "0x400093E")]
	public const float FlashAlphaValue = 0.55f;

	[Token(Token = "0x400093F")]
	public const int MaximumFreeToPlayLevel = 3;

	[Token(Token = "0x4000940")]
	public const float WandGripAngle = -28f;

	[Token(Token = "0x4000941")]
	public const float CameraHeight = 1.7f;

	[Token(Token = "0x4000942")]
	public const float CameraAimHeight = 1.5f;

	[Token(Token = "0x4000943")]
	public const int DEFAULT_RATING = 1500;

	[Token(Token = "0x4000944")]
	public const int RATING_STANDARD_LOSS = 24;

	[Token(Token = "0x4000945")]
	public const int SEASON_SCORE_STANDARD_LOSS = 10;

	[Token(Token = "0x4000946")]
	public const int RatingLevelRequirement = 5;

	[Token(Token = "0x4000947")]
	public const float PAUSE_TIME = 15f;

	[Token(Token = "0x4000948")]
	public const int MAX_PAUSE_COUNT = 3;

	[Token(Token = "0x4000949")]
	public const float PAUSE_COUNTDOWN_TIME = 3f;

	[Token(Token = "0x400094A")]
	public const float PLAYER_RECENTER_TIME = 0.5f;

	[Token(Token = "0x400094B")]
	public const float HOLD_WEIGHT = 0.15f;

	[Token(Token = "0x400094C")]
	public const float UnlockableDragSpeed = 8f;

	[Token(Token = "0x400094D")]
	public const float UnlockableMoveTime = 1f;

	[Token(Token = "0x400094E")]
	public const float ProjectileNetworkSyncValue = 0.15f;

	[Token(Token = "0x400094F")]
	public const float WorkshopWandMovementTime = 0.75f;

	[Token(Token = "0x4000950")]
	public const float MinCameraHeight = 1.1f;

	[Token(Token = "0x4000951")]
	public const float MaxCameraHeight = 1.55f;

	[Token(Token = "0x4000952")]
	public const float MaxCameraHeightMobile = 1.43f;

	[Token(Token = "0x4000953")]
	public const string SURVIVAL_WAND_NAME = "Survival";

	[Token(Token = "0x4000954")]
	public const string Source = "Source";

	[Token(Token = "0x4000955")]
	public const string PlayerLayerName = "Player";

	[Token(Token = "0x4000956")]
	public const string Player1LayerName = "Player1";

	[Token(Token = "0x4000957")]
	public const string Player2LayerName = "Player2";

	[Token(Token = "0x4000958")]
	public const string ShieldLayerName = "Shield";

	[Token(Token = "0x4000959")]
	public const string TileLayerName = "Tile";

	[Token(Token = "0x400095A")]
	public const string TeleportLayerName = "Teleport";

	[Token(Token = "0x400095B")]
	public const string BotTeleportLayerName = "Ignore Collision";

	[Token(Token = "0x400095C")]
	public const float SanctumDoorOpenTime = 7f;

	[Token(Token = "0x400095D")]
	public const float SanctumDoorCloseTime = 10f;

	[Token(Token = "0x400095E")]
	public const float HighlightTweenTime = 0.1f;

	[Token(Token = "0x400095F")]
	public const float FadeOutAlpha = 0.2f;

	[Token(Token = "0x4000960")]
	public const float ChannelEffectFadeAlpha = 0.5f;

	[Token(Token = "0x4000961")]
	public const float StatsUpdateDelayTime = 1f;

	[Token(Token = "0x4000962")]
	public const float SpellAvailabilityFadeTime = 0.25f;

	[Token(Token = "0x4000963")]
	public const float IconBackgroundAlphaEnabled = 0.25f;

	[Token(Token = "0x4000964")]
	public const float IconBackgroundAlphaDisabled = 0.35f;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 IconHighlightScale;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 SelectMarkerHighlightScale;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 ChannelingEffectRotationVector;

	[Token(Token = "0x4000968")]
	public const string DISSOLVE_POWER = "_DissolvePower";

	[Token(Token = "0x4000969")]
	public const string DISSOLVE_VALUE = "_DissolveValue";

	[Token(Token = "0x400096A")]
	public const string DISSOLVE_SLICE_AMOUNT = "_SliceAmount";

	[Token(Token = "0x400096B")]
	public const string FILL_AMOUNT = "_Fill";

	[Token(Token = "0x400096C")]
	public const string CUTOFF_AMOUNT = "_Cutoff";

	[Token(Token = "0x400096D")]
	public const string HIGHLIGHTED = "_Highlighted";

	[Token(Token = "0x400096E")]
	public const string COLOR = "_Color";

	[Token(Token = "0x400096F")]
	public const string CORE_COLOR = "_CoreColor";

	[Token(Token = "0x4000970")]
	public const string TINT_COLOR = "_TintColor";

	[Token(Token = "0x4000971")]
	public const string COLOR_PROPERTY = "_GlobalMultiplierColor";

	[Token(Token = "0x4000972")]
	public const string RIM_COLOR_PROPERTY = "_RimColor";

	[Token(Token = "0x4000973")]
	public const string OUTLINE_COLOR_PROPERTY = "_OutlineColor";

	[Token(Token = "0x4000974")]
	public const string NOISE_COLOR_PROPERTY = "_NoiseColor";

	[Token(Token = "0x4000975")]
	public const string SoftnessTextProperty = "_OutlineSoftness";

	[Token(Token = "0x4000976")]
	public const string DilateTextProperty = "_FaceDilate";

	[Token(Token = "0x4000977")]
	public const string MaxValueProperty = "_MaxValue";

	[Token(Token = "0x4000978")]
	public const string LowValueProperty = "_LowValue";

	[Token(Token = "0x4000979")]
	public const string GradientColorPropertyLeft = "_Color";

	[Token(Token = "0x400097A")]
	public const string GradientColorPropertyRight = "_Color2";

	[Token(Token = "0x400097B")]
	public const string EQ_FREQUENCY = "Frequency-EQ";

	[Token(Token = "0x400097C")]
	public const string MUSIC_EQ = "Music-EQ";

	[Token(Token = "0x400097D")]
	public const string MUSIC_VOLUME_PARAM = "Music-Counter-Volume";

	[Token(Token = "0x400097E")]
	public const string MUSIC_OPT_VOLUME_PARAM = "Music-Optional-Volume";

	[Token(Token = "0x400097F")]
	public const string TXT_END_STATE = "END_STATE";

	[Token(Token = "0x4000980")]
	public const string TXT_MATCH_TIME_MIN = "MATCH_TIME_MIN";

	[Token(Token = "0x4000981")]
	public const string TXT_MATCH_TIME_SEC = "MATCH_TIME_SEC";

	[Token(Token = "0x4000982")]
	public const string TXT_TIMER = "TIMER";

	[Token(Token = "0x4000983")]
	public const string TXT_STATUS_EFFECT = "STATUS_EFFECT";

	[Token(Token = "0x4000984")]
	public const string TXT_STATUS_CAUSE = "STATUS_CAUSE";

	[Token(Token = "0x4000985")]
	public const int MaxSwipePoints = 30;

	[Token(Token = "0x4000986")]
	public const float TickThreshold = 0.15f;

	[Token(Token = "0x4000987")]
	public const float MinPressCenterOffsetHorizontal = 0.25f;

	[Token(Token = "0x4000988")]
	public const float MinPressCenterOffsetVertical = 0.1f;

	[Token(Token = "0x4000989")]
	public const float MinSwipeCenterOffset = 0.25f;

	[Token(Token = "0x400098A")]
	public const float MinSwipeDistance = 0.65f;

	[Token(Token = "0x400098B")]
	public const float MinSwipeDistanceSqr = 0.42249995f;

	[Token(Token = "0x400098C")]
	public const string PHOTON_APP_ID = "e1482f05-acd1-4d76-aa43-111ca44535af";

	[Token(Token = "0x400098D")]
	public const string PHOTON_APP_ID_CHINA = "2c619b76-c11f-49d7-9ee8-903a09970bb7";

	[Token(Token = "0x400098E")]
	public const string API_BASE_URL = "https://api.wandsgame.com";

	[Token(Token = "0x400098F")]
	public const RpcTarget RPCMaster = RpcTarget.MasterClient;

	[Token(Token = "0x4000990")]
	public const RpcTarget RPCAll = RpcTarget.All;

	[Token(Token = "0x4000991")]
	public const RpcTarget RPCAllViaServer = RpcTarget.AllViaServer;

	[Token(Token = "0x4000992")]
	public const RpcTarget RPCAllBuffered = RpcTarget.AllBuffered;

	[Token(Token = "0x4000993")]
	public const RpcTarget RPCAllBufferedViaServer = RpcTarget.AllBufferedViaServer;

	[Token(Token = "0x4000994")]
	public const RpcTarget RPCOthers = RpcTarget.Others;

	[Token(Token = "0x4000995")]
	public const RpcTarget RPCOthersBuffered = RpcTarget.OthersBuffered;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly IReadOnlyList<WandInput> DefaultAndroidWandInputs;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly IReadOnlyList<WandInput> DefaultPcWandInputs;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly List<Spell> DefaultSpells;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly ISet<Spell> InitialUnlockableGuidanceSpells;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly ISet<Spell> BaseSpells;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly ICollection<Spell> ChargeableSpells;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly ISet<CharacterType> DefaultCharacters;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly ISet<CharacterType> BaseCharacters;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static readonly ISet<CharacterType> SpecialCharacters;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly WandType[] DefaultWands;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly ISet<WandType> BaseWands;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly ISet<WandType> SpecialWands;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static readonly IList<Title> DefaultTitles;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly IReadOnlyDictionary<RatingTitle, int> RatingTitles;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static readonly IReadOnlyDictionary<Title, int> SkillLevelTitles;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly int[] LoadoutUnlocksPerLevel;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static readonly IList<Arena> BaseLevels;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly IList<Arena> CustomLevelQueue;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly IList<Language> BaseLanguages;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly IList<Language> GoogleExclusiveLanguages;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static readonly Dictionary<PlatformType, string> PlatformIdentifierNames;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly Dictionary<PlatformType, string> PlatformPrefixes;

	[Token(Token = "0x40009AC")]
	public const string EditorNameSuffix = " (Unity)";

	[Token(Token = "0x40009AD")]
	public const int MaxLeaderboardResults = 10;

	[Token(Token = "0x40009AE")]
	public const int NumberOfLoadouts = 3;

	[Token(Token = "0x40009AF")]
	public const int NumberOfLoadoutSpells = 5;

	[Token(Token = "0x40009B0")]
	public const int NumberOfLoadoutWands = 2;

	[Token(Token = "0x40009B1")]
	public const int SpellCost = 1;

	[Token(Token = "0x40009B2")]
	public const float VanityItemWorthModifier = 0.1f;

	[Token(Token = "0x40009B3")]
	public const string DustPriceIdentifier = "RD";

	[Token(Token = "0x40009B4")]
	public const float IKInterpolationStrength = 10f;

	[Token(Token = "0x1700010B")]
	public static LayerMask TileMask
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x10133C0", Offset = "0x10133C0", VA = "0x10133C0")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x1700010C")]
	public static LayerMask TeleportMask
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1013430", Offset = "0x1013430", VA = "0x1013430")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x1700010D")]
	public static LayerMask Player1Mask
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x10134A0", Offset = "0x10134A0", VA = "0x10134A0")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x1700010E")]
	public static LayerMask BotTeleportMask
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1013510", Offset = "0x1013510", VA = "0x1013510")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x10133B8", Offset = "0x10133B8", VA = "0x10133B8")]
	public Constants()
	{
	}
}
namespace Assets.Scripts.Misc
{
	[Token(Token = "0x20001B2")]
	public class CountdownHandler : MonoBehaviourPun
	{
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E8DC", Offset = "0xC7E8DC")]
		private sealed class <Countdown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CountdownHandler $this;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000554")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002918")]
				[Address(RVA = "0xDF7960", Offset = "0xDF7960", VA = "0xDF7960", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000555")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002919")]
				[Address(RVA = "0xDF7968", Offset = "0xDF7968", VA = "0xDF7968", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002916")]
			[Address(RVA = "0xDF74B8", Offset = "0xDF74B8", VA = "0xDF74B8")]
			[DebuggerHidden]
			public <Countdown>c__Iterator0()
			{
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0xDF74C0", Offset = "0xDF74C0", VA = "0xDF74C0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600291A")]
			[Address(RVA = "0xDF7970", Offset = "0xDF7970", VA = "0xDF7970", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600291B")]
			[Address(RVA = "0xDF7984", Offset = "0xDF7984", VA = "0xDF7984", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_countdownTime;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_currentCountdownTime;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E820", Offset = "0xC7E820")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E820", Offset = "0xC7E820")]
		private bool <IsCountdownActive>k__BackingField;

		[Token(Token = "0x1700010F")]
		public bool IsCountdownActive
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0xDF70C0", Offset = "0xDF70C0", VA = "0xDF70C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E85C", Offset = "0xC7E85C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000711")]
			[Address(RVA = "0xDF70C8", Offset = "0xDF70C8", VA = "0xDF70C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E86C", Offset = "0xC7E86C")]
			private set
			{
			}
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xDF70B8", Offset = "0xDF70B8", VA = "0xDF70B8")]
		public CountdownHandler()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xDF70D4", Offset = "0xDF70D4", VA = "0xDF70D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xDF4F24", Offset = "0xDF4F24", VA = "0xDF4F24")]
		public void StartCountdown()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xDF6D0C", Offset = "0xDF6D0C", VA = "0xDF6D0C")]
		public void SetCountdownTime(float time)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xDF4DD8", Offset = "0xDF4DD8", VA = "0xDF4DD8")]
		public void PauseCountdown()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xDF52C8", Offset = "0xDF52C8", VA = "0xDF52C8")]
		public void CancelCountdown()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xDF70E0", Offset = "0xDF70E0", VA = "0xDF70E0")]
		[PunRPC]
		private void PunStartCountdown(float time)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xDF7198", Offset = "0xDF7198", VA = "0xDF7198")]
		[PunRPC]
		private void PunSetCountdownTime(float time)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xDF71E0", Offset = "0xDF71E0", VA = "0xDF71E0")]
		[PunRPC]
		private void PunPauseCountdown(float time)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xDF72D4", Offset = "0xDF72D4", VA = "0xDF72D4")]
		[PunRPC]
		private void PunCancelCountdown()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xDF73CC", Offset = "0xDF73CC", VA = "0xDF73CC")]
		[PunRPC]
		private void PunCountdownCompleted()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xDF710C", Offset = "0xDF710C", VA = "0xDF710C")]
		[DebuggerHidden]
		private IEnumerator Countdown(float time)
		{
			return null;
		}
	}
}
[Token(Token = "0x20001B3")]
public class DebugTimeScaler : MonoBehaviour
{
	[Token(Token = "0x600071D")]
	[Address(RVA = "0xF6103C", Offset = "0xF6103C", VA = "0xF6103C")]
	public DebugTimeScaler()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xF61044", Offset = "0xF61044", VA = "0xF61044")]
	public void ChangeTimeScale(float targetTime)
	{
	}
}
namespace Assets.Scripts.Misc
{
	[Token(Token = "0x20001B4")]
	public static class EloDebugger
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E93C", Offset = "0xC7E93C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E93C", Offset = "0xC7E93C")]
		private static float <SkillRatingPrevious>k__BackingField;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E978", Offset = "0xC7E978")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E978", Offset = "0xC7E978")]
		private static float <SkillRating>k__BackingField;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E9B4", Offset = "0xC7E9B4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E9B4", Offset = "0xC7E9B4")]
		private static float <SkillRatingChangeBase>k__BackingField;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7E9F0", Offset = "0xC7E9F0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7E9F0", Offset = "0xC7E9F0")]
		private static float <SkillRatingChange>k__BackingField;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EA2C", Offset = "0xC7EA2C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EA2C", Offset = "0xC7EA2C")]
		private static float <SeasonScorePrevious>k__BackingField;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EA68", Offset = "0xC7EA68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EA68", Offset = "0xC7EA68")]
		private static float <SeasonScoreChangeBase>k__BackingField;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EAA4", Offset = "0xC7EAA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EAA4", Offset = "0xC7EAA4")]
		private static float <SeasonScoreChange>k__BackingField;

		[Token(Token = "0x17000110")]
		public static float SkillRatingPrevious
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0xDF79E8", Offset = "0xDF79E8", VA = "0xDF79E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EAE0", Offset = "0xC7EAE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xDF7A38", Offset = "0xDF7A38", VA = "0xDF7A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EAF0", Offset = "0xC7EAF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public static float SkillRating
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xDF7A94", Offset = "0xDF7A94", VA = "0xDF7A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB00", Offset = "0xC7EB00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xDF7AE4", Offset = "0xDF7AE4", VA = "0xDF7AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB10", Offset = "0xC7EB10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public static float SkillRatingChangeBase
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0xDF7B40", Offset = "0xDF7B40", VA = "0xDF7B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB20", Offset = "0xC7EB20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xDF7B90", Offset = "0xDF7B90", VA = "0xDF7B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB30", Offset = "0xC7EB30")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public static float SkillRatingChange
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0xDF7BEC", Offset = "0xDF7BEC", VA = "0xDF7BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB40", Offset = "0xC7EB40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xDF7C3C", Offset = "0xDF7C3C", VA = "0xDF7C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB50", Offset = "0xC7EB50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public static float SeasonScorePrevious
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xDF7C98", Offset = "0xDF7C98", VA = "0xDF7C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB60", Offset = "0xC7EB60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xDF7CE8", Offset = "0xDF7CE8", VA = "0xDF7CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB70", Offset = "0xC7EB70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public static float SeasonScoreChangeBase
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0xDF7D44", Offset = "0xDF7D44", VA = "0xDF7D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB80", Offset = "0xC7EB80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xDF7D94", Offset = "0xDF7D94", VA = "0xDF7D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EB90", Offset = "0xC7EB90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public static float SeasonScoreChange
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xDF7DF0", Offset = "0xDF7DF0", VA = "0xDF7DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EBA0", Offset = "0xC7EBA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xDF7E40", Offset = "0xDF7E40", VA = "0xDF7E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EBB0", Offset = "0xC7EBB0")]
			private set
			{
			}
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xDF7E9C", Offset = "0xDF7E9C", VA = "0xDF7E9C")]
		public static void SetSkillRatingValues(float skillRatingPrevious, float skillRating, float changeBase, float changeActual)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xDF7F9C", Offset = "0xDF7F9C", VA = "0xDF7F9C")]
		public static void SetSeasonScoreValues(float seasonScorePrevious, float changeBase, float changeActual)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class EloHandler
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_opponentRating;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_opponentLevel;

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xDF1A00", Offset = "0xDF1A00", VA = "0xDF1A00")]
		public EloHandler()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xDF1E60", Offset = "0xDF1E60", VA = "0xDF1E60")]
		public void SetStartValues()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xDF2A60", Offset = "0xDF2A60", VA = "0xDF2A60")]
		public int[] GetPlayerScores(bool getActualScores = false)
		{
			return null;
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xDF2D1C", Offset = "0xDF2D1C", VA = "0xDF2D1C")]
		public int[] GetUpdatedRatings(EndState endState)
		{
			return null;
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xDF2D54", Offset = "0xDF2D54", VA = "0xDF2D54")]
		public int GetUpdatedSeasonScore(EndState endState)
		{
			return default(int);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xDF8068", Offset = "0xDF8068", VA = "0xDF8068")]
		public int[] GetUpdatedRatings(EndState endState, int[] eloRatings, bool updateRating = true)
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xDF81A0", Offset = "0xDF81A0", VA = "0xDF81A0")]
		public int GetUpdatedSeasonScore(EndState endState, int[] eloRatings, int seasonScore, bool updateSeasonScore = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xDF8520", Offset = "0xDF8520", VA = "0xDF8520")]
		private int CalculateAndReturnSeasonScore(EndState endState, int[] eloRatings, int seasonScore, bool updateSeasonScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xDF8274", Offset = "0xDF8274", VA = "0xDF8274")]
		private int[] CalculateAndReturnELO(EndState endState, int[] eloRatings, bool updateRating)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B6")]
	public class ExperienceObject
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EBC0", Offset = "0xC7EBC0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EBC0", Offset = "0xC7EBC0")]
		private int <Value>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EBFC", Offset = "0xC7EBFC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EBFC", Offset = "0xC7EBFC")]
		private string <Description>k__BackingField;

		[Token(Token = "0x17000117")]
		public int Value
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xDF88CC", Offset = "0xDF88CC", VA = "0xDF88CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EC38", Offset = "0xC7EC38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xDF88BC", Offset = "0xDF88BC", VA = "0xDF88BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EC48", Offset = "0xC7EC48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public string Description
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xDF88D4", Offset = "0xDF88D4", VA = "0xDF88D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EC58", Offset = "0xC7EC58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xDF88C4", Offset = "0xDF88C4", VA = "0xDF88C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EC68", Offset = "0xC7EC68")]
			private set
			{
			}
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xDF8880", Offset = "0xDF8880", VA = "0xDF8880")]
		public ExperienceObject(int value, string description)
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7EC78", Offset = "0xC7EC78")]
	public class FlickeringLight : MonoBehaviour
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_minLightIntensity;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_maxLightIntensity;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7ECFC", Offset = "0xC7ECFC")]
		private float m_speedFactor;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_startIntensity;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_endIntensity;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timeValue;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light m_light;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xDF88DC", Offset = "0xDF88DC", VA = "0xDF88DC")]
		public FlickeringLight()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xDF88FC", Offset = "0xDF88FC", VA = "0xDF88FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xDF89AC", Offset = "0xDF89AC", VA = "0xDF89AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xDF8958", Offset = "0xDF8958", VA = "0xDF8958")]
		private void SetEndValue()
		{
		}
	}
}
[Token(Token = "0x20001B8")]
public class MatchTimer : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40009CA")]
	private const string TimeToStartProp = "st";

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double SecondsBeforeStart;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double m_timeToStart;

	[Token(Token = "0x17000119")]
	public bool IsItTimeYet
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xF6885C", Offset = "0xF6885C", VA = "0xF6885C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7ED3C", Offset = "0xC7ED3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011A")]
	public bool IsTimeToStartKnown
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xF688F0", Offset = "0xF688F0", VA = "0xF688F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7ED4C", Offset = "0xC7ED4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011B")]
	public double SecondsUntilItsTime
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xF68908", Offset = "0xF68908", VA = "0xF68908")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xF6884C", Offset = "0xF6884C", VA = "0xF6884C")]
	public MatchTimer()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xF689A4", Offset = "0xF689A4", VA = "0xF689A4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xF68AC8", Offset = "0xF68AC8", VA = "0xF68AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xF68C54", Offset = "0xF68C54", VA = "0xF68C54", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}
}
[Token(Token = "0x20001B9")]
public class PlaySfx : MonoBehaviour
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] m_source;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1869264", Offset = "0x1869264", VA = "0x1869264")]
	public PlaySfx()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x186926C", Offset = "0x186926C", VA = "0x186926C")]
	public void PlaySfxNow()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1869280", Offset = "0x1869280", VA = "0x1869280")]
	public void PlaySfxNow(int sourceIndex)
	{
	}
}
[Token(Token = "0x20001BA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7ED5C", Offset = "0xC7ED5C")]
public class ReverseNormals : MonoBehaviour
{
	[Token(Token = "0x600074B")]
	[Address(RVA = "0xFA2DF0", Offset = "0xFA2DF0", VA = "0xFA2DF0")]
	public ReverseNormals()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xFA2DF8", Offset = "0xFA2DF8", VA = "0xFA2DF8")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001BB")]
public struct Tags
{
	[Token(Token = "0x40009CE")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x40009CF")]
	public const string Player = "Player";

	[Token(Token = "0x40009D0")]
	public const string Dummy = "Dummy";

	[Token(Token = "0x40009D1")]
	public const string Lava = "Lava";

	[Token(Token = "0x40009D2")]
	public const string Environment = "Environment";

	[Token(Token = "0x40009D3")]
	public const string Shield = "Shield";

	[Token(Token = "0x40009D4")]
	public const string Projectile = "Projectile";

	[Token(Token = "0x40009D5")]
	public const string Destructable = "Destructable";

	[Token(Token = "0x40009D6")]
	public const string KillPlane = "KillPlane";

	[Token(Token = "0x40009D7")]
	public const string Train = "Train";
}
[Token(Token = "0x20001BC")]
public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoSingleton<T>
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T sm_instance;

	[Token(Token = "0x1700011C")]
	public static T Instance
	{
		[Token(Token = "0x600074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EDC0", Offset = "0xC7EDC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600074D")]
	protected MonoSingleton()
	{
	}

	[Token(Token = "0x600074F")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000750")]
	protected virtual void OnDisable()
	{
	}
}
namespace Cortopia.Scripts.Network
{
	[Token(Token = "0x20001BD")]
	public class BotPlayer : Photon.Realtime.Player
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1033A98", Offset = "0x1033A98", VA = "0x1033A98")]
		public BotPlayer(string nickName, int actorNumber, bool isLocal, ExitGames.Client.Photon.Hashtable playerProperties)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1033AA4", Offset = "0x1033AA4", VA = "0x1033AA4", Slot = "5")]
		public override bool SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Network.Matchmaking
{
	[Token(Token = "0x20001BE")]
	public static class Matchmaker
	{
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE70", Offset = "0xC7EE70")]
		private sealed class <InvokeWithDelay>c__AnonStorey0
		{
			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action a;

			[Token(Token = "0x6002925")]
			[Address(RVA = "0xDFB13C", Offset = "0xDFB13C", VA = "0xDFB13C")]
			public <InvokeWithDelay>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002926")]
			[Address(RVA = "0xDFBA9C", Offset = "0xDFBA9C", VA = "0xDFBA9C")]
			internal void <>m__0(Task t)
			{
			}
		}

		[Token(Token = "0x40009D9")]
		private const string Matched = "Matched";

		[Token(Token = "0x40009DA")]
		private const string Canceled = "Canceled";

		[Token(Token = "0x40009DB")]
		private const string BelowLevel10 = "BelowLevel10";

		[Token(Token = "0x40009DC")]
		private const string Level10AndUp = "Level10AndUp";

		[Token(Token = "0x40009DD")]
		private const int PollDelay = 11000;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_isCancelled;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string sm_currentQueue;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string sm_currentTicketId;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Action<string> sm_onMatchFoundSuccess;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action sm_onError;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static global::PlayFab.MultiplayerModels.EntityKey sm_entityKey;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static MatchmakingPlayer sm_matchmakingPlayer;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EDD0", Offset = "0xC7EDD0")]
		private static Action<CancelAllMatchmakingTicketsForPlayerResponseObject> <>f__mg$cache0;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EDE0", Offset = "0xC7EDE0")]
		private static Action<ErrorResponseObject> <>f__mg$cache1;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EDF0", Offset = "0xC7EDF0")]
		private static Action<CreateMatchmakingTicketResponseObject> <>f__mg$cache2;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE00", Offset = "0xC7EE00")]
		private static Action<ErrorResponseObject> <>f__mg$cache3;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE10", Offset = "0xC7EE10")]
		private static Action<GetMatchmakingTicketResponseObject> <>f__mg$cache4;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE20", Offset = "0xC7EE20")]
		private static Action<ErrorResponseObject> <>f__mg$cache5;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE30", Offset = "0xC7EE30")]
		private static Action <>f__mg$cache6;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE40", Offset = "0xC7EE40")]
		private static Action<GetMatchResponseObject> <>f__mg$cache7;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE50", Offset = "0xC7EE50")]
		private static Action<ErrorResponseObject> <>f__mg$cache8;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EE60", Offset = "0xC7EE60")]
		private static Action <>f__mg$cache9;

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xDFA7D4", Offset = "0xDFA7D4", VA = "0xDFA7D4")]
		public static void FindMatch(Action<string> onMatchFoundSuccess, Action onError)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xDF68B0", Offset = "0xDF68B0", VA = "0xDF68B0")]
		public static void CancelMatchmaking()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xDFB010", Offset = "0xDFB010", VA = "0xDFB010")]
		private static void InvokeWithDelay(Action a, int milliseconds)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xDFABA0", Offset = "0xDFABA0", VA = "0xDFABA0")]
		private static void TryCreateEntityKey()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xDFACC8", Offset = "0xDFACC8", VA = "0xDFACC8")]
		private static void CancelAllMatchmakingTickets(string queue)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xDFAE40", Offset = "0xDFAE40", VA = "0xDFAE40")]
		private static void FindMatch(string queueName)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xDFB144", Offset = "0xDFB144", VA = "0xDFB144")]
		private static void PollMatchmakingTicket()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xDFB2BC", Offset = "0xDFB2BC", VA = "0xDFB2BC")]
		private static void OnCreateMatchmakingTicketSuccess(CreateMatchmakingTicketResponseObject createMatchmakingTicketResponseObject)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xDFB380", Offset = "0xDFB380", VA = "0xDFB380")]
		private static void OnGetMatchmakingTicketSuccess(GetMatchmakingTicketResponseObject getMatchmakingTicketResponseObject)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xDFB7A8", Offset = "0xDFB7A8", VA = "0xDFB7A8")]
		private static void OnGetMatchSuccess(GetMatchResponseObject getMatchResponseObject)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xDFB88C", Offset = "0xDFB88C", VA = "0xDFB88C")]
		private static void OnCancelAllMatchmakingTicketsForPlayerSuccess(CancelAllMatchmakingTicketsForPlayerResponseObject cancelAllMatchmakingTicketsForPlayerResponseObject)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xDFB93C", Offset = "0xDFB93C", VA = "0xDFB93C")]
		private static void OnCancelAllMatchmakingTicketsForPlayerError(ErrorResponseObject errorResponseObject)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xDFB9D8", Offset = "0xDFB9D8", VA = "0xDFB9D8")]
		private static void OnError(ErrorResponseObject errorResponseObject)
		{
		}
	}
}
namespace Cortopia.Scripts.Network
{
	[Token(Token = "0x20001BF")]
	public class NetworkCache : PunSingleton<NetworkCache>
	{
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1033C1C", Offset = "0x1033C1C", VA = "0x1033C1C")]
		public NetworkCache()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1033C6C", Offset = "0x1033C6C", VA = "0x1033C6C")]
		public void CacheBundledAsset(string assetPath)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1033D80", Offset = "0x1033D80", VA = "0x1033D80")]
		public void CacheLoadout(Spell[] loadout)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1033F7C", Offset = "0x1033F7C", VA = "0x1033F7C")]
		[PunRPC]
		private void PunCacheBundledAsset(string assetPath)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1033F88", Offset = "0x1033F88", VA = "0x1033F88")]
		[PunRPC]
		private void PunCacheBundledAssets(string[] assetPaths)
		{
		}
	}
}
namespace CortopiaEvents
{
	[Token(Token = "0x20001C0")]
	public class NetworkEvents
	{
		[Token(Token = "0x20001C1")]
		public class PhotonPlayerConnectedEvent : EventBase
		{
			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Photon.Realtime.Player PhotonPlayer;

			[Token(Token = "0x6000766")]
			[Address(RVA = "0xF5F2E8", Offset = "0xF5F2E8", VA = "0xF5F2E8")]
			public PhotonPlayerConnectedEvent()
			{
			}
		}

		[Token(Token = "0x20001C2")]
		public class PhotonPlayerDisconnectedEvent : EventBase
		{
			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Photon.Realtime.Player PhotonPlayer;

			[Token(Token = "0x6000767")]
			[Address(RVA = "0xF5F2F0", Offset = "0xF5F2F0", VA = "0xF5F2F0")]
			public PhotonPlayerDisconnectedEvent()
			{
			}
		}

		[Token(Token = "0x20001C3")]
		public class PhotonNetworkDisconnectedEvent : EventBase
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xF5F2E0", Offset = "0xF5F2E0", VA = "0xF5F2E0")]
			public PhotonNetworkDisconnectedEvent()
			{
			}
		}

		[Token(Token = "0x20001C4")]
		public class PhotonConnectionFailedEvent : EventBase
		{
			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DisconnectCause Cause;

			[Token(Token = "0x6000769")]
			[Address(RVA = "0xF5F2D8", Offset = "0xF5F2D8", VA = "0xF5F2D8")]
			public PhotonConnectionFailedEvent()
			{
			}
		}

		[Token(Token = "0x20001C5")]
		public class PlayerPropertiesUpdatedEvent : EventBase
		{
			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Photon.Realtime.Player TargetPlayer;

			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExitGames.Client.Photon.Hashtable ChangedProps;

			[Token(Token = "0x600076A")]
			[Address(RVA = "0xF5F2F8", Offset = "0xF5F2F8", VA = "0xF5F2F8")]
			public PlayerPropertiesUpdatedEvent()
			{
			}
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xF5F2D0", Offset = "0xF5F2D0", VA = "0xF5F2D0")]
		public NetworkEvents()
		{
		}
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x20001C6")]
	public sealed class NetworkManager : MonoSingleton<NetworkManager>, IConnectionCallbacks, ILobbyCallbacks, IMatchmakingCallbacks, IInRoomCallbacks
	{
		[Token(Token = "0x20001C7")]
		private struct Region
		{
			[Token(Token = "0x4000A14")]
			public const string US = "us";

			[Token(Token = "0x4000A15")]
			public const string China = "cn";
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F0A4", Offset = "0xC7F0A4")]
		private sealed class <IsNetworkReachable>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002929")]
				[Address(RVA = "0xE0271C", Offset = "0xE0271C", VA = "0xE0271C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600292A")]
				[Address(RVA = "0xE02724", Offset = "0xE02724", VA = "0xE02724", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002927")]
			[Address(RVA = "0xE026C0", Offset = "0xE026C0", VA = "0xE026C0")]
			[DebuggerHidden]
			public <IsNetworkReachable>c__Iterator0()
			{
			}

			[Token(Token = "0x6002928")]
			[Address(RVA = "0xE026C8", Offset = "0xE026C8", VA = "0xE026C8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0xE0272C", Offset = "0xE0272C", VA = "0xE0272C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600292C")]
			[Address(RVA = "0xE02730", Offset = "0xE02730", VA = "0xE02730", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F104", Offset = "0xC7F104")]
		private sealed class <GoOnline>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600292F")]
				[Address(RVA = "0xE01A50", Offset = "0xE01A50", VA = "0xE01A50", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002930")]
				[Address(RVA = "0xE01A58", Offset = "0xE01A58", VA = "0xE01A58", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600292D")]
			[Address(RVA = "0xE01608", Offset = "0xE01608", VA = "0xE01608")]
			[DebuggerHidden]
			public <GoOnline>c__Iterator1()
			{
			}

			[Token(Token = "0x600292E")]
			[Address(RVA = "0xE01610", Offset = "0xE01610", VA = "0xE01610", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002931")]
			[Address(RVA = "0xE01A60", Offset = "0xE01A60", VA = "0xE01A60", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002932")]
			[Address(RVA = "0xE01A74", Offset = "0xE01A74", VA = "0xE01A74", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F164", Offset = "0xC7F164")]
		private sealed class <GoOffline>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Func<bool> <>f__am$cache0;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static Func<bool> <>f__am$cache1;

			[Token(Token = "0x1700055F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002935")]
				[Address(RVA = "0xE01468", Offset = "0xE01468", VA = "0xE01468", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000560")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002936")]
				[Address(RVA = "0xE01470", Offset = "0xE01470", VA = "0xE01470", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002933")]
			[Address(RVA = "0xE00EC8", Offset = "0xE00EC8", VA = "0xE00EC8")]
			[DebuggerHidden]
			public <GoOffline>c__Iterator2()
			{
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0xE00ED0", Offset = "0xE00ED0", VA = "0xE00ED0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002937")]
			[Address(RVA = "0xE01478", Offset = "0xE01478", VA = "0xE01478", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002938")]
			[Address(RVA = "0xE0148C", Offset = "0xE0148C", VA = "0xE0148C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6002939")]
			[Address(RVA = "0xE014F0", Offset = "0xE014F0", VA = "0xE014F0")]
			internal bool <>m__0()
			{
				return default(bool);
			}

			[Token(Token = "0x600293A")]
			[Address(RVA = "0xE01528", Offset = "0xE01528", VA = "0xE01528")]
			private static bool <>m__1()
			{
				return default(bool);
			}

			[Token(Token = "0x600293B")]
			[Address(RVA = "0xE01598", Offset = "0xE01598", VA = "0xE01598")]
			private static bool <>m__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F1C4", Offset = "0xC7F1C4")]
		private sealed class <LeaveAndCreateNewRoom>c__AnonStoreyC
		{
			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string roomName;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RoomCreationType creationType;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal RoomCreationReason creationReason;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Arena arena;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal MatchType matchType;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal NetworkManager $this;

			[Token(Token = "0x600293C")]
			[Address(RVA = "0xE02794", Offset = "0xE02794", VA = "0xE02794")]
			public <LeaveAndCreateNewRoom>c__AnonStoreyC()
			{
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0xE0279C", Offset = "0xE0279C", VA = "0xE0279C")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F1D4", Offset = "0xC7F1D4")]
		private sealed class <OnConnectToMatchRoom>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MatchType matchType;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal RoomCreationType creationType;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string roomName;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal RoomCreationReason creationReason;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal Arena arena;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000561")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002940")]
				[Address(RVA = "0xE02F70", Offset = "0xE02F70", VA = "0xE02F70", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000562")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002941")]
				[Address(RVA = "0xE02F78", Offset = "0xE02F78", VA = "0xE02F78", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600293E")]
			[Address(RVA = "0xE02BE4", Offset = "0xE02BE4", VA = "0xE02BE4")]
			[DebuggerHidden]
			public <OnConnectToMatchRoom>c__Iterator3()
			{
			}

			[Token(Token = "0x600293F")]
			[Address(RVA = "0xE02BEC", Offset = "0xE02BEC", VA = "0xE02BEC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002942")]
			[Address(RVA = "0xE02F80", Offset = "0xE02F80", VA = "0xE02F80", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002943")]
			[Address(RVA = "0xE02F94", Offset = "0xE02F94", VA = "0xE02F94", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F234", Offset = "0xC7F234")]
		private sealed class <OnConnectToMatchLobby>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000563")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002946")]
				[Address(RVA = "0xE02B24", Offset = "0xE02B24", VA = "0xE02B24", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000564")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002947")]
				[Address(RVA = "0xE02B2C", Offset = "0xE02B2C", VA = "0xE02B2C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002944")]
			[Address(RVA = "0xE027F8", Offset = "0xE027F8", VA = "0xE027F8")]
			[DebuggerHidden]
			public <OnConnectToMatchLobby>c__Iterator4()
			{
			}

			[Token(Token = "0x6002945")]
			[Address(RVA = "0xE02800", Offset = "0xE02800", VA = "0xE02800", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002948")]
			[Address(RVA = "0xE02B34", Offset = "0xE02B34", VA = "0xE02B34", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002949")]
			[Address(RVA = "0xE02B48", Offset = "0xE02B48", VA = "0xE02B48", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x600294A")]
			[Address(RVA = "0xE02BAC", Offset = "0xE02BAC", VA = "0xE02BAC")]
			internal bool <>m__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F294", Offset = "0xC7F294")]
		private sealed class <HandleMatchFound>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string roomId;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000565")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600294D")]
				[Address(RVA = "0xE02638", Offset = "0xE02638", VA = "0xE02638", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600294E")]
				[Address(RVA = "0xE02640", Offset = "0xE02640", VA = "0xE02640", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600294B")]
			[Address(RVA = "0xE02358", Offset = "0xE02358", VA = "0xE02358")]
			[DebuggerHidden]
			public <HandleMatchFound>c__Iterator5()
			{
			}

			[Token(Token = "0x600294C")]
			[Address(RVA = "0xE02360", Offset = "0xE02360", VA = "0xE02360", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0xE02648", Offset = "0xE02648", VA = "0xE02648", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002950")]
			[Address(RVA = "0xE0265C", Offset = "0xE0265C", VA = "0xE0265C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F2F4", Offset = "0xC7F2F4")]
		private sealed class <HandleLobby>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000567")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002953")]
				[Address(RVA = "0xE022D0", Offset = "0xE022D0", VA = "0xE022D0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002954")]
				[Address(RVA = "0xE022D8", Offset = "0xE022D8", VA = "0xE022D8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002951")]
			[Address(RVA = "0xE01F8C", Offset = "0xE01F8C", VA = "0xE01F8C")]
			[DebuggerHidden]
			public <HandleLobby>c__Iterator6()
			{
			}

			[Token(Token = "0x6002952")]
			[Address(RVA = "0xE01F94", Offset = "0xE01F94", VA = "0xE01F94", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002955")]
			[Address(RVA = "0xE022E0", Offset = "0xE022E0", VA = "0xE022E0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002956")]
			[Address(RVA = "0xE022F4", Offset = "0xE022F4", VA = "0xE022F4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F354", Offset = "0xC7F354")]
		private sealed class <HandleArena>c__Iterator7 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002959")]
				[Address(RVA = "0xE01F04", Offset = "0xE01F04", VA = "0xE01F04", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600295A")]
				[Address(RVA = "0xE01F0C", Offset = "0xE01F0C", VA = "0xE01F0C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002957")]
			[Address(RVA = "0xE01AD8", Offset = "0xE01AD8", VA = "0xE01AD8")]
			[DebuggerHidden]
			public <HandleArena>c__Iterator7()
			{
			}

			[Token(Token = "0x6002958")]
			[Address(RVA = "0xE01AE0", Offset = "0xE01AE0", VA = "0xE01AE0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600295B")]
			[Address(RVA = "0xE01F14", Offset = "0xE01F14", VA = "0xE01F14", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600295C")]
			[Address(RVA = "0xE01F28", Offset = "0xE01F28", VA = "0xE01F28", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F3B4", Offset = "0xC7F3B4")]
		private sealed class <WaitForOpponent>c__Iterator8 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Func<bool> <>f__am$cache0;

			[Token(Token = "0x1700056B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600295F")]
				[Address(RVA = "0xE03584", Offset = "0xE03584", VA = "0xE03584", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002960")]
				[Address(RVA = "0xE0358C", Offset = "0xE0358C", VA = "0xE0358C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600295D")]
			[Address(RVA = "0xE0317C", Offset = "0xE0317C", VA = "0xE0317C")]
			[DebuggerHidden]
			public <WaitForOpponent>c__Iterator8()
			{
			}

			[Token(Token = "0x600295E")]
			[Address(RVA = "0xE03184", Offset = "0xE03184", VA = "0xE03184", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002961")]
			[Address(RVA = "0xE03594", Offset = "0xE03594", VA = "0xE03594", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002962")]
			[Address(RVA = "0xE035A8", Offset = "0xE035A8", VA = "0xE035A8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6002963")]
			[Address(RVA = "0xE0360C", Offset = "0xE0360C", VA = "0xE0360C")]
			private static bool <>m__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F414", Offset = "0xC7F414")]
		private sealed class <CreateRoomWhenReady>c__Iterator9 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700056D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002966")]
				[Address(RVA = "0xE00E40", Offset = "0xE00E40", VA = "0xE00E40", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002967")]
				[Address(RVA = "0xE00E48", Offset = "0xE00E48", VA = "0xE00E48", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002964")]
			[Address(RVA = "0xE00D3C", Offset = "0xE00D3C", VA = "0xE00D3C")]
			[DebuggerHidden]
			public <CreateRoomWhenReady>c__Iterator9()
			{
			}

			[Token(Token = "0x6002965")]
			[Address(RVA = "0xE00D44", Offset = "0xE00D44", VA = "0xE00D44", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002968")]
			[Address(RVA = "0xE00E50", Offset = "0xE00E50", VA = "0xE00E50", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002969")]
			[Address(RVA = "0xE00E64", Offset = "0xE00E64", VA = "0xE00E64", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F474", Offset = "0xC7F474")]
		private sealed class <WaitForBool>c__IteratorA : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <time>__0;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Func<bool> func;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float maxTime;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600296C")]
				[Address(RVA = "0xE030F4", Offset = "0xE030F4", VA = "0xE030F4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600296D")]
				[Address(RVA = "0xE030FC", Offset = "0xE030FC", VA = "0xE030FC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600296A")]
			[Address(RVA = "0xE02FF8", Offset = "0xE02FF8", VA = "0xE02FF8")]
			[DebuggerHidden]
			public <WaitForBool>c__IteratorA()
			{
			}

			[Token(Token = "0x600296B")]
			[Address(RVA = "0xE03000", Offset = "0xE03000", VA = "0xE03000", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600296E")]
			[Address(RVA = "0xE03104", Offset = "0xE03104", VA = "0xE03104", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600296F")]
			[Address(RVA = "0xE03118", Offset = "0xE03118", VA = "0xE03118", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F4D4", Offset = "0xC7F4D4")]
		private sealed class <ContinuousInternetCheck>c__IteratorB : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool <initialCheck>__0;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			internal bool <previousCheck>__1;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal NetworkManager $this;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002972")]
				[Address(RVA = "0xE00CB4", Offset = "0xE00CB4", VA = "0xE00CB4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002973")]
				[Address(RVA = "0xE00CBC", Offset = "0xE00CBC", VA = "0xE00CBC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002970")]
			[Address(RVA = "0xE008C4", Offset = "0xE008C4", VA = "0xE008C4")]
			[DebuggerHidden]
			public <ContinuousInternetCheck>c__IteratorB()
			{
			}

			[Token(Token = "0x6002971")]
			[Address(RVA = "0xE008CC", Offset = "0xE008CC", VA = "0xE008CC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002974")]
			[Address(RVA = "0xE00CC4", Offset = "0xE00CC4", VA = "0xE00CC4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002975")]
			[Address(RVA = "0xE00CD8", Offset = "0xE00CD8", VA = "0xE00CD8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40009F4")]
		private const string PhotonAppID = "e1482f05-acd1-4d76-aa43-111ca44535af";

		[Token(Token = "0x40009F5")]
		private const float MaximumConnectionWaitingTime = 15f;

		[Token(Token = "0x40009F6")]
		private const float LeaveSurvivalRoomDelay = 3f;

		[Token(Token = "0x40009F7")]
		private const float InternetConnectionCheckWaitWhileConnectedTime = 15f;

		[Token(Token = "0x40009F8")]
		private const float InternetConnectionCheckWaitWhileDisconnectedTime = 5f;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Queue<Action<bool>> m_internetCheckActions;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TypedLobby m_sqlLobby;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_serverHost;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_networkVersionCode;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_regionCode;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Photon.Realtime.Player> m_activePlayers;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_previousOpponent;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MatchType m_currentMatchType;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action m_onConnectedToMaster;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isNetworkReachable;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isInternetCheckInProgress;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_timeRemainingUntilNextInternetCheck;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_connectToMatchRoomCoroutine;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_connectToMatchLobbyCoroutine;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_onFoundMatchCoroutine;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_playFabLoadingEventToken;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_tryFindNewMatchEventToken;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_playerRequestedRematchEventToken;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_sceneLoadInitiatedEventToken;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_continuousInternetCheckCoroutine;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EEA0", Offset = "0xC7EEA0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EEA0", Offset = "0xC7EEA0")]
		private NetworkState <NetworkState>k__BackingField;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EEDC", Offset = "0xC7EEDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EEDC", Offset = "0xC7EEDC")]
		private bool <IsCorrectNetworkVersion>k__BackingField;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF18", Offset = "0xC7EF18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7EF18", Offset = "0xC7EF18")]
		private bool <LatestInternetCheckWasSuccessful>k__BackingField;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF54", Offset = "0xC7EF54")]
		private static Func<bool> <>f__mg$cache0;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF64", Offset = "0xC7EF64")]
		private static Comparison<Photon.Realtime.Player> <>f__am$cache0;

		[Token(Token = "0x1700011D")]
		public MatchType CurrentMatchType
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xDF36D8", Offset = "0xDF36D8", VA = "0xDF36D8")]
			get
			{
				return default(MatchType);
			}
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xDFC65C", Offset = "0xDFC65C", VA = "0xDFC65C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public NetworkState NetworkState
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xDFC664", Offset = "0xDFC664", VA = "0xDFC664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF74", Offset = "0xC7EF74")]
			get
			{
				return default(NetworkState);
			}
			[Token(Token = "0x600076F")]
			[Address(RVA = "0xDFC66C", Offset = "0xDFC66C", VA = "0xDFC66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF84", Offset = "0xC7EF84")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public bool IsCorrectNetworkVersion
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xDFC674", Offset = "0xDFC674", VA = "0xDFC674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EF94", Offset = "0xC7EF94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xDFC67C", Offset = "0xDFC67C", VA = "0xDFC67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EFA4", Offset = "0xC7EFA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool LatestInternetCheckWasSuccessful
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xDFC688", Offset = "0xDFC688", VA = "0xDFC688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EFB4", Offset = "0xC7EFB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xDFC690", Offset = "0xDFC690", VA = "0xDFC690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7EFC4", Offset = "0xC7EFC4")]
			private set
			{
			}
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xDFC588", Offset = "0xDFC588", VA = "0xDFC588")]
		public NetworkManager()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xDFC69C", Offset = "0xDFC69C", VA = "0xDFC69C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xDFC930", Offset = "0xDFC930", VA = "0xDFC930", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xDFCA70", Offset = "0xDFCA70", VA = "0xDFCA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xDE9710", Offset = "0xDE9710", VA = "0xDE9710")]
		public void IsInternetReachable([Optional] Action<bool> onCheckComplete, bool forceCheckIfNotAlreadyInProgress = true)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xDFCC34", Offset = "0xDFCC34", VA = "0xDFCC34")]
		[DebuggerHidden]
		private IEnumerator IsNetworkReachable()
		{
			return null;
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xDFCCA0", Offset = "0xDFCCA0", VA = "0xDFCCA0")]
		[DebuggerHidden]
		private IEnumerator GoOnline()
		{
			return null;
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xDE3D9C", Offset = "0xDE3D9C", VA = "0xDE3D9C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xDFCD0C", Offset = "0xDFCD0C", VA = "0xDFCD0C")]
		[DebuggerHidden]
		private IEnumerator GoOffline()
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xDFCD78", Offset = "0xDFCD78", VA = "0xDFCD78")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xDF58D8", Offset = "0xDF58D8", VA = "0xDF58D8")]
		public void LeaveAndCreateNewRoom(string roomName, RoomCreationType creationType, RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xDECCA4", Offset = "0xDECCA4", VA = "0xDECCA4")]
		public void ConnectToMatchRoom(string roomName, RoomCreationType creationType, RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xDFCE04", Offset = "0xDFCE04", VA = "0xDFCE04")]
		[DebuggerHidden]
		private IEnumerator OnConnectToMatchRoom(string roomName, RoomCreationType creationType, RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xDFCEE0", Offset = "0xDFCEE0", VA = "0xDFCEE0")]
		public void ConnectToMatchLobby()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xDFCF14", Offset = "0xDFCF14", VA = "0xDFCF14")]
		[DebuggerHidden]
		private IEnumerator OnConnectToMatchLobby()
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xDFCF80", Offset = "0xDFCF80", VA = "0xDFCF80")]
		private void CreateRoom(string roomName, RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xDFDB3C", Offset = "0xDFDB3C", VA = "0xDFDB3C")]
		private void JoinRoom(string roomName)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xDFDBAC", Offset = "0xDFDBAC", VA = "0xDFDBAC")]
		private void JoinOrCreateRoom(string roomName, RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xDFDC74", Offset = "0xDFDC74", VA = "0xDFDC74")]
		private void JoinRandomRoom(MatchmakingMode mode, string sqlFilter)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xDFD048", Offset = "0xDFD048", VA = "0xDFD048")]
		private Photon.Realtime.RoomOptions GetRoomOptions(RoomCreationReason creationReason, Arena arena, MatchType matchType)
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xDFD72C", Offset = "0xDFD72C", VA = "0xDFD72C")]
		private void SetCustomPropertiesForLobby(ref Photon.Realtime.RoomOptions roomOptions)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xDFDD08", Offset = "0xDFDD08", VA = "0xDFDD08")]
		private MatchType GetCurrentRoomMatchType()
		{
			return default(MatchType);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xDFDD8C", Offset = "0xDFDD8C", VA = "0xDFDD8C")]
		private Arena GetCurrentRoomArena()
		{
			return default(Arena);
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xDFDF60", Offset = "0xDFDF60", VA = "0xDFDF60")]
		private RoomCreationReason GetCurrentRoomCreationReason()
		{
			return default(RoomCreationReason);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xDFE064", Offset = "0xDFE064", VA = "0xDFE064")]
		public int GetNumberOfActivePlayers()
		{
			return default(int);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xDFE3BC", Offset = "0xDFE3BC", VA = "0xDFE3BC")]
		public int GetActivePlayerIndex(Photon.Realtime.Player Owner)
		{
			return default(int);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xDFE4E0", Offset = "0xDFE4E0", VA = "0xDFE4E0")]
		public List<Photon.Realtime.Player> GetActivePlayers()
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xDFE140", Offset = "0xDFE140", VA = "0xDFE140")]
		private void SetActivePlayers([Optional] Photon.Realtime.Player excludePlayer)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xDFE67C", Offset = "0xDFE67C", VA = "0xDFE67C")]
		public void AssignMasterClientToLocal()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xDFE728", Offset = "0xDFE728", VA = "0xDFE728")]
		public void KickPhotonPlayer(Photon.Realtime.Player kickPlayer)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xDE534C", Offset = "0xDE534C", VA = "0xDE534C")]
		public static void SetPlayerInfo(string userName, string userId)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xDFEBB4", Offset = "0xDFEBB4", VA = "0xDFEBB4")]
		public string GetPreviousOpponent()
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xDFEBBC", Offset = "0xDFEBBC", VA = "0xDFEBBC")]
		public void ResetPreviousOpponent()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xDFEBC4", Offset = "0xDFEBC4", VA = "0xDFEBC4")]
		public void FindMatch()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xDFECD0", Offset = "0xDFECD0", VA = "0xDFECD0")]
		private void OnFoundMatch(string roomId)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xDFED04", Offset = "0xDFED04", VA = "0xDFED04")]
		[DebuggerHidden]
		private IEnumerator HandleMatchFound(string roomId)
		{
			return null;
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xDFED90", Offset = "0xDFED90", VA = "0xDFED90")]
		[DebuggerHidden]
		private IEnumerator HandleLobby()
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xDFEDFC", Offset = "0xDFEDFC", VA = "0xDFEDFC")]
		[DebuggerHidden]
		private IEnumerator HandleArena()
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xDFEE68", Offset = "0xDFEE68", VA = "0xDFEE68")]
		[DebuggerHidden]
		private IEnumerator WaitForOpponent()
		{
			return null;
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xDFEED4", Offset = "0xDFEED4", VA = "0xDFEED4")]
		[DebuggerHidden]
		private IEnumerator CreateRoomWhenReady()
		{
			return null;
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xDFEF40", Offset = "0xDFEF40", VA = "0xDFEF40")]
		private void PrepareWaitingForOpponent()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xDFF0AC", Offset = "0xDFF0AC", VA = "0xDFF0AC")]
		private void OnMatchError()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xDFF18C", Offset = "0xDFF18C", VA = "0xDFF18C")]
		[DebuggerHidden]
		private IEnumerator WaitForBool(Func<bool> func, float maxTime)
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xDF51E0", Offset = "0xDF51E0", VA = "0xDF51E0")]
		public void ResetMatchType()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xDFF218", Offset = "0xDFF218", VA = "0xDFF218")]
		private void CheckExhibitionCriteria(Photon.Realtime.Player opponent)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xDFF834", Offset = "0xDFF834", VA = "0xDFF834")]
		private void UpdateMatchTypeToExhibition()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xDFF8EC", Offset = "0xDFF8EC", VA = "0xDFF8EC", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xDFF8F0", Offset = "0xDFF8F0", VA = "0xDFF8F0", Slot = "7")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xDFF998", Offset = "0xDFF998", VA = "0xDFF998", Slot = "8")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xDFFAF4", Offset = "0xDFFAF4", VA = "0xDFFAF4")]
		private void TryCancelCoroutines()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xDFFB58", Offset = "0xDFFB58", VA = "0xDFFB58", Slot = "10")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xDFFB5C", Offset = "0xDFFB5C", VA = "0xDFFB5C", Slot = "11")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xDFFB60", Offset = "0xDFFB60", VA = "0xDFFB60", Slot = "9")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xDFFB64", Offset = "0xDFFB64", VA = "0xDFFB64", Slot = "12")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xDFFB70", Offset = "0xDFFB70", VA = "0xDFFB70", Slot = "13")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xDFFB74", Offset = "0xDFFB74", VA = "0xDFFB74", Slot = "14")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xDFFC30", Offset = "0xDFFC30", VA = "0xDFFC30", Slot = "15")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xDFFC34", Offset = "0xDFFC34", VA = "0xDFFC34", Slot = "22")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xDFFC5C", Offset = "0xDFFC5C", VA = "0xDFFC5C", Slot = "18")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xDFFCE8", Offset = "0xDFFCE8", VA = "0xDFFCE8", Slot = "20")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xDFFD74", Offset = "0xDFFD74", VA = "0xDFFD74", Slot = "17")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xDFFD78", Offset = "0xDFFD78", VA = "0xDFFD78", Slot = "19")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xDFFF60", Offset = "0xDFFF60", VA = "0xDFFF60", Slot = "21")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xDFFFA4", Offset = "0xDFFFA4", VA = "0xDFFFA4", Slot = "16")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xDFFFA8", Offset = "0xDFFFA8", VA = "0xDFFFA8", Slot = "23")]
		public void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xDFE804", Offset = "0xDFE804", VA = "0xDFE804", Slot = "24")]
		public void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xE00258", Offset = "0xE00258", VA = "0xE00258", Slot = "25")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xE0025C", Offset = "0xE0025C", VA = "0xE0025C", Slot = "26")]
		public void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xE00318", Offset = "0xE00318", VA = "0xE00318", Slot = "27")]
		public void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xE0031C", Offset = "0xE0031C", VA = "0xE0031C")]
		private void OnPlayFabLoadingEvent(Events.PlayFabLoadingEvent eventData)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xE00594", Offset = "0xE00594", VA = "0xE00594")]
		private void OnTryFindNewMatches(Events.TryToFindNewMatchEvent eventData)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xE00598", Offset = "0xE00598", VA = "0xE00598")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xE005F8", Offset = "0xE005F8", VA = "0xE005F8")]
		private void OnPlayerRequestedRematch(Events.PlayerRequestedRematchEvent eventData)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xE006A8", Offset = "0xE006A8", VA = "0xE006A8")]
		private void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xE007A8", Offset = "0xE007A8", VA = "0xE007A8")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xE00774", Offset = "0xE00774", VA = "0xE00774")]
		private void TryStopContinuousInternetCheck()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xDFCBF4", Offset = "0xDFCBF4", VA = "0xDFCBF4")]
		private void TryStartContinuousInternetCheck()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xE007EC", Offset = "0xE007EC", VA = "0xE007EC")]
		[DebuggerHidden]
		private IEnumerator ContinuousInternetCheck()
		{
			return null;
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xE00858", Offset = "0xE00858", VA = "0xE00858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F094", Offset = "0xC7F094")]
		private static int <SetActivePlayers>m__0(Photon.Realtime.Player x, Photon.Realtime.Player y)
		{
			return default(int);
		}
	}
}
namespace Cortopia.Scripts.Network
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7F534", Offset = "0xC7F534")]
	public class NetworkObjectDestroyer : MonoBehaviourPun
	{
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F5B8", Offset = "0xC7F5B8")]
		private sealed class <DestroyAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal NetworkObjectDestroyer $this;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002978")]
				[Address(RVA = "0x1034200", Offset = "0x1034200", VA = "0x1034200", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002979")]
				[Address(RVA = "0x1034208", Offset = "0x1034208", VA = "0x1034208", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002976")]
			[Address(RVA = "0x1034104", Offset = "0x1034104", VA = "0x1034104")]
			[DebuggerHidden]
			public <DestroyAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x6002977")]
			[Address(RVA = "0x103410C", Offset = "0x103410C", VA = "0x103410C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600297A")]
			[Address(RVA = "0x1034210", Offset = "0x1034210", VA = "0x1034210", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600297B")]
			[Address(RVA = "0x1034224", Offset = "0x1034224", VA = "0x1034224", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_lifeSpan;

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1033FFC", Offset = "0x1033FFC", VA = "0x1033FFC")]
		public NetworkObjectDestroyer()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x103400C", Offset = "0x103400C", VA = "0x103400C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1034014", Offset = "0x1034014", VA = "0x1034014")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1034078", Offset = "0x1034078", VA = "0x1034078")]
		[DebuggerHidden]
		private IEnumerator DestroyAfterTime(float waitTime)
		{
			return null;
		}
	}
}
[Token(Token = "0x20001C9")]
public class NetworkUtils
{
	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F638", Offset = "0xC7F638")]
	private sealed class <InstantiateAsync>c__AnonStorey0
	{
		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string path;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 position;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion rotation;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal byte group;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Action<GameObject> onLoaded;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal object[] data;

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1847A8C", Offset = "0x1847A8C", VA = "0x1847A8C")]
		public <InstantiateAsync>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1848080", Offset = "0x1848080", VA = "0x1848080")]
		internal void <>m__0(GameObject loadedObject)
		{
		}
	}

	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F648", Offset = "0xC7F648")]
	private sealed class <InstantiateMultipleAsync>c__AnonStorey1
	{
		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string path;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 position;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion rotation;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal byte group;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int amount;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Action<GameObject[]> onLoaded;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal object[] data;

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1847D04", Offset = "0x1847D04", VA = "0x1847D04")]
		public <InstantiateMultipleAsync>c__AnonStorey1()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x18480A0", Offset = "0x18480A0", VA = "0x18480A0")]
		internal void <>m__0(GameObject loadedObject)
		{
		}
	}

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DefaultPool sm_networkPool;

	[Token(Token = "0x17000121")]
	private static DefaultPool NetworkPool
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1847430", Offset = "0x1847430", VA = "0x1847430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F618", Offset = "0xC7F618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public static bool ConnectedToGame
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1847504", Offset = "0x1847504", VA = "0x1847504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F628", Offset = "0xC7F628")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1847428", Offset = "0x1847428", VA = "0x1847428")]
	public NetworkUtils()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x18475A0", Offset = "0x18475A0", VA = "0x18475A0")]
	public static void ClearCache()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1847608", Offset = "0x1847608", VA = "0x1847608")]
	public static void TryCacheAsset(string assetPath)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x18476E8", Offset = "0x18476E8", VA = "0x18476E8")]
	public static GameObject Instantiate(string assetPath, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x184791C", Offset = "0x184791C", VA = "0x184791C")]
	public static void InstantiateAsync(string path, Vector3 position, Quaternion rotation, byte group, Action<GameObject> onLoaded, object[] data)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1847A94", Offset = "0x1847A94", VA = "0x1847A94")]
	private static void OnGameObjectLoaded(string path, Vector3 position, Quaternion rotation, byte group, Action<GameObject> onLoaded, object[] data, GameObject spellGameObject)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1847B78", Offset = "0x1847B78", VA = "0x1847B78")]
	public static void InstantiateMultipleAsync(string path, Vector3 position, Quaternion rotation, byte group, int amount, Action<GameObject[]> onLoaded, object[] data)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1847D0C", Offset = "0x1847D0C", VA = "0x1847D0C")]
	private static void OnGameObjectLoaded(string path, Vector3 pos, Quaternion rot, byte group, int amount, Action<GameObject[]> onLoaded, object[] data, GameObject spellGameObject)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1847E90", Offset = "0x1847E90", VA = "0x1847E90")]
	public static void DestroyObject(PhotonView photonView)
	{
	}
}
[Token(Token = "0x20001CA")]
public static class PhotonExtensions
{
	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1868924", Offset = "0x1868924", VA = "0x1868924")]
	public static bool IsLocal(this PhotonView photonView)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x186898C", Offset = "0x186898C", VA = "0x186898C")]
	public static void AllocateViewID(this PhotonView photonView)
	{
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x20001CB")]
	public static class PlayerProperty
	{
		[Token(Token = "0x4000A18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7F688", Offset = "0xC7F688")]
		public const string ID = "P0";

		[Token(Token = "0x4000A19")]
		public const string PLATFORM = "P1";

		[Token(Token = "0x4000A1A")]
		public const string DEVELOPER = "P2";

		[Token(Token = "0x4000A1B")]
		public const string AIM_INPUT = "P4";

		[Token(Token = "0x4000A1C")]
		public const string LOADOUT = "P5";

		[Token(Token = "0x4000A1D")]
		public const string ROOMSCALE_ENABLED = "P6";

		[Token(Token = "0x4000A1E")]
		public const string DUAL_WIELD_ENABLED = "P7";

		[Token(Token = "0x4000A1F")]
		public const string ELO = "EL";

		[Token(Token = "0x4000A20")]
		public const string PLAYER_LEVEL = "PL";

		[Token(Token = "0x4000A21")]
		public const string SEASON_SCORE = "SS";

		[Token(Token = "0x4000A22")]
		public const string PICKUPS_USED = "PU";

		[Token(Token = "0x4000A23")]
		public const string MANA_USED = "MA";

		[Token(Token = "0x4000A24")]
		public const string DAMAGE_DEALT = "DD";

		[Token(Token = "0x4000A25")]
		public const string END_HP = "HP";

		[Token(Token = "0x4000A26")]
		public const string CHARACTER = "C0";

		[Token(Token = "0x4000A27")]
		public const string WAND_RIGHT = "C2";

		[Token(Token = "0x4000A28")]
		public const string WAND_LEFT = "C4";

		[Token(Token = "0x4000A29")]
		public const string TITLE = "C3";

		[Token(Token = "0x4000A2A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7F6C0", Offset = "0xC7F6C0")]
		public const string OPPONENT_INFO = "OI";

		[Token(Token = "0x4000A2B")]
		public const string PLAYFAB_ID = "PI";

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F6F8", Offset = "0xC7F6F8")]
		private static Dictionary<string, int> <>f__switch$map0;

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xE036C8", Offset = "0xE036C8", VA = "0xE036C8")]
		private static object Default(string playerPropertyID)
		{
			return null;
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xE03D64", Offset = "0xE03D64", VA = "0xE03D64")]
		public static void SetLoadoutWands(WandType wandRight, WandType wandLeft)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE03EB4", Offset = "0xE03EB4", VA = "0xE03EB4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7F708", Offset = "0xC7F708")]
		public static void SetOpponentInfo(Photon.Realtime.Player opponent)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE04030", Offset = "0xE04030", VA = "0xE04030")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC7F740", Offset = "0xC7F740")]
		public static void SetOpponentInfo(string name, object level, object seasonScore, object rating, object title)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xE0447C", Offset = "0xE0447C", VA = "0xE0447C")]
		public static void Set(string playerPropertyID, object value)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xE045B4", Offset = "0xE045B4", VA = "0xE045B4")]
		public static void Set(string playerPropertyID, bool value)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xE046C0", Offset = "0xE046C0", VA = "0xE046C0")]
		public static void Set(string playerPropertyID, int value)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xE047C8", Offset = "0xE047C8", VA = "0xE047C8")]
		public static void Set(string playerPropertyID, float value)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xE048D8", Offset = "0xE048D8", VA = "0xE048D8")]
		public static void Set(string playerPropertyID, string value)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE049B8", Offset = "0xE049B8", VA = "0xE049B8")]
		public static void Set(string playerPropertyID, object value, Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xE04B08", Offset = "0xE04B08", VA = "0xE04B08")]
		public static void Set(string playerPropertyID, int value, Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xE04C28", Offset = "0xE04C28", VA = "0xE04C28")]
		public static void Increment(string playerPropertyID, int value, Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xE04F18", Offset = "0xE04F18", VA = "0xE04F18")]
		public static object Get(string playerPropertyID)
		{
			return null;
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xE04DCC", Offset = "0xE04DCC", VA = "0xE04DCC")]
		public static object Get(string playerPropertyID, Photon.Realtime.Player player)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CC")]
	public static class RoomProperty
	{
		[Token(Token = "0x4000A2D")]
		public const string MATCH_RESTART = "R3";

		[Token(Token = "0x4000A2E")]
		public const string PLAYER_NAMES = "P1";

		[Token(Token = "0x4000A2F")]
		public const string PLAYER_IDS = "P2";

		[Token(Token = "0x4000A30")]
		public const string MATCH_END_TIME = "L1";

		[Token(Token = "0x4000A31")]
		public const string MATCH_TIME = "L2";

		[Token(Token = "0x4000A32")]
		public const string ROOM_TIME = "L3";

		[Token(Token = "0x4000A33")]
		public const string COUNTDOWN_TIME = "L4";

		[Token(Token = "0x4000A34")]
		public const string FIRST_BLOOD = "G0";

		[Token(Token = "0x4000A35")]
		public const string DAMAGE_DEALER = "G1";

		[Token(Token = "0x4000A36")]
		public const string ROOM_LEVEL = "C1";

		[Token(Token = "0x4000A37")]
		public const string POSITIONAL_TRACKING = "C2";

		[Token(Token = "0x4000A38")]
		public const string MATCH_TYPE = "C3";

		[Token(Token = "0x4000A39")]
		public const string ACTIVE_PLAYERS = "C4";

		[Token(Token = "0x4000A3A")]
		public const string GAME_OVER = "C5";

		[Token(Token = "0x4000A3B")]
		public const string PLAYER_NAME = "C8";

		[Token(Token = "0x4000A3C")]
		public const string PLATFORM = "A1";

		[Token(Token = "0x4000A3D")]
		public const string ARENA = "A2";

		[Token(Token = "0x4000A3E")]
		public const string REMATCH = "A3";

		[Token(Token = "0x4000A3F")]
		public const string MATCH_ID = "A4";

		[Token(Token = "0x4000A40")]
		public const string CREATION_REASON = "A5";

		[Token(Token = "0x4000A41")]
		public const string MATCH_STARTED = "A6";

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F778", Offset = "0xC7F778")]
		private static Dictionary<string, int> <>f__switch$map1;

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xE04F8C", Offset = "0xE04F8C", VA = "0xE04F8C")]
		private static object GetOfflineValue(string roomPropertyID)
		{
			return null;
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xE05574", Offset = "0xE05574", VA = "0xE05574")]
		public static void SetRoomProperty(string roomPropertyID, object value)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xE01DB4", Offset = "0xE01DB4", VA = "0xE01DB4")]
		public static void SetRoomProperty(string roomPropertyID, bool value)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xE05694", Offset = "0xE05694", VA = "0xE05694")]
		public static void SetRoomProperty(string roomPropertyID, int value)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xE057E0", Offset = "0xE057E0", VA = "0xE057E0")]
		public static void SetRoomProperty(string roomPropertyID, float value)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xE05938", Offset = "0xE05938", VA = "0xE05938")]
		public static void SetRoomProperty(string roomPropertyID, double value)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xE05A90", Offset = "0xE05A90", VA = "0xE05A90")]
		public static void SetRoomProperty(string roomPropertyID, string value)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xE05BB0", Offset = "0xE05BB0", VA = "0xE05BB0")]
		public static void AddRoomProperty(string roomPropertyID, int value)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xE05D7C", Offset = "0xE05D7C", VA = "0xE05D7C")]
		public static object GetRoomProperty(string roomPropertyID)
		{
			return null;
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xE05EBC", Offset = "0xE05EBC", VA = "0xE05EBC")]
		public static MatchType GetMatchType()
		{
			return default(MatchType);
		}
	}
	[Token(Token = "0x20001CD")]
	public class ServerBridge : MonoBehaviour
	{
		[Token(Token = "0x20001CE")]
		public enum ServerCommand
		{
			[Token(Token = "0x4000A44")]
			MatchInfo
		}

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F7A8", Offset = "0xC7F7A8")]
		private sealed class <SendString>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WWWForm <form>__0;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string name;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string data;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal string url;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal UnityWebRequest <www>__1;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002982")]
				[Address(RVA = "0xE06938", Offset = "0xE06938", VA = "0xE06938", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002983")]
				[Address(RVA = "0xE06940", Offset = "0xE06940", VA = "0xE06940", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002980")]
			[Address(RVA = "0xE06228", Offset = "0xE06228", VA = "0xE06228")]
			[DebuggerHidden]
			public <SendString>c__Iterator0()
			{
			}

			[Token(Token = "0x6002981")]
			[Address(RVA = "0xE06684", Offset = "0xE06684", VA = "0xE06684", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002984")]
			[Address(RVA = "0xE06948", Offset = "0xE06948", VA = "0xE06948", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002985")]
			[Address(RVA = "0xE0696C", Offset = "0xE0696C", VA = "0xE0696C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6002986")]
			[Address(RVA = "0xE06880", Offset = "0xE06880", VA = "0xE06880")]
			private void <>__Finally0()
			{
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F808", Offset = "0xC7F808")]
		private sealed class <GetText>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string url;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal UnityWebRequest <www>__1;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Action<string> callback;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002989")]
				[Address(RVA = "0xE065EC", Offset = "0xE065EC", VA = "0xE065EC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600298A")]
				[Address(RVA = "0xE065F4", Offset = "0xE065F4", VA = "0xE065F4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002987")]
			[Address(RVA = "0xE06324", Offset = "0xE06324", VA = "0xE06324")]
			[DebuggerHidden]
			public <GetText>c__Iterator1()
			{
			}

			[Token(Token = "0x6002988")]
			[Address(RVA = "0xE0632C", Offset = "0xE0632C", VA = "0xE0632C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600298B")]
			[Address(RVA = "0xE065FC", Offset = "0xE065FC", VA = "0xE065FC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600298C")]
			[Address(RVA = "0xE06620", Offset = "0xE06620", VA = "0xE06620", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x600298D")]
			[Address(RVA = "0xE06534", Offset = "0xE06534", VA = "0xE06534")]
			private void <>__Finally0()
			{
			}
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xE05F80", Offset = "0xE05F80", VA = "0xE05F80")]
		public ServerBridge()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xE05F88", Offset = "0xE05F88", VA = "0xE05F88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xE05F90", Offset = "0xE05F90", VA = "0xE05F90")]
		public void SendToServer(string url, string name, string data)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xE060C0", Offset = "0xE060C0", VA = "0xE060C0")]
		public void SendToServer(ServerCommand cmd, string name, string data)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xE06024", Offset = "0xE06024", VA = "0xE06024")]
		[DebuggerHidden]
		private IEnumerator SendString(string url, string name, string data)
		{
			return null;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xE06230", Offset = "0xE06230", VA = "0xE06230")]
		public void GetTextFromServer(ServerCommand cmd, Action<string> callback)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xE062F8", Offset = "0xE062F8", VA = "0xE062F8")]
		public void GetTextFromServer(string url, Action<string> callback)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xE0626C", Offset = "0xE0626C", VA = "0xE0626C")]
		[DebuggerHidden]
		private IEnumerator GetText(string url, Action<string> callback)
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xE0615C", Offset = "0xE0615C", VA = "0xE0615C")]
		private string GetURL(ServerCommand serverCommand)
		{
			return null;
		}
	}
}
[Token(Token = "0x20001CF")]
public class SpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tile _tile;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xFAB728", Offset = "0xFAB728", VA = "0xFAB728")]
	public SpawnPoint()
	{
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x20001D0")]
	public static class WandsVoip
	{
		[Token(Token = "0x17000123")]
		public static bool IsPlayerEnabled
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xE069D0", Offset = "0xE069D0", VA = "0xE069D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xE06A68", Offset = "0xE06A68", VA = "0xE06A68")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public static bool IsOpponentEnabled
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0xE06B6C", Offset = "0xE06B6C", VA = "0xE06B6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xE06C04", Offset = "0xE06C04", VA = "0xE06C04")]
			set
			{
			}
		}
	}
}
[Token(Token = "0x20001D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7F868", Offset = "0xC7F868")]
public class Wielder : MonoBehaviourPun, IPunObservable, IPunInstantiateMagicCallback, ICursable
{
	[Token(Token = "0x20001D2")]
	private struct TrackingPoint
	{
		[Token(Token = "0x4000A64")]
		public const int Origin = 0;

		[Token(Token = "0x4000A65")]
		public const int Head = 1;

		[Token(Token = "0x4000A66")]
		public const int LeftHand = 2;

		[Token(Token = "0x4000A67")]
		public const int RightHand = 3;
	}

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PhotonVoiceView m_photonVoiceView;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_voipAudioSource;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_syncHands;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool m_resetRemoteCharacter;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool m_shouldResetRemoteIK;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int? m_index;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_firstBloodTimeStamp;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_previousDebugMsg;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Photon.Realtime.Player m_owner;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_hasInstantiated;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_isAudioPermissionBlocked;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool m_isChillingClutchActive;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventToken m_matchResetEventToken;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventToken m_playerRecenterEventToken;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VirtualTransform[] m_currentTrackingTransforms;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VirtualTransform[] m_targetTrackingTransforms;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Twin> m_twins;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RemoteCharacter m_remoteCharacterPrefab;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerControl m_playerControl;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BotControl m_botControl;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F908", Offset = "0xC7F908")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7F908", Offset = "0xC7F908")]
	private bool <IsArmorActive>k__BackingField;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F944", Offset = "0xC7F944")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7F944", Offset = "0xC7F944")]
	private StatsData <HealthData>k__BackingField;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F980", Offset = "0xC7F980")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7F980", Offset = "0xC7F980")]
	private StatsData <ManaData>k__BackingField;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F9BC", Offset = "0xC7F9BC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7F9BC", Offset = "0xC7F9BC")]
	private bool <IsPlayer>k__BackingField;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7F9F8", Offset = "0xC7F9F8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7F9F8", Offset = "0xC7F9F8")]
	private bool <IsBot>k__BackingField;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FA34", Offset = "0xC7FA34")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FA34", Offset = "0xC7FA34")]
	private AnimationNetworkRelay <AnimationRelay>k__BackingField;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FA70", Offset = "0xC7FA70")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FA70", Offset = "0xC7FA70")]
	private CharacterControl <CharacterControl>k__BackingField;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FAAC", Offset = "0xC7FAAC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FAAC", Offset = "0xC7FAAC")]
	private RemoteCharacter <RemoteCharacter>k__BackingField;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FAE8", Offset = "0xC7FAE8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FAE8", Offset = "0xC7FAE8")]
	private BotCharacter <BotCharacter>k__BackingField;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FB24", Offset = "0xC7FB24")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FB24", Offset = "0xC7FB24")]
	private bool <IsPaused>k__BackingField;

	[Token(Token = "0x17000125")]
	public bool IsArmorActive
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x26C6714", Offset = "0x26C6714", VA = "0x26C6714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FB60", Offset = "0xC7FB60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x26C671C", Offset = "0x26C671C", VA = "0x26C671C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FB70", Offset = "0xC7FB70")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public StatsData HealthData
	{
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x26C6728", Offset = "0x26C6728", VA = "0x26C6728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FB80", Offset = "0xC7FB80")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x26C6730", Offset = "0x26C6730", VA = "0x26C6730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FB90", Offset = "0xC7FB90")]
		private set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public StatsData ManaData
	{
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x26C6738", Offset = "0x26C6738", VA = "0x26C6738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBA0", Offset = "0xC7FBA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x26C6740", Offset = "0x26C6740", VA = "0x26C6740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBB0", Offset = "0xC7FBB0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000128")]
	private float Health
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x26C6748", Offset = "0x26C6748", VA = "0x26C6748")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x26C6774", Offset = "0x26C6774", VA = "0x26C6774")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	private float Mana
	{
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x26C67B0", Offset = "0x26C67B0", VA = "0x26C67B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x26C67DC", Offset = "0x26C67DC", VA = "0x26C67DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public Tile CurrentTile
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x26C6818", Offset = "0x26C6818", VA = "0x26C6818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBC0", Offset = "0xC7FBC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012B")]
	public bool IsLocal
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x26C684C", Offset = "0x26C684C", VA = "0x26C684C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBD0", Offset = "0xC7FBD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012C")]
	public bool IsPlayer
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x26C68C0", Offset = "0x26C68C0", VA = "0x26C68C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBE0", Offset = "0xC7FBE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x26C68C8", Offset = "0x26C68C8", VA = "0x26C68C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FBF0", Offset = "0xC7FBF0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool IsBot
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x26C68D4", Offset = "0x26C68D4", VA = "0x26C68D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC00", Offset = "0xC7FC00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x26C68DC", Offset = "0x26C68DC", VA = "0x26C68DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC10", Offset = "0xC7FC10")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public AnimationNetworkRelay AnimationRelay
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x26C68E8", Offset = "0x26C68E8", VA = "0x26C68E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC20", Offset = "0xC7FC20")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x26C68F0", Offset = "0x26C68F0", VA = "0x26C68F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC30", Offset = "0xC7FC30")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public Photon.Realtime.Player Owner
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x26C68F8", Offset = "0x26C68F8", VA = "0x26C68F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x26C6974", Offset = "0x26C6974", VA = "0x26C6974")]
		private set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public WandManager Wand
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x26C697C", Offset = "0x26C697C", VA = "0x26C697C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC40", Offset = "0xC7FC40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public CharacterControl CharacterControl
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x26C6844", Offset = "0x26C6844", VA = "0x26C6844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC50", Offset = "0xC7FC50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x26C69C4", Offset = "0x26C69C4", VA = "0x26C69C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC60", Offset = "0xC7FC60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public PlayerControl PlayerControl
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x26C69CC", Offset = "0x26C69CC", VA = "0x26C69CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC70", Offset = "0xC7FC70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public BotControl BotControl
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x26C6A54", Offset = "0x26C6A54", VA = "0x26C6A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC80", Offset = "0xC7FC80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public RemoteCharacter RemoteCharacter
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x26C6ADC", Offset = "0x26C6ADC", VA = "0x26C6ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FC90", Offset = "0xC7FC90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x26C6AE4", Offset = "0x26C6AE4", VA = "0x26C6AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCA0", Offset = "0xC7FCA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public BotCharacter BotCharacter
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x26C6AEC", Offset = "0x26C6AEC", VA = "0x26C6AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCB0", Offset = "0xC7FCB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x26C6AF4", Offset = "0x26C6AF4", VA = "0x26C6AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCC0", Offset = "0xC7FCC0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public CharacterBase Character
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x26C6AFC", Offset = "0x26C6AFC", VA = "0x26C6AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCD0", Offset = "0xC7FCD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	public int ViewID
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x26C6B18", Offset = "0x26C6B18", VA = "0x26C6B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCE0", Offset = "0xC7FCE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000138")]
	public bool IsPaused
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x26C6B4C", Offset = "0x26C6B4C", VA = "0x26C6B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FCF0", Offset = "0xC7FCF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x26C6B54", Offset = "0x26C6B54", VA = "0x26C6B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FD00", Offset = "0xC7FD00")]
		private set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public EffectUtils EffectHandler
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x26C6B60", Offset = "0x26C6B60", VA = "0x26C6B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FD10", Offset = "0xC7FD10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x26C6390", Offset = "0x26C6390", VA = "0x26C6390")]
	public Wielder()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x26C6BB8", Offset = "0x26C6BB8", VA = "0x26C6BB8")]
	public int GetIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x26C6C90", Offset = "0x26C6C90", VA = "0x26C6C90")]
	public void UpdateIndex()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x26C6DA4", Offset = "0x26C6DA4", VA = "0x26C6DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x26C6E08", Offset = "0x26C6E08", VA = "0x26C6E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x26C6F68", Offset = "0x26C6F68", VA = "0x26C6F68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x26C70B0", Offset = "0x26C70B0", VA = "0x26C70B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x26C723C", Offset = "0x26C723C", VA = "0x26C723C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x26C7270", Offset = "0x26C7270", VA = "0x26C7270")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x26C77B0", Offset = "0x26C77B0", VA = "0x26C77B0")]
	private void OnMatchReset(Events.MatchResetEvent eventData)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x26C7928", Offset = "0x26C7928", VA = "0x26C7928")]
	public void OnPlayerDisconnect()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x26C7980", Offset = "0x26C7980", VA = "0x26C7980")]
	private void ResetPlayer()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x26C7B74", Offset = "0x26C7B74", VA = "0x26C7B74")]
	public void ConnectPlayerController(CharacterControl characterControl)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x26C7FE4", Offset = "0x26C7FE4", VA = "0x26C7FE4")]
	public void SetBotOwner()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x26C7AC8", Offset = "0x26C7AC8", VA = "0x26C7AC8")]
	public LayerMask GetLayerMask()
	{
		return default(LayerMask);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x26C8028", Offset = "0x26C8028", VA = "0x26C8028")]
	public CapsuleCollider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x26C8078", Offset = "0x26C8078", VA = "0x26C8078")]
	[PunRPC]
	private void PunPlayHitReponse()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x26C80E0", Offset = "0x26C80E0", VA = "0x26C80E0")]
	public void PlayHitReponse()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x26C816C", Offset = "0x26C816C", VA = "0x26C816C")]
	public void PlayerDeath(float dot)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x26C831C", Offset = "0x26C831C", VA = "0x26C831C")]
	public void SetStats(MatchEndReasonType matchEndReasonType)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x26C85F0", Offset = "0x26C85F0", VA = "0x26C85F0", Slot = "5")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x26C8AA0", Offset = "0x26C8AA0", VA = "0x26C8AA0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x26C9804", Offset = "0x26C9804", VA = "0x26C9804")]
	public void SpawnLocalBotCharacter(Transform parent)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x26C8AF4", Offset = "0x26C8AF4", VA = "0x26C8AF4")]
	private void WriteToStream(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x26C8FAC", Offset = "0x26C8FAC", VA = "0x26C8FAC")]
	private void ReadFromStream(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x26C747C", Offset = "0x26C747C", VA = "0x26C747C")]
	private void TrySyncRemoteCharacter(bool resetRemoteCharacter)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x26C7528", Offset = "0x26C7528", VA = "0x26C7528")]
	private void SyncRemoteWielderPosition()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x26C7604", Offset = "0x26C7604", VA = "0x26C7604")]
	private void TrySyncTwins()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x26C8838", Offset = "0x26C8838", VA = "0x26C8838")]
	private void SpawnRemoteCharacter()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x26C9CA0", Offset = "0x26C9CA0", VA = "0x26C9CA0")]
	public void SetTwinsMaterial(CharacterMaterialType characterMaterialType, Color color, bool blockFlash)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x26C9E48", Offset = "0x26C9E48", VA = "0x26C9E48")]
	public void SetCameraEffectActive(EffectType type, bool active)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x26C9EA8", Offset = "0x26C9EA8", VA = "0x26C9EA8")]
	public void TeleportRandomly(Tile[] tiles)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x26C9F14", Offset = "0x26C9F14", VA = "0x26C9F14")]
	public bool TakeDamage(DamageType damageType, float damage, Vector2 hitDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x26C9F78", Offset = "0x26C9F78", VA = "0x26C9F78")]
	public void AddHealthPickup(float pickupAmount, WandHand pickupHand)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x26CA088", Offset = "0x26CA088", VA = "0x26CA088")]
	public void ChangeHealth(float changeValue)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x26CA0CC", Offset = "0x26CA0CC", VA = "0x26CA0CC")]
	public void ChangeMana(float cost, bool blockManaReg = false)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x26CA118", Offset = "0x26CA118", VA = "0x26CA118")]
	public void ChangeManaUsed(int energy)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x26C7210", Offset = "0x26C7210", VA = "0x26C7210")]
	public void AbortContinuousHit()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x26CA14C", Offset = "0x26CA14C", VA = "0x26CA14C")]
	public void TryCurseWielder(float timeFrame)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x26CA750", Offset = "0x26CA750", VA = "0x26CA750")]
	private void TryCurseTwin(Twin twin)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x26CA4D4", Offset = "0x26CA4D4", VA = "0x26CA4D4")]
	private void CurseTwin(Twin twin, float timeFrame)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x26CA7CC", Offset = "0x26CA7CC", VA = "0x26CA7CC", Slot = "6")]
	public void EnableCurse(float waitTime, CurseLingeringEffect curseLinderingEffect)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x26CA834", Offset = "0x26CA834", VA = "0x26CA834", Slot = "7")]
	public void DisableCurse()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x26CA880", Offset = "0x26CA880", VA = "0x26CA880")]
	public void DisableChillingClutch()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x26CAAB8", Offset = "0x26CAAB8", VA = "0x26CAAB8")]
	public void ApplyChillingClutch()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x26CABE0", Offset = "0x26CABE0", VA = "0x26CABE0")]
	[PunRPC]
	private void PunSetChillingClutchEffectActive(bool active)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x26CAC8C", Offset = "0x26CAC8C", VA = "0x26CAC8C")]
	private void TrySetChillingClutchActiveOnTwin(Twin twin)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x26CA9A0", Offset = "0x26CA9A0", VA = "0x26CA9A0")]
	private void SetChillingClutchActiveOnTwins(bool active)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x26CACD0", Offset = "0x26CACD0", VA = "0x26CACD0")]
	public void SetCurrentTile(int tileId)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x26CAE18", Offset = "0x26CAE18", VA = "0x26CAE18")]
	public void UpdateBotPosition()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x26CAEA8", Offset = "0x26CAEA8", VA = "0x26CAEA8")]
	public void AddTwin(Twin twin)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x26CAF2C", Offset = "0x26CAF2C", VA = "0x26CAF2C")]
	public void RemoveTwin(Twin twin)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x26CAF98", Offset = "0x26CAF98", VA = "0x26CAF98")]
	public void UpdateTrackingTransforms(bool isTrackingHands, VirtualTransform originTransform, VirtualTransform headTransform, VirtualTransform leftHandTransform, VirtualTransform rightHandTransform)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x26C9A90", Offset = "0x26C9A90", VA = "0x26C9A90")]
	private VirtualTransform GetInterpolatedVirtualTransform(int trackingPoint)
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x26C7D7C", Offset = "0x26C7D7C", VA = "0x26C7D7C")]
	[PunRPC]
	protected void PunSetRemoteCharacterTile(int tileId)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x26C7334", Offset = "0x26C7334", VA = "0x26C7334")]
	private void ResetIKUpdate()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x26CB3F0", Offset = "0x26CB3F0", VA = "0x26CB3F0")]
	public void SetFirstBlood()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x26CB590", Offset = "0x26CB590", VA = "0x26CB590")]
	[PunRPC]
	private void PunSetFirstBlood(int viewID, float timeStamp)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x26CB62C", Offset = "0x26CB62C", VA = "0x26CB62C")]
	public void SetPlayerTag(string newTag)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x26C77B4", Offset = "0x26C77B4", VA = "0x26C77B4")]
	private void ResetWielder()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x26CB820", Offset = "0x26CB820", VA = "0x26CB820")]
	private void OnRecenter(Events.OnCameraRecenteredEvent eventData)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x26CB2D8", Offset = "0x26CB2D8", VA = "0x26CB2D8")]
	private void RecenterResetIK()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x26CB848", Offset = "0x26CB848", VA = "0x26CB848")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC7FD60", Offset = "0xC7FD60")]
	public void DebugSpawnRemoteCharacter()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x26C6E0C", Offset = "0x26C6E0C", VA = "0x26C6E0C")]
	private void InitializeVoip()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x26CB84C", Offset = "0x26CB84C", VA = "0x26CB84C")]
	public void ToggleVoipTransmission(bool value)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x26CB940", Offset = "0x26CB940", VA = "0x26CB940")]
	public void ToggleVoipSpeaker(bool value)
	{
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7FD98", Offset = "0xC7FD98")]
	public class PauseManager : PunSingleton<PauseManager>
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FE5C", Offset = "0xC7FE5C")]
		private sealed class <ResumeCountdown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int <i>__1;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PauseManager $this;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002990")]
				[Address(RVA = "0xE0B0EC", Offset = "0xE0B0EC", VA = "0xE0B0EC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002991")]
				[Address(RVA = "0xE0B0F4", Offset = "0xE0B0F4", VA = "0xE0B0F4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600298E")]
			[Address(RVA = "0xE0ADA4", Offset = "0xE0ADA4", VA = "0xE0ADA4")]
			[DebuggerHidden]
			public <ResumeCountdown>c__Iterator0()
			{
			}

			[Token(Token = "0x600298F")]
			[Address(RVA = "0xE0AEC8", Offset = "0xE0AEC8", VA = "0xE0AEC8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002992")]
			[Address(RVA = "0xE0B0FC", Offset = "0xE0B0FC", VA = "0xE0B0FC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002993")]
			[Address(RVA = "0xE0B110", Offset = "0xE0B110", VA = "0xE0B110", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FEBC", Offset = "0xC7FEBC")]
		private sealed class <SetCountDownPosition>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002996")]
				[Address(RVA = "0xE0B2D0", Offset = "0xE0B2D0", VA = "0xE0B2D0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002997")]
				[Address(RVA = "0xE0B2D8", Offset = "0xE0B2D8", VA = "0xE0B2D8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002994")]
			[Address(RVA = "0xE0AEC0", Offset = "0xE0AEC0", VA = "0xE0AEC0")]
			[DebuggerHidden]
			public <SetCountDownPosition>c__Iterator1()
			{
			}

			[Token(Token = "0x6002995")]
			[Address(RVA = "0xE0B174", Offset = "0xE0B174", VA = "0xE0B174", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0xE0B2E0", Offset = "0xE0B2E0", VA = "0xE0B2E0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002999")]
			[Address(RVA = "0xE0B2F4", Offset = "0xE0B2F4", VA = "0xE0B2F4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_initialPauseTime;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_opponentPauseTimeStart;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_pauseTimeRealSeconds;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_pausesLeft;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isLobbyPaused;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_isMatchPaused;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<int> m_pauseStack;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x1700013A")]
		public bool IsGamePaused
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xE08B5C", Offset = "0xE08B5C", VA = "0xE08B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FDFC", Offset = "0xC7FDFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xE08AD0", Offset = "0xE08AD0", VA = "0xE08AD0")]
		public PauseManager()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xE08B78", Offset = "0xE08B78", VA = "0xE08B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xE08C34", Offset = "0xE08C34", VA = "0xE08C34", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xE08CC0", Offset = "0xE08CC0", VA = "0xE08CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xE0900C", Offset = "0xE0900C", VA = "0xE0900C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xE08F14", Offset = "0xE08F14", VA = "0xE08F14")]
		private void DeclareWinner()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE09010", Offset = "0xE09010", VA = "0xE09010")]
		private void OnMatchEnd()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xE090D0", Offset = "0xE090D0", VA = "0xE090D0")]
		public void ForceUnPause()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xE09190", Offset = "0xE09190", VA = "0xE09190")]
		public void PauseGame(bool pause, int id)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xE09C28", Offset = "0xE09C28", VA = "0xE09C28")]
		[PunRPC]
		private void PunPauseLobby(bool pause, int id)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xE0A220", Offset = "0xE0A220", VA = "0xE0A220")]
		[PunRPC]
		private void PunPauseMatch(int id, float pauseTime)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xE0A664", Offset = "0xE0A664", VA = "0xE0A664")]
		[PunRPC]
		private void PunUnPauseMatch(int id)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xE0AD38", Offset = "0xE0AD38", VA = "0xE0AD38")]
		[DebuggerHidden]
		private IEnumerator ResumeCountdown()
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xE0ABEC", Offset = "0xE0ABEC", VA = "0xE0ABEC")]
		private void ResumeMatch()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xE0ADAC", Offset = "0xE0ADAC", VA = "0xE0ADAC")]
		private void UpdateMatchTime()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xE0A03C", Offset = "0xE0A03C", VA = "0xE0A03C")]
		private bool GetEndMatchCriteriaMet()
		{
			return default(bool);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xE09F00", Offset = "0xE09F00", VA = "0xE09F00")]
		private void SetWaitActive(bool active, bool killCountdownSfx = false)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xE0AE64", Offset = "0xE0AE64", VA = "0xE0AE64")]
		[DebuggerHidden]
		private IEnumerator SetCountDownPosition()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Pawns
{
	[Token(Token = "0x20001D4")]
	public abstract class Pawn : MonoBehaviour, IPauseObject, IDamageable
	{
		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC800A0", Offset = "0xC800A0")]
		private sealed class <DisableChillingClutchAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Pawn $this;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600299C")]
				[Address(RVA = "0x103556C", Offset = "0x103556C", VA = "0x103556C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600299D")]
				[Address(RVA = "0x1035574", Offset = "0x1035574", VA = "0x1035574", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1035034", Offset = "0x1035034", VA = "0x1035034")]
			[DebuggerHidden]
			public <DisableChillingClutchAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1035480", Offset = "0x1035480", VA = "0x1035480", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600299E")]
			[Address(RVA = "0x103557C", Offset = "0x103557C", VA = "0x103557C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600299F")]
			[Address(RVA = "0x1035590", Offset = "0x1035590", VA = "0x1035590", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A70")]
		private const float MinManaRegenerationSpeed = 1f;

		[Token(Token = "0x4000A71")]
		private const float DefaultChillingClutchPercentage = 1f;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CapsuleCollider m_capsuleCollider;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_regenerateMana;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float m_damageTakenMultiplier;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected EffectUtils m_effectHandler;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Level m_currentLevel;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected StatsData m_healthData;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected RegeneratingStatsData m_manaData;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected CurseLingeringEffect m_curseEffect;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isChillingClutchActive;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_suddenDeathStartedEventToken;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_sceneLoadInitiatedEventToken;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FF2C", Offset = "0xC7FF2C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FF2C", Offset = "0xC7FF2C")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FF68", Offset = "0xC7FF68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FF68", Offset = "0xC7FF68")]
		private bool <ManaIsInfinite>k__BackingField;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FFA4", Offset = "0xC7FFA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7FFA4", Offset = "0xC7FFA4")]
		private bool <IsTeleportLocked>k__BackingField;

		[Token(Token = "0x1700013B")]
		public float Health
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0x101A57C", Offset = "0x101A57C", VA = "0x101A57C", Slot = "9")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x1034298", Offset = "0x1034298", VA = "0x1034298")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public float Mana
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x10342D4", Offset = "0x10342D4", VA = "0x10342D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x10342FC", Offset = "0x10342FC", VA = "0x10342FC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public bool IsCurseActive
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x1016F3C", Offset = "0x1016F3C", VA = "0x1016F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FFE0", Offset = "0xC7FFE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		public virtual float CurseTimeLeft
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x1034330", Offset = "0x1034330", VA = "0x1034330", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7FFF0", Offset = "0xC7FFF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013F")]
		public bool IsPaused
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x10343D0", Offset = "0x10343D0", VA = "0x10343D0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80000", Offset = "0xC80000")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x10343D8", Offset = "0x10343D8", VA = "0x10343D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80010", Offset = "0xC80010")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool ManaIsInfinite
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x10343E4", Offset = "0x10343E4", VA = "0x10343E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80020", Offset = "0xC80020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x10343EC", Offset = "0x10343EC", VA = "0x10343EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80030", Offset = "0xC80030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool IsTeleportLocked
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x101B398", Offset = "0x101B398", VA = "0x101B398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80040", Offset = "0xC80040")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x10343F8", Offset = "0x10343F8", VA = "0x10343F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80050", Offset = "0xC80050")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public Transform ColliderTransform
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x1034404", Offset = "0x1034404", VA = "0x1034404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80060", Offset = "0xC80060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x101B634", Offset = "0x101B634", VA = "0x101B634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80070", Offset = "0xC80070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public EffectUtils EffectHandler
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x1034430", Offset = "0x1034430", VA = "0x1034430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80080", Offset = "0xC80080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1034288", Offset = "0x1034288", VA = "0x1034288")]
		protected Pawn()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1034438", Offset = "0x1034438", VA = "0x1034438", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x10345F8", Offset = "0x10345F8", VA = "0x10345F8", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x10346D0", Offset = "0x10346D0", VA = "0x10346D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x10346D8", Offset = "0x10346D8", VA = "0x10346D8", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000884")]
		public abstract void CreateHP();

		[Token(Token = "0x6000885")]
		public abstract void CreateMana();

		[Token(Token = "0x6000886")]
		protected abstract bool IsTeleportActive();

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x10347B0", Offset = "0x10347B0", VA = "0x10347B0")]
		private void SetEffectHandler()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1034810", Offset = "0x1034810", VA = "0x1034810", Slot = "17")]
		protected virtual void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1034820", Offset = "0x1034820", VA = "0x1034820", Slot = "18")]
		protected virtual void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1034830", Offset = "0x1034830", VA = "0x1034830")]
		private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1034888", Offset = "0x1034888", VA = "0x1034888")]
		public void CreateRemoteHealthData()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x10348E0", Offset = "0x10348E0", VA = "0x10348E0")]
		public void CreateRemoteManaData()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x103477C", Offset = "0x103477C", VA = "0x103477C")]
		public void SetColliderActive(bool active)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1034938", Offset = "0x1034938", VA = "0x1034938")]
		public void ChangeColliderLayer(int layer)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x103037C", Offset = "0x103037C", VA = "0x103037C")]
		public StatsData GetHealthData()
		{
			return null;
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1030384", Offset = "0x1030384", VA = "0x1030384")]
		public StatsData GetManaData()
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1034984", Offset = "0x1034984", VA = "0x1034984", Slot = "19")]
		public virtual bool TakeDamage(DamageType damageType, float damage, Vector2 hitDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1034A0C", Offset = "0x1034A0C", VA = "0x1034A0C")]
		protected bool TryHealPlayer(float damage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1034A44", Offset = "0x1034A44", VA = "0x1034A44")]
		protected bool IsImmuneToDamageType(DamageType damageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1034A70", Offset = "0x1034A70", VA = "0x1034A70")]
		private bool CanTakeDamage(DamageType type, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1034BF0", Offset = "0x1034BF0", VA = "0x1034BF0", Slot = "20")]
		public virtual void ChangeMana(float changeValue, bool blockManaReg = false)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1034C88", Offset = "0x1034C88", VA = "0x1034C88", Slot = "21")]
		protected virtual void UpdateMana(float changeValue)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1034D18", Offset = "0x1034D18", VA = "0x1034D18", Slot = "22")]
		public virtual void ChangeHealth(float changeValue)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1034DF0", Offset = "0x1034DF0", VA = "0x1034DF0", Slot = "23")]
		protected virtual void UpdateHealth(float changeValue)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1034EB4", Offset = "0x1034EB4", VA = "0x1034EB4")]
		public void SetTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1034EC4", Offset = "0x1034EC4", VA = "0x1034EC4")]
		public void SetManaMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1034F04", Offset = "0x1034F04", VA = "0x1034F04")]
		public void SetDamageReceivedMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1034F0C", Offset = "0x1034F0C", VA = "0x1034F0C")]
		protected void TryDisableActiveCurse()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1034FA8", Offset = "0x1034FA8", VA = "0x1034FA8")]
		[DebuggerHidden]
		private IEnumerator DisableChillingClutchAfterTime(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		public abstract void EnableCurse(float curseTime, CurseLingeringEffect curse);

		[Token(Token = "0x600089F")]
		public abstract void DisableCurse();

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x103503C", Offset = "0x103503C", VA = "0x103503C", Slot = "8")]
		public void ApplyChillingClutch(float chillingClutchPercent, float time)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1034834", Offset = "0x1034834", VA = "0x1034834")]
		private void OnSuddenDeath()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1035120", Offset = "0x1035120", VA = "0x1035120", Slot = "26")]
		public virtual void SetChillingClutchEffectActive(bool isActive)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x10351FC", Offset = "0x10351FC", VA = "0x10351FC", Slot = "27")]
		public virtual void DisableActiveEffects()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x103529C", Offset = "0x103529C", VA = "0x103529C", Slot = "28")]
		public virtual void ResetHealth()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x10352CC", Offset = "0x10352CC", VA = "0x10352CC", Slot = "29")]
		public virtual void ResetMana()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x10352FC", Offset = "0x10352FC", VA = "0x10352FC", Slot = "30")]
		public virtual void Pause(bool pause)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1035308", Offset = "0x1035308", VA = "0x1035308")]
		protected void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1035344", Offset = "0x1035344", VA = "0x1035344", Slot = "31")]
		protected virtual void RegenerateMana()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1035478", Offset = "0x1035478", VA = "0x1035478", Slot = "7")]
		public Transform GetHitTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	public class StatsData : ScriptableObject
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float m_startValue;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80100", Offset = "0xC80100")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80100", Offset = "0xC80100")]
		private float <Max>k__BackingField;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8013C", Offset = "0xC8013C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8013C", Offset = "0xC8013C")]
		private float <Current>k__BackingField;

		[Token(Token = "0x17000145")]
		public float Max
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x1034D10", Offset = "0x1034D10", VA = "0x1034D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80178", Offset = "0xC80178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x10358A0", Offset = "0x10358A0", VA = "0x10358A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80188", Offset = "0xC80188")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float Current
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x103038C", Offset = "0x103038C", VA = "0x103038C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80198", Offset = "0xC80198")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x10358A8", Offset = "0x10358A8", VA = "0x10358A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC801A8", Offset = "0xC801A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public float Fill
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x1030394", Offset = "0x1030394", VA = "0x1030394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC801B8", Offset = "0xC801B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000148")]
		public string ReadableCurrent
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x1035940", Offset = "0x1035940", VA = "0x1035940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC801C8", Offset = "0xC801C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1035604", Offset = "0x1035604", VA = "0x1035604")]
		public StatsData()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1035970", Offset = "0x1035970", VA = "0x1035970")]
		public static StatsData CreateInstance(float maxValue)
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x10359FC", Offset = "0x10359FC", VA = "0x10359FC")]
		public void SetMax(float value)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x10342CC", Offset = "0x10342CC", VA = "0x10342CC")]
		public void SetCurrent(float value)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1035A8C", Offset = "0x1035A8C", VA = "0x1035A8C", Slot = "4")]
		public virtual void Reset()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class RegeneratingStatsData : StatsData
	{
		[Token(Token = "0x4000A85")]
		private const float DefaultMultiplierValue = 1f;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_regenerationMultiplier;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_spellEffectMultiplier;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80214", Offset = "0xC80214")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80214", Offset = "0xC80214")]
		private float <BaseRegenerationSpeed>k__BackingField;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80250", Offset = "0xC80250")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80250", Offset = "0xC80250")]
		private float <RegenerationSpeed>k__BackingField;

		[Token(Token = "0x17000149")]
		public float BaseRegenerationSpeed
		{
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x1035110", Offset = "0x1035110", VA = "0x1035110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8028C", Offset = "0xC8028C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x10357DC", Offset = "0x10357DC", VA = "0x10357DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8029C", Offset = "0xC8029C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public float RegenerationSpeed
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x10353DC", Offset = "0x10353DC", VA = "0x10353DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC802AC", Offset = "0xC802AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x10357E4", Offset = "0x10357E4", VA = "0x10357E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC802BC", Offset = "0xC802BC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event Action<float> OnRegenerationSpeedUpdated
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x103560C", Offset = "0x103560C", VA = "0x103560C")]
			add
			{
			}
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x10356F4", Offset = "0x10356F4", VA = "0x10356F4")]
			remove
			{
			}
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x10355F4", Offset = "0x10355F4", VA = "0x10355F4")]
		public RegeneratingStatsData()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x10357EC", Offset = "0x10357EC", VA = "0x10357EC")]
		public static RegeneratingStatsData CreateInstance(float maxValue, float baseRegenerationSpeed)
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x10358B0", Offset = "0x10358B0", VA = "0x10358B0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x10353E4", Offset = "0x10353E4", VA = "0x10353E4")]
		public float Regenerate(float changeValue)
		{
			return default(float);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1035118", Offset = "0x1035118", VA = "0x1035118")]
		public void SetRegenerationBase(float value)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1034EFC", Offset = "0x1034EFC", VA = "0x1034EFC")]
		public void SetRegenerationMultiplier(float value)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x10358C0", Offset = "0x10358C0", VA = "0x10358C0")]
		public void ResetRegenerationMultiplier()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1035108", Offset = "0x1035108", VA = "0x1035108")]
		public void SetSpellEffectMultiplier(float value)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x10351F0", Offset = "0x10351F0", VA = "0x10351F0")]
		public void ResetSpellEffectMultiplier()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x10358CC", Offset = "0x10358CC", VA = "0x10358CC")]
		private void UpdateRegenerationSpeed()
		{
		}
	}
}
namespace Assets.Scripts.Pickup
{
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC802CC", Offset = "0xC802CC")]
	public class PickupBase : InteractableGameObject, IPauseObject, IWandInteractable
	{
		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80508", Offset = "0xC80508")]
		private sealed class <ActivatePickup>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PickupBase $this;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029A2")]
				[Address(RVA = "0xE0E360", Offset = "0xE0E360", VA = "0xE0E360", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029A3")]
				[Address(RVA = "0xE0E368", Offset = "0xE0E368", VA = "0xE0E368", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029A0")]
			[Address(RVA = "0xE0D56C", Offset = "0xE0D56C", VA = "0xE0D56C")]
			[DebuggerHidden]
			public <ActivatePickup>c__Iterator0()
			{
			}

			[Token(Token = "0x60029A1")]
			[Address(RVA = "0xE0E2A8", Offset = "0xE0E2A8", VA = "0xE0E2A8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029A4")]
			[Address(RVA = "0xE0E370", Offset = "0xE0E370", VA = "0xE0E370", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029A5")]
			[Address(RVA = "0xE0E384", Offset = "0xE0E384", VA = "0xE0E384", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80568", Offset = "0xC80568")]
		private sealed class <RespawnPickup>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PickupBase $this;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000581")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029A8")]
				[Address(RVA = "0xE0E5A8", Offset = "0xE0E5A8", VA = "0xE0E5A8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029A9")]
				[Address(RVA = "0xE0E5B0", Offset = "0xE0E5B0", VA = "0xE0E5B0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029A6")]
			[Address(RVA = "0xE0D5E0", Offset = "0xE0D5E0", VA = "0xE0D5E0")]
			[DebuggerHidden]
			public <RespawnPickup>c__Iterator1()
			{
			}

			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xE0E3E8", Offset = "0xE0E3E8", VA = "0xE0E3E8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029AA")]
			[Address(RVA = "0xE0E5B8", Offset = "0xE0E5B8", VA = "0xE0E5B8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029AB")]
			[Address(RVA = "0xE0E5CC", Offset = "0xE0E5CC", VA = "0xE0E5CC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_wandDestinationOffset;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC80370", Offset = "0xC80370")]
		[SerializeField]
		private PickupType m_pickupType;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_pickupObject;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioSource m_breakAudio;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_initialSpawnTime;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_respawnTime;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_gazeTimeOneHand;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_gazeTimeDualWield;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int m_pickupAmount;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HapticsData m_hapticsData;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tile m_connectedTile;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_gazeTime;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_currentGazeTime;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isGazing;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_moveTowardsPlayer;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool m_suddenDeath;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		private bool m_isDualWielding;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PhotonView m_photonView;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Wielder m_occupant;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_destination;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CustomWaitForSeconds m_respawnWait;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private CustomWaitForSeconds m_initialSpawnWait;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject m_cursedEffect;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private WandHand m_lastWandHand;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ISet<WandHand> m_wandHands;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private EventToken m_wandUiToggledEventToken;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8043C", Offset = "0xC8043C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8043C", Offset = "0xC8043C")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x1700014B")]
		public bool Pickable
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xE0B3E0", Offset = "0xE0B3E0", VA = "0xE0B3E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		public Transform PickUpObject
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xE0B660", Offset = "0xE0B660", VA = "0xE0B660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80478", Offset = "0xC80478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public PickupType PickUpType
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xE0B668", Offset = "0xE0B668", VA = "0xE0B668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80488", Offset = "0xC80488")]
			get
			{
				return default(PickupType);
			}
		}

		[Token(Token = "0x1700014E")]
		public bool IsPaused
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xE0B670", Offset = "0xE0B670", VA = "0xE0B670", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80498", Offset = "0xC80498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xE0B678", Offset = "0xE0B678", VA = "0xE0B678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC804A8", Offset = "0xC804A8")]
			private set
			{
			}
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xE0B358", Offset = "0xE0B358", VA = "0xE0B358")]
		public PickupBase()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xE0B684", Offset = "0xE0B684", VA = "0xE0B684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xE0B7C8", Offset = "0xE0B7C8", VA = "0xE0B7C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xE0B92C", Offset = "0xE0B92C", VA = "0xE0B92C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xE0C2A8", Offset = "0xE0C2A8", VA = "0xE0C2A8")]
		public void OnMatchEnd()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xE0C4E0", Offset = "0xE0C4E0", VA = "0xE0C4E0")]
		public void OnSuddenDeath()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xE0C610", Offset = "0xE0C610", VA = "0xE0C610")]
		public void ResetPickup()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xE0C6D0", Offset = "0xE0C6D0", VA = "0xE0C6D0")]
		private void OnTileOccupied(bool occupied)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xE0CA7C", Offset = "0xE0CA7C", VA = "0xE0CA7C")]
		private void OnWandUiToggled(Events.WandUiToggledEvent eventData)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xE0CA94", Offset = "0xE0CA94", VA = "0xE0CA94")]
		public void UpdatePickupCursedActiveStatus(bool setActive)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xE0CCD4", Offset = "0xE0CCD4", VA = "0xE0CCD4")]
		public void SetStartValues()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xE0CD9C", Offset = "0xE0CD9C", VA = "0xE0CD9C")]
		public void SetActive(Tile connectedTile)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xE0D358", Offset = "0xE0D358", VA = "0xE0D358")]
		[PunRPC]
		private void PunResetPickup(bool enable)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xE0D3E0", Offset = "0xE0D3E0", VA = "0xE0D3E0")]
		public void SetPickupActive(bool active)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xE0C2DC", Offset = "0xE0C2DC", VA = "0xE0C2DC")]
		[PunRPC]
		private void PunSetPickupActive(bool active)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xE0D3E8", Offset = "0xE0D3E8", VA = "0xE0D3E8")]
		[PunRPC]
		private void PunDestroyPickup()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xE0D500", Offset = "0xE0D500", VA = "0xE0D500")]
		[DebuggerHidden]
		private IEnumerator ActivatePickup()
		{
			return null;
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xE0D574", Offset = "0xE0D574", VA = "0xE0D574")]
		[DebuggerHidden]
		private IEnumerator RespawnPickup()
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xE0D128", Offset = "0xE0D128", VA = "0xE0D128")]
		private void SpawnAddOn()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xE0BFA8", Offset = "0xE0BFA8", VA = "0xE0BFA8")]
		private void Pickup()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xE0D5E8", Offset = "0xE0D5E8", VA = "0xE0D5E8", Slot = "10")]
		public void Interact(WandHand wandHand)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xE0D5EC", Offset = "0xE0D5EC", VA = "0xE0D5EC", Slot = "11")]
		public void LookEnter(WandHand wandHand)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xE0C900", Offset = "0xE0C900", VA = "0xE0C900", Slot = "12")]
		public void LookExit(WandHand wandHand)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xE0D980", Offset = "0xE0D980", VA = "0xE0D980", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xE0DB78", Offset = "0xE0DB78", VA = "0xE0DB78", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xE0DCA4", Offset = "0xE0DCA4", VA = "0xE0DCA4")]
		public void DestroyPickup()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xE0BF44", Offset = "0xE0BF44", VA = "0xE0BF44")]
		private void PickupAfterMovingToPlayer()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xE0DD24", Offset = "0xE0DD24", VA = "0xE0DD24", Slot = "13")]
		protected virtual void OnPlayerPickup()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xE0E090", Offset = "0xE0E090", VA = "0xE0E090")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xE0E0C0", Offset = "0xE0E0C0", VA = "0xE0E0C0", Slot = "9")]
		public void Pause(bool paused)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xE0D6DC", Offset = "0xE0D6DC", VA = "0xE0D6DC")]
		private void TryTriggerHaptics()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xE0D8B0", Offset = "0xE0D8B0", VA = "0xE0D8B0")]
		private void TryCancelHaptics(WandHand wandHand)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC805C8", Offset = "0xC805C8")]
	public class PickupManager : PunSingleton<PickupManager>
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickupBase[] m_pickUps;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Tile[] m_pickUpTiles;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PickupBase> m_superPickUps;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PickupBase> m_regularPickups;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Tile> m_tilesForSuperPickUps;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tile m_currentTile;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_suddenDeathStartedEventToken;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_curseActivationEventToken;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xE0E630", Offset = "0xE0E630", VA = "0xE0E630")]
		public PickupManager()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xE0E720", Offset = "0xE0E720", VA = "0xE0E720", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xE0E7F4", Offset = "0xE0E7F4", VA = "0xE0E7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xE0EC68", Offset = "0xE0EC68", VA = "0xE0EC68")]
		private void OnCurseActivated(Events.CurseActivationEvent eventData)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xE0EDAC", Offset = "0xE0EDAC", VA = "0xE0EDAC")]
		private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xE0EDB0", Offset = "0xE0EDB0", VA = "0xE0EDB0")]
		private void OnSuddenDeath()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xE0EE28", Offset = "0xE0EE28", VA = "0xE0EE28")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xE0EF9C", Offset = "0xE0EF9C", VA = "0xE0EF9C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xE0EFA0", Offset = "0xE0EFA0", VA = "0xE0EFA0")]
		private void OnMatchEnd()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xE0EE4C", Offset = "0xE0EE4C", VA = "0xE0EE4C")]
		private void ResetPickups()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xE0DFE4", Offset = "0xE0DFE4", VA = "0xE0DFE4")]
		public void PickNextSuperPickUp()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xE0F02C", Offset = "0xE0F02C", VA = "0xE0F02C")]
		[PunRPC]
		private void PunPickNextSuperPickUp()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xE0F1EC", Offset = "0xE0F1EC", VA = "0xE0F1EC")]
		[PunRPC]
		private void PunActivateSuperPickUp(int randomTileIndex)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xE0EC98", Offset = "0xE0EC98", VA = "0xE0EC98")]
		private void UpdatePickupsCursedActiveStatus(bool setActive)
		{
		}
	}
}
namespace Assets.Scripts.Platform.Achievements
{
	[Token(Token = "0x20001D9")]
	public struct Achievement
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8066C", Offset = "0xC8066C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8066C", Offset = "0xC8066C")]
		private Assets.Scripts.Enums.AchievementType <Type>k__BackingField;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC806A8", Offset = "0xC806A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC806A8", Offset = "0xC806A8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC806E4", Offset = "0xC806E4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC806E4", Offset = "0xC806E4")]
		private int <Id>k__BackingField;

		[Token(Token = "0x1700014F")]
		public Assets.Scripts.Enums.AchievementType Type
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xE0F484", Offset = "0xE0F484", VA = "0xE0F484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80720", Offset = "0xC80720")]
			get
			{
				return default(Assets.Scripts.Enums.AchievementType);
			}
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xE0F48C", Offset = "0xE0F48C", VA = "0xE0F48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80730", Offset = "0xC80730")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public string Name
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xE0F494", Offset = "0xE0F494", VA = "0xE0F494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80740", Offset = "0xC80740")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xE0F49C", Offset = "0xE0F49C", VA = "0xE0F49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80750", Offset = "0xC80750")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public int Id
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xE0F4A4", Offset = "0xE0F4A4", VA = "0xE0F4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80760", Offset = "0xC80760")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xE0F4AC", Offset = "0xE0F4AC", VA = "0xE0F4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80770", Offset = "0xC80770")]
			private set
			{
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xE0F474", Offset = "0xE0F474", VA = "0xE0F474")]
		public Achievement(Assets.Scripts.Enums.AchievementType type, string name, int id)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public static class AchievementRepository
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Assets.Scripts.Enums.AchievementType, Achievement> sm_achievementsByType;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Achievement[] sm_achievementsByIndex;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80780", Offset = "0xC80780")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80780", Offset = "0xC80780")]
		private static Achievement <InvalidAchievement>k__BackingField;

		[Token(Token = "0x17000152")]
		private static Achievement InvalidAchievement
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xE0F780", Offset = "0xE0F780", VA = "0xE0F780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC807BC", Offset = "0xC807BC")]
			get
			{
				return default(Achievement);
			}
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xE0F4B4", Offset = "0xE0F4B4", VA = "0xE0F4B4")]
		static AchievementRepository()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xE0F680", Offset = "0xE0F680", VA = "0xE0F680")]
		private static void AddAchievement(Assets.Scripts.Enums.AchievementType type, string name, int id)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xE0F7F8", Offset = "0xE0F7F8", VA = "0xE0F7F8")]
		public static Achievement GetAchievement(Assets.Scripts.Enums.AchievementType type)
		{
			return default(Achievement);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xE0F988", Offset = "0xE0F988", VA = "0xE0F988")]
		public static Achievement GetAchievement(int id)
		{
			return default(Achievement);
		}
	}
	[Token(Token = "0x20001DB")]
	public interface IAchievementHandler
	{
		[Token(Token = "0x17000153")]
		bool HandlesIncrementalAchievements
		{
			[Token(Token = "0x6000905")]
			get;
		}

		[Token(Token = "0x6000906")]
		IPromise UnlockAchievement(Achievement achievement);

		[Token(Token = "0x6000907")]
		IPromise ClearAchievement(Achievement achievement);

		[Token(Token = "0x6000908")]
		IPromise<Status> GetAchievementStatus(Achievement achievement);

		[Token(Token = "0x6000909")]
		IPromise IncrementAchievement(Achievement achievement, int steps);
	}
	[Token(Token = "0x20001DC")]
	public interface IAchievementPlatform
	{
		[Token(Token = "0x17000154")]
		IAchievementHandler AchievementHandler
		{
			[Token(Token = "0x600090A")]
			get;
		}
	}
	[Token(Token = "0x20001DD")]
	public enum Status
	{
		[Token(Token = "0x4000AB9")]
		Earned,
		[Token(Token = "0x4000ABA")]
		NotEarned
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001DE")]
	public class AssetHandler : MonoBehaviour
	{
		[Token(Token = "0x20001DF")]
		private struct CombinedConstants
		{
			[Token(Token = "0x4000AC6")]
			public const string Character = "character";

			[Token(Token = "0x4000AC7")]
			public const string Sound = "sound";

			[Token(Token = "0x4000AC8")]
			public const string UI = "ui";
		}

		[Token(Token = "0x20001E0")]
		private struct PcConstants
		{
			[Token(Token = "0x4000AC9")]
			public const string Platform = "pc_platform";

			[Token(Token = "0x4000ACA")]
			public const string Spells = "pc_spells";

			[Token(Token = "0x4000ACB")]
			public const string UIWorkshop = "pc_ui.workshop";

			[Token(Token = "0x4000ACC")]
			public const string UIBasement = "pc_ui.basement";

			[Token(Token = "0x4000ACD")]
			public const string Default = "pc";

			[Token(Token = "0x4000ACE")]
			public const string Vanity = "pc_vanity";

			[Token(Token = "0x4000ACF")]
			public const string Vfx = "pc_vfx";

			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly string[] BaseBundles;
		}

		[Token(Token = "0x20001E1")]
		private struct PS4Constants
		{
			[Token(Token = "0x4000AD1")]
			public const string Platform = "ps4_platform";
		}

		[Token(Token = "0x20001E2")]
		private struct MobileConstants
		{
			[Token(Token = "0x20001E3")]
			public struct HighEnd
			{
				[Token(Token = "0x4000AD7")]
				public const string Platform = "hm_platform";

				[Token(Token = "0x4000AD8")]
				public const string Spells = "hm_spells";
			}

			[Token(Token = "0x20001E4")]
			public struct LowEnd
			{
				[Token(Token = "0x4000AD9")]
				public const string Platform = "m_platform";

				[Token(Token = "0x4000ADA")]
				public const string Spells = "m_spells";
			}

			[Token(Token = "0x4000AD2")]
			public const string UIWorkshop = "m_ui.workshop";

			[Token(Token = "0x4000AD3")]
			public const string UIBasement = "m_ui.basement";

			[Token(Token = "0x4000AD4")]
			public const string Vanity = "m_vanity";

			[Token(Token = "0x4000AD5")]
			public const string Vfx = "m_vfx";

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly string[] BaseBundles;
		}

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80848", Offset = "0xC80848")]
		private sealed class <_ReloadBundle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<string> bundlesToHaveLoaded;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] <bundlesToUnload>__0;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PlatformType platform;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal string[] bundlesToLoad;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal AssetHandler $this;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x17000583")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029AE")]
				[Address(RVA = "0xE12388", Offset = "0xE12388", VA = "0xE12388", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029AF")]
				[Address(RVA = "0xE12390", Offset = "0xE12390", VA = "0xE12390", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xE106EC", Offset = "0xE106EC", VA = "0xE106EC")]
			[DebuggerHidden]
			public <_ReloadBundle>c__Iterator0()
			{
			}

			[Token(Token = "0x60029AD")]
			[Address(RVA = "0xE12218", Offset = "0xE12218", VA = "0xE12218", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B0")]
			[Address(RVA = "0xE12398", Offset = "0xE12398", VA = "0xE12398", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xE123AC", Offset = "0xE123AC", VA = "0xE123AC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC808A8", Offset = "0xC808A8")]
		private sealed class <_LoadBundles>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x200059B")]
			private sealed class <_LoadBundles>c__AnonStorey2
			{
				[Token(Token = "0x4001FC5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal string bundle;

				[Token(Token = "0x4001FC6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal <_LoadBundles>c__Iterator1 <>f__ref$1;

				[Token(Token = "0x60029BC")]
				[Address(RVA = "0xE12098", Offset = "0xE12098", VA = "0xE12098")]
				public <_LoadBundles>c__AnonStorey2()
				{
				}

				[Token(Token = "0x60029BD")]
				[Address(RVA = "0xE12128", Offset = "0xE12128", VA = "0xE12128")]
				internal void <>m__0(bool success)
				{
				}
			}

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <i>__1;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] bundlesToLoad;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool isAndroid;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal AssetHandler $this;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <_LoadBundles>c__AnonStorey2 $locvar0;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029B4")]
				[Address(RVA = "0xE120A0", Offset = "0xE120A0", VA = "0xE120A0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B5")]
				[Address(RVA = "0xE120A8", Offset = "0xE120A8", VA = "0xE120A8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029B2")]
			[Address(RVA = "0xE1079C", Offset = "0xE1079C", VA = "0xE1079C")]
			[DebuggerHidden]
			public <_LoadBundles>c__Iterator1()
			{
			}

			[Token(Token = "0x60029B3")]
			[Address(RVA = "0xE11E70", Offset = "0xE11E70", VA = "0xE11E70", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B6")]
			[Address(RVA = "0xE120B0", Offset = "0xE120B0", VA = "0xE120B0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029B7")]
			[Address(RVA = "0xE120C4", Offset = "0xE120C4", VA = "0xE120C4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80908", Offset = "0xC80908")]
		private sealed class <LoadGeneralAssetBundles>c__AnonStorey4
		{
			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PlatformType platform;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal AssetHandler $this;

			[Token(Token = "0x60029B8")]
			[Address(RVA = "0xE10F40", Offset = "0xE10F40", VA = "0xE10F40")]
			public <LoadGeneralAssetBundles>c__AnonStorey4()
			{
			}
		}

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80918", Offset = "0xC80918")]
		private sealed class <LoadGeneralAssetBundles>c__AnonStorey3
		{
			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string bundleName;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal <LoadGeneralAssetBundles>c__AnonStorey4 <>f__ref$4;

			[Token(Token = "0x60029B9")]
			[Address(RVA = "0xE10F48", Offset = "0xE10F48", VA = "0xE10F48")]
			public <LoadGeneralAssetBundles>c__AnonStorey3()
			{
			}

			[Token(Token = "0x60029BA")]
			[Address(RVA = "0xE12410", Offset = "0xE12410", VA = "0xE12410")]
			internal bool <>m__0(AssetBundle x)
			{
				return default(bool);
			}

			[Token(Token = "0x60029BB")]
			[Address(RVA = "0xE12460", Offset = "0xE12460", VA = "0xE12460")]
			internal void <>m__1(bool success)
			{
			}
		}

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> m_sceneObjects;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AssetBundleManager sm_assetBundleManager;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] m_bundles;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_numberOfBundlesLoaded;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_sceneBundleName;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_specificSceneBundlesLoaded;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_sceneLoadInitiatedEventToken;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_initiateStartupSceneLoadEventToken;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_playFabLoadingEventToken;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC807CC", Offset = "0xC807CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC807CC", Offset = "0xC807CC")]
		private bool <HasLoaded>k__BackingField;

		[Token(Token = "0x17000155")]
		public bool HasLoaded
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xE0FBD4", Offset = "0xE0FBD4", VA = "0xE0FBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80808", Offset = "0xC80808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xE0FBDC", Offset = "0xE0FBDC", VA = "0xE0FBDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80818", Offset = "0xC80818")]
			private set
			{
			}
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xE0FB10", Offset = "0xE0FB10", VA = "0xE0FB10")]
		public AssetHandler()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xE0FBE8", Offset = "0xE0FBE8", VA = "0xE0FBE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xE0FCAC", Offset = "0xE0FCAC", VA = "0xE0FCAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xE0FE64", Offset = "0xE0FE64", VA = "0xE0FE64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xE0FF24", Offset = "0xE0FF24", VA = "0xE0FF24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xE0FF48", Offset = "0xE0FF48", VA = "0xE0FF48")]
		private void OnInitiateStartupSceneLoad(Events.InitiateStartupSceneLoadEvent eventData)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xE10080", Offset = "0xE10080", VA = "0xE10080")]
		private void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xE10104", Offset = "0xE10104", VA = "0xE10104")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xE10384", Offset = "0xE10384", VA = "0xE10384")]
		private List<string> GetBundlesToLoad(Level level, PlatformType platform)
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xE0FFCC", Offset = "0xE0FFCC", VA = "0xE0FFCC")]
		public void LoadAndUnloadLevelBundles(Level level, PlatformType platform)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xE10630", Offset = "0xE10630", VA = "0xE10630")]
		[DebuggerHidden]
		private IEnumerator _ReloadBundle(string[] bundlesToLoad, List<string> bundlesToHaveLoaded, PlatformType platform)
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xE106F4", Offset = "0xE106F4", VA = "0xE106F4")]
		[DebuggerHidden]
		private IEnumerator _LoadBundles(bool isAndroid, string[] bundlesToLoad)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xE107A4", Offset = "0xE107A4", VA = "0xE107A4")]
		private void UnloadBundles(string[] bundlesToUnload)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xE10144", Offset = "0xE10144", VA = "0xE10144")]
		private void DefineAndLoadSceneBundle(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xE10958", Offset = "0xE10958", VA = "0xE10958")]
		private void OnPlayFabLoadingEvent(Events.PlayFabLoadingEvent eventData)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xE109C0", Offset = "0xE109C0", VA = "0xE109C0")]
		public void DefineGeneralAssetBundles(Platform platform)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE10CE4", Offset = "0xE10CE4", VA = "0xE10CE4")]
		private void LoadGeneralAssetBundles(PlatformType platform)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xE10F50", Offset = "0xE10F50", VA = "0xE10F50")]
		public void LoadPlatformAssetBundle(PlatformType platform, Action<bool> loaded)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE11130", Offset = "0xE11130", VA = "0xE11130")]
		private void BundleLoaded(bool result, PlatformType platform)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE1121C", Offset = "0xE1121C", VA = "0xE1121C")]
		private void BundlesLoaded(PlatformType platform)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE10898", Offset = "0xE10898", VA = "0xE10898")]
		private void LoadSceneBundle()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xE11228", Offset = "0xE11228", VA = "0xE11228")]
		private void SceneBundleLoaded(bool result)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xE10BD8", Offset = "0xE10BD8", VA = "0xE10BD8")]
		private void ChangePlatformMaterials(PlatformType platform)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xE11364", Offset = "0xE11364", VA = "0xE11364")]
		public void UpdateRendererMaterials(Renderer[] renderers)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xE115DC", Offset = "0xE115DC", VA = "0xE115DC")]
		public Material ReplaceMaterial(Material material)
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xE11808", Offset = "0xE11808", VA = "0xE11808")]
		public Material[] ReplaceMaterials(Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xE11B1C", Offset = "0xE11B1C", VA = "0xE11B1C")]
		public GameObject ReplaceSpell(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		public T LoadAsset<T>(AssetBundleType assetBundleType, string assetName) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		public T LoadAsset<T>(AssetBundleType assetBundleType, string assetName, PlatformType platform) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600092A")]
		public AssetBundleRequest LoadAssetAsync<T>(AssetBundleType assetBundleType, string assetName) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		public AssetBundleRequest LoadAssetAsync<T>(AssetBundleType assetBundleType, string assetName, PlatformType platform) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xE11CAC", Offset = "0xE11CAC", VA = "0xE11CAC")]
		public GameObject[] LoadSceneAssets()
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xE11230", Offset = "0xE11230", VA = "0xE11230")]
		private void OnSceneBundlesLoaded(bool loadedSuccessfully)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xE11D20", Offset = "0xE11D20", VA = "0xE11D20")]
		private void DestroyObjects()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class AssetMaterialChanger : MonoBehaviour
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC80928", Offset = "0xC80928")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xE128F4", Offset = "0xE128F4", VA = "0xE128F4")]
		public AssetMaterialChanger()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xE128FC", Offset = "0xE128FC", VA = "0xE128FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xE12900", Offset = "0xE12900", VA = "0xE12900")]
		public void ChangeMaterials()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform
{
	[Token(Token = "0x20001E6")]
	public interface IPlatform
	{
		[Token(Token = "0x17000156")]
		bool HasInitialized
		{
			[Token(Token = "0x6000934")]
			get;
		}

		[Token(Token = "0x17000157")]
		bool SupportsPositionalTracking
		{
			[Token(Token = "0x6000935")]
			get;
		}

		[Token(Token = "0x17000158")]
		ulong UserUniqueID
		{
			[Token(Token = "0x6000936")]
			get;
			[Token(Token = "0x6000937")]
			set;
		}

		[Token(Token = "0x17000159")]
		string SignInErrorMessage
		{
			[Token(Token = "0x6000938")]
			get;
		}

		[Token(Token = "0x1700015A")]
		string AccountID
		{
			[Token(Token = "0x6000939")]
			get;
			[Token(Token = "0x600093A")]
			set;
		}

		[Token(Token = "0x1700015B")]
		string EncryptionID
		{
			[Token(Token = "0x600093B")]
			get;
			[Token(Token = "0x600093C")]
			set;
		}

		[Token(Token = "0x1700015C")]
		PlatformType Type
		{
			[Token(Token = "0x600093D")]
			get;
		}

		[Token(Token = "0x1700015D")]
		string PistolGripName
		{
			[Token(Token = "0x600093E")]
			get;
		}

		[Token(Token = "0x1700015E")]
		string WandGripName
		{
			[Token(Token = "0x600093F")]
			get;
		}

		[Token(Token = "0x6000940")]
		void InitializeCore();

		[Token(Token = "0x6000941")]
		void FetchLoggedInUser();

		[Token(Token = "0x6000942")]
		void OnSystemMenuPress(Level Level, bool applicationPaused);

		[Token(Token = "0x6000943")]
		void SetPlatformPartyChatActive(bool active);

		[Token(Token = "0x6000944")]
		IPlatformInput CreateInputController();

		[Token(Token = "0x6000945")]
		IList<Language> GetAvailableLanguages();
	}
	[Token(Token = "0x20001E7")]
	public interface IHapticsPlatform : IPlatform
	{
		[Token(Token = "0x6000946")]
		void TriggerHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand);

		[Token(Token = "0x6000947")]
		void CancelHaptics(VibrateController controller, WandHand wandHand);

		[Token(Token = "0x6000948")]
		void UpdatePrimaryHand(bool primaryIsRight);
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001E8")]
	public struct LeaderboardEntry
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Rank;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Score;
	}
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x20001E9")]
	public enum LeaderboardType
	{
		[Token(Token = "0x4000AE0")]
		RatingGlobal,
		[Token(Token = "0x4000AE1")]
		RatingUser,
		[Token(Token = "0x4000AE2")]
		RatingPlayStationGlobal,
		[Token(Token = "0x4000AE3")]
		RatingPlayStationUser
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001EA")]
	public class MiVrPlatform : Platform
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlatformInput m_inputController;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ControlType m_controlType;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_focusRotation;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_tempNewRating;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_tempNewSeasonScore;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong m_opponentId;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasInitialized;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_gotUserInitializationCallback;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LoginFinishedEventArgs m_platformInitializationState;

		[Token(Token = "0x1700015F")]
		public override PlatformType Type
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0xE13404", Offset = "0xE13404", VA = "0xE13404", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80974", Offset = "0xC80974")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x17000160")]
		public override ControlType ControlType
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xE1340C", Offset = "0xE1340C", VA = "0xE1340C", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80984", Offset = "0xC80984")]
			get
			{
				return default(ControlType);
			}
		}

		[Token(Token = "0x17000161")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xE13414", Offset = "0xE13414", VA = "0xE13414", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80994", Offset = "0xC80994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public override bool HasInitialized
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xE1347C", Offset = "0xE1347C", VA = "0xE1347C", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809A4", Offset = "0xC809A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public override string SignInErrorMessage
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xE13484", Offset = "0xE13484", VA = "0xE13484", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809B4", Offset = "0xC809B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0xE134CC", Offset = "0xE134CC", VA = "0xE134CC", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809C4", Offset = "0xC809C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public override string PlatformName
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0xE134D4", Offset = "0xE134D4", VA = "0xE134D4", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809D4", Offset = "0xC809D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0xE13568", Offset = "0xE13568", VA = "0xE13568", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809E4", Offset = "0xC809E4")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x17000167")]
		public int DefaultCpuThrottle
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xE13570", Offset = "0xE13570", VA = "0xE13570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC809F4", Offset = "0xC809F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000168")]
		public int DefaultGpuThrottle
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xE13578", Offset = "0xE13578", VA = "0xE13578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A04", Offset = "0xC80A04")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xE133F4", Offset = "0xE133F4", VA = "0xE133F4")]
		public MiVrPlatform()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xE13580", Offset = "0xE13580", VA = "0xE13580")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xE1365C", Offset = "0xE1365C", VA = "0xE1365C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xE13738", Offset = "0xE13738", VA = "0xE13738")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xE1380C", Offset = "0xE1380C", VA = "0xE1380C", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xE138AC", Offset = "0xE138AC", VA = "0xE138AC", Slot = "47")]
		public override void CheckEntitlement()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xE13910", Offset = "0xE13910", VA = "0xE13910")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xE13B28", Offset = "0xE13B28", VA = "0xE13B28")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xE13B30", Offset = "0xE13B30", VA = "0xE13B30", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xE13BFC", Offset = "0xE13BFC", VA = "0xE13BFC")]
		private void GetUserCallback(object sender, LoginFinishedEventArgs e)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xE13C0C", Offset = "0xE13C0C", VA = "0xE13C0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xE13918", Offset = "0xE13918", VA = "0xE13918")]
		private void CompensateRotation(bool rotate)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xE13F28", Offset = "0xE13F28", VA = "0xE13F28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xE1401C", Offset = "0xE1401C", VA = "0xE1401C", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xE14228", Offset = "0xE14228", VA = "0xE14228", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xE13F3C", Offset = "0xE13F3C", VA = "0xE13F3C")]
		private void SetDefaultRenderLevel()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xE13FA4", Offset = "0xE13FA4", VA = "0xE13FA4")]
		private void SetThrottleLevels()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class OculusAndroidPlatform : OculusPlatform
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly IReadOnlyList<WandInput> m_gearVrWandInputs;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_focusRotation;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private PlatformType? m_type;

		[Token(Token = "0x17000169")]
		public override string PlatformName
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xE144D0", Offset = "0xE144D0", VA = "0xE144D0", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A14", Offset = "0xC80A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public override PlatformType Type
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0xE14564", Offset = "0xE14564", VA = "0xE14564", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A24", Offset = "0xC80A24")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x1700016B")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0xE147A0", Offset = "0xE147A0", VA = "0xE147A0", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A34", Offset = "0xC80A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016C")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0xE147A8", Offset = "0xE147A8", VA = "0xE147A8", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A44", Offset = "0xC80A44")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x1700016D")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0xE147B0", Offset = "0xE147B0", VA = "0xE147B0", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A54", Offset = "0xC80A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public int DefaultCpuThrottle
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0xE14844", Offset = "0xE14844", VA = "0xE14844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A64", Offset = "0xC80A64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016F")]
		public int DefaultGpuThrottle
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0xE14870", Offset = "0xE14870", VA = "0xE14870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A74", Offset = "0xC80A74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xE14400", Offset = "0xE14400", VA = "0xE14400")]
		public OculusAndroidPlatform()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xE1489C", Offset = "0xE1489C", VA = "0xE1489C", Slot = "59")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xE148A0", Offset = "0xE148A0", VA = "0xE148A0", Slot = "58")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xE148B0", Offset = "0xE148B0", VA = "0xE148B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xE14A94", Offset = "0xE14A94", VA = "0xE14A94", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xE14D30", Offset = "0xE14D30", VA = "0xE14D30")]
		public void CreateDefaultInputController(OVRPlugin.SystemHeadset systemHeadsetType)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xE14ED4", Offset = "0xE14ED4", VA = "0xE14ED4")]
		protected void CreateDefaultQuestController()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xE14BD8", Offset = "0xE14BD8", VA = "0xE14BD8")]
		private void CreateDefaultRemoteController()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xE14E6C", Offset = "0xE14E6C", VA = "0xE14E6C")]
		private void CreateDefaultGOController()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xE14FB0", Offset = "0xE14FB0", VA = "0xE14FB0")]
		private void CreateDefaultGearVRController()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xE148D4", Offset = "0xE148D4", VA = "0xE148D4")]
		private void SetDefaultRenderLevel()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xE149D0", Offset = "0xE149D0", VA = "0xE149D0")]
		private void SetThrottleLevels()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xE145E0", Offset = "0xE145E0", VA = "0xE145E0")]
		private PlatformType GetPlatformType()
		{
			return default(PlatformType);
		}
	}
	[Token(Token = "0x20001EC")]
	public abstract class OculusPlatform : Platform
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IPlatformInput m_inputController;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ControlType m_controlType;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80A84", Offset = "0xC80A84")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80A84", Offset = "0xC80A84")]
		private string <OculusPlatformSpecificID>k__BackingField;

		[Token(Token = "0x17000170")]
		public string OculusPlatformSpecificID
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0xE15018", Offset = "0xE15018", VA = "0xE15018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80AC0", Offset = "0xC80AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0xE15020", Offset = "0xE15020", VA = "0xE15020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80AD0", Offset = "0xC80AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public override bool HasInitialized
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0xE15028", Offset = "0xE15028", VA = "0xE15028", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80AE0", Offset = "0xC80AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		public override ControlType ControlType
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xE1508C", Offset = "0xE1508C", VA = "0xE1508C", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80AF0", Offset = "0xC80AF0")]
			get
			{
				return default(ControlType);
			}
		}

		[Token(Token = "0x17000173")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0xE15094", Offset = "0xE15094", VA = "0xE15094", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B00", Offset = "0xC80B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public override string SignInErrorMessage
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xE150FC", Offset = "0xE150FC", VA = "0xE150FC", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B10", Offset = "0xC80B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public override string DefaultUserName
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0xE15144", Offset = "0xE15144", VA = "0xE15144", Slot = "43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B20", Offset = "0xC80B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xE144C8", Offset = "0xE144C8", VA = "0xE144C8")]
		protected OculusPlatform()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xE148A8", Offset = "0xE148A8", VA = "0xE148A8", Slot = "58")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xE151C0", Offset = "0xE151C0", VA = "0xE151C0", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xE153A8", Offset = "0xE153A8", VA = "0xE153A8")]
		private void GetEntitlementCallback(Message message)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xE15650", Offset = "0xE15650", VA = "0xE15650", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xE157FC", Offset = "0xE157FC", VA = "0xE157FC")]
		private void GetUserCallback(Message<Oculus.Platform.Models.User> userMessage)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xE15A70", Offset = "0xE15A70", VA = "0xE15A70")]
		private void GetOrgUserCallback(Message<OrgScopedID> orgScopeMessage)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xE15CF0", Offset = "0xE15CF0", VA = "0xE15CF0")]
		public void GetUserNonce(Message<UserProof>.Callback callback)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xE15D5C", Offset = "0xE15D5C", VA = "0xE15D5C", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xE15F10", Offset = "0xE15F10", VA = "0xE15F10")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC80B30", Offset = "0xC80B30")]
		protected void CreateDefaultEditorController()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xE15F14", Offset = "0xE15F14", VA = "0xE15F14", Slot = "48")]
		public override void SetPlatformPartyChatActive(bool active)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public abstract class OpenVRPlatform : Platform, IHapticsPlatform, IPlatform
	{
		[Token(Token = "0x4000AF3")]
		private const uint GamepadDeviceIndex = 16u;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly StringBuilder m_inputStringBuilder;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly StringBuilder m_knuckleInputStringBuilder;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly StringBuilder m_touchInputStringBuilder;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly StringBuilder m_viveControllerInputStringBuilder;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly StringBuilder m_cosmosInputStringBuilder;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly StringBuilder m_windowsMixedRealityInputStringBuilder;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Texture m_overrideTexture;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected string m_userNamePrefix;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool m_isUserAllowedToPlay;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		protected bool m_hasInitialized;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ControlType m_controlType;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IPlatformInput m_inputController;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IPlatformHaptics m_primaryHaptics;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IPlatformHaptics m_secondaryHaptics;

		[Token(Token = "0x17000176")]
		public override string SignInErrorMessage
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xE1606C", Offset = "0xE1606C", VA = "0xE1606C", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B78", Offset = "0xC80B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xE160B4", Offset = "0xE160B4", VA = "0xE160B4", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B88", Offset = "0xC80B88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public override PlatformType Type
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xE160BC", Offset = "0xE160BC", VA = "0xE160BC", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80B98", Offset = "0xC80B98")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x17000179")]
		public override ControlType ControlType
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xE160C4", Offset = "0xE160C4", VA = "0xE160C4", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BA8", Offset = "0xC80BA8")]
			get
			{
				return default(ControlType);
			}
		}

		[Token(Token = "0x1700017A")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xE160CC", Offset = "0xE160CC", VA = "0xE160CC", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BB8", Offset = "0xC80BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public override bool HasInitialized
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xE16134", Offset = "0xE16134", VA = "0xE16134", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BC8", Offset = "0xC80BC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public override float AdjustedHeight
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xE1613C", Offset = "0xE1613C", VA = "0xE1613C", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BD8", Offset = "0xC80BD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017D")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xE1616C", Offset = "0xE1616C", VA = "0xE1616C", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BE8", Offset = "0xC80BE8")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x1700017E")]
		public override string PistolGripName
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xE16194", Offset = "0xE16194", VA = "0xE16194", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80BF8", Offset = "0xC80BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public override string WandGripName
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xE16204", Offset = "0xE16204", VA = "0xE16204", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C08", Offset = "0xC80C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xE15F28", Offset = "0xE15F28", VA = "0xE15F28")]
		protected OpenVRPlatform()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xE16274", Offset = "0xE16274", VA = "0xE16274", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xE165C4", Offset = "0xE165C4", VA = "0xE165C4")]
		private IPlatformInput CreateDefaultInput()
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xE16878", Offset = "0xE16878", VA = "0xE16878", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xE169F4", Offset = "0xE169F4", VA = "0xE169F4")]
		protected void SetOverride()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xE16BF4", Offset = "0xE16BF4", VA = "0xE16BF4")]
		protected void ClearOverride()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xE1671C", Offset = "0xE1671C", VA = "0xE1671C")]
		private void CreateViveHapticsController()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xE16C70", Offset = "0xE16C70", VA = "0xE16C70", Slot = "60")]
		public void UpdatePrimaryHand(bool primaryIsRight)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xE16DBC", Offset = "0xE16DBC", VA = "0xE16DBC", Slot = "58")]
		public void TriggerHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xE1700C", Offset = "0xE1700C", VA = "0xE1700C", Slot = "59")]
		public void CancelHaptics(VibrateController controller, WandHand wandHand = WandHand.Right)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class PicoNeo2Platform : PicoPlatform
	{
		[Token(Token = "0x17000180")]
		public override PlatformType Type
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xE172AC", Offset = "0xE172AC", VA = "0xE172AC", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C18", Offset = "0xC80C18")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x17000181")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xE172B4", Offset = "0xE172B4", VA = "0xE172B4", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C28", Offset = "0xC80C28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xE172BC", Offset = "0xE172BC", VA = "0xE172BC", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C38", Offset = "0xC80C38")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x17000183")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xE172C4", Offset = "0xE172C4", VA = "0xE172C4", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C48", Offset = "0xC80C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xE1722C", Offset = "0xE1722C", VA = "0xE1722C")]
		public PicoNeo2Platform()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xE1732C", Offset = "0xE1732C", VA = "0xE1732C", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xE1738C", Offset = "0xE1738C", VA = "0xE1738C", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xE173F0", Offset = "0xE173F0", VA = "0xE173F0", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class PicoPlatform : Platform
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IReadOnlyList<WandInput> sm_picoWandInputs;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ControlType m_controlType;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IPlatformInput m_inputController;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_hasInitialized;

		[Token(Token = "0x17000184")]
		public override PlatformType Type
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0xE1759C", Offset = "0xE1759C", VA = "0xE1759C", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C58", Offset = "0xC80C58")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x17000185")]
		public override string DefaultUserName
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xE175A4", Offset = "0xE175A4", VA = "0xE175A4", Slot = "43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C68", Offset = "0xC80C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public override ControlType ControlType
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xE17620", Offset = "0xE17620", VA = "0xE17620", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C78", Offset = "0xC80C78")]
			get
			{
				return default(ControlType);
			}
		}

		[Token(Token = "0x17000187")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xE17628", Offset = "0xE17628", VA = "0xE17628", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C88", Offset = "0xC80C88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public override bool HasInitialized
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xE17690", Offset = "0xE17690", VA = "0xE17690", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80C98", Offset = "0xC80C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000189")]
		public override string SignInErrorMessage
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xE17698", Offset = "0xE17698", VA = "0xE17698", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80CA8", Offset = "0xC80CA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xE176E0", Offset = "0xE176E0", VA = "0xE176E0", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80CB8", Offset = "0xC80CB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xE176E8", Offset = "0xE176E8", VA = "0xE176E8", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80CC8", Offset = "0xC80CC8")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xE1729C", Offset = "0xE1729C", VA = "0xE1729C")]
		public PicoPlatform()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xE176F0", Offset = "0xE176F0", VA = "0xE176F0", Slot = "45")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xE17354", Offset = "0xE17354", VA = "0xE17354", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xE17810", Offset = "0xE17810", VA = "0xE17810", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xE179D4", Offset = "0xE179D4", VA = "0xE179D4")]
		public void LoginUserCallback(string errorMessage)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xE17BFC", Offset = "0xE17BFC", VA = "0xE17BFC")]
		public void UserInfoCallback(string username, string openid)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xE17FE4", Offset = "0xE17FE4", VA = "0xE17FE4")]
		public static bool IsEmail(string email)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xE17DC4", Offset = "0xE17DC4", VA = "0xE17DC4")]
		private void GetUserCallback(string username, string openid)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xE18070", Offset = "0xE18070", VA = "0xE18070", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xE18120", Offset = "0xE18120", VA = "0xE18120", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public abstract class Platform : MonoBehaviour, IPlatform
	{
		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80E4C", Offset = "0xC80E4C")]
		private sealed class <TryPlayOnline>c__AnonStorey1
		{
			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool requireMultiplayerFeatures;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action<bool> onCheckComplete;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Platform $this;

			[Token(Token = "0x60029BE")]
			[Address(RVA = "0xE187E0", Offset = "0xE187E0", VA = "0xE187E0")]
			public <TryPlayOnline>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xE18D60", Offset = "0xE18D60", VA = "0xE18D60")]
			internal void <>m__0(bool parentalAccess)
			{
			}

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0xE18E64", Offset = "0xE18E64", VA = "0xE18E64")]
			internal void <>m__1(bool multiplayerAccess)
			{
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80E5C", Offset = "0xC80E5C")]
		private sealed class <AfterDelay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action action;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029C3")]
				[Address(RVA = "0xE18CD8", Offset = "0xE18CD8", VA = "0xE18CD8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C4")]
				[Address(RVA = "0xE18CE0", Offset = "0xE18CE0", VA = "0xE18CE0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0xE18BF0", Offset = "0xE18BF0", VA = "0xE18BF0")]
			[DebuggerHidden]
			public <AfterDelay>c__Iterator0()
			{
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0xE18BF8", Offset = "0xE18BF8", VA = "0xE18BF8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C5")]
			[Address(RVA = "0xE18CE8", Offset = "0xE18CE8", VA = "0xE18CE8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xE18CFC", Offset = "0xE18CFC", VA = "0xE18CFC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80CD8", Offset = "0xC80CD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80CD8", Offset = "0xC80CD8")]
		private string <AccountID>k__BackingField;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80D14", Offset = "0xC80D14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80D14", Offset = "0xC80D14")]
		private string <EncryptionID>k__BackingField;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80D50", Offset = "0xC80D50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80D50", Offset = "0xC80D50")]
		private ulong <UserUniqueID>k__BackingField;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IAPController m_iapController;

		[Token(Token = "0x1700018C")]
		public abstract bool HasInitialized
		{
			[Token(Token = "0x60009BA")]
			get;
		}

		[Token(Token = "0x1700018D")]
		public abstract bool SupportsPositionalTracking
		{
			[Token(Token = "0x60009BB")]
			get;
		}

		[Token(Token = "0x1700018E")]
		public abstract PlatformType Type
		{
			[Token(Token = "0x60009BC")]
			get;
		}

		[Token(Token = "0x1700018F")]
		public abstract string SignInErrorMessage
		{
			[Token(Token = "0x60009BD")]
			get;
		}

		[Token(Token = "0x17000190")]
		public abstract ControlType ControlType
		{
			[Token(Token = "0x60009C2")]
			get;
		}

		[Token(Token = "0x17000191")]
		public abstract IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x60009C3")]
			get;
		}

		[Token(Token = "0x17000192")]
		public abstract WandGrip DefaultWandGrip
		{
			[Token(Token = "0x60009C4")]
			get;
		}

		[Token(Token = "0x17000193")]
		public virtual string AccountID
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0xE181B8", Offset = "0xE181B8", VA = "0xE181B8", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80D8C", Offset = "0xC80D8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0xE181C0", Offset = "0xE181C0", VA = "0xE181C0", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80D9C", Offset = "0xC80D9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public virtual string EncryptionID
		{
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0xE181C8", Offset = "0xE181C8", VA = "0xE181C8", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DAC", Offset = "0xC80DAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0xE181D0", Offset = "0xE181D0", VA = "0xE181D0", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DBC", Offset = "0xC80DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public virtual ulong UserUniqueID
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xE181D8", Offset = "0xE181D8", VA = "0xE181D8", Slot = "37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DCC", Offset = "0xC80DCC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xE181E0", Offset = "0xE181E0", VA = "0xE181E0", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DDC", Offset = "0xC80DDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public virtual float AdjustedHeight
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xE181E8", Offset = "0xE181E8", VA = "0xE181E8", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DEC", Offset = "0xC80DEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000197")]
		public virtual string PistolGripName
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xE181F4", Offset = "0xE181F4", VA = "0xE181F4", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80DFC", Offset = "0xC80DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public virtual string WandGripName
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xE1823C", Offset = "0xE1823C", VA = "0xE1823C", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80E0C", Offset = "0xC80E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public virtual string PlatformName
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xE18284", Offset = "0xE18284", VA = "0xE18284", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80E1C", Offset = "0xC80E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public virtual string DefaultUserName
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xE18330", Offset = "0xE18330", VA = "0xE18330", Slot = "43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80E2C", Offset = "0xC80E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xE133FC", Offset = "0xE133FC", VA = "0xE133FC")]
		protected Platform()
		{
		}

		[Token(Token = "0x60009BE")]
		public abstract void InitializeCore();

		[Token(Token = "0x60009BF")]
		public abstract void OnSystemMenuPress(Level level, bool applicationPaused);

		[Token(Token = "0x60009C0")]
		public abstract void FetchLoggedInUser();

		[Token(Token = "0x60009C1")]
		public abstract IPlatformInput CreateInputController();

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xE183C4", Offset = "0xE183C4", VA = "0xE183C4")]
		public CharacterType[] GetAllCharacters()
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xE1843C", Offset = "0xE1843C", VA = "0xE1843C")]
		public ISet<CharacterType> GetBaseCharactersNonAlloc()
		{
			return null;
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xE184A4", Offset = "0xE184A4", VA = "0xE184A4")]
		public ISet<CharacterType> GetSpecialCharactersNonAlloc()
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xE1850C", Offset = "0xE1850C", VA = "0xE1850C", Slot = "44")]
		public virtual IList<Language> GetAvailableLanguages()
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xE18574", Offset = "0xE18574", VA = "0xE18574")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xE185D8", Offset = "0xE185D8", VA = "0xE185D8", Slot = "45")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xE1863C", Offset = "0xE1863C", VA = "0xE1863C", Slot = "46")]
		public virtual void OnHomeButtonHold()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xE18640", Offset = "0xE18640", VA = "0xE18640", Slot = "47")]
		public virtual void CheckEntitlement()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xE18644", Offset = "0xE18644", VA = "0xE18644", Slot = "48")]
		public virtual void SetPlatformPartyChatActive(bool active)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xE18648", Offset = "0xE18648", VA = "0xE18648")]
		public void CreateIAPController(Action completed)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xE18678", Offset = "0xE18678", VA = "0xE18678")]
		public GameAccess GetGameAccess()
		{
			return default(GameAccess);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xE186A4", Offset = "0xE186A4", VA = "0xE186A4")]
		public void BuyFullGame()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xE186A8", Offset = "0xE186A8", VA = "0xE186A8")]
		public string GetFullGamePrice()
		{
			return null;
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xE186F0", Offset = "0xE186F0", VA = "0xE186F0", Slot = "49")]
		public virtual void TryPlayOnline(Action<bool> onCheckComplete, bool requireMultiplayerFeatures = true)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xE187E8", Offset = "0xE187E8", VA = "0xE187E8", Slot = "50")]
		public virtual void FilterStrings(string[] values, Action<string[]> onComplete)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xE1885C", Offset = "0xE1885C", VA = "0xE1885C", Slot = "51")]
		public virtual void FilterStrings(IList<string> values, Action<string[]> onComplete)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xE188E8", Offset = "0xE188E8", VA = "0xE188E8", Slot = "52")]
		public virtual void FilterString(string value, Action<string> onComplete)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xE1895C", Offset = "0xE1895C", VA = "0xE1895C", Slot = "53")]
		public virtual void CheckOnlineServiceAccess(Action<bool> onCheckComplete)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xE189C0", Offset = "0xE189C0", VA = "0xE189C0", Slot = "54")]
		public virtual void CheckMultiPlayerAccess(Action<bool> onCheckComplete)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xE18A24", Offset = "0xE18A24", VA = "0xE18A24", Slot = "55")]
		public virtual void CheckOnlineFeatureParentalAccess(Action<bool> onCheckComplete)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xE18A88", Offset = "0xE18A88", VA = "0xE18A88", Slot = "56")]
		public virtual void CheckVoiceChatAccess(Action<bool> onCheckComplete, bool displayErrorMessageOnFailure = true)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xE18AEC", Offset = "0xE18AEC", VA = "0xE18AEC", Slot = "57")]
		public virtual void GetAuthCode(Action<string, int> onSuccess, Action<string> onFailure)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xE18B64", Offset = "0xE18B64", VA = "0xE18B64")]
		[DebuggerHidden]
		private IEnumerator AfterDelay(float delay, Action action)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F1")]
	public class PlatformLoader : MonoBehaviour
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WandsBuildSettings sm_buildSettings;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AssetHandler sm_assetHandler;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xE18ED8", Offset = "0xE18ED8", VA = "0xE18ED8")]
		public PlatformLoader()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xE18EE0", Offset = "0xE18EE0", VA = "0xE18EE0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xC80EBC", Offset = "0xC80EBC")]
		public static void InitPlatformLoading()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xE18FF8", Offset = "0xE18FF8", VA = "0xE18FF8")]
		public void LoadPlatformBundles()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xE190B4", Offset = "0xE190B4", VA = "0xE190B4")]
		public void PlatformBundleLoaded(bool loadedSuccessfully)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xE19654", Offset = "0xE19654", VA = "0xE19654")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC80ED0", Offset = "0xC80ED0")]
		private void TryLoadFromAnyScene()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xE19164", Offset = "0xE19164", VA = "0xE19164")]
		private Platform InstantiatePlatform(PlatformType type)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xE19358", Offset = "0xE19358", VA = "0xE19358")]
		private void InstantiateGameControl(Platform platform)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class PlatformSupport
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DateTime? Date;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xE19658", Offset = "0xE19658", VA = "0xE19658")]
		public PlatformSupport()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public static class PlatformSupportControl
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSupport sm_platformSupport;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xE19660", Offset = "0xE19660", VA = "0xE19660")]
		public static void Initialize(PlatformSupport platformSupport)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xE19838", Offset = "0xE19838", VA = "0xE19838")]
		public static bool HasDeprecationDate()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xE198A0", Offset = "0xE198A0", VA = "0xE198A0")]
		public static DateTime GetDate()
		{
			return default(DateTime);
		}
	}
	[Token(Token = "0x20001F4")]
	public class PlayStationPlatform : Platform, IAchievementPlatform
	{
		[Token(Token = "0x20001F5")]
		public enum AccessStatus : byte
		{
			[Token(Token = "0x4000B1C")]
			Unchecked,
			[Token(Token = "0x4000B1D")]
			HasAccess,
			[Token(Token = "0x4000B1E")]
			DoesntHaveAccess
		}

		[Token(Token = "0x20001F6")]
		public static class VrDeviceNames
		{
			[Token(Token = "0x4000B1F")]
			public const string None = "None";

			[Token(Token = "0x4000B20")]
			public const string Unknown = "Unknown";

			[Token(Token = "0x4000B21")]
			public const string PlayStationVr = "PlayStationVR";
		}

		[Token(Token = "0x20001F7")]
		private enum HmdStatus
		{
			[Token(Token = "0x4000B23")]
			Off,
			[Token(Token = "0x4000B24")]
			On,
			[Token(Token = "0x4000B25")]
			Booting,
			[Token(Token = "0x4000B26")]
			ShuttingDown
		}

		[Token(Token = "0x20001F8")]
		private enum Controller
		{
			[Token(Token = "0x4000B28")]
			None,
			[Token(Token = "0x4000B29")]
			DualShock,
			[Token(Token = "0x4000B2A")]
			Move
		}

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<WandInput> sm_supportedWandInputs;

		[Token(Token = "0x4000B0F")]
		private const float SignInDialogShowDelay = 2f;

		[Token(Token = "0x4000B10")]
		private const int PsPlusFeatureNotifyInterval = 1;

		[Token(Token = "0x4000B11")]
		private const int Ps4InputSlots = 4;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InControlManager m_inControl;

		[Token(Token = "0x4000B13")]
		private const float RenderScale = 1.4f;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_sinceLastPlusFeatureNotify;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_hasInitialized;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Controller m_pluggedControllerType;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayStationDualShockInput m_dualShockInput;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayStationMotionControllerInput m_moveInput;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80F18", Offset = "0xC80F18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80F18", Offset = "0xC80F18")]
		private IAchievementHandler <AchievementHandler>k__BackingField;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80F54", Offset = "0xC80F54")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC80F54", Offset = "0xC80F54")]
		private static bool <IsControllerConnectedAndValidated>k__BackingField;

		[Token(Token = "0x1700019B")]
		public override bool HasInitialized
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xE19A50", Offset = "0xE19A50", VA = "0xE19A50", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80F90", Offset = "0xC80F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xE19A58", Offset = "0xE19A58", VA = "0xE19A58", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FA0", Offset = "0xC80FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		public override PlatformType Type
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xE19A60", Offset = "0xE19A60", VA = "0xE19A60", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FB0", Offset = "0xC80FB0")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x1700019E")]
		public override string SignInErrorMessage
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xE19A68", Offset = "0xE19A68", VA = "0xE19A68", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FC0", Offset = "0xC80FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public override ControlType ControlType
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xE19AB8", Offset = "0xE19AB8", VA = "0xE19AB8", Slot = "30")]
			get
			{
				return default(ControlType);
			}
		}

		[Token(Token = "0x170001A0")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0xE19AE0", Offset = "0xE19AE0", VA = "0xE19AE0", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xE19B48", Offset = "0xE19B48", VA = "0xE19B48", Slot = "32")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x170001A2")]
		public IAchievementHandler AchievementHandler
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xE19B50", Offset = "0xE19B50", VA = "0xE19B50", Slot = "58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FD0", Offset = "0xC80FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xE19B58", Offset = "0xE19B58", VA = "0xE19B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FE0", Offset = "0xC80FE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public static bool IsControllerConnectedAndValidated
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xE19B60", Offset = "0xE19B60", VA = "0xE19B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC80FF0", Offset = "0xC80FF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xE19BC8", Offset = "0xE19BC8", VA = "0xE19BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81000", Offset = "0xC81000")]
			private set
			{
			}
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xE19A48", Offset = "0xE19A48", VA = "0xE19A48")]
		public PlayStationPlatform()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xE19C38", Offset = "0xE19C38", VA = "0xE19C38")]
		private void Start()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xE19D0C", Offset = "0xE19D0C", VA = "0xE19D0C", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xE1A130", Offset = "0xE1A130", VA = "0xE1A130")]
		private IPlatformInput CreateDualShockInput()
		{
			return null;
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xE1A1F8", Offset = "0xE1A1F8", VA = "0xE1A1F8")]
		private IPlatformInput CreateMoveInput()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xE1A33C", Offset = "0xE1A33C", VA = "0xE1A33C", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xE1A340", Offset = "0xE1A340", VA = "0xE1A340", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xE1A344", Offset = "0xE1A344", VA = "0xE1A344", Slot = "27")]
		public override void OnSystemMenuPress(Level level, bool applicationPaused)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class QuestPlatform : OculusAndroidPlatform, IHapticsPlatform, IPlatform
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IPlatformHaptics m_primaryHaptics;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IPlatformHaptics m_secondaryHaptics;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WorkshopTile m_currentWorkshopTile;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_workshopTileChangedEventToken;

		[Token(Token = "0x170001A4")]
		public override string PlatformName
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xE1A5C0", Offset = "0xE1A5C0", VA = "0xE1A5C0", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81010", Offset = "0xC81010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public override PlatformType Type
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xE1A66C", Offset = "0xE1A66C", VA = "0xE1A66C", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81020", Offset = "0xC81020")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x170001A6")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xE1A674", Offset = "0xE1A674", VA = "0xE1A674", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81030", Offset = "0xC81030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xE1A67C", Offset = "0xE1A67C", VA = "0xE1A67C", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81040", Offset = "0xC81040")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x170001A8")]
		public override IReadOnlyList<WandInput> SupportedWandInputs
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xE1A684", Offset = "0xE1A684", VA = "0xE1A684", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81050", Offset = "0xC81050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xE1A5BC", Offset = "0xE1A5BC", VA = "0xE1A5BC")]
		public QuestPlatform()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xE1A6EC", Offset = "0xE1A6EC", VA = "0xE1A6EC", Slot = "59")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xE1A7A8", Offset = "0xE1A7A8", VA = "0xE1A7A8", Slot = "58")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xE1A82C", Offset = "0xE1A82C", VA = "0xE1A82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xE1AB80", Offset = "0xE1AB80", VA = "0xE1AB80")]
		private void OnWorkshopTileChanged(Events.WorkshopTileChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xE1ABB0", Offset = "0xE1ABB0", VA = "0xE1ABB0", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xE1ABDC", Offset = "0xE1ABDC", VA = "0xE1ABDC")]
		private void CreateTouchHapticsController()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xE1AD70", Offset = "0xE1AD70", VA = "0xE1AD70", Slot = "62")]
		public void UpdatePrimaryHand(bool primaryIsRight)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xE1AEBC", Offset = "0xE1AEBC", VA = "0xE1AEBC", Slot = "60")]
		public void TriggerHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xE1B10C", Offset = "0xE1B10C", VA = "0xE1B10C", Slot = "61")]
		public void CancelHaptics(VibrateController controller, WandHand wandHand = WandHand.Right)
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class RiftPlatform : OculusPlatform, IHapticsPlatform, IPlatform
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IPlatformHaptics m_primaryHaptics;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IPlatformHaptics m_secondaryHaptics;

		[Token(Token = "0x170001A9")]
		public override PlatformType Type
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xE1B334", Offset = "0xE1B334", VA = "0xE1B334", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81060", Offset = "0xC81060")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x170001AA")]
		public override float AdjustedHeight
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xE1B33C", Offset = "0xE1B33C", VA = "0xE1B33C", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81070", Offset = "0xC81070")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AB")]
		public override bool SupportsPositionalTracking
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xE1B3B8", Offset = "0xE1B3B8", VA = "0xE1B3B8", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81080", Offset = "0xC81080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public override WandGrip DefaultWandGrip
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xE1B3C0", Offset = "0xE1B3C0", VA = "0xE1B3C0", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81090", Offset = "0xC81090")]
			get
			{
				return default(WandGrip);
			}
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xE1B32C", Offset = "0xE1B32C", VA = "0xE1B32C")]
		public RiftPlatform()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xE1B3C8", Offset = "0xE1B3C8", VA = "0xE1B3C8", Slot = "29")]
		public override IPlatformInput CreateInputController()
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xE1B590", Offset = "0xE1B590", VA = "0xE1B590")]
		private void CreateTouchHapticsController()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xE1B704", Offset = "0xE1B704", VA = "0xE1B704", Slot = "61")]
		public void UpdatePrimaryHand(bool primaryIsRight)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xE1B850", Offset = "0xE1B850", VA = "0xE1B850", Slot = "59")]
		public void TriggerHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xE1BAA0", Offset = "0xE1BAA0", VA = "0xE1BAA0", Slot = "60")]
		public void CancelHaptics(VibrateController controller, WandHand wandHand = WandHand.Right)
		{
		}
	}
}
namespace Cortopia.Scripts.Platform
{
	[Token(Token = "0x20001FB")]
	public class SteamPlatform : OpenVRPlatform
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1035A98", Offset = "0x1035A98", VA = "0x1035A98")]
		public SteamPlatform()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1035AA0", Offset = "0x1035AA0", VA = "0x1035AA0", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1035AA4", Offset = "0x1035AA4", VA = "0x1035AA4", Slot = "26")]
		public override void InitializeCore()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001FD")]
		public class TrackedDevice
		{
			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1035AB8", Offset = "0x1035AB8", VA = "0x1035AB8")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x20001FE")]
		[Flags]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x4000B3A")]
			DualShock4 = 1,
			[Token(Token = "0x4000B3B")]
			Aim = 2,
			[Token(Token = "0x4000B3C")]
			Move = 4
		}

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrackedDevice deviceMovePrimary;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1035AA8", Offset = "0x1035AA8", VA = "0x1035AA8")]
		public TrackedPlayStationDevices()
		{
		}
	}
}
namespace Assets.Scripts.Platform
{
	[Token(Token = "0x20001FF")]
	public class TrailRendererAssetMaterialChanger : MonoBehaviour
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xE1BCC0", Offset = "0xE1BCC0", VA = "0xE1BCC0")]
		public TrailRendererAssetMaterialChanger()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xE1BCC8", Offset = "0xE1BCC8", VA = "0xE1BCC8")]
		private void Awake()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class ViveportLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC810D0", Offset = "0xC810D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC810D0", Offset = "0xC810D0")]
		private readonly Action<string> <OnCompleted>k__BackingField;

		[Token(Token = "0x170001AD")]
		public Action<string> OnCompleted
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0xE1BE50", Offset = "0xE1BE50", VA = "0xE1BE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8110C", Offset = "0xC8110C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xE1BE24", Offset = "0xE1BE24", VA = "0xE1BE24")]
		public ViveportLicenseChecker(Action<string> onCompleted)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xE1BE58", Offset = "0xE1BE58", VA = "0xE1BE58", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xE1C02C", Offset = "0xE1C02C", VA = "0xE1C02C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class ViveportPlatform : OpenVRPlatform
	{
		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8115C", Offset = "0xC8115C")]
		private sealed class <UserInitializationCompleted>c__AnonStorey0
		{
			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int errorCode;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ViveportPlatform $this;

			[Token(Token = "0x60029C7")]
			[Address(RVA = "0xE1C738", Offset = "0xE1C738", VA = "0xE1C738")]
			public <UserInitializationCompleted>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0xE1CB58", Offset = "0xE1CB58", VA = "0xE1CB58")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string sm_appId;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string sm_apiKey;

		[Token(Token = "0x170001AE")]
		public override PlatformType Type
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0xE1C144", Offset = "0xE1C144", VA = "0xE1C144", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8111C", Offset = "0xC8111C")]
			get
			{
				return default(PlatformType);
			}
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xE1C140", Offset = "0xE1C140", VA = "0xE1C140")]
		public ViveportPlatform()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xE1C14C", Offset = "0xE1C14C", VA = "0xE1C14C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xE1C1F4", Offset = "0xE1C1F4", VA = "0xE1C1F4", Slot = "26")]
		public override void InitializeCore()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xE1C324", Offset = "0xE1C324", VA = "0xE1C324", Slot = "47")]
		public override void CheckEntitlement()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xE1C424", Offset = "0xE1C424", VA = "0xE1C424", Slot = "28")]
		public override void FetchLoggedInUser()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xE1C538", Offset = "0xE1C538", VA = "0xE1C538")]
		private void CoreInitializationCompleted(int errorCode)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xE1C638", Offset = "0xE1C638", VA = "0xE1C638")]
		private void UserInitializationCompleted(int errorCode)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xE1C740", Offset = "0xE1C740", VA = "0xE1C740")]
		private void ShutdownCompleted(int errorCode)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xE1C870", Offset = "0xE1C870", VA = "0xE1C870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8112C", Offset = "0xC8112C")]
		private void <CheckEntitlement>m__0(string errorMsg)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xE1C968", Offset = "0xE1C968", VA = "0xE1C968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8113C", Offset = "0xC8113C")]
		private void <FetchLoggedInUser>m__1()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xE1CA60", Offset = "0xE1CA60", VA = "0xE1CA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8114C", Offset = "0xC8114C")]
		private void <CheckEntitlement>m__2()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class WandsLeaderboards : MonoBehaviour
	{
		[Token(Token = "0x2000203")]
		public delegate void LeaderboardLoaded(LeaderboardType leaderboardIndex);

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<LeaderboardType, List<LeaderboardEntry>> m_entries;

		[Token(Token = "0x170001AF")]
		public Dictionary<LeaderboardType, List<LeaderboardEntry>> Entries
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xE1CE88", Offset = "0xE1CE88", VA = "0xE1CE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xE1CE80", Offset = "0xE1CE80", VA = "0xE1CE80")]
		public WandsLeaderboards()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xE1CE90", Offset = "0xE1CE90", VA = "0xE1CE90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xE1CE98", Offset = "0xE1CE98", VA = "0xE1CE98")]
		public void Initialize(GetLeaderboardResult result, GetLeaderboardAroundPlayerResult resultAroundPlayer)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xE1D0FC", Offset = "0xE1D0FC", VA = "0xE1D0FC")]
		public void Load(ICloudManager cloudManager)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xE1CF28", Offset = "0xE1CF28", VA = "0xE1CF28")]
		private void OnGlobalLeaderboardLoaded(GetLeaderboardResult result)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xE1D010", Offset = "0xE1D010", VA = "0xE1D010")]
		private void OnUserLeaderboardLoaded(GetLeaderboardAroundPlayerResult result)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xE1D934", Offset = "0xE1D934", VA = "0xE1D934")]
		private void OnPlayStationGlobalLeaderboardLoaded(GetLeaderboardResult result)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xE1DA20", Offset = "0xE1DA20", VA = "0xE1DA20")]
		private void OnPlayStationUserLeaderboardLoaded(GetLeaderboardAroundPlayerResult result)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xE1D184", Offset = "0xE1D184", VA = "0xE1D184")]
		private void LoadGlobalLeaderboard(ICloudManager cloudManager)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xE1D3C8", Offset = "0xE1D3C8", VA = "0xE1D3C8")]
		private void LoadUserLeaderboard(ICloudManager cloudManager)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xE1DB0C", Offset = "0xE1DB0C", VA = "0xE1DB0C")]
		public static bool IsEmail(string email)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xE1D60C", Offset = "0xE1D60C", VA = "0xE1D60C")]
		private static List<LeaderboardEntry> ParseLeaderboardEntries(List<PlayerLeaderboardEntry> resultLeaderboard, bool isPlayStationLeaderboard)
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xE1DB98", Offset = "0xE1DB98", VA = "0xE1DB98")]
		private static string RemovedUserNamePrefix(string userName, bool isPlayStationLeaderboard)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xC8116C", Offset = "0xC8116C")]
	public class AimData : ScriptableObject
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask AimHitMask;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask InteractableHitMask;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask DragHitMask;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask SnapHitMask;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask TeleportHitMask;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC811DC", Offset = "0xC811DC")]
		public float MinAimDistance;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxAimDistance;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC811F8", Offset = "0xC811F8")]
		public float AimDistanceMultiplier;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture[] AimReticles;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1035C48", Offset = "0x1035C48", VA = "0x1035C48")]
		public AimData()
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC81218", Offset = "0xC81218")]
	public class BotCharacter : CharacterBase
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CharacterHitSfxHandler m_sfxHandler;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BotAI m_botAI;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8129C", Offset = "0xC8129C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8129C", Offset = "0xC8129C")]
		private bool <IsArmorActive>k__BackingField;

		[Token(Token = "0x170001B0")]
		public bool IsArmorActive
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xE1E4C4", Offset = "0xE1E4C4", VA = "0xE1E4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC812D8", Offset = "0xC812D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xE1E4CC", Offset = "0xE1E4CC", VA = "0xE1E4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC812E8", Offset = "0xC812E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public CharacterType CharacterType
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xE1E4D8", Offset = "0xE1E4D8", VA = "0xE1E4D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC812F8", Offset = "0xC812F8")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x170001B2")]
		public WandType WandType
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xE1E4E0", Offset = "0xE1E4E0", VA = "0xE1E4E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81308", Offset = "0xC81308")]
			get
			{
				return default(WandType);
			}
		}

		[Token(Token = "0x170001B3")]
		public AimInput AimInput
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xE1E4E8", Offset = "0xE1E4E8", VA = "0xE1E4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81318", Offset = "0xC81318")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x170001B4")]
		public WandHand WandHand
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xE1E4F0", Offset = "0xE1E4F0", VA = "0xE1E4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81328", Offset = "0xC81328")]
			get
			{
				return default(WandHand);
			}
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xE1E4AC", Offset = "0xE1E4AC", VA = "0xE1E4AC")]
		public BotCharacter()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xE1E4F8", Offset = "0xE1E4F8", VA = "0xE1E4F8")]
		public void Initialize(Wielder wielder, StatsData healthData)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xE1E898", Offset = "0xE1E898", VA = "0xE1E898")]
		public void SetColliderEnabled(bool shouldEnable)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xE1E8CC", Offset = "0xE1E8CC", VA = "0xE1E8CC")]
		public void ResetRemoteCharacter(Wielder wielder)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xE1EB90", Offset = "0xE1EB90", VA = "0xE1EB90")]
		public LayerMask GetLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xE1EBF8", Offset = "0xE1EBF8", VA = "0xE1EBF8")]
		private void ResetAnimationAndPosition()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xE1ECB8", Offset = "0xE1ECB8", VA = "0xE1ECB8")]
		public void SetDead(bool dead)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xE1EDBC", Offset = "0xE1EDBC", VA = "0xE1EDBC")]
		public void OnLocalHit()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xE1EF04", Offset = "0xE1EF04", VA = "0xE1EF04", Slot = "11")]
		public override void DestroySelf()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xE1F0E8", Offset = "0xE1F0E8", VA = "0xE1F0E8", Slot = "8")]
		protected override void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xE1F0EC", Offset = "0xE1F0EC", VA = "0xE1F0EC", Slot = "9")]
		public override void SetCorrectApperence(Photon.Realtime.Player photonPlayer)
		{
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000206")]
	public class BotTeleportHandler : TeleportHandler
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xE49344", Offset = "0xE49344", VA = "0xE49344")]
		public BotTeleportHandler()
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000207")]
	public abstract class CharacterBase : MonoBehaviour, IPauseObject
	{
		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC814D8", Offset = "0xC814D8")]
		private sealed class <DelayedRootPositionSet>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform rootTransform;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CharacterBase $this;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000589")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029CB")]
				[Address(RVA = "0xE20750", Offset = "0xE20750", VA = "0xE20750", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CC")]
				[Address(RVA = "0xE20758", Offset = "0xE20758", VA = "0xE20758", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C9")]
			[Address(RVA = "0xE2060C", Offset = "0xE2060C", VA = "0xE2060C")]
			[DebuggerHidden]
			public <DelayedRootPositionSet>c__Iterator0()
			{
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xE20614", Offset = "0xE20614", VA = "0xE20614", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CD")]
			[Address(RVA = "0xE20760", Offset = "0xE20760", VA = "0xE20760", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029CE")]
			[Address(RVA = "0xE20774", Offset = "0xE20774", VA = "0xE20774", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B4E")]
		private const string LeftWandSocket = "L_socket_JNT";

		[Token(Token = "0x4000B4F")]
		private const string RightWandSocket = "R_socket_JNT";

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected CharacterStatsUI m_statsUI;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected WandType m_wandType;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected AimInput m_aimInput;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected WandHand m_wandHand;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] m_wandTransforms;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterMovement m_characterMovement;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81348", Offset = "0xC81348")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81348", Offset = "0xC81348")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81384", Offset = "0xC81384")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81384", Offset = "0xC81384")]
		private Tile <ConnectedTile>k__BackingField;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC813C0", Offset = "0xC813C0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC813C0", Offset = "0xC813C0")]
		private CharacterRenderer <CharacterRenderer>k__BackingField;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC813FC", Offset = "0xC813FC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC813FC", Offset = "0xC813FC")]
		private CapsuleCollider <Collider>k__BackingField;

		[Token(Token = "0x170001B5")]
		public bool IsPaused
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xE1F65C", Offset = "0xE1F65C", VA = "0xE1F65C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81438", Offset = "0xC81438")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0xE1F664", Offset = "0xE1F664", VA = "0xE1F664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81448", Offset = "0xC81448")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public Tile ConnectedTile
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xE1F670", Offset = "0xE1F670", VA = "0xE1F670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81458", Offset = "0xC81458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xE1F678", Offset = "0xE1F678", VA = "0xE1F678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81468", Offset = "0xC81468")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public CharacterRenderer CharacterRenderer
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xE1E808", Offset = "0xE1E808", VA = "0xE1E808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81478", Offset = "0xC81478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0xE1E800", Offset = "0xE1E800", VA = "0xE1E800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81488", Offset = "0xC81488")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public CharacterMovement Movement
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xE1EA04", Offset = "0xE1EA04", VA = "0xE1EA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81498", Offset = "0xC81498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xE1E890", Offset = "0xE1E890", VA = "0xE1E890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC814A8", Offset = "0xC814A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xE1E888", Offset = "0xE1E888", VA = "0xE1E888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC814B8", Offset = "0xC814B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xE1E4BC", Offset = "0xE1E4BC", VA = "0xE1E4BC")]
		protected CharacterBase()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xE1F680", Offset = "0xE1F680", VA = "0xE1F680", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xE1F794", Offset = "0xE1F794", VA = "0xE1F794", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xE1F830", Offset = "0xE1F830", VA = "0xE1F830")]
		public void SetTrackingTransforms(VirtualTransform trackingOrigin, VirtualTransform headTracking, VirtualTransform leftHandTracking, VirtualTransform rightHandTracking)
		{
		}

		[Token(Token = "0x6000A69")]
		protected abstract void OnMatchReset(Events.MatchResetEvent eventData);

		[Token(Token = "0x6000A6A")]
		public abstract void SetCorrectApperence(Photon.Realtime.Player photonPlayer);

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xE1F88C", Offset = "0xE1F88C", VA = "0xE1F88C")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xE1F8C4", Offset = "0xE1F8C4", VA = "0xE1F8C4", Slot = "10")]
		public virtual void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xE1EFA0", Offset = "0xE1EFA0", VA = "0xE1EFA0", Slot = "11")]
		public virtual void DestroySelf()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xE1F8D0", Offset = "0xE1F8D0", VA = "0xE1F8D0")]
		public void SetConnectedTile(Tile newTile)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xE1F9F0", Offset = "0xE1F9F0", VA = "0xE1F9F0")]
		protected void ParentStatsToBody()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xE1FA50", Offset = "0xE1FA50", VA = "0xE1FA50")]
		protected void TrySpawnWands(Photon.Realtime.Player Owner)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xE1E930", Offset = "0xE1E930", VA = "0xE1E930")]
		protected void TrySpawnWandMesh(WandType wandType, WandHand wandHand, bool isDualWielding)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xE1FC4C", Offset = "0xE1FC4C", VA = "0xE1FC4C")]
		public Transform GetWandParentTransform(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xE20014", Offset = "0xE20014", VA = "0xE20014")]
		public Transform GetWandMeshTransform(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xE1F8E0", Offset = "0xE1F8E0", VA = "0xE1F8E0")]
		protected void SetRootPosition(bool checkIfLobby)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xE20148", Offset = "0xE20148", VA = "0xE20148")]
		private void SetRootPosition(Transform rootTransform)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xE1FCD4", Offset = "0xE1FCD4", VA = "0xE1FCD4")]
		private void SpawnWandMesh(WandType wandType, Transform wandParent, bool isDualWielding, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xE20580", Offset = "0xE20580", VA = "0xE20580")]
		[DebuggerHidden]
		private IEnumerator DelayedRootPositionSet(Transform rootTransform)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000208")]
	public abstract class CharacterControl : Pawn
	{
		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TeleportHandler m_teleportHandler;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HurtSfxHandler m_sfxHandler;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected AimData m_aimData;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool m_blockArenaEventsSubscription;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		protected bool m_checkFirstBlood;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected PlayerMove m_movement;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_wandControllerDespawnedEventToken;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_levelInitializedEventToken;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EventToken m_finalCountdownStartedEventToken;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private EventToken m_countdownStartedEventToken;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81568", Offset = "0xC81568")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81568", Offset = "0xC81568")]
		private float <ManaUsedTotal>k__BackingField;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC815A4", Offset = "0xC815A4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC815A4", Offset = "0xC815A4")]
		private float <DamageReceivedTotal>k__BackingField;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC815E0", Offset = "0xC815E0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC815E0", Offset = "0xC815E0")]
		private bool <FlawlessWin>k__BackingField;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8161C", Offset = "0xC8161C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8161C", Offset = "0xC8161C")]
		private Wielder <Wielder>k__BackingField;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81658", Offset = "0xC81658")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81658", Offset = "0xC81658")]
		private TeleportHandler <TeleportHandler>k__BackingField;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81694", Offset = "0xC81694")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81694", Offset = "0xC81694")]
		private WandManager <Wand>k__BackingField;

		[Token(Token = "0x170001BA")]
		public float ManaUsedTotal
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xE493E0", Offset = "0xE493E0", VA = "0xE493E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC816D0", Offset = "0xC816D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xE493E8", Offset = "0xE493E8", VA = "0xE493E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC816E0", Offset = "0xC816E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float DamageReceivedTotal
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xE493F0", Offset = "0xE493F0", VA = "0xE493F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC816F0", Offset = "0xC816F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xE493F8", Offset = "0xE493F8", VA = "0xE493F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81700", Offset = "0xC81700")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public bool FlawlessWin
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xE49400", Offset = "0xE49400", VA = "0xE49400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81710", Offset = "0xC81710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xE49408", Offset = "0xE49408", VA = "0xE49408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81720", Offset = "0xC81720")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public Wielder Wielder
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xE49414", Offset = "0xE49414", VA = "0xE49414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81730", Offset = "0xC81730")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xE4941C", Offset = "0xE4941C", VA = "0xE4941C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81740", Offset = "0xC81740")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public HurtSfxHandler HurtSfxHandler
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xE49424", Offset = "0xE49424", VA = "0xE49424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81750", Offset = "0xC81750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public TeleportHandler TeleportHandler
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xE4942C", Offset = "0xE4942C", VA = "0xE4942C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81760", Offset = "0xC81760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xE49434", Offset = "0xE49434", VA = "0xE49434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81770", Offset = "0xC81770")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public MatchStatsSummary MatchStatsSummary
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xE4943C", Offset = "0xE4943C", VA = "0xE4943C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81780", Offset = "0xC81780")]
			get
			{
				return default(MatchStatsSummary);
			}
		}

		[Token(Token = "0x170001C1")]
		public WandManager Wand
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xE4946C", Offset = "0xE4946C", VA = "0xE4946C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81790", Offset = "0xC81790")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xE49474", Offset = "0xE49474", VA = "0xE49474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC817A0", Offset = "0xC817A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public bool IsTeleporting
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xE4947C", Offset = "0xE4947C", VA = "0xE4947C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC817B0", Offset = "0xC817B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C3")]
		public bool IsAtStartTile
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xE494AC", Offset = "0xE494AC", VA = "0xE494AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC817C0", Offset = "0xC817C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xE493D8", Offset = "0xE493D8", VA = "0xE493D8")]
		protected CharacterControl()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xE495C0", Offset = "0xE495C0", VA = "0xE495C0", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xE4972C", Offset = "0xE4972C", VA = "0xE4972C", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xE497E0", Offset = "0xE497E0", VA = "0xE497E0", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xE49860", Offset = "0xE49860", VA = "0xE49860")]
		protected void SubscribeToArenaEvents()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xE49A18", Offset = "0xE49A18", VA = "0xE49A18")]
		protected void UnsubscribeFromArenaEvents()
		{
		}

		[Token(Token = "0x6000A8E")]
		protected abstract void OnLevelInitialized(Events.LevelInitializedEvent eventData);

		[Token(Token = "0x6000A8F")]
		protected abstract void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData);

		[Token(Token = "0x6000A90")]
		protected abstract void OnCountdownStarted(Events.CountdownStartedEvent eventData);

		[Token(Token = "0x6000A91")]
		protected abstract void OnCountdownEnded(Events.CountdownEndedEvent eventData);

		[Token(Token = "0x6000A92")]
		protected abstract void OnWandControllerDespawned(InputEvents.WandControllerDespawnedEvent eventData);

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xE49AF0", Offset = "0xE49AF0", VA = "0xE49AF0", Slot = "37")]
		protected virtual void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE4A0F4", Offset = "0xE4A0F4", VA = "0xE4A0F4", Slot = "18")]
		protected override void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000A95")]
		public abstract void InstantiatePlayerWand();

		[Token(Token = "0x6000A96")]
		public abstract void TryTrackTileHit(WandHand wandHand);

		[Token(Token = "0x6000A97")]
		public abstract void SetFreeTeleportActive(bool enable);

		[Token(Token = "0x6000A98")]
		protected abstract AimInput GetAimInputType();

		[Token(Token = "0x6000A99")]
		protected abstract void SpawnAndConnectWielder(Level level);

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE4A12C", Offset = "0xE4A12C", VA = "0xE4A12C")]
		public void DestroyPlayerWand()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE49C64", Offset = "0xE49C64", VA = "0xE49C64")]
		public void SetCurrentTile(Tile newTile)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE4A15C", Offset = "0xE4A15C", VA = "0xE4A15C")]
		public void ResetCharacterTransform()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xE4A204", Offset = "0xE4A204", VA = "0xE4A204", Slot = "43")]
		protected virtual void SetMovementTile(Tile newTile)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE4A238", Offset = "0xE4A238", VA = "0xE4A238", Slot = "44")]
		protected virtual void UpdateObjectLayer(LayerMask layer)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xE4A2EC", Offset = "0xE4A2EC", VA = "0xE4A2EC", Slot = "45")]
		protected virtual void OnWielderSpawned(Wielder wielder, Level level)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE4A328", Offset = "0xE4A328", VA = "0xE4A328", Slot = "17")]
		protected override void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xE4A38C", Offset = "0xE4A38C", VA = "0xE4A38C", Slot = "46")]
		protected virtual void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE4A3BC", Offset = "0xE4A3BC", VA = "0xE4A3BC", Slot = "47")]
		public virtual void SpawnWandController(Level level)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE4A40C", Offset = "0xE4A40C", VA = "0xE4A40C")]
		private void SpawnOfflineWandController()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xE4A470", Offset = "0xE4A470", VA = "0xE4A470")]
		private void SpawnOnlineWandController(int wielderViewID)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xE49824", Offset = "0xE49824", VA = "0xE49824")]
		protected void SetTeleportHandler()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xE4A4F8", Offset = "0xE4A4F8", VA = "0xE4A4F8", Slot = "16")]
		protected override bool IsTeleportActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xE4A520", Offset = "0xE4A520", VA = "0xE4A520", Slot = "48")]
		protected virtual void CreateMovement(Tile startTile)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE4A690", Offset = "0xE4A690", VA = "0xE4A690", Slot = "49")]
		protected virtual void RemoveMovement()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE4A698", Offset = "0xE4A698", VA = "0xE4A698", Slot = "50")]
		public virtual Vector3 GetPlayerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE4A6CC", Offset = "0xE4A6CC", VA = "0xE4A6CC", Slot = "51")]
		public virtual void ResetPosition(MatchType matchType)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xE49578", Offset = "0xE49578", VA = "0xE49578")]
		public Tile GetCurrentTile()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE4A7F8", Offset = "0xE4A7F8", VA = "0xE4A7F8", Slot = "52")]
		public virtual void ResetToInsideTileArea(Vector3 tilePosition)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE4A854", Offset = "0xE4A854", VA = "0xE4A854")]
		public void AbortContinuousHit()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE4A8AC", Offset = "0xE4A8AC", VA = "0xE4A8AC", Slot = "20")]
		public override void ChangeMana(float changeValue, bool blockManaReg = false)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE4A8F4", Offset = "0xE4A8F4", VA = "0xE4A8F4")]
		public void ChangeManaUsed(float changeValue)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xE4A904", Offset = "0xE4A904", VA = "0xE4A904")]
		public void ResetPlayerStats()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE4AA9C", Offset = "0xE4AA9C", VA = "0xE4AA9C")]
		protected float GetDamageAfterArmorReduction(DamageType damageType, float damage)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xE4AB10", Offset = "0xE4AB10", VA = "0xE4AB10")]
		protected void Die(Vector2 hitDirection)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xE4AC94", Offset = "0xE4AC94", VA = "0xE4AC94", Slot = "53")]
		protected virtual void TryDepleteMaxMana(float depletionMultiplier)
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000209")]
	public class CharacterMovement : MonoBehaviour
	{
		[Token(Token = "0x200020A")]
		private struct PrefabStrings
		{
			[Token(Token = "0x4000B8B")]
			public const string HeadIKTarget = "HeadIK";

			[Token(Token = "0x4000B8C")]
			public const string LeftArmIKTarget = "LHandIK";

			[Token(Token = "0x4000B8D")]
			public const string RightArmIKTarget = "RHandIK";

			[Token(Token = "0x4000B8E")]
			public const string VRIKTargetReference = "Target";

			[Token(Token = "0x4000B8F")]
			public const string OriginTransform = "TrackingOrigin";

			[Token(Token = "0x4000B90")]
			public const string LeftHandSocket = "L_socket_JNT";

			[Token(Token = "0x4000B91")]
			public const string RightHandSocket = "R_socket_JNT";
		}

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC818B8", Offset = "0xC818B8")]
		private sealed class <EnableLocomotion>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal CharacterMovement $this;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029D1")]
				[Address(RVA = "0xE2288C", Offset = "0xE2288C", VA = "0xE2288C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029D2")]
				[Address(RVA = "0xE22894", Offset = "0xE22894", VA = "0xE22894", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029CF")]
			[Address(RVA = "0xE22444", Offset = "0xE22444", VA = "0xE22444")]
			[DebuggerHidden]
			public <EnableLocomotion>c__Iterator0()
			{
			}

			[Token(Token = "0x60029D0")]
			[Address(RVA = "0xE22798", Offset = "0xE22798", VA = "0xE22798", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029D3")]
			[Address(RVA = "0xE2289C", Offset = "0xE2289C", VA = "0xE2289C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029D4")]
			[Address(RVA = "0xE228B0", Offset = "0xE228B0", VA = "0xE228B0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B6F")]
		private const float MinimumCrouchHeight = 1.6f;

		[Token(Token = "0x4000B70")]
		private const float MaximumCrouchHeight = 1.7f;

		[Token(Token = "0x4000B71")]
		private const float LocomotionDisabledTime = 1.25f;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly VirtualTransform sm_defaultLeftSocketTransform;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly VirtualTransform sm_defaultRightSocketTransform;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isMovementSyncActive;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_isTrackingHeadPosition;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool m_isTrackingHands;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool m_shouldRotateAndMoveRemoteBody;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_hasFlippedArms;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VirtualTransform m_originTrackingTarget;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VirtualTransform m_headTrackingTarget;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VirtualTransform m_rightHandTrackingTarget;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VirtualTransform m_leftHandTrackingTarget;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_vrikRigOrigin;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_vrikRigLeftHand;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_vrikRigRightHand;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_characterRoot;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_leftHandSocket;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_rightHandSocket;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRIK m_vrIK;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Wielder m_myWielder;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CustomAnimationController m_animationController;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion m_botCharacterTargetRotation;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Action m_updateMethod;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_enableLocomotion;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC817D0", Offset = "0xC817D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC817D0", Offset = "0xC817D0")]
		private bool <IsDead>k__BackingField;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8180C", Offset = "0xC8180C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8180C", Offset = "0xC8180C")]
		private Transform <HeadIk>k__BackingField;

		[Token(Token = "0x170001C4")]
		public bool IsDead
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xE1EEA0", Offset = "0xE1EEA0", VA = "0xE1EEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81848", Offset = "0xC81848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xE20890", Offset = "0xE20890", VA = "0xE20890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81858", Offset = "0xC81858")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public Transform HeadIk
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xE1EAA0", Offset = "0xE1EAA0", VA = "0xE1EAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81868", Offset = "0xC81868")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xE2089C", Offset = "0xE2089C", VA = "0xE2089C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81878", Offset = "0xC81878")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public VirtualTransform HeadTrackingTarget
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xE208A4", Offset = "0xE208A4", VA = "0xE208A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81888", Offset = "0xC81888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public Vector3 ColliderTargetPosition
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xE208AC", Offset = "0xE208AC", VA = "0xE208AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81898", Offset = "0xC81898")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xE207D8", Offset = "0xE207D8", VA = "0xE207D8")]
		public CharacterMovement()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xE2094C", Offset = "0xE2094C", VA = "0xE2094C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xE20BB0", Offset = "0xE20BB0", VA = "0xE20BB0")]
		public void MovementStartTwin(Wielder wielder, AimInput aimInput, CharacterRenderer renderer)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xE2100C", Offset = "0xE2100C", VA = "0xE2100C")]
		public void MovementStartRemoteCharacter(Wielder wielder, AimInput aimInput, CharacterRenderer renderer)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xE1EAB0", Offset = "0xE1EAB0", VA = "0xE1EAB0")]
		public void MovementStartBotCharacter(Wielder wielder, AimInput aimInput, CharacterRenderer renderer)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xE21078", Offset = "0xE21078", VA = "0xE21078")]
		public void MovementStartDisplayCharacter(AimInput aimInput, CharacterRenderer renderer)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xE20BE8", Offset = "0xE20BE8", VA = "0xE20BE8")]
		private void SetAnimationConfiguration(Wielder wielder, AimInput aimInput, CharacterRenderer renderer, bool isMirrored)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xE210C4", Offset = "0xE210C4", VA = "0xE210C4")]
		private void ConfigureTrackingSolution(AimInput aimInput, bool isMirrored, Wielder wielder)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xE21714", Offset = "0xE21714", VA = "0xE21714")]
		private void ConfigureAnimator(AimInput aimInput)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xE20F68", Offset = "0xE20F68", VA = "0xE20F68")]
		private Action AssignUpdateMethod(bool isBot, bool isTrackingHands)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xE21974", Offset = "0xE21974", VA = "0xE21974")]
		private void UpdateMovementBot()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xE21D80", Offset = "0xE21D80", VA = "0xE21D80")]
		private void UpdateMovementVRIK()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xE21FD4", Offset = "0xE21FD4", VA = "0xE21FD4")]
		private void UpdateMovementAnimator()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xE221A0", Offset = "0xE221A0", VA = "0xE221A0")]
		public void TryTemporarilyDisableLocomotion()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xE1ECEC", Offset = "0xE1ECEC", VA = "0xE1ECEC")]
		public void SetDead(bool dead)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xE20414", Offset = "0xE20414", VA = "0xE20414")]
		public void ResetIK(bool resetBody = false)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xE22300", Offset = "0xE22300", VA = "0xE22300")]
		public void SetBodyActive(bool enable)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xE223FC", Offset = "0xE223FC", VA = "0xE223FC")]
		public void TrySetLobbyAnimations(bool enabled)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xE22294", Offset = "0xE22294", VA = "0xE22294")]
		[DebuggerHidden]
		private IEnumerator EnableLocomotion()
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xE1F880", Offset = "0xE1F880", VA = "0xE1F880")]
		public void SetTransformFromWielder(VirtualTransform trackingOrigin, VirtualTransform headTracking, VirtualTransform leftHandTracking, VirtualTransform rightHandTracking)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xE20B08", Offset = "0xE20B08", VA = "0xE20B08")]
		private void SetTransformsFromPlayerControl(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xE2244C", Offset = "0xE2244C", VA = "0xE2244C")]
		public float GetHeadIKRotationThreshold()
		{
			return default(float);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xE21BB0", Offset = "0xE21BB0", VA = "0xE21BB0")]
		private void UpdateVRIKHeadTransform()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xE21DA4", Offset = "0xE21DA4", VA = "0xE21DA4")]
		private void UpdateVRIKHandTransforms()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xE22454", Offset = "0xE22454", VA = "0xE22454")]
		private void ClampVRIKHeight()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class CharacterRenderer : MonoBehaviour
	{
		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC819E0", Offset = "0xC819E0")]
		private sealed class <FlashRed>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool isArmorActive;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CharacterRenderer $this;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029D7")]
				[Address(RVA = "0xE2387C", Offset = "0xE2387C", VA = "0xE2387C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029D8")]
				[Address(RVA = "0xE23884", Offset = "0xE23884", VA = "0xE23884", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029D5")]
			[Address(RVA = "0xE23660", Offset = "0xE23660", VA = "0xE23660")]
			[DebuggerHidden]
			public <FlashRed>c__Iterator0()
			{
			}

			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xE236E0", Offset = "0xE236E0", VA = "0xE236E0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029D9")]
			[Address(RVA = "0xE2388C", Offset = "0xE2388C", VA = "0xE2388C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029DA")]
			[Address(RVA = "0xE238A0", Offset = "0xE238A0", VA = "0xE238A0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterType m_characterType;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_defaultMaterial;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_rimMaterial;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_flashRed;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ParticleSystem> m_vfxObjects;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Renderer> m_renderers;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, GameObject> sm_preloadedAssets;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81918", Offset = "0xC81918")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81918", Offset = "0xC81918")]
		private Transform <Body>k__BackingField;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81954", Offset = "0xC81954")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81954", Offset = "0xC81954")]
		private SkinnedMeshRenderer <Renderer>k__BackingField;

		[Token(Token = "0x170001C8")]
		public Transform Body
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xE1E880", Offset = "0xE1E880", VA = "0xE1E880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81990", Offset = "0xC81990")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xE2291C", Offset = "0xE2291C", VA = "0xE2291C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC819A0", Offset = "0xC819A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public SkinnedMeshRenderer Renderer
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xE22924", Offset = "0xE22924", VA = "0xE22924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC819B0", Offset = "0xC819B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xE2292C", Offset = "0xE2292C", VA = "0xE2292C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC819C0", Offset = "0xC819C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xE22914", Offset = "0xE22914", VA = "0xE22914")]
		public CharacterRenderer()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xE22934", Offset = "0xE22934", VA = "0xE22934")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xE2293C", Offset = "0xE2293C", VA = "0xE2293C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xE229D4", Offset = "0xE229D4", VA = "0xE229D4")]
		private void PreloadRenderers()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xE1E810", Offset = "0xE1E810", VA = "0xE1E810")]
		public void Initialize(CharacterType type)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xE22DEC", Offset = "0xE22DEC", VA = "0xE22DEC")]
		private void SpawnCharacterMesh(bool lod)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xE1F1D4", Offset = "0xE1F1D4", VA = "0xE1F1D4")]
		public void FetchMaterialReferences()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xE2347C", Offset = "0xE2347C", VA = "0xE2347C")]
		public void ToggleVfxActive(bool enable)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xE1EEA8", Offset = "0xE1EEA8", VA = "0xE1EEA8")]
		public void PlayHitResponse(bool isArmorActive)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xE235CC", Offset = "0xE235CC", VA = "0xE235CC")]
		[DebuggerHidden]
		private IEnumerator FlashRed(bool isArmorActive)
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xE1F624", Offset = "0xE1F624", VA = "0xE1F624")]
		public void SetMaterial(CharacterMaterialType materialType)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xE1F344", Offset = "0xE1F344", VA = "0xE1F344")]
		public void SetMaterial(CharacterMaterialType materialType, Color color, bool blockFlash = false)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xE232C4", Offset = "0xE232C4", VA = "0xE232C4")]
		public void SetRenderersEnabled(bool enable)
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class CharacterStatsUI : MonoBehaviour
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_vitalBarParent;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_vitalBar;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_vitalSpent;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatsData m_healthData;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_followTransform;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_previousHealth;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener m_barValueTweener;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xE23904", Offset = "0xE23904", VA = "0xE23904")]
		public CharacterStatsUI()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xE2390C", Offset = "0xE2390C", VA = "0xE2390C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xE23A0C", Offset = "0xE23A0C", VA = "0xE23A0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xE23A28", Offset = "0xE23A28", VA = "0xE23A28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xE1EAA8", Offset = "0xE1EAA8", VA = "0xE1EAA8")]
		public void Initialize(StatsData healthData, Transform followTransform)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xE23C04", Offset = "0xE23C04", VA = "0xE23C04")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xE23AFC", Offset = "0xE23AFC", VA = "0xE23AFC")]
		private void UpdateVitals()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xE23D8C", Offset = "0xE23D8C", VA = "0xE23D8C")]
		public void AddFillAmount(float fillAmount, float changeValue)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xE23E48", Offset = "0xE23E48", VA = "0xE23E48")]
		public void SubtractFillAmount(float fillAmount, float changeValue)
		{
		}
	}
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC81A70", Offset = "0xC81A70")]
	public class DisplayCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterRenderer m_characterRenderer;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterMovement m_characterMovement;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_recenterCameraEventToken;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE23F04", Offset = "0xE23F04", VA = "0xE23F04")]
		public DisplayCharacter()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xE23F0C", Offset = "0xE23F0C", VA = "0xE23F0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xE2404C", Offset = "0xE2404C", VA = "0xE2404C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xE240EC", Offset = "0xE240EC", VA = "0xE240EC")]
		public void Initialize(CharacterType type)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xE24260", Offset = "0xE24260", VA = "0xE24260")]
		public void SetActive(bool enable)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xE24308", Offset = "0xE24308", VA = "0xE24308")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xE24378", Offset = "0xE24378", VA = "0xE24378")]
		private void OnRecenter(Events.OnCameraRecenteredEvent eventData)
		{
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x200020E")]
	public class HandsHandler : MonoBehaviour
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material[] m_materials;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandAnimator[] m_animators;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC81B04", Offset = "0xC81B04")]
		[SerializeField]
		private Transform m_leftHandRig;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_leftEquip;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_leftAimPoint;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC81B70", Offset = "0xC81B70")]
		[SerializeField]
		private Transform m_rightHandRig;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_rightEquip;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_rightAimPoint;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_wandGripChangedEventToken;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_wandControllerSpawnedEventToken;

		[Token(Token = "0x170001CA")]
		public Transform LeftEquip
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xE4AD8C", Offset = "0xE4AD8C", VA = "0xE4AD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81BDC", Offset = "0xC81BDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public Transform LeftAimPoint
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xE4AD94", Offset = "0xE4AD94", VA = "0xE4AD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81BEC", Offset = "0xC81BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public Transform RightEquip
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xE4AD9C", Offset = "0xE4AD9C", VA = "0xE4AD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81BFC", Offset = "0xC81BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public Transform RightAimPoint
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xE4ADA4", Offset = "0xE4ADA4", VA = "0xE4ADA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81C0C", Offset = "0xC81C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xE4ACFC", Offset = "0xE4ACFC", VA = "0xE4ACFC")]
		public HandsHandler()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xE4ADAC", Offset = "0xE4ADAC", VA = "0xE4ADAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xE4AF64", Offset = "0xE4AF64", VA = "0xE4AF64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xE4B024", Offset = "0xE4B024", VA = "0xE4B024")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xE4B0CC", Offset = "0xE4B0CC", VA = "0xE4B0CC")]
		private void OnWandControllerSpawned(InputEvents.WandControllerSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xE4B1A0", Offset = "0xE4B1A0", VA = "0xE4B1A0")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xE4B274", Offset = "0xE4B274", VA = "0xE4B274")]
		private void OnWandGripChanged(InputEvents.WandGripChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xE4B310", Offset = "0xE4B310", VA = "0xE4B310")]
		public void SetPlayerReferences(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xE4B394", Offset = "0xE4B394", VA = "0xE4B394")]
		public void ResetCustomHands(Transform leftHandParent, Transform rightHandParent)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xE4B3FC", Offset = "0xE4B3FC", VA = "0xE4B3FC")]
		public void SetHandsMaterial(HandMaterialType type)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xE4B530", Offset = "0xE4B530", VA = "0xE4B530")]
		public void SetHandsActive(bool active)
		{
		}
	}
}
namespace Cortopia.Scripts.Player.Input
{
	[Token(Token = "0x200020F")]
	public class DualWieldInputListener : InputListener, IInputListenerTwoWands, IWandControllable, IInputListener
	{
		[Token(Token = "0x4000BB3")]
		private const int InactiveSpellSlotValue = -1;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool[] m_isAutoTeleportEnabled;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_activeSpellSlotLeft;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_activeSpellSlotRight;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_wasInteractionSuccessful;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81C1C", Offset = "0xC81C1C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81C1C", Offset = "0xC81C1C")]
		private WandManager <WandManager>k__BackingField;

		[Token(Token = "0x170001CE")]
		public WandManager WandManager
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xE4B66C", Offset = "0xE4B66C", VA = "0xE4B66C", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81C58", Offset = "0xC81C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xE4B674", Offset = "0xE4B674", VA = "0xE4B674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81C68", Offset = "0xC81C68")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xE4B5BC", Offset = "0xE4B5BC", VA = "0xE4B5BC")]
		public DualWieldInputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xE4B67C", Offset = "0xE4B67C", VA = "0xE4B67C", Slot = "35")]
		public void SetWandControl(WandManager wandManager)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xE4B684", Offset = "0xE4B684", VA = "0xE4B684", Slot = "27")]
		public void OnInteractionLeftInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xE4B714", Offset = "0xE4B714", VA = "0xE4B714", Slot = "26")]
		public override void OnInteractionInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xE4B68C", Offset = "0xE4B68C", VA = "0xE4B68C")]
		private void OnInteractionInput(InputState inputState, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xE4BA08", Offset = "0xE4BA08", VA = "0xE4BA08", Slot = "21")]
		public override void OnAutoTeleportLeftInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xE4BB74", Offset = "0xE4BB74", VA = "0xE4BB74", Slot = "22")]
		public override void OnAutoTeleportRightInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xE4BA10", Offset = "0xE4BA10", VA = "0xE4BA10")]
		private void OnAutoTeleportInput(InputState inputState, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE4BB7C", Offset = "0xE4BB7C", VA = "0xE4BB7C", Slot = "30")]
		public void OnSpellInput01(InputState inputState)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xE4BCAC", Offset = "0xE4BCAC", VA = "0xE4BCAC", Slot = "31")]
		public void OnSpellInput02(InputState inputState)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE4BCC4", Offset = "0xE4BCC4", VA = "0xE4BCC4", Slot = "32")]
		public void OnSpellInput03(InputState inputState)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xE4BCDC", Offset = "0xE4BCDC", VA = "0xE4BCDC", Slot = "33")]
		public void OnSpellInput04(InputState inputState)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE4BB94", Offset = "0xE4BB94", VA = "0xE4BB94")]
		private void OnSpellInput(ref int activeSpellSlot, InputState inputState, WandHand wandHand, int spellSlotIndex)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class InputListener : IInputListener
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_wasSecondaryAxisInputDown;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81C78", Offset = "0xC81C78")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81C78", Offset = "0xC81C78")]
		private PlayerInput <PlayerInput>k__BackingField;

		[Token(Token = "0x170001CF")]
		public PlayerInput PlayerInput
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xE4B71C", Offset = "0xE4B71C", VA = "0xE4B71C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81CB4", Offset = "0xC81CB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xE4BCF4", Offset = "0xE4BCF4", VA = "0xE4BCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81CC4", Offset = "0xC81CC4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xE4B640", Offset = "0xE4B640", VA = "0xE4B640")]
		public InputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xE4BCFC", Offset = "0xE4BCFC", VA = "0xE4BCFC", Slot = "5")]
		public void OnMenuInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xE4BDA0", Offset = "0xE4BDA0", VA = "0xE4BDA0", Slot = "7")]
		public void OnSecondaryAxisInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE4BF38", Offset = "0xE4BF38", VA = "0xE4BF38", Slot = "16")]
		public virtual void OnRecenterInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE4C4DC", Offset = "0xE4C4DC", VA = "0xE4C4DC", Slot = "17")]
		public virtual void OnReverseInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE4C514", Offset = "0xE4C514", VA = "0xE4C514", Slot = "18")]
		public virtual void OnPrimaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE4C518", Offset = "0xE4C518", VA = "0xE4C518", Slot = "19")]
		public virtual void OnSecondaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE4C51C", Offset = "0xE4C51C", VA = "0xE4C51C", Slot = "20")]
		public virtual void OnTeleportInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xE4C520", Offset = "0xE4C520", VA = "0xE4C520", Slot = "21")]
		public virtual void OnAutoTeleportLeftInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE4C524", Offset = "0xE4C524", VA = "0xE4C524", Slot = "22")]
		public virtual void OnAutoTeleportRightInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE4C528", Offset = "0xE4C528", VA = "0xE4C528", Slot = "23")]
		public virtual void OnPointTriggerInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE4C52C", Offset = "0xE4C52C", VA = "0xE4C52C", Slot = "24")]
		public virtual void OnSwipeInput(InputState inputState, float speed)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE4C530", Offset = "0xE4C530", VA = "0xE4C530", Slot = "25")]
		public virtual void OnPrimaryAxisInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE4C534", Offset = "0xE4C534", VA = "0xE4C534", Slot = "26")]
		public virtual void OnInteractionInput(InputState inputState)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class LobbyInputListener : InputListener
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE4C538", Offset = "0xE4C538", VA = "0xE4C538")]
		public LobbyInputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE4C564", Offset = "0xE4C564", VA = "0xE4C564", Slot = "18")]
		public override void OnPrimaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE4C61C", Offset = "0xE4C61C", VA = "0xE4C61C", Slot = "26")]
		public override void OnInteractionInput(InputState inputState)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class MainMenuInputListener : IInputListener
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81CD4", Offset = "0xC81CD4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81CD4", Offset = "0xC81CD4")]
		private readonly PlayerInput <PlayerInput>k__BackingField;

		[Token(Token = "0x170001D0")]
		public PlayerInput PlayerInput
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xE4C6F0", Offset = "0xE4C6F0", VA = "0xE4C6F0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81D10", Offset = "0xC81D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE4C6C4", Offset = "0xE4C6C4", VA = "0xE4C6C4")]
		public MainMenuInputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xE4C6F8", Offset = "0xE4C6F8", VA = "0xE4C6F8", Slot = "10")]
		public void OnPrimaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xE4C734", Offset = "0xE4C734", VA = "0xE4C734", Slot = "5")]
		public void OnMenuInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xE4C738", Offset = "0xE4C738", VA = "0xE4C738", Slot = "13")]
		public void OnPointTriggerInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xE4C73C", Offset = "0xE4C73C", VA = "0xE4C73C", Slot = "6")]
		public void OnPrimaryAxisInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xE4C740", Offset = "0xE4C740", VA = "0xE4C740", Slot = "8")]
		public void OnRecenterInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xE4C744", Offset = "0xE4C744", VA = "0xE4C744", Slot = "7")]
		public void OnSecondaryAxisInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xE4C748", Offset = "0xE4C748", VA = "0xE4C748", Slot = "11")]
		public void OnSecondaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xE4C74C", Offset = "0xE4C74C", VA = "0xE4C74C")]
		public void OnStatsInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xE4C750", Offset = "0xE4C750", VA = "0xE4C750", Slot = "14")]
		public void OnSwipeInput(InputState inputState, float speed)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xE4C754", Offset = "0xE4C754", VA = "0xE4C754", Slot = "12")]
		public void OnTeleportInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xE4C758", Offset = "0xE4C758", VA = "0xE4C758", Slot = "15")]
		public void OnInteractionInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xE4C75C", Offset = "0xE4C75C", VA = "0xE4C75C")]
		public void OnAutoTeleportLeftInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xE4C760", Offset = "0xE4C760", VA = "0xE4C760")]
		public void OnAutoTeleportRightInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xE4C764", Offset = "0xE4C764", VA = "0xE4C764", Slot = "9")]
		public void OnReverseInput(InputState inputState)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class MatchInputListener : InputListener, IWandControllable
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputState m_queuedInputState;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WandControlOneHand m_wandControl;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81D20", Offset = "0xC81D20")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81D20", Offset = "0xC81D20")]
		private WandManager <WandManager>k__BackingField;

		[Token(Token = "0x170001D1")]
		public WandManager WandManager
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xE4C794", Offset = "0xE4C794", VA = "0xE4C794", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81D5C", Offset = "0xC81D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xE4C79C", Offset = "0xE4C79C", VA = "0xE4C79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81D6C", Offset = "0xC81D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xE4C768", Offset = "0xE4C768", VA = "0xE4C768")]
		public MatchInputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xE4C7A4", Offset = "0xE4C7A4", VA = "0xE4C7A4", Slot = "28")]
		public void SetWandControl(WandManager wandManager)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xE4C850", Offset = "0xE4C850", VA = "0xE4C850", Slot = "18")]
		public override void OnPrimaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xE4CB1C", Offset = "0xE4CB1C", VA = "0xE4CB1C", Slot = "19")]
		public override void OnSecondaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xE4CC88", Offset = "0xE4CC88", VA = "0xE4CC88", Slot = "20")]
		public override void OnTeleportInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xE4CDA0", Offset = "0xE4CDA0", VA = "0xE4CDA0", Slot = "26")]
		public override void OnInteractionInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xE4CE00", Offset = "0xE4CE00", VA = "0xE4CE00", Slot = "24")]
		public override void OnSwipeInput(InputState inputState, float speed)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xE4CF44", Offset = "0xE4CF44", VA = "0xE4CF44", Slot = "25")]
		public override void OnPrimaryAxisInput(InputState inputState)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class WorkshopInputListener : InputListener
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isAutoTeleportEnabled;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xE4D128", Offset = "0xE4D128", VA = "0xE4D128")]
		public WorkshopInputListener(PlayerInput playerInput)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xE4D184", Offset = "0xE4D184", VA = "0xE4D184", Slot = "18")]
		public override void OnPrimaryInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xE4D21C", Offset = "0xE4D21C", VA = "0xE4D21C", Slot = "23")]
		public override void OnPointTriggerInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xE4D220", Offset = "0xE4D220", VA = "0xE4D220", Slot = "16")]
		public override void OnRecenterInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xE4D280", Offset = "0xE4D280", VA = "0xE4D280", Slot = "20")]
		public override void OnTeleportInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xE4D284", Offset = "0xE4D284", VA = "0xE4D284", Slot = "21")]
		public override void OnAutoTeleportLeftInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xE4D344", Offset = "0xE4D344", VA = "0xE4D344", Slot = "22")]
		public override void OnAutoTeleportRightInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xE4D188", Offset = "0xE4D188", VA = "0xE4D188")]
		private void OnInteractInput(InputState inputState)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xE4D288", Offset = "0xE4D288", VA = "0xE4D288")]
		private void OnAutoInteract(InputState inputState)
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000215")]
	public class Loadout
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81D7C", Offset = "0xC81D7C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81D7C", Offset = "0xC81D7C")]
		private bool <Locked>k__BackingField;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81DB8", Offset = "0xC81DB8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81DB8", Offset = "0xC81DB8")]
		private WandType[] <Wands>k__BackingField;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81DF4", Offset = "0xC81DF4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81DF4", Offset = "0xC81DF4")]
		private Spell[] <Spells>k__BackingField;

		[Token(Token = "0x170001D2")]
		public bool Locked
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xE8D37C", Offset = "0xE8D37C", VA = "0xE8D37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E30", Offset = "0xC81E30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xE8D360", Offset = "0xE8D360", VA = "0xE8D360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E40", Offset = "0xC81E40")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public WandType[] Wands
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xE8D384", Offset = "0xE8D384", VA = "0xE8D384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E50", Offset = "0xC81E50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xE8D36C", Offset = "0xE8D36C", VA = "0xE8D36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E60", Offset = "0xC81E60")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Spell[] Spells
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xE8D38C", Offset = "0xE8D38C", VA = "0xE8D38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E70", Offset = "0xC81E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xE8D374", Offset = "0xE8D374", VA = "0xE8D374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E80", Offset = "0xC81E80")]
			set
			{
			}
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xE8D260", Offset = "0xE8D260", VA = "0xE8D260")]
		public Loadout(bool isLocked)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xE8D394", Offset = "0xE8D394", VA = "0xE8D394", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	public class Player
	{
		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82444", Offset = "0xC82444")]
		private sealed class <Initialize>c__AnonStorey0
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GetPlayerStatisticsResult rating;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Player $this;

			[Token(Token = "0x60029DB")]
			[Address(RVA = "0xE8F5FC", Offset = "0xE8F5FC", VA = "0xE8F5FC")]
			public <Initialize>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60029DC")]
			[Address(RVA = "0xE95D48", Offset = "0xE95D48", VA = "0xE95D48")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82454", Offset = "0xC82454")]
		private sealed class <InitializeDataAsync>c__AnonStorey1
		{
			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GetUserDataResult result;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool hasException;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			internal bool hasFailure;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Action onComplete;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Player $this;

			[Token(Token = "0x60029DD")]
			[Address(RVA = "0xE8FB74", Offset = "0xE8FB74", VA = "0xE8FB74")]
			public <InitializeDataAsync>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xE95D74", Offset = "0xE95D74", VA = "0xE95D74")]
			internal void <>m__0()
			{
			}

			[Token(Token = "0x60029DF")]
			[Address(RVA = "0xE95F40", Offset = "0xE95F40", VA = "0xE95F40")]
			internal void <>m__1(Task task)
			{
			}
		}

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82464", Offset = "0xC82464")]
		private sealed class <SaveUserName>c__AnonStorey2
		{
			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action onCompleted;

			[Token(Token = "0x60029E0")]
			[Address(RVA = "0xE90934", Offset = "0xE90934", VA = "0xE90934")]
			public <SaveUserName>c__AnonStorey2()
			{
			}

			[Token(Token = "0x60029E1")]
			[Address(RVA = "0xE96380", Offset = "0xE96380", VA = "0xE96380")]
			internal void <>m__0(UpdateUserTitleDisplayNameResult saveUserNameResult)
			{
			}
		}

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82474", Offset = "0xC82474")]
		private sealed class <SavePlayerData>c__AnonStorey3
		{
			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action onCompleted;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Player $this;

			[Token(Token = "0x60029E2")]
			[Address(RVA = "0xE9094C", Offset = "0xE9094C", VA = "0xE9094C")]
			public <SavePlayerData>c__AnonStorey3()
			{
			}

			[Token(Token = "0x60029E3")]
			[Address(RVA = "0xE96344", Offset = "0xE96344", VA = "0xE96344")]
			internal void <>m__0(ExecuteCloudScriptResult result)
			{
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82484", Offset = "0xC82484")]
		private sealed class <HasLoadoutChanged>c__AnonStorey4
		{
			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spell[] spells;

			[Token(Token = "0x60029E4")]
			[Address(RVA = "0xE91850", Offset = "0xE91850", VA = "0xE91850")]
			public <HasLoadoutChanged>c__AnonStorey4()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82494", Offset = "0xC82494")]
		private sealed class <HasLoadoutChanged>c__AnonStorey5
		{
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int i;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal <HasLoadoutChanged>c__AnonStorey4 <>f__ref$4;

			[Token(Token = "0x60029E5")]
			[Address(RVA = "0xE91858", Offset = "0xE91858", VA = "0xE91858")]
			public <HasLoadoutChanged>c__AnonStorey5()
			{
			}

			[Token(Token = "0x60029E6")]
			[Address(RVA = "0xE95CDC", Offset = "0xE95CDC", VA = "0xE95CDC")]
			internal bool <>m__0(Spell x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824A4", Offset = "0xC824A4")]
		private sealed class <IsAchievementUnlocked>c__AnonStorey6
		{
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Assets.Scripts.Enums.AchievementType achievementType;

			[Token(Token = "0x60029E7")]
			[Address(RVA = "0xE92AEC", Offset = "0xE92AEC", VA = "0xE92AEC")]
			public <IsAchievementUnlocked>c__AnonStorey6()
			{
			}

			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xE9629C", Offset = "0xE9629C", VA = "0xE9629C")]
			internal bool <>m__0(PlayerAchievementCollectionData.AchievementData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824B4", Offset = "0xC824B4")]
		private sealed class <RecordAchievementUnlocked>c__AnonStorey7
		{
			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Assets.Scripts.Enums.AchievementType achievementType;

			[Token(Token = "0x60029E9")]
			[Address(RVA = "0xE92C90", Offset = "0xE92C90", VA = "0xE92C90")]
			public <RecordAchievementUnlocked>c__AnonStorey7()
			{
			}

			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xE9630C", Offset = "0xE9630C", VA = "0xE9630C")]
			internal bool <>m__0(PlayerAchievementCollectionData.AchievementData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824C4", Offset = "0xC824C4")]
		private sealed class <RecordAchievementIncremented>c__AnonStorey8
		{
			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Assets.Scripts.Enums.AchievementType achievementType;

			[Token(Token = "0x60029EB")]
			[Address(RVA = "0xE92F50", Offset = "0xE92F50", VA = "0xE92F50")]
			public <RecordAchievementIncremented>c__AnonStorey8()
			{
			}

			[Token(Token = "0x60029EC")]
			[Address(RVA = "0xE962D4", Offset = "0xE962D4", VA = "0xE962D4")]
			internal bool <>m__0(PlayerAchievementCollectionData.AchievementData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824D4", Offset = "0xC824D4")]
		private sealed class <SyncAchievementsFromServer>c__AnonStorey9
		{
			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<PlayerAchievementCollectionData.AchievementData> achievementsFromServer;

			[Token(Token = "0x60029ED")]
			[Address(RVA = "0xE93238", Offset = "0xE93238", VA = "0xE93238")]
			public <SyncAchievementsFromServer>c__AnonStorey9()
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824E4", Offset = "0xC824E4")]
		private sealed class <SyncAchievementsFromServer>c__AnonStoreyA
		{
			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int i;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal <SyncAchievementsFromServer>c__AnonStorey9 <>f__ref$9;

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xE93240", Offset = "0xE93240", VA = "0xE93240")]
			public <SyncAchievementsFromServer>c__AnonStoreyA()
			{
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xE96394", Offset = "0xE96394", VA = "0xE96394")]
			internal bool <>m__0(PlayerAchievementCollectionData.AchievementData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISaveManager m_saveManager;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81E90", Offset = "0xC81E90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81E90", Offset = "0xC81E90")]
		private PlayerSaveData <SaveData>k__BackingField;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81ECC", Offset = "0xC81ECC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81ECC", Offset = "0xC81ECC")]
		private PlayerLogInObject <LogInObject>k__BackingField;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81F08", Offset = "0xC81F08")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81F08", Offset = "0xC81F08")]
		private PlayerInventory <Inventory>k__BackingField;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81F44", Offset = "0xC81F44")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81F44", Offset = "0xC81F44")]
		private string <PlayFabPlayerId>k__BackingField;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81F80", Offset = "0xC81F80")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81F80", Offset = "0xC81F80")]
		private bool <NewPlayFabUser>k__BackingField;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81FBC", Offset = "0xC81FBC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81FBC", Offset = "0xC81FBC")]
		private global::PlayFab.ClientModels.EntityKey <PlayFabEntityKey>k__BackingField;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC81FF8", Offset = "0xC81FF8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC81FF8", Offset = "0xC81FF8")]
		private RewardModifiers <RewardModifiers>k__BackingField;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82034", Offset = "0xC82034")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82034", Offset = "0xC82034")]
		private int <ActiveLoadoutIndex>k__BackingField;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82070", Offset = "0xC82070")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82070", Offset = "0xC82070")]
		private Title <Title>k__BackingField;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC820AC", Offset = "0xC820AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC820AC", Offset = "0xC820AC")]
		private int <HighestRating>k__BackingField;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC820E8", Offset = "0xC820E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC820E8", Offset = "0xC820E8")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82124", Offset = "0xC82124")]
		private static Action<string> <>f__am$cache0;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82134", Offset = "0xC82134")]
		private static Action<string> <>f__am$cache1;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82144", Offset = "0xC82144")]
		private static Func<Loadout, bool> <>f__am$cache2;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82154", Offset = "0xC82154")]
		private static Func<KeyValuePair<CharacterType, CatalogItemWrapper>, CharacterType> <>f__am$cache3;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82164", Offset = "0xC82164")]
		private static Func<KeyValuePair<CharacterType, CatalogItemWrapper>, CatalogItemWrapper> <>f__am$cache4;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82174", Offset = "0xC82174")]
		private static Func<KeyValuePair<WandType, CatalogItemWrapper>, WandType> <>f__am$cache5;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82184", Offset = "0xC82184")]
		private static Func<KeyValuePair<WandType, CatalogItemWrapper>, CatalogItemWrapper> <>f__am$cache6;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82194", Offset = "0xC82194")]
		private static Func<KeyValuePair<Spell, CatalogItemWrapper>, Spell> <>f__am$cache7;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821A4", Offset = "0xC821A4")]
		private static Func<KeyValuePair<Spell, CatalogItemWrapper>, CatalogItemWrapper> <>f__am$cache8;

		[Token(Token = "0x170001D5")]
		public PlayerSaveData SaveData
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xE8DF60", Offset = "0xE8DF60", VA = "0xE8DF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821B4", Offset = "0xC821B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0xE8DB5C", Offset = "0xE8DB5C", VA = "0xE8DB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821C4", Offset = "0xC821C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public PlayerLogInObject LogInObject
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xE8DF68", Offset = "0xE8DF68", VA = "0xE8DF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821D4", Offset = "0xC821D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xE8DB64", Offset = "0xE8DB64", VA = "0xE8DB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821E4", Offset = "0xC821E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public PlayerInventory Inventory
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xE8DF70", Offset = "0xE8DF70", VA = "0xE8DF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC821F4", Offset = "0xC821F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xE8DF78", Offset = "0xE8DF78", VA = "0xE8DF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82204", Offset = "0xC82204")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public string PlayFabPlayerId
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xE8DF80", Offset = "0xE8DF80", VA = "0xE8DF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82214", Offset = "0xC82214")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xE8DF88", Offset = "0xE8DF88", VA = "0xE8DF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82224", Offset = "0xC82224")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public bool NewPlayFabUser
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xE8DF90", Offset = "0xE8DF90", VA = "0xE8DF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82234", Offset = "0xC82234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xE8DF98", Offset = "0xE8DF98", VA = "0xE8DF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82244", Offset = "0xC82244")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public global::PlayFab.ClientModels.EntityKey PlayFabEntityKey
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xE8DFA4", Offset = "0xE8DFA4", VA = "0xE8DFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82254", Offset = "0xC82254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xE8DFAC", Offset = "0xE8DFAC", VA = "0xE8DFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82264", Offset = "0xC82264")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public RewardModifiers RewardModifiers
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xE8DFB4", Offset = "0xE8DFB4", VA = "0xE8DFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82274", Offset = "0xC82274")]
			get
			{
				return default(RewardModifiers);
			}
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xE8DFC8", Offset = "0xE8DFC8", VA = "0xE8DFC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82284", Offset = "0xC82284")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public CharacterType Character
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xE8DC6C", Offset = "0xE8DC6C", VA = "0xE8DC6C")]
			get
			{
				return default(CharacterType);
			}
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xE8DE48", Offset = "0xE8DE48", VA = "0xE8DE48")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public int ActiveLoadoutIndex
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xE8DFDC", Offset = "0xE8DFDC", VA = "0xE8DFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82294", Offset = "0xC82294")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xE8DFE4", Offset = "0xE8DFE4", VA = "0xE8DFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822A4", Offset = "0xC822A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Loadout ActiveLoadout
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xE8DFEC", Offset = "0xE8DFEC", VA = "0xE8DFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822B4", Offset = "0xC822B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public Title Title
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xE8E368", Offset = "0xE8E368", VA = "0xE8E368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822C4", Offset = "0xC822C4")]
			get
			{
				return default(Title);
			}
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xE8E370", Offset = "0xE8E370", VA = "0xE8E370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822D4", Offset = "0xC822D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public int Level
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xE8E584", Offset = "0xE8E584", VA = "0xE8E584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822E4", Offset = "0xC822E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E1")]
		public int Rating
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xE8E5C8", Offset = "0xE8E5C8", VA = "0xE8E5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC822F4", Offset = "0xC822F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E2")]
		public int SeasonScore
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xE8E694", Offset = "0xE8E694", VA = "0xE8E694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82304", Offset = "0xC82304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public int HighestRating
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xE8E760", Offset = "0xE8E760", VA = "0xE8E760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82314", Offset = "0xC82314")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xE8E768", Offset = "0xE8E768", VA = "0xE8E768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82324", Offset = "0xC82324")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public int Rank
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xE8E770", Offset = "0xE8E770", VA = "0xE8E770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82334", Offset = "0xC82334")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xE8E778", Offset = "0xE8E778", VA = "0xE8E778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82344", Offset = "0xC82344")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool IsLoggedInToPlatform
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xE8E780", Offset = "0xE8E780", VA = "0xE8E780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82354", Offset = "0xC82354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public bool HasUnlockedRating
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xE8E7B0", Offset = "0xE8E7B0", VA = "0xE8E7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82364", Offset = "0xC82364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public TutorialState TutorialState
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xE8E7EC", Offset = "0xE8E7EC", VA = "0xE8E7EC")]
			get
			{
				return default(TutorialState);
			}
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xE8E860", Offset = "0xE8E860", VA = "0xE8E860")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public int PostTutorialTriggers
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xE8EB3C", Offset = "0xE8EB3C", VA = "0xE8EB3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xE8EBB0", Offset = "0xE8EBB0", VA = "0xE8EBB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xE8D634", Offset = "0xE8D634", VA = "0xE8D634")]
		public Player(ISaveManager saveManager, PlayerLogInObject logInObject)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xE8E04C", Offset = "0xE8E04C", VA = "0xE8E04C")]
		public void SetActiveLoadoutIndex(int loadoutIndex)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xE8E094", Offset = "0xE8E094", VA = "0xE8E094")]
		public WandType GetWand(WandHand wandHand = WandHand.Right)
		{
			return default(WandType);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xE8E130", Offset = "0xE8E130", VA = "0xE8E130")]
		public void SetWand(WandHand wandHand, WandType wandType)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xE8DB6C", Offset = "0xE8DB6C", VA = "0xE8DB6C")]
		public void SetTitle(Title title)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xE8EC28", Offset = "0xE8EC28", VA = "0xE8EC28")]
		public void SaveCustomEventRewards(SaveDataObject saveDataObject)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xE8ECF4", Offset = "0xE8ECF4", VA = "0xE8ECF4")]
		private void SendCustomPurchasedItemEvent(int itemType, int itemId, CatalogItemWrapper data)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xE8EEF4", Offset = "0xE8EEF4", VA = "0xE8EEF4")]
		public SaveDataObject CreateFullSaveDataObject()
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xE8F51C", Offset = "0xE8F51C", VA = "0xE8F51C")]
		public void Initialize(GetUserInventoryResult inventory, GetUserDataResult userData, GetPlayerStatisticsResult rating)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xE8F604", Offset = "0xE8F604", VA = "0xE8F604")]
		private void InitializeInventory(GetUserInventoryResult result)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xE8F750", Offset = "0xE8F750", VA = "0xE8F750")]
		public void InitializeDataAsync(GetUserDataResult result, Action onComplete)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xE8FB88", Offset = "0xE8FB88", VA = "0xE8FB88")]
		public void InitializeRating(GetPlayerStatisticsResult result)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE90400", Offset = "0xE90400", VA = "0xE90400")]
		public void HandleFirstTimeUser(Action onCompleted)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xE90740", Offset = "0xE90740", VA = "0xE90740")]
		public void SaveUserName([Optional] Action onCompleted)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xE90598", Offset = "0xE90598", VA = "0xE90598")]
		private void SavePlayerData([Optional] Action onCompleted)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xE90954", Offset = "0xE90954", VA = "0xE90954")]
		private void OnSavePlayerDataSuccess(ExecuteCloudScriptResult result, Action onCompleted)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xE90968", Offset = "0xE90968", VA = "0xE90968")]
		private void SaveItem(CatalogVersion catalogVersion, string itemId)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xE90A2C", Offset = "0xE90A2C", VA = "0xE90A2C")]
		private void SaveItems(CatalogVersion catalogVersion, string[] itemIds)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xE90B98", Offset = "0xE90B98", VA = "0xE90B98")]
		public void SaveEntireInventory()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xE90B9C", Offset = "0xE90B9C", VA = "0xE90B9C")]
		public void AddVirtualCurrency(int amount, VirtualCurrencySource source, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xE90E3C", Offset = "0xE90E3C", VA = "0xE90E3C")]
		public void SubtractVirtualCurrency(int amount, VirtualCurrencySource source, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xE90C0C", Offset = "0xE90C0C", VA = "0xE90C0C")]
		private void UpdateVirtualCurrency(int newValue, VirtualCurrencySource source, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xE90EB4", Offset = "0xE90EB4", VA = "0xE90EB4")]
		private void SaveVirtualCurrency()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xE90FD0", Offset = "0xE90FD0", VA = "0xE90FD0")]
		public bool CanAfford(int price)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xE91004", Offset = "0xE91004", VA = "0xE91004")]
		public void ActivatePostTutorialTrigger(PostTutorialTriggerType type)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xE8DF3C", Offset = "0xE8DF3C", VA = "0xE8DF3C")]
		public void RemovePostTutorialTrigger(PostTutorialTriggerType type)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xE910AC", Offset = "0xE910AC", VA = "0xE910AC")]
		public bool IsPostTutorialTriggered(PostTutorialTriggerType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xE910D4", Offset = "0xE910D4", VA = "0xE910D4")]
		public void UnlockLoadoutsByLevel(int level)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xE91170", Offset = "0xE91170", VA = "0xE91170")]
		public void UpdateCurrentLoadout(Spell[] spells, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xE915B4", Offset = "0xE915B4", VA = "0xE915B4")]
		public Spell[] GetCurrentLoadoutSpells()
		{
			return null;
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xE915BC", Offset = "0xE915BC", VA = "0xE915BC")]
		public Spell[] GetLoadoutSpells(int wandIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xE9162C", Offset = "0xE9162C", VA = "0xE9162C")]
		public WandType[] GetCurrentLoadoutWands()
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xE91694", Offset = "0xE91694", VA = "0xE91694")]
		public WandType[] GetLoadoutWands(int wandIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xE91704", Offset = "0xE91704", VA = "0xE91704")]
		public Loadout GetLoadout(int loadoutIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xE91764", Offset = "0xE91764", VA = "0xE91764")]
		public Loadout[] GetUnlockedLoadouts()
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xE914B4", Offset = "0xE914B4", VA = "0xE914B4")]
		private void SaveCurrentLoadout()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xE91268", Offset = "0xE91268", VA = "0xE91268")]
		private bool HasLoadoutChanged(Spell[] spells)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xE8FE08", Offset = "0xE8FE08", VA = "0xE8FE08")]
		public void UpdateRating(int rating, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xE91860", Offset = "0xE91860", VA = "0xE91860")]
		public void SetRatingScore(ref int rating)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xE902FC", Offset = "0xE902FC", VA = "0xE902FC")]
		public void UpdateSeasonScore(int seasonScore, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xE91B54", Offset = "0xE91B54", VA = "0xE91B54")]
		public void SetSeasonScore(ref int seasonScore)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xE91C3C", Offset = "0xE91C3C", VA = "0xE91C3C")]
		public bool TryUpdateLastMatchDate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xE91E70", Offset = "0xE91E70", VA = "0xE91E70")]
		public bool TryUpdateLastWinDate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xE91FA4", Offset = "0xE91FA4", VA = "0xE91FA4")]
		public void IncrementMatchesPlayed()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xE92008", Offset = "0xE92008", VA = "0xE92008")]
		public void IncrementMatchesWon()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xE92074", Offset = "0xE92074", VA = "0xE92074")]
		public void IncrementMatchesWonForArena(string arenaName)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xE9223C", Offset = "0xE9223C", VA = "0xE9223C")]
		public bool HasWonInEveryArena()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xE91D70", Offset = "0xE91D70", VA = "0xE91D70")]
		private void SaveMatchData()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xE90564", Offset = "0xE90564", VA = "0xE90564")]
		public bool HasGameAccess(GameAccess accessLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xE904FC", Offset = "0xE904FC", VA = "0xE904FC")]
		public void SetGameAccess(GameAccess access, bool saveToServer = false, [Optional] Action<ExecuteCloudScriptResult> saveCompleted)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xE926F8", Offset = "0xE926F8", VA = "0xE926F8")]
		private void SaveGameAccess([Optional] Action<ExecuteCloudScriptResult> saveCompleted)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xE927FC", Offset = "0xE927FC", VA = "0xE927FC")]
		public void VerifyTutorialState()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xE8EAD0", Offset = "0xE8EAD0", VA = "0xE8EAD0")]
		private void SetCompletedTutorial(bool completed, bool saveToServer = false, [Optional] Action<ExecuteCloudScriptResult> saveCompleted)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xE928D0", Offset = "0xE928D0", VA = "0xE928D0")]
		private void SaveCompletedTutorial([Optional] Action<ExecuteCloudScriptResult> saveCompleted)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xE929EC", Offset = "0xE929EC", VA = "0xE929EC")]
		public bool IsAchievementUnlocked(Assets.Scripts.Enums.AchievementType achievementType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xE92B04", Offset = "0xE92B04", VA = "0xE92B04")]
		public void RecordAchievementUnlocked(Assets.Scripts.Enums.AchievementType achievementType)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xE92DA0", Offset = "0xE92DA0", VA = "0xE92DA0")]
		public int RecordAchievementIncremented(Assets.Scripts.Enums.AchievementType achievementType, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xE92CA0", Offset = "0xE92CA0", VA = "0xE92CA0")]
		private void SaveAchievementData()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xE92F58", Offset = "0xE92F58", VA = "0xE92F58")]
		public void SyncAchievementsFromServer(object serverData)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xE93248", Offset = "0xE93248", VA = "0xE93248")]
		public void BuyCharacter(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xE932DC", Offset = "0xE932DC", VA = "0xE932DC")]
		public CatalogItemWrapper TryAddCharacterToInventory(CharacterType characterType, bool saveToServer = false)
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xE933CC", Offset = "0xE933CC", VA = "0xE933CC")]
		public void TryAddCharactersToInventory(List<CharacterType> characterTypes, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xE9359C", Offset = "0xE9359C", VA = "0xE9359C")]
		public bool OwnsCharacter(CharacterType characterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xE936B4", Offset = "0xE936B4", VA = "0xE936B4")]
		public Dictionary<CharacterType, CatalogItemWrapper> GetOwnedCharacters()
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xE93864", Offset = "0xE93864", VA = "0xE93864")]
		public int GetNumberOfOwnedCharacters()
		{
			return default(int);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xE93930", Offset = "0xE93930", VA = "0xE93930")]
		public void TryUnlockImpossibleBotReward()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xE93C9C", Offset = "0xE93C9C", VA = "0xE93C9C")]
		public void BuyWand(WandType wandType)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xE93BAC", Offset = "0xE93BAC", VA = "0xE93BAC")]
		public CatalogItemWrapper TryAddWandToInventory(WandType wandType, bool saveToServer = false)
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xE93DBC", Offset = "0xE93DBC", VA = "0xE93DBC")]
		public void TryAddWandsToInventory(List<WandType> wandTypes, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xE93F8C", Offset = "0xE93F8C", VA = "0xE93F8C")]
		public bool OwnsWand(WandType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xE939FC", Offset = "0xE939FC", VA = "0xE939FC")]
		public Dictionary<WandType, CatalogItemWrapper> GetOwnedWands()
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xE94038", Offset = "0xE94038", VA = "0xE94038")]
		public int GetNumberOfOwnedWands()
		{
			return default(int);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xE941C8", Offset = "0xE941C8", VA = "0xE941C8")]
		public CatalogItemWrapper TryAddSpellToInventory(Spell spell, bool saveToServer = false)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xE942B8", Offset = "0xE942B8", VA = "0xE942B8")]
		public void TryAddSpellsToInventory(List<Spell> spells, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xE94488", Offset = "0xE94488", VA = "0xE94488")]
		public bool OwnsSpell(Spell type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xE94534", Offset = "0xE94534", VA = "0xE94534")]
		public Dictionary<Spell, CatalogItemWrapper> GetOwnedSpells()
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xE946E4", Offset = "0xE946E4", VA = "0xE946E4")]
		public int GetNumberOfOwnedSpells()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xE94874", Offset = "0xE94874", VA = "0xE94874")]
		public int GetSpellTokens()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xE949D0", Offset = "0xE949D0", VA = "0xE949D0")]
		public int GetSpellTokens(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xE94B18", Offset = "0xE94B18", VA = "0xE94B18")]
		public int GetNumberOfSpellsManuallyUnlocked()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xE94BB4", Offset = "0xE94BB4", VA = "0xE94BB4")]
		public CatalogItemWrapper TryAddTitleToInventory(Title title, bool saveToServer = false)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xE91960", Offset = "0xE91960", VA = "0xE91960")]
		public void TryAddTitlesToInventory(List<Title> titles, bool saveToServer = false)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xE94CA4", Offset = "0xE94CA4", VA = "0xE94CA4")]
		public bool OwnsTitle(Title title)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xE94D50", Offset = "0xE94D50", VA = "0xE94D50")]
		public CatalogItemWrapper GetCurrentTitleItem()
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xE8E378", Offset = "0xE8E378", VA = "0xE8E378")]
		public Dictionary<Title, CatalogItemWrapper> GetOwnedTitles()
		{
			return null;
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xE94DBC", Offset = "0xE94DBC", VA = "0xE94DBC")]
		public void AddExperience(int experience)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xE94EC8", Offset = "0xE94EC8", VA = "0xE94EC8")]
		public bool CanLevelUp(int currentLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xE9511C", Offset = "0xE9511C", VA = "0xE9511C")]
		public bool IsAtMaximumLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xE94F08", Offset = "0xE94F08", VA = "0xE94F08")]
		private void SaveExperienceRewards(int newLevel, int newExperience)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xE951D0", Offset = "0xE951D0", VA = "0xE951D0")]
		private bool TryRewardVirtualCurrency(int oldLevel, int newLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xE954A0", Offset = "0xE954A0", VA = "0xE954A0")]
		private void TryRewardRating(int oldLevel, int newLevel)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xE95260", Offset = "0xE95260", VA = "0xE95260")]
		private void TrySendLevelUpCustomEvents(int oldLevel, int newLevel)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xE9571C", Offset = "0xE9571C", VA = "0xE9571C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82374", Offset = "0xC82374")]
		private static void <SaveUserName>m__0(string str)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xE957B4", Offset = "0xE957B4", VA = "0xE957B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82384", Offset = "0xC82384")]
		private static void <SavePlayerData>m__1(string str)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xE9584C", Offset = "0xE9584C", VA = "0xE9584C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82394", Offset = "0xC82394")]
		private static bool <GetUnlockedLoadouts>m__2(Loadout p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xE9587C", Offset = "0xE9587C", VA = "0xE9587C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823A4", Offset = "0xC823A4")]
		private bool <GetOwnedCharacters>m__3(KeyValuePair<CharacterType, CatalogItemWrapper> p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xE95910", Offset = "0xE95910", VA = "0xE95910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823B4", Offset = "0xC823B4")]
		private static CharacterType <GetOwnedCharacters>m__4(KeyValuePair<CharacterType, CatalogItemWrapper> k)
		{
			return default(CharacterType);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xE95968", Offset = "0xE95968", VA = "0xE95968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823C4", Offset = "0xC823C4")]
		private static CatalogItemWrapper <GetOwnedCharacters>m__5(KeyValuePair<CharacterType, CatalogItemWrapper> v)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xE959C0", Offset = "0xE959C0", VA = "0xE959C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823D4", Offset = "0xC823D4")]
		private bool <GetNumberOfOwnedCharacters>m__6(KeyValuePair<CharacterType, CatalogItemWrapper> p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xE95A54", Offset = "0xE95A54", VA = "0xE95A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823E4", Offset = "0xC823E4")]
		private bool <GetOwnedWands>m__7(KeyValuePair<WandType, CatalogItemWrapper> p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xE95AE8", Offset = "0xE95AE8", VA = "0xE95AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC823F4", Offset = "0xC823F4")]
		private static WandType <GetOwnedWands>m__8(KeyValuePair<WandType, CatalogItemWrapper> k)
		{
			return default(WandType);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xE95B40", Offset = "0xE95B40", VA = "0xE95B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82404", Offset = "0xC82404")]
		private static CatalogItemWrapper <GetOwnedWands>m__9(KeyValuePair<WandType, CatalogItemWrapper> v)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xE95B98", Offset = "0xE95B98", VA = "0xE95B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82414", Offset = "0xC82414")]
		private bool <GetOwnedSpells>m__A(KeyValuePair<Spell, CatalogItemWrapper> p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xE95C2C", Offset = "0xE95C2C", VA = "0xE95C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82424", Offset = "0xC82424")]
		private static Spell <GetOwnedSpells>m__B(KeyValuePair<Spell, CatalogItemWrapper> k)
		{
			return default(Spell);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xE95C84", Offset = "0xE95C84", VA = "0xE95C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82434", Offset = "0xC82434")]
		private static CatalogItemWrapper <GetOwnedSpells>m__C(KeyValuePair<Spell, CatalogItemWrapper> v)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	public class PlayerAchievementCollectionData
	{
		[Serializable]
		[Token(Token = "0x2000218")]
		public class AchievementData
		{
			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Assets.Scripts.Enums.AchievementType Type;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool IsUnlocked;

			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Count;

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xE92C98", Offset = "0xE92C98", VA = "0xE92C98")]
			public AchievementData()
			{
			}
		}

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC824F4", Offset = "0xC824F4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC824F4", Offset = "0xC824F4")]
		private List<AchievementData> <Achievements>k__BackingField;

		[Token(Token = "0x170001E9")]
		public List<AchievementData> Achievements
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xE92AFC", Offset = "0xE92AFC", VA = "0xE92AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82530", Offset = "0xC82530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xE964AC", Offset = "0xE964AC", VA = "0xE964AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82540", Offset = "0xC82540")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xE96438", Offset = "0xE96438", VA = "0xE96438")]
		public PlayerAchievementCollectionData()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xE964B4", Offset = "0xE964B4", VA = "0xE964B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000219")]
	public class PlayerAim : Aim
	{
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC825B0", Offset = "0xC825B0")]
		private sealed class <FadeAim>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Color <col>__1;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PlayerAim $this;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029F2")]
				[Address(RVA = "0xE50190", Offset = "0xE50190", VA = "0xE50190", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F3")]
				[Address(RVA = "0xE50198", Offset = "0xE50198", VA = "0xE50198", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xE4EB70", Offset = "0xE4EB70", VA = "0xE4EB70")]
			[DebuggerHidden]
			public <FadeAim>c__Iterator0()
			{
			}

			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xE4FFF0", Offset = "0xE4FFF0", VA = "0xE4FFF0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xE501A0", Offset = "0xE501A0", VA = "0xE501A0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xE501B4", Offset = "0xE501B4", VA = "0xE501B4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82610", Offset = "0xC82610")]
		private sealed class <UpdateRaycast>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PlayerAim $this;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000591")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029F8")]
				[Address(RVA = "0xE504C4", Offset = "0xE504C4", VA = "0xE504C4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F9")]
				[Address(RVA = "0xE504CC", Offset = "0xE504CC", VA = "0xE504CC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xE4F270", Offset = "0xE4F270", VA = "0xE4F270")]
			[DebuggerHidden]
			public <UpdateRaycast>c__Iterator1()
			{
			}

			[Token(Token = "0x60029F7")]
			[Address(RVA = "0xE50218", Offset = "0xE50218", VA = "0xE50218", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xE504D4", Offset = "0xE504D4", VA = "0xE504D4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60029FB")]
			[Address(RVA = "0xE504E8", Offset = "0xE504E8", VA = "0xE504E8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly WaitForSeconds sm_rayUpdateWait;

		[Token(Token = "0x4000BDD")]
		private const float OriginForwardWand = 0.55f;

		[Token(Token = "0x4000BDE")]
		private const float OriginForwardDualWand = 0.45f;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerInput m_playerInput;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WandHand m_wandHand;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AimPivot m_aimPivot;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_aimTransform;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_aimHitRenderer;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer m_aimRenderer;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Image m_recenterImage;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine m_fadeAimCoroutine;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_aimRaycastCoroutine;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_showAim;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_isUpdatingRayAim;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool m_isAimPivotActive;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool m_isInteractableLevel;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_aimOriginOffset;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ISnapObject[] m_allSnapObjects;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> m_allSnapGameObjects;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82550", Offset = "0xC82550")]
		private static Func<GameObject, ISnapObject> <>f__am$cache0;

		[Token(Token = "0x170001EA")]
		public Ray RotationRay
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xE4DD0C", Offset = "0xE4DD0C", VA = "0xE4DD0C")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170001EB")]
		public Ray CameraRotationRay
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xE4DE34", Offset = "0xE4DE34", VA = "0xE4DE34")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170001EC")]
		public Ray CameraRay
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xE4DEB8", Offset = "0xE4DEB8", VA = "0xE4DEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82560", Offset = "0xC82560")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170001ED")]
		private Transform AimTransform
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xE4DF54", Offset = "0xE4DF54", VA = "0xE4DF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82570", Offset = "0xC82570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private bool ShouldTrackInteractableObjects
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xE4DFDC", Offset = "0xE4DFDC", VA = "0xE4DFDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xE4DBA4", Offset = "0xE4DBA4", VA = "0xE4DBA4")]
		public PlayerAim(AimData data, PlayerControl playerControl, Transform cameraTransform, PlayerInput input, Transform aimPivot, Transform wandTransform, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xE4E2B0", Offset = "0xE4E2B0", VA = "0xE4E2B0", Slot = "4")]
		public override Vector3 GetAimOrigin(float offset = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xE4E30C", Offset = "0xE4E30C", VA = "0xE4E30C")]
		public void DisableAim()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xE4E39C", Offset = "0xE4E39C", VA = "0xE4E39C")]
		public void FindSnapObjects()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xE4E394", Offset = "0xE4E394", VA = "0xE4E394")]
		public void ResetAimReticle()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xE4E528", Offset = "0xE4E528", VA = "0xE4E528")]
		public void SetAimReticle(ReticleType reticleType)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE4E73C", Offset = "0xE4E73C", VA = "0xE4E73C")]
		private void SetReticleColor(bool isTileSpell)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE4E924", Offset = "0xE4E924", VA = "0xE4E924")]
		public void PlayHitResponse()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE4EB04", Offset = "0xE4EB04", VA = "0xE4EB04")]
		[DebuggerHidden]
		private IEnumerator FadeAim()
		{
			return null;
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xE4EA2C", Offset = "0xE4EA2C", VA = "0xE4EA2C")]
		private void ResetHitAlpha()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE4EB78", Offset = "0xE4EB78", VA = "0xE4EB78")]
		public void FillRecenterReticle(float percentage)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE4EC2C", Offset = "0xE4EC2C", VA = "0xE4EC2C")]
		public Vector3 GetForwardPoint(float minLength = 0f, float maxLength = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE4ED1C", Offset = "0xE4ED1C", VA = "0xE4ED1C")]
		public void TryToggleAimPivotTransform(bool active)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE4DCB4", Offset = "0xE4DCB4", VA = "0xE4DCB4")]
		private void SetAimActive(bool value, bool dynamicAim)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE4EE64", Offset = "0xE4EE64", VA = "0xE4EE64")]
		public void EnableRaycastUpdate()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE4E344", Offset = "0xE4E344", VA = "0xE4E344")]
		private void DisableRaycastUpdate()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE4F204", Offset = "0xE4F204", VA = "0xE4F204")]
		[DebuggerHidden]
		private IEnumerator UpdateRaycast()
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE4F278", Offset = "0xE4F278", VA = "0xE4F278")]
		private void UpdateAim()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE4F48C", Offset = "0xE4F48C", VA = "0xE4F48C")]
		public void UpdateAimPivot(AimInput aimInput, Transform aimPivotTransform)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xE4F6B8", Offset = "0xE4F6B8", VA = "0xE4F6B8")]
		private void RetrieveAimTransformAndRenderer()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xE4F84C", Offset = "0xE4F84C", VA = "0xE4F84C")]
		private void RetrieveRecenterImage()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xE4F764", Offset = "0xE4F764", VA = "0xE4F764")]
		private void RetrieveHitRenderer()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xE4F7F8", Offset = "0xE4F7F8", VA = "0xE4F7F8")]
		private void SetAimTransformPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xE4FA40", Offset = "0xE4FA40", VA = "0xE4FA40")]
		private void UpdateAimRaycast(float maxDistance)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xE4FB28", Offset = "0xE4FB28", VA = "0xE4FB28")]
		public bool TryRaycastToSnapCollider(ref ISnapObject closestSnapObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xE4FE2C", Offset = "0xE4FE2C", VA = "0xE4FE2C")]
		public void AdjustGrabDistance(ref float grabDistance)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xE4FEC8", Offset = "0xE4FEC8", VA = "0xE4FEC8")]
		public void AdjustAimPivotLineRenderer(Vector3 adjustedPosition)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xE4FF98", Offset = "0xE4FF98", VA = "0xE4FF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC825A0", Offset = "0xC825A0")]
		private static ISnapObject <FindSnapObjects>m__0(GameObject a)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public class PlayerCamera
	{
		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8285C", Offset = "0xC8285C")]
		private sealed class <Rotate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 <from>__0;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float angle;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector3 <to>__0;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal float <t>__0;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float <current>__1;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float <next>__1;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float <angleToRotate>__1;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal PlayerCamera $this;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal object $current;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal bool $disposing;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal int $PC;

			[Token(Token = "0x17000593")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60029FE")]
				[Address(RVA = "0xE517EC", Offset = "0xE517EC", VA = "0xE517EC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029FF")]
				[Address(RVA = "0xE517F4", Offset = "0xE517F4", VA = "0xE517F4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029FC")]
			[Address(RVA = "0xE51570", Offset = "0xE51570", VA = "0xE51570")]
			[DebuggerHidden]
			public <Rotate>c__Iterator0()
			{
			}

			[Token(Token = "0x60029FD")]
			[Address(RVA = "0xE51578", Offset = "0xE51578", VA = "0xE51578", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A00")]
			[Address(RVA = "0xE517FC", Offset = "0xE517FC", VA = "0xE517FC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A01")]
			[Address(RVA = "0xE51810", Offset = "0xE51810", VA = "0xE51810", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000BF2")]
		private const float RotationDuration = 0.1f;

		[Token(Token = "0x4000BF3")]
		private const float RotationDegreesPerFrame = 10f;

		[Token(Token = "0x4000BF4")]
		private const float RotationStep = 45f;

		[Token(Token = "0x4000BF5")]
		private const float DegreesFullCircle = 360f;

		[Token(Token = "0x4000BF6")]
		private const float DegreesHalfCircle = 180f;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlatformType m_platformType;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_cameraRig;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LayerMask m_originalCullingMask;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_recenterCameraEventToken;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82670", Offset = "0xC82670")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82670", Offset = "0xC82670")]
		private PostProcessingBehaviour <PostProcessing>k__BackingField;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC826AC", Offset = "0xC826AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC826AC", Offset = "0xC826AC")]
		private Transform <CameraTransform>k__BackingField;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC826E8", Offset = "0xC826E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC826E8", Offset = "0xC826E8")]
		private Transform <LeftHand>k__BackingField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82724", Offset = "0xC82724")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82724", Offset = "0xC82724")]
		private Transform <RightHand>k__BackingField;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82760", Offset = "0xC82760")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82760", Offset = "0xC82760")]
		private Camera <Camera>k__BackingField;

		[Token(Token = "0x170001EF")]
		public PostProcessingBehaviour PostProcessing
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xE50588", Offset = "0xE50588", VA = "0xE50588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8279C", Offset = "0xC8279C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xE50590", Offset = "0xE50590", VA = "0xE50590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827AC", Offset = "0xC827AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xE50598", Offset = "0xE50598", VA = "0xE50598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827BC", Offset = "0xC827BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xE505A0", Offset = "0xE505A0", VA = "0xE505A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827CC", Offset = "0xC827CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public Transform LeftHand
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xE505A8", Offset = "0xE505A8", VA = "0xE505A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827DC", Offset = "0xC827DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xE505B0", Offset = "0xE505B0", VA = "0xE505B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827EC", Offset = "0xC827EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public Transform RightHand
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xE505B8", Offset = "0xE505B8", VA = "0xE505B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC827FC", Offset = "0xC827FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xE505C0", Offset = "0xE505C0", VA = "0xE505C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8280C", Offset = "0xC8280C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public Camera Camera
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xE505C8", Offset = "0xE505C8", VA = "0xE505C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8281C", Offset = "0xC8281C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xE505D0", Offset = "0xE505D0", VA = "0xE505D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8282C", Offset = "0xC8282C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public Transform CameraRig
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xE505D8", Offset = "0xE505D8", VA = "0xE505D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8283C", Offset = "0xC8283C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xE5054C", Offset = "0xE5054C", VA = "0xE5054C")]
		public PlayerCamera(Transform cameraRig, PlatformType platform)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xE50660", Offset = "0xE50660", VA = "0xE50660")]
		public void SetCameraCullingMask(LayerMask mask)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xE506A4", Offset = "0xE506A4", VA = "0xE506A4")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xE50860", Offset = "0xE50860", VA = "0xE50860")]
		private void SubscribeToEvents()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xE50970", Offset = "0xE50970", VA = "0xE50970")]
		public void UnsubscribeToEvents()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xE50A00", Offset = "0xE50A00", VA = "0xE50A00")]
		public void TryInstantiateCamera()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xE50B80", Offset = "0xE50B80", VA = "0xE50B80")]
		private void InstantiateCamera(GameObject cameraPrefab)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xE50DB4", Offset = "0xE50DB4", VA = "0xE50DB4")]
		private void AdjustCameraRigPlacement()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xE50EE4", Offset = "0xE50EE4", VA = "0xE50EE4")]
		private void SetAndTogglePostProcessing()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xE50768", Offset = "0xE50768", VA = "0xE50768")]
		private void ToggleOcclusionCulling(Level loadedLevel)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xE507AC", Offset = "0xE507AC", VA = "0xE507AC")]
		private void ToggleCameraPostProcessing(bool enable)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xE50FA4", Offset = "0xE50FA4", VA = "0xE50FA4")]
		private void OnRecenterCamera(InputEvents.RecenterCameraEvent eventData)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xE50FA8", Offset = "0xE50FA8", VA = "0xE50FA8")]
		private void RecenterCamera()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xE5119C", Offset = "0xE5119C", VA = "0xE5119C")]
		public void FaceDirection(float yRotation)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xE513A0", Offset = "0xE513A0", VA = "0xE513A0")]
		public void RotateCamera(MonoBehaviour mono, RotationDirection rotationDirection)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xE514E8", Offset = "0xE514E8", VA = "0xE514E8")]
		[DebuggerHidden]
		private IEnumerator Rotate(float angle)
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xE513E8", Offset = "0xE513E8", VA = "0xE513E8")]
		private float GetRotationAngle(RotationDirection rotationDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xE5122C", Offset = "0xE5122C", VA = "0xE5122C")]
		private void RotateCameraRig(float rotationAngle)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class PlayerCameraEffectHandler
	{
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8290C", Offset = "0xC8290C")]
		private sealed class <ChangeEffect>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PostProcessingProfile profile;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ColorGradingModel.BasicSettings <basicSettings>__0;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float <saturation>__0;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float <contrast>__0;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float <frequency>__0;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float <startSaturation>__0;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal float <startContrast>__0;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal float <startFrequency>__0;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal float <current>__0;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal float saturationTarget;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal float contrastTarget;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal float frequencyTarget;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal float time;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal PlayerCameraEffectHandler $this;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal object $current;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal bool $disposing;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal int $PC;

			[Token(Token = "0x17000595")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A04")]
				[Address(RVA = "0xE5281C", Offset = "0xE5281C", VA = "0xE5281C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A05")]
				[Address(RVA = "0xE52824", Offset = "0xE52824", VA = "0xE52824", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A02")]
			[Address(RVA = "0xE52470", Offset = "0xE52470", VA = "0xE52470")]
			[DebuggerHidden]
			public <ChangeEffect>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A03")]
			[Address(RVA = "0xE5254C", Offset = "0xE5254C", VA = "0xE5254C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A06")]
			[Address(RVA = "0xE5282C", Offset = "0xE5282C", VA = "0xE5282C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A07")]
			[Address(RVA = "0xE52840", Offset = "0xE52840", VA = "0xE52840", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C01")]
		private const float SaturationTargetInside = 1f;

		[Token(Token = "0x4000C02")]
		private const float SaturationTargetOutside = 0f;

		[Token(Token = "0x4000C03")]
		private const float ContrastTargetInside = 0.9f;

		[Token(Token = "0x4000C04")]
		private const float ContrastTargetOutside = 1.4f;

		[Token(Token = "0x4000C05")]
		private const float FrequencyInside = 1f;

		[Token(Token = "0x4000C06")]
		private const float FrequencyOutside = 0.1f;

		[Token(Token = "0x4000C07")]
		private const float FadeTimeInside = 0.4f;

		[Token(Token = "0x4000C08")]
		private const float FadeTimeOutside = 0.6f;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_hasMatchEnded;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool m_isInsideTileArea;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool m_isWandPositionValid;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PostProcessingBehaviour m_postProcessingBehavior;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraSaturationHandler m_cameraSaturationHandler;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_currentCoroutine;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_tileAreaEnterEventToken;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_tileAreaExitEventToken;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_wandPositionValidationEventToken;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC828BC", Offset = "0xC828BC")]
		private static Action <>f__am$cache0;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC828CC", Offset = "0xC828CC")]
		private static Action <>f__am$cache1;

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xE51874", Offset = "0xE51874", VA = "0xE51874")]
		public PlayerCameraEffectHandler(PlayerControl playerControl, PostProcessingBehaviour postProcessingBehavior, CameraSaturationHandler cameraSaturationHandler)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xE51A5C", Offset = "0xE51A5C", VA = "0xE51A5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xE51CC4", Offset = "0xE51CC4", VA = "0xE51CC4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE51D7C", Offset = "0xE51D7C", VA = "0xE51D7C")]
		private void OnTileAreaEnter(Events.TileAreaEnterEvent eventData)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE51DAC", Offset = "0xE51DAC", VA = "0xE51DAC")]
		private void OnTileAreaExit(Events.TileAreaExitEvent eventData)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xE52008", Offset = "0xE52008", VA = "0xE52008")]
		private void OnWandPositionValidated(Events.WandPositionValidationEvent eventData)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE51D94", Offset = "0xE51D94", VA = "0xE51D94")]
		private void TryDisableGrayscale()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE51B18", Offset = "0xE51B18", VA = "0xE51B18")]
		public void ResetGrayscale()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE51DB4", Offset = "0xE51DB4", VA = "0xE51DB4")]
		private void ActivateGrayscale()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE5206C", Offset = "0xE5206C", VA = "0xE5206C")]
		private void DeactivateGrayscale()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xE52394", Offset = "0xE52394", VA = "0xE52394")]
		[DebuggerHidden]
		private IEnumerator ChangeEffect(PostProcessingProfile profile, float saturationTarget, float contrastTarget, float frequencyTarget, float time)
		{
			return null;
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE522BC", Offset = "0xE522BC", VA = "0xE522BC")]
		private void SetSaturationAndContrast(PostProcessingProfile profile, float saturationTarget, float contrastTarget)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xE52478", Offset = "0xE52478", VA = "0xE52478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC828EC", Offset = "0xC828EC")]
		private static void <ActivateGrayscale>m__0()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xE524E4", Offset = "0xE524E4", VA = "0xE524E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC828FC", Offset = "0xC828FC")]
		private static void <DeactivateGrayscale>m__1()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class PlayerControl : CharacterControl, IPauseObject
	{
		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82C44", Offset = "0xC82C44")]
		private sealed class <SpawnAndConnectWielder>c__AnonStorey1
		{
			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Level level;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayerControl $this;

			[Token(Token = "0x6002A08")]
			[Address(RVA = "0xE54F10", Offset = "0xE54F10", VA = "0xE54F10")]
			public <SpawnAndConnectWielder>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002A09")]
			[Address(RVA = "0xE59410", Offset = "0xE59410", VA = "0xE59410")]
			internal void <>m__0(Wielder wielder)
			{
			}
		}

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82C54", Offset = "0xC82C54")]
		private sealed class <RecenterCameraAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000597")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A0C")]
				[Address(RVA = "0xE59388", Offset = "0xE59388", VA = "0xE59388", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A0D")]
				[Address(RVA = "0xE59390", Offset = "0xE59390", VA = "0xE59390", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0xE5716C", Offset = "0xE5716C", VA = "0xE5716C")]
			[DebuggerHidden]
			public <RecenterCameraAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0xE5926C", Offset = "0xE5926C", VA = "0xE5926C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0xE59398", Offset = "0xE59398", VA = "0xE59398", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0xE593AC", Offset = "0xE593AC", VA = "0xE593AC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private HapticsData m_takeDamageHapticsSmall;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private HapticsData m_takeDamageHapticsBig;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_atmosphericEffect;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private LobbyState? m_previousLobbyState;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private PlayerCamera m_camera;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private PlayerTileAreaHandler m_tileAreaHandler;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private PlayerCameraEffectHandler m_cameraEffectHandler;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private PlayerUI m_hud;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private PlayerUI m_hudPrewarmed;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject m_playerHudAsset;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool m_trackTileArea;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool m_updateInput;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float m_autoLeapTimer;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ActivatableValue m_tileHealTimer;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private PlayerStats m_playerStats;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private EventToken m_rotateCameraEventToken;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private EventToken m_connectedToMatchRoomEventToken;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8299C", Offset = "0xC8299C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8299C", Offset = "0xC8299C")]
		private VirtualTransform <OriginTrackingTarget>k__BackingField;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC829D8", Offset = "0xC829D8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC829D8", Offset = "0xC829D8")]
		private VirtualTransform <HeadTrackingTarget>k__BackingField;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82A14", Offset = "0xC82A14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82A14", Offset = "0xC82A14")]
		private VirtualTransform <LeftHandTrackingTarget>k__BackingField;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82A50", Offset = "0xC82A50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82A50", Offset = "0xC82A50")]
		private VirtualTransform <RightHandTrackingTarget>k__BackingField;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82A8C", Offset = "0xC82A8C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82A8C", Offset = "0xC82A8C")]
		private PlayerInput <Input>k__BackingField;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82AC8", Offset = "0xC82AC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82AC8", Offset = "0xC82AC8")]
		private bool <IsTrackingHands>k__BackingField;

		[Token(Token = "0x170001F5")]
		public VirtualTransform OriginTrackingTarget
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xE52964", Offset = "0xE52964", VA = "0xE52964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B04", Offset = "0xC82B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public VirtualTransform HeadTrackingTarget
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xE5296C", Offset = "0xE5296C", VA = "0xE5296C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B14", Offset = "0xC82B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public VirtualTransform LeftHandTrackingTarget
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xE52974", Offset = "0xE52974", VA = "0xE52974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B24", Offset = "0xC82B24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public VirtualTransform RightHandTrackingTarget
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xE5297C", Offset = "0xE5297C", VA = "0xE5297C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B34", Offset = "0xC82B34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public PlayerInput Input
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xE52984", Offset = "0xE52984", VA = "0xE52984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B44", Offset = "0xC82B44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xE5298C", Offset = "0xE5298C", VA = "0xE5298C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B54", Offset = "0xC82B54")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xE52994", Offset = "0xE52994", VA = "0xE52994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B64", Offset = "0xC82B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public Transform CameraRigTransform
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xE529BC", Offset = "0xE529BC", VA = "0xE529BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B74", Offset = "0xC82B74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public Transform CameraPivot
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xE529E4", Offset = "0xE529E4", VA = "0xE529E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B84", Offset = "0xC82B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public PlayerUI HUD
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xE52A1C", Offset = "0xE52A1C", VA = "0xE52A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82B94", Offset = "0xC82B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public bool IsTrackingHands
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xE52AA4", Offset = "0xE52AA4", VA = "0xE52AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BA4", Offset = "0xC82BA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xE52AAC", Offset = "0xE52AAC", VA = "0xE52AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BB4", Offset = "0xC82BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool IsInputLocked
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xE52AB8", Offset = "0xE52AB8", VA = "0xE52AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BC4", Offset = "0xC82BC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		public bool IsDualWielding
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xE4F5F8", Offset = "0xE4F5F8", VA = "0xE4F5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BD4", Offset = "0xC82BD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		public bool IsAlwaysCursed
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xE52B84", Offset = "0xE52B84", VA = "0xE52B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BE4", Offset = "0xC82BE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		public override float CurseTimeLeft
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xE52B8C", Offset = "0xE52B8C", VA = "0xE52B8C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82BF4", Offset = "0xC82BF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xE528A4", Offset = "0xE528A4", VA = "0xE528A4")]
		public PlayerControl()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xE52BA4", Offset = "0xE52BA4", VA = "0xE52BA4", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xE52D28", Offset = "0xE52D28", VA = "0xE52D28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xE53B04", Offset = "0xE53B04", VA = "0xE53B04", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xE53C1C", Offset = "0xE53C1C", VA = "0xE53C1C", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xE53D7C", Offset = "0xE53D7C", VA = "0xE53D7C", Slot = "17")]
		protected override void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xE5401C", Offset = "0xE5401C", VA = "0xE5401C", Slot = "46")]
		protected override void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xE546A4", Offset = "0xE546A4", VA = "0xE546A4", Slot = "32")]
		protected override void OnLevelInitialized(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xE548D4", Offset = "0xE548D4", VA = "0xE548D4")]
		private void CreateStatsAndApplyWandProperties()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xE54C2C", Offset = "0xE54C2C", VA = "0xE54C2C")]
		private void ApplyWandProperties(ref RewardModifiers rewardModifiers, WandHand wandHand, WandProperty[] wandProperties, bool applyDoubleEffect)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xE54DFC", Offset = "0xE54DFC", VA = "0xE54DFC", Slot = "42")]
		protected override void SpawnAndConnectWielder(Level level)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xE54F18", Offset = "0xE54F18", VA = "0xE54F18", Slot = "45")]
		protected override void OnWielderSpawned(Wielder wielder, Level level)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE5560C", Offset = "0xE5560C", VA = "0xE5560C", Slot = "44")]
		protected override void UpdateObjectLayer(LayerMask layer)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE52CF4", Offset = "0xE52CF4", VA = "0xE52CF4")]
		private void SetAtmosphericEffectActive(bool active)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xE55780", Offset = "0xE55780", VA = "0xE55780")]
		public bool TryInstantiatePlayerWand(bool isDualWielding)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xE557E0", Offset = "0xE557E0", VA = "0xE557E0", Slot = "38")]
		public override void InstantiatePlayerWand()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xE5586C", Offset = "0xE5586C", VA = "0xE5586C", Slot = "41")]
		protected override AimInput GetAimInputType()
		{
			return default(AimInput);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xE558C8", Offset = "0xE558C8", VA = "0xE558C8", Slot = "47")]
		public override void SpawnWandController(Level level)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xE55A10", Offset = "0xE55A10", VA = "0xE55A10")]
		private void InitializeHUD()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xE56240", Offset = "0xE56240", VA = "0xE56240", Slot = "30")]
		public override void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xE5647C", Offset = "0xE5647C", VA = "0xE5647C")]
		private void OnRotateCamera(InputEvents.RotateCameraEvent eventData)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xE564C8", Offset = "0xE564C8", VA = "0xE564C8", Slot = "37")]
		protected override void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xE56510", Offset = "0xE56510", VA = "0xE56510", Slot = "18")]
		protected override void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xE56958", Offset = "0xE56958", VA = "0xE56958", Slot = "33")]
		protected override void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xE569A4", Offset = "0xE569A4", VA = "0xE569A4", Slot = "34")]
		protected override void OnCountdownStarted(Events.CountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xE56A08", Offset = "0xE56A08", VA = "0xE56A08", Slot = "35")]
		protected override void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xE56BA4", Offset = "0xE56BA4", VA = "0xE56BA4", Slot = "36")]
		protected override void OnWandControllerDespawned(InputEvents.WandControllerDespawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xE56BA8", Offset = "0xE56BA8", VA = "0xE56BA8")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE56C00", Offset = "0xE56C00", VA = "0xE56C00")]
		public void RespawnWielder()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xE53F9C", Offset = "0xE53F9C", VA = "0xE53F9C")]
		public void ToggleInputActive(bool active)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xE56394", Offset = "0xE56394", VA = "0xE56394")]
		public void SetSpellInputActive()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xE5632C", Offset = "0xE5632C", VA = "0xE5632C")]
		public void SetSpellInputActive(bool active)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xE56DD8", Offset = "0xE56DD8", VA = "0xE56DD8")]
		public void SetCameraCullingMask(LayerMask mask)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xE544E4", Offset = "0xE544E4", VA = "0xE544E4")]
		public void UpdateInputMethod(bool force)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xE54434", Offset = "0xE54434", VA = "0xE54434")]
		public void CreateInputSystem()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xE570C0", Offset = "0xE570C0", VA = "0xE570C0")]
		public void StopCurrentInputListener()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xE52BE4", Offset = "0xE52BE4", VA = "0xE52BE4")]
		private void CreateCamera()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xE54540", Offset = "0xE54540", VA = "0xE54540")]
		public void RecenterCamera(float delay = 0f, bool force = false)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xE570F8", Offset = "0xE570F8", VA = "0xE570F8")]
		[DebuggerHidden]
		private IEnumerator RecenterCameraAfterTime(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xE55454", Offset = "0xE55454", VA = "0xE55454")]
		public void MatchTileRotation(Transform tileTransform)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xE57174", Offset = "0xE57174", VA = "0xE57174")]
		public void OnPlayerDisconnected(int layerIndex)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xE56AE4", Offset = "0xE56AE4", VA = "0xE56AE4")]
		private void EnablePlayerHUD()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE54408", Offset = "0xE54408", VA = "0xE54408")]
		private void DisablePlayerHUD()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE572F4", Offset = "0xE572F4", VA = "0xE572F4")]
		public void SetCastFeedbackActive(bool active, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE57388", Offset = "0xE57388", VA = "0xE57388")]
		public void UpdatePlayerStatsMana(float changeValue)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xE5755C", Offset = "0xE5755C", VA = "0xE5755C")]
		public void UpdatePlayerStatsHealth(float changeValue)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE57690", Offset = "0xE57690", VA = "0xE57690", Slot = "21")]
		protected override void UpdateMana(float changeValue)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xE576C8", Offset = "0xE576C8", VA = "0xE576C8", Slot = "31")]
		protected override void RegenerateMana()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xE5777C", Offset = "0xE5777C", VA = "0xE5777C")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xE578FC", Offset = "0xE578FC", VA = "0xE578FC")]
		public void AddHealthPickup(float pickupAmount, WandHand pickupHand)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xE579D4", Offset = "0xE579D4", VA = "0xE579D4", Slot = "22")]
		public override void ChangeHealth(float changeValue)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xE57B04", Offset = "0xE57B04", VA = "0xE57B04", Slot = "23")]
		protected override void UpdateHealth(float changeValue)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xE57B88", Offset = "0xE57B88", VA = "0xE57B88", Slot = "19")]
		public override bool TakeDamage(DamageType damageType, float damage, Vector2 hitDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE57E44", Offset = "0xE57E44", VA = "0xE57E44")]
		private void TriggerHaptics(float damage)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE57FF0", Offset = "0xE57FF0", VA = "0xE57FF0", Slot = "26")]
		public override void SetChillingClutchEffectActive(bool active)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE58114", Offset = "0xE58114", VA = "0xE58114", Slot = "27")]
		public override void DisableActiveEffects()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE58150", Offset = "0xE58150", VA = "0xE58150", Slot = "28")]
		public override void ResetHealth()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xE58194", Offset = "0xE58194", VA = "0xE58194", Slot = "29")]
		public override void ResetMana()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xE581C8", Offset = "0xE581C8", VA = "0xE581C8", Slot = "52")]
		public override void ResetToInsideTileArea(Vector3 tilePosition)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xE58228", Offset = "0xE58228", VA = "0xE58228", Slot = "51")]
		public override void ResetPosition(MatchType matchType)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xE58314", Offset = "0xE58314", VA = "0xE58314", Slot = "49")]
		protected override void RemoveMovement()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xE58364", Offset = "0xE58364", VA = "0xE58364", Slot = "48")]
		protected override void CreateMovement(Tile startTile)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xE584FC", Offset = "0xE584FC", VA = "0xE584FC", Slot = "43")]
		protected override void SetMovementTile(Tile tile)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xE5860C", Offset = "0xE5860C", VA = "0xE5860C", Slot = "50")]
		public override Vector3 GetPlayerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xE586A4", Offset = "0xE586A4", VA = "0xE586A4")]
		public void SetCameraEffectActive(EffectType type, bool active)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xE586FC", Offset = "0xE586FC", VA = "0xE586FC", Slot = "40")]
		public override void SetFreeTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xE587B8", Offset = "0xE587B8", VA = "0xE587B8", Slot = "39")]
		public override void TryTrackTileHit(WandHand wandHand)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xE5385C", Offset = "0xE5385C", VA = "0xE5385C")]
		private void UpdateWielderTrackingTransforms()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xE53158", Offset = "0xE53158", VA = "0xE53158")]
		private void UpdateTrackingTransforms()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xE58968", Offset = "0xE58968", VA = "0xE58968")]
		private void LimitPositionsInsideTile()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xE58AF8", Offset = "0xE58AF8", VA = "0xE58AF8", Slot = "24")]
		public override void EnableCurse(float curseTime, CurseLingeringEffect curse)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xE58BB4", Offset = "0xE58BB4", VA = "0xE58BB4", Slot = "25")]
		public override void DisableCurse()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xE58C74", Offset = "0xE58C74", VA = "0xE58C74", Slot = "14")]
		public override void CreateHP()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xE58CA4", Offset = "0xE58CA4", VA = "0xE58CA4", Slot = "15")]
		public override void CreateMana()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xE58890", Offset = "0xE58890", VA = "0xE58890")]
		public static Vector3 InputTrackingGetLocalPosition(XRNode node)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xE588FC", Offset = "0xE588FC", VA = "0xE588FC")]
		public static Quaternion InputTrackingGetLocalRotation(XRNode node)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xE58CD8", Offset = "0xE58CD8", VA = "0xE58CD8", Slot = "53")]
		protected override void TryDepleteMaxMana(float depletionMultiplier)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xE57AE0", Offset = "0xE57AE0", VA = "0xE57AE0")]
		private void TryRestoreManaFromDamage(float damage)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xE57EA4", Offset = "0xE57EA4", VA = "0xE57EA4")]
		private void TryAutoLeapContinuous()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xE57E94", Offset = "0xE57E94", VA = "0xE57E94")]
		private void TryAutoLeapImmediate()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xE58D50", Offset = "0xE58D50", VA = "0xE58D50")]
		private void TryAutoLeap()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xE56B48", Offset = "0xE56B48", VA = "0xE56B48")]
		private void TryResetHealTileTimer()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xE538BC", Offset = "0xE538BC", VA = "0xE538BC")]
		private void TryActivateHealEffectOnTile()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xE55C94", Offset = "0xE55C94", VA = "0xE55C94")]
		private void TrySideloadWandPropertySpells()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xE58F20", Offset = "0xE58F20", VA = "0xE58F20")]
		private void ActivateUnbreakableCurse()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xE53E2C", Offset = "0xE53E2C", VA = "0xE53E2C")]
		private void ResetWandProperties()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xE59070", Offset = "0xE59070", VA = "0xE59070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82C14", Offset = "0xC82C14")]
		private void <OnSceneLoaded>m__0()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xE59078", Offset = "0xE59078", VA = "0xE59078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82C24", Offset = "0xC82C24")]
		private void <OnSceneLoaded>m__1()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xE59080", Offset = "0xE59080", VA = "0xE59080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82C34", Offset = "0xC82C34")]
		private void <ActivateUnbreakableCurse>m__2(GameObject loadedObject)
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class PlayerInput
	{
		[Token(Token = "0x4000C2D")]
		private const float RotationLockTime = 0.4f;

		[Token(Token = "0x4000C2E")]
		private const float DragDistanceMultiplier = 0.35f;

		[Token(Token = "0x4000C2F")]
		private const float GrabDistanceDefault = 0.25f;

		[Token(Token = "0x4000C30")]
		private const float GrabDistanceHead = 0.5f;

		[Token(Token = "0x4000C31")]
		private const string AimPivotName = "AimPivot";

		[Token(Token = "0x4000C32")]
		private const string WandPivotName = "Wand";

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly WandHand m_defaultHand;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_trackDragObjects;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_currentRecenterHoldTime;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_rotationLockTimer;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_grabDistance;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_cameraRig;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_workshopControllerTransform;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IList<Transform> m_controllerTransforms;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IList<PlayerAim> m_playerAims;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_rightHandTransform;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_leftHandTransform;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IDragObject m_dragObject;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ISnapObject m_closestSnapObject;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AimData m_aimData;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HandsHandler m_handsHandler;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerAim m_cameraAim;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerAim m_defaultAim;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IHapticsPlatform m_hapticsPlatform;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InputEvents.InputChangedEvent m_inputChangedEvent;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_sceneLoadInitiatedEventToken;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_platformInputUpdatedEventToken;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_dualWieldStateUpdatedEventToken;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EventToken m_wandGripChangedEventToken;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IDictionary<WandHand, Interactable> m_highlightedInteractables;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82CB4", Offset = "0xC82CB4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82CB4", Offset = "0xC82CB4")]
		private WandsInputManager <InputManager>k__BackingField;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82CF0", Offset = "0xC82CF0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82CF0", Offset = "0xC82CF0")]
		private WandSlot <ClosestSlot>k__BackingField;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82D2C", Offset = "0xC82D2C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82D2C", Offset = "0xC82D2C")]
		private bool <IsDragEnabled>k__BackingField;

		[Token(Token = "0x17000203")]
		public WandsInputManager InputManager
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0xE4D17C", Offset = "0xE4D17C", VA = "0xE4D17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82D68", Offset = "0xC82D68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xE59668", Offset = "0xE59668", VA = "0xE59668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82D78", Offset = "0xC82D78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public WandSlot ClosestSlot
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xE59670", Offset = "0xE59670", VA = "0xE59670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82D88", Offset = "0xC82D88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xE59678", Offset = "0xE59678", VA = "0xE59678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82D98", Offset = "0xC82D98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public bool IsDragEnabled
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xE59680", Offset = "0xE59680", VA = "0xE59680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82DA8", Offset = "0xC82DA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xE59688", Offset = "0xE59688", VA = "0xE59688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82DB8", Offset = "0xC82DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public bool IsDualWielding
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0xE4E6E8", Offset = "0xE4E6E8", VA = "0xE4E6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82DC8", Offset = "0xC82DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public WandInput WandInput
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xE59694", Offset = "0xE59694", VA = "0xE59694")]
			get
			{
				return default(WandInput);
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xE596BC", Offset = "0xE596BC", VA = "0xE596BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public AimInput AimInput
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xE558A0", Offset = "0xE558A0", VA = "0xE558A0")]
			get
			{
				return default(AimInput);
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xE596E8", Offset = "0xE596E8", VA = "0xE596E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xE56E08", Offset = "0xE56E08", VA = "0xE56E08")]
		public PlayerInput(PlayerControl playerControl, AimData aimData, Transform playerTransform, Transform cameraTransform)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xE57050", Offset = "0xE57050", VA = "0xE57050")]
		public void CreateInputManager()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xE52E58", Offset = "0xE52E58", VA = "0xE52E58")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xE5945C", Offset = "0xE5945C", VA = "0xE5945C")]
		private void SubscribeToEvents()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xE53CCC", Offset = "0xE53CCC", VA = "0xE53CCC")]
		public void UnsubscribeToEvents()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xE59C48", Offset = "0xE59C48", VA = "0xE59C48")]
		private void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xE59F5C", Offset = "0xE59F5C", VA = "0xE59F5C")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xE5A58C", Offset = "0xE5A58C", VA = "0xE5A58C")]
		private void OnPlatformInputUpdated(InputEvents.PlatformInputUpdated eventData)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xE5A8C0", Offset = "0xE5A8C0", VA = "0xE5A8C0")]
		private void OnDualWieldStateUpdated(InputEvents.DualWieldStateUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xE5A9BC", Offset = "0xE5A9BC", VA = "0xE5A9BC")]
		private void OnWandGripChanged(InputEvents.WandGripChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xE59FF0", Offset = "0xE59FF0", VA = "0xE59FF0")]
		private void UpdateInputListener(Level currentLevel)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xE554DC", Offset = "0xE554DC", VA = "0xE554DC")]
		public void SpawnArenaControllers(Level level)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xE555B0", Offset = "0xE555B0", VA = "0xE555B0")]
		public void SpawnLobbyController()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xE5A63C", Offset = "0xE5A63C", VA = "0xE5A63C")]
		private void PlatformInputUpdated(AimInput aimInput, WandInput wandInput)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xE5A270", Offset = "0xE5A270", VA = "0xE5A270")]
		private void UpdateController(Level level)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xE5AE0C", Offset = "0xE5AE0C", VA = "0xE5AE0C")]
		private void EnableGazeControls()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xE5AF48", Offset = "0xE5AF48", VA = "0xE5AF48")]
		private void InstantiateWorkshopController()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xE5B440", Offset = "0xE5B440", VA = "0xE5B440")]
		private void TryInstantiateControlPrefab()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xE5B75C", Offset = "0xE5B75C", VA = "0xE5B75C")]
		private void InstantiateControllers()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xE55918", Offset = "0xE55918", VA = "0xE55918")]
		public void SetWandController(WandManager wandManager)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xE5BD40", Offset = "0xE5BD40", VA = "0xE5BD40")]
		private void UpdateHandedness()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xE5A7BC", Offset = "0xE5A7BC", VA = "0xE5A7BC")]
		private void UpdateHaptics(bool isDualWieldEnabled)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xE5A39C", Offset = "0xE5A39C", VA = "0xE5A39C")]
		private void UpdateWorkshopAimPivot()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xE5A9F4", Offset = "0xE5A9F4", VA = "0xE5A9F4")]
		private void UpdateAimPivots()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xE5BA60", Offset = "0xE5BA60", VA = "0xE5BA60")]
		private void InstantiateHands()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xE5C0D4", Offset = "0xE5C0D4", VA = "0xE5C0D4")]
		private void HideHands()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xE5B234", Offset = "0xE5B234", VA = "0xE5B234")]
		private void HideActiveController()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xE59CD0", Offset = "0xE59CD0", VA = "0xE59CD0")]
		private void DestroyActiveController()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xE4C60C", Offset = "0xE4C60C", VA = "0xE4C60C")]
		public bool TryInteractWithObject(bool setToNull = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xE4B724", Offset = "0xE4B724", VA = "0xE4B724")]
		public bool TryInteractWithObject(WandHand wandHand, bool setToNull = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xE4D348", Offset = "0xE4D348", VA = "0xE4D348")]
		public void TryInteractWithWorkshopObject(bool isAutoTeleportEnabled)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xE4DA24", Offset = "0xE4DA24", VA = "0xE4DA24")]
		public void TryInteractWithWorkshopTile()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xE4B904", Offset = "0xE4B904", VA = "0xE4B904")]
		public bool CloseMenus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xE4BE40", Offset = "0xE4BE40", VA = "0xE4BE40")]
		public void RotateTowards(RotationDirection rotationDirection)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xE4C258", Offset = "0xE4C258", VA = "0xE4C258")]
		public void ResetRecenterPlayer()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xE4BF98", Offset = "0xE4BF98", VA = "0xE4BF98")]
		public void TryRecenterPlayer()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xE5C2A8", Offset = "0xE5C2A8", VA = "0xE5C2A8")]
		public void TryTrackInteractObjects()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xE50394", Offset = "0xE50394", VA = "0xE50394")]
		public void TryTrackInteractObjects(WandHand wandHand)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xE5C2B0", Offset = "0xE5C2B0", VA = "0xE5C2B0")]
		private void TrackDragAndInteractObjects()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xE5C9C8", Offset = "0xE5C9C8", VA = "0xE5C9C8")]
		private void TrackInteractObjects(WandHand wandHand)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xE4D4D0", Offset = "0xE4D4D0", VA = "0xE4D4D0")]
		public void EnableDrag()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xE4D8BC", Offset = "0xE4D8BC", VA = "0xE4D8BC")]
		public void DisableDrag()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xE59714", Offset = "0xE59714", VA = "0xE59714")]
		private void HandleDrag()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xE4EF6C", Offset = "0xE4EF6C", VA = "0xE4EF6C")]
		public bool IsObjectHighlighted(WandHand wandHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xE579CC", Offset = "0xE579CC", VA = "0xE579CC")]
		public void NullHighlightedInteractable()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xE4F064", Offset = "0xE4F064", VA = "0xE4F064")]
		public void NullHighlightedInteractable(WandHand wandHand)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xE5D108", Offset = "0xE5D108", VA = "0xE5D108")]
		private void NullDragObject()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xE5C1AC", Offset = "0xE5C1AC", VA = "0xE5C1AC")]
		private PlayerAim CreateAim(Transform controllerTransform, WandHand wandHand = WandHand.Right)
		{
			return null;
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xE55DFC", Offset = "0xE55DFC", VA = "0xE55DFC")]
		public PlayerAim GetAim()
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xE58DD0", Offset = "0xE58DD0", VA = "0xE58DD0")]
		public PlayerAim GetAim(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xE567F0", Offset = "0xE567F0", VA = "0xE567F0")]
		public void ResetAimReticle()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xE53E34", Offset = "0xE53E34", VA = "0xE53E34")]
		public void DisableAim()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xE5C0E8", Offset = "0xE5C0E8", VA = "0xE5C0E8")]
		private void ClearAim()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE5D110", Offset = "0xE5D110", VA = "0xE5D110")]
		public void PlayHitResponse()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xE57F08", Offset = "0xE57F08", VA = "0xE57F08")]
		public void TriggerHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand = WandHand.Right)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE56D00", Offset = "0xE56D00", VA = "0xE56D00")]
		public void CancelHaptics(VibrateController controller, WandHand wandHand = WandHand.Right)
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x200021E")]
	public class PlayerInventory
	{
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<string> m_items;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xE8FA5C", Offset = "0xE8FA5C", VA = "0xE8FA5C")]
		public PlayerInventory()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE8FACC", Offset = "0xE8FACC", VA = "0xE8FACC")]
		public bool TryAddItem(string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE93648", Offset = "0xE93648", VA = "0xE93648")]
		public bool ContainsItem(string itemId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021F")]
	public class PlayerLevelData
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82DD8", Offset = "0xC82DD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82DD8", Offset = "0xC82DD8")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E14", Offset = "0xC82E14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82E14", Offset = "0xC82E14")]
		private int <CurrentExperience>k__BackingField;

		[Token(Token = "0x17000209")]
		public int Level
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xE8E5C0", Offset = "0xE8E5C0", VA = "0xE8E5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E50", Offset = "0xC82E50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xE95250", Offset = "0xE95250", VA = "0xE95250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E60", Offset = "0xC82E60")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public int CurrentExperience
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xE94EC0", Offset = "0xE94EC0", VA = "0xE94EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E70", Offset = "0xC82E70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xE95258", Offset = "0xE95258", VA = "0xE95258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E80", Offset = "0xC82E80")]
			set
			{
			}
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xE966A0", Offset = "0xE966A0", VA = "0xE966A0")]
		public PlayerLevelData()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xE966A8", Offset = "0xE966A8", VA = "0xE966A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000220")]
	public class PlayerLogInObject
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82E90", Offset = "0xC82E90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82E90", Offset = "0xC82E90")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82ECC", Offset = "0xC82ECC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82ECC", Offset = "0xC82ECC")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F08", Offset = "0xC82F08")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82F08", Offset = "0xC82F08")]
		private bool <IsOnline>k__BackingField;

		[Token(Token = "0x1700020B")]
		public string UserName
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xE9093C", Offset = "0xE9093C", VA = "0xE9093C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F44", Offset = "0xC82F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xE968C4", Offset = "0xE968C4", VA = "0xE968C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F54", Offset = "0xC82F54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public string UserId
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xE90944", Offset = "0xE90944", VA = "0xE90944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F64", Offset = "0xC82F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xE968CC", Offset = "0xE968CC", VA = "0xE968CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F74", Offset = "0xC82F74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool IsOnline
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xE8E7A8", Offset = "0xE8E7A8", VA = "0xE8E7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F84", Offset = "0xC82F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xE968D4", Offset = "0xE968D4", VA = "0xE968D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82F94", Offset = "0xC82F94")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xE96880", Offset = "0xE96880", VA = "0xE96880")]
		public PlayerLogInObject(string userName, string userId, bool isOnline)
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class PlayerMatchData
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82FA4", Offset = "0xC82FA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82FA4", Offset = "0xC82FA4")]
		private DateTime <LastMatchDate>k__BackingField;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC82FE0", Offset = "0xC82FE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC82FE0", Offset = "0xC82FE0")]
		private DateTime <LastWinDate>k__BackingField;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8301C", Offset = "0xC8301C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8301C", Offset = "0xC8301C")]
		private int <MatchesPlayed>k__BackingField;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83058", Offset = "0xC83058")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83058", Offset = "0xC83058")]
		private int <MatchesWon>k__BackingField;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83094", Offset = "0xC83094")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83094", Offset = "0xC83094")]
		private Dictionary<string, int> <MatchesWonPerArena>k__BackingField;

		[Token(Token = "0x1700020E")]
		public DateTime LastMatchDate
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xE91D60", Offset = "0xE91D60", VA = "0xE91D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC830D0", Offset = "0xC830D0")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xE91D68", Offset = "0xE91D68", VA = "0xE91D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC830E0", Offset = "0xC830E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public DateTime LastWinDate
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xE91F94", Offset = "0xE91F94", VA = "0xE91F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC830F0", Offset = "0xC830F0")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xE91F9C", Offset = "0xE91F9C", VA = "0xE91F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83100", Offset = "0xC83100")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public int MatchesPlayed
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xE914AC", Offset = "0xE914AC", VA = "0xE914AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83110", Offset = "0xC83110")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xE92000", Offset = "0xE92000", VA = "0xE92000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83120", Offset = "0xC83120")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public int MatchesWon
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xE92064", Offset = "0xE92064", VA = "0xE92064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83130", Offset = "0xC83130")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xE9206C", Offset = "0xE9206C", VA = "0xE9206C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83140", Offset = "0xC83140")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public Dictionary<string, int> MatchesWonPerArena
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xE9222C", Offset = "0xE9222C", VA = "0xE9222C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83150", Offset = "0xC83150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xE92234", Offset = "0xE92234", VA = "0xE92234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83160", Offset = "0xC83160")]
			set
			{
			}
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xE968E0", Offset = "0xE968E0", VA = "0xE968E0")]
		public PlayerMatchData()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xE968E8", Offset = "0xE968E8", VA = "0xE968E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000222")]
	public class PlayerMatchStatsData
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83170", Offset = "0xC83170")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83170", Offset = "0xC83170")]
		private readonly int <RemainingHealth>k__BackingField;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC831AC", Offset = "0xC831AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC831AC", Offset = "0xC831AC")]
		private readonly int <ManaUsed>k__BackingField;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC831E8", Offset = "0xC831E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC831E8", Offset = "0xC831E8")]
		private readonly int <DamageDealt>k__BackingField;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83224", Offset = "0xC83224")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83224", Offset = "0xC83224")]
		private readonly int <PickupsUsed>k__BackingField;

		[Token(Token = "0x17000213")]
		public int RemainingHealth
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0xE96FAC", Offset = "0xE96FAC", VA = "0xE96FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83260", Offset = "0xC83260")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000214")]
		public int ManaUsed
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0xE96FB4", Offset = "0xE96FB4", VA = "0xE96FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83270", Offset = "0xC83270")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000215")]
		public int DamageDealt
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xE96FBC", Offset = "0xE96FBC", VA = "0xE96FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83280", Offset = "0xC83280")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000216")]
		public int PickupsUsed
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xE96FC4", Offset = "0xE96FC4", VA = "0xE96FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83290", Offset = "0xC83290")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xE96F60", Offset = "0xE96F60", VA = "0xE96F60")]
		public PlayerMatchStatsData(int remainingHealth, int manaUsed, int damageDealt, int pickupsUsed)
		{
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000223")]
	public class PlayerMove
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Tile m_currentTile;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayerMask m_teleportHitMask;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC832A0", Offset = "0xC832A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC832A0", Offset = "0xC832A0")]
		private Tile <StartTile>k__BackingField;

		[Token(Token = "0x17000217")]
		public Tile StartTile
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xE495B8", Offset = "0xE495B8", VA = "0xE495B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC832DC", Offset = "0xC832DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xE5D37C", Offset = "0xE5D37C", VA = "0xE5D37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC832EC", Offset = "0xC832EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE4A654", Offset = "0xE4A654", VA = "0xE4A654")]
		public PlayerMove(LayerMask teleportHitMask, Tile startTile)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xE4A704", Offset = "0xE4A704", VA = "0xE4A704")]
		public void ResetPosition(MatchType matchType, Transform playerTransform)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xE49E18", Offset = "0xE49E18", VA = "0xE49E18")]
		public Tile GetCurrentTile(Transform playerTransform)
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xE4A230", Offset = "0xE4A230", VA = "0xE4A230")]
		public void SetCurrentTile(Tile newTile)
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000224")]
	public class PlayerSaveData
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC832FC", Offset = "0xC832FC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC832FC", Offset = "0xC832FC")]
		private List<IDataParser> <AsynchronousParsers>k__BackingField;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83338", Offset = "0xC83338")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83338", Offset = "0xC83338")]
		private List<IDataParser> <SynchronousParsers>k__BackingField;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83374", Offset = "0xC83374")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83374", Offset = "0xC83374")]
		private PlayerLevelData <LevelData>k__BackingField;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC833B0", Offset = "0xC833B0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC833B0", Offset = "0xC833B0")]
		private int <VirtualCurrency>k__BackingField;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC833EC", Offset = "0xC833EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC833EC", Offset = "0xC833EC")]
		private Loadout[] <Loadouts>k__BackingField;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83428", Offset = "0xC83428")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83428", Offset = "0xC83428")]
		private PlayerMatchData <MatchData>k__BackingField;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83464", Offset = "0xC83464")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83464", Offset = "0xC83464")]
		private bool <IsDeveloper>k__BackingField;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC834A0", Offset = "0xC834A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC834A0", Offset = "0xC834A0")]
		private GameAccess <GameAccess>k__BackingField;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC834DC", Offset = "0xC834DC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC834DC", Offset = "0xC834DC")]
		private bool <CompletedTutorial>k__BackingField;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83518", Offset = "0xC83518")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83518", Offset = "0xC83518")]
		private PlayerAchievementCollectionData <AchievementData>k__BackingField;

		[Token(Token = "0x17000218")]
		public List<IDataParser> AsynchronousParsers
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xE95F38", Offset = "0xE95F38", VA = "0xE95F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83554", Offset = "0xC83554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xE97034", Offset = "0xE97034", VA = "0xE97034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83564", Offset = "0xC83564")]
			private set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public List<IDataParser> SynchronousParsers
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xE96294", Offset = "0xE96294", VA = "0xE96294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83574", Offset = "0xC83574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xE97044", Offset = "0xE97044", VA = "0xE97044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83584", Offset = "0xC83584")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public PlayerLevelData LevelData
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xE8E5B8", Offset = "0xE8E5B8", VA = "0xE8E5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83594", Offset = "0xC83594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xE96FCC", Offset = "0xE96FCC", VA = "0xE96FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835A4", Offset = "0xC835A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public int VirtualCurrency
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xE8EEEC", Offset = "0xE8EEEC", VA = "0xE8EEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835B4", Offset = "0xC835B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0xE90EAC", Offset = "0xE90EAC", VA = "0xE90EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835C4", Offset = "0xC835C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public Loadout[] Loadouts
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xE8E044", Offset = "0xE8E044", VA = "0xE8E044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835D4", Offset = "0xC835D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xE96FD4", Offset = "0xE96FD4", VA = "0xE96FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835E4", Offset = "0xC835E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public PlayerMatchData MatchData
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xE914A4", Offset = "0xE914A4", VA = "0xE914A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC835F4", Offset = "0xC835F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xE96FDC", Offset = "0xE96FDC", VA = "0xE96FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83604", Offset = "0xC83604")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public bool IsDeveloper
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xE91B4C", Offset = "0xE91B4C", VA = "0xE91B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83614", Offset = "0xC83614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xE8FB7C", Offset = "0xE8FB7C", VA = "0xE8FB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83624", Offset = "0xC83624")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public GameAccess GameAccess
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xE926E8", Offset = "0xE926E8", VA = "0xE926E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83634", Offset = "0xC83634")]
			get
			{
				return default(GameAccess);
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xE926F0", Offset = "0xE926F0", VA = "0xE926F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83644", Offset = "0xC83644")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public bool CompletedTutorial
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xE928BC", Offset = "0xE928BC", VA = "0xE928BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83654", Offset = "0xC83654")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xE928C4", Offset = "0xE928C4", VA = "0xE928C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83664", Offset = "0xC83664")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public PlayerAchievementCollectionData AchievementData
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0xE92AF4", Offset = "0xE92AF4", VA = "0xE92AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83674", Offset = "0xC83674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xE96FE4", Offset = "0xE96FE4", VA = "0xE96FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83684", Offset = "0xC83684")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public string LevelDataSerialized
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xE8F12C", Offset = "0xE8F12C", VA = "0xE8F12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public string VirtualCurrencySerialized
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xE8F330", Offset = "0xE8F330", VA = "0xE8F330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public string LoadoutsSerialized
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xE8F3F4", Offset = "0xE8F3F4", VA = "0xE8F3F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public string MatchDataSerialized
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xE8F448", Offset = "0xE8F448", VA = "0xE8F448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public string GameAccessSerialized
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xE8F35C", Offset = "0xE8F35C", VA = "0xE8F35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public string CompletedTutorialSerialized
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xE8F49C", Offset = "0xE8F49C", VA = "0xE8F49C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public string AchievementDataSerialized
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xE8F4C8", Offset = "0xE8F4C8", VA = "0xE8F4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xE8D70C", Offset = "0xE8D70C", VA = "0xE8D70C")]
		public PlayerSaveData()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xE8F094", Offset = "0xE8F094", VA = "0xE8F094")]
		public static SaveDataObject CreateSaveDataObject()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Serializable]
	[Token(Token = "0x2000225")]
	public struct ActivatableValue
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Value;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WandHand WandHand;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsActive;

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1035BC8", Offset = "0x1035BC8", VA = "0x1035BC8")]
		public ActivatableValue(float value)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1035BF0", Offset = "0x1035BF0", VA = "0x1035BF0")]
		public ActivatableValue(float value, WandHand wandHand)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000226")]
	public struct KOMultiplier
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float WinMultiplier;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float LoseMultiplier;
	}
	[Serializable]
	[Token(Token = "0x2000227")]
	public struct RewardModifiers
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Experience;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Currency;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Score;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public KOMultiplier KOMultiplier;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xE5FFC8", Offset = "0xE5FFC8", VA = "0xE5FFC8")]
		public RewardModifiers(float exp, float currency, float score)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000228")]
	public struct PlayerStats
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float MaxMana;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ManaRegen;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ActivatableValue ManaRestoreOnDamageTakenMultiplier;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxHealth;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DamageTakenMultiplier;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HealMultiplier;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivatableValue StartingArmor;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsAlwaysCursed;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ActivatableValue AutoCastLeapOnHitChance;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ActivatableValue AddHealToTileAfterSeconds;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ActivatableValue ManaRestoringPickups;

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xE5D5BC", Offset = "0xE5D5BC", VA = "0xE5D5BC")]
		public PlayerStats(float defaultManaRegen)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000229")]
	public struct ActiveWandEffects
	{
		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActivatableValue AcidTeleport;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Spell_AcidCloud Acid;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseAlternateSpellVisuals;
	}
	[Token(Token = "0x200022A")]
	public class PlayerTeleportHandler : TeleportHandler
	{
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC836A4", Offset = "0xC836A4")]
		private sealed class <Teleport>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PlayerTeleportHandler $this;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000599")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A12")]
				[Address(RVA = "0xE5E088", Offset = "0xE5E088", VA = "0xE5E088", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A13")]
				[Address(RVA = "0xE5E090", Offset = "0xE5E090", VA = "0xE5E090", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A10")]
			[Address(RVA = "0xE5D7D8", Offset = "0xE5D7D8", VA = "0xE5D7D8")]
			[DebuggerHidden]
			public <Teleport>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A11")]
			[Address(RVA = "0xE5D7E0", Offset = "0xE5D7E0", VA = "0xE5D7E0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A14")]
			[Address(RVA = "0xE5E098", Offset = "0xE5E098", VA = "0xE5E098", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A15")]
			[Address(RVA = "0xE5E0AC", Offset = "0xE5E0AC", VA = "0xE5E0AC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C84")]
		private const float TeleportFadeTime = 0.1f;

		[Token(Token = "0x4000C85")]
		private const float TeleportFadeTransparency = 0.25f;

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xE5D5F4", Offset = "0xE5D5F4", VA = "0xE5D5F4")]
		public PlayerTeleportHandler()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xE5D5F8", Offset = "0xE5D5F8", VA = "0xE5D5F8", Slot = "5")]
		public override void ResetTransform(Tile resetTile)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xE5D76C", Offset = "0xE5D76C", VA = "0xE5D76C", Slot = "7")]
		[DebuggerHidden]
		protected override IEnumerator Teleport()
		{
			return null;
		}
	}
	[Token(Token = "0x200022B")]
	public class PlayerTileAreaHandler
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PlayerControl m_playerControl;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Transform m_colliderTransform;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_playerPosition;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83704", Offset = "0xC83704")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83704", Offset = "0xC83704")]
		private bool <IsInsideTileArea>k__BackingField;

		[Token(Token = "0x17000229")]
		public bool IsInsideTileArea
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xE5638C", Offset = "0xE5638C", VA = "0xE5638C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83740", Offset = "0xC83740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xE5E110", Offset = "0xE5E110", VA = "0xE5E110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83750", Offset = "0xC83750")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xE584BC", Offset = "0xE584BC", VA = "0xE584BC")]
		public PlayerTileAreaHandler(PlayerControl playerControl, Transform colliderTransform)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xE52F44", Offset = "0xE52F44", VA = "0xE52F44")]
		public void CheckInsideTileArea()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xE56504", Offset = "0xE56504", VA = "0xE56504")]
		public void MarkAsInsideTileArea()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xE5E11C", Offset = "0xE5E11C", VA = "0xE5E11C")]
		private void OnTileAreaEnter()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xE5E1C0", Offset = "0xE5E1C0", VA = "0xE5E1C0")]
		private void OnTileAreaExit()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class PlayerWand
	{
		[Token(Token = "0x200022D")]
		private struct WandPath
		{
			[Token(Token = "0x4000C92")]
			public const string DualWield = "WandControl";

			[Token(Token = "0x4000C93")]
			public const string OneHanded = "WandControlOneHand";

			[Token(Token = "0x4000C94")]
			public const string Bot = "BotWandControl";
		}

		[Token(Token = "0x4000C8A")]
		private const float WandMeshScaleMultiplier = 0.6f;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Aim m_aim;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WandHandler m_wandHandler;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tile m_highlightedTile;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_teleportLayerName;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isWieldedByBot;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83760", Offset = "0xC83760")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83760", Offset = "0xC83760")]
		private IWandControl <WandControl>k__BackingField;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8379C", Offset = "0xC8379C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8379C", Offset = "0xC8379C")]
		private Transform <WandParent>k__BackingField;

		[Token(Token = "0x1700022A")]
		public IWandControl WandControl
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xE5C9C0", Offset = "0xE5C9C0", VA = "0xE5C9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC837D8", Offset = "0xC837D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xE5E2F8", Offset = "0xE5E2F8", VA = "0xE5E2F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC837E8", Offset = "0xC837E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public Transform WandParent
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xE5E300", Offset = "0xE5E300", VA = "0xE5E300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC837F8", Offset = "0xC837F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xE5E308", Offset = "0xE5E308", VA = "0xE5E308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83808", Offset = "0xC83808")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public Tile HighlightedTile
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xE5E310", Offset = "0xE5E310", VA = "0xE5E310")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xE5E398", Offset = "0xE5E398", VA = "0xE5E398")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xE5E268", Offset = "0xE5E268", VA = "0xE5E268")]
		public PlayerWand(Aim aim, bool isWieldedByBot)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE5E3A0", Offset = "0xE5E3A0", VA = "0xE5E3A0")]
		public void SetWandParent(Transform wandParent)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xE5E3A8", Offset = "0xE5E3A8", VA = "0xE5E3A8")]
		public void SpawnWandController(int wielderPhotonViewID, Transform parent, WandInput wandInput, bool isDualWielding, WandHand wandHand)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xE5E974", Offset = "0xE5E974", VA = "0xE5E974")]
		public void SpawnWandControllerOffline(Transform parent, WandInput wandInput)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE5EC5C", Offset = "0xE5EC5C", VA = "0xE5EC5C")]
		public void SpawnBotWandController(int wielderPhotonViewID, Transform parent, WandInput wandInput)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xE5F138", Offset = "0xE5F138", VA = "0xE5F138")]
		public void DestroyWandController()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xE5F284", Offset = "0xE5F284", VA = "0xE5F284")]
		public void TrySpawnWandMesh(AimInput aimInput)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xE5F330", Offset = "0xE5F330", VA = "0xE5F330")]
		private void SpawnWandMesh()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xE5F810", Offset = "0xE5F810", VA = "0xE5F810")]
		public void TrackTileHit()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xE5FAE4", Offset = "0xE5FAE4", VA = "0xE5FAE4")]
		public void ResetHighlightedTile()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xE5FD5C", Offset = "0xE5FD5C", VA = "0xE5FD5C")]
		private void SetTileHighlighted(Tile newTile)
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class BotControl : CharacterControl, ISight, IHearing
	{
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC838C4", Offset = "0xC838C4")]
		private sealed class <SpawnAndConnectWielder>c__AnonStorey0
		{
			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Level level;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal BotControl $this;

			[Token(Token = "0x6002A16")]
			[Address(RVA = "0xE492F0", Offset = "0xE492F0", VA = "0xE492F0")]
			public <SpawnAndConnectWielder>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002A17")]
			[Address(RVA = "0xE492F8", Offset = "0xE492F8", VA = "0xE492F8")]
			internal void <>m__0(Wielder wielder)
			{
			}
		}

		[Token(Token = "0x4000C95")]
		public const Title BotTitle = Title.Vindicator;

		[Token(Token = "0x4000C96")]
		public const string BotName = "Machina";

		[Token(Token = "0x4000C97")]
		public const AimInput DefaultBotAimInput = AimInput.Head;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private BotCharacter m_character;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private BotAI m_botAI;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool m_isInLobby;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool m_wasEnabled;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EventToken m_connectedToMatchRoomEventToken;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private EventToken m_photonConnectionFailedToken;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83818", Offset = "0xC83818")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83818", Offset = "0xC83818")]
		private Aim <Aim>k__BackingField;

		[Token(Token = "0x1700022D")]
		public CharacterType CharacterType
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1035C70", Offset = "0x1035C70", VA = "0x1035C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83854", Offset = "0xC83854")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x1700022E")]
		public WandType WandType
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x1035C9C", Offset = "0x1035C9C", VA = "0x1035C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83864", Offset = "0xC83864")]
			get
			{
				return default(WandType);
			}
		}

		[Token(Token = "0x1700022F")]
		public AimInput AimInput
		{
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x1035CC8", Offset = "0x1035CC8", VA = "0x1035CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83874", Offset = "0xC83874")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000230")]
		public Aim Aim
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x101951C", Offset = "0x101951C", VA = "0x101951C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83884", Offset = "0xC83884")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1035CF4", Offset = "0x1035CF4", VA = "0x1035CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83894", Offset = "0xC83894")]
			private set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public IWandControl WandControl
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x101DDA0", Offset = "0x101DDA0", VA = "0x101DDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC838A4", Offset = "0xC838A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public Tile HighlightedTile
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x1019588", Offset = "0x1019588", VA = "0x1019588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC838B4", Offset = "0xC838B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1035C68", Offset = "0x1035C68", VA = "0x1035C68")]
		public BotControl()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1035CFC", Offset = "0x1035CFC", VA = "0x1035CFC", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1035DC4", Offset = "0x1035DC4", VA = "0x1035DC4", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1035E98", Offset = "0x1035E98", VA = "0x1035E98")]
		private void OnPhotonConnectionFailed(NetworkEvents.PhotonConnectionFailedEvent obj)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1035F68", Offset = "0x1035F68", VA = "0x1035F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x103603C", Offset = "0x103603C", VA = "0x103603C", Slot = "17")]
		protected override void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x10361EC", Offset = "0x10361EC", VA = "0x10361EC", Slot = "33")]
		protected override void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x10361F0", Offset = "0x10361F0", VA = "0x10361F0", Slot = "34")]
		protected override void OnCountdownStarted(Events.CountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x10361F4", Offset = "0x10361F4", VA = "0x10361F4", Slot = "45")]
		protected override void OnWielderSpawned(Wielder wielder, Level level)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1036690", Offset = "0x1036690", VA = "0x1036690", Slot = "41")]
		protected override AimInput GetAimInputType()
		{
			return default(AimInput);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1036698", Offset = "0x1036698", VA = "0x1036698", Slot = "47")]
		public override void SpawnWandController(Level level)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1036748", Offset = "0x1036748", VA = "0x1036748")]
		public Spell[] GetRandomizedSpells()
		{
			return null;
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1036788", Offset = "0x1036788", VA = "0x1036788", Slot = "46")]
		protected override void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1036808", Offset = "0x1036808", VA = "0x1036808", Slot = "32")]
		protected override void OnLevelInitialized(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x10369E8", Offset = "0x10369E8", VA = "0x10369E8")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1036A40", Offset = "0x1036A40", VA = "0x1036A40", Slot = "37")]
		protected override void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1036B38", Offset = "0x1036B38", VA = "0x1036B38", Slot = "35")]
		protected override void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1036BE4", Offset = "0x1036BE4", VA = "0x1036BE4", Slot = "18")]
		protected override void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1036C8C", Offset = "0x1036C8C", VA = "0x1036C8C", Slot = "36")]
		protected override void OnWandControllerDespawned(InputEvents.WandControllerDespawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x10369EC", Offset = "0x10369EC", VA = "0x10369EC")]
		private void SpawnAndConnect()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x103684C", Offset = "0x103684C", VA = "0x103684C")]
		public void SpawnInLobby()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1036D18", Offset = "0x1036D18", VA = "0x1036D18", Slot = "42")]
		protected override void SpawnAndConnectWielder(Level level)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1036E00", Offset = "0x1036E00", VA = "0x1036E00", Slot = "38")]
		public override void InstantiatePlayerWand()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1036F04", Offset = "0x1036F04", VA = "0x1036F04", Slot = "26")]
		public override void SetChillingClutchEffectActive(bool active)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1036F64", Offset = "0x1036F64", VA = "0x1036F64", Slot = "39")]
		public override void TryTrackTileHit(WandHand wandHand = WandHand.Right)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1036590", Offset = "0x1036590", VA = "0x1036590", Slot = "54")]
		public Sight GetSight()
		{
			return null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1036FDC", Offset = "0x1036FDC", VA = "0x1036FDC", Slot = "55")]
		public bool TryGetSight(out Sight sight)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1036634", Offset = "0x1036634", VA = "0x1036634", Slot = "56")]
		public Hearing GetHearing()
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x10370B8", Offset = "0x10370B8", VA = "0x10370B8", Slot = "57")]
		public Vector3 GetOpponentPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x103720C", Offset = "0x103720C", VA = "0x103720C", Slot = "19")]
		public override bool TakeDamage(DamageType damageType, float damage, Vector2 hitDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x10374A4", Offset = "0x10374A4", VA = "0x10374A4", Slot = "30")]
		public override void Pause(bool pause)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1037584", Offset = "0x1037584", VA = "0x1037584")]
		public void PauseFromNetworkDisconnection()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1035EC0", Offset = "0x1035EC0", VA = "0x1035EC0")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x10375E8", Offset = "0x10375E8", VA = "0x10375E8", Slot = "40")]
		public override void SetFreeTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x10375EC", Offset = "0x10375EC", VA = "0x10375EC", Slot = "24")]
		public override void EnableCurse(float curseTime, CurseLingeringEffect curse)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1037614", Offset = "0x1037614", VA = "0x1037614", Slot = "25")]
		public override void DisableCurse()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1037638", Offset = "0x1037638", VA = "0x1037638", Slot = "14")]
		public override void CreateHP()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10376A4", Offset = "0x10376A4", VA = "0x10376A4", Slot = "15")]
		public override void CreateMana()
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC838D4", Offset = "0xC838D4")]
	public class RemoteCharacter : CharacterBase
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CharacterHitSfxHandler m_sfxHandler;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Wielder m_wielder;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83948", Offset = "0xC83948")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83948", Offset = "0xC83948")]
		private EffectUtils <EffectHandler>k__BackingField;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83984", Offset = "0xC83984")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83984", Offset = "0xC83984")]
		private IWandControl <Wand>k__BackingField;

		[Token(Token = "0x17000233")]
		public EffectUtils EffectHandler
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xE970CC", Offset = "0xE970CC", VA = "0xE970CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC839C0", Offset = "0xC839C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xE970D4", Offset = "0xE970D4", VA = "0xE970D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC839D0", Offset = "0xC839D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public IWandControl Wand
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xE970DC", Offset = "0xE970DC", VA = "0xE970DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC839E0", Offset = "0xC839E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xE970E4", Offset = "0xE970E4", VA = "0xE970E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC839F0", Offset = "0xC839F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xE970C4", Offset = "0xE970C4", VA = "0xE970C4")]
		public RemoteCharacter()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xE970EC", Offset = "0xE970EC", VA = "0xE970EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xE97210", Offset = "0xE97210", VA = "0xE97210")]
		public void Initialize(Wielder wielder, StatsData healthData)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xE97638", Offset = "0xE97638", VA = "0xE97638")]
		public void ResetRemoteCharacter()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xE979A0", Offset = "0xE979A0", VA = "0xE979A0")]
		private void UpdateObjectLayer()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xE97D44", Offset = "0xE97D44", VA = "0xE97D44")]
		private void UpdateWandObjectLayer(LayerMask layer, Transform wandTransform)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xE97E4C", Offset = "0xE97E4C", VA = "0xE97E4C")]
		private void ResetAnimationAndPosition()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xE97F28", Offset = "0xE97F28", VA = "0xE97F28")]
		public void SetDead(bool dead)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xE97F64", Offset = "0xE97F64", VA = "0xE97F64")]
		public void OnLocalHit()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xE981B4", Offset = "0xE981B4", VA = "0xE981B4", Slot = "8")]
		protected override void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xE981B8", Offset = "0xE981B8", VA = "0xE981B8", Slot = "9")]
		public override void SetCorrectApperence(Photon.Realtime.Player photonPlayer)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class InventorySaveObject
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CatalogVersion;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Items;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xE8D258", Offset = "0xE8D258", VA = "0xE8D258")]
		public InventorySaveObject()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class SaveDataObject
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, string> data;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xE9704C", Offset = "0xE9704C", VA = "0xE9704C")]
		public SaveDataObject()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xE8F180", Offset = "0xE8F180", VA = "0xE8F180")]
		public void AddField(PlayFabSaveField field, string value)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xE982DC", Offset = "0xE982DC", VA = "0xE982DC")]
		public Dictionary<string, string> GetCollection()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000232")]
	public struct MatchStatsSummary
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float DamageRecievedTotal;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ManaUsedTotal;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float EndHealth;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xE4DB98", Offset = "0xE4DB98", VA = "0xE4DB98")]
		public MatchStatsSummary(float damageRecievedTotal, float manaUsedTotal, float endHealth)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class TeleportHandler : MonoBehaviour
	{
		[Token(Token = "0x2000234")]
		public delegate void TeleportCallbacks();

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83AC8", Offset = "0xC83AC8")]
		private sealed class <TeleportRandomly>c__AnonStorey1
		{
			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Tile randomTile;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PhotonView occupantPhotonView;

			[Token(Token = "0x6002A18")]
			[Address(RVA = "0xE60630", Offset = "0xE60630", VA = "0xE60630")]
			public <TeleportRandomly>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002A19")]
			[Address(RVA = "0xE60C70", Offset = "0xE60C70", VA = "0xE60C70")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83AD8", Offset = "0xC83AD8")]
		private sealed class <Teleport>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TeleportHandler $this;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700059B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A1C")]
				[Address(RVA = "0xE60BE8", Offset = "0xE60BE8", VA = "0xE60BE8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A1D")]
				[Address(RVA = "0xE60BF0", Offset = "0xE60BF0", VA = "0xE60BF0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xE60744", Offset = "0xE60744", VA = "0xE60744")]
			[DebuggerHidden]
			public <Teleport>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0xE609CC", Offset = "0xE609CC", VA = "0xE609CC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xE60BF8", Offset = "0xE60BF8", VA = "0xE60BF8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0xE60C0C", Offset = "0xE60C0C", VA = "0xE60C0C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_teleportDistance;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_teleportAcceleration;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float m_teleportStartTime;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_teleportStartPosition;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_teleportEndPosition;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tile m_newTile;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected CharacterControl m_characterControl;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool m_isTeleporting;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected TeleportCallbacks m_onTeleportStart;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected TeleportCallbacks m_onTeleportEnd;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83A00", Offset = "0xC83A00")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83A00", Offset = "0xC83A00")]
		private Transform <TeleportTransform>k__BackingField;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83A3C", Offset = "0xC83A3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83A3C", Offset = "0xC83A3C")]
		private bool <IsTeleporting>k__BackingField;

		[Token(Token = "0x17000235")]
		protected Transform TeleportTransform
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xE5FFDC", Offset = "0xE5FFDC", VA = "0xE5FFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83A78", Offset = "0xC83A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0xE5FFE4", Offset = "0xE5FFE4", VA = "0xE5FFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83A88", Offset = "0xC83A88")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool IsTeleporting
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xE494A4", Offset = "0xE494A4", VA = "0xE494A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83A98", Offset = "0xC83A98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0xE5E07C", Offset = "0xE5E07C", VA = "0xE5E07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83AA8", Offset = "0xC83AA8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE49348", Offset = "0xE49348", VA = "0xE49348")]
		public TeleportHandler()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xE5FFEC", Offset = "0xE5FFEC", VA = "0xE5FFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xE601F8", Offset = "0xE601F8", VA = "0xE601F8", Slot = "4")]
		public virtual void SetCharacter(CharacterControl characterControl)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xE5D628", Offset = "0xE5D628", VA = "0xE5D628", Slot = "5")]
		public virtual void ResetTransform(Tile resetTile)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xE60234", Offset = "0xE60234", VA = "0xE60234", Slot = "6")]
		public virtual void TeleportOwner(Tile newTile, TeleportCallbacks startCallback, TeleportCallbacks endCallback)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xE60534", Offset = "0xE60534", VA = "0xE60534")]
		public void TeleportRandomly(Tile[] tiles, PhotonView occupantPhotonView)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xE60648", Offset = "0xE60648", VA = "0xE60648")]
		public void PlayTeleportEffect(Tile newTile, TeleportCallbacks startCallback, TeleportCallbacks endCallback)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xE60394", Offset = "0xE60394", VA = "0xE60394")]
		protected void SetTeleportVariables(Tile newTile)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xE606D8", Offset = "0xE606D8", VA = "0xE606D8", Slot = "7")]
		[DebuggerHidden]
		protected virtual IEnumerator Teleport()
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xE5FFFC", Offset = "0xE5FFFC", VA = "0xE5FFFC")]
		private void TeleportTransport()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE6074C", Offset = "0xE6074C", VA = "0xE6074C")]
		protected void ResetTeleport()
		{
		}
	}
}
namespace Assets.Scripts.Player
{
	[Token(Token = "0x2000235")]
	public class TrainingDummy : MonoBehaviourPun
	{
		[Token(Token = "0x4000CB5")]
		private const float WaitTimeOnDestroyed = 5f;

		[Token(Token = "0x4000CB6")]
		private const float AnimationHitDelay = 0.2f;

		[Token(Token = "0x4000CB7")]
		private const float LargeHitThreshold = 30f;

		[Token(Token = "0x4000CB8")]
		private const string AnimationHitLarge = "Hit_Large";

		[Token(Token = "0x4000CB9")]
		private const string AnimationHitSmall = "Hit_Small";

		[Token(Token = "0x4000CBA")]
		private const string AnimationDead = "Dead";

		[Token(Token = "0x4000CBB")]
		private const string SfxFall = "dummy_fall";

		[Token(Token = "0x4000CBC")]
		private const string SfxRise = "dummy_rise";

		[Token(Token = "0x4000CBD")]
		private const string SfxHit = "dummy_hit0";

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrainingDummyUI m_ui;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_prio;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_maxHP;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CapsuleCollider m_collider;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundHandler m_soundHandler;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_active;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_animate;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Move m_mover;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator m_animator;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83B88", Offset = "0xC83B88")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83B88", Offset = "0xC83B88")]
		private float <CurrentHP>k__BackingField;

		[Token(Token = "0x17000237")]
		public float CurrentHP
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xE98364", Offset = "0xE98364", VA = "0xE98364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83BC4", Offset = "0xC83BC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xE9836C", Offset = "0xE9836C", VA = "0xE9836C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83BD4", Offset = "0xC83BD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public int Prio
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xE98374", Offset = "0xE98374", VA = "0xE98374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83BE4", Offset = "0xC83BE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000239")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xE9837C", Offset = "0xE9837C", VA = "0xE9837C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83BF4", Offset = "0xC83BF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xE9834C", Offset = "0xE9834C", VA = "0xE9834C")]
		public TrainingDummy()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xE98384", Offset = "0xE98384", VA = "0xE98384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xE9838C", Offset = "0xE9838C", VA = "0xE9838C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xE986A0", Offset = "0xE986A0", VA = "0xE986A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xE9875C", Offset = "0xE9875C", VA = "0xE9875C")]
		public void TakeDamage(float dmg)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xE98928", Offset = "0xE98928", VA = "0xE98928")]
		private void DestroyDummy()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xE98C14", Offset = "0xE98C14", VA = "0xE98C14")]
		private void ResetDummy()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE9842C", Offset = "0xE9842C", VA = "0xE9842C")]
		private void ResetDummy(bool playSound)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xE98C1C", Offset = "0xE98C1C", VA = "0xE98C1C")]
		private void PauseMovement()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xE98C30", Offset = "0xE98C30", VA = "0xE98C30")]
		private void UnPauseMovement()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xE98C44", Offset = "0xE98C44", VA = "0xE98C44")]
		private void SetAnimateActive()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE989E8", Offset = "0xE989E8", VA = "0xE989E8")]
		public void SetAnimationState(string animation)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE98B24", Offset = "0xE98B24", VA = "0xE98B24")]
		public void SetAnimationBool(string animation, bool enable)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE98C50", Offset = "0xE98C50", VA = "0xE98C50")]
		private void PlayAnimation(string animation)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE98C84", Offset = "0xE98C84", VA = "0xE98C84")]
		private void PlayAnimation(string animation, bool enable)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public static class TrainingDummyContainer
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TrainingDummy[] sm_trainingDummies;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83C04", Offset = "0xC83C04")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83C04", Offset = "0xC83C04")]
		private static int <Count>k__BackingField;

		[Token(Token = "0x1700023A")]
		public static int Count
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0xE98CC8", Offset = "0xE98CC8", VA = "0xE98CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83C40", Offset = "0xC83C40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xE98D30", Offset = "0xE98D30", VA = "0xE98D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83C50", Offset = "0xC83C50")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE98544", Offset = "0xE98544", VA = "0xE98544")]
		public static void RegisterDummy(TrainingDummy dummy)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xE986FC", Offset = "0xE986FC", VA = "0xE986FC")]
		public static void ClearDummies()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xE98D9C", Offset = "0xE98D9C", VA = "0xE98D9C")]
		public static TrainingDummy GetDummy(int index)
		{
			return null;
		}
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x2000237")]
	public class PlayerManager : MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8405C", Offset = "0xC8405C")]
		private sealed class <OnUpdateRoomProperties>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Photon.Realtime.Player[] <wielders>__0;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayerManager $this;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700059D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A22")]
				[Address(RVA = "0xE9D5E8", Offset = "0xE9D5E8", VA = "0xE9D5E8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A23")]
				[Address(RVA = "0xE9D5F0", Offset = "0xE9D5F0", VA = "0xE9D5F0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xE99E14", Offset = "0xE99E14", VA = "0xE99E14")]
			[DebuggerHidden]
			public <OnUpdateRoomProperties>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A21")]
			[Address(RVA = "0xE9D2D0", Offset = "0xE9D2D0", VA = "0xE9D2D0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xE9D5F8", Offset = "0xE9D5F8", VA = "0xE9D5F8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xE9D60C", Offset = "0xE9D60C", VA = "0xE9D60C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC840BC", Offset = "0xC840BC")]
		private sealed class <SpawnPawnOnline>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Transform <startTileTransform>__0;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PlayerStats playerStats;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal object[] <instantiationData>__0;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal Action<Wielder> onSpawnedCallback;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal PlayerManager $this;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal object $current;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal bool $disposing;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			internal int $PC;

			[Token(Token = "0x1700059F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A28")]
				[Address(RVA = "0xE9DDB0", Offset = "0xE9DDB0", VA = "0xE9DDB0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A29")]
				[Address(RVA = "0xE9DDB8", Offset = "0xE9DDB8", VA = "0xE9DDB8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xE9A118", Offset = "0xE9A118", VA = "0xE9A118")]
			[DebuggerHidden]
			public <SpawnPawnOnline>c__Iterator1()
			{
			}

			[Token(Token = "0x6002A27")]
			[Address(RVA = "0xE9D95C", Offset = "0xE9D95C", VA = "0xE9D95C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0xE9DDC0", Offset = "0xE9DDC0", VA = "0xE9DDC0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0xE9DDD4", Offset = "0xE9DDD4", VA = "0xE9DDD4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8411C", Offset = "0xC8411C")]
		private struct <SetOpponentInfo>c__async2 : IAsyncStateMachine
		{
			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Photon.Realtime.Player opponent;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal ExitGames.Client.Photon.Hashtable <customProperties>__0;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string <opponentName>__0;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayerManager $this;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal AsyncVoidMethodBuilder $builder;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal int $PC;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xE9D948", Offset = "0xE9D948", VA = "0xE9D948", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0xE9D950", Offset = "0xE9D950", VA = "0xE9D950", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8413C", Offset = "0xC8413C")]
		private struct <GetPlayerNameAsync>c__async3 : IAsyncStateMachine
		{
			[Token(Token = "0x20005BB")]
			private sealed class <GetPlayerNameAsync>c__AnonStorey4
			{
				[Token(Token = "0x4002046")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal string platformPrefix;

				[Token(Token = "0x4002047")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal string nameSuffix;

				[Token(Token = "0x4002048")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				internal TaskCompletionSource<string> taskCompletionSource;

				[Token(Token = "0x4002049")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				internal <GetPlayerNameAsync>c__async3 <>f__ref$3;

				[Token(Token = "0x6002A30")]
				[Address(RVA = "0xE9D028", Offset = "0xE9D028", VA = "0xE9D028")]
				public <GetPlayerNameAsync>c__AnonStorey4()
				{
				}

				[Token(Token = "0x6002A31")]
				[Address(RVA = "0xE9D0A0", Offset = "0xE9D0A0", VA = "0xE9D0A0")]
				internal void <>m__0(ExecuteCloudScriptResult result)
				{
				}

				[Token(Token = "0x6002A32")]
				[Address(RVA = "0xE9D22C", Offset = "0xE9D22C", VA = "0xE9D22C")]
				internal void <>m__1(string errorMsg)
				{
				}
			}

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Photon.Realtime.Player player;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string <playFabId>__0;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PlatformType <platformType>__0;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayerManager $this;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal AsyncTaskMethodBuilder<string> $builder;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal int $PC;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <GetPlayerNameAsync>c__AnonStorey4 $locvar0;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0xE9D030", Offset = "0xE9D030", VA = "0xE9D030", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xE9D098", Offset = "0xE9D098", VA = "0xE9D098", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BotPlayer m_botPlayer;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterBase m_opponentCharacter;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_photonPlayerConnectedEventToken;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_wielderSpawnedEventToken;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_cachedOpponentName;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_opponentInfo;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerManager sm_instance;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83C60", Offset = "0xC83C60")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83C60", Offset = "0xC83C60")]
		private Wielder <LocalWielder>k__BackingField;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83C9C", Offset = "0xC83C9C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83C9C", Offset = "0xC83C9C")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83CD8", Offset = "0xC83CD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83CD8", Offset = "0xC83CD8")]
		private BotControl <BotControl>k__BackingField;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83D14", Offset = "0xC83D14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83D14", Offset = "0xC83D14")]
		private bool <IsWinner>k__BackingField;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83D50", Offset = "0xC83D50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83D50", Offset = "0xC83D50")]
		private Wielder <Winner>k__BackingField;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83D8C", Offset = "0xC83D8C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83D8C", Offset = "0xC83D8C")]
		private int <HighestDamageDealerId>k__BackingField;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83DC8", Offset = "0xC83DC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC83DC8", Offset = "0xC83DC8")]
		private List<Wielder> <AllWielders>k__BackingField;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E04", Offset = "0xC83E04")]
		private static Comparison<Wielder> <>f__am$cache0;

		[Token(Token = "0x1700023B")]
		public static PlayerManager Instance
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xE978C0", Offset = "0xE978C0", VA = "0xE978C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E14", Offset = "0xC83E14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public Wielder LocalWielder
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xE9917C", Offset = "0xE9917C", VA = "0xE9917C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E24", Offset = "0xC83E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xE99184", Offset = "0xE99184", VA = "0xE99184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E34", Offset = "0xC83E34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xE97998", Offset = "0xE97998", VA = "0xE97998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E44", Offset = "0xC83E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xE9918C", Offset = "0xE9918C", VA = "0xE9918C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E54", Offset = "0xC83E54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public BotControl BotControl
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xE99194", Offset = "0xE99194", VA = "0xE99194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E64", Offset = "0xC83E64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xE9919C", Offset = "0xE9919C", VA = "0xE9919C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E74", Offset = "0xC83E74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public bool IsWinner
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xE991A4", Offset = "0xE991A4", VA = "0xE991A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E84", Offset = "0xC83E84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xE991AC", Offset = "0xE991AC", VA = "0xE991AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83E94", Offset = "0xC83E94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public Wielder Winner
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xE991B8", Offset = "0xE991B8", VA = "0xE991B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83EA4", Offset = "0xC83EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xE991C0", Offset = "0xE991C0", VA = "0xE991C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83EB4", Offset = "0xC83EB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public int HighestDamageDealerId
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xE991C8", Offset = "0xE991C8", VA = "0xE991C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83EC4", Offset = "0xC83EC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xE991D0", Offset = "0xE991D0", VA = "0xE991D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83ED4", Offset = "0xC83ED4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public List<Wielder> AllWielders
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xE991D8", Offset = "0xE991D8", VA = "0xE991D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83EE4", Offset = "0xC83EE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xE991E0", Offset = "0xE991E0", VA = "0xE991E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83EF4", Offset = "0xC83EF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public bool IsGameFull
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xE991E8", Offset = "0xE991E8", VA = "0xE991E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83F04", Offset = "0xC83F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public bool IsEveryoneAvailable
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xE992A8", Offset = "0xE992A8", VA = "0xE992A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83F14", Offset = "0xC83F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public int WielderCount
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xE99328", Offset = "0xE99328", VA = "0xE99328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83F24", Offset = "0xC83F24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000246")]
		public int WinnerIndex
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xE99384", Offset = "0xE99384", VA = "0xE99384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC83F34", Offset = "0xC83F34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xE9910C", Offset = "0xE9910C", VA = "0xE9910C")]
		public PlayerManager()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xE99468", Offset = "0xE99468", VA = "0xE99468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xE996E8", Offset = "0xE996E8", VA = "0xE996E8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xE997B0", Offset = "0xE997B0", VA = "0xE997B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xE99850", Offset = "0xE99850", VA = "0xE99850")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xE9992C", Offset = "0xE9992C", VA = "0xE9992C")]
		private void OnPhotonPlayerConnected(NetworkEvents.PhotonPlayerConnectedEvent eventData)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xE99954", Offset = "0xE99954", VA = "0xE99954")]
		private void OnPhotonPlayerConnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xE99A44", Offset = "0xE99A44", VA = "0xE99A44")]
		private void OnPhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xE99A74", Offset = "0xE99A74", VA = "0xE99A74")]
		private void OnPhotonPlayerDisconnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xE99BB4", Offset = "0xE99BB4", VA = "0xE99BB4")]
		public void KickOpponentWielder()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xE99DA8", Offset = "0xE99DA8", VA = "0xE99DA8")]
		[DebuggerHidden]
		private IEnumerator OnUpdateRoomProperties()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xE995F4", Offset = "0xE995F4", VA = "0xE995F4")]
		private void UpdateRoomProperties(bool force = false)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xE99E1C", Offset = "0xE99E1C", VA = "0xE99E1C")]
		private void SetRoomProperty(Photon.Realtime.Player master, Photon.Realtime.Player client)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xE99F74", Offset = "0xE99F74", VA = "0xE99F74")]
		public void SpawnWielderOnline(PlayerStats playerStats, Action<Wielder> onSpawnedCallback)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE9A04C", Offset = "0xE9A04C", VA = "0xE9A04C")]
		[DebuggerHidden]
		private IEnumerator SpawnPawnOnline(PlayerStats playerStats, Action<Wielder> onSpawnedCallback)
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE9A120", Offset = "0xE9A120", VA = "0xE9A120")]
		public void SpawnBotWielder(Action<Wielder> onSpawnedCallback)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE9A2E4", Offset = "0xE9A2E4", VA = "0xE9A2E4")]
		public void BotSpawned(BotControl botControl)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE9A3CC", Offset = "0xE9A3CC", VA = "0xE9A3CC")]
		private void CreateBotPlayer()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE9A7C8", Offset = "0xE9A7C8", VA = "0xE9A7C8")]
		public void UpdateBotDifficultyProperties()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE9A96C", Offset = "0xE9A96C", VA = "0xE9A96C")]
		public void UpdateWielderMatchStatsAndVerifyWinnerID(ref int winnerViewID)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xE9AEC0", Offset = "0xE9AEC0", VA = "0xE9AEC0")]
		public void PlayerSpawned(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xE9AF70", Offset = "0xE9AF70", VA = "0xE9AF70")]
		public void AddWielder(Wielder w)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE9B0BC", Offset = "0xE9B0BC", VA = "0xE9B0BC")]
		public void AddRemoteCharacter(CharacterBase character)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE9B0C4", Offset = "0xE9B0C4", VA = "0xE9B0C4")]
		public void RemoveRemoteCharacter()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE9B160", Offset = "0xE9B160", VA = "0xE9B160")]
		public void RemoveBotControl()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE9B194", Offset = "0xE9B194", VA = "0xE9B194")]
		public void RemoveWielder(Wielder w)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE9AD2C", Offset = "0xE9AD2C", VA = "0xE9AD2C")]
		public void UpdateWielderList()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE9B21C", Offset = "0xE9B21C", VA = "0xE9B21C")]
		public Photon.Realtime.Player GetOpponent()
		{
			return null;
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE99C90", Offset = "0xE99C90", VA = "0xE99C90")]
		public Wielder GetOpponentWielder()
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE9B3A8", Offset = "0xE9B3A8", VA = "0xE9B3A8")]
		public bool CanGetOpponentWielder(out Wielder opponent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE9B470", Offset = "0xE9B470", VA = "0xE9B470")]
		public bool CanGetOpponentWielder(int viewID, out Wielder opponent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE9B5F8", Offset = "0xE9B5F8", VA = "0xE9B5F8")]
		public void SetWinnerWielder(Wielder winner)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE9B688", Offset = "0xE9B688", VA = "0xE9B688")]
		public void HighlightAll()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE9B8B0", Offset = "0xE9B8B0", VA = "0xE9B8B0")]
		public bool CanRetrievePlayerTf(out Wielder wielder, int playerIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE9BA8C", Offset = "0xE9BA8C", VA = "0xE9BA8C")]
		public string GetOpponentInfo()
		{
			return null;
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xE9BE08", Offset = "0xE9BE08", VA = "0xE9BE08")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC83F64", Offset = "0xC83F64")]
		public void SetOpponentInfo(Photon.Realtime.Player opponent)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xE9BEA8", Offset = "0xE9BEA8", VA = "0xE9BEA8")]
		private void SetOpponentInfo(string opponentName, object level, object seasonScore, object rating, object title)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xE9C258", Offset = "0xE9C258", VA = "0xE9C258")]
		public string GetPlayerName(Photon.Realtime.Player player)
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xE9C3B0", Offset = "0xE9C3B0", VA = "0xE9C3B0")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC83FD8", Offset = "0xC83FD8")]
		public Task<string> GetPlayerNameAsync(Photon.Realtime.Player player)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xE9C498", Offset = "0xE9C498", VA = "0xE9C498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8404C", Offset = "0xC8404C")]
		private static int <UpdateWielderList>m__0(Wielder x, Wielder y)
		{
			return default(int);
		}
	}
}
namespace Assets.Scripts.PlayFab
{
	[Token(Token = "0x2000238")]
	public class CombinedBackendRepresentation
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SeasonControl.SeasonInformation SeasonInformation;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GetTitleDataResult TitleData;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CatalogItem>[] CatalogItems;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GetUserInventoryResult UserInventory;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GetUserDataResult UserData;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GetPlayerStatisticsResult Rating;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GetLeaderboardResult Leaderboard;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GetLeaderboardAroundPlayerResult LeaderboardAroundPlayer;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GetTitleNewsResult News;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlatformSupport PlatformSupport;

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xE9DE38", Offset = "0xE9DE38", VA = "0xE9DE38")]
		public CombinedBackendRepresentation()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public enum CustomEventType
	{
		[Token(Token = "0x4000CE5")]
		match_started,
		[Token(Token = "0x4000CE6")]
		match_ended,
		[Token(Token = "0x4000CE7")]
		player_purchased_game,
		[Token(Token = "0x4000CE8")]
		player_installed_free_to_play,
		[Token(Token = "0x4000CE9")]
		player_unlocked_spell,
		[Token(Token = "0x4000CEA")]
		player_leveled_up,
		[Token(Token = "0x4000CEB")]
		player_started_survival,
		[Token(Token = "0x4000CEC")]
		player_left_survival,
		[Token(Token = "0x4000CED")]
		player_entered_basement,
		[Token(Token = "0x4000CEE")]
		player_left_basement,
		[Token(Token = "0x4000CEF")]
		player_entered_lobby,
		[Token(Token = "0x4000CF0")]
		player_left_lobby,
		[Token(Token = "0x4000CF1")]
		player_login,
		[Token(Token = "0x4000CF2")]
		player_received_spell_token,
		[Token(Token = "0x4000CF3")]
		player_caused_error,
		[Token(Token = "0x4000CF4")]
		player_changed_tutorial_state,
		[Token(Token = "0x4000CF5")]
		player_started_tutorial,
		[Token(Token = "0x4000CF6")]
		player_completed_tutorial,
		[Token(Token = "0x4000CF7")]
		player_purchased_item,
		[Token(Token = "0x4000CF8")]
		player_activated_subtitles,
		[Token(Token = "0x4000CF9")]
		player_earned_virtual_currency,
		[Token(Token = "0x4000CFA")]
		player_equipped_wand,
		[Token(Token = "0x4000CFB")]
		player_equipped_character,
		[Token(Token = "0x4000CFC")]
		player_reported
	}
	[Token(Token = "0x200023A")]
	public class ExperienceTableObject
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int XPNeeded;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int SpellTokenReward;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int DustReward;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int LoadoutReward;

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xE9DE40", Offset = "0xE9DE40", VA = "0xE9DE40")]
		public ExperienceTableObject(int xpNeeded, int spellTokenReward, int dustReward, int loadoutReward)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xE9DE8C", Offset = "0xE9DE8C", VA = "0xE9DE8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023B")]
	public interface ICloudManager
	{
		[Token(Token = "0x6000DE9")]
		void LogIn<T>(string userId, bool createAccount, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DEA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC8415C", Offset = "0xC8415C")]
		void GetCombinedBackendRepresentation<T>(string platformName, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DEB")]
		void GetCombinedBackendRepresentation<T>(string platformName, string clientVersion, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DEC")]
		void GetUserInventory<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DED")]
		void GetAllCatalogItems<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DEE")]
		void GetTitleData<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DEF")]
		void GetUserData<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF0")]
		void GetUserData<T>(List<string> keys, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF1")]
		void GetPlayerStatistics<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF2")]
		void GetLeaderboard<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF3")]
		void GetLeaderboardAroundPlayer<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF4")]
		void GetSeasonInformation<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF5")]
		void GetMinimumVersion<T>([Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF6")]
		void SaveAllData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF7")]
		void SaveExperienceRewards<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF8")]
		void SaveItemsToInventory<T>(InventorySaveObject inventorySaveObject, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DF9")]
		void SaveItemsToInventory<T>(InventorySaveObject[] inventorySaveObjects, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFA")]
		void SaveUnlockedData<T>(Dictionary<string, string> data, PlayFabRequestType requestType, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFB")]
		void SaveGameAccess<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFC")]
		void SaveCompletedTutorial<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFD")]
		void SaveLoadouts<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFE")]
		void SaveCustomEventRewards<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000DFF")]
		void SaveMatchData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000E00")]
		void SaveAchievementData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000E01")]
		void UpdateUserDisplayName<T>(string name, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000E02")]
		void UpdatePlayerStatistics<T>(Dictionary<string, string> fields, PlayFabStatisticsField statisticsField, [Optional] Action<T> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000E03")]
		void SendCustomEvent(CustomEventType customEventType, Dictionary<string, object> data);

		[Token(Token = "0x6000E04")]
		void GetTime([Optional] Action<GetTimeResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000E05")]
		void GetUserAccountInfo<T>(string accountId, [Optional] Action<T> success, [Optional] Action<string> failure);
	}
	[Token(Token = "0x200023C")]
	public enum LoginErrorCode
	{
		[Token(Token = "0x4000D02")]
		LoginFailed = 1000,
		[Token(Token = "0x4000D03")]
		ClientVersionBehind,
		[Token(Token = "0x4000D04")]
		ConnectionToDataBaseFailed
	}
	[Token(Token = "0x200023D")]
	public class MatchRewardsObject
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int XPReward;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int DustReward;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xE9E1B8", Offset = "0xE9E1B8", VA = "0xE9E1B8")]
		public MatchRewardsObject(int xpReward, int dustReward)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xE9E1F0", Offset = "0xE9E1F0", VA = "0xE9E1F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023E")]
	public class Md5Wrapper
	{
		[Token(Token = "0x4000D07")]
		private const string Key = "{B06B5A39-C810-4DD1-B138-41603713DD8A}";

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xE9E3D4", Offset = "0xE9E3D4", VA = "0xE9E3D4")]
		public Md5Wrapper()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xE9E3DC", Offset = "0xE9E3DC", VA = "0xE9E3DC")]
		public static string ConvertUserIdToMd5(string userId)
		{
			return null;
		}
	}
	[Token(Token = "0x200023F")]
	public static class NewsControl
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84194", Offset = "0xC84194")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC84194", Offset = "0xC84194")]
		private static string <Header>k__BackingField;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC841D0", Offset = "0xC841D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC841D0", Offset = "0xC841D0")]
		private static string <Body>k__BackingField;

		[Token(Token = "0x4000D0A")]
		private const string FetchFailedMessage = "Couldn't fetch news from server.";

		[Token(Token = "0x17000247")]
		public static string Header
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xE9E56C", Offset = "0xE9E56C", VA = "0xE9E56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8420C", Offset = "0xC8420C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xE9E5BC", Offset = "0xE9E5BC", VA = "0xE9E5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8421C", Offset = "0xC8421C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public static string Body
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xE9E610", Offset = "0xE9E610", VA = "0xE9E610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8422C", Offset = "0xC8422C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xE9E660", Offset = "0xE9E660", VA = "0xE9E660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8423C", Offset = "0xC8423C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xE9E6B4", Offset = "0xE9E6B4", VA = "0xE9E6B4")]
		public static void Initialize(GetTitleNewsResult news)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xE9E808", Offset = "0xE9E808", VA = "0xE9E808")]
		private static void OnNewsFetchSuccess(TitleNewsItem latestNews)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xE9E74C", Offset = "0xE9E74C", VA = "0xE9E74C")]
		private static void OnNewsFetchFailed()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class PlayFabCustomEvent
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string JsonData;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xE9E94C", Offset = "0xE9E94C", VA = "0xE9E94C")]
		public PlayFabCustomEvent()
		{
		}
	}
}
namespace Assets.Scripts.WandsExceptions
{
	[Token(Token = "0x2000241")]
	public class PlayFabException : Exception
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xEDE434", Offset = "0xEDE434", VA = "0xEDE434")]
		public PlayFabException(string error)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xEDE4AC", Offset = "0xEDE4AC", VA = "0xEDE4AC")]
		public PlayFabException(PlayFabError error)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xEDE5A0", Offset = "0xEDE5A0", VA = "0xEDE5A0")]
		public PlayFabException(PlayFabError error, PlayFabRequestType requestType)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xEDE7D4", Offset = "0xEDE7D4", VA = "0xEDE7D4")]
		public PlayFabException(PlayFabError error, PlayFabRequestType requestType, string functionName)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xEDEA54", Offset = "0xEDEA54", VA = "0xEDEA54")]
		public PlayFabException(ScriptExecutionError error, PlayFabRequestType requestType)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xEDEB40", Offset = "0xEDEB40", VA = "0xEDEB40")]
		public PlayFabException(ScriptExecutionError error, PlayFabRequestType requestType, string functionName)
		{
		}
	}
}
namespace Assets.Scripts.PlayFab
{
	[Token(Token = "0x2000242")]
	public class PlayFabManager : ICloudManager
	{
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84284", Offset = "0xC84284")]
		private sealed class <ComposeRequestItem>c__AnonStorey0<T>
		{
			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Action<T> success;

			[Token(Token = "0x6002A33")]
			public <ComposeRequestItem>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002A34")]
			internal void <>m__0(PlayFabResultCommon result)
			{
			}
		}

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly PlayFabRequestQueue m_requestQueue;

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xE9E954", Offset = "0xE9E954", VA = "0xE9E954")]
		public PlayFabManager()
		{
		}

		[Token(Token = "0x6000E19")]
		public virtual void LogIn<T>(string userId, bool createAccount, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC8424C", Offset = "0xC8424C")]
		public void GetCombinedBackendRepresentation<T>(string platformName, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1B")]
		public void GetCombinedBackendRepresentation<T>(string platformName, string clientVersion, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1C")]
		public void GetUserInventory<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1D")]
		public void GetAllCatalogItems<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1E")]
		public void GetTitleData<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E1F")]
		public void GetUserData<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E20")]
		public void GetUserData<T>(List<string> keys, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E21")]
		public void GetPlayerStatistics<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E22")]
		public void GetLeaderboard<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E23")]
		public void GetLeaderboardAroundPlayer<T>(PlayFabStatisticsField field, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E24")]
		public void GetSeasonInformation<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E25")]
		public void GetMinimumVersion<T>([Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E26")]
		public void SaveAllData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E27")]
		public void SaveExperienceRewards<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E28")]
		public void SaveItemsToInventory<T>(InventorySaveObject inventorySaveObject, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E29")]
		public void SaveItemsToInventory<T>(InventorySaveObject[] inventorySaveObjects, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2A")]
		public void SaveUnlockedData<T>(Dictionary<string, string> data, PlayFabRequestType requestType, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2B")]
		public void SaveGameAccess<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2C")]
		public void SaveCompletedTutorial<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2D")]
		public void SaveLoadouts<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2E")]
		public void SaveCustomEventRewards<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E2F")]
		public void SaveMatchData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E30")]
		public void SaveAchievementData<T>(Dictionary<string, string> data, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E31")]
		public void UpdateUserDisplayName<T>(string name, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E32")]
		public void UpdatePlayerStatistics<T>(Dictionary<string, string> fields, PlayFabStatisticsField statisticsField, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xE9EA48", Offset = "0xE9EA48", VA = "0xE9EA48", Slot = "30")]
		public void SendCustomEvent(CustomEventType customEventType, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE9EBE4", Offset = "0xE9EBE4", VA = "0xE9EBE4", Slot = "31")]
		public void GetTime([Optional] Action<GetTimeResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E35")]
		public void GetUserAccountInfo<T>(string accountId, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000E36")]
		private static PlayFabRequestItem ComposeRequestItem<T>(PlayFabRequestType requestType, PlayFabRequestCommon request, [Optional] Action<T> success, [Optional] Action<string> failure)
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	public class PlayFabRequestItem
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayFabRequestType RequestType;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayFabRequestCommon Request;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<PlayFabResultCommon> Success;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<string> Failure;

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE9EC8C", Offset = "0xE9EC8C", VA = "0xE9EC8C")]
		public PlayFabRequestItem()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class PlayFabRequestQueue
	{
		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84294", Offset = "0xC84294")]
		private sealed class <CheckRequestQueue>c__AnonStorey0
		{
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PlayFabRequestItem request;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayFabRequestQueue $this;

			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xE9FE04", Offset = "0xE9FE04", VA = "0xE9FE04")]
			public <CheckRequestQueue>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xEA0520", Offset = "0xEA0520", VA = "0xEA0520")]
			internal void <>m__0(LoginResult result)
			{
			}

			[Token(Token = "0x6002A37")]
			[Address(RVA = "0xEA055C", Offset = "0xEA055C", VA = "0xEA055C")]
			internal void <>m__1(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xEA0598", Offset = "0xEA0598", VA = "0xEA0598")]
			internal void <>m__2(LoginResult result)
			{
			}

			[Token(Token = "0x6002A39")]
			[Address(RVA = "0xEA05D4", Offset = "0xEA05D4", VA = "0xEA05D4")]
			internal void <>m__3(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xEA0610", Offset = "0xEA0610", VA = "0xEA0610")]
			internal void <>m__4(GetTitleDataResult result)
			{
			}

			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0xEA064C", Offset = "0xEA064C", VA = "0xEA064C")]
			internal void <>m__5(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0xEA0688", Offset = "0xEA0688", VA = "0xEA0688")]
			internal void <>m__6(GetUserDataResult result)
			{
			}

			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0xEA06C4", Offset = "0xEA06C4", VA = "0xEA06C4")]
			internal void <>m__7(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xEA0700", Offset = "0xEA0700", VA = "0xEA0700")]
			internal void <>m__8(GetPlayerStatisticsResult result)
			{
			}

			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0xEA073C", Offset = "0xEA073C", VA = "0xEA073C")]
			internal void <>m__9(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xEA0778", Offset = "0xEA0778", VA = "0xEA0778")]
			internal void <>m__A(GetLeaderboardResult result)
			{
			}

			[Token(Token = "0x6002A41")]
			[Address(RVA = "0xEA07B4", Offset = "0xEA07B4", VA = "0xEA07B4")]
			internal void <>m__B(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xEA07F0", Offset = "0xEA07F0", VA = "0xEA07F0")]
			internal void <>m__C(GetLeaderboardAroundPlayerResult result)
			{
			}

			[Token(Token = "0x6002A43")]
			[Address(RVA = "0xEA082C", Offset = "0xEA082C", VA = "0xEA082C")]
			internal void <>m__D(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xEA0868", Offset = "0xEA0868", VA = "0xEA0868")]
			internal void <>m__E(UpdateUserTitleDisplayNameResult result)
			{
			}

			[Token(Token = "0x6002A45")]
			[Address(RVA = "0xEA08A4", Offset = "0xEA08A4", VA = "0xEA08A4")]
			internal void <>m__F(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xEA08E0", Offset = "0xEA08E0", VA = "0xEA08E0")]
			internal void <>m__10(UpdateUserDataResult result)
			{
			}

			[Token(Token = "0x6002A47")]
			[Address(RVA = "0xEA091C", Offset = "0xEA091C", VA = "0xEA091C")]
			internal void <>m__11(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xEA0958", Offset = "0xEA0958", VA = "0xEA0958")]
			internal void <>m__12(WriteEventResponse result)
			{
			}

			[Token(Token = "0x6002A49")]
			[Address(RVA = "0xEA0994", Offset = "0xEA0994", VA = "0xEA0994")]
			internal void <>m__13(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xEA09D0", Offset = "0xEA09D0", VA = "0xEA09D0")]
			internal void <>m__14(ExecuteCloudScriptResult result)
			{
			}

			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0xEA0A0C", Offset = "0xEA0A0C", VA = "0xEA0A0C")]
			internal void <>m__15(PlayFabError error)
			{
			}

			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xEA0A48", Offset = "0xEA0A48", VA = "0xEA0A48")]
			internal void <>m__16(GetTimeResult result)
			{
			}

			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0xEA0A84", Offset = "0xEA0A84", VA = "0xEA0A84")]
			internal void <>m__17(PlayFabError error)
			{
			}
		}

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LinkedList<PlayFabRequestItem> m_requests;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch m_stopwatch;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_lock;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xE9E9B8", Offset = "0xE9E9B8", VA = "0xE9E9B8")]
		public PlayFabRequestQueue()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xE9EB70", Offset = "0xE9EB70", VA = "0xE9EB70")]
		public void AddToQueue(PlayFabRequestItem item)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xE9FD90", Offset = "0xE9FD90", VA = "0xE9FD90")]
		public void ForceToFrontOfQueue(PlayFabRequestItem item)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xE9EC94", Offset = "0xE9EC94", VA = "0xE9EC94")]
		private void CheckRequestQueue()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xE9FE0C", Offset = "0xE9FE0C", VA = "0xE9FE0C")]
		private void Success(PlayFabResultCommon result, PlayFabRequestItem request)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xE9FEA8", Offset = "0xE9FEA8", VA = "0xE9FEA8")]
		private void Failure(PlayFabError error, PlayFabRequestItem request)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xEA0100", Offset = "0xEA0100", VA = "0xEA0100")]
		private void Success(ExecuteCloudScriptResult result, PlayFabRequestItem request)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xEA01BC", Offset = "0xEA01BC", VA = "0xEA01BC")]
		private void Failure(ScriptExecutionError error, PlayFabRequestItem request)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public enum PlayFabRequestType
	{
		[Token(Token = "0x4000D16")]
		CustomLogIn,
		[Token(Token = "0x4000D17")]
		PSNLogIn,
		[Token(Token = "0x4000D18")]
		InitialiseFirstTimeUser,
		[Token(Token = "0x4000D19")]
		GetCombinedBackendRepresentation,
		[Token(Token = "0x4000D1A")]
		GetUserInventory,
		[Token(Token = "0x4000D1B")]
		GetAllCatalogItems,
		[Token(Token = "0x4000D1C")]
		GetCatalogItems,
		[Token(Token = "0x4000D1D")]
		GetTitleData,
		[Token(Token = "0x4000D1E")]
		GetUserData,
		[Token(Token = "0x4000D1F")]
		GetPlayerStatistics,
		[Token(Token = "0x4000D20")]
		GetLeaderboard,
		[Token(Token = "0x4000D21")]
		GetLeaderboardAroundPlayer,
		[Token(Token = "0x4000D22")]
		GetSeasonInformation,
		[Token(Token = "0x4000D23")]
		GetMinimumVersion,
		[Token(Token = "0x4000D24")]
		SaveAllData,
		[Token(Token = "0x4000D25")]
		SaveExperienceRewards,
		[Token(Token = "0x4000D26")]
		SaveItemsToInventory,
		[Token(Token = "0x4000D27")]
		SaveUnlockedSpells,
		[Token(Token = "0x4000D28")]
		SaveUnlockedWands,
		[Token(Token = "0x4000D29")]
		SaveUnlockedCharacters,
		[Token(Token = "0x4000D2A")]
		SaveUnlockedTitles,
		[Token(Token = "0x4000D2B")]
		SaveVirtualCurrency,
		[Token(Token = "0x4000D2C")]
		SaveGameAccess,
		[Token(Token = "0x4000D2D")]
		SaveCompletedTutorial,
		[Token(Token = "0x4000D2E")]
		SaveLoadouts,
		[Token(Token = "0x4000D2F")]
		SaveCustomEventRewards,
		[Token(Token = "0x4000D30")]
		SaveMatchData,
		[Token(Token = "0x4000D31")]
		SaveAchievementData,
		[Token(Token = "0x4000D32")]
		UpdateUserDisplayName,
		[Token(Token = "0x4000D33")]
		UpdatePlayerStatistics,
		[Token(Token = "0x4000D34")]
		UpdateMigrationFlag,
		[Token(Token = "0x4000D35")]
		SendCustomEvent,
		[Token(Token = "0x4000D36")]
		ExecuteCloudScript,
		[Token(Token = "0x4000D37")]
		GetTime,
		[Token(Token = "0x4000D38")]
		GetUserAccountInfo
	}
	[Token(Token = "0x2000246")]
	public static class PlayFabTitleData
	{
		[Token(Token = "0x4000D39")]
		private const string ExperienceTableName = "Experience table";

		[Token(Token = "0x4000D3A")]
		private const string MatchRewardsName = "Match rewards";

		[Token(Token = "0x4000D3B")]
		private const string MatchmakingTicketsTimeoutsName = "MatchmakingTicketsTimeout";

		[Token(Token = "0x4000D3C")]
		private const string BotsDisabledName = "BotsDisabledVersions";

		[Token(Token = "0x4000D3D")]
		private const string ExperienceTable_LevelName = "Level";

		[Token(Token = "0x4000D3E")]
		private const string ExperienceTable_ExperienceNeededName = "XPNeeded";

		[Token(Token = "0x4000D3F")]
		private const string ExperienceTable_SpellTokenRewardName = "SpellTokenReward";

		[Token(Token = "0x4000D40")]
		private const string ExperienceTable_DustRewardName = "DustReward";

		[Token(Token = "0x4000D41")]
		private const string ExperienceTable_LoadoutRewardname = "LoadoutReward";

		[Token(Token = "0x4000D42")]
		private const string MatchRewards_TypeName = "Type";

		[Token(Token = "0x4000D43")]
		private const string MatchRewards_ExperienceRewardName = "XPReward";

		[Token(Token = "0x4000D44")]
		private const string MatchRewards_DustRewardName = "DustReward";

		[Token(Token = "0x4000D45")]
		private const string MatchmakingTicketsTimeout_QueueName = "QueueName";

		[Token(Token = "0x4000D46")]
		private const string MatchmakingTicketsTimeout_Timeout = "Timeout";

		[Token(Token = "0x4000D47")]
		private const int TimeoutDefault = 300;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, ExperienceTableObject> sm_experienceTable;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<MatchRewardType, MatchRewardsObject> sm_matchRewards;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<string, int> sm_matchmakingTicketsTimeout;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ISet<string> sm_botsDisabledVersions;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC842A4", Offset = "0xC842A4")]
		private static Func<KeyValuePair<int, ExperienceTableObject>, int> <>f__am$cache0;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xEA0AC0", Offset = "0xEA0AC0", VA = "0xEA0AC0")]
		public static void Initialize(GetTitleDataResult result)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xEA0BF4", Offset = "0xEA0BF4", VA = "0xEA0BF4")]
		private static void ParseExperienceTable(string json)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xEA103C", Offset = "0xEA103C", VA = "0xEA103C")]
		private static void ParseMatchRewards(string json)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xEA1470", Offset = "0xEA1470", VA = "0xEA1470")]
		private static void ParseMatchmakingTicketsTimeout(string json)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xEA184C", Offset = "0xEA184C", VA = "0xEA184C")]
		private static void ParseBotsDisabled(string json)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xEA1B48", Offset = "0xEA1B48", VA = "0xEA1B48")]
		public static IReadOnlyDictionary<int, ExperienceTableObject> GetExperienceTable()
		{
			return null;
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xE954F4", Offset = "0xE954F4", VA = "0xE954F4")]
		public static ExperienceTableObject GetExperienceTableEntry(int level)
		{
			return null;
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xEA1BB0", Offset = "0xEA1BB0", VA = "0xEA1BB0")]
		public static MatchRewardsObject GetMatchRewardEntry(MatchRewardType type)
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xEA1DC0", Offset = "0xEA1DC0", VA = "0xEA1DC0")]
		public static int GetMatchmakingTicketTimeout(string queueName)
		{
			return default(int);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xEA210C", Offset = "0xEA210C", VA = "0xEA210C")]
		public static bool GetBotsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xEA232C", Offset = "0xEA232C", VA = "0xEA232C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC842B4", Offset = "0xC842B4")]
		private static int <GetExperienceTableEntry>m__0(KeyValuePair<int, ExperienceTableObject> p)
		{
			return default(int);
		}
	}
}
[Token(Token = "0x2000247")]
public abstract class PunSingleton<T> : MonoBehaviourPun where T : PunSingleton<T>
{
	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T sm_instance;

	[Token(Token = "0x17000249")]
	public static T Instance
	{
		[Token(Token = "0x6000E4D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC842C4", Offset = "0xC842C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E4C")]
	protected PunSingleton()
	{
	}

	[Token(Token = "0x6000E4E")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000E4F")]
	protected virtual void OnDisable()
	{
	}
}
namespace CompleteProject
{
	[Token(Token = "0x2000248")]
	public class Purchaser : MonoBehaviour, IStoreListener
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStoreController m_StoreController;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IExtensionProvider m_StoreExtensionProvider;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string kProductIDConsumable;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string kProductIDNonConsumable;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string kProductIDSubscription;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string kProductNameAppleSubscription;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string kProductNameGooglePlaySubscription;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC842D4", Offset = "0xC842D4")]
		private static Action<bool> <>f__am$cache0;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x101235C", Offset = "0x101235C", VA = "0x101235C")]
		public Purchaser()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1012364", Offset = "0x1012364", VA = "0x1012364")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10123E4", Offset = "0x10123E4", VA = "0x10123E4")]
		public void InitializePurchasing()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x10126C4", Offset = "0x10126C4", VA = "0x10126C4")]
		private bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1012760", Offset = "0x1012760", VA = "0x1012760")]
		public void BuyConsumable()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1012A08", Offset = "0x1012A08", VA = "0x1012A08")]
		public void BuyNonConsumable()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1012A70", Offset = "0x1012A70", VA = "0x1012A70")]
		public void BuySubscription()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x10127C8", Offset = "0x10127C8", VA = "0x10127C8")]
		private void BuyProductID(string productId)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1012AD8", Offset = "0x1012AD8", VA = "0x1012AD8")]
		public void RestorePurchases()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1012DCC", Offset = "0x1012DCC", VA = "0x1012DCC", Slot = "7")]
		public void OnInitialized(IStoreController controller, IExtensionProvider extensions)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1012E6C", Offset = "0x1012E6C", VA = "0x1012E6C", Slot = "4")]
		public void OnInitializeFailed(InitializationFailureReason error)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1012EFC", Offset = "0x1012EFC", VA = "0x1012EFC", Slot = "5")]
		public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs args)
		{
			return default(PurchaseProcessingResult);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1013188", Offset = "0x1013188", VA = "0x1013188", Slot = "6")]
		public void OnPurchaseFailed(UnityEngine.Purchasing.Product product, PurchaseFailureReason failureReason)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1013318", Offset = "0x1013318", VA = "0x1013318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC842E4", Offset = "0xC842E4")]
		private static void <RestorePurchases>m__0(bool result)
		{
		}
	}
}
namespace Assets.Scripts.Relics
{
	[Token(Token = "0x2000249")]
	public class LoadoutHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D56")]
		private const float RelicFadeTime = 0.25f;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_holderObj;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] m_wandSpawnTransforms;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC84314", Offset = "0xC84314")]
		[SerializeField]
		private TMP_Text[] m_activeLoadoutTexts;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDictionary<WandType, WandHandler>[] m_wandHandlers;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<WandHandler> m_activeWandHandlers;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Relic> m_relics;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Sequence m_textTweenSequence;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_enterPreMatchEventToken;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_enterPostMatchEventToken;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_finalCountdownStartedEventToken;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xEA2DF8", Offset = "0xEA2DF8", VA = "0xEA2DF8")]
		public LoadoutHandler()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xEA2EC8", Offset = "0xEA2EC8", VA = "0xEA2EC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xEA2FD8", Offset = "0xEA2FD8", VA = "0xEA2FD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xEA3068", Offset = "0xEA3068", VA = "0xEA3068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xEA315C", Offset = "0xEA315C", VA = "0xEA315C")]
		private void LoadLoadoutWands(int wandsPerLoadout)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xEA3820", Offset = "0xEA3820", VA = "0xEA3820")]
		private void InitializeWand()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xEA3DB4", Offset = "0xEA3DB4", VA = "0xEA3DB4")]
		public void ResetPreview(int loadoutIndex)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xEA3EC4", Offset = "0xEA3EC4", VA = "0xEA3EC4")]
		public void PreviewLoadout(Spell[] loadout)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xEA41A4", Offset = "0xEA41A4", VA = "0xEA41A4")]
		private void EnableLoadoutText()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xEA44A0", Offset = "0xEA44A0", VA = "0xEA44A0")]
		private void DisableLoadoutText()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xEA4600", Offset = "0xEA4600", VA = "0xEA4600")]
		public void ChangeLoadout(int loadoutIndex, Spell[] spells)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xEA38C4", Offset = "0xEA38C4", VA = "0xEA38C4")]
		private void AssignRelicIcons()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xEA4C74", Offset = "0xEA4C74", VA = "0xEA4C74")]
		private void OnEnterPreMatch(Events.EnterPreMatchEvent eventData)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xEA4DE0", Offset = "0xEA4DE0", VA = "0xEA4DE0")]
		private void OnEnterPostMatch(Events.EnterPostMatchEvent eventData)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xEA4CDC", Offset = "0xEA4CDC", VA = "0xEA4CDC")]
		public void EnableWandSelection()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xEA4DE4", Offset = "0xEA4DE4", VA = "0xEA4DE4")]
		public void DisableWandSelection()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xEA4D0C", Offset = "0xEA4D0C", VA = "0xEA4D0C")]
		private void EmptyLoadoutString()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xEA42F0", Offset = "0xEA42F0", VA = "0xEA42F0")]
		private void SetLoadoutText(Spell[] loadout, int index = 0)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xEA4E20", Offset = "0xEA4E20", VA = "0xEA4E20")]
		private string GetLocalizedSpellList(Spell[] loadout)
		{
			return null;
		}
	}
	[Token(Token = "0x200024A")]
	public class Relic : MonoBehaviour
	{
		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC844B4", Offset = "0xC844B4")]
		private sealed class <FadeRelic>c__AnonStorey0
		{
			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TweenCallback onComplete;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool fadeIn;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Relic $this;

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xEA62D8", Offset = "0xEA62D8", VA = "0xEA62D8")]
			public <FadeRelic>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0xEA62E0", Offset = "0xEA62E0", VA = "0xEA62E0")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ItemMaterialHandler m_materialHandler;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_moveRelic;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_moveLocal;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_rotateLocal;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool m_initialized;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_currentMoveTime;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_moveTime;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_originalPos;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_startPos;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_endPos;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_originalScale;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_startScale;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_endScale;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_originalRot;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion m_startRot;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion m_endRot;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_iconOriginalScale;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_iconOriginalPosition;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion m_iconOriginalRotation;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84390", Offset = "0xC84390")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC84390", Offset = "0xC84390")]
		private Transform <IconTransform>k__BackingField;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC843CC", Offset = "0xC843CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC843CC", Offset = "0xC843CC")]
		private bool <IsFadedOut>k__BackingField;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84408", Offset = "0xC84408")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC84408", Offset = "0xC84408")]
		private bool <IsFadedIn>k__BackingField;

		[Token(Token = "0x1700024A")]
		public Transform IconTransform
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xEA50AC", Offset = "0xEA50AC", VA = "0xEA50AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84444", Offset = "0xC84444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xEA50B4", Offset = "0xEA50B4", VA = "0xEA50B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84454", Offset = "0xC84454")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public bool IsIconSpriteAssigned
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xEA50BC", Offset = "0xEA50BC", VA = "0xEA50BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84464", Offset = "0xC84464")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public bool IsFadedOut
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xEA514C", Offset = "0xEA514C", VA = "0xEA514C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84474", Offset = "0xC84474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0xEA5154", Offset = "0xEA5154", VA = "0xEA5154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84484", Offset = "0xC84484")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool IsFadedIn
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xEA5160", Offset = "0xEA5160", VA = "0xEA5160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84494", Offset = "0xC84494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0xEA5168", Offset = "0xEA5168", VA = "0xEA5168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC844A4", Offset = "0xC844A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xEA4FD8", Offset = "0xEA4FD8", VA = "0xEA4FD8")]
		public Relic()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xEA5174", Offset = "0xEA5174", VA = "0xEA5174")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xEA517C", Offset = "0xEA517C", VA = "0xEA517C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xEA5294", Offset = "0xEA5294", VA = "0xEA5294")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xEA5344", Offset = "0xEA5344", VA = "0xEA5344")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xEA571C", Offset = "0xEA571C", VA = "0xEA571C")]
		public void ToggleRelicRendererEnabled(bool enable)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xEA5354", Offset = "0xEA5354", VA = "0xEA5354")]
		private void MoveRelic()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xEA5750", Offset = "0xEA5750", VA = "0xEA5750")]
		public void AssignIcon(Sprite sprite, bool enable)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xEA59F4", Offset = "0xEA59F4", VA = "0xEA59F4")]
		public void ReturnIcon()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xEA5B60", Offset = "0xEA5B60", VA = "0xEA5B60")]
		public void NullIcon()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xEA5C00", Offset = "0xEA5C00", VA = "0xEA5C00")]
		private void NullSprite()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xEA5CA4", Offset = "0xEA5CA4", VA = "0xEA5CA4")]
		public void SetIconMaterial(Material material)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xEA5D54", Offset = "0xEA5D54", VA = "0xEA5D54")]
		public void SetMaterial(ItemMaterialType type, bool highlighted = false)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xEA5928", Offset = "0xEA5928", VA = "0xEA5928")]
		public bool SetHighlightEffectActive(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xEA5E38", Offset = "0xEA5E38", VA = "0xEA5E38")]
		public void ResetPosition(bool hard = false)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xEA602C", Offset = "0xEA602C", VA = "0xEA602C")]
		public void TweakTransform(Vector3 newPos, Quaternion newRot, Vector3 newScale, float moveTime, bool local = false, bool rotLocal = false)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xEA4A48", Offset = "0xEA4A48", VA = "0xEA4A48")]
		public void FadeRelic(bool fadeIn, float time, TweenCallback onComplete)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class RelicSlotWand : MonoBehaviour
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_occupied;

		[Token(Token = "0x1700024E")]
		public bool IsOccupied
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xEA633C", Offset = "0xEA633C", VA = "0xEA633C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC844D4", Offset = "0xC844D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xEA6334", Offset = "0xEA6334", VA = "0xEA6334")]
		public RelicSlotWand()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xEA6344", Offset = "0xEA6344", VA = "0xEA6344")]
		public void SetOccupied(bool value)
		{
		}
	}
}
namespace Assets.Scripts.Reporting
{
	[Token(Token = "0x200024C")]
	public struct OpponentData
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string PlayFabId;

		[Token(Token = "0x1700024F")]
		public static OpponentData Default
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xEA63F4", Offset = "0xEA63F4", VA = "0xEA63F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC844E4", Offset = "0xC844E4")]
			get
			{
				return default(OpponentData);
			}
		}
	}
	[Token(Token = "0x200024D")]
	public static class OpponentHistory
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<OpponentData> m_opponents;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xEA6448", Offset = "0xEA6448", VA = "0xEA6448")]
		public static void Register(string name, string playFabId)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xEA64E0", Offset = "0xEA64E0", VA = "0xEA64E0")]
		public static OpponentData GetLast()
		{
			return default(OpponentData);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xEA65E4", Offset = "0xEA65E4", VA = "0xEA65E4")]
		public static IReadOnlyList<OpponentData> GetAllFromSession()
		{
			return null;
		}
	}
	[Token(Token = "0x200024E")]
	public struct Report
	{
		[Token(Token = "0x200024F")]
		private struct Constants
		{
			[Token(Token = "0x4000D80")]
			public const string ReportType = "Report reason";

			[Token(Token = "0x4000D81")]
			public const string Name = "Reported Player Name";

			[Token(Token = "0x4000D82")]
			public const string Id = "Reported Player Id";
		}

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReportType ReportType;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string PlayerName;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PlayerId;

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xEA6788", Offset = "0xEA6788", VA = "0xEA6788")]
		public static implicit operator Dictionary<string, object>(Report report)
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xEA6A28", Offset = "0xEA6A28", VA = "0xEA6A28")]
		public void Dispatch()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class ReportDispatcher
	{
		[Token(Token = "0x2000251")]
		private enum ReportState
		{
			[Token(Token = "0x4000D85")]
			NotReported,
			[Token(Token = "0x4000D86")]
			Reported
		}

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, ReportState[]> sm_reportMap;

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xEA6A30", Offset = "0xEA6A30", VA = "0xEA6A30")]
		public ReportDispatcher()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xEA6940", Offset = "0xEA6940", VA = "0xEA6940")]
		public static void Dispatch(Report report)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xEA6A38", Offset = "0xEA6A38", VA = "0xEA6A38")]
		private static ReportState RegisterReport(Report report)
		{
			return default(ReportState);
		}
	}
	[Token(Token = "0x2000252")]
	public enum ReportType
	{
		[Token(Token = "0x4000D88")]
		Harrassment,
		[Token(Token = "0x4000D89")]
		Cheating,
		[Token(Token = "0x4000D8A")]
		OffensiveName
	}
}
namespace Assets.Scripts.SaveLoad.Converters
{
	[Token(Token = "0x2000253")]
	public class AchievementDataParser : IDataParser
	{
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE9702C", Offset = "0xE9702C", VA = "0xE9702C")]
		public AchievementDataParser()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xEA6D4C", Offset = "0xEA6D4C", VA = "0xEA6D4C", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x2000254")]
	public class ClientVersionParser : IDataParser
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE96FEC", Offset = "0xE96FEC", VA = "0xE96FEC")]
		public ClientVersionParser()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xEA6FAC", Offset = "0xEA6FAC", VA = "0xEA6FAC", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x2000255")]
	public class CompletedTutorialParser : IDataParser
	{
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE9703C", Offset = "0xE9703C", VA = "0xE9703C")]
		public CompletedTutorialParser()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xEA7220", Offset = "0xEA7220", VA = "0xEA7220", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x2000256")]
	public class ConversionResult
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Dust;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Title> Titles;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xEA74F4", Offset = "0xEA74F4", VA = "0xEA74F4")]
		public ConversionResult()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xEA7564", Offset = "0xEA7564", VA = "0xEA7564", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	public class GameAccessParser : IDataParser
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE97024", Offset = "0xE97024", VA = "0xE97024")]
		public GameAccessParser()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xEA7604", Offset = "0xEA7604", VA = "0xEA7604", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x2000258")]
	public interface IDataParser
	{
		[Token(Token = "0x6000EA2")]
		ParseState Parse(IDictionary<string, UserDataRecord> data);
	}
	[Token(Token = "0x2000259")]
	public class LevelDataParser : IDataParser
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE96FFC", Offset = "0xE96FFC", VA = "0xE96FFC")]
		public LevelDataParser()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xEA7950", Offset = "0xEA7950", VA = "0xEA7950", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x200025A")]
	public class LoadoutsParser : IDataParser
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE97004", Offset = "0xE97004", VA = "0xE97004")]
		public LoadoutsParser()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xEA7BD4", Offset = "0xEA7BD4", VA = "0xEA7BD4", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x200025B")]
	public class LootCachesParser : IDataParser
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE9700C", Offset = "0xE9700C", VA = "0xE9700C")]
		public LootCachesParser()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xEA7E70", Offset = "0xEA7E70", VA = "0xEA7E70", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xEA80BC", Offset = "0xEA80BC", VA = "0xEA80BC")]
		private ConversionResult ConvertLootCaches(JToken token)
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public class MatchDataParser : IDataParser
	{
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE97014", Offset = "0xE97014", VA = "0xE97014")]
		public MatchDataParser()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xEA82E4", Offset = "0xEA82E4", VA = "0xEA82E4", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x200025D")]
	public class UnlockedDataParser : IDataParser
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE9701C", Offset = "0xE9701C", VA = "0xE9701C")]
		public UnlockedDataParser()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xEA8544", Offset = "0xEA8544", VA = "0xEA8544", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
	[Token(Token = "0x200025E")]
	public class VirtualCurrencyParser : IDataParser
	{
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE96FF4", Offset = "0xE96FF4", VA = "0xE96FF4")]
		public VirtualCurrencyParser()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xEA8E3C", Offset = "0xEA8E3C", VA = "0xEA8E3C", Slot = "4")]
		public ParseState Parse(IDictionary<string, UserDataRecord> data)
		{
			return default(ParseState);
		}
	}
}
namespace Assets.Scripts.SaveLoad
{
	[Token(Token = "0x200025F")]
	public interface ISaveManager
	{
		[Token(Token = "0x6000EB0")]
		void SavePlayerData([Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB1")]
		void SaveExperienceRewards(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB2")]
		void SaveItemsToInventory(InventorySaveObject inventorySaveObject, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB3")]
		void SaveUnlockedData(SaveDataObject data, PlayFabRequestType requestType, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB4")]
		void SaveGameAccess(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB5")]
		void SaveCompletedTutorial(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB6")]
		void SaveLoadouts(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB7")]
		void SaveCustomEventRewards(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB8")]
		void SaveMatchData(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EB9")]
		void SaveAchievementData(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBA")]
		void SaveStatistics(PlayFabStatisticsField field, int value, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBB")]
		void SaveUserName(string userName, [Optional] Action<UpdateUserTitleDisplayNameResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBC")]
		void LoadUserInventory([Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBD")]
		void LoadData(PlayFabSaveField saveField, [Optional] Action<GetUserDataResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBE")]
		void LoadPlayerStatistics(PlayFabStatisticsField field, [Optional] Action<GetPlayerStatisticsResult> success, [Optional] Action<string> failure);

		[Token(Token = "0x6000EBF")]
		void LoadTitleData([Optional] Action<GetTitleDataResult> success, [Optional] Action<string> failure);
	}
	[Token(Token = "0x2000260")]
	public enum PlayFabSaveField
	{
		[Token(Token = "0x4000D8E")]
		ClientVersion,
		[Token(Token = "0x4000D8F")]
		LevelData,
		[Token(Token = "0x4000D90")]
		Loadouts,
		[Token(Token = "0x4000D91")]
		LootCaches,
		[Token(Token = "0x4000D92")]
		MatchData,
		[Token(Token = "0x4000D93")]
		UnlockedData,
		[Token(Token = "0x4000D94")]
		UnlockedMasks,
		[Token(Token = "0x4000D95")]
		UnlockedOutfits,
		[Token(Token = "0x4000D96")]
		UnlockedCharacters,
		[Token(Token = "0x4000D97")]
		UnlockedWands,
		[Token(Token = "0x4000D98")]
		UnlockedSpells,
		[Token(Token = "0x4000D99")]
		UnlockedTitles,
		[Token(Token = "0x4000D9A")]
		VirtualCurrency,
		[Token(Token = "0x4000D9B")]
		IsMigrated,
		[Token(Token = "0x4000D9C")]
		IsDeveloper,
		[Token(Token = "0x4000D9D")]
		GameAccess,
		[Token(Token = "0x4000D9E")]
		CompletedTutorial,
		[Token(Token = "0x4000D9F")]
		AchievementData
	}
	[Token(Token = "0x2000261")]
	public enum PlayFabStatisticsField
	{
		[Token(Token = "0x4000DA1")]
		Rating,
		[Token(Token = "0x4000DA2")]
		HighestRating,
		[Token(Token = "0x4000DA3")]
		SeasonScore,
		[Token(Token = "0x4000DA4")]
		SeasonScorePlayStation
	}
	[Token(Token = "0x2000262")]
	public class SaveManager : ISaveManager
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ICloudManager m_cloudManager;

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xEA9074", Offset = "0xEA9074", VA = "0xEA9074")]
		public SaveManager(ICloudManager cloudmanager)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xEA90A0", Offset = "0xEA90A0", VA = "0xEA90A0", Slot = "4")]
		public void SavePlayerData([Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xEA9270", Offset = "0xEA9270", VA = "0xEA9270", Slot = "5")]
		public void SaveExperienceRewards(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xEA9408", Offset = "0xEA9408", VA = "0xEA9408", Slot = "6")]
		public void SaveItemsToInventory(InventorySaveObject inventorySaveObject, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xEA958C", Offset = "0xEA958C", VA = "0xEA958C")]
		public void SaveItemsToInventory(InventorySaveObject[] inventorySaveObjects, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xEA9710", Offset = "0xEA9710", VA = "0xEA9710", Slot = "7")]
		public void SaveUnlockedData(SaveDataObject data, PlayFabRequestType requestType, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xEA98B0", Offset = "0xEA98B0", VA = "0xEA98B0", Slot = "8")]
		public void SaveGameAccess(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xEA9A48", Offset = "0xEA9A48", VA = "0xEA9A48", Slot = "9")]
		public void SaveCompletedTutorial(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xEA9BE0", Offset = "0xEA9BE0", VA = "0xEA9BE0", Slot = "10")]
		public void SaveLoadouts(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xEA9D78", Offset = "0xEA9D78", VA = "0xEA9D78", Slot = "11")]
		public void SaveCustomEventRewards(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xEA9F10", Offset = "0xEA9F10", VA = "0xEA9F10", Slot = "12")]
		public void SaveMatchData(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xEAA0A8", Offset = "0xEAA0A8", VA = "0xEAA0A8", Slot = "13")]
		public void SaveAchievementData(SaveDataObject data, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xEAA240", Offset = "0xEAA240", VA = "0xEAA240", Slot = "14")]
		public void SaveStatistics(PlayFabStatisticsField field, int value, [Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xEAA680", Offset = "0xEAA680", VA = "0xEAA680", Slot = "15")]
		public void SaveUserName(string userName, [Optional] Action<UpdateUserTitleDisplayNameResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xEAA804", Offset = "0xEAA804", VA = "0xEAA804", Slot = "17")]
		public void LoadData(PlayFabSaveField saveField, [Optional] Action<GetUserDataResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xEAAA28", Offset = "0xEAAA28", VA = "0xEAAA28", Slot = "16")]
		public void LoadUserInventory([Optional] Action<ExecuteCloudScriptResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xEAAB98", Offset = "0xEAAB98", VA = "0xEAAB98", Slot = "18")]
		public void LoadPlayerStatistics(PlayFabStatisticsField field, [Optional] Action<GetPlayerStatisticsResult> success, [Optional] Action<string> failure)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xEAAD1C", Offset = "0xEAAD1C", VA = "0xEAAD1C", Slot = "19")]
		public void LoadTitleData([Optional] Action<GetTitleDataResult> success, [Optional] Action<string> failure)
		{
		}
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x2000263")]
	public class SceneControl : PunSingleton<SceneControl>
	{
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC845FC", Offset = "0xC845FC")]
		private sealed class <DelayedResetMatch>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SceneControl $this;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005A1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A52")]
				[Address(RVA = "0xEAE214", Offset = "0xEAE214", VA = "0xEAE214", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A53")]
				[Address(RVA = "0xEAE21C", Offset = "0xEAE21C", VA = "0xEAE21C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xEACD24", Offset = "0xEACD24", VA = "0xEACD24")]
			[DebuggerHidden]
			public <DelayedResetMatch>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A51")]
			[Address(RVA = "0xEAE114", Offset = "0xEAE114", VA = "0xEAE114", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xEAE224", Offset = "0xEAE224", VA = "0xEAE224", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A55")]
			[Address(RVA = "0xEAE238", Offset = "0xEAE238", VA = "0xEAE238", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8465C", Offset = "0xC8465C")]
		private sealed class <EndMatchAndDisplayMenu>c__AnonStorey1
		{
			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal EndState endState;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal MatchEndReasonType matchEndReasonType;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal SceneControl $this;

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xEAD7F8", Offset = "0xEAD7F8", VA = "0xEAD7F8")]
			public <EndMatchAndDisplayMenu>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002A57")]
			[Address(RVA = "0xEAE29C", Offset = "0xEAE29C", VA = "0xEAE29C")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4000DA6")]
		private const int CountdownStartDelay = 1000;

		[Token(Token = "0x4000DA7")]
		private const float MatchResetDelay = 1f;

		[Token(Token = "0x4000DA8")]
		private const float BeforeCountdownFadeTime = 0.75f;

		[Token(Token = "0x4000DA9")]
		private const float BeforeCountdownFadeWaitTime = 0.25f;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CountdownHandler m_countdownHandler;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_awaitOpponentCoroutine;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_suddenDeath;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_matchStarted;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_pendingGameOver;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool m_gameOver;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_resetting;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool m_isRematch;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_winnerViewID;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TeleportShimmer m_teleportSfx;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MatchType? m_currentMatchType;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Arena m_currentLevel;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_relicIconParent;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action m_onBeforeEnterLobby;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_wielderSpawnedEventToken;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_photonPlayerConnectedEventToken;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x17000250")]
		public bool MatchStarted
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xEAAEDC", Offset = "0xEAAEDC", VA = "0xEAAEDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xEAAFC4", Offset = "0xEAAFC4", VA = "0xEAAFC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public CountdownHandler CountdownHandler
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xEAB050", Offset = "0xEAB050", VA = "0xEAB050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84504", Offset = "0xC84504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public MatchType CurrentMatchType
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xEAB058", Offset = "0xEAB058", VA = "0xEAB058")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x17000253")]
		public Arena CurrentLevel
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xEAB104", Offset = "0xEAB104", VA = "0xEAB104")]
			get
			{
				return default(Arena);
			}
		}

		[Token(Token = "0x17000254")]
		public Transform RelicIconParent
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xEAB340", Offset = "0xEAB340", VA = "0xEAB340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84514", Offset = "0xC84514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public TeleportShimmer TeleportSfx
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xEAB3F8", Offset = "0xEAB3F8", VA = "0xEAB3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84524", Offset = "0xC84524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public bool GameOver
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xEAB494", Offset = "0xEAB494", VA = "0xEAB494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84534", Offset = "0xC84534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xEAAE8C", Offset = "0xEAAE8C", VA = "0xEAAE8C")]
		public SceneControl()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xEAB4B4", Offset = "0xEAB4B4", VA = "0xEAB4B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xEAB66C", Offset = "0xEAB66C", VA = "0xEAB66C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xEAB758", Offset = "0xEAB758", VA = "0xEAB758")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xEAB868", Offset = "0xEAB868", VA = "0xEAB868", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xEAB8F8", Offset = "0xEAB8F8", VA = "0xEAB8F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xEABA4C", Offset = "0xEABA4C", VA = "0xEABA4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xEAC100", Offset = "0xEAC100", VA = "0xEAC100")]
		public bool GetMatchStartedOrSoloExperience()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xEAC19C", Offset = "0xEAC19C", VA = "0xEAC19C")]
		private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xEAC1A0", Offset = "0xEAC1A0", VA = "0xEAC1A0")]
		private void EndCountdown()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xEAC698", Offset = "0xEAC698", VA = "0xEAC698")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xEAC6C8", Offset = "0xEAC6C8", VA = "0xEAC6C8")]
		private void WielderSpawned(Wielder wielder)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xEAC7AC", Offset = "0xEAC7AC", VA = "0xEAC7AC")]
		private void OnPhotonPlayerConnected(NetworkEvents.PhotonPlayerConnectedEvent eventData)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xEAC7D4", Offset = "0xEAC7D4", VA = "0xEAC7D4")]
		private void PhotonPlayerConnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xEAC8C0", Offset = "0xEAC8C0", VA = "0xEAC8C0")]
		private void OnPhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xEAC8F0", Offset = "0xEAC8F0", VA = "0xEAC8F0")]
		private void PhotonPlayerDisconnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xEAC740", Offset = "0xEAC740", VA = "0xEAC740")]
		[DebuggerHidden]
		private IEnumerator DelayedResetMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xEAC690", Offset = "0xEAC690", VA = "0xEAC690")]
		private void StartMatch()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xEAC050", Offset = "0xEAC050", VA = "0xEAC050")]
		private void SuddenDeath()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xEACD2C", Offset = "0xEACD2C", VA = "0xEACD2C")]
		[PunRPC]
		private void PunSuddenDeath()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xEACDB8", Offset = "0xEACDB8", VA = "0xEACDB8")]
		public void EndMatchPause(EndState endState)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xEABD20", Offset = "0xEABD20", VA = "0xEABD20")]
		public void EndMatch(int winnerViewID, MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xEAD1B8", Offset = "0xEAD1B8", VA = "0xEAD1B8")]
		[PunRPC]
		private void PunEndMatch(int winnerViewID, MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xEAD174", Offset = "0xEAD174", VA = "0xEAD174")]
		[PunRPC]
		private void PunSetWielderStats(MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xEAD1BC", Offset = "0xEAD1BC", VA = "0xEAD1BC")]
		public void StatsUpdated(MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xEACA28", Offset = "0xEACA28", VA = "0xEACA28")]
		[PunRPC]
		private void PunMasterEndMatch(MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xEAD2D0", Offset = "0xEAD2D0", VA = "0xEAD2D0")]
		[PunRPC]
		private void PunEndMatchAll(int winnerViewID, MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xEAD678", Offset = "0xEAD678", VA = "0xEAD678")]
		private void EndMatchAndDisplayMenu(EndState endState, MatchEndReasonType matchEndReasonType)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xEAD800", Offset = "0xEAD800", VA = "0xEAD800")]
		public void LeaveGameAndEnterLobby()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xEAD884", Offset = "0xEAD884", VA = "0xEAD884")]
		private int GetPickupsUsedTotal()
		{
			return default(int);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xEADABC", Offset = "0xEADABC", VA = "0xEADABC")]
		private void ClearPlayerObjects()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xEADBD0", Offset = "0xEADBD0", VA = "0xEADBD0")]
		public void ResetMatch()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xEADDC8", Offset = "0xEADDC8", VA = "0xEADDC8")]
		[PunRPC]
		private void OnReset()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xEAE05C", Offset = "0xEAE05C", VA = "0xEAE05C")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xEAE0E4", Offset = "0xEAE0E4", VA = "0xEAE0E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC845B4", Offset = "0xC845B4")]
		public void DebugStartSuddenDeath()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xEAE0E8", Offset = "0xEAE0E8", VA = "0xEAE0E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC845EC", Offset = "0xC845EC")]
		private void <OnReset>m__0(Task t)
		{
		}
	}
}
namespace Assets.Scripts.Season
{
	[Token(Token = "0x2000264")]
	public static class SeasonControl
	{
		[Token(Token = "0x2000265")]
		public class SeasonInformation
		{
			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool SeasonEnded;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string SeasonEndDate;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string NextSeasonStartDate;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int CurrentSeason;

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xEAE9E4", Offset = "0xEAE9E4", VA = "0xEAE9E4")]
			public SeasonInformation()
			{
			}
		}

		[Token(Token = "0x4000DBC")]
		public const string SeasonLocalizationParam = "SEASON";

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8466C", Offset = "0xC8466C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8466C", Offset = "0xC8466C")]
		private static bool <SeasonLocked>k__BackingField;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC846A8", Offset = "0xC846A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC846A8", Offset = "0xC846A8")]
		private static DateTime <SeasonEndDate>k__BackingField;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC846E4", Offset = "0xC846E4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC846E4", Offset = "0xC846E4")]
		private static DateTime? <NextSeasonStartDate>k__BackingField;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84720", Offset = "0xC84720")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC84720", Offset = "0xC84720")]
		private static int <CurrentSeason>k__BackingField;

		[Token(Token = "0x17000257")]
		public static bool SeasonLocked
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xEAE558", Offset = "0xEAE558", VA = "0xEAE558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8475C", Offset = "0xC8475C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xEAE5A8", Offset = "0xEAE5A8", VA = "0xEAE5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8476C", Offset = "0xC8476C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public static DateTime SeasonEndDate
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xEAE600", Offset = "0xEAE600", VA = "0xEAE600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8477C", Offset = "0xC8477C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xEAE650", Offset = "0xEAE650", VA = "0xEAE650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8478C", Offset = "0xC8478C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public static DateTime? NextSeasonStartDate
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xEAE6A4", Offset = "0xEAE6A4", VA = "0xEAE6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8479C", Offset = "0xC8479C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0xEAE6F4", Offset = "0xEAE6F4", VA = "0xEAE6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847AC", Offset = "0xC847AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public static int CurrentSeason
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xEAE754", Offset = "0xEAE754", VA = "0xEAE754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847BC", Offset = "0xC847BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0xEAE7A4", Offset = "0xEAE7A4", VA = "0xEAE7A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847CC", Offset = "0xC847CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xEAE7F8", Offset = "0xEAE7F8", VA = "0xEAE7F8")]
		public static void Initialize(SeasonInformation information)
		{
		}
	}
}
namespace Cortopia.Scripts.Season
{
	[Token(Token = "0x2000266")]
	public class SeasonStatsFetcher : MonoBehaviour
	{
		[Token(Token = "0x2000267")]
		public class SeasonStats
		{
			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Season;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool IsThisSeason;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RankedMatchCount;

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xE61320", Offset = "0xE61320", VA = "0xE61320")]
			public SeasonStats()
			{
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8482C", Offset = "0xC8482C")]
		private sealed class <GetRequest>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal UnityWebRequest <webRequest>__1;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal SeasonStatsFetcher $this;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005A3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A5A")]
				[Address(RVA = "0xE61288", Offset = "0xE61288", VA = "0xE61288", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A5B")]
				[Address(RVA = "0xE61290", Offset = "0xE61290", VA = "0xE61290", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xE60ED8", Offset = "0xE60ED8", VA = "0xE60ED8")]
			[DebuggerHidden]
			public <GetRequest>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0xE60FAC", Offset = "0xE60FAC", VA = "0xE60FAC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0xE61298", Offset = "0xE61298", VA = "0xE61298", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0xE612BC", Offset = "0xE612BC", VA = "0xE612BC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0xE611D0", Offset = "0xE611D0", VA = "0xE611D0")]
			private void <>__Finally0()
			{
			}
		}

		[Token(Token = "0x4000DC5")]
		private const string SeasonStatsPath = "https://wandsgame.com/wp-json/wandsapi/v1/SeasonRankedMatchCount";

		[Token(Token = "0x4000DC6")]
		private const int StatsLockedCode = -1;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SeasonStats m_seasonStats;

		[Token(Token = "0x1700025B")]
		public bool HasFetchedSeasonStats
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0xE60D54", Offset = "0xE60D54", VA = "0xE60D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847DC", Offset = "0xC847DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public int RankedMatchCount
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xE60D64", Offset = "0xE60D64", VA = "0xE60D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847EC", Offset = "0xC847EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025D")]
		public string LocalizationTerm
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xE60D8C", Offset = "0xE60D8C", VA = "0xE60D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC847FC", Offset = "0xC847FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public string LocalizationParam
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xE60DF8", Offset = "0xE60DF8", VA = "0xE60DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8480C", Offset = "0xC8480C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE60D4C", Offset = "0xE60D4C", VA = "0xE60D4C")]
		public SeasonStatsFetcher()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE60E40", Offset = "0xE60E40", VA = "0xE60E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE60E6C", Offset = "0xE60E6C", VA = "0xE60E6C")]
		[DebuggerHidden]
		private IEnumerator GetRequest()
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xE60EE0", Offset = "0xE60EE0", VA = "0xE60EE0")]
		private void CacheSeasonStats(SeasonStats seasonStats)
		{
		}
	}
}
namespace Assets.Scripts.Settings
{
	[Token(Token = "0x2000268")]
	public class AssetBundleSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000269")]
		public class StringBoolDicionary : SerializableDictionaryBase<string, bool>
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xEAEA6C", Offset = "0xEAEA6C", VA = "0xEAEA6C")]
			public StringBoolDicionary()
			{
			}
		}

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, bool> m_showAssetsInBundle;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StringBoolDicionary m_bundleToggles;

		[Token(Token = "0x1700025F")]
		public Dictionary<string, bool> ShowAssetsInBundle
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xEAEA5C", Offset = "0xEAEA5C", VA = "0xEAEA5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public StringBoolDicionary BundleToggles
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xEAEA64", Offset = "0xEAEA64", VA = "0xEAEA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xEAE9EC", Offset = "0xEAE9EC", VA = "0xEAE9EC")]
		public AssetBundleSettings()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class WandsBuilder : ScriptableObject
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8489C", Offset = "0xC8489C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8489C", Offset = "0xC8489C")]
		private Dictionary<PlatformType, bool> <Platforms>k__BackingField;

		[Token(Token = "0x17000261")]
		public Dictionary<PlatformType, bool> Platforms
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xEAEC48", Offset = "0xEAEC48", VA = "0xEAEC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC848D8", Offset = "0xC848D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xEAEC50", Offset = "0xEAEC50", VA = "0xEAEC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC848E8", Offset = "0xC848E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xEAEABC", Offset = "0xEAEABC", VA = "0xEAEABC")]
		public WandsBuilder()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class WandsBuildSettings : ScriptableObject
	{
		[Token(Token = "0x200026C")]
		public enum PlayStationRegionCode
		{
			[Token(Token = "0x4000DEA")]
			SIEE,
			[Token(Token = "0x4000DEB")]
			SIEA
		}

		[Token(Token = "0x200026D")]
		public enum PlayStationAppCategory
		{
			[Token(Token = "0x4000DED")]
			Application,
			[Token(Token = "0x4000DEE")]
			Patch,
			[Token(Token = "0x4000DEF")]
			Remaster
		}

		[Serializable]
		[Token(Token = "0x200026E")]
		public class VersionCode : SerializableDictionaryBase<PlatformType, int>
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xEAEC70", Offset = "0xEAEC70", VA = "0xEAEC70")]
			public VersionCode()
			{
			}
		}

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object MainManifest;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object OculusManifest;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object OculusReleaseManifest;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object QuestManifest;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Object QuestReleaseManifest;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Object PicoManifest;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Object PicoGlobalManifest;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Object PicoNeo2Manifest;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Object PicoNeo2GlobalManifest;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEngine.Object MiVrManifest;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PlatformType Platform;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public ConnectionType ConnectionType;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayStationRegionCode PlayStationRegion;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PlayStationAppCategory PlayStationBuildType;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string PlayStationVersionApplication;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string PlayStationVersionMaster;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string ClientVersion;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string NetworkVersion;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string PlayfabVersion;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool IsChinaBuild;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool HasEnabledLogging;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool UseDebugInput;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool UseDebugVoiceEcho;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool ShowStartupOptions;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool BlockPlayerDeath;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool EnableScoreFromBotMatches;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private VersionCode m_androidBundleVersions;

		[Token(Token = "0x17000262")]
		public VersionCode AndroidBundleVersions
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xEAEC68", Offset = "0xEAEC68", VA = "0xEAEC68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xEAEC58", Offset = "0xEAEC58", VA = "0xEAEC58")]
		public WandsBuildSettings()
		{
		}
	}
}
namespace Assets.Scripts.Sound
{
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC84908", Offset = "0xC84908")]
	public class AssetBundleSfx : MonoBehaviour
	{
		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_mixerGroupIndex;

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xEAECC0", Offset = "0xEAECC0", VA = "0xEAECC0")]
		public AssetBundleSfx()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xEAECC8", Offset = "0xEAECC8", VA = "0xEAECC8")]
		private void OnEnable()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class AudioDataLoader : MonoBehaviour
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_playOnLoad;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource[] m_ambientAudioSources;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xEAEDF0", Offset = "0xEAEDF0", VA = "0xEAEDF0")]
		public AudioDataLoader()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xEAEE00", Offset = "0xEAEE00", VA = "0xEAEE00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xEAEEBC", Offset = "0xEAEEBC", VA = "0xEAEEBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xEAEFB4", Offset = "0xEAEFB4", VA = "0xEAEFB4")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xEAEFB8", Offset = "0xEAEFB8", VA = "0xEAEFB8")]
		private void LoadAudioDataAndPlay()
		{
		}
	}
}
namespace Assets.Scripts.Enums
{
	[Token(Token = "0x2000271")]
	public struct AudioMixerGroupIndex
	{
		[Token(Token = "0x4000DF4")]
		public const int Level = 0;

		[Token(Token = "0x4000DF5")]
		public const int UI = 1;

		[Token(Token = "0x4000DF6")]
		public const int Spells = 2;

		[Token(Token = "0x4000DF7")]
		public const int Music = 3;
	}
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8499C", Offset = "0xC8499C")]
public class BigBen : MonoBehaviour
{
	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84A10", Offset = "0xC84A10")]
	private sealed class <Strike>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float waitTime;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal BigBen $this;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170005A5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0xEF8060", Offset = "0xEF8060", VA = "0xEF8060", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0xEF8068", Offset = "0xEF8068", VA = "0xEF8068", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xEF7F0C", Offset = "0xEF7F0C", VA = "0xEF7F0C")]
		[DebuggerHidden]
		public <Strike>c__Iterator0()
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0xEF7F14", Offset = "0xEF7F14", VA = "0xEF7F14", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0xEF8070", Offset = "0xEF8070", VA = "0xEF8070", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xEF8084", Offset = "0xEF8084", VA = "0xEF8084", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_strikeInterval;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSource;

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xEF7DAC", Offset = "0xEF7DAC", VA = "0xEF7DAC")]
	public BigBen()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xEF7DBC", Offset = "0xEF7DBC", VA = "0xEF7DBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xEF7DC4", Offset = "0xEF7DC4", VA = "0xEF7DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xEF7E80", Offset = "0xEF7E80", VA = "0xEF7E80")]
	[DebuggerHidden]
	private IEnumerator Strike(float waitTime)
	{
		return null;
	}
}
namespace Assets.Scripts.Sound
{
	[Token(Token = "0x2000273")]
	public class CharacterHitSfxHandler : MonoBehaviour
	{
		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] m_hitSoundsMale;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] m_hitSoundsFemale;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip[] m_hitSounds;

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xEAF074", Offset = "0xEAF074", VA = "0xEAF074")]
		public CharacterHitSfxHandler()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xE977C8", Offset = "0xE977C8", VA = "0xE977C8")]
		public void SetCorrectSoundEffects(CharacterType type)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xE98078", Offset = "0xE98078", VA = "0xE98078")]
		public void PlaySound()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class HurtSfxHandler : MonoBehaviour
	{
		[Token(Token = "0x2000275")]
		private struct HealthThresholds
		{
			[Token(Token = "0x4000E0F")]
			public const int Min = 5;

			[Token(Token = "0x4000E10")]
			public const int Danger = 65;

			[Token(Token = "0x4000E11")]
			public const int Critical = 25;
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84B7C", Offset = "0xC84B7C")]
		private sealed class <OnHit>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 hitDirection;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal HurtSfxHandler $this;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005A7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A67")]
				[Address(RVA = "0xEB0768", Offset = "0xEB0768", VA = "0xEB0768", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A68")]
				[Address(RVA = "0xEB0770", Offset = "0xEB0770", VA = "0xEB0770", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A65")]
			[Address(RVA = "0xEAFFA0", Offset = "0xEAFFA0", VA = "0xEAFFA0")]
			[DebuggerHidden]
			public <OnHit>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xEB0614", Offset = "0xEB0614", VA = "0xEB0614", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A69")]
			[Address(RVA = "0xEB0778", Offset = "0xEB0778", VA = "0xEB0778", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0xEB078C", Offset = "0xEB078C", VA = "0xEB078C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84BDC", Offset = "0xC84BDC")]
		private sealed class <OnContinuousHit>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__1;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal HurtSfxHandler $this;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005A9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A6D")]
				[Address(RVA = "0xEB058C", Offset = "0xEB058C", VA = "0xEB058C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A6E")]
				[Address(RVA = "0xEB0594", Offset = "0xEB0594", VA = "0xEB0594", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0xEB0014", Offset = "0xEB0014", VA = "0xEB0014")]
			[DebuggerHidden]
			public <OnContinuousHit>c__Iterator1()
			{
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0xEB0304", Offset = "0xEB0304", VA = "0xEB0304", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0xEB059C", Offset = "0xEB059C", VA = "0xEB059C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A70")]
			[Address(RVA = "0xEB05B0", Offset = "0xEB05B0", VA = "0xEB05B0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_disableMoanSfx;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource[] m_audioSources;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] m_heartBeatSounds;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] m_hitSoundsFemale;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip[] m_hitSoundsMale;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_belongsToPlayer;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_playHeartBeatCritical;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_playHeartBeatDanger;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool m_useMaleVoice;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationNetworkRelay m_animationRelay;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private StatsData m_healthData;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_characterTypeChangedEventToken;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly WaitForSeconds m_hitWait;

		[Token(Token = "0x4000E0D")]
		private const float ContinuousResponseTimeMultiplier = 2.2f;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84AF0", Offset = "0xC84AF0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC84AF0", Offset = "0xC84AF0")]
		private bool <IsContinuousDamageActive>k__BackingField;

		[Token(Token = "0x17000263")]
		public bool IsContinuousDamageActive
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xEAF13C", Offset = "0xEAF13C", VA = "0xEAF13C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84B2C", Offset = "0xC84B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xEAF144", Offset = "0xEAF144", VA = "0xEAF144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84B3C", Offset = "0xC84B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool IsActive
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xEAF150", Offset = "0xEAF150", VA = "0xEAF150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84B4C", Offset = "0xC84B4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xEAF07C", Offset = "0xEAF07C", VA = "0xEAF07C")]
		public HurtSfxHandler()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xEAF170", Offset = "0xEAF170", VA = "0xEAF170")]
		public void Initialize(StatsData healthData, AnimationNetworkRelay animationRelay, bool belongsToPlayer, CharacterType characterType)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xEAF428", Offset = "0xEAF428", VA = "0xEAF428")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xEAF58C", Offset = "0xEAF58C", VA = "0xEAF58C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xEAF634", Offset = "0xEAF634", VA = "0xEAF634")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xEAF790", Offset = "0xEAF790", VA = "0xEAF790")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xEAF7F0", Offset = "0xEAF7F0", VA = "0xEAF7F0")]
		private void OnCharacterTypeChanged(Events.CharacterTypeChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xEAF3FC", Offset = "0xEAF3FC", VA = "0xEAF3FC")]
		private void UpdateUseMaleVoice(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xEAF638", Offset = "0xEAF638", VA = "0xEAF638")]
		private void ResetMatch()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xEAF844", Offset = "0xEAF844", VA = "0xEAF844")]
		public void StopHeartBeat()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xEAF3B0", Offset = "0xEAF3B0", VA = "0xEAF3B0")]
		public void CheckHeartbeatConditions(float hp)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xEAFB60", Offset = "0xEAFB60", VA = "0xEAFB60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xEAFA24", Offset = "0xEAFA24", VA = "0xEAFA24")]
		public void StartHeartBeatDanger()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xEAF8E0", Offset = "0xEAF8E0", VA = "0xEAF8E0")]
		public void StartHeartBeatCritical()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xEAFE30", Offset = "0xEAFE30", VA = "0xEAFE30")]
		public void PlayHitReaction(bool oneShot, Vector2 hitDirection)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xEAF794", Offset = "0xEAF794", VA = "0xEAF794")]
		public void AbortContinuousHit()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xEAFF0C", Offset = "0xEAFF0C", VA = "0xEAFF0C")]
		[DebuggerHidden]
		private IEnumerator OnHit(Vector2 hitDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xEAFFA8", Offset = "0xEAFFA8", VA = "0xEAFFA8")]
		[DebuggerHidden]
		private IEnumerator OnContinuousHit()
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xEB001C", Offset = "0xEB001C", VA = "0xEB001C")]
		private void HandleScreenFlash()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xEB01C4", Offset = "0xEB01C4", VA = "0xEB01C4")]
		private void PlaySound()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC84C3C", Offset = "0xC84C3C")]
	public class Lava : MonoBehaviour
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xEB07F0", Offset = "0xEB07F0", VA = "0xEB07F0")]
		public Lava()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xEB07F8", Offset = "0xEB07F8", VA = "0xEB07F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xEB0800", Offset = "0xEB0800", VA = "0xEB0800")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xEB0858", Offset = "0xEB0858", VA = "0xEB0858")]
		private void StartSound()
		{
		}
	}
}
[Token(Token = "0x2000277")]
public class LoadSfx : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_loadAudioSource;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC84CB0", Offset = "0xC84CB0")]
	private float m_maxVolume;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_transitionTime;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xF68068", Offset = "0xF68068", VA = "0xF68068")]
	public LoadSfx()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xF68080", Offset = "0xF68080", VA = "0xF68080")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xF68118", Offset = "0xF68118", VA = "0xF68118")]
	public void SetLoadSourcePaused(bool pause)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xF681E4", Offset = "0xF681E4", VA = "0xF681E4")]
	public void ToggleLoadSource(bool active, float transitionTime = 0f)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xF683F8", Offset = "0xF683F8", VA = "0xF683F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84D04", Offset = "0xC84D04")]
	private void <ToggleLoadSource>m__0()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xF68424", Offset = "0xF68424", VA = "0xF68424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84D14", Offset = "0xC84D14")]
	private void <ToggleLoadSource>m__1()
	{
	}
}
namespace Assets.Scripts.Sound
{
	[Token(Token = "0x2000278")]
	public class SfxPlayer : MonoBehaviour
	{
		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84DF0", Offset = "0xC84DF0")]
		private sealed class <PlaySfx>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal SfxPlayer $this;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005AB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A73")]
				[Address(RVA = "0xEB0FF8", Offset = "0xEB0FF8", VA = "0xEB0FF8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A74")]
				[Address(RVA = "0xEB1000", Offset = "0xEB1000", VA = "0xEB1000", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xEB0CF0", Offset = "0xEB0CF0", VA = "0xEB0CF0")]
			[DebuggerHidden]
			public <PlaySfx>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0xEB0E94", Offset = "0xEB0E94", VA = "0xEB0E94", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A75")]
			[Address(RVA = "0xEB1008", Offset = "0xEB1008", VA = "0xEB1008", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0xEB101C", Offset = "0xEB101C", VA = "0xEB101C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC84D24", Offset = "0xC84D24")]
		private float m_customVolume;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC84D64", Offset = "0xC84D64")]
		private int m_startDelay;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_minInterval;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_maxInterval;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] m_audioClips;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AudioSource> m_audioSources;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_useRandomInterval;

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xEB08C0", Offset = "0xEB08C0", VA = "0xEB08C0")]
		public SfxPlayer()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xEB08D4", Offset = "0xEB08D4", VA = "0xEB08D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xEB0A00", Offset = "0xEB0A00", VA = "0xEB0A00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xEB0BE4", Offset = "0xEB0BE4", VA = "0xEB0BE4")]
		private void StartWait(float waitTime)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xEB0C64", Offset = "0xEB0C64", VA = "0xEB0C64")]
		[DebuggerHidden]
		private IEnumerator PlaySfx(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xEB0CF8", Offset = "0xEB0CF8", VA = "0xEB0CF8")]
		private bool CanSetAudioClip(AudioSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xEB0BAC", Offset = "0xEB0BAC", VA = "0xEB0BAC")]
		private float GetRandomWaitTime()
		{
			return default(float);
		}
	}
}
[Token(Token = "0x2000279")]
public class SnapshotHandler : MonoSingleton<SnapshotHandler>
{
	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer m_audioMixer;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioMixerSnapshot[] m_sceneSnapChats;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioMixerSnapshot[] m_transitionSnaps;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_currentIndex;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xFA6B04", Offset = "0xFA6B04", VA = "0xFA6B04")]
	public SnapshotHandler()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xFA6B5C", Offset = "0xFA6B5C", VA = "0xFA6B5C")]
	public void TransitionTo(int snapShotIndex)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xFA6B68", Offset = "0xFA6B68", VA = "0xFA6B68")]
	public void TransitionTo(int snapShotIndex, float timeToReach)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xFA6D14", Offset = "0xFA6D14", VA = "0xFA6D14")]
	public void TransitionToSnapshots(float value1, float value2, int snapshotBlendValue)
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC84E70", Offset = "0xC84E70")]
public class Sound : MonoBehaviourPun
{
	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_local;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_isPersistent;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource m_source;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventToken m_sceneLoadedEventToken;

	[Token(Token = "0x17000265")]
	public int ID
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xFA6F60", Offset = "0xFA6F60", VA = "0xFA6F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84EE4", Offset = "0xC84EE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000266")]
	public bool IsLocal
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xFA6F94", Offset = "0xFA6F94", VA = "0xFA6F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84EF4", Offset = "0xC84EF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000267")]
	public AudioSource Source
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xFA6F9C", Offset = "0xFA6F9C", VA = "0xFA6F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84F04", Offset = "0xC84F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000268")]
	public bool IsAvailable
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xFA7038", Offset = "0xFA7038", VA = "0xFA7038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84F14", Offset = "0xC84F14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000269")]
	public string ClipName
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xFA7074", Offset = "0xFA7074", VA = "0xFA7074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC84F24", Offset = "0xC84F24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xFA6F58", Offset = "0xFA6F58", VA = "0xFA6F58")]
	public Sound()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xFA7118", Offset = "0xFA7118", VA = "0xFA7118")]
	public void SetPaused(bool pause)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xFA7164", Offset = "0xFA7164", VA = "0xFA7164")]
	public void SetPersistent()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xFA7294", Offset = "0xFA7294", VA = "0xFA7294")]
	private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xFA7364", Offset = "0xFA7364", VA = "0xFA7364")]
	public void Play(AudioClip clip, Vector3 position, float volume, float spatialBlend, int groupIndex)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xFA7518", Offset = "0xFA7518", VA = "0xFA7518")]
	public void PlaySynced(int clipIndex, Vector3 pos, float volume, float spatialBlend, int groupIndex)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xFA794C", Offset = "0xFA794C", VA = "0xFA794C")]
	public void PlaySynced(int clipIndex, Vector3 pos, float volume, float localSpatialBlend, float remoteSpatialBlend, int groupIndex)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xFA785C", Offset = "0xFA785C", VA = "0xFA785C")]
	[PunRPC]
	private void PunPlaySound(int clipIndex, Vector3 position, float volume, float spatialBlend, int groupIndex)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xFA7368", Offset = "0xFA7368", VA = "0xFA7368")]
	private void PlaySound(AudioClip clip, Vector3 position, float volume, float spatialBlend, int groupIndex)
	{
	}
}
[Token(Token = "0x200027B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC84F44", Offset = "0xC84F44")]
public class SoundHandler : MonoBehaviour
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] m_audioClips;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSource;

	[Token(Token = "0x1700026A")]
	public AudioSource Source
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xFA7CC0", Offset = "0xFA7CC0", VA = "0xFA7CC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xFA7CB8", Offset = "0xFA7CB8", VA = "0xFA7CB8")]
	public SoundHandler()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xFA7D60", Offset = "0xFA7D60", VA = "0xFA7D60")]
	public void PlaySound(string name)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xFA7DB0", Offset = "0xFA7DB0", VA = "0xFA7DB0")]
	public void PlaySound(string name, float volume)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xFA7DB8", Offset = "0xFA7DB8", VA = "0xFA7DB8")]
	public void PlaySound(string name, float volume, float destroyTime)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xFA80A0", Offset = "0xFA80A0", VA = "0xFA80A0")]
	private AudioClip GetClip(string name)
	{
		return null;
	}
}
[Token(Token = "0x200027C")]
public class SoundManager : PunSingleton<SoundManager>, IPauseObject
{
	[Token(Token = "0x200027D")]
	public struct ClipNames
	{
		[Token(Token = "0x4000E47")]
		public const string NoMana = "No Mana";

		[Token(Token = "0x4000E48")]
		public const string MatchBegin = "music_match_begins";

		[Token(Token = "0x4000E49")]
		public const string MatchEnd = "music_match_end";

		[Token(Token = "0x4000E4A")]
		public const string MatchEndEastern = "music_match_end_eastern";
	}

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AudioMixer m_master;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioMixerSnapshot m_muteSnapshot;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioMixerGroup m_voipMixerGroup;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC84FD8", Offset = "0xC84FD8")]
	public AudioClip[] generalAudioClips;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] m_matchQueueClips;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] m_matchMusic;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] m_matchMusicLastMinute;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC85010", Offset = "0xC85010")]
	public AudioSource[] m_musicSources;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioMixerGroup[] m_groups;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioMixerGroup[] m_assetBundleGroups;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject m_androidSfx;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource m_ambientAudioSource;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	private List<Sound> m_sourcePool;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[HideInInspector]
	private List<Sound> m_localSourcePool;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IDictionary<string, AudioClip> m_matchQueueAudioClips;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IDictionary<string, int> m_generalQueueAudioClips;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_fadeMusic;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int m_fadeMusicIndex;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_currentLerpTime;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_fadeTime;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_startVolume;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_endVolume;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_originalVolume;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TickingTimer m_tickingTimer;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EventToken m_matchPausedEventToken;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private EventToken m_suddenDeathStartedEventToken;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EventToken m_energyDepletedEventToken;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private EventToken m_matchEndedEventToken;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private EventToken m_finalCountdownStartedEventToken;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EventToken m_countdownEndedEventToken;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC850D8", Offset = "0xC850D8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC850D8", Offset = "0xC850D8")]
	private bool <IsTickingTimerStarted>k__BackingField;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85114", Offset = "0xC85114")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85114", Offset = "0xC85114")]
	private bool <IsPaused>k__BackingField;

	[Token(Token = "0x1700026B")]
	public bool IsTickingTimerStarted
	{
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xFA82F0", Offset = "0xFA82F0", VA = "0xFA82F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85150", Offset = "0xC85150")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xFA82F8", Offset = "0xFA82F8", VA = "0xFA82F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85160", Offset = "0xC85160")]
		private set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public bool IsPaused
	{
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xFA8304", Offset = "0xFA8304", VA = "0xFA8304", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85170", Offset = "0xC85170")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xFA830C", Offset = "0xFA830C", VA = "0xFA830C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85180", Offset = "0xC85180")]
		set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	public AudioMixerGroup VoipMixerGroup
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xFA8318", Offset = "0xFA8318", VA = "0xFA8318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85190", Offset = "0xC85190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026E")]
	public AudioMixerGroup UiMixerGroup
	{
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xFA8320", Offset = "0xFA8320", VA = "0xFA8320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC851A0", Offset = "0xC851A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xFA8200", Offset = "0xFA8200", VA = "0xFA8200")]
	public SoundManager()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xFA8360", Offset = "0xFA8360", VA = "0xFA8360", Slot = "8")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xFA86C8", Offset = "0xFA86C8", VA = "0xFA86C8", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xFA885C", Offset = "0xFA885C", VA = "0xFA885C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xFA8C48", Offset = "0xFA8C48", VA = "0xFA8C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xFA8D94", Offset = "0xFA8D94", VA = "0xFA8D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xFA8EB4", Offset = "0xFA8EB4", VA = "0xFA8EB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xFA8FA0", Offset = "0xFA8FA0", VA = "0xFA8FA0")]
	public void StartTickingTimer()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xFA8FAC", Offset = "0xFA8FAC", VA = "0xFA8FAC")]
	public void StopTickingTimer()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xFA8FB4", Offset = "0xFA8FB4", VA = "0xFA8FB4", Slot = "7")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xFA913C", Offset = "0xFA913C", VA = "0xFA913C")]
	public void OnReset(MatchType matchType)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xFA9144", Offset = "0xFA9144", VA = "0xFA9144")]
	private void ResetAllSfx(EndState endState)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xFA962C", Offset = "0xFA962C", VA = "0xFA962C")]
	public void MuteAll()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xFA8958", Offset = "0xFA8958", VA = "0xFA8958")]
	private void FillMatchQueueNames()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xFA8AD0", Offset = "0xFA8AD0", VA = "0xFA8AD0")]
	private void FillGeneralAudioClipNames()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xFA96CC", Offset = "0xFA96CC", VA = "0xFA96CC")]
	private void PreloadAudio()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xFA85C4", Offset = "0xFA85C4", VA = "0xFA85C4")]
	private void PlayAmbience()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xFA9850", Offset = "0xFA9850", VA = "0xFA9850", Slot = "9")]
	public virtual void SetOptionalMusicEnabled(bool enable)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xFA9974", Offset = "0xFA9974", VA = "0xFA9974")]
	public void SetMusicEquilizerFrequency(float value)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xFA9A24", Offset = "0xFA9A24", VA = "0xFA9A24")]
	public void SetEquilizerFrequency(float value)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xFA9AD4", Offset = "0xFA9AD4", VA = "0xFA9AD4")]
	public float GetEqualizerFrequency()
	{
		return default(float);
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xFA9B4C", Offset = "0xFA9B4C", VA = "0xFA9B4C")]
	public bool IsMusicPlaying(int index = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xFA9C4C", Offset = "0xFA9C4C", VA = "0xFA9C4C")]
	public void FadeMusic(bool fadeIn, float fadeTime, int sourceIndex = 0)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xFA9CB4", Offset = "0xFA9CB4", VA = "0xFA9CB4")]
	public void FadeMusic(bool fadeIn, float fadeTime, float startVolume, float endVolume, int sourceIndex = 0)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xFA94F4", Offset = "0xFA94F4", VA = "0xFA94F4")]
	public Sound PlayMusic(string clipName, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xFA9DE8", Offset = "0xFA9DE8", VA = "0xFA9DE8")]
	private void PlayMusicClip(string clipName, float volume, Sound sound)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xFA9FE0", Offset = "0xFA9FE0", VA = "0xFA9FE0", Slot = "10")]
	protected virtual void PlayMusic(MusicType musicType)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xFAA1DC", Offset = "0xFAA1DC", VA = "0xFAA1DC")]
	private AudioClip GetMusicClip(MusicType musicType)
	{
		return null;
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xFAA2F4", Offset = "0xFAA2F4", VA = "0xFAA2F4")]
	private void PlayBattleMusic()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xFA92E0", Offset = "0xFA92E0", VA = "0xFA92E0")]
	public void StopAllSounds()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xFA93C8", Offset = "0xFA93C8", VA = "0xFA93C8")]
	public void StopAllMusic()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xFAA478", Offset = "0xFAA478", VA = "0xFAA478")]
	public void StopMusic(MusicType musicType = MusicType.Default)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xFAA578", Offset = "0xFAA578", VA = "0xFAA578")]
	public void StopSound(string clipName)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xFAA470", Offset = "0xFAA470", VA = "0xFAA470")]
	public void StopLocalSound(string clipName)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xFAA6F8", Offset = "0xFAA6F8", VA = "0xFAA6F8")]
	[PunRPC]
	private void PunStopSfx(string clipName, bool isLocal)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xFAA844", Offset = "0xFAA844", VA = "0xFAA844")]
	public void PlayLocalSound(string clipName)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xFAA984", Offset = "0xFAA984", VA = "0xFAA984")]
	public void PlayLocalSound(string clipName, float volume)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xFAA850", Offset = "0xFAA850", VA = "0xFAA850")]
	public void PlayLocalSound(string clipName, float volume, int mixerGroup)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xFAAB88", Offset = "0xFAAB88", VA = "0xFAAB88")]
	public void PlayLocalSoundAtPoint(string clipName, float volume, Vector3 point)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xFAAB90", Offset = "0xFAAB90", VA = "0xFAAB90")]
	public void PlayLocalSoundAtPoint(string clipName, float volume, Vector3 point, int mixerGroup)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xFAACA4", Offset = "0xFAACA4", VA = "0xFAACA4")]
	public void PlaySound(string clipName)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xFAACB0", Offset = "0xFAACB0", VA = "0xFAACB0")]
	public void PlaySound(string clipName, float volume, int mixerGroup)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xFAADE4", Offset = "0xFAADE4", VA = "0xFAADE4")]
	public void PlayPlayerSound(string clipName, float volume, Vector3 point, int mixerGroup)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xFAAFE4", Offset = "0xFAAFE4", VA = "0xFAAFE4")]
	public void PlaySoundAtPoint(string clipName, Vector3 point)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xFAB110", Offset = "0xFAB110", VA = "0xFAB110")]
	public void PlaySoundAtPoint(string clipName, float volume, Vector3 point)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xFAAFFC", Offset = "0xFAAFFC", VA = "0xFAAFFC")]
	public void PlaySoundAtPoint(string clipName, float volume, Vector3 point, int mixerGroup)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xFAA98C", Offset = "0xFAA98C", VA = "0xFAA98C")]
	protected void PlaySoundClip(string clipName, float volume, float spatialBlend, Vector3 point, bool local, int groupIndex)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xFA9D50", Offset = "0xFA9D50", VA = "0xFA9D50")]
	protected Sound Drop(bool useLocalSound)
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xFAB118", Offset = "0xFAB118", VA = "0xFAB118")]
	private Sound Drop(Sound[] pool)
	{
		return null;
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xFAB19C", Offset = "0xFAB19C", VA = "0xFAB19C")]
	private void OnMatchPaused(Events.MatchPausedEvent eventData)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFAB1CC", Offset = "0xFAB1CC", VA = "0xFAB1CC")]
	private void OnMatchEnded(Events.MatchEndedEvent eventData)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xFAB1FC", Offset = "0xFAB1FC", VA = "0xFAB1FC")]
	private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xFAB2C0", Offset = "0xFAB2C0", VA = "0xFAB2C0")]
	private void OnEnergyDepleted(Events.EnergyDepletedEvent eventData)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xFAB338", Offset = "0xFAB338", VA = "0xFAB338")]
	private void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xFAB38C", Offset = "0xFAB38C", VA = "0xFAB38C")]
	private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
	{
	}
}
namespace Assets.Scripts.Sound
{
	[Token(Token = "0x200027E")]
	public class SoundManagerLobby : SoundManager
	{
		[Token(Token = "0x4000E4B")]
		private const string LobbyCountdownSfx = "countdown_5sec";

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_musicStartVolume;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventToken m_lobbyPausedEventToken;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private EventToken m_postMatchUiSkippedEventToken;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private EventToken m_finalCountdownStartedEventToken;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private EventToken m_countdownCanceledEventToken;

		[Token(Token = "0x1700026F")]
		private AudioSource MainMusicSource
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xEB1088", Offset = "0xEB1088", VA = "0xEB1088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xEB1080", Offset = "0xEB1080", VA = "0xEB1080")]
		public SoundManagerLobby()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xEB10C4", Offset = "0xEB10C4", VA = "0xEB10C4", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xEB127C", Offset = "0xEB127C", VA = "0xEB127C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xEB1348", Offset = "0xEB1348", VA = "0xEB1348", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xEB1390", Offset = "0xEB1390", VA = "0xEB1390")]
		private void OnLobbyPaused(Events.LobbyPausedEvent eventData)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xEB13C4", Offset = "0xEB13C4", VA = "0xEB13C4")]
		private void OnPostMatchUiSkipped(Events.PostMatchUiSkippedEvent eventData)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xEB13F0", Offset = "0xEB13F0", VA = "0xEB13F0")]
		private void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xEB1448", Offset = "0xEB1448", VA = "0xEB1448")]
		private void OnCountdownCanceled(Events.CountdownCanceledEvent eventData)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xEB149C", Offset = "0xEB149C", VA = "0xEB149C")]
		public void PlayUiFlowComplete()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xEB14F8", Offset = "0xEB14F8", VA = "0xEB14F8")]
		public void PlayLobbyMusic()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xEB161C", Offset = "0xEB161C", VA = "0xEB161C")]
		public void PlaySurvivalMusic()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xEB1714", Offset = "0xEB1714", VA = "0xEB1714")]
		public void FadeMusic()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xEB15EC", Offset = "0xEB15EC", VA = "0xEB15EC")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xEB17CC", Offset = "0xEB17CC", VA = "0xEB17CC", Slot = "9")]
		public override void SetOptionalMusicEnabled(bool enable)
		{
		}
	}
}
[Token(Token = "0x200027F")]
public class SoundManagerWorkshop : SoundManager
{
	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xFAB420", Offset = "0xFAB420", VA = "0xFAB420")]
	public SoundManagerWorkshop()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xFAB424", Offset = "0xFAB424", VA = "0xFAB424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xFAB4A0", Offset = "0xFAB4A0", VA = "0xFAB4A0")]
	public void PlayPersistantLocalSound(string clipName, float volume, int groupIndex)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xFAB644", Offset = "0xFAB644", VA = "0xFAB644", Slot = "10")]
	protected override void PlayMusic(MusicType musicType)
	{
	}
}
namespace Assets.Scripts.Sound
{
	[Token(Token = "0x2000280")]
	public class SoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85210", Offset = "0xC85210")]
		private sealed class <LatentPlaySound>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal SoundPlayer $this;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005AD")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A79")]
				[Address(RVA = "0xEB1C50", Offset = "0xEB1C50", VA = "0xEB1C50", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A7A")]
				[Address(RVA = "0xEB1C58", Offset = "0xEB1C58", VA = "0xEB1C58", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A77")]
			[Address(RVA = "0xEB1A04", Offset = "0xEB1A04", VA = "0xEB1A04")]
			[DebuggerHidden]
			public <LatentPlaySound>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xEB1B5C", Offset = "0xEB1B5C", VA = "0xEB1B5C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0xEB1C60", Offset = "0xEB1C60", VA = "0xEB1C60", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0xEB1C74", Offset = "0xEB1C74", VA = "0xEB1C74", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip m_audioClip;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_volume;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_2dSound;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_group;

		[Token(Token = "0x17000270")]
		private bool IsEnabled
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0xEB18C0", Offset = "0xEB18C0", VA = "0xEB18C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xEB18B0", Offset = "0xEB18B0", VA = "0xEB18B0")]
		public SoundPlayer()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xEB1918", Offset = "0xEB1918", VA = "0xEB1918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xEB1920", Offset = "0xEB1920", VA = "0xEB1920")]
		public void PlaySoundWithDelay(float delay)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xEB1978", Offset = "0xEB1978", VA = "0xEB1978")]
		[DebuggerHidden]
		private IEnumerator LatentPlaySound(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xEB1A0C", Offset = "0xEB1A0C", VA = "0xEB1A0C")]
		public void PlaySound()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class SplitAudioSoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC852EC", Offset = "0xC852EC")]
		private sealed class <LatentStopAudio>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float duration;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal SplitAudioSoundPlayer $this;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005AF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A7F")]
				[Address(RVA = "0xEB214C", Offset = "0xEB214C", VA = "0xEB214C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A80")]
				[Address(RVA = "0xEB2154", Offset = "0xEB2154", VA = "0xEB2154", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0xEB1DA0", Offset = "0xEB1DA0", VA = "0xEB1DA0")]
			[DebuggerHidden]
			public <LatentStopAudio>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xEB2070", Offset = "0xEB2070", VA = "0xEB2070", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xEB215C", Offset = "0xEB215C", VA = "0xEB215C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xEB2170", Offset = "0xEB2170", VA = "0xEB2170", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_chargeStartAudio;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_chargeLoopAudio;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC85290", Offset = "0xC85290")]
		[SerializeField]
		private AudioSource m_chargeStopAudio;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_loopStartVolume;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TweenCallback m_tweenCallback;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xEB1CD8", Offset = "0xEB1CD8", VA = "0xEB1CD8")]
		public SplitAudioSoundPlayer()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xEB1CE0", Offset = "0xEB1CE0", VA = "0xEB1CE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xEA28C8", Offset = "0xEA28C8", VA = "0xEA28C8")]
		public void PlaySplitAudio(float delay = 0f, float duration = 0f)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xEB1D74", Offset = "0xEB1D74", VA = "0xEB1D74")]
		private void PlayStartSound()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xEB1CE8", Offset = "0xEB1CE8", VA = "0xEB1CE8")]
		[DebuggerHidden]
		private IEnumerator LatentStopAudio(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xEB1DA8", Offset = "0xEB1DA8", VA = "0xEB1DA8")]
		public void KillSplitAudio()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xEB1EF4", Offset = "0xEB1EF4", VA = "0xEB1EF4")]
		public void FadeOutLoop(float time, TweenCallback callback)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xEB2040", Offset = "0xEB2040", VA = "0xEB2040")]
		private void OnFadeOutCompleted()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xEA2B74", Offset = "0xEA2B74", VA = "0xEA2B74")]
		public void PlayStopSound()
		{
		}
	}
}
[Token(Token = "0x2000282")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8534C", Offset = "0xC8534C")]
public class TeleportShimmer : MonoBehaviour
{
	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_fadeSound;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSrc;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_volumeStart;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_startTime;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_startVolume;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_endVolume;

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xFB3140", Offset = "0xFB3140", VA = "0xFB3140")]
	public TeleportShimmer()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xFB3148", Offset = "0xFB3148", VA = "0xFB3148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xFB3204", Offset = "0xFB3204", VA = "0xFB3204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xFB33A0", Offset = "0xFB33A0", VA = "0xFB33A0")]
	public void FadeSound(Transform tileTf)
	{
	}
}
[Token(Token = "0x2000283")]
public class TickingTimer
{
	[Token(Token = "0x4000E60")]
	private const string TickSoundName = "timer_countdown_tick_01";

	[Token(Token = "0x4000E61")]
	private const string TockSoundName = "timer_countdown_tick_02";

	[Token(Token = "0x4000E62")]
	public const float TickTriggerTime = 30f;

	[Token(Token = "0x4000E63")]
	private const float FastTickTriggerTime = 10f;

	[Token(Token = "0x4000E64")]
	private const float FinalTickTriggerTime = 4f;

	[Token(Token = "0x4000E65")]
	private const float TickInterval = 1f;

	[Token(Token = "0x4000E66")]
	private const float SpeedUpFactor = 0.5f;

	[Token(Token = "0x4000E67")]
	public const float TickVolume = 0.6f;

	[Token(Token = "0x4000E68")]
	private const float TickVolumeDelta = 0.1f;

	[Token(Token = "0x4000E69")]
	private const int MaxInterations = 2;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_currentVolume;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_interval;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_timeLeft;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_lastTickTime;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentIteration;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_tickTockVariation;

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xFA82D8", Offset = "0xFA82D8", VA = "0xFA82D8")]
	public TickingTimer()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xFA8EE8", Offset = "0xFA8EE8", VA = "0xFA8EE8")]
	public void HandleTicking()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xFB35FC", Offset = "0xFB35FC", VA = "0xFB35FC")]
	private void UpdateSound()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xFB36B8", Offset = "0xFB36B8", VA = "0xFB36B8")]
	private void NextIteration()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xFB36E4", Offset = "0xFB36E4", VA = "0xFB36E4")]
	private void IncreaseVolume()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xFB3708", Offset = "0xFB3708", VA = "0xFB3708")]
	private void UpdateInterval()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xFB377C", Offset = "0xFB377C", VA = "0xFB377C")]
	private void ChangeTickTockVariation()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xFB365C", Offset = "0xFB365C", VA = "0xFB365C")]
	private void HandleTickSoundPlayback()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xFB38A0", Offset = "0xFB38A0", VA = "0xFB38A0")]
	private string GetCurrentSoundName()
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xFB3900", Offset = "0xFB3900", VA = "0xFB3900")]
	private float GetCurrentSoundVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xFB378C", Offset = "0xFB378C", VA = "0xFB378C")]
	private void PlayTickSound()
	{
	}
}
namespace Assets.Scripts.Spells.Defense
{
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC853B0", Offset = "0xC853B0")]
	public class Spell_ArmorOfTheSun : SpellBase
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC85414", Offset = "0xC85414")]
		[SerializeField]
		private float m_startDurability;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_deflectValue;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_durability;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool m_isArmorActive;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool m_isArmorActiveAtStart;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x17000271")]
		public float DeflectValue
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x129C470", Offset = "0x129C470", VA = "0x129C470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85470", Offset = "0xC85470")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x129C428", Offset = "0x129C428", VA = "0x129C428")]
		public Spell_ArmorOfTheSun()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x129C480", Offset = "0x129C480", VA = "0x129C480", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x129C594", Offset = "0x129C594", VA = "0x129C594", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x129C638", Offset = "0x129C638", VA = "0x129C638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x129C644", Offset = "0x129C644", VA = "0x129C644")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x129C66C", Offset = "0x129C66C", VA = "0x129C66C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x129C684", Offset = "0x129C684", VA = "0x129C684")]
		public void ActivateArmor(float customDurability)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x129C998", Offset = "0x129C998", VA = "0x129C998")]
		public void ArmorHit(float damage)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x129CB68", Offset = "0x129CB68", VA = "0x129CB68")]
		[PunRPC]
		private void PunArmorHit(int viewID, float damage)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x129CC04", Offset = "0x129CC04", VA = "0x129CC04", Slot = "17")]
		public override void SpellPress()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x129CD14", Offset = "0x129CD14", VA = "0x129CD14", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x129CD4C", Offset = "0x129CD4C", VA = "0x129CD4C", Slot = "18")]
		public override void SpellHold()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x129CD50", Offset = "0x129CD50", VA = "0x129CD50", Slot = "19")]
		public override void SpellRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x129CFA0", Offset = "0x129CFA0", VA = "0x129CFA0", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x129CFA4", Offset = "0x129CFA4", VA = "0x129CFA4", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x129CFA8", Offset = "0x129CFA8", VA = "0x129CFA8", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x129C69C", Offset = "0x129C69C", VA = "0x129C69C")]
		protected void SetActive(bool active, bool discret = false)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x129D50C", Offset = "0x129D50C", VA = "0x129D50C")]
		[PunRPC]
		private void PunHighlightActive(bool active)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x129D724", Offset = "0x129D724", VA = "0x129D724", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000285")]
	public class Spell_DevilsTwins : SpellBase
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC854A0", Offset = "0xC854A0")]
		[SerializeField]
		private WandChargeEffect m_instantiationEffect;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Twin> m_clientTwins;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int m_tilesCheckedCount;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool m_holdUntilPressed;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private HashSet<Tile> m_selectedTiles;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<IPoolObject> m_activeTwins;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<IPoolObject> m_poolObjects;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private object[] m_twinData;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x129D744", Offset = "0x129D744", VA = "0x129D744")]
		public Spell_DevilsTwins()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x129D7D4", Offset = "0x129D7D4", VA = "0x129D7D4", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x129D8E4", Offset = "0x129D8E4", VA = "0x129D8E4", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x129D980", Offset = "0x129D980", VA = "0x129D980", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x129DF3C", Offset = "0x129DF3C", VA = "0x129DF3C", Slot = "13")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x129E1BC", Offset = "0x129E1BC", VA = "0x129E1BC")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x129E1D4", Offset = "0x129E1D4", VA = "0x129E1D4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x129E1EC", Offset = "0x129E1EC", VA = "0x129E1EC", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x129E430", Offset = "0x129E430", VA = "0x129E430", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x129E50C", Offset = "0x129E50C", VA = "0x129E50C", Slot = "17")]
		public override void SpellPress()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x129E53C", Offset = "0x129E53C", VA = "0x129E53C", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x129E570", Offset = "0x129E570", VA = "0x129E570", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x129E574", Offset = "0x129E574", VA = "0x129E574", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x129E24C", Offset = "0x129E24C", VA = "0x129E24C")]
		public void ClearDuplicates(bool onSpellPress = false)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x129E5D4", Offset = "0x129E5D4", VA = "0x129E5D4")]
		private void InstantiateDuplicates()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x129EAB4", Offset = "0x129EAB4", VA = "0x129EAB4")]
		private void GetTileAndInstantiate()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x129EC44", Offset = "0x129EC44", VA = "0x129EC44")]
		private void OnTileOccupiedChecked(Tile tile, bool successfullyOccupied)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x129E8F4", Offset = "0x129E8F4", VA = "0x129E8F4")]
		private void PlayInstantiationEffect()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x129F2F4", Offset = "0x129F2F4", VA = "0x129F2F4")]
		public void AddClientTwin(Twin twin)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x129F3CC", Offset = "0x129F3CC", VA = "0x129F3CC")]
		public void SetTwinsMaterial(CharacterMaterialType materialType, Color color, bool blockFlash)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x129DE54", Offset = "0x129DE54", VA = "0x129DE54")]
		public void CreateTwinPool(CharacterType type)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x129E808", Offset = "0x129E808", VA = "0x129E808")]
		public void ReturnToPool(IPoolObject instance)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x129F1D8", Offset = "0x129F1D8", VA = "0x129F1D8")]
		public IPoolObject GrabFromPool()
		{
			return null;
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x129F594", Offset = "0x129F594", VA = "0x129F594")]
		private IPoolObject Spawn(CharacterType type)
		{
			return null;
		}
	}
}
[Token(Token = "0x2000286")]
public class Spell_HeavenlyDome : SpellBase_Defense
{
	[Token(Token = "0x4000E81")]
	private const string DomeStartClipName = "heavenly_dome_start";

	[Token(Token = "0x4000E82")]
	private const string DomeEndClipName = "heavenly_dome_end";

	[Token(Token = "0x4000E83")]
	private const float DomeClipVolume = 0.8f;

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xFAB730", Offset = "0xFAB730", VA = "0xFAB730")]
	public Spell_HeavenlyDome()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xFAB738", Offset = "0xFAB738", VA = "0xFAB738", Slot = "37")]
	protected override void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xFAB8B0", Offset = "0xFAB8B0", VA = "0xFAB8B0", Slot = "21")]
	protected override void OnHold()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xFAB970", Offset = "0xFAB970", VA = "0xFAB970", Slot = "22")]
	protected override void OnRelease(bool forceRelease = false)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xFAB98C", Offset = "0xFAB98C", VA = "0xFAB98C", Slot = "39")]
	protected override void SetActive(bool active, bool playSound = true, bool playAnimation = true)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xFABA40", Offset = "0xFABA40", VA = "0xFABA40", Slot = "41")]
	protected override void UpdatePosition()
	{
	}
}
[Token(Token = "0x2000287")]
public class Spell_ShieldOfLight : SpellBase_Defense
{
	[Token(Token = "0x4000E84")]
	private const float LerpSpeed = 16f;

	[Token(Token = "0x4000E85")]
	private const float DistanceFromPlayerAim = 0.9f;

	[Token(Token = "0x4000E86")]
	private const string ShieldStartClipName = "shield_of_light_start";

	[Token(Token = "0x4000E87")]
	private const string ShieldEndClipName = "shield_of_light_end";

	[Token(Token = "0x4000E88")]
	private const float ShieldClipNameVolume = 0.7f;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly Vector3 m_headAimOffsetPosition;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 m_targetPosition;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Quaternion m_targetRotation;

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xFABB54", Offset = "0xFABB54", VA = "0xFABB54")]
	public Spell_ShieldOfLight()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xFABC20", Offset = "0xFABC20", VA = "0xFABC20", Slot = "37")]
	protected override void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xFABE64", Offset = "0xFABE64", VA = "0xFABE64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xFAC0FC", Offset = "0xFAC0FC", VA = "0xFAC0FC", Slot = "21")]
	protected override void OnHold()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xFAC1BC", Offset = "0xFAC1BC", VA = "0xFAC1BC", Slot = "22")]
	protected override void OnRelease(bool forceRelease = false)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xFAC1D4", Offset = "0xFAC1D4", VA = "0xFAC1D4", Slot = "39")]
	protected override void SetActive(bool active, bool playSound = true, bool playAnimation = true)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xFAC298", Offset = "0xFAC298", VA = "0xFAC298", Slot = "40")]
	[PunRPC]
	protected override void PunSetActive(bool active, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xFAC318", Offset = "0xFAC318", VA = "0xFAC318", Slot = "41")]
	protected override void UpdatePosition()
	{
	}
}
namespace Assets.Scripts.Spells.Defense
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC854FC", Offset = "0xC854FC")]
	public class Twin : CharacterBase, IDestructableObject, IPoolObject, ICursable
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PhotonView m_photonView;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Spell_DevilsTwins m_spell;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isInitialized;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurseLingeringEffect m_curseLingeringEffect;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ParticleAudioEffect m_chillingClutchEffect;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8557C", Offset = "0xC8557C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8557C", Offset = "0xC8557C")]
		private bool <IsSetToDisable>k__BackingField;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC855B8", Offset = "0xC855B8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC855B8", Offset = "0xC855B8")]
		private Wielder <Wielder>k__BackingField;

		[Token(Token = "0x17000272")]
		public bool IsSetToDisable
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x129F6C4", Offset = "0x129F6C4", VA = "0x129F6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC855F4", Offset = "0xC855F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x129F6CC", Offset = "0x129F6CC", VA = "0x129F6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85604", Offset = "0xC85604")]
			private set
			{
			}
		}

		[Token(Token = "0x17000273")]
		private Wielder Wielder
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x129F6D8", Offset = "0x129F6D8", VA = "0x129F6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85614", Offset = "0xC85614")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x129F6E0", Offset = "0x129F6E0", VA = "0x129F6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85624", Offset = "0xC85624")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public PhotonView photonView
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x129F6E8", Offset = "0x129F6E8", VA = "0x129F6E8", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85634", Offset = "0xC85634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x129F6BC", Offset = "0x129F6BC", VA = "0x129F6BC")]
		public Twin()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x129F780", Offset = "0x129F780", VA = "0x129F780")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x129FAEC", Offset = "0x129FAEC", VA = "0x129FAEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x12A009C", Offset = "0x12A009C", VA = "0x12A009C")]
		private void Update()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x129E7B8", Offset = "0x129E7B8", VA = "0x129E7B8")]
		public void SoftResetTwin()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x12A01C4", Offset = "0x12A01C4", VA = "0x12A01C4")]
		private void DisconnectTile()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x12A02B8", Offset = "0x12A02B8", VA = "0x12A02B8", Slot = "14")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x12A0560", Offset = "0x12A0560", VA = "0x12A0560")]
		[PunRPC]
		private void PunEnableObject(Vector3 position, int tileId)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x12A07E8", Offset = "0x12A07E8", VA = "0x12A07E8", Slot = "15")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x129FF4C", Offset = "0x129FF4C", VA = "0x129FF4C")]
		[PunRPC]
		private void PunDisableObject()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x12A0A00", Offset = "0x12A0A00", VA = "0x12A0A00", Slot = "12")]
		public void OnHit(float dmg = 1f)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x12A0C94", Offset = "0x12A0C94", VA = "0x12A0C94", Slot = "8")]
		protected override void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x12A0CEC", Offset = "0x12A0CEC", VA = "0x12A0CEC", Slot = "9")]
		public override void SetCorrectApperence(Photon.Realtime.Player photonPlayer)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x12A0E64", Offset = "0x12A0E64", VA = "0x12A0E64")]
		public void SetChillingClutchEffectActive(bool active)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x12A0928", Offset = "0x12A0928", VA = "0x12A0928")]
		private void TryDisableChillingClutch()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x12A1184", Offset = "0x12A1184", VA = "0x12A1184", Slot = "16")]
		public void EnableCurse(float waitTime, CurseLingeringEffect curseLingeringEffect)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x12A11AC", Offset = "0x12A11AC", VA = "0x12A11AC", Slot = "17")]
		public void DisableCurse()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x12A0964", Offset = "0x12A0964", VA = "0x12A0964")]
		private void TryDisableActiveCurse()
		{
		}
	}
}
namespace Assets.Scripts.Spells
{
	[Token(Token = "0x2000289")]
	public class DragonsBreath : IPredictableCurver
	{
		[Token(Token = "0x200028A")]
		public enum DragonState
		{
			[Token(Token = "0x4000EA3")]
			Colliding,
			[Token(Token = "0x4000EA4")]
			Active,
			[Token(Token = "0x4000EA5")]
			Inactive
		}

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_colliders;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_speed;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_currentLifeTime;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayerMask m_layerMask;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_checkCollision;

		[Token(Token = "0x4000E98")]
		private const float WaitTime = 0.1f;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85674", Offset = "0xC85674")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85674", Offset = "0xC85674")]
		private float <StartSpeed>k__BackingField;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC856B0", Offset = "0xC856B0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC856B0", Offset = "0xC856B0")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC856EC", Offset = "0xC856EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC856EC", Offset = "0xC856EC")]
		private float <LifeTime>k__BackingField;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85728", Offset = "0xC85728")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85728", Offset = "0xC85728")]
		private AnimationCurve <Curve>k__BackingField;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85764", Offset = "0xC85764")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85764", Offset = "0xC85764")]
		private Vector3 <StartPosition>k__BackingField;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC857A0", Offset = "0xC857A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC857A0", Offset = "0xC857A0")]
		private Vector3 <Direction>k__BackingField;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC857DC", Offset = "0xC857DC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC857DC", Offset = "0xC857DC")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85818", Offset = "0xC85818")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85818", Offset = "0xC85818")]
		private DragonState <State>k__BackingField;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85854", Offset = "0xC85854")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85854", Offset = "0xC85854")]
		private Collider <HitCollider>k__BackingField;

		[Token(Token = "0x17000275")]
		public float StartSpeed
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x12A13A8", Offset = "0x12A13A8", VA = "0x12A13A8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85890", Offset = "0xC85890")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x12A1388", Offset = "0x12A1388", VA = "0x12A1388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858A0", Offset = "0xC858A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public float Radius
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x12A13B0", Offset = "0x12A13B0", VA = "0x12A13B0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858B0", Offset = "0xC858B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x12A1370", Offset = "0x12A1370", VA = "0x12A1370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858C0", Offset = "0xC858C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float LifeTime
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x12A13B8", Offset = "0x12A13B8", VA = "0x12A13B8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858D0", Offset = "0xC858D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x12A1380", Offset = "0x12A1380", VA = "0x12A1380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858E0", Offset = "0xC858E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public AnimationCurve Curve
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x12A13C0", Offset = "0x12A13C0", VA = "0x12A13C0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC858F0", Offset = "0xC858F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x12A1378", Offset = "0x12A1378", VA = "0x12A1378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85900", Offset = "0xC85900")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x12A13C8", Offset = "0x12A13C8", VA = "0x12A13C8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85910", Offset = "0xC85910")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x12A139C", Offset = "0x12A139C", VA = "0x12A139C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85920", Offset = "0xC85920")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Vector3 Direction
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x12A13D4", Offset = "0x12A13D4", VA = "0x12A13D4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85930", Offset = "0xC85930")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x12A1364", Offset = "0x12A1364", VA = "0x12A1364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85940", Offset = "0xC85940")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public Vector3 Position
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x12A1390", Offset = "0x12A1390", VA = "0x12A1390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85950", Offset = "0xC85950")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x12A1358", Offset = "0x12A1358", VA = "0x12A1358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85960", Offset = "0xC85960")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public DragonState State
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x12A13E0", Offset = "0x12A13E0", VA = "0x12A13E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85970", Offset = "0xC85970")]
			get
			{
				return default(DragonState);
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x12A13E8", Offset = "0x12A13E8", VA = "0x12A13E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85980", Offset = "0xC85980")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public Collider HitCollider
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x12A13F0", Offset = "0x12A13F0", VA = "0x12A13F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85990", Offset = "0xC85990")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x12A13F8", Offset = "0x12A13F8", VA = "0x12A13F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC859A0", Offset = "0xC859A0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x12A11B4", Offset = "0x12A11B4", VA = "0x12A11B4")]
		public DragonsBreath(Vector3 point, Vector3 direction, float speed, float radius, LayerMask layerMask, AnimationCurve speedDecay, float lifeTime)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x12A1400", Offset = "0x12A1400", VA = "0x12A1400")]
		public void UpdateBreath()
		{
		}
	}
}
namespace Assets.Scripts.Spells.Interfaces
{
	[Token(Token = "0x200028B")]
	public interface IPredictableCurver
	{
		[Token(Token = "0x1700027E")]
		float StartSpeed
		{
			[Token(Token = "0x600103D")]
			get;
		}

		[Token(Token = "0x1700027F")]
		float Radius
		{
			[Token(Token = "0x600103E")]
			get;
		}

		[Token(Token = "0x17000280")]
		float LifeTime
		{
			[Token(Token = "0x600103F")]
			get;
		}

		[Token(Token = "0x17000281")]
		AnimationCurve Curve
		{
			[Token(Token = "0x6001040")]
			get;
		}

		[Token(Token = "0x17000282")]
		Vector3 StartPosition
		{
			[Token(Token = "0x6001041")]
			get;
		}

		[Token(Token = "0x17000283")]
		Vector3 Direction
		{
			[Token(Token = "0x6001042")]
			get;
		}
	}
}
namespace Assets.Scripts.Spells
{
	[Token(Token = "0x200028C")]
	public enum PoolObjectCreateState
	{
		[Token(Token = "0x4000EA7")]
		Enabled = 1,
		[Token(Token = "0x4000EA8")]
		Disabled = 2,
		[Token(Token = "0x4000EA9")]
		AddInternal = 4
	}
	[Token(Token = "0x200028D")]
	public static class ObjectPoolHandler
	{
		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85A30", Offset = "0xC85A30")]
		private sealed class <SpawnAsync>c__AnonStorey0
		{
			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PoolObjectType type;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal PoolObjectCreateState createState;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action<IPoolObject> onLoaded;

			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x12A2E80", Offset = "0x12A2E80", VA = "0x12A2E80")]
			public <SpawnAsync>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x12A5EFC", Offset = "0x12A5EFC", VA = "0x12A5EFC")]
			internal void <>m__0(GameObject loadedObject)
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85A40", Offset = "0xC85A40")]
		private sealed class <CreateSpellPool>c__AnonStorey1
		{
			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PoolObjectCreateState createState;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PoolObjectType[] additionalObjects;

			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x12A34F0", Offset = "0x12A34F0", VA = "0x12A34F0")]
			public <CreateSpellPool>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x12A5E7C", Offset = "0x12A5E7C", VA = "0x12A5E7C")]
			internal void <>m__0(IPoolObject[] poolObjects)
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85A50", Offset = "0xC85A50")]
		private sealed class <SpawnMultipleAsync>c__AnonStorey2
		{
			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spell type;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal PoolObjectCreateState createState;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action<IPoolObject[]> onLoaded;

			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x12A4280", Offset = "0x12A4280", VA = "0x12A4280")]
			public <SpawnMultipleAsync>c__AnonStorey2()
			{
			}

			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x12A5F80", Offset = "0x12A5F80", VA = "0x12A5F80")]
			internal void <>m__0(GameObject[] loadedObjects)
			{
			}
		}

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<PoolObjectType, List<IPoolObject>> sm_objectPool;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<Spell, List<IPoolObject>> sm_spellPool;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<PoolObjectType, string> sm_objectTypeNames;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<Spell, string> sm_spellTypeNames;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static GameObject sm_poolParent;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int sm_lastSpellObjectHashCode;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<IPoolObject> sm_objectRef;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<IPoolObject> sm_spellRef;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC859B0", Offset = "0xC859B0")]
		private static Action<Events.SceneLoadInitiatedEvent> <>f__mg$cache0;

		[Token(Token = "0x17000284")]
		public static Transform PoolParent
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x12A16DC", Offset = "0x12A16DC", VA = "0x12A16DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC859C0", Offset = "0xC859C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x12A1754", Offset = "0x12A1754", VA = "0x12A1754")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x12A18EC", Offset = "0x12A18EC", VA = "0x12A18EC")]
		private static void OnSceneLoadInitiated(Events.SceneLoadInitiatedEvent eventData)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x12A19F0", Offset = "0x12A19F0", VA = "0x12A19F0")]
		public static bool GetPoolContainsObject(PoolObjectType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x12A1A78", Offset = "0x12A1A78", VA = "0x12A1A78")]
		public static bool GetPoolContainsSpell(Spell type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x12A1948", Offset = "0x12A1948", VA = "0x12A1948")]
		public static void ClearEntirePool()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x12A1B00", Offset = "0x12A1B00", VA = "0x12A1B00")]
		public static void DestroySpellPool()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x12A1E0C", Offset = "0x12A1E0C", VA = "0x12A1E0C")]
		public static void CreateObjectPool(int poolSize, PoolObjectType effectType, [Optional] object[] data)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x12A235C", Offset = "0x12A235C", VA = "0x12A235C")]
		public static void CreateObjectPoolAsync(int poolSize, PoolObjectType effectType, [Optional] int[] viewID)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x12A23DC", Offset = "0x12A23DC", VA = "0x12A23DC")]
		public static void CreateObjectPoolAsync(int poolSize, PoolObjectType effectType, PoolObjectCreateState createState, [Optional] int[] viewID)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x12A2A30", Offset = "0x12A2A30", VA = "0x12A2A30")]
		public static void TryReturnToPool(PoolObjectType type, IPoolObject instance)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x12A2C24", Offset = "0x12A2C24", VA = "0x12A2C24")]
		private static void TryReturnToPoolInternal(PoolObjectType type, IPoolObject instance)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x129D1D4", Offset = "0x129D1D4", VA = "0x129D1D4")]
		public static IPoolObject GrabFromPool(PoolObjectType type, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x12A20C8", Offset = "0x12A20C8", VA = "0x12A20C8")]
		private static IPoolObject Spawn(PoolObjectType type, PoolObjectCreateState createState, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x12A2830", Offset = "0x12A2830", VA = "0x12A2830")]
		private static void SpawnAsync(PoolObjectType type, PoolObjectCreateState createState, Action<IPoolObject> onLoaded, params object[] data)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x12A2E88", Offset = "0x12A2E88", VA = "0x12A2E88")]
		private static void OnSpawnedObject(PoolObjectType type, PoolObjectCreateState createState, Action<IPoolObject> onLoaded, GameObject loadedObject)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x12A3090", Offset = "0x12A3090", VA = "0x12A3090")]
		public static void CreateSpellPool(int poolSize, Spell spellType, int viewID = 0, [Optional] PoolObjectType[] additionalObjects)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x12A3120", Offset = "0x12A3120", VA = "0x12A3120")]
		public static void CreateSpellPool(int poolSize, Spell spellType, PoolObjectCreateState createState, int viewID = 0, [Optional] PoolObjectType[] additionalObjects)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x12A3708", Offset = "0x12A3708", VA = "0x12A3708")]
		private static void OnLoadedSpells(PoolObjectCreateState createState, PoolObjectType[] additionalObjects, IPoolObject[] poolObjects)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x12A3930", Offset = "0x12A3930", VA = "0x12A3930")]
		public static void TryReturnToPool(Spell type, IPoolObject instance)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x12A3B24", Offset = "0x12A3B24", VA = "0x12A3B24")]
		private static void TryReturnToPoolInternal(Spell type, IPoolObject instance)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x12A3D58", Offset = "0x12A3D58", VA = "0x12A3D58")]
		public static IPoolObject GrabFromPool(Spell type, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x12A34F8", Offset = "0x12A34F8", VA = "0x12A34F8")]
		private static void SpawnMultipleAsync(Spell type, PoolObjectCreateState createState, int amount, Action<IPoolObject[]> onLoaded, params object[] data)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x12A4288", Offset = "0x12A4288", VA = "0x12A4288")]
		private static void OnInstantiatedMultiple(Spell type, PoolObjectCreateState createState, Action<IPoolObject[]> onLoaded, GameObject[] instantiatedGameObjects)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x12A3FEC", Offset = "0x12A3FEC", VA = "0x12A3FEC")]
		private static IPoolObject Spawn(Spell type, PoolObjectCreateState createState, params object[] data)
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Spells.Projectile
{
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC85A60", Offset = "0xC85A60")]
	public class BlazingMeteor : ProjectileMover, IProjectileAccelerate, IProjectileSplash
	{
		[Token(Token = "0x200028F")]
		private struct DefaultAccelerationParams
		{
			[Token(Token = "0x4000EB7")]
			public const float MaxSpeed = 1.54f;

			[Token(Token = "0x4000EB8")]
			public const float AccelerationSpeed = 0.65f;
		}

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SplashDamageHandler m_splashDamageHandler;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85AC4", Offset = "0xC85AC4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85AC4", Offset = "0xC85AC4")]
		private bool <ShouldAccelerate>k__BackingField;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85B00", Offset = "0xC85B00")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85B00", Offset = "0xC85B00")]
		private float <AccelerationSpeed>k__BackingField;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85B3C", Offset = "0xC85B3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85B3C", Offset = "0xC85B3C")]
		private float <MaxSpeed>k__BackingField;

		[Token(Token = "0x17000285")]
		public SplashDamageHandler SplashDamageHandler
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x12A6120", Offset = "0x12A6120", VA = "0x12A6120", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		public bool ShouldAccelerate
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x12A61C0", Offset = "0x12A61C0", VA = "0x12A61C0", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85B78", Offset = "0xC85B78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x12A61C8", Offset = "0x12A61C8", VA = "0x12A61C8", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85B88", Offset = "0xC85B88")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public float AccelerationSpeed
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x12A61D4", Offset = "0x12A61D4", VA = "0x12A61D4", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85B98", Offset = "0xC85B98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x12A61DC", Offset = "0x12A61DC", VA = "0x12A61DC", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85BA8", Offset = "0xC85BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public float MaxSpeed
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x12A61E4", Offset = "0x12A61E4", VA = "0x12A61E4", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85BB8", Offset = "0xC85BB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x12A61EC", Offset = "0x12A61EC", VA = "0x12A61EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85BC8", Offset = "0xC85BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x12A6004", Offset = "0x12A6004", VA = "0x12A6004")]
		public BlazingMeteor()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x12A61F4", Offset = "0x12A61F4", VA = "0x12A61F4", Slot = "16")]
		protected override void SetStaticValues(SpellBase_Projectile spell)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x12A6388", Offset = "0x12A6388", VA = "0x12A6388", Slot = "21")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x12A64B0", Offset = "0x12A64B0", VA = "0x12A64B0", Slot = "17")]
		public override void EnableObject(Vector3 startPosition, params object[] data)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x12A6404", Offset = "0x12A6404", VA = "0x12A6404", Slot = "43")]
		public void Accelerate()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x12A6820", Offset = "0x12A6820", VA = "0x12A6820", Slot = "27")]
		protected override void OnCollision(Collider hitCollider, bool enableHitEffect)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x12A6958", Offset = "0x12A6958", VA = "0x12A6958", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}
	}
}
namespace Assets.Scripts.Spells.Utils
{
	[Token(Token = "0x2000290")]
	public class BounceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProjectileEffectHandler m_bounceEffectHandler;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_maxBounces;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85C08", Offset = "0xC85C08")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85C08", Offset = "0xC85C08")]
		private int <CurrentBounces>k__BackingField;

		[Token(Token = "0x17000289")]
		public int CurrentBounces
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xFD1A0C", Offset = "0xFD1A0C", VA = "0xFD1A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85C44", Offset = "0xC85C44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xFD1A14", Offset = "0xFD1A14", VA = "0xFD1A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85C54", Offset = "0xC85C54")]
			private set
			{
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xFD19FC", Offset = "0xFD19FC", VA = "0xFD19FC")]
		public BounceHandler()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xFD1A1C", Offset = "0xFD1A1C", VA = "0xFD1A1C")]
		public void ResetBounces(int maxBounces)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xFD1A24", Offset = "0xFD1A24", VA = "0xFD1A24")]
		public bool TryBounce(RaycastHit hit, bool hitPlayer, Action<Vector3> bounceCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xFD1C3C", Offset = "0xFD1C3C", VA = "0xFD1C3C")]
		public void DestroyBounce()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xFD1B58", Offset = "0xFD1B58", VA = "0xFD1B58")]
		private void ActivateBounceEffects()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class ProjectileBounceUtils
	{
		[Token(Token = "0x6001072")]
		[Address(RVA = "0xFD366C", Offset = "0xFD366C", VA = "0xFD366C")]
		public ProjectileBounceUtils()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xFD3674", Offset = "0xFD3674", VA = "0xFD3674")]
		public Vector3 GetReflectedForward(Vector3 forward, Vector3 normal)
		{
			return default(Vector3);
		}
	}
}
namespace Assets.Scripts.Spells.Projectile
{
	[Token(Token = "0x2000292")]
	public class ChillingClutch : ProjectileMover
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_chillingClutchPercent;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_debuffDuration;

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x12A6B98", Offset = "0x12A6B98", VA = "0x12A6B98")]
		public ChillingClutch()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x12A6BFC", Offset = "0x12A6BFC", VA = "0x12A6BFC", Slot = "19")]
		protected override void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x12A7140", Offset = "0x12A7140", VA = "0x12A7140", Slot = "28")]
		public override bool DealDamagePlayerObject(IDamageable damagableEntity, float dmg)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000293")]
	public class Demi : ProjectileMover
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x12A74E0", Offset = "0x12A74E0", VA = "0x12A74E0")]
		public Demi()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x12A7544", Offset = "0x12A7544", VA = "0x12A7544", Slot = "28")]
		public override bool DealDamagePlayerObject(IDamageable damagableEntity, float dmg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x12A77D0", Offset = "0x12A77D0", VA = "0x12A77D0", Slot = "29")]
		public override bool DealDamageTwinAndReturnToSender(Twin twin, float dmg, bool returnToSenderActive)
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x12A7884", Offset = "0x12A7884", VA = "0x12A7884", Slot = "30")]
		public override void DealDamageTrainingDummy(Collider hitCollider, float dmg)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x12A7A34", Offset = "0x12A7A34", VA = "0x12A7A34", Slot = "31")]
		public override void DealDamageDestructable(Collider hitCollider, float dmg)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class DevilsSpit : ProjectileMover, IProjectileAccelerate
	{
		[Token(Token = "0x2000295")]
		private struct DefaultAccelerationParams
		{
			[Token(Token = "0x4000EC1")]
			public const float MaxSpeed = 1.54f;

			[Token(Token = "0x4000EC2")]
			public const float AccelerationSpeed = 0.65f;
		}

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85C74", Offset = "0xC85C74")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85C74", Offset = "0xC85C74")]
		private bool <ShouldAccelerate>k__BackingField;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85CB0", Offset = "0xC85CB0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85CB0", Offset = "0xC85CB0")]
		private float <AccelerationSpeed>k__BackingField;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85CEC", Offset = "0xC85CEC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85CEC", Offset = "0xC85CEC")]
		private float <MaxSpeed>k__BackingField;

		[Token(Token = "0x1700028A")]
		public bool ShouldAccelerate
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x12A7C60", Offset = "0x12A7C60", VA = "0x12A7C60", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D28", Offset = "0xC85D28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x12A7C68", Offset = "0x12A7C68", VA = "0x12A7C68", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D38", Offset = "0xC85D38")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public float AccelerationSpeed
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x12A7C74", Offset = "0x12A7C74", VA = "0x12A7C74", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D48", Offset = "0xC85D48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x12A7C7C", Offset = "0x12A7C7C", VA = "0x12A7C7C", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D58", Offset = "0xC85D58")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public float MaxSpeed
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x12A7C84", Offset = "0x12A7C84", VA = "0x12A7C84", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D68", Offset = "0xC85D68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x12A7C8C", Offset = "0x12A7C8C", VA = "0x12A7C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85D78", Offset = "0xC85D78")]
			private set
			{
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x12A7BE0", Offset = "0x12A7BE0", VA = "0x12A7BE0")]
		public DevilsSpit()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x12A7C94", Offset = "0x12A7C94", VA = "0x12A7C94", Slot = "17")]
		public override void EnableObject(Vector3 startPosition, params object[] data)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x12A7C98", Offset = "0x12A7C98", VA = "0x12A7C98", Slot = "21")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x12A7D0C", Offset = "0x12A7D0C", VA = "0x12A7D0C", Slot = "43")]
		public void Accelerate()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x12A7D64", Offset = "0x12A7D64", VA = "0x12A7D64", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}
	}
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC85DA8", Offset = "0xC85DA8")]
	public class DiscOfAntioch : ProjectileMover, IProjectileSplash, IProjectileBounce
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SplashDamageHandler m_splashDamageHandler;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private BounceHandler m_bounceHandler;

		[Token(Token = "0x1700028D")]
		public SplashDamageHandler SplashDamageHandler
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x12A7DF8", Offset = "0x12A7DF8", VA = "0x12A7DF8", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85E28", Offset = "0xC85E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public BounceHandler BounceHandler
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x12A7E94", Offset = "0x12A7E94", VA = "0x12A7E94", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85E38", Offset = "0xC85E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x12A7D94", Offset = "0x12A7D94", VA = "0x12A7D94")]
		public DiscOfAntioch()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x12A7F30", Offset = "0x12A7F30", VA = "0x12A7F30", Slot = "16")]
		protected override void SetStaticValues(SpellBase_Projectile spell)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x12A7F88", Offset = "0x12A7F88", VA = "0x12A7F88", Slot = "19")]
		protected override void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x12A809C", Offset = "0x12A809C", VA = "0x12A809C", Slot = "24")]
		protected override void ReturnToSender()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x12A8138", Offset = "0x12A8138", VA = "0x12A8138", Slot = "26")]
		protected override void CollisionDetected(Assets.Scripts.Enums.TagType tagType, RaycastHit hit)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x12A8BDC", Offset = "0x12A8BDC", VA = "0x12A8BDC", Slot = "27")]
		protected override void OnCollision(Collider hitCollider, bool enableHitEffect)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x12A8C38", Offset = "0x12A8C38", VA = "0x12A8C38", Slot = "33")]
		public override void ManualDestroy()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC85E58", Offset = "0xC85E58")]
	public class ElectricFist : ProjectileMover, IProjectileBounce
	{
		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private BounceHandler m_bounceHandler;

		[Token(Token = "0x1700028F")]
		public BounceHandler BounceHandler
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x12A8EC8", Offset = "0x12A8EC8", VA = "0x12A8EC8", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x12A8E64", Offset = "0x12A8E64", VA = "0x12A8E64")]
		public ElectricFist()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x12A8F68", Offset = "0x12A8F68", VA = "0x12A8F68", Slot = "20")]
		protected override void Initialize(float speed, float damage, int opponentID)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x12A9240", Offset = "0x12A9240", VA = "0x12A9240", Slot = "26")]
		protected override void CollisionDetected(Assets.Scripts.Enums.TagType tagType, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x12A9A10", Offset = "0x12A9A10", VA = "0x12A9A10", Slot = "33")]
		public override void ManualDestroy()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC85EBC", Offset = "0xC85EBC")]
	public class FlamingPhoenix : ProjectileMover, IPunObservable, IProjectileSplash
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86078", Offset = "0xC86078")]
		private sealed class <WaitForNetworkSync>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float fireTime;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object[] data;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal FlamingPhoenix $this;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005B1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A8B")]
				[Address(RVA = "0x12ADAF4", Offset = "0x12ADAF4", VA = "0x12ADAF4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A8C")]
				[Address(RVA = "0x12ADAFC", Offset = "0x12ADAFC", VA = "0x12ADAFC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x12AA2B8", Offset = "0x12AA2B8", VA = "0x12AA2B8")]
			[DebuggerHidden]
			public <WaitForNetworkSync>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x12AD9C0", Offset = "0x12AD9C0", VA = "0x12AD9C0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x12ADB04", Offset = "0x12ADB04", VA = "0x12ADB04", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x12ADB18", Offset = "0x12ADB18", VA = "0x12ADB18", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC860D8", Offset = "0xC860D8")]
		private sealed class <DestroyAfterTime>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool explode;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal FlamingPhoenix $this;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005B3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A91")]
				[Address(RVA = "0x12AD938", Offset = "0x12AD938", VA = "0x12AD938", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A92")]
				[Address(RVA = "0x12AD940", Offset = "0x12AD940", VA = "0x12AD940", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x12AD5A0", Offset = "0x12AD5A0", VA = "0x12AD5A0")]
			[DebuggerHidden]
			public <DestroyAfterTime>c__Iterator1()
			{
			}

			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x12AD798", Offset = "0x12AD798", VA = "0x12AD798", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x12AD948", Offset = "0x12AD948", VA = "0x12AD948", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x12AD95C", Offset = "0x12AD95C", VA = "0x12AD95C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000EC6")]
		private const int MaxSyncIterations = 5;

		[Token(Token = "0x4000EC7")]
		private const float MaxVolume = 0.6f;

		[Token(Token = "0x4000EC8")]
		private const float InitialPathSpeed = 1f;

		[Token(Token = "0x4000EC9")]
		private const float MinPathSpeedMultiplier = 0.25f;

		[Token(Token = "0x4000ECA")]
		private const float MinCollisionRadius = 0.05f;

		[Token(Token = "0x4000ECB")]
		private const float DamageIncreasePerSecond = 3f;

		[Token(Token = "0x4000ECC")]
		private const float BotWarningDistanceSquared = 56.25f;

		[Token(Token = "0x4000ECD")]
		private const float FlamingAttackDistanceSquared = 25f;

		[Token(Token = "0x4000ECE")]
		private const float RequiredDotToTarget = 0.9f;

		[Token(Token = "0x4000ECF")]
		private const float TargetPositionHeight = 1.6f;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC85F20", Offset = "0xC85F20")]
		[SerializeField]
		private Transform m_core;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private ProjectileEffectHandler m_boostEffect;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioSource m_growAudioSource;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int m_followSpeed;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_casterViewID;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int m_syncIterations;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_tempDmg;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_minDamage;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_maxDmg;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_fireTime;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool m_increaseSpellDamage;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 m_startSize;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 m_maxSize;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 m_syncPosition;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 m_prevSyncPosition;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Quaternion m_syncRotation;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Tweener m_followPathTween;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private SplashDamageHandler m_splashDamageHandler;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool m_hasSentChargedEvent;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85F9C", Offset = "0xC85F9C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC85F9C", Offset = "0xC85F9C")]
		private int <InitialRunwayLength>k__BackingField;

		[Token(Token = "0x17000290")]
		public SplashDamageHandler SplashDamageHandler
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x12A9AB8", Offset = "0x12A9AB8", VA = "0x12A9AB8", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85FD8", Offset = "0xC85FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public int InitialRunwayLength
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x12A9B54", Offset = "0x12A9B54", VA = "0x12A9B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85FE8", Offset = "0xC85FE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x12A9B5C", Offset = "0x12A9B5C", VA = "0x12A9B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC85FF8", Offset = "0xC85FF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		private Vector3 TargetPosition
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x12A9B64", Offset = "0x12A9B64", VA = "0x12A9B64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x12A9A4C", Offset = "0x12A9A4C", VA = "0x12A9A4C")]
		public FlamingPhoenix()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x12A9CB0", Offset = "0x12A9CB0", VA = "0x12A9CB0", Slot = "38")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x12AA07C", Offset = "0x12AA07C", VA = "0x12AA07C", Slot = "16")]
		protected override void SetStaticValues(SpellBase_Projectile spell)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x12AA210", Offset = "0x12AA210", VA = "0x12AA210", Slot = "18")]
		[DebuggerHidden]
		protected override IEnumerator WaitForNetworkSync(float fireTime, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x12AA2C0", Offset = "0x12AA2C0", VA = "0x12AA2C0", Slot = "19")]
		protected override void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x12AA4B4", Offset = "0x12AA4B4", VA = "0x12AA4B4", Slot = "20")]
		protected override void Initialize(float speed, float damage, int opponentID)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x12AB04C", Offset = "0x12AB04C", VA = "0x12AB04C")]
		private void InitiateFollowPathTween(float startTime)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x12AB350", Offset = "0x12AB350", VA = "0x12AB350")]
		[PunRPC]
		private void PunInitiateFollowPathTween(float startTime, Vector3[] bezierPoints)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x12AB66C", Offset = "0x12AB66C", VA = "0x12AB66C")]
		private void OnPathUpdate()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x12AB6E8", Offset = "0x12AB6E8", VA = "0x12AB6E8")]
		private void OnPathCompleted()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x12AB818", Offset = "0x12AB818", VA = "0x12AB818")]
		[PunRPC]
		private void PunEnableFollowPath()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x12AB828", Offset = "0x12AB828", VA = "0x12AB828")]
		private void OnPunPathCompleted()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x12AB968", Offset = "0x12AB968", VA = "0x12AB968")]
		private void SetTweenToNull()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x12AB970", Offset = "0x12AB970", VA = "0x12AB970", Slot = "21")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x12AC080", Offset = "0x12AC080", VA = "0x12AC080", Slot = "22")]
		protected override void Move()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x12ACC5C", Offset = "0x12ACC5C", VA = "0x12ACC5C", Slot = "23")]
		public override void FollowTarget()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x12AB8C0", Offset = "0x12AB8C0", VA = "0x12AB8C0")]
		private void TrySendSpellReleaseEvent()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x12AC6D8", Offset = "0x12AC6D8", VA = "0x12AC6D8")]
		private void TrySendSpellChargedEvent()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x12ABDDC", Offset = "0x12ABDDC", VA = "0x12ABDDC")]
		private void IncreaseSpellDamage()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x12AA7E8", Offset = "0x12AA7E8", VA = "0x12AA7E8")]
		private void SetTargetTransform()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x12AC8BC", Offset = "0x12AC8BC", VA = "0x12AC8BC")]
		private void ActivateFlamingAttack()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x12ACE94", Offset = "0x12ACE94", VA = "0x12ACE94", Slot = "24")]
		protected override void ReturnToSender()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x12ACEEC", Offset = "0x12ACEEC", VA = "0x12ACEEC", Slot = "25")]
		protected override void CollisionDetected(RaycastHit hit)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x12AD204", Offset = "0x12AD204", VA = "0x12AD204", Slot = "26")]
		protected override void CollisionDetected(Assets.Scripts.Enums.TagType tagType, RaycastHit hit)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x12AD4F4", Offset = "0x12AD4F4", VA = "0x12AD4F4", Slot = "34")]
		[DebuggerHidden]
		protected override IEnumerator DestroyAfterTime(float waitTime, bool explode = false)
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x12AD5A8", Offset = "0x12AD5A8", VA = "0x12AD5A8", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x12AD5F4", Offset = "0x12AD5F4", VA = "0x12AD5F4", Slot = "37")]
		protected override void SetLoopingAudioActive(bool enable)
		{
		}
	}
}
namespace Assets.Scripts.Interfaces
{
	[Token(Token = "0x2000299")]
	public interface IProjectileBounce
	{
		[Token(Token = "0x17000293")]
		BounceHandler BounceHandler
		{
			[Token(Token = "0x60010B4")]
			get;
		}
	}
}
namespace Assets.Scripts.Spells.Projectile
{
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC86138", Offset = "0xC86138")]
	public class LightningStrike : ProjectileMover
	{
		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC861AC", Offset = "0xC861AC")]
		private sealed class <DestroyAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool explode;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Sequence <sequence>__1;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal LightningStrike $this;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005B5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A97")]
				[Address(RVA = "0x12AF04C", Offset = "0x12AF04C", VA = "0x12AF04C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A98")]
				[Address(RVA = "0x12AF054", Offset = "0x12AF054", VA = "0x12AF054", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x12AEAC4", Offset = "0x12AEAC4", VA = "0x12AEAC4")]
			[DebuggerHidden]
			public <DestroyAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x12AED2C", Offset = "0x12AED2C", VA = "0x12AED2C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x12AF05C", Offset = "0x12AF05C", VA = "0x12AF05C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x12AF070", Offset = "0x12AF070", VA = "0x12AF070", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Color m_startTint;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Color? m_startCore;

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x12ADB7C", Offset = "0x12ADB7C", VA = "0x12ADB7C")]
		public LightningStrike()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x12ADBE0", Offset = "0x12ADBE0", VA = "0x12ADBE0", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x12ADCBC", Offset = "0x12ADCBC", VA = "0x12ADCBC", Slot = "15")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x12ADEC8", Offset = "0x12ADEC8", VA = "0x12ADEC8", Slot = "20")]
		protected override void Initialize(float speed, float damage, int opponentID)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x12AE1C4", Offset = "0x12AE1C4", VA = "0x12AE1C4")]
		private void LightningHit()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x12AE5D0", Offset = "0x12AE5D0", VA = "0x12AE5D0")]
		private void DrawLine(Vector3[] points)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x12AE79C", Offset = "0x12AE79C", VA = "0x12AE79C", Slot = "26")]
		protected override void CollisionDetected(Assets.Scripts.Enums.TagType tagType, RaycastHit hit)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x12AEA18", Offset = "0x12AEA18", VA = "0x12AEA18", Slot = "34")]
		[DebuggerHidden]
		protected override IEnumerator DestroyAfterTime(float waitTime, bool explode = false)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x12AEACC", Offset = "0x12AEACC", VA = "0x12AEACC", Slot = "24")]
		protected override void ReturnToSender()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ProjectileMover : BezierFollower, IPunInstantiateMagicCallback, IPauseObject, IEffectEmitter, IPoolObject
	{
		[Token(Token = "0x200029C")]
		protected struct ActivationDataIndex
		{
			[Token(Token = "0x4000F10")]
			public const int ExpectedDataLength = 6;

			[Token(Token = "0x4000F11")]
			public const int FireTime = 0;

			[Token(Token = "0x4000F12")]
			public const int MoveVectors = 1;

			[Token(Token = "0x4000F13")]
			public const int Speed = 2;

			[Token(Token = "0x4000F14")]
			public const int Damage = 3;

			[Token(Token = "0x4000F15")]
			public const int OpponentViewID = 4;

			[Token(Token = "0x4000F16")]
			public const int CustomSpellData = 5;
		}

		[Token(Token = "0x200029D")]
		private class PreviousCollider
		{
			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider Collider;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float CollisionTime;

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x12AF0D4", Offset = "0x12AF0D4", VA = "0x12AF0D4")]
			public PreviousCollider(Collider collider, float collisionTime)
			{
			}
		}

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC864E8", Offset = "0xC864E8")]
		private sealed class <WaitForNetworkSync>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float fireTime;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object[] data;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal ProjectileMover $this;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005B7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002A9D")]
				[Address(RVA = "0x12B1DA4", Offset = "0x12B1DA4", VA = "0x12B1DA4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A9E")]
				[Address(RVA = "0x12B1DAC", Offset = "0x12B1DAC", VA = "0x12B1DAC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x12AF954", Offset = "0x12AF954", VA = "0x12AF954")]
			[DebuggerHidden]
			public <WaitForNetworkSync>c__Iterator0()
			{
			}

			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x12B1BEC", Offset = "0x12B1BEC", VA = "0x12B1BEC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x12B1DB4", Offset = "0x12B1DB4", VA = "0x12B1DB4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x12B1DC8", Offset = "0x12B1DC8", VA = "0x12B1DC8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86548", Offset = "0xC86548")]
		private sealed class <AwaitCollisionArrival>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <collisionRadiusSqr>__0;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RaycastHit hit;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal ProjectileMover $this;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal object $current;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool $disposing;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal int $PC;

			[Token(Token = "0x170005B9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AA3")]
				[Address(RVA = "0x12B1938", Offset = "0x12B1938", VA = "0x12B1938", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA4")]
				[Address(RVA = "0x12B1940", Offset = "0x12B1940", VA = "0x12B1940", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x12B04C4", Offset = "0x12B04C4", VA = "0x12B04C4")]
			[DebuggerHidden]
			public <AwaitCollisionArrival>c__Iterator1()
			{
			}

			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x12B161C", Offset = "0x12B161C", VA = "0x12B161C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x12B1948", Offset = "0x12B1948", VA = "0x12B1948", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x12B195C", Offset = "0x12B195C", VA = "0x12B195C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC865A8", Offset = "0xC865A8")]
		private sealed class <DestroyAfterTime>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool explode;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ProjectileMover $this;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005BB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AA9")]
				[Address(RVA = "0x12B1B64", Offset = "0x12B1B64", VA = "0x12B1B64", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AAA")]
				[Address(RVA = "0x12B1B6C", Offset = "0x12B1B6C", VA = "0x12B1B6C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x12B126C", Offset = "0x12B126C", VA = "0x12B126C")]
			[DebuggerHidden]
			public <DestroyAfterTime>c__Iterator2()
			{
			}

			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x12B19C0", Offset = "0x12B19C0", VA = "0x12B19C0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x12B1B74", Offset = "0x12B1B74", VA = "0x12B1B74", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x12B1B88", Offset = "0x12B1B88", VA = "0x12B1B88", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000EE7")]
		protected const float DefaultCollisionRayLength = 0.25f;

		[Token(Token = "0x4000EE8")]
		private const float MoveCollisionRayLength = 1f;

		[Token(Token = "0x4000EE9")]
		private const float CollisionDisableTimeOnBounce = 0.25f;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] sm_raycastHits;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected Spell m_spellType;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_turnSpeed;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected float m_lifeSpan;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Light m_light;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected TrailRenderer m_trailRenderer;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8626C", Offset = "0xC8626C")]
		[SerializeField]
		protected ProjectileEffectHandler m_initEffectHandler;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC862B8", Offset = "0xC862B8")]
		[SerializeField]
		protected ProjectileExplosionHandler m_hitEffectHandler;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected GameObject m_disableOnImpact;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool m_hasExploded;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool m_collided;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool m_followPath;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool m_returnToSender;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool m_collisionActive;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float m_bezierFollowTime;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float m_startMoveSpeed;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float m_currentMoveSpeed;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float m_collisionRadius;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float m_spellDmg;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected PhotonView m_projectileView;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected SpellBase_Projectile m_spell;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected ProjectileBehaviour m_behaviour;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected DamageType m_dmgType;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Transform m_targetTransform;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Coroutine m_destroyCoroutine;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected HitSfxType m_hitSfxType;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_opponentId;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_defaultLightIntensity;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_threadedSfxIndex;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Tweener m_lightFadeTweener;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PreviousCollider m_previousCollider;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86314", Offset = "0xC86314")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC86314", Offset = "0xC86314")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86350", Offset = "0xC86350")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC86350", Offset = "0xC86350")]
		private ParticleSystem[] <Emitters>k__BackingField;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8638C", Offset = "0xC8638C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8638C", Offset = "0xC8638C")]
		private LayerMask <HitMask>k__BackingField;

		[Token(Token = "0x17000294")]
		public bool IsPaused
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x12A63FC", Offset = "0x12A63FC", VA = "0x12A63FC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC863C8", Offset = "0xC863C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x12AF110", Offset = "0x12AF110", VA = "0x12AF110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC863D8", Offset = "0xC863D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public ParticleSystem[] Emitters
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x12AF11C", Offset = "0x12AF11C", VA = "0x12AF11C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC863E8", Offset = "0xC863E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x12AF124", Offset = "0x12AF124", VA = "0x12AF124", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC863F8", Offset = "0xC863F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public LayerMask HitMask
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x12AAC60", Offset = "0x12AAC60", VA = "0x12AAC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86408", Offset = "0xC86408")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x12AE1BC", Offset = "0x12AE1BC", VA = "0x12AE1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86418", Offset = "0xC86418")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool IsMoving
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x12AF12C", Offset = "0x12AF12C", VA = "0x12AF12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86428", Offset = "0xC86428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		protected Ray CollisionRay
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x12AE448", Offset = "0x12AE448", VA = "0x12AE448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86438", Offset = "0xC86438")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x12A6088", Offset = "0x12A6088", VA = "0x12A6088")]
		public ProjectileMover()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x12AF14C", Offset = "0x12AF14C", VA = "0x12AF14C", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x12ADC08", Offset = "0x12ADC08", VA = "0x12ADC08", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x12AF2B4", Offset = "0x12AF2B4", VA = "0x12AF2B4")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x12AF2C4", Offset = "0x12AF2C4", VA = "0x12AF2C4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x12AF2D4", Offset = "0x12AF2D4", VA = "0x12AF2D4", Slot = "6")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x12AF474", Offset = "0x12AF474", VA = "0x12AF474")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x12ADE18", Offset = "0x12ADE18", VA = "0x12ADE18", Slot = "15")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x12AF4A4", Offset = "0x12AF4A4", VA = "0x12AF4A4")]
		protected void AssignSpell()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x12A624C", Offset = "0x12A624C", VA = "0x12A624C", Slot = "16")]
		protected virtual void SetStaticValues(SpellBase_Projectile spell)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x12A64B4", Offset = "0x12A64B4", VA = "0x12A64B4", Slot = "17")]
		public virtual void EnableObject(Vector3 startPosition, params object[] data)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x12AF690", Offset = "0x12AF690", VA = "0x12AF690")]
		[PunRPC]
		protected void PunEnableProjectile(Vector3 startPosition, params object[] data)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x12AF8AC", Offset = "0x12AF8AC", VA = "0x12AF8AC", Slot = "18")]
		[DebuggerHidden]
		protected virtual IEnumerator WaitForNetworkSync(float fireTime, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x12A6D70", Offset = "0x12A6D70", VA = "0x12A6D70", Slot = "19")]
		protected virtual void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x12AFA10", Offset = "0x12AFA10", VA = "0x12AFA10")]
		private void CreateAndPublishProjectileCastEvent()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x12A8FE0", Offset = "0x12A8FE0", VA = "0x12A8FE0", Slot = "20")]
		protected virtual void Initialize(float speed, float damage, int opponentId)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x12AAA1C", Offset = "0x12AAA1C", VA = "0x12AAA1C")]
		protected void PlayInitEffect(Vector3 point)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x12AFCBC", Offset = "0x12AFCBC", VA = "0x12AFCBC", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x12AFD20", Offset = "0x12AFD20", VA = "0x12AFD20", Slot = "22")]
		protected virtual void Move()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x12AFFA8", Offset = "0x12AFFA8", VA = "0x12AFFA8", Slot = "23")]
		public virtual void FollowTarget()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x12B0360", Offset = "0x12B0360", VA = "0x12B0360")]
		protected void ContinueMove()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x12A8BA0", Offset = "0x12A8BA0", VA = "0x12A8BA0")]
		protected void Bounce(Vector3 forward)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x12A80E8", Offset = "0x12A80E8", VA = "0x12A80E8", Slot = "24")]
		protected virtual void ReturnToSender()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x12A645C", Offset = "0x12A645C", VA = "0x12A645C")]
		protected bool DetectCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x12AAC68", Offset = "0x12AAC68", VA = "0x12AAC68")]
		protected bool DetectCollision(out RaycastHit hit, float length, LayerMask hitMask, bool isMoving = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x12B03E8", Offset = "0x12B03E8", VA = "0x12B03E8")]
		[DebuggerHidden]
		private IEnumerator AwaitCollisionArrival(RaycastHit hit)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x12ACF60", Offset = "0x12ACF60", VA = "0x12ACF60", Slot = "25")]
		protected virtual void CollisionDetected(RaycastHit hit)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x12B04CC", Offset = "0x12B04CC", VA = "0x12B04CC", Slot = "26")]
		protected virtual void CollisionDetected(Assets.Scripts.Enums.TagType tagType, RaycastHit hit)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x12A6888", Offset = "0x12A6888", VA = "0x12A6888", Slot = "27")]
		protected virtual void OnCollision(Collider hitCollider, bool enableHitEffect)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x12B0C6C", Offset = "0x12B0C6C", VA = "0x12B0C6C", Slot = "28")]
		public virtual bool DealDamagePlayerObject(IDamageable damagableEntity, float dmg)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x12B0DF0", Offset = "0x12B0DF0", VA = "0x12B0DF0", Slot = "29")]
		public virtual bool DealDamageTwinAndReturnToSender(Twin twin, float dmg, bool returnToSenderActive)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x12A7340", Offset = "0x12A7340", VA = "0x12A7340")]
		protected Vector2 GetHitDirection(Transform targetTf)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x12B0ED8", Offset = "0x12B0ED8", VA = "0x12B0ED8", Slot = "30")]
		public virtual void DealDamageTrainingDummy(Collider hitCollider, float dmg)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x12B0FD0", Offset = "0x12B0FD0", VA = "0x12B0FD0", Slot = "31")]
		public virtual void DealDamageDestructable(Collider hitCollider, float dmg)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x12B1110", Offset = "0x12B1110", VA = "0x12B1110", Slot = "32")]
		protected virtual void OnHit()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x12A8C74", Offset = "0x12A8C74", VA = "0x12A8C74", Slot = "33")]
		public virtual void ManualDestroy()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x12A9F90", Offset = "0x12A9F90", VA = "0x12A9F90")]
		public void Explode()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x12B11C0", Offset = "0x12B11C0", VA = "0x12B11C0", Slot = "34")]
		[DebuggerHidden]
		protected virtual IEnumerator DestroyAfterTime(float waitTime, bool explode = false)
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x12B1274", Offset = "0x12B1274", VA = "0x12B1274", Slot = "35")]
		protected virtual void DestroyProjectile(bool explode)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x12B1470", Offset = "0x12B1470", VA = "0x12B1470", Slot = "12")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x12A6988", Offset = "0x12A6988", VA = "0x12A6988", Slot = "36")]
		[PunRPC]
		protected virtual void PunDisableProjectile(bool returnToPool)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x12AAACC", Offset = "0x12AAACC", VA = "0x12AAACC")]
		protected void FadeLight(bool fadeIn)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x12AD6CC", Offset = "0x12AD6CC", VA = "0x12AD6CC", Slot = "37")]
		protected virtual void SetLoopingAudioActive(bool enable)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x12AF95C", Offset = "0x12AF95C", VA = "0x12AF95C")]
		protected void EnableCore()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x12B0B54", Offset = "0x12B0B54", VA = "0x12B0B54")]
		protected void DisableCore()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x12AF810", Offset = "0x12AF810", VA = "0x12AF810")]
		private void ClearTrail()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x12AF328", Offset = "0x12AF328", VA = "0x12AF328", Slot = "9")]
		public void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x12B14F4", Offset = "0x12B14F4", VA = "0x12B14F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC864D8", Offset = "0xC864D8")]
		private float <DetectCollision>m__0(RaycastHit raycastHit)
		{
			return default(float);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x12B1614", Offset = "0x12B1614", VA = "0x12B1614", Slot = "10")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
	[Token(Token = "0x200029E")]
	public class ProjectileMoverEnvironment : ProjectileMoverObject
	{
		[Token(Token = "0x17000299")]
		public TrailRenderer TrailRenderer
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x12B1EB0", Offset = "0x12B1EB0", VA = "0x12B1EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86608", Offset = "0xC86608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x12B1E2C", Offset = "0x12B1E2C", VA = "0x12B1E2C")]
		public ProjectileMoverEnvironment()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x12B1EB8", Offset = "0x12B1EB8", VA = "0x12B1EB8", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class ProjectileMoverObject : ProjectileMover
	{
		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC866D4", Offset = "0xC866D4")]
		private sealed class <WaitForNetworkSync>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float fireTime;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object[] data;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal ProjectileMoverObject $this;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005BD")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AAF")]
				[Address(RVA = "0x12B2BE0", Offset = "0x12B2BE0", VA = "0x12B2BE0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB0")]
				[Address(RVA = "0x12B2BE8", Offset = "0x12B2BE8", VA = "0x12B2BE8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x12B22F8", Offset = "0x12B22F8", VA = "0x12B22F8")]
			[DebuggerHidden]
			public <WaitForNetworkSync>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x12B2AF8", Offset = "0x12B2AF8", VA = "0x12B2AF8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x12B2BF0", Offset = "0x12B2BF0", VA = "0x12B2BF0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x12B2C04", Offset = "0x12B2C04", VA = "0x12B2C04", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86628", Offset = "0xC86628")]
		[SerializeField]
		protected PoolObjectType m_objectType;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected LayerMask m_hitMask;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x12B1E30", Offset = "0x12B1E30", VA = "0x12B1E30")]
		public ProjectileMoverObject()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x12B1FF0", Offset = "0x12B1FF0", VA = "0x12B1FF0", Slot = "17")]
		public override void EnableObject(Vector3 startPosition, params object[] data)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x12B219C", Offset = "0x12B219C", VA = "0x12B219C", Slot = "15")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x12B21A0", Offset = "0x12B21A0", VA = "0x12B21A0")]
		private void PrepareProjectile()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x12B2250", Offset = "0x12B2250", VA = "0x12B2250", Slot = "18")]
		[DebuggerHidden]
		protected override IEnumerator WaitForNetworkSync(float fireTime, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x12B2300", Offset = "0x12B2300", VA = "0x12B2300", Slot = "19")]
		protected override void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x12B2638", Offset = "0x12B2638", VA = "0x12B2638", Slot = "38")]
		public virtual void Initialize(ProjectileBehaviour behaviour, DamageType dmgType, float speed, int damage)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x12B28E8", Offset = "0x12B28E8", VA = "0x12B28E8", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class ProjectileMoverSummoned : ProjectileMover
	{
		[Token(Token = "0x4000F1B")]
		private const int InvalidViewID = 0;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86734", Offset = "0xC86734")]
		[SerializeField]
		protected PoolObjectType m_objectType;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x12B2C68", Offset = "0x12B2C68", VA = "0x12B2C68")]
		public ProjectileMoverSummoned()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x12B2CD4", Offset = "0x12B2CD4", VA = "0x12B2CD4", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x12B2F30", Offset = "0x12B2F30", VA = "0x12B2F30", Slot = "15")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x12B319C", Offset = "0x12B319C", VA = "0x12B319C", Slot = "19")]
		protected override void ResetBezierAndInitialize(params object[] data)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x12B3338", Offset = "0x12B3338", VA = "0x12B3338", Slot = "36")]
		[PunRPC]
		protected override void PunDisableProjectile(bool returnToPool)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class Spell_ChillingClutch : SpellBase_Projectile
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC867A0", Offset = "0xC867A0")]
		[SerializeField]
		private float m_chillingClutchPercent;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float m_debuffDuration;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x12B354C", Offset = "0x12B354C", VA = "0x12B354C")]
		public Spell_ChillingClutch()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x12B36F4", Offset = "0x12B36F4", VA = "0x12B36F4", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x12B3840", Offset = "0x12B3840", VA = "0x12B3840", Slot = "38")]
		protected override void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class Spell_DiscOfAntioch : SpellBase_Projectile
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8680C", Offset = "0xC8680C")]
		[SerializeField]
		private float m_timeBetweenBounceIncreases;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private int m_startBounces;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private int m_bounceIncrease;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x12B3D08", Offset = "0x12B3D08", VA = "0x12B3D08")]
		public Spell_DiscOfAntioch()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x12B3D24", Offset = "0x12B3D24", VA = "0x12B3D24", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x12B3E14", Offset = "0x12B3E14", VA = "0x12B3E14", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x12B4004", Offset = "0x12B4004", VA = "0x12B4004", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x12B4330", Offset = "0x12B4330", VA = "0x12B4330", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x12B4DD0", Offset = "0x12B4DD0", VA = "0x12B4DD0", Slot = "37")]
		protected override void FireStraight(int opponentWielderID, bool forceRelease, bool drainEnergy, Vector3 point0, Vector3 point1, Vector3 point2)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x12B5054", Offset = "0x12B5054", VA = "0x12B5054", Slot = "38")]
		protected override void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}
	}
}
namespace Cortopia.Scripts.Spells
{
	[Token(Token = "0x20002A3")]
	public class Spell_ElectricFist : SpellBase_Projectile
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xE61328", Offset = "0xE61328", VA = "0xE61328")]
		public Spell_ElectricFist()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xE61330", Offset = "0xE61330", VA = "0xE61330", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Spells.Projectile
{
	[Token(Token = "0x20002A4")]
	public class Spell_FlamingPhoenix : SpellBase_Projectile
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86888", Offset = "0xC86888")]
		[SerializeField]
		private float m_minDmg;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC868D4", Offset = "0xC868D4")]
		private float m_minRunwayLength;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC86914", Offset = "0xC86914")]
		private float m_maxRunwayLength;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_tempRunway;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 m_offset;

		[Token(Token = "0x1700029A")]
		public float MinDamage
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x12AA208", Offset = "0x12AA208", VA = "0x12AA208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86954", Offset = "0xC86954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029B")]
		public override string SpellDamage
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x12B547C", Offset = "0x12B547C", VA = "0x12B547C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86964", Offset = "0xC86964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x12B5464", Offset = "0x12B5464", VA = "0x12B5464")]
		public Spell_FlamingPhoenix()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x12B551C", Offset = "0x12B551C", VA = "0x12B551C", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x12B55B4", Offset = "0x12B55B4", VA = "0x12B55B4", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x12B56D4", Offset = "0x12B56D4", VA = "0x12B56D4", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x12B592C", Offset = "0x12B592C", VA = "0x12B592C", Slot = "40")]
		protected override void IncreaseStat()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x12B5DE0", Offset = "0x12B5DE0", VA = "0x12B5DE0", Slot = "36")]
		protected override void FireStraight(int wielderId, bool forceRelease, bool drainEnergy)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x12B635C", Offset = "0x12B635C", VA = "0x12B635C")]
		[PunRPC]
		private void Fire(Vector3[] bezierPoints, float moveSpeed, float dmg, float fireTime, int opponentId)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x12B5850", Offset = "0x12B5850", VA = "0x12B5850")]
		private void Reset()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Spell_LightningStrike : SpellBase_Projectile
	{
		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC869F0", Offset = "0xC869F0")]
		private sealed class <PrepareFireDelayed>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spell_LightningStrike $this;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005BF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AB5")]
				[Address(RVA = "0x12B739C", Offset = "0x12B739C", VA = "0x12B739C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB6")]
				[Address(RVA = "0x12B73A4", Offset = "0x12B73A4", VA = "0x12B73A4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x12B6B74", Offset = "0x12B6B74", VA = "0x12B6B74")]
			[DebuggerHidden]
			public <PrepareFireDelayed>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x12B6FA8", Offset = "0x12B6FA8", VA = "0x12B6FA8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x12B73AC", Offset = "0x12B73AC", VA = "0x12B73AC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x12B73C0", Offset = "0x12B73C0", VA = "0x12B73C0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000F2A")]
		private const float AlmostChargedFactor = 0.2f;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86984", Offset = "0xC86984")]
		[SerializeField]
		private int m_chargeManaCost;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private AudioSource m_abortSound;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WaitForSeconds m_almostChargedDuration;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool m_isBotMatch;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x12B67E8", Offset = "0x12B67E8", VA = "0x12B67E8")]
		public Spell_LightningStrike()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x12B67F4", Offset = "0x12B67F4", VA = "0x12B67F4", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x12B68AC", Offset = "0x12B68AC", VA = "0x12B68AC", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x12B699C", Offset = "0x12B699C", VA = "0x12B699C", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x12B6B08", Offset = "0x12B6B08", VA = "0x12B6B08", Slot = "33")]
		[DebuggerHidden]
		protected override IEnumerator PrepareFireDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x12B6B7C", Offset = "0x12B6B7C", VA = "0x12B6B7C", Slot = "19")]
		public override void SpellRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x12AEC18", Offset = "0x12AEC18", VA = "0x12AEC18")]
		public void ReturnToSender(Vector3 point0, Vector3 point1, Vector3 point2)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x12B6D7C", Offset = "0x12B6D7C", VA = "0x12B6D7C", Slot = "36")]
		protected override void FireStraight(int opponentWielderID, bool forceRelease, bool drainEnergy = true)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class Tile_Projectile : SpellBase_Projectile, ITileSpell
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86A50", Offset = "0xC86A50")]
		[SerializeField]
		private GameObject m_tileHighlightEffect;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool m_highlightLookAtPlayer;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x12B7424", Offset = "0x12B7424", VA = "0x12B7424")]
		public Tile_Projectile()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x12B7428", Offset = "0x12B7428", VA = "0x12B7428", Slot = "27")]
		public override void OnSpellChange()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x12B7450", Offset = "0x12B7450", VA = "0x12B7450", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x12B74A0", Offset = "0x12B74A0", VA = "0x12B74A0", Slot = "15")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x12B75C8", Offset = "0x12B75C8", VA = "0x12B75C8", Slot = "17")]
		public override void SpellPress()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x12B7694", Offset = "0x12B7694", VA = "0x12B7694", Slot = "42")]
		public Tile GetHighlightedTile()
		{
			return null;
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x12B77BC", Offset = "0x12B77BC", VA = "0x12B77BC", Slot = "43")]
		public void ResetHighlightedTile()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x12B7564", Offset = "0x12B7564", VA = "0x12B7564", Slot = "44")]
		public void TrackTiles()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x12B7830", Offset = "0x12B7830", VA = "0x12B7830", Slot = "36")]
		protected override void FireStraight(int opponentID, bool forceRelease, bool drainEnergy)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x12B7BF0", Offset = "0x12B7BF0", VA = "0x12B7BF0", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x12B7C88", Offset = "0x12B7C88", VA = "0x12B7C88", Slot = "41")]
		public void SetHighlightTile(Tile tile)
		{
		}
	}
}
namespace Assets.Scripts.Spells
{
	[Token(Token = "0x20002A7")]
	public class Spell_DragonsBreath : SpellBase, IPunObservable
	{
		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86CBC", Offset = "0xC86CBC")]
		private sealed class <SpawnBreaths>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spell_DragonsBreath $this;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005C1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002ABB")]
				[Address(RVA = "0x12BA384", Offset = "0x12BA384", VA = "0x12BA384", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ABC")]
				[Address(RVA = "0x12BA38C", Offset = "0x12BA38C", VA = "0x12BA38C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x12B9FD4", Offset = "0x12B9FD4", VA = "0x12B9FD4")]
			[DebuggerHidden]
			public <SpawnBreaths>c__Iterator0()
			{
			}

			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x12BA0D4", Offset = "0x12BA0D4", VA = "0x12BA0D4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x12BA394", Offset = "0x12BA394", VA = "0x12BA394", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x12BA3A8", Offset = "0x12BA3A8", VA = "0x12BA3A8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000F32")]
		private const string EndSoundClipName = "dragons_breath_end";

		[Token(Token = "0x4000F33")]
		private const float EndSoundClipVolume = 0.5f;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86AAC", Offset = "0xC86AAC")]
		[SerializeField]
		private float m_maxBreathDistance;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_minDamage;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_maxDamage;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_manaCostPerSecond;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86B28", Offset = "0xC86B28")]
		[SerializeField]
		private SplitAudioSoundPlayer m_loopingSoundPlayer;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ParticleSystem m_particleSystem;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86B84", Offset = "0xC86B84")]
		[SerializeField]
		private EndPointCollisionTracker m_endPointCollisionTracker;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_endPointFollowSpeed;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86BE0", Offset = "0xC86BE0")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float m_radius;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private AnimationCurve m_speedDecay;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float m_lifeTime;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_damageDealt;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 m_networkPosition;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion m_networkRotation;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Wielder m_targetWielder;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Coroutine m_spawnBreaths;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<DragonsBreath> m_dragonsBreaths;

		[Token(Token = "0x1700029C")]
		private Vector3 SpawnPosition
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x12B838C", Offset = "0x12B838C", VA = "0x12B838C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86C5C", Offset = "0xC86C5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029D")]
		private Vector3 HitPosition
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x12B8440", Offset = "0x12B8440", VA = "0x12B8440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86C6C", Offset = "0xC86C6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029E")]
		public override string CastCost
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x12B8510", Offset = "0x12B8510", VA = "0x12B8510", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86C7C", Offset = "0xC86C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public override string SpellDamage
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x12B8590", Offset = "0x12B8590", VA = "0x12B8590", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86C8C", Offset = "0xC86C8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x12B82B8", Offset = "0x12B82B8", VA = "0x12B82B8")]
		public Spell_DragonsBreath()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x12B8630", Offset = "0x12B8630", VA = "0x12B8630", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x12B8740", Offset = "0x12B8740", VA = "0x12B8740", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x12B87E8", Offset = "0x12B87E8", VA = "0x12B87E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x12B94B4", Offset = "0x12B94B4", VA = "0x12B94B4")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x12B94CC", Offset = "0x12B94CC", VA = "0x12B94CC")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x12B94E4", Offset = "0x12B94E4", VA = "0x12B94E4", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x12B9918", Offset = "0x12B9918", VA = "0x12B9918", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x12B9C60", Offset = "0x12B9C60", VA = "0x12B9C60", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x12B9D48", Offset = "0x12B9D48", VA = "0x12B9D48", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x12B9D60", Offset = "0x12B9D60", VA = "0x12B9D60", Slot = "36")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x12B9F68", Offset = "0x12B9F68", VA = "0x12B9F68")]
		[DebuggerHidden]
		private IEnumerator SpawnBreaths()
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x12B9FDC", Offset = "0x12B9FDC", VA = "0x12B9FDC")]
		[PunRPC]
		private void PunSetDragonsBreathActive(bool active, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x12B9798", Offset = "0x12B9798", VA = "0x12B9798")]
		private void SetAudioActive(bool active)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x12B91D8", Offset = "0x12B91D8", VA = "0x12B91D8")]
		private void SetParticleSystemTransform(bool lerp)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x12B8D3C", Offset = "0x12B8D3C", VA = "0x12B8D3C")]
		private void DealDamage(Collider col, float dmg, Vector3 normal)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x12B9120", Offset = "0x12B9120", VA = "0x12B9120")]
		private void AbortContiniousHit()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x12B8D18", Offset = "0x12B8D18", VA = "0x12B8D18")]
		private float GetDamage(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x12BA0C0", Offset = "0x12BA0C0", VA = "0x12BA0C0", Slot = "35")]
		public override void ApplyDamageMultiplier(float value)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC86D1C", Offset = "0xC86D1C")]
	public abstract class SpellBase : MonoBehaviourPun, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC872CC", Offset = "0xC872CC")]
		private sealed class <PrepareFireDelayed>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SpellBase $this;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005C3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AC1")]
				[Address(RVA = "0x12BCAC4", Offset = "0x12BCAC4", VA = "0x12BCAC4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC2")]
				[Address(RVA = "0x12BCACC", Offset = "0x12BCACC", VA = "0x12BCACC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x12BC0AC", Offset = "0x12BC0AC", VA = "0x12BC0AC")]
			[DebuggerHidden]
			public <PrepareFireDelayed>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x12BC974", Offset = "0x12BC974", VA = "0x12BC974", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x12BCAD4", Offset = "0x12BCAD4", VA = "0x12BCAD4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x12BCAE8", Offset = "0x12BCAE8", VA = "0x12BCAE8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86D80", Offset = "0xC86D80")]
		[SerializeField]
		private Spell m_type;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ReticleType m_reticleType;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RelicType m_relicType;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip m_selectSound;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HapticsData m_spellPressHaptics;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HapticsData m_spellReleaseHaptics;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86E1C", Offset = "0xC86E1C")]
		[SerializeField]
		protected CostType m_costType;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected int m_castCost;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC86E78", Offset = "0xC86E78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC86E78", Offset = "0xC86E78")]
		protected float m_fireRate;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86EDC", Offset = "0xC86EDC")]
		[SerializeField]
		private CastEffectorBase m_castEffector;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WandChargeEffect m_wandChargeEffect;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource m_initAudioSource;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_castTime;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool m_blockUntilCharged;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool m_autoFire;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC86F38", Offset = "0xC86F38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC86F38", Offset = "0xC86F38")]
		private int m_poolSize;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool m_casting;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		protected bool m_locked;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		protected bool m_readyToFire;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		protected bool m_isChargeable;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool m_isSelected;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected WaitForSeconds m_remainingChargeDuration;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IWandControl m_wandControl;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_blockCooldown;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_slotIndex;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_originalInitAudioSourceVolume;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_fireRateTimer;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ONSPAudioSource m_initONSPAudioSource;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Events.SpellSelectedEvent m_spellSelectedEvent;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86FA0", Offset = "0xC86FA0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC86FA0", Offset = "0xC86FA0")]
		private CharacterControl <CharacterControl>k__BackingField;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC86FDC", Offset = "0xC86FDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC86FDC", Offset = "0xC86FDC")]
		private int <TimesPicked>k__BackingField;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87018", Offset = "0xC87018")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87018", Offset = "0xC87018")]
		private int <TimesUsed>k__BackingField;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87054", Offset = "0xC87054")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87054", Offset = "0xC87054")]
		private float <TotalDamageDealt>k__BackingField;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87090", Offset = "0xC87090")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87090", Offset = "0xC87090")]
		private bool <IsCooldownActive>k__BackingField;

		[Token(Token = "0x170002A0")]
		public CharacterControl CharacterControl
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x129D444", Offset = "0x129D444", VA = "0x129D444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC870CC", Offset = "0xC870CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x12BA40C", Offset = "0x12BA40C", VA = "0x12BA40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC870DC", Offset = "0xC870DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public int TimesPicked
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x12BA414", Offset = "0x12BA414", VA = "0x12BA414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC870EC", Offset = "0xC870EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x12BA41C", Offset = "0x12BA41C", VA = "0x12BA41C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC870FC", Offset = "0xC870FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public int TimesUsed
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x12BA424", Offset = "0x12BA424", VA = "0x12BA424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8710C", Offset = "0xC8710C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x12BA42C", Offset = "0x12BA42C", VA = "0x12BA42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8711C", Offset = "0xC8711C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float TotalDamageDealt
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x12BA434", Offset = "0x12BA434", VA = "0x12BA434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8712C", Offset = "0xC8712C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x12BA43C", Offset = "0x12BA43C", VA = "0x12BA43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8713C", Offset = "0xC8713C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public int PoolSize
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x129EAAC", Offset = "0x129EAAC", VA = "0x129EAAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8714C", Offset = "0xC8714C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A5")]
		public Wielder Wielder
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x129D44C", Offset = "0x129D44C", VA = "0x129D44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8715C", Offset = "0xC8715C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		public CostType CostType
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x12BA444", Offset = "0x12BA444", VA = "0x12BA444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8716C", Offset = "0xC8716C")]
			get
			{
				return default(CostType);
			}
		}

		[Token(Token = "0x170002A7")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x12BA44C", Offset = "0x12BA44C", VA = "0x12BA44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8717C", Offset = "0xC8717C")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x170002A8")]
		public WandHand WandHand
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x12B7708", Offset = "0x12B7708", VA = "0x12B7708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8718C", Offset = "0xC8718C")]
			get
			{
				return default(WandHand);
			}
		}

		[Token(Token = "0x170002A9")]
		public string NameTerm
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x12BA500", Offset = "0x12BA500", VA = "0x12BA500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8719C", Offset = "0xC8719C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public string DescriptionTerm
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x12BA580", Offset = "0x12BA580", VA = "0x12BA580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871AC", Offset = "0xC871AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public ReticleType ReticleType
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x12BA600", Offset = "0x12BA600", VA = "0x12BA600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871BC", Offset = "0xC871BC")]
			get
			{
				return default(ReticleType);
			}
		}

		[Token(Token = "0x170002AC")]
		public AudioClip SelectSound
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x12BA608", Offset = "0x12BA608", VA = "0x12BA608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871CC", Offset = "0xC871CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		public WandChargeEffect WandChargeEffect
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x12BA610", Offset = "0x12BA610", VA = "0x12BA610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871DC", Offset = "0xC871DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		public virtual Spell Type
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x12BA698", Offset = "0x12BA698", VA = "0x12BA698", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871EC", Offset = "0xC871EC")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x170002AF")]
		public virtual LayerMask HitMask
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x12BA6A0", Offset = "0x12BA6A0", VA = "0x12BA6A0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC871FC", Offset = "0xC871FC")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x170002B0")]
		public virtual bool IsActive
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x12BA75C", Offset = "0x12BA75C", VA = "0x12BA75C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8720C", Offset = "0xC8720C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public virtual bool TapHold
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x12BA764", Offset = "0x12BA764", VA = "0x12BA764", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8721C", Offset = "0xC8721C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B2")]
		public virtual string CastCost
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x12BA76C", Offset = "0x12BA76C", VA = "0x12BA76C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8722C", Offset = "0xC8722C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public virtual string SpellDamage
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x12BA7A0", Offset = "0x12BA7A0", VA = "0x12BA7A0", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8723C", Offset = "0xC8723C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		protected PlayerControl PlayerControl
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x12BA7E8", Offset = "0x12BA7E8", VA = "0x12BA7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8724C", Offset = "0xC8724C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		protected bool IsPlayerControlled
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x12BA870", Offset = "0x12BA870", VA = "0x12BA870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8725C", Offset = "0xC8725C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B6")]
		protected bool IsDualWielding
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x12BA8E4", Offset = "0x12BA8E4", VA = "0x12BA8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8726C", Offset = "0xC8726C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B7")]
		protected bool IsCooldownActive
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x12B6D74", Offset = "0x12B6D74", VA = "0x12B6D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8727C", Offset = "0xC8727C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x12BA984", Offset = "0x12BA984", VA = "0x12BA984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8728C", Offset = "0xC8728C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x129C454", Offset = "0x129C454", VA = "0x129C454")]
		protected SpellBase()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x129C590", Offset = "0x129C590", VA = "0x129C590", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x129C630", Offset = "0x129C630", VA = "0x129C630", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x129E01C", Offset = "0x129E01C", VA = "0x129E01C", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x129DC70", Offset = "0x129DC70", VA = "0x129DC70", Slot = "14")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x12B7510", Offset = "0x12B7510", VA = "0x12B7510", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x12BA9DC", Offset = "0x12BA9DC", VA = "0x12BA9DC", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x12BACF0", Offset = "0x12BACF0", VA = "0x12BACF0")]
		private void Initialize(IWandControl wandControl)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x12BAF8C", Offset = "0x12BAF8C", VA = "0x12BAF8C")]
		private void InitializeChargeEffects(IWandControl wandControl, bool isLocal)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x12BB388", Offset = "0x12BB388", VA = "0x12BB388", Slot = "16")]
		public virtual IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x12BA798", Offset = "0x12BA798", VA = "0x12BA798")]
		public int GetCastCost()
		{
			return default(int);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x12BB390", Offset = "0x12BB390", VA = "0x12BB390")]
		public void SetCastCost(int castCost)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x12B75EC", Offset = "0x12B75EC", VA = "0x12B75EC", Slot = "17")]
		public virtual void SpellPress()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x12BB398", Offset = "0x12BB398", VA = "0x12BB398")]
		protected void TryEnableCastFeedback()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x12BB3FC", Offset = "0x12BB3FC", VA = "0x12BB3FC", Slot = "18")]
		public virtual void SpellHold()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x12BB458", Offset = "0x12BB458", VA = "0x12BB458", Slot = "19")]
		public virtual void SpellRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x129CE54", Offset = "0x129CE54", VA = "0x129CE54")]
		protected void OnValidSpellCast()
		{
		}

		[Token(Token = "0x6001177")]
		protected abstract void OnPress();

		[Token(Token = "0x6001178")]
		protected abstract void OnHold();

		[Token(Token = "0x6001179")]
		protected abstract void OnRelease(bool forceRelease = false);

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x12BB544", Offset = "0x12BB544", VA = "0x12BB544", Slot = "23")]
		public virtual void ResetSpellEffectors()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x129D01C", Offset = "0x129D01C", VA = "0x129D01C", Slot = "24")]
		public virtual void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x129E4EC", Offset = "0x129E4EC", VA = "0x129E4EC", Slot = "25")]
		public virtual bool CanCast()
		{
			return default(bool);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x12BB690", Offset = "0x12BB690", VA = "0x12BB690", Slot = "26")]
		public virtual void OnSpellSelect()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x12B7448", Offset = "0x12B7448", VA = "0x12B7448", Slot = "27")]
		public virtual void OnSpellChange()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x12BB710", Offset = "0x12BB710", VA = "0x12BB710", Slot = "28")]
		public virtual void DrainEnergy()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x12BB724", Offset = "0x12BB724", VA = "0x12BB724", Slot = "29")]
		public virtual void DrainEnergy(int cost)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x12BB91C", Offset = "0x12BB91C", VA = "0x12BB91C", Slot = "30")]
		public virtual void GainEnergy()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x12BB930", Offset = "0x12BB930", VA = "0x12BB930", Slot = "31")]
		public virtual void GainEnergy(int energy)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x12B9CCC", Offset = "0x12B9CCC", VA = "0x12B9CCC")]
		protected bool OutOfEnergy(float castCost)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x12BBA38", Offset = "0x12BBA38", VA = "0x12BBA38")]
		protected void SetHoldEffectActive(bool enable)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x12BBF8C", Offset = "0x12BBF8C", VA = "0x12BBF8C", Slot = "32")]
		protected virtual void UpdateHoldEffect()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x12BC040", Offset = "0x12BC040", VA = "0x12BC040", Slot = "33")]
		[DebuggerHidden]
		protected virtual IEnumerator PrepareFireDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x12B7314", Offset = "0x12B7314", VA = "0x12B7314")]
		protected void PrepareFire()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x129D088", Offset = "0x129D088", VA = "0x129D088")]
		protected void SetWandChargeEffectActive(bool enable, bool networkSync = true)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x12BC0B4", Offset = "0x12BC0B4", VA = "0x12BC0B4")]
		[PunRPC]
		protected void PunSetWandChargeEffectActive(bool enable)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x12BC168", Offset = "0x12BC168", VA = "0x12BC168")]
		public void SetTotalDamage(float value)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x12BC170", Offset = "0x12BC170", VA = "0x12BC170", Slot = "34")]
		public virtual void AddTotalDamage(float value)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x129E9E0", Offset = "0x129E9E0", VA = "0x129E9E0")]
		public void PlaySfx()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x12BC24C", Offset = "0x12BC24C", VA = "0x12BC24C")]
		protected void PlaySfx(Vector3 position, bool playUnique = false, int generalClipIndex = -1, bool play2dLocally = false, float localVolume = 1f)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x12BC5E4", Offset = "0x12BC5E4", VA = "0x12BC5E4")]
		[PunRPC]
		protected void PunPlaySfx(Vector3 position, int generalClipIndex, float spatialBlend, float volume)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x12BB2B0", Offset = "0x12BB2B0", VA = "0x12BB2B0")]
		private void TrySetChargeEffectParent(Transform parent, bool remotely = false)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x12BC8F4", Offset = "0x12BC8F4", VA = "0x12BC8F4")]
		public bool IsType(Spell compareType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x12BC904", Offset = "0x12BC904", VA = "0x12BC904")]
		public bool IsIndex(int compareIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x12BC914", Offset = "0x12BC914", VA = "0x12BC914")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x12BC934", Offset = "0x12BC934", VA = "0x12BC934")]
		public string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x129CC34", Offset = "0x129CC34", VA = "0x129CC34")]
		protected void TryTriggerSpellPressHaptics()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x129CD74", Offset = "0x129CD74", VA = "0x129CD74")]
		protected void TryTriggerSpellReleaseHaptics()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x12BB628", Offset = "0x12BB628", VA = "0x12BB628")]
		protected void TryCancelHaptics()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x12BC954", Offset = "0x12BC954", VA = "0x12BC954", Slot = "35")]
		public virtual void ApplyDamageMultiplier(float value)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x12BC958", Offset = "0x12BC958", VA = "0x12BC958")]
		protected void TryResetCooldown()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x12BA990", Offset = "0x12BA990", VA = "0x12BA990")]
		private void Cooldown()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8732C", Offset = "0xC8732C")]
	public abstract class SpellBase_Defense : SpellBase, IPunObservable
	{
		[Token(Token = "0x4000F6B")]
		private const string ShieldHitSoundClipName = "shield_of_light_hit";

		[Token(Token = "0x4000F6C")]
		private const float ShieldHitSoundClipVolume = 1f;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC873AC", Offset = "0xC873AC")]
		[SerializeField]
		protected float m_manaDrainPerSecond;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected Collider m_collider;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject m_effectParent;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool m_reflective;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		private bool m_deflective;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private WandChargeEffect m_hitEffect;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87448", Offset = "0xC87448")]
		[SerializeField]
		private Light m_light;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float m_maxLightIntensity;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC874A4", Offset = "0xC874A4")]
		private float m_lightFadeTime;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC874E8", Offset = "0xC874E8")]
		[SerializeField]
		private AudioSource m_shieldAudioSource;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioClip[] m_audioClips;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool m_drainMana;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Tweener m_lightTweener;

		[Token(Token = "0x170002B8")]
		public override string CastCost
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x12BCBD4", Offset = "0x12BCBD4", VA = "0x12BCBD4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87544", Offset = "0xC87544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public bool IsReflective
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x12A8B90", Offset = "0x12A8B90", VA = "0x12A8B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87554", Offset = "0xC87554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		public bool IsDeflective
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x12A8B98", Offset = "0x12A8B98", VA = "0x12A8B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87564", Offset = "0xC87564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BB")]
		protected Collider Collider
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x12BCC54", Offset = "0x12BCC54", VA = "0x12BCC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87574", Offset = "0xC87574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		protected GameObject EffectObject
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x12BCC5C", Offset = "0x12BCC5C", VA = "0x12BCC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87584", Offset = "0xC87584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x12BCB4C", Offset = "0x12BCB4C", VA = "0x12BCB4C")]
		protected SpellBase_Defense()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x12BCC64", Offset = "0x12BCC64", VA = "0x12BCC64", Slot = "36")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x12BCCB0", Offset = "0x12BCCB0", VA = "0x12BCCB0", Slot = "37")]
		protected virtual void SerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x12BCCB4", Offset = "0x12BCCB4", VA = "0x12BCCB4", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x12BCD9C", Offset = "0x12BCD9C", VA = "0x12BCD9C", Slot = "13")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x12BCE7C", Offset = "0x12BCE7C", VA = "0x12BCE7C", Slot = "17")]
		public override void SpellPress()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x12BCEBC", Offset = "0x12BCEBC", VA = "0x12BCEBC", Slot = "18")]
		public override void SpellHold()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x12BCED8", Offset = "0x12BCED8", VA = "0x12BCED8", Slot = "19")]
		public override void SpellRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x12BCF38", Offset = "0x12BCF38", VA = "0x12BCF38", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x12BD03C", Offset = "0x12BD03C", VA = "0x12BD03C", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x12BD08C", Offset = "0x12BD08C", VA = "0x12BD08C", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x12BD090", Offset = "0x12BD090", VA = "0x12BD090", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x12BD094", Offset = "0x12BD094", VA = "0x12BD094", Slot = "38")]
		public virtual void OnSpellHit(float dmg, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x12BD388", Offset = "0x12BD388", VA = "0x12BD388", Slot = "39")]
		protected virtual void SetActive(bool active, bool playSound = true, bool playAnimation = true)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x12BD630", Offset = "0x12BD630", VA = "0x12BD630", Slot = "40")]
		[PunRPC]
		protected virtual void PunSetActive(bool active, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x12BD898", Offset = "0x12BD898", VA = "0x12BD898")]
		[PunRPC]
		protected void PlayShieldSound(int clipIndex)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x12BD1EC", Offset = "0x12BD1EC", VA = "0x12BD1EC")]
		protected void PlaySound(string name, float volume)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x12BD9A8", Offset = "0x12BD9A8", VA = "0x12BD9A8")]
		private int GetClipIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x12BD73C", Offset = "0x12BD73C", VA = "0x12BD73C")]
		protected void FadeLight(bool fadeIn)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x12BDAAC", Offset = "0x12BDAAC", VA = "0x12BDAAC", Slot = "41")]
		protected virtual void UpdatePosition()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class SpellBase_Projectile : SpellBase
	{
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8783C", Offset = "0xC8783C")]
		private sealed class <FireThreadedProjectile>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int <modifiedCost>__0;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int <i>__1;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool first;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal SpellBase_Projectile $this;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x170005C5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AC7")]
				[Address(RVA = "0x12BFB00", Offset = "0x12BFB00", VA = "0x12BFB00", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC8")]
				[Address(RVA = "0x12BFB08", Offset = "0x12BFB08", VA = "0x12BFB08", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x12BED78", Offset = "0x12BED78", VA = "0x12BED78")]
			[DebuggerHidden]
			public <FireThreadedProjectile>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x12BF684", Offset = "0x12BF684", VA = "0x12BF684", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x12BFB10", Offset = "0x12BFB10", VA = "0x12BFB10", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x12BFB24", Offset = "0x12BFB24", VA = "0x12BFB24", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000F7A")]
		private const float ScatteredShotDistanceFactor = 0.035f;

		[Token(Token = "0x4000F7B")]
		private const float ScatteredShotMinSpeedFactor = 0.55f;

		[Token(Token = "0x4000F7C")]
		private const float ScatteredShotMaxSpeedFactor = 1.25f;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC875B4", Offset = "0xC875B4")]
		public ProjectileBehaviour m_projectileBehaviour;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public DamageType m_dmgType;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected AttackAnimationType m_animationType;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		protected bool m_showTrajectory;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[SerializeField]
		private bool m_continuousFire;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_spellDmg;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected int m_castCostFirst;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected int m_projectileCount;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_moveSpeed;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC8763C", Offset = "0xC8763C")]
		public float m_collisionRadius;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC87658", Offset = "0xC87658")]
		private float m_threadedProjectileCastCost;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC876A4", Offset = "0xC876A4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC876A4", Offset = "0xC876A4")]
		protected float m_originOffset;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		protected float m_maxOffset;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected float m_minOffset;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87728", Offset = "0xC87728")]
		public bool m_bounceActive;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int m_maxBounces;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87760", Offset = "0xC87760")]
		[SerializeField]
		private SplashDamageDataObject m_splashDamageData;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected readonly Vector3[] m_spellArcPoints;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected float m_scatterOffset;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected bool m_tapHold;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected float m_currentHoldTime;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3[] m_overrideArcPoints;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_nextFire;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool m_firstProjectile;

		[Token(Token = "0x170002BD")]
		public override bool TapHold
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x12BDAB0", Offset = "0x12BDAB0", VA = "0x12BDAB0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877AC", Offset = "0xC877AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BE")]
		public float FireTime
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x12B3C94", Offset = "0x12B3C94", VA = "0x12B3C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877BC", Offset = "0xC877BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002BF")]
		public override string SpellDamage
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x12BDAB8", Offset = "0x12BDAB8", VA = "0x12BDAB8", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877CC", Offset = "0xC877CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public bool HasSplashDamageData
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x12BDB24", Offset = "0x12BDB24", VA = "0x12BDB24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877DC", Offset = "0xC877DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C1")]
		public SplashDamageData SplashDamageData
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x12A62E8", Offset = "0x12A62E8", VA = "0x12A62E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877EC", Offset = "0xC877EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		protected Vector3 SpawnPosition
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x12B5D1C", Offset = "0x12B5D1C", VA = "0x12B5D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC877FC", Offset = "0xC877FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x12B355C", Offset = "0x12B355C", VA = "0x12B355C")]
		public SpellBase_Projectile()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x12B556C", Offset = "0x12B556C", VA = "0x12B556C", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x12B3E38", Offset = "0x12B3E38", VA = "0x12B3E38", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x12B4044", Offset = "0x12B4044", VA = "0x12B4044", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x12B4364", Offset = "0x12B4364", VA = "0x12B4364", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x12B5700", Offset = "0x12B5700", VA = "0x12B5700", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x12BE514", Offset = "0x12BE514", VA = "0x12BE514", Slot = "29")]
		public override void DrainEnergy(int cost)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x12B6E2C", Offset = "0x12B6E2C", VA = "0x12B6E2C", Slot = "36")]
		protected virtual void FireStraight(int opponentWielderID, bool forceRelease, bool drainEnergy = true)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x12BE564", Offset = "0x12BE564", VA = "0x12BE564", Slot = "37")]
		protected virtual void FireStraight(int opponentWielderID, bool forceRelease, bool drainEnergy, Vector3 point0, Vector3 point1, Vector3 point2)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x12BE6E4", Offset = "0x12BE6E4", VA = "0x12BE6E4", Slot = "38")]
		protected virtual void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x12BDE54", Offset = "0x12BDE54", VA = "0x12BDE54")]
		protected void FireThreaded(int opponentWielderID, bool forceFire)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x12BEAA4", Offset = "0x12BEAA4", VA = "0x12BEAA4")]
		protected void FireThreaded(int opponentWielderID, bool forceFire, Vector3 point0, Vector3 point1, Vector3 point2)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x12BECE4", Offset = "0x12BECE4", VA = "0x12BECE4", Slot = "39")]
		[DebuggerHidden]
		protected virtual IEnumerator FireThreadedProjectile(float waitTime, bool first)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x12BDFAC", Offset = "0x12BDFAC", VA = "0x12BDFAC")]
		private void FireScatteredShot()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x12BED80", Offset = "0x12BED80", VA = "0x12BED80", Slot = "40")]
		protected virtual void IncreaseStat()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x12BDB98", Offset = "0x12BDB98", VA = "0x12BDB98")]
		public void SetOverrideArcPoints(params Vector3[] points)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x12B69D0", Offset = "0x12B69D0", VA = "0x12B69D0")]
		protected void ResetArcPoints()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x12BDBA0", Offset = "0x12BDBA0", VA = "0x12BDBA0")]
		protected Vector3 GetOffsettedEndPoint(Vector3 cleanEndPoint, float aimDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x12B7A94", Offset = "0x12B7A94", VA = "0x12B7A94")]
		protected Vector3 GetOffsettedMidPointUp(Vector3 startPoint, Vector3 endPoint, float offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x12BF1AC", Offset = "0x12BF1AC", VA = "0x12BF1AC")]
		protected Vector3 GetOffsettedMidpoint(int index, Vector3 startPoint, Vector3 endPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x12BF5B8", Offset = "0x12BF5B8", VA = "0x12BF5B8", Slot = "35")]
		public override void ApplyDamageMultiplier(float value)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x12BF5C8", Offset = "0x12BF5C8", VA = "0x12BF5C8")]
		public void ApplySplashDamageMultiplier(float value)
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class SpellBase_Summon : Tile_AreaEffect
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8789C", Offset = "0xC8789C")]
		[SerializeField]
		private bool m_targetCaster;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		[SerializeField]
		private bool m_dualFire;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private int m_durability;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private int m_projectileDamage;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TileEffectBase m_previousEffect;

		[Token(Token = "0x170002C3")]
		public bool CanTargetCaster
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x12BFBA0", Offset = "0x12BFBA0", VA = "0x12BFBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87918", Offset = "0xC87918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool CanDualFire
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x12BFBA8", Offset = "0x12BFBA8", VA = "0x12BFBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87928", Offset = "0xC87928")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public int Durability
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x12BFBB0", Offset = "0x12BFBB0", VA = "0x12BFBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87938", Offset = "0xC87938")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C6")]
		public int ProjectileDamage
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x12BFBB8", Offset = "0x12BFBB8", VA = "0x12BFBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87948", Offset = "0xC87948")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C7")]
		public override string SpellDamage
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x12BFBC0", Offset = "0x12BFBC0", VA = "0x12BFBC0", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87958", Offset = "0xC87958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x12BFB88", Offset = "0x12BFB88", VA = "0x12BFB88")]
		public SpellBase_Summon()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x12BFBCC", Offset = "0x12BFBCC", VA = "0x12BFBCC", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x12BFE00", Offset = "0x12BFE00", VA = "0x12BFE00", Slot = "40")]
		protected override void CastEffect()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x12BFF3C", Offset = "0x12BFF3C", VA = "0x12BFF3C")]
		private void OnTileOccupiedChecked(Tile tile, bool sucessfullyOccupied)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x12C0008", Offset = "0x12C0008", VA = "0x12C0008")]
		public void RevertSpellCast()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x12C004C", Offset = "0x12C004C", VA = "0x12C004C", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x12C01D4", Offset = "0x12C01D4", VA = "0x12C01D4", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public abstract class SpellBase_Teleport : SpellBase_Tile
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87968", Offset = "0xC87968")]
		[SerializeField]
		protected AudioClip[] m_teleportSfxClips;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected int m_teleportSoundIndex;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected int m_teleportBlockedSoundIndex;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x12C0268", Offset = "0x12C0268", VA = "0x12C0268")]
		protected SpellBase_Teleport()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x12C02F8", Offset = "0x12C02F8", VA = "0x12C02F8", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x12C04C0", Offset = "0x12C04C0", VA = "0x12C04C0", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002AD")]
	public abstract class SpellBase_Tile : SpellBase, ITileSpell
	{
		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC879B4", Offset = "0xC879B4")]
		[SerializeField]
		private GameObject m_tileHighlightEffect;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool m_highlightLookAtPlayer;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Tile m_newTile;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Tile m_movingTile;

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x12C02DC", Offset = "0x12C02DC", VA = "0x12C02DC")]
		protected SpellBase_Tile()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x12C0530", Offset = "0x12C0530", VA = "0x12C0530", Slot = "13")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x12C05EC", Offset = "0x12C05EC", VA = "0x12C05EC", Slot = "15")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x12C06F4", Offset = "0x12C06F4", VA = "0x12C06F4", Slot = "39")]
		public void TrackTiles()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x12C0904", Offset = "0x12C0904", VA = "0x12C0904", Slot = "36")]
		public void SetHighlightTile(Tile tile)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x12C0150", Offset = "0x12C0150", VA = "0x12C0150", Slot = "37")]
		public Tile GetHighlightedTile()
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x12BFD88", Offset = "0x12BFD88", VA = "0x12BFD88", Slot = "38")]
		public void ResetHighlightedTile()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x12C0758", Offset = "0x12C0758", VA = "0x12C0758")]
		private void SetHighlightEffectPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x12C0BCC", Offset = "0x12C0BCC", VA = "0x12C0BCC", Slot = "27")]
		public override void OnSpellChange()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x12C0A8C", Offset = "0x12C0A8C", VA = "0x12C0A8C")]
		protected void HideHighlightEffect()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x12C0B2C", Offset = "0x12C0B2C", VA = "0x12C0B2C")]
		protected void ShowHighlightEffect()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x12C0CAC", Offset = "0x12C0CAC", VA = "0x12C0CAC", Slot = "17")]
		public override void SpellPress()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x12C0D58", Offset = "0x12C0D58", VA = "0x12C0D58", Slot = "18")]
		public override void SpellHold()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x12C022C", Offset = "0x12C022C", VA = "0x12C022C", Slot = "24")]
		public override void AbortSpellCasting(bool discret = false, bool backButtonForce = false)
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public struct SpellData
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87A10", Offset = "0xC87A10")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87A10", Offset = "0xC87A10")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87A4C", Offset = "0xC87A4C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87A4C", Offset = "0xC87A4C")]
		private float <CollisionRadius>k__BackingField;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87A88", Offset = "0xC87A88")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87A88", Offset = "0xC87A88")]
		private float <Damage>k__BackingField;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87AC4", Offset = "0xC87AC4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87AC4", Offset = "0xC87AC4")]
		private DamageType <DamageType>k__BackingField;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87B00", Offset = "0xC87B00")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87B00", Offset = "0xC87B00")]
		private ProjectileBehaviour <Behaviour>k__BackingField;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87B3C", Offset = "0xC87B3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87B3C", Offset = "0xC87B3C")]
		private int <HitMask>k__BackingField;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87B78", Offset = "0xC87B78")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87B78", Offset = "0xC87B78")]
		private int <ControllingPlayerLayer>k__BackingField;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87BB4", Offset = "0xC87BB4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC87BB4", Offset = "0xC87BB4")]
		private int <OppoinentID>k__BackingField;

		[Token(Token = "0x170002C8")]
		public float Speed
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x12C0DF0", Offset = "0x12C0DF0", VA = "0x12C0DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87BF0", Offset = "0xC87BF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x12C0DF8", Offset = "0x12C0DF8", VA = "0x12C0DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C00", Offset = "0xC87C00")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float CollisionRadius
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x12C0E00", Offset = "0x12C0E00", VA = "0x12C0E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C10", Offset = "0xC87C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x12C0E08", Offset = "0x12C0E08", VA = "0x12C0E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C20", Offset = "0xC87C20")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public float Damage
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x12C0E10", Offset = "0x12C0E10", VA = "0x12C0E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C30", Offset = "0xC87C30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x12C0E18", Offset = "0x12C0E18", VA = "0x12C0E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C40", Offset = "0xC87C40")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public DamageType DamageType
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x12C0E20", Offset = "0x12C0E20", VA = "0x12C0E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C50", Offset = "0xC87C50")]
			get
			{
				return default(DamageType);
			}
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x12C0E28", Offset = "0x12C0E28", VA = "0x12C0E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C60", Offset = "0xC87C60")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public ProjectileBehaviour Behaviour
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x12C0E30", Offset = "0x12C0E30", VA = "0x12C0E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C70", Offset = "0xC87C70")]
			get
			{
				return default(ProjectileBehaviour);
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x12C0E38", Offset = "0x12C0E38", VA = "0x12C0E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C80", Offset = "0xC87C80")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public int HitMask
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x12C0E40", Offset = "0x12C0E40", VA = "0x12C0E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87C90", Offset = "0xC87C90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x12C0E48", Offset = "0x12C0E48", VA = "0x12C0E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CA0", Offset = "0xC87CA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public int ControllingPlayerLayer
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x12C0E50", Offset = "0x12C0E50", VA = "0x12C0E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CB0", Offset = "0xC87CB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x12C0E58", Offset = "0x12C0E58", VA = "0x12C0E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CC0", Offset = "0xC87CC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public int OppoinentID
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x12C0E60", Offset = "0x12C0E60", VA = "0x12C0E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CD0", Offset = "0xC87CD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x12C0E68", Offset = "0x12C0E68", VA = "0x12C0E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CE0", Offset = "0xC87CE0")]
			private set
			{
			}
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x12C0DB8", Offset = "0x12C0DB8", VA = "0x12C0DB8")]
		public SpellData(float speed, float damage, int opponentId)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x12C0DD8", Offset = "0x12C0DD8", VA = "0x12C0DD8")]
		public SpellData(float speed, float collisionRadius, float damage, DamageType damageType, ProjectileBehaviour behaviour, int hitMask, int controllingPlayerLayer, int opponentID)
		{
		}
	}
}
namespace Cortopia.Scripts.Spells.Tile
{
	[Token(Token = "0x20002AF")]
	public class Spell_AcidCloud : Tile_AreaEffect
	{
		[Token(Token = "0x170002D0")]
		public override string SpellDamage
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xE61468", Offset = "0xE61468", VA = "0xE61468", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87CF0", Offset = "0xC87CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xE61420", Offset = "0xE61420", VA = "0xE61420")]
		public Spell_AcidCloud()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xE61508", Offset = "0xE61508", VA = "0xE61508", Slot = "40")]
		protected override void CastEffect()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class Spell_PetrifyingPrison : Tile_AreaEffect
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xE61590", Offset = "0xE61590", VA = "0xE61590")]
		public Spell_PetrifyingPrison()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xE615B4", Offset = "0xE615B4", VA = "0xE615B4", Slot = "40")]
		protected override void CastEffect()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class Spell_SoilSpikes : Tile_AreaEffect
	{
		[Token(Token = "0x6001203")]
		[Address(RVA = "0xE615E4", Offset = "0xE615E4", VA = "0xE615E4")]
		public Spell_SoilSpikes()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xE61608", Offset = "0xE61608", VA = "0xE61608", Slot = "40")]
		protected override void CastEffect()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public abstract class Tile_AreaEffect : SpellBase_Tile
	{
		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87D00", Offset = "0xC87D00")]
		[SerializeField]
		protected AreaOfEffectBehaviour m_effectBehaviour;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		protected DamageType m_dmgType;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected float m_effectActivationDelay;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		protected float m_timeFrame;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected int m_dmgInflict;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		protected int m_maxDamageInflict;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected TileEffectBase m_activePoolObject;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected bool m_allowInfinite;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC87DBC", Offset = "0xC87DBC")]
		protected int m_numberOfCopiesAllowed;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected LinkedList<TileEffectBase> m_previousTileEffects;

		[Token(Token = "0x170002D1")]
		public override string SpellDamage
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xE61638", Offset = "0xE61638", VA = "0xE61638", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87DFC", Offset = "0xC87DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public DamageType DmgType
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xE61644", Offset = "0xE61644", VA = "0xE61644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87E0C", Offset = "0xC87E0C")]
			get
			{
				return default(DamageType);
			}
		}

		[Token(Token = "0x170002D3")]
		public float EffectActivationDelay
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xE6164C", Offset = "0xE6164C", VA = "0xE6164C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87E1C", Offset = "0xC87E1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D4")]
		public float TimeFrame
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xE61654", Offset = "0xE61654", VA = "0xE61654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87E2C", Offset = "0xC87E2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D5")]
		public int DmgInflict
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xE6165C", Offset = "0xE6165C", VA = "0xE6165C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87E3C", Offset = "0xC87E3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D6")]
		public int MaxDamageInflict
		{
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xE61664", Offset = "0xE61664", VA = "0xE61664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87E4C", Offset = "0xC87E4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xE61444", Offset = "0xE61444", VA = "0xE61444")]
		protected Tile_AreaEffect()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xE6166C", Offset = "0xE6166C", VA = "0xE6166C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xE616DC", Offset = "0xE616DC", VA = "0xE616DC", Slot = "26")]
		public override void OnSpellSelect()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xE61784", Offset = "0xE61784", VA = "0xE61784", Slot = "20")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xE61838", Offset = "0xE61838", VA = "0xE61838", Slot = "22")]
		protected override void OnRelease(bool forceRelease = false)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xE619E8", Offset = "0xE619E8", VA = "0xE619E8", Slot = "21")]
		protected override void OnHold()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xE61AD0", Offset = "0xE61AD0", VA = "0xE61AD0")]
		private void TryAutoCastTileEffect()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xE61538", Offset = "0xE61538", VA = "0xE61538", Slot = "40")]
		protected virtual void CastEffect()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xE61C1C", Offset = "0xE61C1C", VA = "0xE61C1C", Slot = "41")]
		protected virtual void InstantiateAreaEffect()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xE62258", Offset = "0xE62258", VA = "0xE62258", Slot = "25")]
		public override bool CanCast()
		{
			return default(bool);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xE62460", Offset = "0xE62460", VA = "0xE62460")]
		public void RemoveActiveEffect()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xE624EC", Offset = "0xE624EC", VA = "0xE624EC")]
		private void RemoveEffect(TileEffectBase tileEffect)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xE62130", Offset = "0xE62130", VA = "0xE62130")]
		protected void RemoveOldestActiveEffect()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xE62730", Offset = "0xE62730", VA = "0xE62730")]
		public void RemoveFromQueue(TileEffectBase effect)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xE627B4", Offset = "0xE627B4", VA = "0xE627B4", Slot = "35")]
		public override void ApplyDamageMultiplier(float value)
		{
		}
	}
}
[Token(Token = "0x20002B3")]
public class Tile_Teleport : SpellBase_Teleport
{
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87EA8", Offset = "0xC87EA8")]
	private sealed class <FreeTeleport>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float freeTimeAmount;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Tile_Teleport $this;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170005C7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0xFB5274", Offset = "0xFB5274", VA = "0xFB5274", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0xFB527C", Offset = "0xFB527C", VA = "0xFB527C", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xFB50BC", Offset = "0xFB50BC", VA = "0xFB50BC")]
		[DebuggerHidden]
		public <FreeTeleport>c__Iterator0()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xFB50C4", Offset = "0xFB50C4", VA = "0xFB50C4", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xFB5284", Offset = "0xFB5284", VA = "0xFB5284", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xFB5298", Offset = "0xFB5298", VA = "0xFB5298", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000FB3")]
	private const float LocalTeleportVolume = 0.25f;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Tile m_previousTile;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tile m_targetTile;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int m_initialCostOfSpell;

	[Token(Token = "0x14000008")]
	public event Action<Tile, Tile> OnTeleportSuccessful
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0xFB3950", Offset = "0xFB3950", VA = "0xFB3950")]
		add
		{
		}
		[Token(Token = "0x600121C")]
		[Address(RVA = "0xFB3A3C", Offset = "0xFB3A3C", VA = "0xFB3A3C")]
		remove
		{
		}
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xFB3948", Offset = "0xFB3948", VA = "0xFB3948")]
	public Tile_Teleport()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xFB3B28", Offset = "0xFB3B28", VA = "0xFB3B28", Slot = "14")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xFB3B5C", Offset = "0xFB3B5C", VA = "0xFB3B5C", Slot = "26")]
	public override void OnSpellSelect()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xFB3C04", Offset = "0xFB3C04", VA = "0xFB3C04", Slot = "17")]
	public override void SpellPress()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xFB3C40", Offset = "0xFB3C40", VA = "0xFB3C40", Slot = "20")]
	protected override void OnPress()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xFB3F78", Offset = "0xFB3F78", VA = "0xFB3F78", Slot = "21")]
	protected override void OnHold()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xFB4084", Offset = "0xFB4084", VA = "0xFB4084", Slot = "19")]
	public override void SpellRelease(bool forceRelease = false)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xFB41B4", Offset = "0xFB41B4", VA = "0xFB41B4", Slot = "22")]
	protected override void OnRelease(bool forceRelease = false)
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xFB41B8", Offset = "0xFB41B8", VA = "0xFB41B8")]
	private void OnTileOccupiedChecked(Tile tile, bool sucessfullyOccupied)
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xFB44D4", Offset = "0xFB44D4", VA = "0xFB44D4")]
	private void SpawnStartEffect(Vector3 startPosition)
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xFB49DC", Offset = "0xFB49DC", VA = "0xFB49DC")]
	private void OnStart()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xFB4A98", Offset = "0xFB4A98", VA = "0xFB4A98")]
	private void OnEnd()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xFB4D94", Offset = "0xFB4D94", VA = "0xFB4D94", Slot = "25")]
	public override bool CanCast()
	{
		return default(bool);
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xFB4FC8", Offset = "0xFB4FC8", VA = "0xFB4FC8", Slot = "24")]
	public override void AbortSpellCasting(bool discret, bool backButtonForce = false)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xFB4FE0", Offset = "0xFB4FE0", VA = "0xFB4FE0")]
	public void SetFreeTeleport(float freeTimeAmount)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xFB5030", Offset = "0xFB5030", VA = "0xFB5030")]
	[DebuggerHidden]
	private IEnumerator FreeTeleport(float freeTimeAmount)
	{
		return null;
	}
}
[Token(Token = "0x20002B4")]
public class Tile_TeleportRandom : SpellBase_Teleport
{
	[Token(Token = "0x4000FB8")]
	private const float LocalTeleportVolume = 0.25f;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Tile m_previousTile;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tile m_randomTile;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private EventToken m_matchResetEventToken;

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xFB52FC", Offset = "0xFB52FC", VA = "0xFB52FC")]
	public Tile_TeleportRandom()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xFB5304", Offset = "0xFB5304", VA = "0xFB5304", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xFB53CC", Offset = "0xFB53CC", VA = "0xFB53CC", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xFB5450", Offset = "0xFB5450", VA = "0xFB5450")]
	private void OnMatchReset(Events.MatchResetEvent obj)
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xFB5460", Offset = "0xFB5460", VA = "0xFB5460")]
	public void AutoCast(Tile currentTile)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xFB56E4", Offset = "0xFB56E4", VA = "0xFB56E4", Slot = "20")]
	protected override void OnPress()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xFB5A4C", Offset = "0xFB5A4C", VA = "0xFB5A4C", Slot = "21")]
	protected override void OnHold()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xFB5A50", Offset = "0xFB5A50", VA = "0xFB5A50", Slot = "22")]
	protected override void OnRelease(bool forceRelease = false)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xFB5458", Offset = "0xFB5458", VA = "0xFB5458")]
	private void OnReset()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xFB5A5C", Offset = "0xFB5A5C", VA = "0xFB5A5C")]
	private void OnTileOccupiedChecked(Tile tile, bool sucessfullyOccupied)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xFB5DC4", Offset = "0xFB5DC4", VA = "0xFB5DC4")]
	private void OnStart()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xFB6098", Offset = "0xFB6098", VA = "0xFB6098")]
	private void OnEnd()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xFB6310", Offset = "0xFB6310", VA = "0xFB6310", Slot = "25")]
	public override bool CanCast()
	{
		return default(bool);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xFB55A4", Offset = "0xFB55A4", VA = "0xFB55A4")]
	private bool CanGetRandomTile(out Tile newTile)
	{
		return default(bool);
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xFB63EC", Offset = "0xFB63EC", VA = "0xFB63EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC87F08", Offset = "0xC87F08")]
	private void <AutoCast>m__0(Tile tile, bool success)
	{
	}
}
namespace Assets.Scripts.Spells.TileEffects
{
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC87F18", Offset = "0xC87F18")]
	public class Acid : TileEffectBase, ITileTimedEffect, IEffectEmitter
	{
		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8816C", Offset = "0xC8816C")]
		private sealed class <LatentStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Acid $this;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005C9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AD3")]
				[Address(RVA = "0x12C1EA8", Offset = "0x12C1EA8", VA = "0x12C1EA8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AD4")]
				[Address(RVA = "0x12C1EB0", Offset = "0x12C1EB0", VA = "0x12C1EB0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x12C1154", Offset = "0x12C1154", VA = "0x12C1154")]
			[DebuggerHidden]
			public <LatentStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0x12C1CF4", Offset = "0x12C1CF4", VA = "0x12C1CF4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x12C1EB8", Offset = "0x12C1EB8", VA = "0x12C1EB8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x12C1ECC", Offset = "0x12C1ECC", VA = "0x12C1ECC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC881CC", Offset = "0xC881CC")]
		private sealed class <LatentDestroy>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Acid $this;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005CB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AD9")]
				[Address(RVA = "0x12C1C6C", Offset = "0x12C1C6C", VA = "0x12C1C6C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ADA")]
				[Address(RVA = "0x12C1C74", Offset = "0x12C1C74", VA = "0x12C1C74", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x12C115C", Offset = "0x12C115C", VA = "0x12C115C")]
			[DebuggerHidden]
			public <LatentDestroy>c__Iterator1()
			{
			}

			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0x12C19B4", Offset = "0x12C19B4", VA = "0x12C19B4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x12C1C7C", Offset = "0x12C1C7C", VA = "0x12C1C7C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x12C1C90", Offset = "0x12C1C90", VA = "0x12C1C90", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC87F7C", Offset = "0xC87F7C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC87F7C", Offset = "0xC87F7C")]
		private float m_stopToDisableTime;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC87FEC", Offset = "0xC87FEC")]
		private Light m_pointLight;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC88038", Offset = "0xC88038")]
		private float m_lightIntensity;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_dmgDealt;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_dmg;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_maxDmg;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88084", Offset = "0xC88084")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88084", Offset = "0xC88084")]
		private ParticleSystem[] <Emitters>k__BackingField;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC880C0", Offset = "0xC880C0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC880C0", Offset = "0xC880C0")]
		private AudioSource <LoopingAudioSource>k__BackingField;

		[Token(Token = "0x170002D7")]
		public ParticleSystem[] Emitters
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x12C0E88", Offset = "0x12C0E88", VA = "0x12C0E88", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC880FC", Offset = "0xC880FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x12C0E90", Offset = "0x12C0E90", VA = "0x12C0E90", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8810C", Offset = "0xC8810C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public AudioSource LoopingAudioSource
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x12C0E98", Offset = "0x12C0E98", VA = "0x12C0E98", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8811C", Offset = "0xC8811C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x12C0EA0", Offset = "0x12C0EA0", VA = "0x12C0EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8812C", Offset = "0xC8812C")]
			private set
			{
			}
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x12C0E70", Offset = "0x12C0E70", VA = "0x12C0E70")]
		public Acid()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x12C0EA8", Offset = "0x12C0EA8", VA = "0x12C0EA8", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x12C0ED4", Offset = "0x12C0ED4", VA = "0x12C0ED4", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x12C103C", Offset = "0x12C103C", VA = "0x12C103C", Slot = "22")]
		[DebuggerHidden]
		public IEnumerator LatentStart(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x12C10C8", Offset = "0x12C10C8", VA = "0x12C10C8", Slot = "23")]
		[DebuggerHidden]
		public IEnumerator LatentDestroy(float time)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x12C1164", Offset = "0x12C1164", VA = "0x12C1164")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x12C1314", Offset = "0x12C1314", VA = "0x12C1314", Slot = "16")]
		public override void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x12C1564", Offset = "0x12C1564", VA = "0x12C1564", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x12C1790", Offset = "0x12C1790", VA = "0x12C1790", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x12C1384", Offset = "0x12C1384", VA = "0x12C1384", Slot = "26")]
		public void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x12C1838", Offset = "0x12C1838", VA = "0x12C1838")]
		private void FadeLight(float targetIntensity, float fadeTime)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x12C18EC", Offset = "0x12C18EC", VA = "0x12C18EC", Slot = "19")]
		[PunRPC]
		protected override void PunDisableObject()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class CerberusCollars : TileEffectBase, ITileTrap, ITileTimedEffect
	{
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88390", Offset = "0xC88390")]
		private sealed class <LatentStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x170005CD")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002ADF")]
				[Address(RVA = "0x12C2AFC", Offset = "0x12C2AFC", VA = "0x12C2AFC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AE0")]
				[Address(RVA = "0x12C2B04", Offset = "0x12C2B04", VA = "0x12C2B04", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x12C2448", Offset = "0x12C2448", VA = "0x12C2448")]
			[DebuggerHidden]
			public <LatentStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0x12C2AEC", Offset = "0x12C2AEC", VA = "0x12C2AEC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x12C2B0C", Offset = "0x12C2B0C", VA = "0x12C2B0C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x12C2B10", Offset = "0x12C2B10", VA = "0x12C2B10", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC883F0", Offset = "0xC883F0")]
		private sealed class <ArmTrap>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float armTime;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CerberusCollars $this;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005CF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AE5")]
				[Address(RVA = "0x12C26D8", Offset = "0x12C26D8", VA = "0x12C26D8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AE6")]
				[Address(RVA = "0x12C26E0", Offset = "0x12C26E0", VA = "0x12C26E0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x12C2450", Offset = "0x12C2450", VA = "0x12C2450")]
			[DebuggerHidden]
			public <ArmTrap>c__Iterator1()
			{
			}

			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x12C24E0", Offset = "0x12C24E0", VA = "0x12C24E0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x12C26E8", Offset = "0x12C26E8", VA = "0x12C26E8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x12C26FC", Offset = "0x12C26FC", VA = "0x12C26FC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88450", Offset = "0xC88450")]
		private sealed class <LatentDestroy>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float armTime;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CerberusCollars $this;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005D1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AEB")]
				[Address(RVA = "0x12C2A64", Offset = "0x12C2A64", VA = "0x12C2A64", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AEC")]
				[Address(RVA = "0x12C2A6C", Offset = "0x12C2A6C", VA = "0x12C2A6C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x12C2458", Offset = "0x12C2458", VA = "0x12C2458")]
			[DebuggerHidden]
			public <LatentDestroy>c__Iterator2()
			{
			}

			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x12C2760", Offset = "0x12C2760", VA = "0x12C2760", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x12C2A74", Offset = "0x12C2A74", VA = "0x12C2A74", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x12C2A88", Offset = "0x12C2A88", VA = "0x12C2A88", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC884B0", Offset = "0xC884B0")]
		private sealed class <TrapWielder>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal CerberusCollars $this;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005D3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AF1")]
				[Address(RVA = "0x12C3014", Offset = "0x12C3014", VA = "0x12C3014", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF2")]
				[Address(RVA = "0x12C301C", Offset = "0x12C301C", VA = "0x12C301C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x12C24D8", Offset = "0x12C24D8", VA = "0x12C24D8")]
			[DebuggerHidden]
			public <TrapWielder>c__Iterator3()
			{
			}

			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x12C2B74", Offset = "0x12C2B74", VA = "0x12C2B74", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x12C3024", Offset = "0x12C3024", VA = "0x12C3024", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x12C3038", Offset = "0x12C3038", VA = "0x12C3038", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator m_animator;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DamageType m_dmgType;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_dmg;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8822C", Offset = "0xC8822C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8822C", Offset = "0xC8822C")]
		private bool <IsArmed>k__BackingField;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88268", Offset = "0xC88268")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88268", Offset = "0xC88268")]
		private bool <HasDeployed>k__BackingField;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC882A4", Offset = "0xC882A4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC882A4", Offset = "0xC882A4")]
		private AudioSource <LoopingAudioSource>k__BackingField;

		[Token(Token = "0x4000FCA")]
		private const string EndAudioClipName = "cerberus_end";

		[Token(Token = "0x4000FCB")]
		private const string EndTriggerName = "EndTangle";

		[Token(Token = "0x4000FCC")]
		private const float TrapWielderWaitTime = 0.1f;

		[Token(Token = "0x170002D9")]
		public bool IsArmed
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x12C1F38", Offset = "0x12C1F38", VA = "0x12C1F38", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC882E0", Offset = "0xC882E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x12C1F40", Offset = "0x12C1F40", VA = "0x12C1F40", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC882F0", Offset = "0xC882F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public bool HasDeployed
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x12C1F4C", Offset = "0x12C1F4C", VA = "0x12C1F4C", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88300", Offset = "0xC88300")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x12C1F54", Offset = "0x12C1F54", VA = "0x12C1F54", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88310", Offset = "0xC88310")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public AudioSource LoopingAudioSource
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x12C1F60", Offset = "0x12C1F60", VA = "0x12C1F60", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88320", Offset = "0xC88320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x12C1F68", Offset = "0x12C1F68", VA = "0x12C1F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88330", Offset = "0xC88330")]
			private set
			{
			}
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x12C1F30", Offset = "0x12C1F30", VA = "0x12C1F30")]
		public CerberusCollars()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x12C1F70", Offset = "0x12C1F70", VA = "0x12C1F70", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x12C1F9C", Offset = "0x12C1F9C", VA = "0x12C1F9C", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x12C2184", Offset = "0x12C2184", VA = "0x12C2184", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x12C22C0", Offset = "0x12C22C0", VA = "0x12C22C0", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x12C23EC", Offset = "0x12C23EC", VA = "0x12C23EC", Slot = "28")]
		[DebuggerHidden]
		public IEnumerator LatentStart(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x12C20F8", Offset = "0x12C20F8", VA = "0x12C20F8", Slot = "25")]
		[DebuggerHidden]
		public IEnumerator ArmTrap(float armTime)
		{
			return null;
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x12C2234", Offset = "0x12C2234", VA = "0x12C2234", Slot = "29")]
		[DebuggerHidden]
		public IEnumerator LatentDestroy(float armTime)
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x12C2460", Offset = "0x12C2460", VA = "0x12C2460", Slot = "19")]
		[PunRPC]
		protected override void PunDisableObject()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x12C23C0", Offset = "0x12C23C0", VA = "0x12C23C0", Slot = "26")]
		public void DeployTrap()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x12C246C", Offset = "0x12C246C", VA = "0x12C246C")]
		[DebuggerHidden]
		private IEnumerator TrapWielder()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public class Curse : TileEffectBase, ITileTimedEffect, IEffectEmitter
	{
		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88664", Offset = "0xC88664")]
		private sealed class <LatentStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Curse $this;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005D5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AF7")]
				[Address(RVA = "0xFC1A60", Offset = "0xFC1A60", VA = "0xFC1A60", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF8")]
				[Address(RVA = "0xFC1A68", Offset = "0xFC1A68", VA = "0xFC1A68", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0xFC1924", Offset = "0xFC1924", VA = "0xFC1924")]
			[DebuggerHidden]
			public <LatentStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xFC192C", Offset = "0xFC192C", VA = "0xFC192C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0xFC1A70", Offset = "0xFC1A70", VA = "0xFC1A70", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0xFC1A84", Offset = "0xFC1A84", VA = "0xFC1A84", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC886C4", Offset = "0xC886C4")]
		private sealed class <CurseWielder>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Curse $this;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005D7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002AFD")]
				[Address(RVA = "0xFC180C", Offset = "0xFC180C", VA = "0xFC180C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AFE")]
				[Address(RVA = "0xFC1814", Offset = "0xFC1814", VA = "0xFC1814", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xFC152C", Offset = "0xFC152C", VA = "0xFC152C")]
			[DebuggerHidden]
			public <CurseWielder>c__Iterator1()
			{
			}

			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0xFC1534", Offset = "0xFC1534", VA = "0xFC1534", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xFC181C", Offset = "0xFC181C", VA = "0xFC181C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0xFC1830", Offset = "0xFC1830", VA = "0xFC1830", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88724", Offset = "0xC88724")]
		private sealed class <LatentDestroy>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x170005D9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B03")]
				[Address(RVA = "0xFC18AC", Offset = "0xFC18AC", VA = "0xFC18AC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B04")]
				[Address(RVA = "0xFC18B4", Offset = "0xFC18B4", VA = "0xFC18B4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xFC1894", Offset = "0xFC1894", VA = "0xFC1894")]
			[DebuggerHidden]
			public <LatentDestroy>c__Iterator2()
			{
			}

			[Token(Token = "0x6002B02")]
			[Address(RVA = "0xFC189C", Offset = "0xFC189C", VA = "0xFC189C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xFC18BC", Offset = "0xFC18BC", VA = "0xFC18BC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B06")]
			[Address(RVA = "0xFC18C0", Offset = "0xFC18C0", VA = "0xFC18C0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC88510", Offset = "0xC88510")]
		[SerializeField]
		private GameObject m_effectObject;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_disableOnDeploy;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8856C", Offset = "0xC8856C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8856C", Offset = "0xC8856C")]
		private ParticleSystem[] <Emitters>k__BackingField;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC885A8", Offset = "0xC885A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC885A8", Offset = "0xC885A8")]
		private AudioSource <LoopingAudioSource>k__BackingField;

		[Token(Token = "0x170002DC")]
		public ParticleSystem[] Emitters
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x12C30A4", Offset = "0x12C30A4", VA = "0x12C30A4", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC885E4", Offset = "0xC885E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x12C30AC", Offset = "0x12C30AC", VA = "0x12C30AC", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC885F4", Offset = "0xC885F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public AudioSource LoopingAudioSource
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x12C30B4", Offset = "0x12C30B4", VA = "0x12C30B4", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88604", Offset = "0xC88604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x12C30BC", Offset = "0x12C30BC", VA = "0x12C30BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88614", Offset = "0xC88614")]
			private set
			{
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x12C309C", Offset = "0x12C309C", VA = "0x12C309C")]
		public Curse()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x12C30C4", Offset = "0x12C30C4", VA = "0x12C30C4", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12C30F0", Offset = "0x12C30F0", VA = "0x12C30F0", Slot = "16")]
		public override void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x12C3348", Offset = "0x12C3348", VA = "0x12C3348", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x12C34C4", Offset = "0x12C34C4", VA = "0x12C34C4", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x12C3908", Offset = "0x12C3908", VA = "0x12C3908", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x12C3438", Offset = "0x12C3438", VA = "0x12C3438", Slot = "22")]
		[DebuggerHidden]
		public IEnumerator LatentStart(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x12C389C", Offset = "0x12C389C", VA = "0x12C389C")]
		[DebuggerHidden]
		private IEnumerator CurseWielder()
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x12C390C", Offset = "0x12C390C", VA = "0x12C390C")]
		[PunRPC]
		private void PunDisableCurse()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x12C39FC", Offset = "0x12C39FC", VA = "0x12C39FC", Slot = "23")]
		[DebuggerHidden]
		public IEnumerator LatentDestroy(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x12C3170", Offset = "0x12C3170", VA = "0x12C3170", Slot = "26")]
		public void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class Oxymora : Summoned
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Quaternion m_networkRotation;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xFC2B7C", Offset = "0xFC2B7C", VA = "0xFC2B7C")]
		public Oxymora()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xFC2BF4", Offset = "0xFC2BF4", VA = "0xFC2BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xFC2C18", Offset = "0xFC2C18", VA = "0xFC2C18", Slot = "23")]
		protected override void WriteAdditional(PhotonStream stream)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xFC2CE0", Offset = "0xFC2CE0", VA = "0xFC2CE0", Slot = "24")]
		protected override void ReadAdditional(PhotonStream stream)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xFC2DF8", Offset = "0xFC2DF8", VA = "0xFC2DF8", Slot = "26")]
		protected override void ShowHead(bool show)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xFC30A8", Offset = "0xFC30A8", VA = "0xFC30A8", Slot = "28")]
		protected override void SetTemporarilyDisabled(bool disabled, float timeDisabled = 0f)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xFC326C", Offset = "0xFC326C", VA = "0xFC326C", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xFC36E0", Offset = "0xFC36E0", VA = "0xFC36E0", Slot = "25")]
		protected override void Rotate()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class Prison : TileEffectBase, ITileTimedEffect
	{
		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88810", Offset = "0xC88810")]
		private sealed class <LatentStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Prison $this;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005DB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B09")]
				[Address(RVA = "0xFC5008", Offset = "0xFC5008", VA = "0xFC5008", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B0A")]
				[Address(RVA = "0xFC5010", Offset = "0xFC5010", VA = "0xFC5010", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0xFC4000", Offset = "0xFC4000", VA = "0xFC4000")]
			[DebuggerHidden]
			public <LatentStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xFC4DF8", Offset = "0xFC4DF8", VA = "0xFC4DF8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0xFC5018", Offset = "0xFC5018", VA = "0xFC5018", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0xFC502C", Offset = "0xFC502C", VA = "0xFC502C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88870", Offset = "0xC88870")]
		private sealed class <LatentDestroy>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Prison $this;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005DD")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B0F")]
				[Address(RVA = "0xFC4D70", Offset = "0xFC4D70", VA = "0xFC4D70", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B10")]
				[Address(RVA = "0xFC4D78", Offset = "0xFC4D78", VA = "0xFC4D78", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xFC4008", Offset = "0xFC4008", VA = "0xFC4008")]
			[DebuggerHidden]
			public <LatentDestroy>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xFC4B4C", Offset = "0xFC4B4C", VA = "0xFC4B4C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0xFC4D80", Offset = "0xFC4D80", VA = "0xFC4D80", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xFC4D94", Offset = "0xFC4D94", VA = "0xFC4D94", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PrisonDissolver m_prison;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Summoned m_targetSummoned;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88784", Offset = "0xC88784")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88784", Offset = "0xC88784")]
		private readonly AudioSource <LoopingAudioSource>k__BackingField;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC887C0", Offset = "0xC887C0")]
		private static Predicate<TileEffectBase> <>f__am$cache0;

		[Token(Token = "0x170002DE")]
		public AudioSource LoopingAudioSource
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xFC3CF8", Offset = "0xFC3CF8", VA = "0xFC3CF8", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC887D0", Offset = "0xC887D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xFC3CE8", Offset = "0xFC3CE8", VA = "0xFC3CE8")]
		public Prison()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xFC3D00", Offset = "0xFC3D00", VA = "0xFC3D00", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xFC3DD0", Offset = "0xFC3DD0", VA = "0xFC3DD0", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xFC3ED0", Offset = "0xFC3ED0", VA = "0xFC3ED0", Slot = "22")]
		[DebuggerHidden]
		public IEnumerator LatentStart(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xFC3F64", Offset = "0xFC3F64", VA = "0xFC3F64", Slot = "23")]
		[DebuggerHidden]
		public IEnumerator LatentDestroy(float time)
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xFC4010", Offset = "0xFC4010", VA = "0xFC4010", Slot = "17")]
		protected override void CutConnectedTile()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xFC43F4", Offset = "0xFC43F4", VA = "0xFC43F4", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xFC48A4", Offset = "0xFC48A4", VA = "0xFC48A4", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xFC4960", Offset = "0xFC4960", VA = "0xFC4960", Slot = "20")]
		protected override void SetTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xFC4ACC", Offset = "0xFC4ACC", VA = "0xFC4ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88800", Offset = "0xC88800")]
		private static bool <TileOccupy>m__0(TileEffectBase aoe)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BA")]
	public class RotatingPoolObject : PoolObject
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0xFC5090", Offset = "0xFC5090", VA = "0xFC5090")]
		public RotatingPoolObject()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xFC50A0", Offset = "0xFC50A0", VA = "0xFC50A0", Slot = "9")]
		[PunRPC]
		public override void PunEnableObject(Vector3 position, params object[] data)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class SkullSpecter : Summoned
	{
		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88920", Offset = "0xC88920")]
		private sealed class <TurnAndFire>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TurretSkullSpecter <turret>__0;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector3 <targetPoint>__0;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool <hasTarget>__0;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal SkullSpecter $this;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x170005DF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B15")]
				[Address(RVA = "0xFC6A34", Offset = "0xFC6A34", VA = "0xFC6A34", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B16")]
				[Address(RVA = "0xFC6A3C", Offset = "0xFC6A3C", VA = "0xFC6A3C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B13")]
			[Address(RVA = "0xFC54F4", Offset = "0xFC54F4", VA = "0xFC54F4")]
			[DebuggerHidden]
			public <TurnAndFire>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xFC5714", Offset = "0xFC5714", VA = "0xFC5714", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xFC6A44", Offset = "0xFC6A44", VA = "0xFC6A44", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xFC6A58", Offset = "0xFC6A58", VA = "0xFC6A58", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FD7")]
		private const float RotationTime = 0.35f;

		[Token(Token = "0x4000FD8")]
		private const float DisableWaitTime = 0.5f;

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xFC53E4", Offset = "0xFC53E4", VA = "0xFC53E4")]
		public SkullSpecter()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xFC53E8", Offset = "0xFC53E8", VA = "0xFC53E8", Slot = "26")]
		protected override void ShowHead(bool show)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xFC5484", Offset = "0xFC5484", VA = "0xFC5484", Slot = "22")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xFC5488", Offset = "0xFC5488", VA = "0xFC5488")]
		[DebuggerHidden]
		private IEnumerator TurnAndFire()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xFC54FC", Offset = "0xFC54FC", VA = "0xFC54FC")]
		public void RotateTowardsOpponent(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xFC5630", Offset = "0xFC5630", VA = "0xFC5630")]
		[PunRPC]
		private void PunRotateTowardsOpponent(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xFC568C", Offset = "0xFC568C", VA = "0xFC568C", Slot = "19")]
		[PunRPC]
		protected override void PunDisableObject()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class Spell_CerberusCollars : Tile_AreaEffect
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xFC6ABC", Offset = "0xFC6ABC", VA = "0xFC6ABC")]
		public Spell_CerberusCollars()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xFC6AC4", Offset = "0xFC6AC4", VA = "0xFC6AC4", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xFC6BB4", Offset = "0xFC6BB4", VA = "0xFC6BB4", Slot = "40")]
		protected override void CastEffect()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xFC6BE8", Offset = "0xFC6BE8", VA = "0xFC6BE8", Slot = "41")]
		protected override void InstantiateAreaEffect()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class Spell_CurseOfTheUndead : Tile_AreaEffect
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xFC6F14", Offset = "0xFC6F14", VA = "0xFC6F14")]
		public Spell_CurseOfTheUndead()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xFC6F1C", Offset = "0xFC6F1C", VA = "0xFC6F1C", Slot = "40")]
		protected override void CastEffect()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class Spell_Oxymora : SpellBase_Summon
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyDictionary<string, string> sm_spellDescriptionParams;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC88980", Offset = "0xC88980")]
		[SerializeField]
		private int m_projectileHeal;

		[Token(Token = "0x170002DF")]
		public int ProjectileHeal
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xFC36D0", Offset = "0xFC36D0", VA = "0xFC36D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC889CC", Offset = "0xC889CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xFC6F50", Offset = "0xFC6F50", VA = "0xFC6F50")]
		public Spell_Oxymora()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xFC6F60", Offset = "0xFC6F60", VA = "0xFC6F60", Slot = "16")]
		public override IReadOnlyDictionary<string, string> GetSpellDescriptionParams()
		{
			return null;
		}
	}
	[Token(Token = "0x20002BF")]
	public class Spell_SkullSpecter : SpellBase_Summon
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0xFC7050", Offset = "0xFC7050", VA = "0xFC7050")]
		public Spell_SkullSpecter()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xFC7058", Offset = "0xFC7058", VA = "0xFC7058", Slot = "41")]
		protected override void InstantiateAreaEffect()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class Spikes : TileEffectBase, ITileTrap
	{
		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88B04", Offset = "0xC88B04")]
		private sealed class <ArmTrap>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float armTime;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spikes $this;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005E1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B1B")]
				[Address(RVA = "0xFC85DC", Offset = "0xFC85DC", VA = "0xFC85DC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1C")]
				[Address(RVA = "0xFC85E4", Offset = "0xFC85E4", VA = "0xFC85E4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xFC7928", Offset = "0xFC7928", VA = "0xFC7928")]
			[DebuggerHidden]
			public <ArmTrap>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xFC8444", Offset = "0xFC8444", VA = "0xFC8444", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xFC85EC", Offset = "0xFC85EC", VA = "0xFC85EC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0xFC8600", Offset = "0xFC8600", VA = "0xFC8600", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88B64", Offset = "0xC88B64")]
		private sealed class <TrapWielder>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spikes $this;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005E3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B21")]
				[Address(RVA = "0xFC8DD8", Offset = "0xFC8DD8", VA = "0xFC8DD8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B22")]
				[Address(RVA = "0xFC8DE0", Offset = "0xFC8DE0", VA = "0xFC8DE0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0xFC7A10", Offset = "0xFC7A10", VA = "0xFC7A10")]
			[DebuggerHidden]
			public <TrapWielder>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xFC8B30", Offset = "0xFC8B30", VA = "0xFC8B30", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0xFC8DE8", Offset = "0xFC8DE8", VA = "0xFC8DE8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B24")]
			[Address(RVA = "0xFC8DFC", Offset = "0xFC8DFC", VA = "0xFC8DFC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88BC4", Offset = "0xC88BC4")]
		private sealed class <TrapObject>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spikes $this;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B27")]
				[Address(RVA = "0xFC8AA8", Offset = "0xFC8AA8", VA = "0xFC8AA8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B28")]
				[Address(RVA = "0xFC8AB0", Offset = "0xFC8AB0", VA = "0xFC8AB0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B25")]
			[Address(RVA = "0xFC7A18", Offset = "0xFC7A18", VA = "0xFC7A18")]
			[DebuggerHidden]
			public <TrapObject>c__Iterator2()
			{
			}

			[Token(Token = "0x6002B26")]
			[Address(RVA = "0xFC88AC", Offset = "0xFC88AC", VA = "0xFC88AC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xFC8AB8", Offset = "0xFC8AB8", VA = "0xFC8AB8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0xFC8ACC", Offset = "0xFC8ACC", VA = "0xFC8ACC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88C24", Offset = "0xC88C24")]
		private sealed class <LowerSpikes>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Spikes $this;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005E7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B2D")]
				[Address(RVA = "0xFC8824", Offset = "0xFC8824", VA = "0xFC8824", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B2E")]
				[Address(RVA = "0xFC882C", Offset = "0xFC882C", VA = "0xFC882C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xFC843C", Offset = "0xFC843C", VA = "0xFC843C")]
			[DebuggerHidden]
			public <LowerSpikes>c__Iterator3()
			{
			}

			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0xFC8664", Offset = "0xFC8664", VA = "0xFC8664", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xFC8834", Offset = "0xFC8834", VA = "0xFC8834", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B30")]
			[Address(RVA = "0xFC8848", Offset = "0xFC8848", VA = "0xFC8848", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ParticleSystem m_explosionParticles;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SpikeActivator[] m_spikes;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DamageType m_dmgType;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_dmg;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC889EC", Offset = "0xC889EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC889EC", Offset = "0xC889EC")]
		private bool <IsArmed>k__BackingField;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88A28", Offset = "0xC88A28")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88A28", Offset = "0xC88A28")]
		private bool <HasDeployed>k__BackingField;

		[Token(Token = "0x170002E0")]
		public bool IsArmed
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xFC73A0", Offset = "0xFC73A0", VA = "0xFC73A0", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88A64", Offset = "0xC88A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xFC73A8", Offset = "0xFC73A8", VA = "0xFC73A8", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88A74", Offset = "0xC88A74")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public bool HasDeployed
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xFC73B4", Offset = "0xFC73B4", VA = "0xFC73B4", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88A84", Offset = "0xC88A84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xFC73BC", Offset = "0xFC73BC", VA = "0xFC73BC", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88A94", Offset = "0xC88A94")]
			set
			{
			}
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xFC7398", Offset = "0xFC7398", VA = "0xFC7398")]
		public Spikes()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xFC73C8", Offset = "0xFC73C8", VA = "0xFC73C8", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xFC73F0", Offset = "0xFC73F0", VA = "0xFC73F0", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xFC76F8", Offset = "0xFC76F8", VA = "0xFC76F8", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xFC7914", Offset = "0xFC7914", VA = "0xFC7914", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xFC766C", Offset = "0xFC766C", VA = "0xFC766C", Slot = "25")]
		[DebuggerHidden]
		public IEnumerator ArmTrap(float armTime)
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xFC76FC", Offset = "0xFC76FC", VA = "0xFC76FC", Slot = "26")]
		public void DeployTrap()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xFC7938", Offset = "0xFC7938", VA = "0xFC7938")]
		[DebuggerHidden]
		private IEnumerator TrapWielder()
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xFC79A4", Offset = "0xFC79A4", VA = "0xFC79A4")]
		[DebuggerHidden]
		private IEnumerator TrapObject()
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xFC7A20", Offset = "0xFC7A20", VA = "0xFC7A20")]
		private void SetSpikesActive(bool enable)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xFC74D4", Offset = "0xFC74D4", VA = "0xFC74D4")]
		[PunRPC]
		private void PunSetSpikesActive(bool enable)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xFC7D24", Offset = "0xFC7D24", VA = "0xFC7D24", Slot = "19")]
		[PunRPC]
		protected override void PunDisableObject()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xFC8008", Offset = "0xFC8008", VA = "0xFC8008")]
		private void DealDamageToWielder()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xFC8108", Offset = "0xFC8108", VA = "0xFC8108")]
		private void DealDamageToObject(PhotonView occupant)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xFC83D0", Offset = "0xFC83D0", VA = "0xFC83D0")]
		[DebuggerHidden]
		private IEnumerator LowerSpikes()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C1")]
	public class StoneDemon : Summoned
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC88C84", Offset = "0xC88C84")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 m_localStartPos;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_animSpeed;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TurretDemon m_turretDemon;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventToken m_tilesUpdatedEventToken;

		[Token(Token = "0x170002E2")]
		public Collider Collider
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xFC8EFC", Offset = "0xFC8EFC", VA = "0xFC8EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xFC8E60", Offset = "0xFC8E60", VA = "0xFC8E60")]
		public StoneDemon()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xFC8E70", Offset = "0xFC8E70", VA = "0xFC8E70", Slot = "22")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xFC8F04", Offset = "0xFC8F04", VA = "0xFC8F04", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xFC9148", Offset = "0xFC9148", VA = "0xFC9148", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xFC9374", Offset = "0xFC9374", VA = "0xFC9374")]
		protected void Update()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xFC96BC", Offset = "0xFC96BC", VA = "0xFC96BC")]
		private void OnTileOccupied(Tile tile)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xFC9954", Offset = "0xFC9954", VA = "0xFC9954", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xFC9C64", Offset = "0xFC9C64", VA = "0xFC9C64", Slot = "26")]
		protected override void ShowHead(bool show)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xFCA024", Offset = "0xFCA024", VA = "0xFCA024", Slot = "25")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xFCA328", Offset = "0xFCA328", VA = "0xFCA328")]
		private void RotateTowardTarget()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xFC93C4", Offset = "0xFC93C4", VA = "0xFC93C4")]
		private void Animate()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public abstract class Summoned : TileEffectBase, IPunObservable
	{
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88F00", Offset = "0xC88F00")]
		private sealed class <SetEffectActive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Tile_AreaEffect creator;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool enable;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Summoned $this;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005E9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B33")]
				[Address(RVA = "0xFCC360", Offset = "0xFCC360", VA = "0xFCC360", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B34")]
				[Address(RVA = "0xFCC368", Offset = "0xFCC368", VA = "0xFCC368", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xFCB0BC", Offset = "0xFCB0BC", VA = "0xFCB0BC")]
			[DebuggerHidden]
			public <SetEffectActive>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xFCC1A0", Offset = "0xFCC1A0", VA = "0xFCC1A0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xFCC370", Offset = "0xFCC370", VA = "0xFCC370", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xFCC384", Offset = "0xFCC384", VA = "0xFCC384", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88F60", Offset = "0xC88F60")]
		private sealed class <DestroyAfterTime>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float waitTime;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Summoned $this;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005EB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B39")]
				[Address(RVA = "0xFCC118", Offset = "0xFCC118", VA = "0xFCC118", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3A")]
				[Address(RVA = "0xFCC120", Offset = "0xFCC120", VA = "0xFCC120", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xFCB4E4", Offset = "0xFCB4E4", VA = "0xFCB4E4")]
			[DebuggerHidden]
			public <DestroyAfterTime>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xFCBF50", Offset = "0xFCBF50", VA = "0xFCBF50", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xFCC128", Offset = "0xFCC128", VA = "0xFCC128", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xFCC13C", Offset = "0xFCC13C", VA = "0xFCC13C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88FC0", Offset = "0xC88FC0")]
		private sealed class <SetTemporarilyDisabledAfterDelay>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float timeUntilSet;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool disabled;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Summoned $this;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005ED")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B3F")]
				[Address(RVA = "0xFCC4E8", Offset = "0xFCC4E8", VA = "0xFCC4E8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B40")]
				[Address(RVA = "0xFCC4F0", Offset = "0xFCC4F0", VA = "0xFCC4F0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xFCBE70", Offset = "0xFCBE70", VA = "0xFCBE70")]
			[DebuggerHidden]
			public <SetTemporarilyDisabledAfterDelay>c__Iterator2()
			{
			}

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xFCC3E8", Offset = "0xFCC3E8", VA = "0xFCC3E8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xFCC4F8", Offset = "0xFCC4F8", VA = "0xFCC4F8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xFCC50C", Offset = "0xFCC50C", VA = "0xFCC50C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC88CD0", Offset = "0xC88CD0")]
		[SerializeField]
		protected GameObject m_effectObject;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected TurretBase m_turret;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected CharacterStatsUI m_statsUI;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected float m_rotationSpeed;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_dissolveTime;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected Renderer[] m_dissolveRenderers;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool m_isDestroying;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody m_rigidBody;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Quaternion m_networkTurretRotation;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_startDurability;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_damageToTakeWhenInitialized;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine m_disabledResetCoroutine;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private StatsData m_healthData;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88D6C", Offset = "0xC88D6C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88D6C", Offset = "0xC88D6C")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88DA8", Offset = "0xC88DA8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88DA8", Offset = "0xC88DA8")]
		private bool <IsTemporarilyDisabled>k__BackingField;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88DE4", Offset = "0xC88DE4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC88DE4", Offset = "0xC88DE4")]
		private bool <IsRotationActive>k__BackingField;

		[Token(Token = "0x170002E3")]
		public bool IsInitialized
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0xFCA840", Offset = "0xFCA840", VA = "0xFCA840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E20", Offset = "0xC88E20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xFCA848", Offset = "0xFCA848", VA = "0xFCA848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E30", Offset = "0xC88E30")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public bool IsTemporarilyDisabled
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xFCA320", Offset = "0xFCA320", VA = "0xFCA320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E40", Offset = "0xC88E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xFCA854", Offset = "0xFCA854", VA = "0xFCA854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E50", Offset = "0xC88E50")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public float Durability
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xFCA860", Offset = "0xFCA860", VA = "0xFCA860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E60", Offset = "0xC88E60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E6")]
		public TurretBase Turret
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xFC83C8", Offset = "0xFC83C8", VA = "0xFC83C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E70", Offset = "0xC88E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		protected bool IsRotationActive
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xFC3CD8", Offset = "0xFC3CD8", VA = "0xFC3CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E80", Offset = "0xC88E80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xFCA88C", Offset = "0xFCA88C", VA = "0xFCA88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC88E90", Offset = "0xC88E90")]
			private set
			{
			}
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xFC2B80", Offset = "0xFC2B80", VA = "0xFC2B80")]
		protected Summoned()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xFC8FB8", Offset = "0xFC8FB8", VA = "0xFC8FB8", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xFC9264", Offset = "0xFC9264", VA = "0xFC9264", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xFC8EF8", Offset = "0xFC8EF8", VA = "0xFC8EF8", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xFCA9FC", Offset = "0xFCA9FC", VA = "0xFCA9FC", Slot = "15")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xFCAB74", Offset = "0xFCAB74", VA = "0xFCAB74", Slot = "21")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xFCAF18", Offset = "0xFCAF18", VA = "0xFCAF18", Slot = "23")]
		protected virtual void WriteAdditional(PhotonStream stream)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xFCAF1C", Offset = "0xFCAF1C", VA = "0xFCAF1C", Slot = "24")]
		protected virtual void ReadAdditional(PhotonStream stream)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xFC348C", Offset = "0xFC348C", VA = "0xFC348C", Slot = "10")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xFCB0B0", Offset = "0xFCB0B0", VA = "0xFCB0B0", Slot = "11")]
		protected override void TileOccupy()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xFCB0B4", Offset = "0xFCB0B4", VA = "0xFCB0B4", Slot = "12")]
		protected override void TileUnoccupy()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xFCB0B8", Offset = "0xFCB0B8", VA = "0xFCB0B8", Slot = "25")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60012C5")]
		protected abstract void ShowHead(bool show);

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xFC31C4", Offset = "0xFC31C4", VA = "0xFC31C4")]
		[DebuggerHidden]
		protected IEnumerator SetEffectActive(Tile_AreaEffect creator, bool enable)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xFCB0C4", Offset = "0xFCB0C4", VA = "0xFCB0C4")]
		public void DisableSummonedAndReturnToPool()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xFCAF20", Offset = "0xFCAF20", VA = "0xFCAF20")]
		public void OnHit(float damage)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xFCB234", Offset = "0xFCB234", VA = "0xFCB234")]
		[PunRPC]
		protected void PunSummonedHit(float damage)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xFCB0F8", Offset = "0xFCB0F8", VA = "0xFCB0F8")]
		private void CheckDestroyCondition()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xFCB29C", Offset = "0xFCB29C", VA = "0xFCB29C")]
		[PunRPC]
		protected void PunDisableSummoned()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xFCB458", Offset = "0xFCB458", VA = "0xFCB458")]
		[DebuggerHidden]
		protected IEnumerator DestroyAfterTime(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xFCB4EC", Offset = "0xFCB4EC", VA = "0xFCB4EC", Slot = "18")]
		public override void DisableObject()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xFC56C4", Offset = "0xFC56C4", VA = "0xFC56C4", Slot = "19")]
		[PunRPC]
		protected override void PunDisableObject()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xFCBDB8", Offset = "0xFCBDB8", VA = "0xFCBDB8", Slot = "27")]
		public virtual void SetRotationActive(bool active)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xFC3138", Offset = "0xFC3138", VA = "0xFC3138", Slot = "28")]
		protected virtual void SetTemporarilyDisabled(bool disabled, float timeDisabled = 0f)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xFCBDC4", Offset = "0xFCBDC4", VA = "0xFCBDC4")]
		[DebuggerHidden]
		private IEnumerator SetTemporarilyDisabledAfterDelay(bool disabled, float timeUntilSet)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xFCBE78", Offset = "0xFCBE78", VA = "0xFCBE78")]
		public void SetDissolveRenderer(int index, float value)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89020", Offset = "0xC89020")]
	public abstract class TileEffectBase : MonoBehaviourPun, IPunInstantiateMagicCallback, IPauseObject, IPoolObject
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Spell m_spellType;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject m_core;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected SoundHandler m_soundHandler;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC890D0", Offset = "0xC890D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC890D0", Offset = "0xC890D0")]
		private Tile_AreaEffect <ConnectedSpell>k__BackingField;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8910C", Offset = "0xC8910C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8910C", Offset = "0xC8910C")]
		private bool <IsSetToDestroy>k__BackingField;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89148", Offset = "0xC89148")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89148", Offset = "0xC89148")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89184", Offset = "0xC89184")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89184", Offset = "0xC89184")]
		private Tile <ConnectedTile>k__BackingField;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC891C0", Offset = "0xC891C0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC891C0", Offset = "0xC891C0")]
		private Wielder <TargetWielder>k__BackingField;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC891FC", Offset = "0xC891FC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC891FC", Offset = "0xC891FC")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89238", Offset = "0xC89238")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89238", Offset = "0xC89238")]
		private float <TimeFrame>k__BackingField;

		[Token(Token = "0x170002E8")]
		public SoundHandler SoundHandler
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xFCC570", Offset = "0xFCC570", VA = "0xFCC570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89274", Offset = "0xC89274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public Tile_AreaEffect ConnectedSpell
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xFC1804", Offset = "0xFC1804", VA = "0xFC1804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89284", Offset = "0xC89284")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xFCC578", Offset = "0xFCC578", VA = "0xFCC578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89294", Offset = "0xC89294")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public bool IsSetToDestroy
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xFCC580", Offset = "0xFCC580", VA = "0xFCC580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892A4", Offset = "0xC892A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xFC7B38", Offset = "0xFC7B38", VA = "0xFC7B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892B4", Offset = "0xC892B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public bool IsPaused
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xFC2C10", Offset = "0xFC2C10", VA = "0xFC2C10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892C4", Offset = "0xC892C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xFCC588", Offset = "0xFCC588", VA = "0xFCC588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892D4", Offset = "0xC892D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		protected Tile ConnectedTile
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xFC17F4", Offset = "0xFC17F4", VA = "0xFC17F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892E4", Offset = "0xC892E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xFCC594", Offset = "0xFCC594", VA = "0xFCC594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC892F4", Offset = "0xC892F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		protected Wielder TargetWielder
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xFC17FC", Offset = "0xFC17FC", VA = "0xFC17FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89304", Offset = "0xC89304")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xFC461C", Offset = "0xFC461C", VA = "0xFC461C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89314", Offset = "0xC89314")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		protected bool IsActive
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xFCC59C", Offset = "0xFCC59C", VA = "0xFCC59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89324", Offset = "0xC89324")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xFC1A54", Offset = "0xFC1A54", VA = "0xFC1A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89334", Offset = "0xC89334")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		protected float TimeFrame
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xFC3F5C", Offset = "0xFC3F5C", VA = "0xFC3F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89344", Offset = "0xC89344")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xFCC5A4", Offset = "0xFCC5A4", VA = "0xFCC5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89354", Offset = "0xC89354")]
			set
			{
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xFC3CF0", Offset = "0xFC3CF0", VA = "0xFC3CF0")]
		protected TileEffectBase()
		{
		}

		[Token(Token = "0x60012E3")]
		public abstract void Initialize();

		[Token(Token = "0x60012E4")]
		protected abstract void TileOccupy();

		[Token(Token = "0x60012E5")]
		protected abstract void TileUnoccupy();

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xFCA898", Offset = "0xFCA898", VA = "0xFCA898", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xFC3D28", Offset = "0xFC3D28", VA = "0xFC3D28", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xFCAAC8", Offset = "0xFCAAC8", VA = "0xFCAAC8", Slot = "15")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xFCC5AC", Offset = "0xFCC5AC", VA = "0xFCC5AC", Slot = "16")]
		public virtual void Pause(bool pause)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xFCC5B8", Offset = "0xFCC5B8", VA = "0xFCC5B8")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xFC40C8", Offset = "0xFC40C8", VA = "0xFC40C8", Slot = "17")]
		protected virtual void CutConnectedTile()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xFCC6DC", Offset = "0xFCC6DC", VA = "0xFCC6DC")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xFCC6EC", Offset = "0xFCC6EC", VA = "0xFCC6EC")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xFCC6FC", Offset = "0xFCC6FC", VA = "0xFCC6FC", Slot = "8")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xFCC8F4", Offset = "0xFCC8F4", VA = "0xFCC8F4")]
		[PunRPC]
		public void PunEnableObject(Vector3 position, double sentTime, params object[] data)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xFCCF80", Offset = "0xFCCF80", VA = "0xFCCF80")]
		private void OnTileOccupied(bool occupy)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xFCBCBC", Offset = "0xFCBCBC", VA = "0xFCBCBC", Slot = "18")]
		public virtual void DisableObject()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xFC7D2C", Offset = "0xFC7D2C", VA = "0xFC7D2C", Slot = "19")]
		[PunRPC]
		protected virtual void PunDisableObject()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xFCCF98", Offset = "0xFCCF98", VA = "0xFCCF98", Slot = "20")]
		protected virtual void SetTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xFCCF9C", Offset = "0xFCCF9C", VA = "0xFCCF9C", Slot = "7")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Spells.Turret
{
	[Token(Token = "0x20002C4")]
	public class TurretBase : SpellBase_Projectile, IDestructableObject, IPauseObject
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC893A4", Offset = "0xC893A4")]
		[SerializeField]
		protected LayerMask m_sightMask;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Transform m_rotationPivot;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Transform[] m_firePositionTfs;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		protected Summoned m_summoned;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LayerMask? sm_hitMask;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89420", Offset = "0xC89420")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89420", Offset = "0xC89420")]
		private bool <AllowFire>k__BackingField;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8945C", Offset = "0xC8945C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8945C", Offset = "0xC8945C")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x170002F0")]
		public bool AllowFire
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xFCD018", Offset = "0xFCD018", VA = "0xFCD018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89498", Offset = "0xC89498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xFC31B8", Offset = "0xFC31B8", VA = "0xFC31B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894A8", Offset = "0xC894A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public bool IsPaused
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0xFCD020", Offset = "0xFCD020", VA = "0xFCD020", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894B8", Offset = "0xC894B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xFCD028", Offset = "0xFCD028", VA = "0xFCD028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894C8", Offset = "0xC894C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public Transform RotationPivot
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xFC3CE0", Offset = "0xFC3CE0", VA = "0xFC3CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894D8", Offset = "0xC894D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public float Durability
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xFCD034", Offset = "0xFCD034", VA = "0xFCD034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894E8", Offset = "0xC894E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F4")]
		public override LayerMask HitMask
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xFCD06C", Offset = "0xFCD06C", VA = "0xFCD06C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC894F8", Offset = "0xC894F8")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xFCCFA4", Offset = "0xFCCFA4", VA = "0xFCCFA4")]
		public TurretBase()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xFCD270", Offset = "0xFCD270", VA = "0xFCD270", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xFCD348", Offset = "0xFCD348", VA = "0xFCD348", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xFCD3CC", Offset = "0xFCD3CC", VA = "0xFCD3CC", Slot = "14")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xFCD460", Offset = "0xFCD460", VA = "0xFCD460", Slot = "43")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xFCD46C", Offset = "0xFCD46C", VA = "0xFCD46C")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xFCD49C", Offset = "0xFCD49C", VA = "0xFCD49C", Slot = "44")]
		protected virtual void ResetTurret()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xFCD4A0", Offset = "0xFCD4A0", VA = "0xFCD4A0")]
		protected Vector3 GetFirePos(int index = 0)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xFCD510", Offset = "0xFCD510", VA = "0xFCD510")]
		protected Vector3 GetFireDirection(int index = 0)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xFCD594", Offset = "0xFCD594", VA = "0xFCD594", Slot = "45")]
		public virtual void OnHit(float damage)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xFCD084", Offset = "0xFCD084", VA = "0xFCD084")]
		private LayerMask GetHitMask()
		{
			return default(LayerMask);
		}
	}
	[Token(Token = "0x20002C5")]
	public class TurretDemon : TurretBase
	{
		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC895C4", Offset = "0xC895C4")]
		private sealed class <Fire>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector3 targetPoint;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal TurretDemon $this;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005EF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B45")]
				[Address(RVA = "0xFCF404", Offset = "0xFCF404", VA = "0xFCF404", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B46")]
				[Address(RVA = "0xFCF40C", Offset = "0xFCF40C", VA = "0xFCF40C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xFCEF14", Offset = "0xFCEF14", VA = "0xFCEF14")]
			[DebuggerHidden]
			public <Fire>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xFCEF90", Offset = "0xFCEF90", VA = "0xFCEF90", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xFCF414", Offset = "0xFCF414", VA = "0xFCF414", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xFCF428", Offset = "0xFCF428", VA = "0xFCF428", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89624", Offset = "0xC89624")]
		private sealed class <UpdateRaycasts>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Ray <ray>__1;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal TurretDemon $this;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x170005F1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B4B")]
				[Address(RVA = "0xFCF7D0", Offset = "0xFCF7D0", VA = "0xFCF7D0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4C")]
				[Address(RVA = "0xFCF7D8", Offset = "0xFCF7D8", VA = "0xFCF7D8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xFCEF88", Offset = "0xFCEF88", VA = "0xFCEF88")]
			[DebuggerHidden]
			public <UpdateRaycasts>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xFCF48C", Offset = "0xFCF48C", VA = "0xFCF48C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xFCF7E0", Offset = "0xFCF7E0", VA = "0xFCF7E0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xFCF7F4", Offset = "0xFCF7F4", VA = "0xFCF7F4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float m_fireRateActual;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float m_nextFireTime;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_currentChargeTime;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_isDestroying;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_isSightClear;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool m_shouldTargetCaster;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private EventToken m_destructableSpawnedEventToken;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private CapsuleCollider[] m_targetColliders;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89508", Offset = "0xC89508")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89508", Offset = "0xC89508")]
		private CapsuleCollider <TargetCollider>k__BackingField;

		[Token(Token = "0x170002F5")]
		public CapsuleCollider TargetCollider
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xFCA838", Offset = "0xFCA838", VA = "0xFCA838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89544", Offset = "0xC89544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xFCD690", Offset = "0xFCD690", VA = "0xFCD690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89554", Offset = "0xC89554")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public new Wielder Wielder
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xFCD698", Offset = "0xFCD698", VA = "0xFCD698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89564", Offset = "0xC89564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public override Spell Type
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xFCD6D0", Offset = "0xFCD6D0", VA = "0xFCD6D0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89574", Offset = "0xC89574")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x170002F8")]
		private Vector3 TargetPoint
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xFCD6D8", Offset = "0xFCD6D8", VA = "0xFCD6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89584", Offset = "0xC89584")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xFCD628", Offset = "0xFCD628", VA = "0xFCD628")]
		public TurretDemon()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xFCD7D0", Offset = "0xFCD7D0", VA = "0xFCD7D0", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xFCD894", Offset = "0xFCD894", VA = "0xFCD894", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xFCD920", Offset = "0xFCD920", VA = "0xFCD920", Slot = "15")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xFCDCA4", Offset = "0xFCDCA4", VA = "0xFCDCA4", Slot = "34")]
		public override void AddTotalDamage(float value)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xFCDDAC", Offset = "0xFCDDAC", VA = "0xFCDDAC", Slot = "45")]
		public override void OnHit(float damage)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xFCDDBC", Offset = "0xFCDDBC", VA = "0xFCDDBC", Slot = "44")]
		protected override void ResetTurret()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xFCDE7C", Offset = "0xFCDE7C", VA = "0xFCDE7C", Slot = "38")]
		protected override void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xFC9BC4", Offset = "0xFC9BC4", VA = "0xFC9BC4")]
		public void SetSpellVariables()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xFC96E4", Offset = "0xFC96E4", VA = "0xFC96E4")]
		public void UpdateTarget()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xFCEC1C", Offset = "0xFCEC1C", VA = "0xFCEC1C")]
		private void OnDestructableSpawned(Events.DestructableSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xFCECB8", Offset = "0xFCECB8", VA = "0xFCECB8")]
		private void DestructableSpawned(MonoBehaviour destructable)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xFCE29C", Offset = "0xFCE29C", VA = "0xFCE29C")]
		private int GetTargetColliders(CapsuleCollider[] colliders)
		{
			return default(int);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xFCE930", Offset = "0xFCE930", VA = "0xFCE930")]
		private CapsuleCollider GetBestTarget(CapsuleCollider[] targetColliders, int amountOfTargets)
		{
			return null;
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xFCDBD4", Offset = "0xFCDBD4", VA = "0xFCDBD4")]
		private void WaitForFire(Vector3 targetPoint)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xFCEE6C", Offset = "0xFCEE6C", VA = "0xFCEE6C")]
		[DebuggerHidden]
		private IEnumerator Fire(Vector3 targetPoint)
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xFCEF1C", Offset = "0xFCEF1C", VA = "0xFCEF1C")]
		[DebuggerHidden]
		private IEnumerator UpdateRaycasts()
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xFCED5C", Offset = "0xFCED5C", VA = "0xFCED5C")]
		private bool SightClear(Ray ray)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C6")]
	public class TurretOxymora : TurretBase
	{
		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89750", Offset = "0xC89750")]
		private sealed class <RaycastTarget>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <i>__1;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RaycastHit <hit>__2;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal TurretOxymora $this;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal object $current;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool $disposing;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal int $PC;

			[Token(Token = "0x170005F3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B51")]
				[Address(RVA = "0xFD11D4", Offset = "0xFD11D4", VA = "0xFD11D4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B52")]
				[Address(RVA = "0xFD11DC", Offset = "0xFD11DC", VA = "0xFD11DC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xFD01E0", Offset = "0xFD01E0", VA = "0xFD01E0")]
			[DebuggerHidden]
			public <RaycastTarget>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0xFD0EB0", Offset = "0xFD0EB0", VA = "0xFD0EB0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xFD11E4", Offset = "0xFD11E4", VA = "0xFD11E4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xFD11F8", Offset = "0xFD11F8", VA = "0xFD11F8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC897B0", Offset = "0xC897B0")]
		private sealed class <Fire>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int index;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector3 targetPoint;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal TurretOxymora $this;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x170005F5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B57")]
				[Address(RVA = "0xFD0E28", Offset = "0xFD0E28", VA = "0xFD0E28", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B58")]
				[Address(RVA = "0xFD0E30", Offset = "0xFD0E30", VA = "0xFD0E30", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xFD074C", Offset = "0xFD074C", VA = "0xFD074C")]
			[DebuggerHidden]
			public <Fire>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xFD0C78", Offset = "0xFD0C78", VA = "0xFD0C78", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xFD0E38", Offset = "0xFD0E38", VA = "0xFD0E38", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xFD0E4C", Offset = "0xFD0E4C", VA = "0xFD0E4C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool[] m_fire;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private WaitForSeconds m_fireRateWait;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<Collider> m_targetColliders;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private EventToken m_destructableSpawnedEventToken;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89684", Offset = "0xC89684")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89684", Offset = "0xC89684")]
		private int <ProjectileHeal>k__BackingField;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC896C0", Offset = "0xC896C0")]
		private static Func<CharacterBase, CapsuleCollider> <>f__am$cache0;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC896D0", Offset = "0xC896D0")]
		private static Func<Assets.Scripts.Spells.TileEffects.StoneDemon, Collider> <>f__am$cache1;

		[Token(Token = "0x170002F9")]
		public int ProjectileHeal
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xFCF8E8", Offset = "0xFCF8E8", VA = "0xFCF8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC896E0", Offset = "0xC896E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xFC36D8", Offset = "0xFC36D8", VA = "0xFC36D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC896F0", Offset = "0xC896F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public override Spell Type
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xFCF8F0", Offset = "0xFCF8F0", VA = "0xFCF8F0", Slot = "5")]
			get
			{
				return default(Spell);
			}
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xFCF858", Offset = "0xFCF858", VA = "0xFCF858")]
		public TurretOxymora()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xFCF8F8", Offset = "0xFCF8F8", VA = "0xFCF8F8", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xFCFE9C", Offset = "0xFCFE9C", VA = "0xFCFE9C", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xFCFF28", Offset = "0xFCFF28", VA = "0xFCFF28")]
		private void OnDestructableSpawned(Events.DestructableSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xFCFFC4", Offset = "0xFCFFC4", VA = "0xFCFFC4")]
		private void DestructableSpawned(MonoBehaviour destructable)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xFD005C", Offset = "0xFD005C", VA = "0xFD005C", Slot = "44")]
		protected override void ResetTurret()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xFCF9C4", Offset = "0xFCF9C4", VA = "0xFCF9C4")]
		public void UpdateTargets()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xFD0174", Offset = "0xFD0174", VA = "0xFD0174")]
		[DebuggerHidden]
		private IEnumerator RaycastTarget()
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xFD01E8", Offset = "0xFD01E8", VA = "0xFD01E8")]
		private bool ShouldFire(Ray ray, out RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xFD0694", Offset = "0xFD0694", VA = "0xFD0694")]
		[DebuggerHidden]
		private IEnumerator Fire(int index, Vector3 targetPoint)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xFD0754", Offset = "0xFD0754", VA = "0xFD0754", Slot = "38")]
		protected override void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xFD0C24", Offset = "0xFD0C24", VA = "0xFD0C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89730", Offset = "0xC89730")]
		private static CapsuleCollider <UpdateTargets>m__0(CharacterBase x)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xFD0C50", Offset = "0xFD0C50", VA = "0xFD0C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89740", Offset = "0xC89740")]
		private static Collider <UpdateTargets>m__1(Assets.Scripts.Spells.TileEffects.StoneDemon x)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class TurretSkullSpecter : TurretBase
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CapsuleCollider[] sm_targetColliders;

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xFD125C", Offset = "0xFD125C", VA = "0xFD125C")]
		public TurretSkullSpecter()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xFD1260", Offset = "0xFD1260", VA = "0xFD1260", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xFC5B3C", Offset = "0xFC5B3C", VA = "0xFC5B3C")]
		public bool TryGetTargetPoint(out Vector3 target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xFC6974", Offset = "0xFC6974", VA = "0xFC6974")]
		public void Fire(Vector3 targetPoint)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xFD13EC", Offset = "0xFD13EC", VA = "0xFD13EC", Slot = "38")]
		protected override void FireProjectile(Vector3[] bezierPoints, float moveSpeed, float dmg, int opponentId, params object[] parameters)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xFD1288", Offset = "0xFD1288", VA = "0xFD1288")]
		private bool GetIsOccupiedByOpponentWielder(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xFD187C", Offset = "0xFD187C", VA = "0xFD187C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89820", Offset = "0xC89820")]
		private float <TryGetTargetPoint>m__0(CapsuleCollider capsuleCollider)
		{
			return default(float);
		}
	}
}
[Token(Token = "0x20002C8")]
public class CastEffectorBall : CastEffectorBase
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC89830", Offset = "0xC89830")]
	private float m_positionAdjuster;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform m_wandTransform;

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x100FBFC", Offset = "0x100FBFC", VA = "0x100FBFC")]
	public CastEffectorBall()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x100FC68", Offset = "0x100FC68", VA = "0x100FC68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x100FF04", Offset = "0x100FF04", VA = "0x100FF04")]
	public void SetRemoteWandTransform(Transform wandTransform)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x100FF0C", Offset = "0x100FF0C", VA = "0x100FF0C", Slot = "9")]
	public override void SetActive(bool enable, float chargeTime)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x1010140", Offset = "0x1010140", VA = "0x1010140", Slot = "8")]
	public override void UpdateEffect(float chargeTime)
	{
	}
}
[Token(Token = "0x20002C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89874", Offset = "0xC89874")]
public class CastEffectorBase : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20002CA")]
	public enum CastEffectorType
	{
		[Token(Token = "0x4001025")]
		Wand,
		[Token(Token = "0x4001026")]
		Ground,
		[Token(Token = "0x4001027")]
		Tile
	}

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CastEffectorBase m_childEffector;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SplitAudioSoundPlayer m_sfxPlayer;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float m_currentTime;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 m_startScale;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC898F8", Offset = "0xC898F8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC898F8", Offset = "0xC898F8")]
	private IWandControl <WandControl>k__BackingField;

	[Token(Token = "0x170002FB")]
	public IWandControl WandControl
	{
		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1010340", Offset = "0x1010340", VA = "0x1010340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89934", Offset = "0xC89934")]
		get
		{
			return null;
		}
		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1010348", Offset = "0x1010348", VA = "0x1010348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89944", Offset = "0xC89944")]
		set
		{
		}
	}

	[Token(Token = "0x170002FC")]
	public virtual CastEffectorType Type
	{
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1010350", Offset = "0x1010350", VA = "0x1010350", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89954", Offset = "0xC89954")]
		get
		{
			return default(CastEffectorType);
		}
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x100FC08", Offset = "0x100FC08", VA = "0x100FC08")]
	public CastEffectorBase()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1010358", Offset = "0x1010358", VA = "0x1010358", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x10103A4", Offset = "0x10103A4", VA = "0x10103A4", Slot = "6")]
	protected virtual void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1010480", Offset = "0x1010480", VA = "0x1010480", Slot = "7")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x101028C", Offset = "0x101028C", VA = "0x101028C", Slot = "8")]
	public virtual void UpdateEffect(float chargeTime)
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x100FF94", Offset = "0x100FF94", VA = "0x100FF94", Slot = "9")]
	public virtual void SetActive(bool enable, float chargeTime)
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1010584", Offset = "0x1010584", VA = "0x1010584")]
	[PunRPC]
	public void PunSetActive(bool enable)
	{
	}
}
[Token(Token = "0x20002CB")]
public class CastEffectorGround : CastEffectorBase
{
	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FX_Rotation[] m_rotators;

	[Token(Token = "0x170002FD")]
	public override CastEffectorType Type
	{
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x10106D8", Offset = "0x10106D8", VA = "0x10106D8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89984", Offset = "0xC89984")]
		get
		{
			return default(CastEffectorType);
		}
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x101067C", Offset = "0x101067C", VA = "0x101067C")]
	public CastEffectorGround()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x10106E0", Offset = "0x10106E0", VA = "0x10106E0", Slot = "6")]
	protected override void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x101098C", Offset = "0x101098C", VA = "0x101098C", Slot = "9")]
	public override void SetActive(bool enable, float chargeTime)
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1010BD0", Offset = "0x1010BD0", VA = "0x1010BD0")]
	private void ToggleRotators(bool enable)
	{
	}
}
namespace Assets.Scripts.Spells.Utils
{
	[Token(Token = "0x20002CC")]
	public class CastEffectorTile : CastEffectorBase
	{
		[Token(Token = "0x170002FE")]
		public override CastEffectorType Type
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xFD1FEC", Offset = "0xFD1FEC", VA = "0xFD1FEC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89994", Offset = "0xC89994")]
			get
			{
				return default(CastEffectorType);
			}
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xFD1FE4", Offset = "0xFD1FE4", VA = "0xFD1FE4")]
		public CastEffectorTile()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xFD1FF4", Offset = "0xFD1FF4", VA = "0xFD1FF4", Slot = "9")]
		public override void SetActive(bool enable, float chargeTime)
		{
		}
	}
}
namespace Assets.Scripts.Spells.TileEffects
{
	[Token(Token = "0x20002CD")]
	public class CurseLingeringEffect : MonoBehaviourPun, IPunInstantiateMagicCallback, IPauseObject, IEffectEmitter, IPoolObject
	{
		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89B28", Offset = "0xC89B28")]
		private sealed class <LatentDisableLingeringCurse>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float disableAfterTime;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CurseLingeringEffect $this;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005F7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B5D")]
				[Address(RVA = "0xFC2AF4", Offset = "0xFC2AF4", VA = "0xFC2AF4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B5E")]
				[Address(RVA = "0xFC2AFC", Offset = "0xFC2AFC", VA = "0xFC2AFC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xFC25B8", Offset = "0xFC25B8", VA = "0xFC25B8")]
			[DebuggerHidden]
			public <LatentDisableLingeringCurse>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0xFC2784", Offset = "0xFC2784", VA = "0xFC2784", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xFC2B04", Offset = "0xFC2B04", VA = "0xFC2B04", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xFC2B18", Offset = "0xFC2B18", VA = "0xFC2B18", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurseMaterialHandler m_dissolveHandler;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_startVolume;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ICursable m_cursable;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC899C4", Offset = "0xC899C4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC899C4", Offset = "0xC899C4")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89A00", Offset = "0xC89A00")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89A00", Offset = "0xC89A00")]
		private float <TimeLeft>k__BackingField;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89A3C", Offset = "0xC89A3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89A3C", Offset = "0xC89A3C")]
		private ParticleSystem[] <Emitters>k__BackingField;

		[Token(Token = "0x170002FF")]
		public bool IsPaused
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xFC1AF0", Offset = "0xFC1AF0", VA = "0xFC1AF0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89A78", Offset = "0xC89A78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xFC1AF8", Offset = "0xFC1AF8", VA = "0xFC1AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89A88", Offset = "0xC89A88")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public float TimeLeft
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xFC1B04", Offset = "0xFC1B04", VA = "0xFC1B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89A98", Offset = "0xC89A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xFC1B0C", Offset = "0xFC1B0C", VA = "0xFC1B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89AA8", Offset = "0xC89AA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public ParticleSystem[] Emitters
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xFC1B14", Offset = "0xFC1B14", VA = "0xFC1B14", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89AB8", Offset = "0xC89AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xFC1B1C", Offset = "0xFC1B1C", VA = "0xFC1B1C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89AC8", Offset = "0xC89AC8")]
			set
			{
			}
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xFC1AE8", Offset = "0xFC1AE8", VA = "0xFC1AE8")]
		public CurseLingeringEffect()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xFC1B24", Offset = "0xFC1B24", VA = "0xFC1B24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xFC1BE0", Offset = "0xFC1BE0", VA = "0xFC1BE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xFC1C64", Offset = "0xFC1C64", VA = "0xFC1C64", Slot = "6")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xFC1E90", Offset = "0xFC1E90", VA = "0xFC1E90")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xFC1EC0", Offset = "0xFC1EC0", VA = "0xFC1EC0", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xFC2008", Offset = "0xFC2008", VA = "0xFC2008", Slot = "11")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xFC2088", Offset = "0xFC2088", VA = "0xFC2088")]
		[PunRPC]
		private void PunEnableEffect(params object[] data)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xFC2488", Offset = "0xFC2488", VA = "0xFC2488")]
		[DebuggerHidden]
		private IEnumerator LatentDisableLingeringCurse(float disableAfterTime)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xFC25C0", Offset = "0xFC25C0", VA = "0xFC25C0", Slot = "12")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xFC268C", Offset = "0xFC268C", VA = "0xFC268C")]
		[PunRPC]
		private void PunDisableLingeringCurse()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xFC1CB8", Offset = "0xFC1CB8", VA = "0xFC1CB8", Slot = "9")]
		public void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xFC277C", Offset = "0xFC277C", VA = "0xFC277C", Slot = "10")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Spells.Utils
{
	[Token(Token = "0x20002CE")]
	public class CurseMaterialHandler : MonoBehaviour
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_originalSkullMaterial;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] m_skullRenderers;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_dissolveTween;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xFD22A8", Offset = "0xFD22A8", VA = "0xFD22A8")]
		public CurseMaterialHandler()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xFC1F08", Offset = "0xFC1F08", VA = "0xFC1F08")]
		public void CreateMaterial()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xFC2514", Offset = "0xFC2514", VA = "0xFC2514")]
		public void FadeInMaterial()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xFC2A78", Offset = "0xFC2A78", VA = "0xFC2A78")]
		public void FadeOutMaterial()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class DissolveOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_material;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tweener m_dissolveTween;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xFD22B0", Offset = "0xFD22B0", VA = "0xFD22B0")]
		public DissolveOverTime()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xFD22B8", Offset = "0xFD22B8", VA = "0xFD22B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xFD231C", Offset = "0xFD231C", VA = "0xFD231C")]
		public void FadeInMaterial()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xFD2398", Offset = "0xFD2398", VA = "0xFD2398")]
		public void FadeOutMaterial()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class EndPointCollisionTracker : MonoBehaviour, IPunObservable
	{
		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem m_hitEffect;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_hitSfx;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_endPointLifeTime;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timeRemaining;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89BE8", Offset = "0xC89BE8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC89BE8", Offset = "0xC89BE8")]
		private bool <IsHitEffectEnabled>k__BackingField;

		[Token(Token = "0x17000302")]
		public bool IsHitEffectEnabled
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xFD2424", Offset = "0xFD2424", VA = "0xFD2424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89C24", Offset = "0xC89C24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xFD242C", Offset = "0xFD242C", VA = "0xFD242C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89C34", Offset = "0xC89C34")]
			private set
			{
			}
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xFD2414", Offset = "0xFD2414", VA = "0xFD2414")]
		public EndPointCollisionTracker()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xFD2438", Offset = "0xFD2438", VA = "0xFD2438")]
		public void SetPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xFD24A4", Offset = "0xFD24A4", VA = "0xFD24A4")]
		public void ResetTimer()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xFD24B0", Offset = "0xFD24B0", VA = "0xFD24B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xFD2648", Offset = "0xFD2648", VA = "0xFD2648", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xFD2518", Offset = "0xFD2518", VA = "0xFD2518")]
		public void SetHitEffectActive(bool enable, bool playSfx = false)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xFD28D0", Offset = "0xFD28D0", VA = "0xFD28D0")]
		public void PlaySfx(bool enable)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89C44", Offset = "0xC89C44")]
	public class FlickeringSpellHandler : MonoBehaviour
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light m_pointLight;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_lightDifference;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_lightFrequency;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_minValue;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_maxValue;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_startIntensity;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_endIntensity;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_timeValue;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_timeMaxvalue;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_pulsate;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xFD299C", Offset = "0xFD299C", VA = "0xFD299C")]
		public FlickeringSpellHandler()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xFD29B0", Offset = "0xFD29B0", VA = "0xFD29B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xFD2B10", Offset = "0xFD2B10", VA = "0xFD2B10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xFD2AD8", Offset = "0xFD2AD8", VA = "0xFD2AD8")]
		public void SetPulsate(bool enable)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xFD2BA4", Offset = "0xFD2BA4", VA = "0xFD2BA4")]
		private void PulsateLight()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xFD2A48", Offset = "0xFD2A48", VA = "0xFD2A48")]
		private void SetStartValues()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xFD2CA8", Offset = "0xFD2CA8", VA = "0xFD2CA8")]
		private void ResetValues(float start, float end)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89CF8", Offset = "0xC89CF8")]
	public class LightEffectHandler : MonoBehaviour
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_automatic;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light m_light;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_maxLightIntensity;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_toggleOffDelay;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tweener m_lightTween;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xFD2CF8", Offset = "0xFD2CF8", VA = "0xFD2CF8")]
		public LightEffectHandler()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xFD2D0C", Offset = "0xFD2D0C", VA = "0xFD2D0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xFD2D24", Offset = "0xFD2D24", VA = "0xFD2D24")]
		public void ToggleLight(bool enable, float delay = 0f)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xFD2E9C", Offset = "0xFD2E9C", VA = "0xFD2E9C")]
		private void FadeLightComplete()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class PrisonDissolver : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_barsRenderer;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_dissolveTime;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC89DCC", Offset = "0xC89DCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC89DCC", Offset = "0xC89DCC")]
		private float m_dissolveMin;

		[Token(Token = "0x17000303")]
		public float DissolveTime
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xFC4D68", Offset = "0xFC4D68", VA = "0xFC4D68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xFD365C", Offset = "0xFD365C", VA = "0xFD365C")]
		public PrisonDissolver()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xFC4F10", Offset = "0xFC4F10", VA = "0xFC4F10")]
		public void EnablePrisonBars()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xFC4CF4", Offset = "0xFC4CF4", VA = "0xFC4CF4")]
		public void DisablePrisonBars()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89E30", Offset = "0xC89E30")]
	public class ProjectileEffectHandler : MonoBehaviour
	{
		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89EC4", Offset = "0xC89EC4")]
		private sealed class <LatentDisableEffect>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform parent;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ProjectileEffectHandler $this;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170005F9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B63")]
				[Address(RVA = "0xFD3994", Offset = "0xFD3994", VA = "0xFD3994", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B64")]
				[Address(RVA = "0xFD399C", Offset = "0xFD399C", VA = "0xFD399C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xFD38B0", Offset = "0xFD38B0", VA = "0xFD38B0")]
			[DebuggerHidden]
			public <LatentDisableEffect>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xFD38B8", Offset = "0xFD38B8", VA = "0xFD38B8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xFD39A4", Offset = "0xFD39A4", VA = "0xFD39A4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xFD39B8", Offset = "0xFD39B8", VA = "0xFD39B8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] m_audioClips;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xFD3720", Offset = "0xFD3720", VA = "0xFD3720")]
		public ProjectileEffectHandler()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xFD3780", Offset = "0xFD3780", VA = "0xFD3780")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xFD1D84", Offset = "0xFD1D84", VA = "0xFD1D84")]
		public void EnableEffect(Transform parent)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xFD3824", Offset = "0xFD3824", VA = "0xFD3824")]
		[DebuggerHidden]
		private IEnumerator LatentDisableEffect(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xFD1D14", Offset = "0xFD1D14", VA = "0xFD1D14")]
		public void DisableAndReturn(Transform parent)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xFD3788", Offset = "0xFD3788", VA = "0xFD3788")]
		private void SetAudioClip()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC89F24", Offset = "0xC89F24")]
	public class ProjectileExplosionHandler : MonoBehaviour
	{
		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC89FD8", Offset = "0xC89FD8")]
		private sealed class <LatentDisableEffect>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ProjectileExplosionHandler $this;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005FB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B69")]
				[Address(RVA = "0xFD3EBC", Offset = "0xFD3EBC", VA = "0xFD3EBC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B6A")]
				[Address(RVA = "0xFD3EC4", Offset = "0xFD3EC4", VA = "0xFD3EC4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xFD3DE4", Offset = "0xFD3DE4", VA = "0xFD3DE4")]
			[DebuggerHidden]
			public <LatentDisableEffect>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0xFD3DEC", Offset = "0xFD3DEC", VA = "0xFD3DEC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xFD3ECC", Offset = "0xFD3ECC", VA = "0xFD3ECC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xFD3EE0", Offset = "0xFD3EE0", VA = "0xFD3EE0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_matchSoundWithType;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] m_audioClips;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] m_audioClipsPlayer;

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xFD3A1C", Offset = "0xFD3A1C", VA = "0xFD3A1C")]
		public ProjectileExplosionHandler()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xFD3A24", Offset = "0xFD3A24", VA = "0xFD3A24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xFD3AB8", Offset = "0xFD3AB8", VA = "0xFD3AB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xFD3AC0", Offset = "0xFD3AC0", VA = "0xFD3AC0")]
		public void EnableEffect(HitSfxType sfxType)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xFD3D9C", Offset = "0xFD3D9C", VA = "0xFD3D9C")]
		public void DisableEffect()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xFD3D30", Offset = "0xFD3D30", VA = "0xFD3D30")]
		[DebuggerHidden]
		private IEnumerator LatentDisableEffect()
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xFD3B1C", Offset = "0xFD3B1C", VA = "0xFD3B1C")]
		private void SetAudioClip(HitSfxType sfxType)
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class SpikeActivator : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A048", Offset = "0xC8A048")]
		private sealed class <SetSpikeActive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 <startScale>__0;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool enable;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector3 <endScale>__0;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal float <currentTime>__0;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float <t>__0;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal SpikeActivator $this;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x170005FD")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B6F")]
				[Address(RVA = "0xFD4288", Offset = "0xFD4288", VA = "0xFD4288", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B70")]
				[Address(RVA = "0xFD4290", Offset = "0xFD4290", VA = "0xFD4290", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xFD3FEC", Offset = "0xFD3FEC", VA = "0xFD3FEC")]
			[DebuggerHidden]
			public <SetSpikeActive>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xFD3FF4", Offset = "0xFD3FF4", VA = "0xFD3FF4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xFD4298", Offset = "0xFD4298", VA = "0xFD4298", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xFD42AC", Offset = "0xFD42AC", VA = "0xFD42AC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_spikeTf;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xFD3F44", Offset = "0xFD3F44", VA = "0xFD3F44")]
		public SpikeActivator()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xFD3F4C", Offset = "0xFD3F4C", VA = "0xFD3F4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xFD3F54", Offset = "0xFD3F54", VA = "0xFD3F54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xFC7B44", Offset = "0xFC7B44", VA = "0xFC7B44")]
		public void ActivateSpike(bool enable)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xFD3F5C", Offset = "0xFD3F5C", VA = "0xFD3F5C")]
		[DebuggerHidden]
		private IEnumerator SetSpikeActive(bool enable)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Spells.Utils
{
	[Serializable]
	[Token(Token = "0x20002D7")]
	public class SplashDamageData
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask HitMask;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MinSplashDamage;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SplashDamageRadius;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A0A8", Offset = "0xC8A0A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A0A8", Offset = "0xC8A0A8")]
		private float <DamageMultiplier>k__BackingField;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_isDefaultCreated;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SplashDamageData sm_splash;

		[Token(Token = "0x17000304")]
		public float DamageMultiplier
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xE627F0", Offset = "0xE627F0", VA = "0xE627F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A0E4", Offset = "0xC8A0E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xE627F8", Offset = "0xE627F8", VA = "0xE627F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A0F4", Offset = "0xC8A0F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xE627E0", Offset = "0xE627E0", VA = "0xE627E0")]
		public SplashDamageData()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xE62800", Offset = "0xE62800", VA = "0xE62800")]
		public static SplashDamageData Empty()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xC8A104", Offset = "0xC8A104")]
	public class SplashDamageDataObject : ScriptableObject
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplashDamageData Data;

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xE62894", Offset = "0xE62894", VA = "0xE62894")]
		public SplashDamageDataObject()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xE6289C", Offset = "0xE6289C", VA = "0xE6289C")]
		public static SplashDamageDataObject CreateInstance(SplashDamageData data)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D9")]
	public class SplashDamageHandler : MonoBehaviour
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplashDamageData m_splashDamageData;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Assets.Scripts.Enums.TagType m_tag;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_overlapColliders;

		[Token(Token = "0x17000305")]
		public float SplashDamageRadius
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xE6290C", Offset = "0xE6290C", VA = "0xE6290C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A174", Offset = "0xC8A174")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000306")]
		private float MinSplashDamage
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xE62934", Offset = "0xE62934", VA = "0xE62934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A184", Offset = "0xC8A184")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xE62904", Offset = "0xE62904", VA = "0xE62904")]
		public SplashDamageHandler()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xE6295C", Offset = "0xE6295C", VA = "0xE6295C")]
		public void SetData(SplashDamageData splashDamageData)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xE62964", Offset = "0xE62964", VA = "0xE62964")]
		public void DealSplashDamage(float spellDamage, ProjectileMover projectileMover, [Optional] Collider excludeCollider, bool dealMinDamage = false)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xE62D80", Offset = "0xE62D80", VA = "0xE62D80")]
		private bool GetVisionObstructed(Vector3 colliderCenter, LayerMask projectileHitMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xE62FA0", Offset = "0xE62FA0", VA = "0xE62FA0")]
		private float GetDamage(bool dealMinDamage, float spellDamage, Vector3 colliderPosition)
		{
			return default(float);
		}
	}
}
namespace Assets.Scripts.Spells.Utils
{
	[Token(Token = "0x20002DA")]
	public class TeleportEffect : PoolObject
	{
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xFD4310", Offset = "0xFD4310", VA = "0xFD4310")]
		public TeleportEffect()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xFD4318", Offset = "0xFD4318", VA = "0xFD4318", Slot = "9")]
		[PunRPC]
		public override void PunEnableObject(Vector3 position, params object[] data)
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class TeleportEffectTransporter : BezierFollower, IPunInstantiateMagicCallback, IPoolObject
	{
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A254", Offset = "0xC8A254")]
		private sealed class <DisableAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TeleportEffectTransporter $this;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005FF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B75")]
				[Address(RVA = "0xFD5234", Offset = "0xFD5234", VA = "0xFD5234", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000600")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B76")]
				[Address(RVA = "0xFD523C", Offset = "0xFD523C", VA = "0xFD523C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xFD5078", Offset = "0xFD5078", VA = "0xFD5078")]
			[DebuggerHidden]
			public <DisableAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xFD514C", Offset = "0xFD514C", VA = "0xFD514C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xFD5244", Offset = "0xFD5244", VA = "0xFD5244", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xFD5258", Offset = "0xFD5258", VA = "0xFD5258", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private PoolObjectType m_poolObjectType;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_core;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_trailEffectTf;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_lifeTime;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_moveSpeed;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_bezierFollowTime;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isMoving;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xFD454C", Offset = "0xFD454C", VA = "0xFD454C")]
		public TeleportEffectTransporter()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xFD4560", Offset = "0xFD4560", VA = "0xFD4560")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xFD4568", Offset = "0xFD4568", VA = "0xFD4568", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xFD4688", Offset = "0xFD4688", VA = "0xFD4688")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xFD4950", Offset = "0xFD4950", VA = "0xFD4950", Slot = "6")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xFD4AC0", Offset = "0xFD4AC0", VA = "0xFD4AC0")]
		[PunRPC]
		private void PunEnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xFD500C", Offset = "0xFD500C", VA = "0xFD500C")]
		[DebuggerHidden]
		private IEnumerator DisableAfterTime()
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xFD5080", Offset = "0xFD5080", VA = "0xFD5080", Slot = "7")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xFD4608", Offset = "0xFD4608", VA = "0xFD4608")]
		[PunRPC]
		private void PunDisableObject()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xFD4F5C", Offset = "0xFD4F5C", VA = "0xFD4F5C")]
		private void SetCoreActive(bool active)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xFD5144", Offset = "0xFD5144", VA = "0xFD5144", Slot = "5")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DC")]
	public class WandChargeEffect : MonoBehaviour, IEffectEmitter
	{
		[Token(Token = "0x4001067")]
		private const float RemoteCharacterOffsetMultipler = 1.3f;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC8A2B4", Offset = "0xC8A2B4")]
		private float m_positionAdjuster;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FlickeringSpellHandler m_flickeringSpellHandler;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_chargeSound;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isLocal;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_wandTransform;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A318", Offset = "0xC8A318")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A318", Offset = "0xC8A318")]
		private ParticleSystem[] <Emitters>k__BackingField;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A354", Offset = "0xC8A354")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A354", Offset = "0xC8A354")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000307")]
		public ParticleSystem[] Emitters
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xFD52D8", Offset = "0xFD52D8", VA = "0xFD52D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A390", Offset = "0xC8A390")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xFD52E0", Offset = "0xFD52E0", VA = "0xFD52E0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A3A0", Offset = "0xC8A3A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public bool IsActive
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xFD52E8", Offset = "0xFD52E8", VA = "0xFD52E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A3B0", Offset = "0xC8A3B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xFD52F0", Offset = "0xFD52F0", VA = "0xFD52F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A3C0", Offset = "0xC8A3C0")]
			private set
			{
			}
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xFD52BC", Offset = "0xFD52BC", VA = "0xFD52BC")]
		public WandChargeEffect()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xFD52FC", Offset = "0xFD52FC", VA = "0xFD52FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xFD54DC", Offset = "0xFD54DC", VA = "0xFD54DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xFD5624", Offset = "0xFD5624", VA = "0xFD5624")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xFD58C0", Offset = "0xFD58C0", VA = "0xFD58C0")]
		public void SetRemoteWandTransform(Transform wandTransform)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xFD54F0", Offset = "0xFD54F0", VA = "0xFD54F0")]
		public void SetEffectActive(bool enable)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xFD591C", Offset = "0xFD591C", VA = "0xFD591C")]
		public void SetWandParent(Transform parent)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xFD5374", Offset = "0xFD5374", VA = "0xFD5374")]
		private void SetSoundActive(bool play)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xFD5AF0", Offset = "0xFD5AF0", VA = "0xFD5AF0")]
		private void KillSound()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xFD5B1C", Offset = "0xFD5B1C", VA = "0xFD5B1C")]
		public void DisableEmitters(GameObject effectParent, bool refetchEmitters = false)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xFD5954", Offset = "0xFD5954", VA = "0xFD5954", Slot = "6")]
		public void SetEmitterState(EmitterState newState, GameObject effectParent, bool refetchEmitters = false)
		{
		}
	}
}
namespace Cortopia.Scripts.Tiles
{
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8A3D0", Offset = "0xC8A3D0")]
	public class BotTileBlocker : MonoBehaviour
	{
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xE63170", Offset = "0xE63170", VA = "0xE63170")]
		public BotTileBlocker()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xE63178", Offset = "0xE63178", VA = "0xE63178")]
		private void Start()
		{
		}
	}
}
namespace Assets.Scripts.Tiles
{
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8A434", Offset = "0xC8A434")]
	public class Tile : MonoBehaviourPun
	{
		[Token(Token = "0x400106F")]
		private const int ParticleSystemsPerTile = 2;

		[Token(Token = "0x4001070")]
		private const int ParticlesPerParticleSystem = 6;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<TileEffectBase> ActiveEffectHandlers;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_isElevatorTile;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_audioSnapShotIndex;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<PickupBase> m_pickups;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_displayEffect;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_outsideTileAreaEffect;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem[] m_particleSystems;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8A544", Offset = "0xC8A544")]
		[SerializeField]
		private Collider m_teleportCollider;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Collider m_botTeleportCollider;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TileOccupyState m_occupyState;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_hasCalledStart;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystem.Particle[][] m_particles;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] m_numberOfActiveParticles;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material[] m_tileMaterials;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ISet<WandHand> m_highlightHands;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color m_fxColor;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A5A0", Offset = "0xC8A5A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A5A0", Offset = "0xC8A5A0")]
		private PhotonView <Occupant>k__BackingField;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A5DC", Offset = "0xC8A5DC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A5DC", Offset = "0xC8A5DC")]
		private Wielder <OccupantWielder>k__BackingField;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A618", Offset = "0xC8A618")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A618", Offset = "0xC8A618")]
		private Twin <OccupantTwin>k__BackingField;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A654", Offset = "0xC8A654")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A654", Offset = "0xC8A654")]
		private float <TimeOccupied>k__BackingField;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A690", Offset = "0xC8A690")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A690", Offset = "0xC8A690")]
		private int <TimesUsed>k__BackingField;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A6CC", Offset = "0xC8A6CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A6CC", Offset = "0xC8A6CC")]
		private bool <IsHighlighted>k__BackingField;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A708", Offset = "0xC8A708")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8A708", Offset = "0xC8A708")]
		private ValeHealEffect <ActiveHealEffect>k__BackingField;

		[Token(Token = "0x17000309")]
		public static LayerMask TileMask
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xFD5C5C", Offset = "0xFD5C5C", VA = "0xFD5C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A744", Offset = "0xC8A744")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x1700030A")]
		public PhotonView Occupant
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xFC7930", Offset = "0xFC7930", VA = "0xFC7930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A754", Offset = "0xC8A754")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xFD5CCC", Offset = "0xFD5CCC", VA = "0xFD5CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A764", Offset = "0xC8A764")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public Wielder OccupantWielder
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xFC4614", Offset = "0xFC4614", VA = "0xFC4614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A774", Offset = "0xC8A774")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xFD5CD4", Offset = "0xFD5CD4", VA = "0xFD5CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A784", Offset = "0xC8A784")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public Twin OccupantTwin
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xFC83C0", Offset = "0xFC83C0", VA = "0xFC83C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A794", Offset = "0xC8A794")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0xFD5CDC", Offset = "0xFD5CDC", VA = "0xFD5CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7A4", Offset = "0xC8A7A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public float TimeOccupied
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xFD5CE4", Offset = "0xFD5CE4", VA = "0xFD5CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7B4", Offset = "0xC8A7B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xFD5CEC", Offset = "0xFD5CEC", VA = "0xFD5CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7C4", Offset = "0xC8A7C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public int TimesUsed
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xFD5CF4", Offset = "0xFD5CF4", VA = "0xFD5CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7D4", Offset = "0xC8A7D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xFD5CFC", Offset = "0xFD5CFC", VA = "0xFD5CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7E4", Offset = "0xC8A7E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public bool IsHighlighted
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xFD5D04", Offset = "0xFD5D04", VA = "0xFD5D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A7F4", Offset = "0xC8A7F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xFD5D0C", Offset = "0xFD5D0C", VA = "0xFD5D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A804", Offset = "0xC8A804")]
			private set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public bool IsElevatorTile
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xFC9BBC", Offset = "0xFC9BBC", VA = "0xFC9BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A814", Offset = "0xC8A814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public bool IsUnoccupied
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xFD5D18", Offset = "0xFD5D18", VA = "0xFD5D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A824", Offset = "0xC8A824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		public bool IsOccupied
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xFC3FF0", Offset = "0xFC3FF0", VA = "0xFC3FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A834", Offset = "0xC8A834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public bool IsLocked
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xFD5D28", Offset = "0xFD5D28", VA = "0xFD5D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A844", Offset = "0xC8A844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public bool IsEffectActive
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xFD5D38", Offset = "0xFD5D38", VA = "0xFD5D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A854", Offset = "0xC8A854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000315")]
		public IReadOnlyList<PickupBase> Pickups
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xFD5D98", Offset = "0xFD5D98", VA = "0xFD5D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A864", Offset = "0xC8A864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public GameObject DisplayEffect
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xFD5DA0", Offset = "0xFD5DA0", VA = "0xFD5DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A874", Offset = "0xC8A874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public Collider TeleportCollider
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xFD5E28", Offset = "0xFD5E28", VA = "0xFD5E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A884", Offset = "0xC8A884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		public Collider BotTeleportCollider
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xFD5EB0", Offset = "0xFD5EB0", VA = "0xFD5EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A894", Offset = "0xC8A894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		public ValeHealEffect ActiveHealEffect
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xFD5F38", Offset = "0xFD5F38", VA = "0xFD5F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A8A4", Offset = "0xC8A8A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xFD5F40", Offset = "0xFD5F40", VA = "0xFD5F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8A8B4", Offset = "0xC8A8B4")]
			set
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action<bool> OnTileOccupied
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xFCCE98", Offset = "0xFCCE98", VA = "0xFCCE98")]
			add
			{
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xFCC5F4", Offset = "0xFCC5F4", VA = "0xFCC5F4")]
			remove
			{
			}
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xFD5B38", Offset = "0xFD5B38", VA = "0xFD5B38")]
		public Tile()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xFD5F48", Offset = "0xFD5F48", VA = "0xFD5F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xFD6078", Offset = "0xFD6078", VA = "0xFD6078")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xFD614C", Offset = "0xFD614C", VA = "0xFD614C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xFD644C", Offset = "0xFD644C", VA = "0xFD644C")]
		private void TryGetTileMaterials()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xFD6644", Offset = "0xFD6644", VA = "0xFD6644")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xFD66A8", Offset = "0xFD66A8", VA = "0xFD66A8")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xFD66AC", Offset = "0xFD66AC", VA = "0xFD66AC")]
		private void OnTileAreaEnter(Events.TileAreaEnterEvent eventData)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xFD67BC", Offset = "0xFD67BC", VA = "0xFD67BC")]
		private void OnTileAreaExit(Events.TileAreaExitEvent eventData)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xFD6648", Offset = "0xFD6648", VA = "0xFD6648")]
		private void ResetTile()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xFD67C4", Offset = "0xFD67C4", VA = "0xFD67C4")]
		public void AddTeleportActive(WandHand wandHand)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xFD6D44", Offset = "0xFD6D44", VA = "0xFD6D44")]
		public void RemoveTeleportActive(WandHand wandHand)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xFD65F0", Offset = "0xFD65F0", VA = "0xFD65F0")]
		public void SetTeleportActive(bool enable)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xFD65D0", Offset = "0xFD65D0", VA = "0xFD65D0")]
		public void SetHighlighted(bool enable)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xFD6F60", Offset = "0xFD6F60", VA = "0xFD6F60")]
		public void Occupy(TileOccupyState state, PhotonView occupant, float timeOccupied)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xFD7380", Offset = "0xFD7380", VA = "0xFD7380")]
		public void Unoccupy(bool forced)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xFC4624", Offset = "0xFC4624", VA = "0xFC4624")]
		public bool IsTileOccupiedBySummoned()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xFD7438", Offset = "0xFD7438", VA = "0xFD7438")]
		public void RemoveActiveTraps()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xFC3EBC", Offset = "0xFC3EBC", VA = "0xFC3EBC")]
		public void SetEffectOccupied(bool value, TileEffectBase effectHandler)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xFD7524", Offset = "0xFD7524", VA = "0xFD7524")]
		private void AddActiveEffect(TileEffectBase effectHandler)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xFD7678", Offset = "0xFD7678", VA = "0xFD7678")]
		private void RemoveActiveEffect(TileEffectBase effectHandler)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xFC41C4", Offset = "0xFC41C4", VA = "0xFC41C4")]
		public bool GetEffectActive(Spell effectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xFD7924", Offset = "0xFD7924", VA = "0xFD7924")]
		public bool GetEffectEnabled(Tile_AreaEffect effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xFD6B28", Offset = "0xFD6B28", VA = "0xFD6B28")]
		public void SetTileMaterialColor(Color color)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xFD7B90", Offset = "0xFD7B90", VA = "0xFD7B90")]
		public void DestroyPickups()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xFD7C74", Offset = "0xFD7C74", VA = "0xFD7C74")]
		public void AddPickup(PickupBase pickup)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xFD7D1C", Offset = "0xFD7D1C", VA = "0xFD7D1C")]
		public void RemovePickup(PickupBase pickup)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xFD6C08", Offset = "0xFD6C08", VA = "0xFD6C08")]
		private void SetVFXActive(bool enable)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xFD66B4", Offset = "0xFD66B4", VA = "0xFD66B4")]
		public void SetTileAreaEffectActive(bool enable)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xFD7DC0", Offset = "0xFD7DC0", VA = "0xFD7DC0")]
		public void SetTilePropsActive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class DetailObjects
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Transform m_detailTf;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool m_active;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xFD5B30", Offset = "0xFD5B30", VA = "0xFD5B30")]
		public DetailObjects()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public static class TileAreaController
	{
		[Token(Token = "0x400108D")]
		private const float TileSize = 3f;

		[Token(Token = "0x400108E")]
		private const float HalfTileSize = 1.5f;

		[Token(Token = "0x400108F")]
		private const float HalfTileSizeSqr = 2.25f;

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xFD80D4", Offset = "0xFD80D4", VA = "0xFD80D4")]
		public static bool IsInsideTileArea(Vector3 currentPosition, Tile currentTile)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xFD81E8", Offset = "0xFD81E8", VA = "0xFD81E8")]
		public static Vector3 GetPositionInsideTileArea(Vector3 currentPosition, Vector3 tileCenter)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002E1")]
	public class TileControl : MonoSingleton<TileControl>
	{
		[Serializable]
		[Token(Token = "0x20002E2")]
		public class TileTemplate
		{
			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Tile m_tile;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public bool[] m_displayValues;

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xFD86B8", Offset = "0xFD86B8", VA = "0xFD86B8")]
			public TileTemplate()
			{
			}
		}

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public List<bool> m_detailObjectsToggle;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public List<Transform> m_detailObjects;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<TileTemplate> m_tileTemplates;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xFD82FC", Offset = "0xFD82FC", VA = "0xFD82FC")]
		public TileControl()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xFD83C4", Offset = "0xFD83C4", VA = "0xFD83C4")]
		public void SetAllPropsActive()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xFD7EB4", Offset = "0xFD7EB4", VA = "0xFD7EB4")]
		public void SetTilePropsActive(Tile tile)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xFD8500", Offset = "0xFD8500", VA = "0xFD8500")]
		private bool CanGetDisplayValues(out bool[] values, Tile tile)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8A984", Offset = "0xC8A984")]
	public class TileManager : PunSingleton<TileManager>
	{
		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AAC4", Offset = "0xC8AAC4")]
		private sealed class <PhotonPlayerConnected>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Tile <startTile>__0;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Wielder <opponent>__0;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal TileManager $this;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000601")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B7B")]
				[Address(RVA = "0xFDBFB4", Offset = "0xFDBFB4", VA = "0xFDBFB4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000602")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B7C")]
				[Address(RVA = "0xFDBFBC", Offset = "0xFDBFBC", VA = "0xFDBFBC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xFD9844", Offset = "0xFD9844", VA = "0xFD9844")]
			[DebuggerHidden]
			public <PhotonPlayerConnected>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xFDBA70", Offset = "0xFDBA70", VA = "0xFDBA70", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xFDBFC4", Offset = "0xFDBFC4", VA = "0xFDBFC4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xFDBFD8", Offset = "0xFDBFD8", VA = "0xFDBFD8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AB24", Offset = "0xC8AB24")]
		private sealed class <MatchPlayerToTileRotation>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform tileTransform;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TileManager $this;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000603")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B81")]
				[Address(RVA = "0xFDB9E8", Offset = "0xFDB9E8", VA = "0xFDB9E8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000604")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B82")]
				[Address(RVA = "0xFDB9F0", Offset = "0xFDB9F0", VA = "0xFDB9F0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xFDB7A8", Offset = "0xFDB7A8", VA = "0xFDB7A8")]
			[DebuggerHidden]
			public <MatchPlayerToTileRotation>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xFDB7E0", Offset = "0xFDB7E0", VA = "0xFDB7E0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0xFDB9F8", Offset = "0xFDB9F8", VA = "0xFDB9F8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0xFDBA0C", Offset = "0xFDBA0C", VA = "0xFDBA0C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001095")]
		private const float TileRotationWaitTime = 0.25f;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Tile> m_allTiles;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_tileMaterial;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_tileParent;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_spellSelectedEventToken;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_playerControlSpawnedEventToken;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_photonPlayerConnectedEventToken;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<int, Action<Tile, bool>> m_tileActionCallbacks;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Tile> m_randomTileList;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AA34", Offset = "0xC8AA34")]
		private static Func<Tile, bool> <>f__am$cache0;

		[Token(Token = "0x1700031A")]
		public IReadOnlyList<Tile> AllTiles
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xFCED54", Offset = "0xFCED54", VA = "0xFCED54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AA44", Offset = "0xC8AA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public bool HasFreeTilesAvailable
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xFD8788", Offset = "0xFD8788", VA = "0xFD8788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AA54", Offset = "0xC8AA54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031C")]
		public Transform TileParent
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xFD8850", Offset = "0xFD8850", VA = "0xFD8850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AA64", Offset = "0xC8AA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<Tile> OnTileOccupied
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xFC9060", Offset = "0xFC9060", VA = "0xFC9060")]
			add
			{
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xFC928C", Offset = "0xFC928C", VA = "0xFC928C")]
			remove
			{
			}
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xFD86C0", Offset = "0xFD86C0", VA = "0xFD86C0")]
		public TileManager()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xFD890C", Offset = "0xFD890C", VA = "0xFD890C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xFD8B6C", Offset = "0xFD8B6C", VA = "0xFD8B6C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xFD8D94", Offset = "0xFD8D94", VA = "0xFD8D94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xFD8ED0", Offset = "0xFD8ED0", VA = "0xFD8ED0")]
		private void OnPlayerControlSpawned(Events.PlayerControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xFD8F14", Offset = "0xFD8F14", VA = "0xFD8F14")]
		private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xFD91D4", Offset = "0xFD91D4", VA = "0xFD91D4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xFD9438", Offset = "0xFD9438", VA = "0xFD9438")]
		private void OnSpellSelected(Events.SpellSelectedEvent eventData)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xFD97AC", Offset = "0xFD97AC", VA = "0xFD97AC")]
		private void OnPhotonPlayerConnected(NetworkEvents.PhotonPlayerConnectedEvent eventData)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xFD97D8", Offset = "0xFD97D8", VA = "0xFD97D8")]
		[DebuggerHidden]
		private IEnumerator PhotonPlayerConnected()
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xFD984C", Offset = "0xFD984C", VA = "0xFD984C")]
		private void OnPhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xFD987C", Offset = "0xFD987C", VA = "0xFD987C")]
		private void PhotonPlayerDisconnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xFD91D8", Offset = "0xFD91D8", VA = "0xFD91D8")]
		private void UploadTileStatistics()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xFD9B5C", Offset = "0xFD9B5C", VA = "0xFD9B5C")]
		public void HideTeleportBeacons()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xFD8CB4", Offset = "0xFD8CB4", VA = "0xFD8CB4")]
		public void SetTileMaterialColor(Color color)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xFD9D58", Offset = "0xFD9D58", VA = "0xFD9D58")]
		public Tile GetRandomTile(HashSet<Tile> excludeTiles, bool avoidElevatorTiles, bool tryAvoidActivEffects)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xFD9DB4", Offset = "0xFD9DB4", VA = "0xFD9DB4")]
		private Tile GetRandomTileInternal(HashSet<Tile> excludeTiles, bool avoidElevatorTiles, bool tryAvoidActiveEffects)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xFDA010", Offset = "0xFDA010", VA = "0xFDA010")]
		private void VerifyTileConnections()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xFD98E8", Offset = "0xFD98E8", VA = "0xFD98E8")]
		public Tile GetStartTile(int index)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xFDA36C", Offset = "0xFDA36C", VA = "0xFDA36C")]
		public bool CompareStartTile(Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xFD8F18", Offset = "0xFD8F18", VA = "0xFD8F18")]
		public void OnMatchStarted()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xFD9468", Offset = "0xFD9468", VA = "0xFD9468")]
		public void TrySetAllTilesAvailable(SpellBase spell)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xFD717C", Offset = "0xFD717C", VA = "0xFD717C")]
		public void TrySetTileAvailable(Tile tile)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xFDA534", Offset = "0xFDA534", VA = "0xFDA534")]
		private void SetTileAvailable(Tile tile, SpellBase spell, WandHand wandHand)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xFDA6D4", Offset = "0xFDA6D4", VA = "0xFDA6D4")]
		private bool ShouldToggle(Tile tile, SpellBase spell)
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xFDA918", Offset = "0xFDA918", VA = "0xFDA918")]
		public void SetTilesUnavailable()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFDAAB0", Offset = "0xFDAAB0", VA = "0xFDAAB0")]
		public void SetTilesUnavailable(WandHand wandHand)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xFCB5FC", Offset = "0xFCB5FC", VA = "0xFCB5FC")]
		public void OccupyTile(Tile tile, TileOccupyState occupyState, [Optional] PhotonView occupant, [Optional] Action<Tile, bool> onOccupyDone, bool buffered = false, bool forced = false)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xFDAEC0", Offset = "0xFDAEC0", VA = "0xFDAEC0")]
		[PunRPC]
		private void PunOccupyTile(int tileView, int occupyStateIndex, float timeOccupied, int occupantView, bool forced)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xFDAC4C", Offset = "0xFDAC4C", VA = "0xFDAC4C")]
		[PunRPC]
		private void PunOccupyTileResponse(int tileView, bool successfullyOccupied, int occupyStateIndex, float timeOccupied, int occupantView)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xFD99E4", Offset = "0xFD99E4", VA = "0xFD99E4")]
		public void UpdateLobbyTile(Tile tile)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xFDB660", Offset = "0xFDB660", VA = "0xFDB660")]
		public void UpdateLobbyTile(Transform tileTransform)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xFDB71C", Offset = "0xFDB71C", VA = "0xFDB71C")]
		[DebuggerHidden]
		private IEnumerator MatchPlayerToTileRotation(Transform tileTransform)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xFDB7B0", Offset = "0xFDB7B0", VA = "0xFDB7B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AAB4", Offset = "0xC8AAB4")]
		private static bool <get_HasFreeTilesAvailable>m__0(Tile x)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8AB84", Offset = "0xC8AB84")]
	public class TimeManager : PunSingleton<TimeManager>
	{
		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AD00", Offset = "0xC8AD00")]
		private sealed class <ResetRoomTimeMaster>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TimeManager $this;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000605")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B87")]
				[Address(RVA = "0xFDD008", Offset = "0xFDD008", VA = "0xFDD008", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000606")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B88")]
				[Address(RVA = "0xFDD010", Offset = "0xFDD010", VA = "0xFDD010", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0xFDC83C", Offset = "0xFDC83C", VA = "0xFDC83C")]
			[DebuggerHidden]
			public <ResetRoomTimeMaster>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xFDCE18", Offset = "0xFDCE18", VA = "0xFDCE18", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xFDD018", Offset = "0xFDD018", VA = "0xFDD018", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xFDD02C", Offset = "0xFDD02C", VA = "0xFDD02C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AD60", Offset = "0xC8AD60")]
		private sealed class <ResetRoomTimeClient>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TimeManager $this;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000607")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B8D")]
				[Address(RVA = "0xFDCD90", Offset = "0xFDCD90", VA = "0xFDCD90", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000608")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8E")]
				[Address(RVA = "0xFDCD98", Offset = "0xFDCD98", VA = "0xFDCD98", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xFDC844", Offset = "0xFDC844", VA = "0xFDC844")]
			[DebuggerHidden]
			public <ResetRoomTimeClient>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xFDCB64", Offset = "0xFDCB64", VA = "0xFDCB64", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xFDCDA0", Offset = "0xFDCDA0", VA = "0xFDCDA0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0xFDCDB4", Offset = "0xFDCDB4", VA = "0xFDCDB4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40010A4")]
		private const float MinTimeThreashold = 0.0001f;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double? m_roomStartTime;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double? m_matchStartTime;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float? m_offlineMatchStartTime;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_accumulatedPauseTime;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ABE8", Offset = "0xC8ABE8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8ABE8", Offset = "0xC8ABE8")]
		private float <MatchLength>k__BackingField;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AC24", Offset = "0xC8AC24")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8AC24", Offset = "0xC8AC24")]
		private float <MatchLengthWithoutSudden>k__BackingField;

		[Token(Token = "0x1700031D")]
		public float MatchLength
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xFDC08C", Offset = "0xFDC08C", VA = "0xFDC08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AC60", Offset = "0xC8AC60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xFDC094", Offset = "0xFDC094", VA = "0xFDC094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AC70", Offset = "0xC8AC70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public float MatchLengthWithoutSudden
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xFDC09C", Offset = "0xFDC09C", VA = "0xFDC09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AC80", Offset = "0xC8AC80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xFDC0A4", Offset = "0xFDC0A4", VA = "0xFDC0A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AC90", Offset = "0xC8AC90")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public float CurrentRoomTime
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xFDA27C", Offset = "0xFDA27C", VA = "0xFDA27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ACA0", Offset = "0xC8ACA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000320")]
		public float CurrentMatchTime
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xFDC0AC", Offset = "0xFDC0AC", VA = "0xFDC0AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000321")]
		public double CurrentMatchTimeRaw
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xFDC1E8", Offset = "0xFDC1E8", VA = "0xFDC1E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ACB0", Offset = "0xC8ACB0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000322")]
		public bool IsRoomTimeSet
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xFDC2C4", Offset = "0xFDC2C4", VA = "0xFDC2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ACC0", Offset = "0xC8ACC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xFDC03C", Offset = "0xFDC03C", VA = "0xFDC03C")]
		public TimeManager()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xFDC314", Offset = "0xFDC314", VA = "0xFDC314", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xFDC370", Offset = "0xFDC370", VA = "0xFDC370")]
		private void Start()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xFDC614", Offset = "0xFDC614", VA = "0xFDC614")]
		public float GetMatchEndTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xFDC6E0", Offset = "0xFDC6E0", VA = "0xFDC6E0")]
		public void SetMatchEndTime()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xFDC3D8", Offset = "0xFDC3D8", VA = "0xFDC3D8")]
		private void ResetRoomTime()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xFDC764", Offset = "0xFDC764", VA = "0xFDC764")]
		[DebuggerHidden]
		private IEnumerator ResetRoomTimeMaster()
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xFDC7D0", Offset = "0xFDC7D0", VA = "0xFDC7D0")]
		[DebuggerHidden]
		private IEnumerator ResetRoomTimeClient()
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xFDC84C", Offset = "0xFDC84C", VA = "0xFDC84C")]
		public void ResetMatchTime()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xFDCA40", Offset = "0xFDCA40", VA = "0xFDCA40")]
		[PunRPC]
		private void PunSyncMatchTime(double matchStartTime)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xFDCAB8", Offset = "0xFDCAB8", VA = "0xFDCAB8")]
		public void UpdatePauseTime(float pauseTime)
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x20002E5")]
	public class ArenaMenu : MonoBehaviour
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_menuParent;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_optionsParent;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_reportMenuParent;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_reportButtonParent;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_rotatingRingsParent;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InteractableButton m_resumeBtn;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_opponentNameContainer;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro m_opponentNameText;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasValidOpponentToDisplayName;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x17000323")]
		public bool IsMenuActive
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0xFDD098", Offset = "0xFDD098", VA = "0xFDD098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AE40", Offset = "0xC8AE40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000324")]
		public bool IsOptionsActive
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0xFDD118", Offset = "0xFDD118", VA = "0xFDD118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AE50", Offset = "0xC8AE50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000325")]
		public bool IsReportMenuActive
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xFDD15C", Offset = "0xFDD15C", VA = "0xFDD15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AE60", Offset = "0xC8AE60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xFDD090", Offset = "0xFDD090", VA = "0xFDD090")]
		public ArenaMenu()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xFDD188", Offset = "0xFDD188", VA = "0xFDD188")]
		private void Start()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xFDD36C", Offset = "0xFDD36C", VA = "0xFDD36C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xFDD428", Offset = "0xFDD428", VA = "0xFDD428")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xFDD4A0", Offset = "0xFDD4A0", VA = "0xFDD4A0")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xFDD4A4", Offset = "0xFDD4A4", VA = "0xFDD4A4")]
		private void OnMatchEnd()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xFDD4D4", Offset = "0xFDD4D4", VA = "0xFDD4D4")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xFDD6C4", Offset = "0xFDD6C4", VA = "0xFDD6C4")]
		private void UpdatePositionAndRotation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xFDD28C", Offset = "0xFDD28C", VA = "0xFDD28C")]
		public void ToggleMenu(bool enable)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xFDD778", Offset = "0xFDD778", VA = "0xFDD778")]
		public void ToggleOptions(bool active)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xFDD808", Offset = "0xFDD808", VA = "0xFDD808")]
		public void ToggleReporting(bool active)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class ArenaUI : MonoSingleton<ArenaUI>
	{
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B014", Offset = "0xC8B014")]
		private sealed class <ActivateNotification>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string term;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float time;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal ArenaUI $this;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000609")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B93")]
				[Address(RVA = "0xFE06CC", Offset = "0xFE06CC", VA = "0xFE06CC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B94")]
				[Address(RVA = "0xFE06D4", Offset = "0xFE06D4", VA = "0xFE06D4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xFDF548", Offset = "0xFDF548", VA = "0xFDF548")]
			[DebuggerHidden]
			public <ActivateNotification>c__Iterator0()
			{
			}

			[Token(Token = "0x6002B92")]
			[Address(RVA = "0xFE0580", Offset = "0xFE0580", VA = "0xFE0580", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xFE06DC", Offset = "0xFE06DC", VA = "0xFE06DC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0xFE06F0", Offset = "0xFE06F0", VA = "0xFE06F0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B074", Offset = "0xC8B074")]
		private sealed class <ReturnToLobby>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Wielder <wielder>__0;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700060B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B99")]
				[Address(RVA = "0xFE0924", Offset = "0xFE0924", VA = "0xFE0924", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9A")]
				[Address(RVA = "0xFE092C", Offset = "0xFE092C", VA = "0xFE092C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xFDF648", Offset = "0xFDF648", VA = "0xFDF648")]
			[DebuggerHidden]
			public <ReturnToLobby>c__Iterator1()
			{
			}

			[Token(Token = "0x6002B98")]
			[Address(RVA = "0xFE0754", Offset = "0xFE0754", VA = "0xFE0754", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xFE0934", Offset = "0xFE0934", VA = "0xFE0934", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xFE0948", Offset = "0xFE0948", VA = "0xFE0948", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B0D4", Offset = "0xC8B0D4")]
		private sealed class <ReturnToWorkshop>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ArenaUI $this;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700060D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002B9F")]
				[Address(RVA = "0xFE0AD0", Offset = "0xFE0AD0", VA = "0xFE0AD0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA0")]
				[Address(RVA = "0xFE0AD8", Offset = "0xFE0AD8", VA = "0xFE0AD8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xFDF6BC", Offset = "0xFDF6BC", VA = "0xFDF6BC")]
			[DebuggerHidden]
			public <ReturnToWorkshop>c__Iterator2()
			{
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xFE09AC", Offset = "0xFE09AC", VA = "0xFE09AC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xFE0AE0", Offset = "0xFE0AE0", VA = "0xFE0AE0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xFE0AF4", Offset = "0xFE0AF4", VA = "0xFE0AF4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_hudColor;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArenaMenu m_menu;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8AE90", Offset = "0xC8AE90")]
		[SerializeField]
		private Transform m_notificationParent;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize m_notificationLocalize;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizationParamsManager m_notificationParams;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationParamsManager m_pauseParams;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isUpdateBlocked;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion m_startRotation;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_trackPosition;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine m_notificationCoroutine;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<TextMeshPro> m_textComponents;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_playerControlSpawnedEventToken;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_countdownEndedEventToken;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_countdownStartedEventToken;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_countdownTimeUpdatedEventToken;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_matchPausedEventToken;

		[Token(Token = "0x40010C8")]
		private const float ReturnToLobbyDelay = 3f;

		[Token(Token = "0x40010C9")]
		private const float ReturnToWorkshopDelay = 5f;

		[Token(Token = "0x40010CA")]
		private const string ConnectionClientTerm = "HUD/EndState/ConnectionClientMsg";

		[Token(Token = "0x40010CB")]
		private const string ConnectionServerTerm = "HUD/EndState/ConnectionServerMsg";

		[Token(Token = "0x40010CC")]
		private const string ReturnToWorkshopTerm = "HUD/Notification/Status/Leaving";

		[Token(Token = "0x40010CD")]
		private const string PauseLostTerm = "HUD/EndState/Pause";

		[Token(Token = "0x40010CE")]
		private const string LostTerm = "HUD/EndState/Lost";

		[Token(Token = "0x40010CF")]
		private const string WinTerm = "HUD/EndState/Won";

		[Token(Token = "0x40010D0")]
		private const string WinLoseTerm = "HUD/EndState/WinLoseMsg";

		[Token(Token = "0x40010D1")]
		private const string DrawTerm = "HUD/EndState/DrawMsg";

		[Token(Token = "0x40010D2")]
		private const string OpponentFoundTerm = "HUD/EndState/OpponentFound";

		[Token(Token = "0x40010D3")]
		private const string MatchStartsInTerm = "HUD/Notification/CountdownEnd";

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AF0C", Offset = "0xC8AF0C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8AF0C", Offset = "0xC8AF0C")]
		private bool <IsEndMenuActive>k__BackingField;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AF48", Offset = "0xC8AF48")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8AF48", Offset = "0xC8AF48")]
		private EndState <State>k__BackingField;

		[Token(Token = "0x17000326")]
		public bool IsEndMenuActive
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xFDD908", Offset = "0xFDD908", VA = "0xFDD908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AF84", Offset = "0xC8AF84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xFDD910", Offset = "0xFDD910", VA = "0xFDD910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AF94", Offset = "0xC8AF94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public bool IsNotificationActive
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xFDD91C", Offset = "0xFDD91C", VA = "0xFDD91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AFA4", Offset = "0xC8AFA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000328")]
		public EndState State
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xFDD980", Offset = "0xFDD980", VA = "0xFDD980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AFB4", Offset = "0xC8AFB4")]
			get
			{
				return default(EndState);
			}
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xFDD988", Offset = "0xFDD988", VA = "0xFDD988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AFC4", Offset = "0xC8AFC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public ArenaMenu Menu
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xFDD990", Offset = "0xFDD990", VA = "0xFDD990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8AFD4", Offset = "0xC8AFD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xFDD898", Offset = "0xFDD898", VA = "0xFDD898")]
		public ArenaUI()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xFDDA2C", Offset = "0xFDDA2C", VA = "0xFDDA2C")]
		public bool GetAnyMenuOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xFDDA7C", Offset = "0xFDDA7C", VA = "0xFDDA7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xFDDC88", Offset = "0xFDDC88", VA = "0xFDDC88", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xFDDDD0", Offset = "0xFDDDD0", VA = "0xFDDDD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xFDDE60", Offset = "0xFDDE60", VA = "0xFDDE60", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xFDDF3C", Offset = "0xFDDF3C", VA = "0xFDDF3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xFDE33C", Offset = "0xFDE33C", VA = "0xFDE33C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xFDE4EC", Offset = "0xFDE4EC", VA = "0xFDE4EC")]
		private void OnPlayerControlSpawned(Events.PlayerControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xFDE5AC", Offset = "0xFDE5AC", VA = "0xFDE5AC")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xFDE5B4", Offset = "0xFDE5B4", VA = "0xFDE5B4")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xFDE64C", Offset = "0xFDE64C", VA = "0xFDE64C")]
		private void OnCountdownEnded(Events.CountdownEndedEvent eventData)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xFDE6DC", Offset = "0xFDE6DC", VA = "0xFDE6DC")]
		private void OnCountdownStarted(Events.CountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xFDE834", Offset = "0xFDE834", VA = "0xFDE834")]
		private void OnCountdownTimeUpdated(Events.CountdownTimeUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xFDE910", Offset = "0xFDE910", VA = "0xFDE910")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xFDE7A8", Offset = "0xFDE7A8", VA = "0xFDE7A8")]
		private void DisplayCountdown()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xFDE51C", Offset = "0xFDE51C", VA = "0xFDE51C")]
		private void PlayerControlSpawned(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xFDE650", Offset = "0xFDE650", VA = "0xFDE650")]
		private void CountdownEnded()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xFDEEC4", Offset = "0xFDEEC4", VA = "0xFDEEC4")]
		public string GetNotificationTerm()
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xFDE184", Offset = "0xFDE184", VA = "0xFDE184")]
		public void ResetColor()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xFDE4E0", Offset = "0xFDE4E0", VA = "0xFDE4E0")]
		public void SetTrackPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xFDE604", Offset = "0xFDE604", VA = "0xFDE604")]
		public void ResetHUD()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xFDE9CC", Offset = "0xFDE9CC", VA = "0xFDE9CC")]
		public void SetPauseInfoActive(bool active, int pauseCount = 0)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xFDED58", Offset = "0xFDED58", VA = "0xFDED58")]
		public void DisableNotification(bool force = false)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xFDF01C", Offset = "0xFDF01C", VA = "0xFDF01C")]
		public void ShowNotification(string term, string paramName, string paramValue, float time, float delay = 0.01f)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xFDF138", Offset = "0xFDF138", VA = "0xFDF138")]
		public void SetNotificationTerm(string term)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xFDF228", Offset = "0xFDF228", VA = "0xFDF228")]
		public void UpdateNotificationMessage(string paramsName, string parameter, bool keepActive)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xFDF2F8", Offset = "0xFDF2F8", VA = "0xFDF2F8")]
		public void UpdateNotificationTransform(PlayerControl playerControl)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xFDF4A8", Offset = "0xFDF4A8", VA = "0xFDF4A8")]
		public void UpdateNotificationTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xFDF16C", Offset = "0xFDF16C", VA = "0xFDF16C")]
		[DebuggerHidden]
		private IEnumerator ActivateNotification(string term, float time, float delay)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xFDEB24", Offset = "0xFDEB24", VA = "0xFDEB24")]
		private void SetNotificationActive(string term)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xFDF2AC", Offset = "0xFDF2AC", VA = "0xFDF2AC")]
		public void SetNotificationActive(bool enable)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xFDEAD8", Offset = "0xFDEAD8", VA = "0xFDEAD8")]
		private void ResetNotification()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFDF550", Offset = "0xFDF550", VA = "0xFDF550")]
		public Transform GetMenuTransform()
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFDF57C", Offset = "0xFDF57C", VA = "0xFDF57C")]
		public void EnableAwaitOpponent()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFDF5EC", Offset = "0xFDF5EC", VA = "0xFDF5EC")]
		[DebuggerHidden]
		private IEnumerator ReturnToLobby()
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFDF650", Offset = "0xFDF650", VA = "0xFDF650")]
		[DebuggerHidden]
		private IEnumerator ReturnToWorkshop()
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFDF6C4", Offset = "0xFDF6C4", VA = "0xFDF6C4")]
		public void OnSystemMenuPress()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFDF7D8", Offset = "0xFDF7D8", VA = "0xFDF7D8")]
		public void ToggleMenuActive()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFDEEF0", Offset = "0xFDEEF0", VA = "0xFDEEF0")]
		public void ToggleMenuActive(bool enable)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xFDF7A8", Offset = "0xFDF7A8", VA = "0xFDF7A8")]
		public void ToggleOptionsActive(bool enable)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFDF814", Offset = "0xFDF814", VA = "0xFDF814")]
		public void UpdateMenuPosition()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xFDE078", Offset = "0xFDE078", VA = "0xFDE078")]
		private void SetEndMenuActive(bool enable, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xFDF83C", Offset = "0xFDF83C", VA = "0xFDF83C")]
		public void SetEndMenuActive(EndState endState)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xFDFF20", Offset = "0xFDFF20", VA = "0xFDFF20")]
		public void UpdateEndMenuPosition()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xFE00F8", Offset = "0xFE00F8", VA = "0xFE00F8")]
		private void LeaveArena(bool quitGame)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xFE0578", Offset = "0xFE0578", VA = "0xFE0578")]
		public void ReceiverLeaveArena(bool quitGame)
		{
		}
	}
}
namespace Assets.Scripts.UI.Basement
{
	[Token(Token = "0x20002E7")]
	public class BasementUI : MonoSingleton<BasementUI>
	{
		[Token(Token = "0x20002E8")]
		private enum TutorialType
		{
			[Token(Token = "0x40010DF")]
			Unsupported,
			[Token(Token = "0x40010E0")]
			GearVrTouchpad,
			[Token(Token = "0x40010E1")]
			Remote,
			[Token(Token = "0x40010E2")]
			Rift,
			[Token(Token = "0x40010E3")]
			Gamepad,
			[Token(Token = "0x40010E4")]
			ViveController,
			[Token(Token = "0x40010E5")]
			ViveTouch,
			[Token(Token = "0x40010E6")]
			Quest,
			[Token(Token = "0x40010E7")]
			PlayStationDualShock,
			[Token(Token = "0x40010E8")]
			PlayStationMove,
			[Token(Token = "0x40010E9")]
			ViveCosmos,
			[Token(Token = "0x40010EA")]
			ViveKnuckles,
			[Token(Token = "0x40010EB")]
			WindowsMixedReality,
			[Token(Token = "0x40010EC")]
			RiftOneHand,
			[Token(Token = "0x40010ED")]
			QuestOneHand,
			[Token(Token = "0x40010EE")]
			ViveControllerOneHand,
			[Token(Token = "0x40010EF")]
			ViveTouchOneHand,
			[Token(Token = "0x40010F0")]
			ViveCosmosOneHand,
			[Token(Token = "0x40010F1")]
			ViveKnucklesOneHand,
			[Token(Token = "0x40010F2")]
			WindowsMixedRealityOneHand,
			[Token(Token = "0x40010F3")]
			PicoNeo2,
			[Token(Token = "0x40010F4")]
			PicoNeo2OneHand
		}

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8B134", Offset = "0xC8B134")]
		[SerializeField]
		private CanvasGroup m_mainCanvasGroup;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_mainImg;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_gamepadRecenter;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_swipeImg;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_tutorialTextObjs;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI[] m_remoteTextComponents;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_controllerStatusChangedEventToken;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xFE0B58", Offset = "0xFE0B58", VA = "0xFE0B58")]
		public BasementUI()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xFE0BD8", Offset = "0xFE0BD8", VA = "0xFE0BD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xFE0CE8", Offset = "0xFE0CE8", VA = "0xFE0CE8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xFE0D8C", Offset = "0xFE0D8C", VA = "0xFE0D8C")]
		private void OnControllerConnectionStatusChanged(InputEvents.ControllerConnectionStatusChanged eventData)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xFE0E4C", Offset = "0xFE0E4C", VA = "0xFE0E4C")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xFE0E04", Offset = "0xFE0E04", VA = "0xFE0E04")]
		private void ChangeInput(AimInput aimInput, WandInput wandInput)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xFE1060", Offset = "0xFE1060", VA = "0xFE1060")]
		private void UpdateSpritesAndText(WandInput wandInput)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xFE17B0", Offset = "0xFE17B0", VA = "0xFE17B0")]
		private void UpdateAndroidSwipeSprite(WandInput wandInput, ControlType controlType)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xFE0F30", Offset = "0xFE0F30", VA = "0xFE0F30")]
		private void SetTutorialTextActive(TutorialType tutorialType)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xFE1D40", Offset = "0xFE1D40", VA = "0xFE1D40")]
		private void SetMainImage(Sprite sprite)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xFE0E80", Offset = "0xFE0E80", VA = "0xFE0E80")]
		private void SetCanvasGroupAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xFE1E94", Offset = "0xFE1E94", VA = "0xFE1E94")]
		private void SetSwipeImage(Sprite sprite)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class ControlsTextHandler
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReadOnlyList<string> sm_gearVrRemotePress;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IReadOnlyList<string> sm_gearVrRemoteSwipe;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IReadOnlyList<string> sm_gearVrRemotePoint;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IReadOnlyList<string> sm_daydreamRemotePress;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IReadOnlyList<string> sm_daydreamRemoteSwipe;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IReadOnlyList<string> sm_daydreamRemotePoint;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IReadOnlyList<string> sm_picoRemoteSwipe;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IReadOnlyList<string> sm_picoRemotePoint;

		[Token(Token = "0x1700032A")]
		private static string Swipe
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xFE1FDC", Offset = "0xFE1FDC", VA = "0xFE1FDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private static string Point
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xFE202C", Offset = "0xFE202C", VA = "0xFE202C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private static string Press
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xFE207C", Offset = "0xFE207C", VA = "0xFE207C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private static string Touch
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xFE20CC", Offset = "0xFE20CC", VA = "0xFE20CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private static string Hold
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xFE211C", Offset = "0xFE211C", VA = "0xFE211C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		private static string SelectSpell
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xFE216C", Offset = "0xFE216C", VA = "0xFE216C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private static string ChangeSpell
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xFE21BC", Offset = "0xFE21BC", VA = "0xFE21BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private static string Teleport
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xFE220C", Offset = "0xFE220C", VA = "0xFE220C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private static string UseSpell
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xFE225C", Offset = "0xFE225C", VA = "0xFE225C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private static string Recenter
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xFE22AC", Offset = "0xFE22AC", VA = "0xFE22AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private static string Menu
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xFE22FC", Offset = "0xFE22FC", VA = "0xFE22FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xFE1FD4", Offset = "0xFE1FD4", VA = "0xFE1FD4")]
		public ControlsTextHandler()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xFE18E0", Offset = "0xFE18E0", VA = "0xFE18E0")]
		public static string GetGearVrRemoteInstruction(WandInput wandInput, int index)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xFE234C", Offset = "0xFE234C", VA = "0xFE234C")]
		public static string GetDaydreamInstruction(WandInput wandInput, int index)
		{
			return null;
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xFE1B50", Offset = "0xFE1B50", VA = "0xFE1B50")]
		public static string GetPicoInstruction(WandInput wandInput, int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EA")]
	public class TrainingDummyUI : MonoBehaviour
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_hpCanvasGroup;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_vitalBar;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_vitalSpent;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xFE31AC", Offset = "0xFE31AC", VA = "0xFE31AC")]
		public TrainingDummyUI()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xFE31B4", Offset = "0xFE31B4", VA = "0xFE31B4")]
		public void SetBarActive(bool active)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xFE31FC", Offset = "0xFE31FC", VA = "0xFE31FC")]
		public void UpdateFillAmount(float fillAmount, float changeValue)
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8B200", Offset = "0xC8B200")]
	public class BtnOptions : MonoBehaviour, IVisibilityToggleable
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] sm_toolTipTerms;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text m_toolTip;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_toolTipLocalize;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8B284", Offset = "0xC8B284")]
		[SerializeField]
		private BtnOptionsTypes m_btnOptionsType;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private AimInput m_aimInput;

		[Token(Token = "0x17000335")]
		public bool ShouldBeEnabled
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xFE32C0", Offset = "0xFE32C0", VA = "0xFE32C0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xFE32B0", Offset = "0xFE32B0", VA = "0xFE32B0")]
		public BtnOptions()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xFE34E0", Offset = "0xFE34E0", VA = "0xFE34E0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xFE3D8C", Offset = "0xFE3D8C", VA = "0xFE3D8C", Slot = "6")]
		public virtual void Interact()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xFE3CD8", Offset = "0xFE3CD8", VA = "0xFE3CD8")]
		private void ToggleLanguage(string language)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xFE3C20", Offset = "0xFE3C20", VA = "0xFE3C20")]
		protected void SetTooltipTerm(bool enabled)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xFE3914", Offset = "0xFE3914", VA = "0xFE3914")]
		protected void SetTooltipTerm(string newTerm)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xFE43B8", Offset = "0xFE43B8", VA = "0xFE43B8")]
		private void ToggleSubtitles()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xFE45DC", Offset = "0xFE45DC", VA = "0xFE45DC")]
		private void ToggleDualWield()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xFE4204", Offset = "0xFE4204", VA = "0xFE4204")]
		private void ToggleWandGrip()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xFE3A84", Offset = "0xFE3A84", VA = "0xFE3A84")]
		private static string GetGripName(WandGrip wandGrip)
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xFE4134", Offset = "0xFE4134", VA = "0xFE4134")]
		private void TogglePrimaryHand()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xFE37B4", Offset = "0xFE37B4", VA = "0xFE37B4")]
		private void ToggleMusic(bool enable)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xFE46FC", Offset = "0xFE46FC", VA = "0xFE46FC")]
		private void ToggleInputText()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xFE407C", Offset = "0xFE407C", VA = "0xFE407C")]
		private void ToggleInput()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xFE39C8", Offset = "0xFE39C8", VA = "0xFE39C8")]
		private void TogglePositionalTrackingOpponent(bool enable)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xFE4314", Offset = "0xFE4314", VA = "0xFE4314")]
		private void ToggleVoip(bool enabled)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xFE4980", Offset = "0xFE4980", VA = "0xFE4980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B2D0", Offset = "0xC8B2D0")]
		private void <Interact>m__0(bool hasInternet)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xFE4AEC", Offset = "0xFE4AEC", VA = "0xFE4AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B2E0", Offset = "0xC8B2E0")]
		private void <Interact>m__1(bool hasAccess)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class BtnOptionsControlScheme : BtnOptions
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_tooltipText;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WandInput m_currentScheme;

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xFE4AFC", Offset = "0xFE4AFC", VA = "0xFE4AFC")]
		public BtnOptionsControlScheme()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xFE4B74", Offset = "0xFE4B74", VA = "0xFE4B74", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xFE4C4C", Offset = "0xFE4C4C", VA = "0xFE4C4C", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFE4C7C", Offset = "0xFE4C7C", VA = "0xFE4C7C")]
		public void UpdateDisplayText()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xFE4BF4", Offset = "0xFE4BF4", VA = "0xFE4BF4")]
		private void SetControlScheme(WandInput scheme)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xFE4C80", Offset = "0xFE4C80", VA = "0xFE4C80")]
		private void SetTooltipText()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFE4D30", Offset = "0xFE4D30", VA = "0xFE4D30")]
		private string GetLocalizedString()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.UI.Button
{
	[Token(Token = "0x20002ED")]
	public class AIDifficultyButtonToggler : MonoBehaviour
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AIOptions m_aIOptions;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BotDifficultyLevel m_difficultyLevel;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider m_buttonCollider;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected TextMeshPro m_toolTip;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected BotButtonTextColorer m_number;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Image m_iconImg;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_selected;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFE4F6C", Offset = "0xFE4F6C", VA = "0xFE4F6C")]
		public AIDifficultyButtonToggler()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFE4F7C", Offset = "0xFE4F7C", VA = "0xFE4F7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFE508C", Offset = "0xFE508C", VA = "0xFE508C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFE4F84", Offset = "0xFE4F84", VA = "0xFE4F84")]
		private void ToggleButtonEnabled(bool enable)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xFE5130", Offset = "0xFE5130", VA = "0xFE5130")]
		public void Select()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xFE52EC", Offset = "0xFE52EC", VA = "0xFE52EC")]
		public void Deselect()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xFE5228", Offset = "0xFE5228", VA = "0xFE5228")]
		private void UpdateTooltip()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8B360", Offset = "0xC8B360")]
	public class BotButtonTextColorer : WandsButtonHighlighter
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Color m_defaultColor;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isSelected;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_text;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xFE5388", Offset = "0xFE5388", VA = "0xFE5388")]
		public BotButtonTextColorer()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xFE5430", Offset = "0xFE5430", VA = "0xFE5430", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xFE5534", Offset = "0xFE5534", VA = "0xFE5534", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xFE5448", Offset = "0xFE5448", VA = "0xFE5448")]
		public void ChangeTextColor(Color newColor)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xFE5214", Offset = "0xFE5214", VA = "0xFE5214")]
		public void Select()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xFE5350", Offset = "0xFE5350", VA = "0xFE5350")]
		public void Deselect()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class BotSelectedTooltipToggler : WandsButtonHighlighter
	{
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xFE554C", Offset = "0xFE554C", VA = "0xFE554C")]
		public BotSelectedTooltipToggler()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xFE5554", Offset = "0xFE5554", VA = "0xFE5554", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xFE55E4", Offset = "0xFE55E4", VA = "0xFE55E4", Slot = "5")]
		public override void LookExit()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class ButtonGameObjectToggler : WandsButtonHighlighter
	{
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xFE5674", Offset = "0xFE5674", VA = "0xFE5674")]
		public ButtonGameObjectToggler()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xFE567C", Offset = "0xFE567C", VA = "0xFE567C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xFE56B4", Offset = "0xFE56B4", VA = "0xFE56B4", Slot = "5")]
		public override void LookExit()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class ButtonHighlightHandler : MonoBehaviour
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Interactable m_interactable;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onLookEnter;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onLookExit;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<Interactable> m_onLookEnterAction;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Interactable> m_onLookExitAction;

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xFE56EC", Offset = "0xFE56EC", VA = "0xFE56EC")]
		public ButtonHighlightHandler()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xFE56F4", Offset = "0xFE56F4", VA = "0xFE56F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xFE57C4", Offset = "0xFE57C4", VA = "0xFE57C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xFE58A8", Offset = "0xFE58A8", VA = "0xFE58A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xFE598C", Offset = "0xFE598C", VA = "0xFE598C")]
		private void LookEnter()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xFE59B8", Offset = "0xFE59B8", VA = "0xFE59B8")]
		private void LookExit()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xFE59E4", Offset = "0xFE59E4", VA = "0xFE59E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B414", Offset = "0xC8B414")]
		private void <Awake>m__0(Interactable _)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xFE5A10", Offset = "0xFE5A10", VA = "0xFE5A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B424", Offset = "0xC8B424")]
		private void <Awake>m__1(Interactable _)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8B434", Offset = "0xC8B434")]
	public class ButtonImageColorer : WandsButtonHighlighter
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image m_image;

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xFE5A3C", Offset = "0xFE5A3C", VA = "0xFE5A3C")]
		public ButtonImageColorer()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xFE5AC4", Offset = "0xFE5AC4", VA = "0xFE5AC4", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xFE5BCC", Offset = "0xFE5BCC", VA = "0xFE5BCC", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xFE5ACC", Offset = "0xFE5ACC", VA = "0xFE5ACC")]
		private void ChangeColor(bool highlight)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class ButtonScaler : WandsButtonHighlighter
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_highlightScale;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_defaultScale;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tweener m_scaleTweener;

		[Token(Token = "0x400111D")]
		private const float TweenTime = 0.5f;

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xFE5BD4", Offset = "0xFE5BD4", VA = "0xFE5BD4")]
		public ButtonScaler()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xFE5BEC", Offset = "0xFE5BEC", VA = "0xFE5BEC", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xFE5CD8", Offset = "0xFE5CD8", VA = "0xFE5CD8", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xFE5BF4", Offset = "0xFE5BF4", VA = "0xFE5BF4")]
		public void ScaleComponent(float scaleMultiplier)
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class ButtonSoundPlayer : WandsButtonHighlighter
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_clipName;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_volume;

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xE243A4", Offset = "0xE243A4", VA = "0xE243A4")]
		public ButtonSoundPlayer()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xE243BC", Offset = "0xE243BC", VA = "0xE243BC", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xE24488", Offset = "0xE24488", VA = "0xE24488", Slot = "5")]
		public override void LookExit()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8B4F8", Offset = "0xC8B4F8")]
	public class ButtonTextColorer : WandsButtonHighlighter
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Color m_defaultColor;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_Text m_text;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xE2448C", Offset = "0xE2448C", VA = "0xE2448C")]
		public ButtonTextColorer()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xE24534", Offset = "0xE24534", VA = "0xE24534", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xE2462C", Offset = "0xE2462C", VA = "0xE2462C", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xE24540", Offset = "0xE24540", VA = "0xE24540")]
		public void ChangeTextColor(Color newColor)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class ButtonToggler : MonoBehaviour
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Option m_option;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected TextMeshPro m_toolTip;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Image m_iconImg;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool m_enabled;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xE24638", Offset = "0xE24638", VA = "0xE24638")]
		public ButtonToggler()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xE24640", Offset = "0xE24640", VA = "0xE24640", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xE246C0", Offset = "0xE246C0", VA = "0xE246C0", Slot = "5")]
		public virtual void ToggleOption()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xE24714", Offset = "0xE24714", VA = "0xE24714", Slot = "6")]
		protected virtual void ToggleOption(bool enable)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xE24758", Offset = "0xE24758", VA = "0xE24758", Slot = "7")]
		protected virtual void UpdateGraphics()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xE24840", Offset = "0xE24840", VA = "0xE24840", Slot = "8")]
		protected virtual void UpdateIcon()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xE24784", Offset = "0xE24784", VA = "0xE24784")]
		private void UpdateTooltip()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class DynamicButtonToggler : ButtonToggler
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Collider m_buttonCollider;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_disableTooltipOnToggle;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xE249BC", Offset = "0xE249BC", VA = "0xE249BC")]
		public DynamicButtonToggler()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xE249CC", Offset = "0xE249CC", VA = "0xE249CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xE24B08", Offset = "0xE24B08", VA = "0xE24B08", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xE24A00", Offset = "0xE24A00", VA = "0xE24A00")]
		private void ToggleButtonEnabled(bool enable)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xE24B48", Offset = "0xE24B48", VA = "0xE24B48", Slot = "6")]
		protected override void ToggleOption(bool enable)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class LobbyLoadoutButton : InteractableButton
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_loadoutIndex;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LoadoutHandler m_loadoutHandler;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_text;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Spell[] m_loadout;

		[Token(Token = "0x17000336")]
		private Spell[] Loadout
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xE24C48", Offset = "0xE24C48", VA = "0xE24C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xE24C40", Offset = "0xE24C40", VA = "0xE24C40")]
		public LobbyLoadoutButton()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xE24CE0", Offset = "0xE24CE0", VA = "0xE24CE0")]
		public Spell[] GetUpdatedLoadout()
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xE24EBC", Offset = "0xE24EBC", VA = "0xE24EBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xE24E1C", Offset = "0xE24E1C", VA = "0xE24E1C")]
		private void LockLoadoutButton()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xE24E6C", Offset = "0xE24E6C", VA = "0xE24E6C")]
		private void UnlockLoadoutButton()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xE24FB4", Offset = "0xE24FB4", VA = "0xE24FB4", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xE250E4", Offset = "0xE250E4", VA = "0xE250E4", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xE2518C", Offset = "0xE2518C", VA = "0xE2518C", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PortalBackButton : InteractableButton
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xE25208", Offset = "0xE25208", VA = "0xE25208")]
		public PortalBackButton()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xE25210", Offset = "0xE25210", VA = "0xE25210", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xE252B8", Offset = "0xE252B8", VA = "0xE252B8", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class ReportButton : MonoBehaviour
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReportType m_reportType;

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xE25360", Offset = "0xE25360", VA = "0xE25360")]
		public ReportButton()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xE25368", Offset = "0xE25368", VA = "0xE25368")]
		public void Report()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x20002FB")]
	public class SelectableStartupOptionButton : Interactable
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent m_onInteract;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isSelected;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xEC0D04", Offset = "0xEC0D04", VA = "0xEC0D04")]
		public SelectableStartupOptionButton()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xEC0D0C", Offset = "0xEC0D0C", VA = "0xEC0D0C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xEC0D54", Offset = "0xEC0D54", VA = "0xEC0D54", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xEC0D9C", Offset = "0xEC0D9C", VA = "0xEC0D9C")]
		public void DeSelectOption()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xEC0DAC", Offset = "0xEC0DAC", VA = "0xEC0DAC", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class StartupOptionButton : InteractableText
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image m_image;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_startDisabled;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnityEvent m_onInteract;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xEC21E0", Offset = "0xEC21E0", VA = "0xEC21E0")]
		public StartupOptionButton()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xEC21E8", Offset = "0xEC21E8", VA = "0xEC21E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xEC229C", Offset = "0xEC229C", VA = "0xEC229C", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xEC21F8", Offset = "0xEC21F8", VA = "0xEC21F8")]
		public void SetActive(bool active)
		{
		}
	}
}
namespace Assets.Scripts.UI.Button
{
	[Token(Token = "0x20002FD")]
	public abstract class WandsButtonHighlighter : MonoBehaviour
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0xE243B4", Offset = "0xE243B4", VA = "0xE243B4")]
		protected WandsButtonHighlighter()
		{
		}

		[Token(Token = "0x6001503")]
		public abstract void LookEnter();

		[Token(Token = "0x6001504")]
		public abstract void LookExit();
	}
	[Token(Token = "0x20002FE")]
	public class WandStationWorkshopButton : WorkshopButton
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8B64C", Offset = "0xC8B64C")]
		[SerializeField]
		private ButtonState m_buttonState;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private WandHand m_wandHand;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private WandType m_wandType;

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xE253FC", Offset = "0xE253FC", VA = "0xE253FC")]
		public WandStationWorkshopButton()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xE25424", Offset = "0xE25424", VA = "0xE25424")]
		public void UpdateButton(ButtonState newState, WandType newType)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xE25720", Offset = "0xE25720", VA = "0xE25720", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xE25858", Offset = "0xE25858", VA = "0xE25858")]
		private void EquipWand()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class WorkshopButton : Interactable
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_background;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_hoverBackground;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Text m_text;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UnityEvent m_onInteract;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Color m_defaultTextColor;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Color m_defaultBackgroundColor;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Image m_backgroundImage;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Image m_hoverBackgroundImage;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Localize m_localize;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xE25410", Offset = "0xE25410", VA = "0xE25410")]
		public WorkshopButton()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xE25A08", Offset = "0xE25A08", VA = "0xE25A08")]
		private void Start()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xE255EC", Offset = "0xE255EC", VA = "0xE255EC")]
		public void Lock(bool locked)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xE25ADC", Offset = "0xE25ADC", VA = "0xE25ADC", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xE25C80", Offset = "0xE25C80", VA = "0xE25C80", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xE259A8", Offset = "0xE259A8", VA = "0xE259A8", Slot = "6")]
		public override void Interact()
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x2000300")]
	public class ButtonSorter : MonoBehaviour
	{
		[Token(Token = "0x2000301")]
		private enum ButtonSortType
		{
			[Token(Token = "0x4001148")]
			TopDown,
			[Token(Token = "0x4001149")]
			Center,
			[Token(Token = "0x400114A")]
			Scaled,
			[Token(Token = "0x400114B")]
			BottomUp
		}

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_sortAtStart;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MonoBehaviour[] m_buttons;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonSortType m_buttonSortType;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_topPosition;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_bottomPosition;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xE25E24", Offset = "0xE25E24", VA = "0xE25E24")]
		public ButtonSorter()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xE25E2C", Offset = "0xE25E2C", VA = "0xE25E2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001511")]
		public void Sort<T>(T[] buttons) where T : MonoBehaviour
		{
		}

		[Token(Token = "0x6001512")]
		private void Sort<T>(float position, List<T> buttons, bool up) where T : MonoBehaviour
		{
		}

		[Token(Token = "0x6001513")]
		private void CenterSort<T>(float bottomPosition, float topPosition, List<T> buttons) where T : MonoBehaviour
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8B768", Offset = "0xC8B768")]
	public class Checkbox : InteractableButton
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Texture m_checkedTexture;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Texture m_hoverTexture;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture m_uncheckedTexture;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RawImage m_rawImage;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B7EC", Offset = "0xC8B7EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8B7EC", Offset = "0xC8B7EC")]
		private bool <Checked>k__BackingField;

		[Token(Token = "0x17000337")]
		public bool Checked
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xE25E9C", Offset = "0xE25E9C", VA = "0xE25E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B828", Offset = "0xC8B828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xE25EA4", Offset = "0xE25EA4", VA = "0xE25EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B838", Offset = "0xC8B838")]
			private set
			{
			}
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xE25E94", Offset = "0xE25E94", VA = "0xE25E94")]
		public Checkbox()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xE25EB0", Offset = "0xE25EB0", VA = "0xE25EB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xE25F24", Offset = "0xE25F24", VA = "0xE25F24", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xE25F78", Offset = "0xE25F78", VA = "0xE25F78", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xE25FC8", Offset = "0xE25FC8", VA = "0xE25FC8", Slot = "6")]
		public override void Interact()
		{
		}
	}
}
[Token(Token = "0x2000303")]
public class FadeHandler : ExpandedSingleton<FadeHandler>
{
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B8D4", Offset = "0xC8B8D4")]
	private sealed class <FadeInSphere>c__AnonStorey0
	{
		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Action onCompleted;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal FadeHandler $this;

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xF63F6C", Offset = "0xF63F6C", VA = "0xF63F6C")]
		public <FadeInSphere>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xF64B20", Offset = "0xF64B20", VA = "0xF64B20")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_fadeSphere;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material m_fadeMaterial;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tweener m_tweenerInProgress;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventToken m_matchResetEventToken;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventToken m_energyDepletedEventToken;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B858", Offset = "0xC8B858")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8B858", Offset = "0xC8B858")]
	private bool <BlockScreenFlash>k__BackingField;

	[Token(Token = "0x17000338")]
	public bool BlockScreenFlash
	{
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF632B4", Offset = "0xF632B4", VA = "0xF632B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B894", Offset = "0xC8B894")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF632BC", Offset = "0xF632BC", VA = "0xF632BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B8A4", Offset = "0xC8B8A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000339")]
	public bool IsFading
	{
		[Token(Token = "0x600151E")]
		[Address(RVA = "0xF517EC", Offset = "0xF517EC", VA = "0xF517EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B8B4", Offset = "0xC8B8B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700033A")]
	public bool IsFaded
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0xF632C8", Offset = "0xF632C8", VA = "0xF632C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8B8C4", Offset = "0xC8B8C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xF63264", Offset = "0xF63264", VA = "0xF63264")]
	public FadeHandler()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xF63304", Offset = "0xF63304", VA = "0xF63304", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xF63604", Offset = "0xF63604", VA = "0xF63604")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xF63714", Offset = "0xF63714", VA = "0xF63714")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xF637A4", Offset = "0xF637A4", VA = "0xF637A4")]
	private void OnMatchReset(Events.MatchResetEvent eventData)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xF6383C", Offset = "0xF6383C", VA = "0xF6383C")]
	private void OnEnergyDepleted(Events.EnergyDepletedEvent eventData)
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xF637A8", Offset = "0xF637A8", VA = "0xF637A8")]
	private void OnMatchReset()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xF63AD8", Offset = "0xF63AD8", VA = "0xF63AD8")]
	public void SetMaterialRenderQueue(int queue)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xF63B88", Offset = "0xF63B88", VA = "0xF63B88")]
	public void SetSphereParent(Transform parent)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xF638C4", Offset = "0xF638C4", VA = "0xF638C4")]
	public void ScreenFlashAndFade(Color fadeColor)
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xF63C34", Offset = "0xF63C34", VA = "0xF63C34")]
	private void DisableFadeSphere()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xF63C80", Offset = "0xF63C80", VA = "0xF63C80")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xF6349C", Offset = "0xF6349C", VA = "0xF6349C")]
	public void FadeIn(float fadeTime, float delay = 0f, bool resetAlpha = true, [Optional] Action onCompleted)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xF63D50", Offset = "0xF63D50", VA = "0xF63D50")]
	private void FadeInSphere(float fadeTime, float delay, bool resetAlpha, Color fadeColor, Action onCompleted)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xF63F74", Offset = "0xF63F74", VA = "0xF63F74")]
	public Tweener FadeInWithReturn(float fadeTime, float delay = 0f, bool resetAlpha = true)
	{
		return null;
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xF63FF4", Offset = "0xF63FF4", VA = "0xF63FF4")]
	private Tweener InternalFadeIn(float fadeTime, float delay, bool resetAlpha, Color fadeColor)
	{
		return null;
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xF641CC", Offset = "0xF641CC", VA = "0xF641CC")]
	public void FadeOut(float fadeTime)
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xF64498", Offset = "0xF64498", VA = "0xF64498")]
	public void FadeOut(float fadeTime, float endAlpha)
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xF645B4", Offset = "0xF645B4", VA = "0xF645B4")]
	public void FadeOut(float fadeTime, Color fadeColor)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xF646CC", Offset = "0xF646CC", VA = "0xF646CC")]
	public void FadeOut(float fadeTime, float endAlpha, Color fadeColor, bool forceFade = false)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xF642E4", Offset = "0xF642E4", VA = "0xF642E4")]
	private Tweener FadeOutSphere(float fadeTime, float endAlpha, Color fadeColor, bool forceFade = false)
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xF647F8", Offset = "0xF647F8", VA = "0xF647F8")]
	public Tweener FadeOutWithReturn(float fadeTime, Color fadeColor, bool forceFade)
	{
		return null;
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xF64970", Offset = "0xF64970", VA = "0xF64970")]
	private Tweener InternalFadeOut(float fadeTime, float endAlpha, Color fadeColor)
	{
		return null;
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xF64818", Offset = "0xF64818", VA = "0xF64818")]
	private Tweener InternalForceFadeOut(float fadeTime, float endAlpha, Color fadeColor)
	{
		return null;
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xF64B18", Offset = "0xF64B18", VA = "0xF64B18")]
	private void SetTweenerToNull()
	{
	}
}
namespace Cortopia.Scripts.UI.HUD
{
	[Token(Token = "0x2000304")]
	public class ControllerInfoHandler : MonoBehaviour
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_background;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer m_button;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_controllerDisconnectedToken;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_subtitlesEventToken;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_backgroundRatio;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_cameraTransform;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LayerMask m_hitMask;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_enabled;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TMP_Text m_text;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_fontRatio;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_widthRatio;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001164")]
		private const float ForwardOffset = 3f;

		[Token(Token = "0x4001165")]
		private const float LerpSpeed = 0.5f;

		[Token(Token = "0x4001166")]
		private const float OutlineWidth = 0.15f;

		[Token(Token = "0x4001167")]
		private const float CameraForwardScale = 0.1f;

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xE6322C", Offset = "0xE6322C", VA = "0xE6322C")]
		public ControllerInfoHandler()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xE63234", Offset = "0xE63234", VA = "0xE63234")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xE632C4", Offset = "0xE632C4", VA = "0xE632C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xE634D0", Offset = "0xE634D0", VA = "0xE634D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xE63760", Offset = "0xE63760", VA = "0xE63760")]
		private void Update()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xE640D8", Offset = "0xE640D8", VA = "0xE640D8")]
		private void OnSubtitlesEvent(Events.OnSubtitlesShowEvent obj)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xE641A4", Offset = "0xE641A4", VA = "0xE641A4")]
		private void EnableInfo()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xE64144", Offset = "0xE64144", VA = "0xE64144")]
		private void SetStatusInfo()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xE64204", Offset = "0xE64204", VA = "0xE64204")]
		private void DisableInfo()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xE642E4", Offset = "0xE642E4", VA = "0xE642E4")]
		private void OnControllerConnectionStatusChanged(InputEvents.ControllerConnectionStatusChanged eventData)
		{
		}
	}
}
namespace Assets.Scripts.UI.HUD
{
	[Token(Token = "0x2000305")]
	public class HUDEndScreen : MonoBehaviourPun
	{
		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BB00", Offset = "0xC8BB00")]
		private sealed class <ContinueToLobby>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int totalSeconds;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int <minutes>__1;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int <seconds>__1;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal HUDEndScreen $this;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x1700060F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BA7")]
				[Address(RVA = "0xE272E4", Offset = "0xE272E4", VA = "0xE272E4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000610")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA8")]
				[Address(RVA = "0xE272EC", Offset = "0xE272EC", VA = "0xE272EC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0xE262D4", Offset = "0xE262D4", VA = "0xE262D4")]
			[DebuggerHidden]
			public <ContinueToLobby>c__Iterator0()
			{
			}

			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xE270D0", Offset = "0xE270D0", VA = "0xE270D0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xE272F4", Offset = "0xE272F4", VA = "0xE272F4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0xE27308", Offset = "0xE27308", VA = "0xE27308", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8B914", Offset = "0xC8B914")]
		[SerializeField]
		private TMP_Text m_player1Name;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text m_player1Health;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_player1ManaUsed;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_player1DamageInflicted;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_player1PickupsUsed;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8B9A0", Offset = "0xC8B9A0")]
		[SerializeField]
		private TMP_Text m_player2Name;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text m_player2Health;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text m_player2ManaUsed;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text m_player2DamageInflicted;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_Text m_player2PickupsUsed;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8BA2C", Offset = "0xC8BA2C")]
		[SerializeField]
		private LocalizationParamsManager m_matchTime;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LocalizationParamsManager m_timeLeft;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Localize[] m_badges;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color m_opponentBadgeColor;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC8BAA8", Offset = "0xC8BAA8")]
		[SerializeField]
		private InteractableButton m_leaveButton;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private int m_secondsBeforeAutoLeave;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_currentBadge;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<MatchRewardType, string> m_terms;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xE26030", Offset = "0xE26030", VA = "0xE26030")]
		public HUDEndScreen()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xE26248", Offset = "0xE26248", VA = "0xE26248")]
		[DebuggerHidden]
		private IEnumerator ContinueToLobby(int totalSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xE262DC", Offset = "0xE262DC", VA = "0xE262DC")]
		public void SetInfo(EndState endState)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xE26E08", Offset = "0xE26E08", VA = "0xE26E08")]
		private void OnPlayerBadgeEarned(MatchRewardType type)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xE26F00", Offset = "0xE26F00", VA = "0xE26F00")]
		private void OnOpponentBadgeEarned(MatchRewardType type)
		{
		}
	}
}
namespace Cortopia.Scripts.UI.HUD
{
	[Token(Token = "0x2000306")]
	public class PlayerUI : MonoBehaviour
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerUISpells m_iconHandler;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerUIHealthBar m_healthBar;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerUIManaBar m_manaBar;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Canvas m_canvas;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup m_mainCanvasGroup;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8BBB0", Offset = "0xC8BBB0")]
		[SerializeField]
		private HapticsData m_canCastHapticsData;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip[] m_manaSounds;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8BC1C", Offset = "0xC8BC1C")]
		[SerializeField]
		private Transform m_moveTransform;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3 m_hudPositionOffset;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_moveLerpSpeed;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_isUpdatingPosition;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_canCastSpell;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool m_isDualWielding;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_currentCastCost;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Spell m_previouslySelectedSpell;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_cameraTransform;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerAim m_aim;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Wielder m_wielder;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StatsData m_healthData;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StatsData m_manaData;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_spellSelectedEventToken;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_energyDepletedEventToken;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_suddenDeathStartedEventToken;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_armorActivationEventToken;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xE64328", Offset = "0xE64328", VA = "0xE64328")]
		public PlayerUI()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xE643D0", Offset = "0xE643D0", VA = "0xE643D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xE64588", Offset = "0xE64588", VA = "0xE64588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xE64648", Offset = "0xE64648", VA = "0xE64648")]
		private void OnSpellSelected(Events.SpellSelectedEvent eventData)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xE64874", Offset = "0xE64874", VA = "0xE64874")]
		private void OnEnergyDepleted(Events.EnergyDepletedEvent eventData)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xE64984", Offset = "0xE64984", VA = "0xE64984")]
		private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xE64AB8", Offset = "0xE64AB8", VA = "0xE64AB8")]
		private void OnArmorActivated(Events.ArmorActivationEvent eventData)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xE64BF0", Offset = "0xE64BF0", VA = "0xE64BF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xE55EC0", Offset = "0xE55EC0", VA = "0xE55EC0")]
		public void InitializeHUD(PlayerAim aim, Camera camera, StatsData healthData, StatsData manaData)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xE56170", Offset = "0xE56170", VA = "0xE56170")]
		public void SetActive(bool active, Wielder wielder, bool isDualWielding)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xE56090", Offset = "0xE56090", VA = "0xE56090")]
		public void UpdateLoadoutIcons(Spell[] spellTypes, int[] castCosts, Spell activeSpell)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xE57288", Offset = "0xE57288", VA = "0xE57288")]
		public void UpdateSelectedSpell()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xE65718", Offset = "0xE65718", VA = "0xE65718")]
		public void ResetVitals()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xE572B4", Offset = "0xE572B4", VA = "0xE572B4")]
		public void ResetVitalBars()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xE5723C", Offset = "0xE5723C", VA = "0xE5723C")]
		public void FadeHUD(bool fadeIn)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xE55580", Offset = "0xE55580", VA = "0xE55580")]
		public void FadeHudCompletely()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xE575DC", Offset = "0xE575DC", VA = "0xE575DC")]
		public void UpdateHealthBar(float changeValue)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xE57408", Offset = "0xE57408", VA = "0xE57408")]
		public void UpdateManaBar(float changeValue)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xE57330", Offset = "0xE57330", VA = "0xE57330")]
		public void SetCastFeedbackActive(bool active, WandHand wandHand)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xE64CE0", Offset = "0xE64CE0", VA = "0xE64CE0")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xE6525C", Offset = "0xE6525C", VA = "0xE6525C")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xE619A4", Offset = "0xE619A4", VA = "0xE619A4")]
		public void DeselectSpell(WandHand wandHand)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xE64678", Offset = "0xE64678", VA = "0xE64678")]
		private void SelectSpell(SpellBase spell)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xE66234", Offset = "0xE66234", VA = "0xE66234")]
		private void TryUpdateCastCostIndicators(int castCost, CostType costType)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xE6624C", Offset = "0xE6624C", VA = "0xE6624C")]
		private void UpdateCastCostIndicators(CostType costType)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xE65BD4", Offset = "0xE65BD4", VA = "0xE65BD4")]
		private void PlaySfx(int clipIndex)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class PlayerUIHealthBar : PlayerUIVitalBarBase
	{
		[Token(Token = "0x6001561")]
		[Address(RVA = "0xE66368", Offset = "0xE66368", VA = "0xE66368")]
		public PlayerUIHealthBar()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xE64AF8", Offset = "0xE64AF8", VA = "0xE64AF8")]
		public void SetArmorActive(bool active)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xE6643C", Offset = "0xE6643C", VA = "0xE6643C", Slot = "6")]
		public override void ResetVitals()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xE658A8", Offset = "0xE658A8", VA = "0xE658A8")]
		public void UpdateHealthHighlight()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xE66538", Offset = "0xE66538", VA = "0xE66538", Slot = "7")]
		public override void OnSpellSelected(int currentCastCost, bool tryEnable)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xE6656C", Offset = "0xE6656C", VA = "0xE6656C", Slot = "4")]
		public override void UpdateVitals(float changeValue)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xE66840", Offset = "0xE66840", VA = "0xE66840", Slot = "8")]
		protected override void AddFillAmount(float fillAmount, float changeValue)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xE668F8", Offset = "0xE668F8", VA = "0xE668F8", Slot = "9")]
		protected override void SubtractFillAmount(float fillAmount, float changeValue)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class PlayerUIIcon : MonoBehaviour
	{
		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BF14", Offset = "0xC8BF14")]
		private sealed class <UpdateIconState>c__AnonStorey0
		{
			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float flareMoveSpeed;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal PlayerUIIcon $this;

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0xE67444", Offset = "0xE67444", VA = "0xE67444")]
			public <UpdateIconState>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xE67B68", Offset = "0xE67B68", VA = "0xE67B68")]
			internal void <>m__0()
			{
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0xE67CE8", Offset = "0xE67CE8", VA = "0xE67CE8")]
			internal void <>m__1()
			{
			}
		}

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_channelFadeTime;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RadialElement_Rotate m_uiRotate;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8BCA8", Offset = "0xC8BCA8")]
		[SerializeField]
		private Image m_background;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mask m_backgroundMask;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image m_icon;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_channelEffect;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform m_flare;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image m_selectMarker;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3 m_stickPosition;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 m_movePosition;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_isChargeable;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private IconState m_currentState;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RectTransform m_selectMarkerTransform;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tweener m_selectMarkerPulseTweener;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Tweener m_iconPulseTweener;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BD64", Offset = "0xC8BD64")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8BD64", Offset = "0xC8BD64")]
		private int <Index>k__BackingField;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BDA0", Offset = "0xC8BDA0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8BDA0", Offset = "0xC8BDA0")]
		private int <SpellCastCost>k__BackingField;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BDDC", Offset = "0xC8BDDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8BDDC", Offset = "0xC8BDDC")]
		private string <SpellName>k__BackingField;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE18", Offset = "0xC8BE18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8BE18", Offset = "0xC8BE18")]
		private bool <BlockCastFeedback>k__BackingField;

		[Token(Token = "0x1700033B")]
		public int Index
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0xE66A98", Offset = "0xE66A98", VA = "0xE66A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE54", Offset = "0xC8BE54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600156B")]
			[Address(RVA = "0xE66AA0", Offset = "0xE66AA0", VA = "0xE66AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE64", Offset = "0xC8BE64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public int SpellCastCost
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xE66AA8", Offset = "0xE66AA8", VA = "0xE66AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE74", Offset = "0xC8BE74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xE66AB0", Offset = "0xE66AB0", VA = "0xE66AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE84", Offset = "0xC8BE84")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public string SpellName
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xE66AB8", Offset = "0xE66AB8", VA = "0xE66AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BE94", Offset = "0xC8BE94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xE66AC0", Offset = "0xE66AC0", VA = "0xE66AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BEA4", Offset = "0xC8BEA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public bool BlockCastFeedback
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0xE66AC8", Offset = "0xE66AC8", VA = "0xE66AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BEB4", Offset = "0xC8BEB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xE66AD0", Offset = "0xE66AD0", VA = "0xE66AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BEC4", Offset = "0xC8BEC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public bool IsChanneling
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0xE66ADC", Offset = "0xE66ADC", VA = "0xE66ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BED4", Offset = "0xC8BED4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000340")]
		public bool IsSelected
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0xE66AEC", Offset = "0xE66AEC", VA = "0xE66AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BEE4", Offset = "0xC8BEE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public bool IsDisabled
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xE66AFC", Offset = "0xE66AFC", VA = "0xE66AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BEF4", Offset = "0xC8BEF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xE669FC", Offset = "0xE669FC", VA = "0xE669FC")]
		public PlayerUIIcon()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xE66B0C", Offset = "0xE66B0C", VA = "0xE66B0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xE66CE4", Offset = "0xE66CE4", VA = "0xE66CE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xE66DA0", Offset = "0xE66DA0", VA = "0xE66DA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xE66E18", Offset = "0xE66E18", VA = "0xE66E18")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xE66EF4", Offset = "0xE66EF4", VA = "0xE66EF4")]
		public void EnableIcon()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xE66F2C", Offset = "0xE66F2C", VA = "0xE66F2C")]
		public void DisableIcon()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xE66FA8", Offset = "0xE66FA8", VA = "0xE66FA8")]
		public void SetValues(int index, Sprite spellIcon, string spellName, int spellCastCost, bool isChargeable)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xE67014", Offset = "0xE67014", VA = "0xE67014")]
		public void ResetIconState(bool useFadedAlpha)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xE6716C", Offset = "0xE6716C", VA = "0xE6716C")]
		public void UpdateIconState(float currentValue, float iconFadeTime, float flareMoveSpeed)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xE67188", Offset = "0xE67188", VA = "0xE67188")]
		public void UpdateIconState(bool tryDisable, float iconFadeTime, float flareMoveSpeed)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xE6744C", Offset = "0xE6744C", VA = "0xE6744C")]
		public void PlayEnergyDepletedFeedback()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xE675CC", Offset = "0xE675CC", VA = "0xE675CC")]
		public void PlayCastFeedback(float tweenTime, Vector3 selectScale, Vector3 iconScale)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xE66BE4", Offset = "0xE66BE4", VA = "0xE66BE4")]
		public void DisableChannelEffect()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xE67748", Offset = "0xE67748", VA = "0xE67748")]
		public void SelectImage(bool isPreviewSelection)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xE67970", Offset = "0xE67970", VA = "0xE67970")]
		public void DeselectImage(bool disableGameObject)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xE66E48", Offset = "0xE66E48", VA = "0xE66E48")]
		public void SetIconPosition(WandInput input)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xE67454", Offset = "0xE67454", VA = "0xE67454")]
		private void PulseIconMarker(TweenCallback onTweenCompleted)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xE678A4", Offset = "0xE678A4", VA = "0xE678A4")]
		private void PulseSelectMarker()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xE67AE4", Offset = "0xE67AE4", VA = "0xE67AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BF04", Offset = "0xC8BF04")]
		private void <PlayCastFeedback>m__0()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class PlayerUILingeringEffects : MonoBehaviour
	{
		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BF34", Offset = "0xC8BF34")]
		private sealed class <EnableEffect>c__AnonStorey0
		{
			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal CanvasGroup canvasGroup;

			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xE687DC", Offset = "0xE687DC", VA = "0xE687DC")]
			public <EnableEffect>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0xE68B4C", Offset = "0xE68B4C", VA = "0xE68B4C")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BF44", Offset = "0xC8BF44")]
		private sealed class <DisableEffect>c__AnonStorey1
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal CanvasGroup canvasGroup;

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0xE68AFC", Offset = "0xE68AFC", VA = "0xE68AFC")]
			public <DisableEffect>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0xE68B04", Offset = "0xE68B04", VA = "0xE68B04")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x40011A7")]
		private const float IconFadeTime = 0.15f;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image[] m_iconImages;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Spell, CanvasGroup> m_imageEffectPairs;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_armorActivationEventToken;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_curseActivationEventToken;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_chillingClutchActivationEventToken;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_freeTeleportActivationEventToken;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xE67D68", Offset = "0xE67D68", VA = "0xE67D68")]
		public PlayerUILingeringEffects()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xE67DF0", Offset = "0xE67DF0", VA = "0xE67DF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xE67FA8", Offset = "0xE67FA8", VA = "0xE67FA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xE681D0", Offset = "0xE681D0", VA = "0xE681D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xE68070", Offset = "0xE68070", VA = "0xE68070")]
		private void TryDisableEffects()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xE68308", Offset = "0xE68308", VA = "0xE68308")]
		private void OnArmorActivated(Events.ArmorActivationEvent eventData)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xE68368", Offset = "0xE68368", VA = "0xE68368")]
		private void OnCurseActivated(Events.CurseActivationEvent eventData)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xE683B4", Offset = "0xE683B4", VA = "0xE683B4")]
		private void OnChillingClutchActivated(Events.ChillingClutchActivationEvent eventData)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xE68400", Offset = "0xE68400", VA = "0xE68400")]
		private void OnFreeTeleportActivated(Events.FreeTeleportActivationEvent eventData)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xE68354", Offset = "0xE68354", VA = "0xE68354")]
		public void SetEffectActive(bool active, Spell spellType)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xE6844C", Offset = "0xE6844C", VA = "0xE6844C")]
		private void EnableEffect(Spell spellType)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xE6864C", Offset = "0xE6864C", VA = "0xE6864C")]
		private void DisableEffect(Spell spellType)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xE68298", Offset = "0xE68298", VA = "0xE68298")]
		private void ResetCanvasGroup(CanvasGroup canvasGroup)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xE687E4", Offset = "0xE687E4", VA = "0xE687E4")]
		private void AssignAndAddImageSprite(Spell spellType, Image image)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class PlayerUIManaBar : PlayerUIVitalBarBase
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8BF54", Offset = "0xC8BF54")]
		[SerializeField]
		private TMP_Text m_manaRegenValue;

		[Token(Token = "0x17000342")]
		private RegeneratingStatsData ManaData
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xE68B98", Offset = "0xE68B98", VA = "0xE68B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8BFA0", Offset = "0xC8BFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xE68B94", Offset = "0xE68B94", VA = "0xE68B94")]
		public PlayerUIManaBar()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xE68C1C", Offset = "0xE68C1C", VA = "0xE68C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xE68CF8", Offset = "0xE68CF8", VA = "0xE68CF8", Slot = "5")]
		public override void AssignStatsData(StatsData vitalData)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xE649B0", Offset = "0xE649B0", VA = "0xE649B0")]
		public void SetSuddenDeathActive(bool active)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xE68F34", Offset = "0xE68F34", VA = "0xE68F34", Slot = "6")]
		public override void ResetVitals()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xE64EA0", Offset = "0xE64EA0", VA = "0xE64EA0")]
		public void UpdateManaTotal(float fillAmount, float maxAmount)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xE68F68", Offset = "0xE68F68", VA = "0xE68F68", Slot = "4")]
		public override void UpdateVitals(float changeValue)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xE6900C", Offset = "0xE6900C", VA = "0xE6900C", Slot = "7")]
		public override void OnSpellSelected(int currentCastCost, bool tryEnable)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xE69078", Offset = "0xE69078", VA = "0xE69078", Slot = "8")]
		protected override void AddFillAmount(float fillAmount, float changeValue)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xE6907C", Offset = "0xE6907C", VA = "0xE6907C", Slot = "9")]
		protected override void SubtractFillAmount(float fillAmount, float changeValue)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xE68E8C", Offset = "0xE68E8C", VA = "0xE68E8C")]
		private void OnRegenerationSpeedUpdated(float regenerationSpeed)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class PlayerUISpells : MonoBehaviour
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_iconFadeTime;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_flareTweenSpeed;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_feedbackTweenTime;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_canvasFadeDelay;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup m_mainCanvasgroup;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_spellTooltip;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_iconHandlerParents;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_localizedTeleport;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isSpellSelectActive;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_isPersistantNameActive;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_currentFadeDelay;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerUIIcon[] m_iconHandlers;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerUIIcon[] m_selectedIcons;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Spell, PlayerUIIcon> m_spellData;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerUIIcon[] m_manaIcons;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_spellSelectActivatedEventToken;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Vector3 m_iconScale;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private readonly Vector3 m_selectMarkScale;

		[Token(Token = "0x40011C2")]
		private const float IconTransitionTime = 0.25f;

		[Token(Token = "0x40011C3")]
		private const float HighlightTransitionTime = 0.15f;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C020", Offset = "0xC8C020")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8C020", Offset = "0xC8C020")]
		private bool <IsFadeActive>k__BackingField;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C05C", Offset = "0xC8C05C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8C05C", Offset = "0xC8C05C")]
		private bool <IsFadeSystemEnabled>k__BackingField;

		[Token(Token = "0x17000343")]
		public bool IsFadeActive
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xE64FD4", Offset = "0xE64FD4", VA = "0xE64FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C098", Offset = "0xC8C098")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xE69230", Offset = "0xE69230", VA = "0xE69230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C0A8", Offset = "0xC8C0A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public bool IsFadeSystemEnabled
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xE64FCC", Offset = "0xE64FCC", VA = "0xE64FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C0B8", Offset = "0xC8C0B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xE6923C", Offset = "0xE6923C", VA = "0xE6923C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C0C8", Offset = "0xC8C0C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool IsBloodSpellAvailable
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xE65990", Offset = "0xE65990", VA = "0xE65990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C0D8", Offset = "0xC8C0D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xE690D8", Offset = "0xE690D8", VA = "0xE690D8")]
		public PlayerUISpells()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xE69248", Offset = "0xE69248", VA = "0xE69248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xE69358", Offset = "0xE69358", VA = "0xE69358")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xE650AC", Offset = "0xE650AC", VA = "0xE650AC")]
		public void SetCorrectIconSetup(int hudIndex)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xE64FDC", Offset = "0xE64FDC", VA = "0xE64FDC")]
		public void UpdateCanvasFade()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xE693E8", Offset = "0xE693E8", VA = "0xE693E8")]
		private void OnSpellSelectActivated(Events.SpellSelectActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xE69418", Offset = "0xE69418", VA = "0xE69418")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xE65F8C", Offset = "0xE65F8C", VA = "0xE65F8C")]
		public void DeselectSpell(WandHand wandHand)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xE65FFC", Offset = "0xE65FFC", VA = "0xE65FFC")]
		public void OnSpellSelected(Spell spellType, WandHand wandHand, bool isPreviewSelection, bool forceSelect, bool disableSelectObject = false)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xE648B0", Offset = "0xE648B0", VA = "0xE648B0")]
		public void OnEnergyDepleted(WandHand wandHand)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xE65ACC", Offset = "0xE65ACC", VA = "0xE65ACC")]
		public void UpdateIconAvailabilityMana(float currentMana)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xE659F0", Offset = "0xE659F0", VA = "0xE659F0")]
		public void UpdateIconAvailabilityHealth(float currentHealth)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xE65354", Offset = "0xE65354", VA = "0xE65354")]
		public void UpdateLoadoutIcons(Spell[] spellTypes, int[] castCosts, Spell activeSpell)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xE695D4", Offset = "0xE695D4", VA = "0xE695D4")]
		private void RefreshManaIcons()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xE65DA8", Offset = "0xE65DA8", VA = "0xE65DA8")]
		public void PlayCastFeedback(WandHand wandHand)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xE65EB0", Offset = "0xE65EB0", VA = "0xE65EB0")]
		public void DisableChannelEffect(WandHand wandHand)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xE656CC", Offset = "0xE656CC", VA = "0xE656CC")]
		public void SetSpellSelectActive(bool active)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xE69800", Offset = "0xE69800", VA = "0xE69800")]
		private void DisplaySpellsCanvas(bool activateFade)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xE694A8", Offset = "0xE694A8", VA = "0xE694A8")]
		private void SetSpellTooltipActive(bool active)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xE69508", Offset = "0xE69508", VA = "0xE69508")]
		private void UpdateSpellName(string name)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xE6953C", Offset = "0xE6953C", VA = "0xE6953C")]
		private void SelectImage(PlayerUIIcon iconHandler, bool isPreviewSelection, WandHand wandHand)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public abstract class PlayerUIVitalBarBase : MonoBehaviour
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool m_showChangeValue;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected RectTransform m_barTotalHighlightTransform;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected RectTransform m_castCostHighlightTransform;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Image m_vitalBar;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Image m_vitalSpent;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_vitalBarParent;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text m_currentValueText;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text m_changeValueText;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool m_changeMainFillAmount;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool m_changeSpentFillAmount;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool m_isScalingVitalBar;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected int m_currentCastCost;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float m_previousVitalsValue;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float m_currentFillTime;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float m_fillPercentage;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float m_currentSpentValue;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float m_targetSpentValue;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float m_fillUpdateHoldTime;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float m_startFillAmount;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float m_targetFillAmount;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector2 m_currentHighlightPos;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector2 m_targetHighlightPos;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected StatsData m_statsData;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_combinedChangeValue;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_scalePercentage;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_originalScale;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private readonly Vector2 m_highlightMinPosition;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private readonly Vector2 m_highlightMaxPosition;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private readonly Vector3 m_highlightScale;

		[Token(Token = "0x40011E3")]
		protected const float FillSpeed = 3f;

		[Token(Token = "0x40011E4")]
		private const float ScaleSpeed = 0.1f;

		[Token(Token = "0x40011E5")]
		private const float FillUpdateDelay = 1f;

		[Token(Token = "0x17000346")]
		public bool IsDisplayingCastCost
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xE66324", Offset = "0xE66324", VA = "0xE66324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C168", Offset = "0xC8C168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xE6636C", Offset = "0xE6636C", VA = "0xE6636C")]
		protected PlayerUIVitalBarBase()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xE69850", Offset = "0xE69850", VA = "0xE69850")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BF")]
		public abstract void UpdateVitals(float changeValue);

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xE68E3C", Offset = "0xE68E3C", VA = "0xE68E3C", Slot = "5")]
		public virtual void AssignStatsData(StatsData vitalData)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xE6673C", Offset = "0xE6673C", VA = "0xE6673C")]
		public void HideVitalBar(float scalePercentage = 0f)
		{
		}

		[Token(Token = "0x60015C2")]
		public abstract void ResetVitals();

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xE65768", Offset = "0xE65768", VA = "0xE65768")]
		public void ResetVitalBar()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xE66564", Offset = "0xE66564", VA = "0xE66564", Slot = "7")]
		public virtual void OnSpellSelected(int currentCastCost, bool tryEnable)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xE65B88", Offset = "0xE65B88", VA = "0xE65B88")]
		public void SetCastCostIndicatorActive(bool active)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xE64E1C", Offset = "0xE64E1C", VA = "0xE64E1C")]
		public void UpdateChangeValue()
		{
		}

		[Token(Token = "0x60015C7")]
		protected abstract void AddFillAmount(float fillAmount, float changeValue);

		[Token(Token = "0x60015C8")]
		protected abstract void SubtractFillAmount(float fillAmount, float changeValue);

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xE66828", Offset = "0xE66828", VA = "0xE66828")]
		protected void HighlightVitalBar()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xE69BB0", Offset = "0xE69BB0", VA = "0xE69BB0")]
		private void ScaleUp()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xE69CE0", Offset = "0xE69CE0", VA = "0xE69CE0")]
		private void ScaleDown()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xE698F8", Offset = "0xE698F8", VA = "0xE698F8")]
		private void UpdateMainBarFillAmount()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xE69A14", Offset = "0xE69A14", VA = "0xE69A14")]
		private void UpdateSpentBarFillAmount()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xE66750", Offset = "0xE66750", VA = "0xE66750")]
		protected void UpdateCurrentValueText()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xE6679C", Offset = "0xE6679C", VA = "0xE6679C")]
		protected void UpdateChangeValueText(float changeValue)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xE66470", Offset = "0xE66470", VA = "0xE66470")]
		protected Vector2 GetHighlightPosition(float t, bool reversed = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xE69DE8", Offset = "0xE69DE8", VA = "0xE69DE8")]
		private void FadeOutChangeValue()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xE69EE4", Offset = "0xE69EE4", VA = "0xE69EE4")]
		private string GetChangeValueString()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.UI.HUD
{
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8C178", Offset = "0xC8C178")]
	public class WandMeshStatsHandler : MonoBehaviour
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip[] m_manaSounds;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HapticsData m_canCastHapticsData;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color m_insufficientManaColor;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_armorHealthColor;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer m_totalMana;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer m_manaSpent;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer m_manaCost;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer m_healthTotal;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_healthSpent;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StatsData m_healthData;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StatsData m_manaData;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Wielder m_wielder;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Renderer m_aimRenderer;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource m_audioSource;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color m_manaColorStart;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color m_healthNoiseColorStart;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_armorActivationEventToken;

		[Token(Token = "0x17000347")]
		private WandControlOneHand Wand
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xE27408", Offset = "0xE27408", VA = "0xE27408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C27C", Offset = "0xC8C27C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xE2736C", Offset = "0xE2736C", VA = "0xE2736C")]
		public WandMeshStatsHandler()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xE274C0", Offset = "0xE274C0", VA = "0xE274C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xE2757C", Offset = "0xE2757C", VA = "0xE2757C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xE275F4", Offset = "0xE275F4", VA = "0xE275F4")]
		public void SetReferences(StatsData healthData, StatsData manaData)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xE27704", Offset = "0xE27704", VA = "0xE27704")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xE28034", Offset = "0xE28034", VA = "0xE28034")]
		private void OnArmorActivated(Events.ArmorActivationEvent eventData)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xE28064", Offset = "0xE28064", VA = "0xE28064")]
		private void SetArmorActive(bool active)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xE2784C", Offset = "0xE2784C", VA = "0xE2784C")]
		private void UpdateHealth()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xE27A74", Offset = "0xE27A74", VA = "0xE27A74")]
		private void UpdateMana()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xE28124", Offset = "0xE28124", VA = "0xE28124")]
		private void PlaySfx(int clipIndex)
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x200030E")]
	public class IconAtlasHandler
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SpriteAtlas m_menuAtlas;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SpriteAtlas m_spellAtlas;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE282F8", Offset = "0xE282F8", VA = "0xE282F8")]
		public IconAtlasHandler()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE28300", Offset = "0xE28300", VA = "0xE28300")]
		private static void LoadMenuAtlas()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE283A4", Offset = "0xE283A4", VA = "0xE283A4")]
		private static void LoadSpellAtlas()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xE24904", Offset = "0xE24904", VA = "0xE24904")]
		public static Sprite GetMenuSprite(string spriteName)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xE28448", Offset = "0xE28448", VA = "0xE28448")]
		public static Sprite GetSpellSprite(Spell spellType)
		{
			return null;
		}
	}
	[Token(Token = "0x200030F")]
	public class InteractBtn : InteractObject
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C28C", Offset = "0xC8C28C")]
		[SerializeField]
		protected TextMeshProUGUI m_text;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected TextMeshProUGUI m_toolTip;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Localize m_toolTipLocalize;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Color[] m_textColors;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool m_enabled;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xE28588", Offset = "0xE28588", VA = "0xE28588")]
		public InteractBtn()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xE285F8", Offset = "0xE285F8", VA = "0xE285F8", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xE286AC", Offset = "0xE286AC", VA = "0xE286AC", Slot = "17")]
		protected virtual void SetTextColors()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xE287D8", Offset = "0xE287D8", VA = "0xE287D8", Slot = "10")]
		protected override void Interact()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xE288A0", Offset = "0xE288A0", VA = "0xE288A0", Slot = "11")]
		protected override void Interact(InputButtons inputBtn)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xE28968", Offset = "0xE28968", VA = "0xE28968", Slot = "13")]
		protected override void LookEnter()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xE28AD4", Offset = "0xE28AD4", VA = "0xE28AD4", Slot = "14")]
		protected override void LookExit()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xE28B60", Offset = "0xE28B60", VA = "0xE28B60", Slot = "18")]
		public virtual void SetActive(bool enable)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xE28BF4", Offset = "0xE28BF4", VA = "0xE28BF4", Slot = "19")]
		protected virtual void ToggleTooltip(bool active)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xE28CFC", Offset = "0xE28CFC", VA = "0xE28CFC")]
		public void SetTooltip(string newTooltip, bool enableTooltip = false)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xE28DD0", Offset = "0xE28DD0", VA = "0xE28DD0")]
		public void SetTooltipTerm(string newTerm, bool enableTooltip = false)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xE28EA4", Offset = "0xE28EA4", VA = "0xE28EA4")]
		public void SetText(string newText)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xE28F58", Offset = "0xE28F58", VA = "0xE28F58")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xE29004", Offset = "0xE29004", VA = "0xE29004", Slot = "20")]
		public virtual void SetColor(Color newColor)
		{
		}
	}
}
namespace Assets.Scripts.UI.Lobby
{
	[Token(Token = "0x2000310")]
	public class AIOptions : MonoBehaviour
	{
		[Token(Token = "0x40011FF")]
		private const int DefaultPlayerLevel = 10;

		[Token(Token = "0x4001200")]
		private const int DefaultBotDifficultyLevel = 3;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_menusParent;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_menuGo;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AIDifficultyButtonToggler> m_buttons;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xE290E4", Offset = "0xE290E4", VA = "0xE290E4")]
		public AIOptions()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xE29158", Offset = "0xE29158", VA = "0xE29158")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xE29298", Offset = "0xE29298", VA = "0xE29298")]
		public void AddButton(AIDifficultyButtonToggler button)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xE29304", Offset = "0xE29304", VA = "0xE29304")]
		public void SelectAIDifficulty(BotDifficultyLevel level)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class Banner : MonoBehaviour
	{
		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C3F8", Offset = "0xC8C3F8")]
		private sealed class <ChangeFlag>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float burnTime;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float delayBetweenBurns;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action callback;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Banner $this;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000611")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BB4")]
				[Address(RVA = "0xE2AAA8", Offset = "0xE2AAA8", VA = "0xE2AAA8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000612")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB5")]
				[Address(RVA = "0xE2AAB0", Offset = "0xE2AAB0", VA = "0xE2AAB0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0xE2A630", Offset = "0xE2A630", VA = "0xE2A630")]
			[DebuggerHidden]
			public <ChangeFlag>c__Iterator0()
			{
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0xE2A954", Offset = "0xE2A954", VA = "0xE2A954", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0xE2AAB8", Offset = "0xE2AAB8", VA = "0xE2AAB8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0xE2AACC", Offset = "0xE2AACC", VA = "0xE2AACC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C458", Offset = "0xC8C458")]
		private sealed class <BurnPlayerFlag>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <value>__0;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float burnTime;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Banner $this;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000613")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BBA")]
				[Address(RVA = "0xE2A8CC", Offset = "0xE2A8CC", VA = "0xE2A8CC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000614")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BBB")]
				[Address(RVA = "0xE2A8D4", Offset = "0xE2A8D4", VA = "0xE2A8D4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0xE2A6C0", Offset = "0xE2A6C0", VA = "0xE2A6C0")]
			[DebuggerHidden]
			public <BurnPlayerFlag>c__Iterator1()
			{
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0xE2A758", Offset = "0xE2A758", VA = "0xE2A758", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0xE2A8DC", Offset = "0xE2A8DC", VA = "0xE2A8DC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xE2A8F0", Offset = "0xE2A8F0", VA = "0xE2A8F0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C4B8", Offset = "0xC8C4B8")]
		private sealed class <ShowPlayerFlag>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <value>__0;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float burnTime;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Banner $this;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000615")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BC0")]
				[Address(RVA = "0xE2AD28", Offset = "0xE2AD28", VA = "0xE2AD28", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000616")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC1")]
				[Address(RVA = "0xE2AD30", Offset = "0xE2AD30", VA = "0xE2AD30", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xE2A750", Offset = "0xE2A750", VA = "0xE2A750")]
			[DebuggerHidden]
			public <ShowPlayerFlag>c__Iterator2()
			{
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xE2AB30", Offset = "0xE2AB30", VA = "0xE2AB30", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0xE2AD38", Offset = "0xE2AD38", VA = "0xE2AD38", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xE2AD4C", Offset = "0xE2AD4C", VA = "0xE2AD4C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture[] m_flagTextures;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_playerBanner;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_playerFlag;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_playerOrnament;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_playerWing;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Localize m_playerTitle;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_opponentBanner;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_opponentFlag;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_opponentOrnament;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_opponentWing;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize m_opponentTitle;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_wielderSpawnedEventToken;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_postMatchUiSkippedEventToken;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer m_playerFlagRenderer;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshRenderer m_opponentFlagRenderer;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RatingTitle m_newPlayerTitle;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RatingTitle m_previousPlayerTitle;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_flagBurnCoroutine;

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xE294C4", Offset = "0xE294C4", VA = "0xE294C4")]
		public Banner()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xE29524", Offset = "0xE29524", VA = "0xE29524")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xE29618", Offset = "0xE29618", VA = "0xE29618")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xE2977C", Offset = "0xE2977C", VA = "0xE2977C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xE29824", Offset = "0xE29824", VA = "0xE29824")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xE29F18", Offset = "0xE29F18", VA = "0xE29F18")]
		private void PhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xE29F1C", Offset = "0xE29F1C", VA = "0xE29F1C")]
		private void PostMatchUiSkipped(Events.PostMatchUiSkippedEvent eventData)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xE295B8", Offset = "0xE295B8", VA = "0xE295B8")]
		private void DisablePlayerBanner()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xE295E8", Offset = "0xE295E8", VA = "0xE295E8")]
		public void DisableOpponentBanner()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xE2992C", Offset = "0xE2992C", VA = "0xE2992C")]
		private void EnablePlayerBanner(bool skipped = false)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xE29BC8", Offset = "0xE29BC8", VA = "0xE29BC8")]
		private void EnableOpponentBanner()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xE29DB4", Offset = "0xE29DB4", VA = "0xE29DB4")]
		private void EnableOpponentPostBanner()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xE2A2D0", Offset = "0xE2A2D0", VA = "0xE2A2D0")]
		private static RatingTitle GetOpponentRatingTitle(int score)
		{
			return default(RatingTitle);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xE29F94", Offset = "0xE29F94", VA = "0xE29F94")]
		private void SetCorrectPlayerFlag(RatingTitle title)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xE2A374", Offset = "0xE2A374", VA = "0xE2A374")]
		private void SetCorrectOpponentFlag(RatingTitle title)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xE2A088", Offset = "0xE2A088", VA = "0xE2A088")]
		private void SetCorrectPlayerTitle(RatingTitle title)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xE2A468", Offset = "0xE2A468", VA = "0xE2A468")]
		private void SetCorrectOpponentTitle(RatingTitle title)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xE2A130", Offset = "0xE2A130", VA = "0xE2A130")]
		private void SetCorrectSignLook(bool isPlayer, RatingTitle title)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xE2A510", Offset = "0xE2A510", VA = "0xE2A510")]
		public void StartPotentialFlagChange(Action callback)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xE2A57C", Offset = "0xE2A57C", VA = "0xE2A57C")]
		[DebuggerHidden]
		private IEnumerator ChangeFlag(float burnTime, float delayBetweenBurns, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xE2A638", Offset = "0xE2A638", VA = "0xE2A638")]
		[DebuggerHidden]
		private IEnumerator BurnPlayerFlag(float burnTime)
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xE2A6C8", Offset = "0xE2A6C8", VA = "0xE2A6C8")]
		[DebuggerHidden]
		private IEnumerator ShowPlayerFlag(float burnTime)
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public class ExperienceHandler : MonoBehaviour
	{
		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C670", Offset = "0xC8C670")]
		private sealed class <StartDustCounter>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int amount;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float <steps>__0;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal WaitForSeconds <waitForSeconds>__0;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int <i>__1;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal ExperienceHandler $this;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000617")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BC6")]
				[Address(RVA = "0xE2D038", Offset = "0xE2D038", VA = "0xE2D038", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000618")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC7")]
				[Address(RVA = "0xE2D040", Offset = "0xE2D040", VA = "0xE2D040", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xE2C710", Offset = "0xE2C710", VA = "0xE2C710")]
			[DebuggerHidden]
			public <StartDustCounter>c__Iterator0()
			{
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xE2CE5C", Offset = "0xE2CE5C", VA = "0xE2CE5C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xE2D048", Offset = "0xE2D048", VA = "0xE2D048", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xE2D05C", Offset = "0xE2D05C", VA = "0xE2D05C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_currentXpBar;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_gainXpBar;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_badgeParent;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WandsTweener[] m_badges;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro m_levelText;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro m_nextLevelText;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro m_dustGainText;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C5B8", Offset = "0xC8C5B8")]
		[SerializeField]
		private TextMeshPro m_debugExperienceGain;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro m_debugDustGain;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_level;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_currentXp;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_diff;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_dustGain;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_hasCompletedCalculations;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool m_hasUpdatedEarnedBadges;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_pendingBagdeName;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LobbyArenaControl m_arenaControl;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Tweener m_activeTweener;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_postMatchUiSkippedEventToken;

		[Token(Token = "0x17000348")]
		public int NextLevel
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xE2AFE8", Offset = "0xE2AFE8", VA = "0xE2AFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8C650", Offset = "0xC8C650")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<int> PlayerLevelUp
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xE2AE18", Offset = "0xE2AE18", VA = "0xE2AE18")]
			add
			{
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xE2AF00", Offset = "0xE2AF00", VA = "0xE2AF00")]
			remove
			{
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xE2ADB0", Offset = "0xE2ADB0", VA = "0xE2ADB0")]
		public ExperienceHandler()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xE2B024", Offset = "0xE2B024", VA = "0xE2B024")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xE2B0E0", Offset = "0xE2B0E0", VA = "0xE2B0E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xE2B158", Offset = "0xE2B158", VA = "0xE2B158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xE2B38C", Offset = "0xE2B38C", VA = "0xE2B38C")]
		private void OnPostMatchUiSkipped(Events.PostMatchUiSkippedEvent eventData)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xE2B6F0", Offset = "0xE2B6F0", VA = "0xE2B6F0")]
		public void SetHasCompletedCalculations(bool value)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xE2B6FC", Offset = "0xE2B6FC", VA = "0xE2B6FC")]
		private void SetPlayerStatsActual()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xE2B390", Offset = "0xE2B390", VA = "0xE2B390")]
		public void PostMatchUiSkipped()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xE2B180", Offset = "0xE2B180", VA = "0xE2B180")]
		public void ResetExperienceHUD()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xE2BC64", Offset = "0xE2BC64", VA = "0xE2BC64")]
		private void SetCurrentXp(float xpFill)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xE2BD90", Offset = "0xE2BD90", VA = "0xE2BD90")]
		private void SetGainedXp(float xpFill)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xE2BE58", Offset = "0xE2BE58", VA = "0xE2BE58")]
		public void CalculateExperienceGain()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xE2BFAC", Offset = "0xE2BFAC", VA = "0xE2BFAC")]
		private void ShowExperienceGain()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xE2C684", Offset = "0xE2C684", VA = "0xE2C684")]
		[DebuggerHidden]
		private IEnumerator StartDustCounter(int amount)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xE2C718", Offset = "0xE2C718", VA = "0xE2C718")]
		private void OnTweenStart()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xE2C880", Offset = "0xE2C880", VA = "0xE2C880")]
		private void PlayAudioSource()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xE2C8AC", Offset = "0xE2C8AC", VA = "0xE2C8AC")]
		private void LevelUp()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xE2BB5C", Offset = "0xE2BB5C", VA = "0xE2BB5C")]
		private void ShowAllEarnedBadges()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xE2B9D0", Offset = "0xE2B9D0", VA = "0xE2B9D0")]
		private void UpdateAvailableBadges()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xE2C750", Offset = "0xE2C750", VA = "0xE2C750")]
		private void UpdateEarnedBadges(string badgeName)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xE2CD00", Offset = "0xE2CD00", VA = "0xE2CD00")]
		private void ShowBadge(WandsTweener badge)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xE2B888", Offset = "0xE2B888", VA = "0xE2B888")]
		private void SetPlayerLevels(int currentLevel)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xE2CDF0", Offset = "0xE2CDF0", VA = "0xE2CDF0")]
		public bool IsExperienceBarFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xE2C540", Offset = "0xE2C540", VA = "0xE2C540")]
		private void SetDebugText(MatchReward matchReward)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xE2B278", Offset = "0xE2B278", VA = "0xE2B278")]
		private void ResetDebugText(bool disable)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class LobbyIconHandler : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		private enum IconType
		{
			[Token(Token = "0x4001232")]
			Token,
			[Token(Token = "0x4001233")]
			Dust
		}

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform[] m_icons;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ExperienceHandler m_experienceHandler;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] m_rewards;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xE2D0C0", Offset = "0xE2D0C0", VA = "0xE2D0C0")]
		public LobbyIconHandler()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xE2D12C", Offset = "0xE2D12C", VA = "0xE2D12C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xE2D4D0", Offset = "0xE2D4D0", VA = "0xE2D4D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xE2D564", Offset = "0xE2D564", VA = "0xE2D564")]
		private void OnLeveledUp(int newLevel)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xE2D1E0", Offset = "0xE2D1E0", VA = "0xE2D1E0")]
		private void DisplayCorrectIcons(int level)
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class LobbyOptions : MonoBehaviour
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_menusParent;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_menuGo;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_optionGo;

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xE2D56C", Offset = "0xE2D56C", VA = "0xE2D56C")]
		public LobbyOptions()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xE2D574", Offset = "0xE2D574", VA = "0xE2D574")]
		public void DisableMenus()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xE2D5C8", Offset = "0xE2D5C8", VA = "0xE2D5C8")]
		public bool TryCloseOptions()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xE2D618", Offset = "0xE2D618", VA = "0xE2D618")]
		public void ToggleOptionsActive(bool optionsActive)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xE2D6FC", Offset = "0xE2D6FC", VA = "0xE2D6FC")]
		private void EnableOptions()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xE2D808", Offset = "0xE2D808", VA = "0xE2D808")]
		private void EnableMenu()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xE2D754", Offset = "0xE2D754", VA = "0xE2D754")]
		private void ScaleUp()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xE2D860", Offset = "0xE2D860", VA = "0xE2D860")]
		private void EnableControls()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class LobbyUI : MonoSingleton<LobbyUI>
	{
		[Token(Token = "0x2000317")]
		private enum InfoType
		{
			[Token(Token = "0x4001283")]
			Waiting,
			[Token(Token = "0x4001284")]
			Paused,
			[Token(Token = "0x4001285")]
			Close,
			[Token(Token = "0x4001286")]
			Matchmaking,
			[Token(Token = "0x4001287")]
			OpponentMissing,
			[Token(Token = "0x4001288")]
			MatchmakingError,
			[Token(Token = "0x4001289")]
			OpponentFound
		}

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8CB4C", Offset = "0xC8CB4C")]
		private sealed class <OnConnectionLostAsync>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LobbyUI $this;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000619")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BCC")]
				[Address(RVA = "0xE32730", Offset = "0xE32730", VA = "0xE32730", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCD")]
				[Address(RVA = "0xE32738", Offset = "0xE32738", VA = "0xE32738", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xE2FF30", Offset = "0xE2FF30", VA = "0xE2FF30")]
			[DebuggerHidden]
			public <OnConnectionLostAsync>c__Iterator0()
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xE325EC", Offset = "0xE325EC", VA = "0xE325EC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0xE32740", Offset = "0xE32740", VA = "0xE32740", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xE32754", Offset = "0xE32754", VA = "0xE32754", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8CBAC", Offset = "0xC8CBAC")]
		private sealed class <ActivateMonolith>c__AnonStorey1
		{
			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool preLobby;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal LobbyUI $this;

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xE30E68", Offset = "0xE30E68", VA = "0xE30E68")]
			public <ActivateMonolith>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0xE323F0", Offset = "0xE323F0", VA = "0xE323F0")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4001237")]
		private const string WinLoseMessage = "WinLoseMsg";

		[Token(Token = "0x4001238")]
		private const string DrawMessage = "DrawMsg";

		[Token(Token = "0x4001239")]
		private const string HudEndState = "HUD/EndState/";

		[Token(Token = "0x400123A")]
		private const string RematchTerm = "Options/Rematch";

		[Token(Token = "0x400123B")]
		private const string AcceptRematchTerm = "Options/AcceptRematch";

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string[] m_beaconSounds;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_lobbyParent;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_preMatchGo;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_postMatchGo;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_connectionLost;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_scoreText;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Banner m_banners;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_survivalWand;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AIOptions m_aiOptions;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C7A0", Offset = "0xC8C7A0")]
		[SerializeField]
		private WandsTweener m_frameTweener;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private WandsTweenerController m_infoTweenControl;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private WandsTweenerController m_preTweenControl;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private WandsTweenerController m_postTweenControl;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private WandsTweener m_postLineTweener;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private WandsTweenerController m_ratingTweenControl;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private WandsTweenerController m_statsTweenControl;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private WandsTweener m_playerReadyRematchTweener;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private WandsTweener m_opponentReadyRematchTweener;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private WandsTweener m_playerRematchRunesTweener;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private WandsTweener m_opponentRematchRunesTweener;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private WandsTweener m_playerRematchTextTweener;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private WandsTweener m_opponentRematchTextTweener;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C8AC", Offset = "0xC8C8AC")]
		[SerializeField]
		private LobbyOptions m_lobbyOptions;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ReportMenu m_reportMenu;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C908", Offset = "0xC8C908")]
		[SerializeField]
		private TextMeshPro m_timerText;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject m_nextArena;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TextMeshPro m_arenaName;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMeshPro m_arenaDescription;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject[] m_preGameInfo;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_exhibitionMessageGo;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_developerMessageGo;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8C9B4", Offset = "0xC8C9B4")]
		[SerializeField]
		private RatingHandler m_ratingHandler;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private ExperienceHandler m_experienceHandler;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Localize m_endStateLocalize;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private LocalizationParamsManager m_endStateParams;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private LocalizationParamsManager m_matchTimeParams;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private TextMeshPro m_rematchText;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject m_freeToPlayTextObject;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private WandsTweener m_freeToPlayTextTweener1;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private WandsTweener m_freeToPlayTextTweener2;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_badgeObject;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CA90", Offset = "0xC8CA90")]
		[SerializeField]
		private GameObject m_centerRematchButton;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject m_centerFindNewOpponentButton;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject m_centerContinueHostingButton;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject m_centerReadyButton;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private GameObject m_playerVoipButton;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject m_opponentVoipButton;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Localize m_rematchLocalize;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool m_lobbyFlowCompleted;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private bool m_isPaused;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private EventToken m_lobbyPausedEventToken;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private EventToken m_matchTypeEventToken;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private EventToken m_countdownStartedEventToken;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private EventToken m_countdownCanceledEventToken;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private EventToken m_countdownTimeUpdatedEventToken;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private EventToken m_finalCountdownStartedEventToken;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private EventToken m_enterPreMatchEventToken;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private EventToken m_enterPostMatchEventToken;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private EventToken m_playerControlSpawnedEventToken;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private EventToken m_botControlSpawnedEventToken;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private EventToken m_connectedToMatchLobbyEventToken;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private EventToken m_connectedToMatchRoomEventToken;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private EventToken m_connectedToPhotonMasterEventToken;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private EventToken m_playerReadyEventToken;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private EventToken m_playerRequestedRematchEventToken;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private EventToken m_opponentMissingEventToken;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private EventToken m_matchmakingErrorEventToken;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private EventToken m_matchmakingStartedEventToken;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private EventToken m_matchmakingFinishedEventToken;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private string[] m_rematchInfoText;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xE2D870", Offset = "0xE2D870", VA = "0xE2D870")]
		public LobbyUI()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xE2DAF8", Offset = "0xE2DAF8", VA = "0xE2DAF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xE2E0A0", Offset = "0xE2E0A0", VA = "0xE2E0A0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xE2E360", Offset = "0xE2E360", VA = "0xE2E360", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xE2E5C8", Offset = "0xE2E5C8", VA = "0xE2E5C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xE2ECC0", Offset = "0xE2ECC0", VA = "0xE2ECC0")]
		private void OnEnterPreMatch(Events.EnterPreMatchEvent eventData)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xE2EEFC", Offset = "0xE2EEFC", VA = "0xE2EEFC")]
		private void OnEnterPostMatch(Events.EnterPostMatchEvent eventData)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xE2F090", Offset = "0xE2F090", VA = "0xE2F090")]
		private void OnMatchTypeUpdated(Events.MatchTypeUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xE2F290", Offset = "0xE2F290", VA = "0xE2F290")]
		private void OnPlayerControlSpawned(Events.PlayerControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xE2F398", Offset = "0xE2F398", VA = "0xE2F398")]
		private void OnBotControlSpawned(Events.BotControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xE2F464", Offset = "0xE2F464", VA = "0xE2F464")]
		private void OnCountdownStarted(Events.CountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xE2F4E4", Offset = "0xE2F4E4", VA = "0xE2F4E4")]
		private void OnCountdownCanceled(Events.CountdownCanceledEvent eventData)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xE2F530", Offset = "0xE2F530", VA = "0xE2F530")]
		private void OnCountdownTimeUpdated(Events.CountdownTimeUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xE2F6A0", Offset = "0xE2F6A0", VA = "0xE2F6A0")]
		private void OnFinalCountdownStarted(Events.FinalCountdownStartedEvent eventData)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xE2F6FC", Offset = "0xE2F6FC", VA = "0xE2F6FC")]
		private void OnPlayerRequestedRematch(Events.PlayerRequestedRematchEvent eventData)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xE2FA00", Offset = "0xE2FA00", VA = "0xE2FA00")]
		private void OnPlayerReady(Events.PlayerReadyEvent eventData)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xE2FA70", Offset = "0xE2FA70", VA = "0xE2FA70")]
		private void OnOpponentMissing(Events.OpponentMissingEvent eventData)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xE2FBD4", Offset = "0xE2FBD4", VA = "0xE2FBD4")]
		private void OnMatchmakingError(Events.MatchmakingErrorEvent eventData)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xE2FC44", Offset = "0xE2FC44", VA = "0xE2FC44")]
		private void OnMatchmakingStarted(Events.MatchmakingStartedEvent eventData)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xE2FC80", Offset = "0xE2FC80", VA = "0xE2FC80")]
		private void OnMatchmakingFinished(Events.MatchmakingFinishedEvent eventData)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xE2FD28", Offset = "0xE2FD28", VA = "0xE2FD28")]
		private int GetNumberOfInfoTypes()
		{
			return default(int);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xE2FDEC", Offset = "0xE2FDEC", VA = "0xE2FDEC")]
		private string[] GetInfoTypeNames()
		{
			return null;
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xE2FE98", Offset = "0xE2FE98", VA = "0xE2FE98")]
		public void OnConnectionLost()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xE2FEC4", Offset = "0xE2FEC4", VA = "0xE2FEC4")]
		[DebuggerHidden]
		private IEnumerator OnConnectionLostAsync()
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xE2FF38", Offset = "0xE2FF38", VA = "0xE2FF38")]
		public void TrySkipLobbyFlow()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xE2FFE4", Offset = "0xE2FFE4", VA = "0xE2FFE4")]
		private void SkipLobbyFlow()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xE30070", Offset = "0xE30070", VA = "0xE30070")]
		public void PlayerConnected()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xE30368", Offset = "0xE30368", VA = "0xE30368")]
		public void PlayerDisconnected(bool isPreMatch)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xE2F494", Offset = "0xE2F494", VA = "0xE2F494")]
		private void CountdownStarted(float time)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xE2F4E8", Offset = "0xE2F4E8", VA = "0xE2F4E8")]
		private void CountdownCanceled()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xE2F6A4", Offset = "0xE2F6A4", VA = "0xE2F6A4")]
		private void FinalCountdownStarted()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xE2F294", Offset = "0xE2F294", VA = "0xE2F294")]
		private void PlayerControlSpawned()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xE2F39C", Offset = "0xE2F39C", VA = "0xE2F39C")]
		private void BotControlSpawned()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xE2E428", Offset = "0xE2E428", VA = "0xE2E428")]
		private void ChangeToPreState()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xE2ECC4", Offset = "0xE2ECC4", VA = "0xE2ECC4")]
		private void EnteredPreMatch()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xE2EF00", Offset = "0xE2EF00", VA = "0xE2EF00")]
		private void EnteredPostMatch()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xE2B91C", Offset = "0xE2B91C", VA = "0xE2B91C")]
		public void ShowFreeToPlayText()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xE2E458", Offset = "0xE2E458", VA = "0xE2E458")]
		private void ResetMonolith()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xE30E18", Offset = "0xE30E18", VA = "0xE30E18")]
		public void KillMonolithTween()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xE30724", Offset = "0xE30724", VA = "0xE30724")]
		private void ActivateMonolith(bool preLobby)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xE2E484", Offset = "0xE2E484", VA = "0xE2E484")]
		private void DisableHolderObjects()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xE2E4D4", Offset = "0xE2E4D4", VA = "0xE2E4D4")]
		private void ToggleCenterButtons(bool rematchActive, bool findNewOpponentActive, bool continueHostingActive, bool readyActive)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xE2FC10", Offset = "0xE2FC10", VA = "0xE2FC10")]
		private void ToggleSurvivalButton(bool active)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xE2F0C0", Offset = "0xE2F0C0", VA = "0xE2F0C0")]
		private void ToggleExhibitionMatch(MatchType matchType)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xE3065C", Offset = "0xE3065C", VA = "0xE3065C")]
		private void ToggleAIOptions(MatchType matchType)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xE2FCE0", Offset = "0xE2FCE0", VA = "0xE2FCE0")]
		private void DisableAIOptions()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xE301C8", Offset = "0xE301C8", VA = "0xE301C8")]
		private void UpdateNextLevelInfo()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xE2F560", Offset = "0xE2F560", VA = "0xE2F560")]
		public void UpdateTimer(float time)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xE2F7E8", Offset = "0xE2F7E8", VA = "0xE2F7E8")]
		public void UpdateRematchMessage(int messageIndex, bool localRequest = false)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xE30524", Offset = "0xE30524", VA = "0xE30524")]
		private void ResetMatchScore()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xE30894", Offset = "0xE30894", VA = "0xE30894")]
		private void UpdateMatchScore()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xE30A3C", Offset = "0xE30A3C", VA = "0xE30A3C")]
		private void ShowMatchTime()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xE30BD8", Offset = "0xE30BD8", VA = "0xE30BD8")]
		private void DisplayEndStateMessage(EndState endState)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xE2BCEC", Offset = "0xE2BCEC", VA = "0xE2BCEC")]
		public void PostFlowCompleted()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xE30E70", Offset = "0xE30E70", VA = "0xE30E70")]
		public void OnLobbyPaused(bool isPaused)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xE30E7C", Offset = "0xE30E7C", VA = "0xE30E7C")]
		private void OnPauseLobby(Events.LobbyPausedEvent eventData)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xE30EB0", Offset = "0xE30EB0", VA = "0xE30EB0")]
		public void ClosePregameInfo()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xE300F0", Offset = "0xE300F0", VA = "0xE300F0")]
		private void UpdatePregameInfo()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xE2FAAC", Offset = "0xE2FAAC", VA = "0xE2FAAC")]
		private void TogglePreInfo(InfoType type)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xE2F9EC", Offset = "0xE2F9EC", VA = "0xE2F9EC")]
		public void SetRematchRunesActive(bool playerRunes, bool active)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xE2EA48", Offset = "0xE2EA48", VA = "0xE2EA48")]
		private void SetPlayerRematchRunesActive(bool active)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xE2EB84", Offset = "0xE2EB84", VA = "0xE2EB84")]
		private void SetOpponentRematchRunesActive(bool active)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xE2F9D8", Offset = "0xE2F9D8", VA = "0xE2F9D8")]
		public void SetBeaconActive(bool playerBeacon, bool active)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xE2E6E0", Offset = "0xE2E6E0", VA = "0xE2E6E0")]
		private void SetPlayerBeaconActive(bool active)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xE2E890", Offset = "0xE2E890", VA = "0xE2E890")]
		private void SetOpponentBeaconActive(bool active)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE30EB8", Offset = "0xE30EB8", VA = "0xE30EB8")]
		public void ReceiverPostMatchRematch()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE30F1C", Offset = "0xE30F1C", VA = "0xE30F1C")]
		public void ReceiverPostMatchFindNewOpponent()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xE3103C", Offset = "0xE3103C", VA = "0xE3103C")]
		public void ReceiverPostMatchContinueHosting()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE3127C", Offset = "0xE3127C", VA = "0xE3127C")]
		private void OnConnectedToPhotonMaster(Events.ConnectedToPhotonMasterEvent eventData)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xE31380", Offset = "0xE31380", VA = "0xE31380")]
		private void OnConnectedToMatchLobby(Events.ConnectedToMatchLobby eventData)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xE314E4", Offset = "0xE314E4", VA = "0xE314E4")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xE315B8", Offset = "0xE315B8", VA = "0xE315B8")]
		public void LeaveRoom(bool quitGame)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xE31718", Offset = "0xE31718", VA = "0xE31718")]
		public bool TryCloseOptions()
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xE2E628", Offset = "0xE2E628", VA = "0xE2E628")]
		public void ToggleOptionsActive(bool optionsActive)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xE2E6D4", Offset = "0xE2E6D4", VA = "0xE2E6D4")]
		public void SetReportMenuActive(bool active)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xE30580", Offset = "0xE30580", VA = "0xE30580")]
		private void SetReportMenuActive(bool active, bool hideButton)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xE3197C", Offset = "0xE3197C", VA = "0xE3197C")]
		public void OnInfoTweenerCompleted()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xE31AD4", Offset = "0xE31AD4", VA = "0xE31AD4")]
		public void OnPlayerTweenerCompleted()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xE31D10", Offset = "0xE31D10", VA = "0xE31D10")]
		public void OnRatingTweenerCompleted()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xE321C4", Offset = "0xE321C4", VA = "0xE321C4")]
		public void OnFlagChangeCompleted()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xE322E0", Offset = "0xE322E0", VA = "0xE322E0")]
		public void OnStatsTweenerCompleted()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class PlayerInfoUI : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8CE9C", Offset = "0xC8CE9C")]
		private struct <ActuallyUpdateOpponentInfo>c__async0 : IAsyncStateMachine
		{
			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Photon.Realtime.Player player;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string <playerName>__0;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string <title>__0;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string <parsedSeason>__0;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string <localizedTitle>__0;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal PlayerInfoUI $this;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal AsyncVoidMethodBuilder $builder;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal int $PC;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0xE33D70", Offset = "0xE33D70", VA = "0xE33D70", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0xE33D78", Offset = "0xE33D78", VA = "0xE33D78", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CBBC", Offset = "0xC8CBBC")]
		[SerializeField]
		private TextMeshPro m_prePlayerName;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_prePlayerTitle;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizationParamsManager m_prePlayerTitleParams;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CC28", Offset = "0xC8CC28")]
		[SerializeField]
		private TextMeshPro m_postPlayerName;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize m_postPlayerTitle;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizationParamsManager m_postPlayerTitleParams;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CC94", Offset = "0xC8CC94")]
		[SerializeField]
		private TextMeshPro m_preOpponentName;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Localize m_preOpponentTitle;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizationParamsManager m_preOpponentTitleParams;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CD00", Offset = "0xC8CD00")]
		[SerializeField]
		private TextMeshPro m_postOpponentName;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize m_postOpponentTitle;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizationParamsManager m_postOpponentTitleParams;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CD6C", Offset = "0xC8CD6C")]
		[SerializeField]
		private TextMeshPro m_playerHealth;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshPro m_opponentHealth;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro m_playerMana;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextMeshPro m_opponentMana;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TextMeshPro m_playerDamage;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshPro m_opponentDamage;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextMeshPro m_playerPickups;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextMeshPro m_opponentPickups;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_photonPlayerDisconnectedEventToken;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_wielderSpawnedEventToken;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EventToken m_botControlSpawnedEvent;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private EventToken m_enterPostMatchEventToken;

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xE327B8", Offset = "0xE327B8", VA = "0xE327B8")]
		public PlayerInfoUI()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xE327C0", Offset = "0xE327C0", VA = "0xE327C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE329E8", Offset = "0xE329E8", VA = "0xE329E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xE32AA8", Offset = "0xE32AA8", VA = "0xE32AA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xE32CE4", Offset = "0xE32CE4", VA = "0xE32CE4")]
		private void OnPhotonPlayerDisconnected(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xE32D14", Offset = "0xE32D14", VA = "0xE32D14")]
		private void OnPhotonPlayerDisconnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xE32FB8", Offset = "0xE32FB8", VA = "0xE32FB8")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE33298", Offset = "0xE33298", VA = "0xE33298")]
		private void OnBotControlSpawned(Events.BotControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xE332F8", Offset = "0xE332F8", VA = "0xE332F8")]
		private void OnEnterPostMatch(Events.EnterPostMatchEvent eventData)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xE32ACC", Offset = "0xE32ACC", VA = "0xE32ACC")]
		private void EmptyAllFields()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xE32BF8", Offset = "0xE32BF8", VA = "0xE32BF8")]
		private void EmptyOpponentGameStats()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xE332FC", Offset = "0xE332FC", VA = "0xE332FC")]
		private void UpdatePostMatchInfo()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xE32DB0", Offset = "0xE32DB0", VA = "0xE32DB0")]
		private void UpdatePlayerInfo(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xE329E4", Offset = "0xE329E4", VA = "0xE329E4")]
		private void UpdateOpponentInfo(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xE33710", Offset = "0xE33710", VA = "0xE33710")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC8CE28", Offset = "0xC8CE28")]
		private void ActuallyUpdateOpponentInfo(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xE330E0", Offset = "0xE330E0", VA = "0xE330E0")]
		private void UpdateOpponentPostInfo()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xE337B0", Offset = "0xE337B0", VA = "0xE337B0")]
		public static string GetOpponentPlatformName(Photon.Realtime.Player player)
		{
			return null;
		}
	}
	[Token(Token = "0x2000319")]
	public class RatingHandler : MonoBehaviour
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_ratingTickSource;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8CECC", Offset = "0xC8CECC")]
		[SerializeField]
		private TextMeshPro m_playerRating;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_playerRatingAddOn;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro m_playerRatingParanthesis;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro m_debugRating;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_counterDelay;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_counterSpeed;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener m_ratingTweener;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tweener m_addOnTweener;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_postMatchUiSkippedEventToken;

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xE33D84", Offset = "0xE33D84", VA = "0xE33D84")]
		public RatingHandler()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xE33D94", Offset = "0xE33D94", VA = "0xE33D94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xE33E50", Offset = "0xE33E50", VA = "0xE33E50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xE33EC8", Offset = "0xE33EC8", VA = "0xE33EC8")]
		private void OnPostMatchUiSkipped(Events.PostMatchUiSkippedEvent eventData)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xE31DE0", Offset = "0xE31DE0", VA = "0xE31DE0")]
		public void CalculateRatings(bool skipped = false)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xE320DC", Offset = "0xE320DC", VA = "0xE320DC")]
		public void StartTweeners(int prevScore, int score)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xE33F38", Offset = "0xE33F38", VA = "0xE33F38")]
		private void EmptyRating()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xE33ECC", Offset = "0xE33ECC", VA = "0xE33ECC")]
		private void PostMatchUiSkipped()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xE34514", Offset = "0xE34514", VA = "0xE34514")]
		private void EmptyAddOns()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xE34580", Offset = "0xE34580", VA = "0xE34580")]
		private void OnRatingTickComplete()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xE345AC", Offset = "0xE345AC", VA = "0xE345AC")]
		private void OnRatingTickStart()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xE3430C", Offset = "0xE3430C", VA = "0xE3430C")]
		private void StartPlayerRatingCounter(int startValue, int endValue, int diff)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xE345D8", Offset = "0xE345D8", VA = "0xE345D8")]
		private void SetRatingFloat(float value)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xE3462C", Offset = "0xE3462C", VA = "0xE3462C")]
		private void SetAddOnFloat(float value)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xE33FFC", Offset = "0xE33FFC", VA = "0xE33FFC")]
		private void SetDebugRating()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class ReportMenu : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D02C", Offset = "0xC8D02C")]
		private struct <RegisterOpponent>c__async0 : IAsyncStateMachine
		{
			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Photon.Realtime.Player <opponent>__0;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string <opponentId>__0;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string <opponentName>__0;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal AsyncVoidMethodBuilder $builder;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal int $PC;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xE34F9C", Offset = "0xE34F9C", VA = "0xE34F9C", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xE34FA4", Offset = "0xE34FA4", VA = "0xE34FA4", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_menusParent;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_parentMenu;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_reportMenu;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_reportButton;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_wielderSpawnedToken;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_levelInitializedToken;

		[Token(Token = "0x17000349")]
		public bool IsReportMenuActive
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xE346E0", Offset = "0xE346E0", VA = "0xE346E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8CF88", Offset = "0xC8CF88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xE346D8", Offset = "0xE346D8", VA = "0xE346D8")]
		public ReportMenu()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xE3470C", Offset = "0xE3470C", VA = "0xE3470C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xE3482C", Offset = "0xE3482C", VA = "0xE3482C")]
		private void OnLateEnable(Events.LevelInitializedEvent msg)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xE34944", Offset = "0xE34944", VA = "0xE34944")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xE31948", Offset = "0xE31948", VA = "0xE31948")]
		public void EnableReporting(bool enable)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xE34A0C", Offset = "0xE34A0C", VA = "0xE34A0C")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent msg)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xE34A60", Offset = "0xE34A60", VA = "0xE34A60")]
		private void OnOpponentSpawned()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xE34A98", Offset = "0xE34A98", VA = "0xE34A98")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC8CF98", Offset = "0xC8CF98")]
		private static void RegisterOpponent()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xE31814", Offset = "0xE31814", VA = "0xE31814")]
		public bool TryClose()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xE31864", Offset = "0xE31864", VA = "0xE31864")]
		public void SetMenuActive(bool active)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xE34B24", Offset = "0xE34B24", VA = "0xE34B24")]
		private void EnableReportMenu(bool enable)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xE34B8C", Offset = "0xE34B8C", VA = "0xE34B8C")]
		private void ScaleUp()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xE34C40", Offset = "0xE34C40", VA = "0xE34C40")]
		public void DisableMenus()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xE34C94", Offset = "0xE34C94", VA = "0xE34C94")]
		private void EnableControls()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xE34CA4", Offset = "0xE34CA4", VA = "0xE34CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D00C", Offset = "0xC8D00C")]
		private void <SetMenuActive>m__0()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xE34CAC", Offset = "0xE34CAC", VA = "0xE34CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D01C", Offset = "0xC8D01C")]
		private void <SetMenuActive>m__1()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class SkillBar : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D1AC", Offset = "0xC8D1AC")]
		private struct <EnableOpponentInfo>c__async0 : IAsyncStateMachine
		{
			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Photon.Realtime.Player <opponent>__0;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int <rating>__0;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float <arrowPosition>__0;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 <localArrowPosition>__0;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string <playerName>__0;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal SkillBar $this;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal AsyncVoidMethodBuilder $builder;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal int $PC;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xE360B4", Offset = "0xE360B4", VA = "0xE360B4", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0xE360BC", Offset = "0xE360BC", VA = "0xE360BC", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform m_gap;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_playerArrow;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_opponentArrow;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro m_playerName;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro m_opponentName;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_leftPosition;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_rightPosition;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8D0BC", Offset = "0xC8D0BC")]
		[SerializeField]
		private int m_debugPlayerRating;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_debugOpponentRating;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_debugPlayerName;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string m_debugOpponentName;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_onPhotonPlayerDisconnectedEventToken;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_onWielderSpawnedEventToken;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_playerNameUpdatedEventToken;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_botDifficultySelectedEventToken;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xE34FB0", Offset = "0xE34FB0", VA = "0xE34FB0")]
		public SkillBar()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE34FC0", Offset = "0xE34FC0", VA = "0xE34FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE35318", Offset = "0xE35318", VA = "0xE35318")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xE354D0", Offset = "0xE354D0", VA = "0xE354D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xE35590", Offset = "0xE35590", VA = "0xE35590")]
		private void OnPlayerNameUpdated(Events.PlayerNameUpdated @event)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xE35594", Offset = "0xE35594", VA = "0xE35594")]
		private void OnBotDifficultyUpdated(Events.BotDifficultySelectedEvent eventData)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xE35598", Offset = "0xE35598", VA = "0xE35598")]
		private void OnWielderSpawned(Events.WielderSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xE355F4", Offset = "0xE355F4", VA = "0xE355F4")]
		private void OnPhotonPlayerDisconnect(NetworkEvents.PhotonPlayerDisconnectedEvent eventData)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xE3501C", Offset = "0xE3501C", VA = "0xE3501C")]
		private void EnablePlayerInfo()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xE35218", Offset = "0xE35218", VA = "0xE35218")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC8D138", Offset = "0xC8D138")]
		private void EnableOpponentInfo()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xE35AE4", Offset = "0xE35AE4", VA = "0xE35AE4")]
		private void DisablePlayerInfo()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xE352A8", Offset = "0xE352A8", VA = "0xE352A8")]
		private void DisableOpponentInfo()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xE355F8", Offset = "0xE355F8", VA = "0xE355F8")]
		private float GetArrowPosition(int rating)
		{
			return default(float);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xE357F8", Offset = "0xE357F8", VA = "0xE357F8")]
		private void SetCorrectTextPosition(TextMeshPro text, float arrowPosition)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xE358E4", Offset = "0xE358E4", VA = "0xE358E4")]
		private void SetCorrectGap()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xE35B54", Offset = "0xE35B54", VA = "0xE35B54")]
		private void DisableGap()
		{
		}
	}
}
[Token(Token = "0x200031C")]
public class LocalizationMirusError : MonoBehaviour
{
	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xF68450", Offset = "0xF68450", VA = "0xF68450")]
	public LocalizationMirusError()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xF68458", Offset = "0xF68458", VA = "0xF68458")]
	public void OnModifyLocalization()
	{
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x200031D")]
	public class MessageSwitcher : MonoBehaviour
	{
		[Token(Token = "0x200031E")]
		private enum MessageType
		{
			[Token(Token = "0x40012CE")]
			Matchmaking,
			[Token(Token = "0x40012CF")]
			Tips
		}

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MessageType m_messageType;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_randomizeTerm;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text m_text;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<string> m_terms;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int[] m_upcomingIndices;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_currentIndex;

		[Token(Token = "0x40012C8")]
		private const string TipsCategory = "HUD/Notification/Tips";

		[Token(Token = "0x40012C9")]
		private const string MatchmakingCategory = "HUD/Notification/MatchmakingDescriptions";

		[Token(Token = "0x40012CA")]
		private const float TimeBetweenSwitches = 10f;

		[Token(Token = "0x40012CB")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x40012CC")]
		private const string I2LanguagesPath = "I2Languages";

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xE360C8", Offset = "0xE360C8", VA = "0xE360C8")]
		public MessageSwitcher()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xE360D0", Offset = "0xE360D0", VA = "0xE360D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xE362CC", Offset = "0xE362CC", VA = "0xE362CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xE36200", Offset = "0xE36200", VA = "0xE36200")]
		private void StartMessageSwitch()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xE362E4", Offset = "0xE362E4", VA = "0xE362E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D22C", Offset = "0xC8D22C")]
		private void <StartMessageSwitch>m__0()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class PlatformSupportInformation : MonoBehaviour
	{
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_text;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationParamsManager m_params;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xE36440", Offset = "0xE36440", VA = "0xE36440")]
		public PlatformSupportInformation()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xE36448", Offset = "0xE36448", VA = "0xE36448")]
		public void Start()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class RectTransformSorter : MonoBehaviour
	{
		[Token(Token = "0x2000321")]
		private enum ButtonSortType
		{
			[Token(Token = "0x40012D8")]
			TopDown,
			[Token(Token = "0x40012D9")]
			Center,
			[Token(Token = "0x40012DA")]
			Scaled,
			[Token(Token = "0x40012DB")]
			BottomUp
		}

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ButtonSortType m_buttonSortType;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RectTransform> m_rectTransforms;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_spacing;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D27C", Offset = "0xC8D27C")]
		private static Func<RectTransform, bool> <>f__am$cache0;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D28C", Offset = "0xC8D28C")]
		private static Func<RectTransform, bool> <>f__am$cache1;

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xE36580", Offset = "0xE36580", VA = "0xE36580")]
		public RectTransformSorter()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xE36588", Offset = "0xE36588", VA = "0xE36588")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xE36940", Offset = "0xE36940", VA = "0xE36940")]
		private void Sort(float position, List<RectTransform> rectTfs, bool up)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xE36B18", Offset = "0xE36B18", VA = "0xE36B18")]
		private void CenterSort(float bottomPosition, float topPosition, List<RectTransform> rectTfs)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xE36BFC", Offset = "0xE36BFC", VA = "0xE36BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D29C", Offset = "0xC8D29C")]
		private static bool <Start>m__0(RectTransform a)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xE36C40", Offset = "0xE36C40", VA = "0xE36C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D2AC", Offset = "0xC8D2AC")]
		private static bool <Start>m__1(RectTransform a)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000322")]
public class Scroll : MonoBehaviour
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D338", Offset = "0xC8D338")]
	private sealed class <ShowScroll>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float delay;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <currentValue>__0;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <t>__1;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Scroll $this;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x1700061B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xFA6A7C", Offset = "0xFA6A7C", VA = "0xFA6A7C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xFA6A84", Offset = "0xFA6A84", VA = "0xFA6A84", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xFA6518", Offset = "0xFA6518", VA = "0xFA6518")]
		[DebuggerHidden]
		public <ShowScroll>c__Iterator0()
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xFA685C", Offset = "0xFA685C", VA = "0xFA685C", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xFA6A8C", Offset = "0xFA6A8C", VA = "0xFA6A8C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xFA6AA0", Offset = "0xFA6AA0", VA = "0xFA6AA0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D398", Offset = "0xC8D398")]
	private sealed class <HideScroll>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float delay;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <currentValue>__0;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <t>__1;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Scroll $this;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x1700061D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xFA67D4", Offset = "0xFA67D4", VA = "0xFA67D4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xFA67DC", Offset = "0xFA67DC", VA = "0xFA67DC", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xFA65AC", Offset = "0xFA65AC", VA = "0xFA65AC")]
		[DebuggerHidden]
		public <HideScroll>c__Iterator1()
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xFA65B4", Offset = "0xFA65B4", VA = "0xFA65B4", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xFA67E4", Offset = "0xFA67E4", VA = "0xFA67E4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xFA67F8", Offset = "0xFA67F8", VA = "0xFA67F8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer m_renderer;

	[Token(Token = "0x40012DD")]
	private const string CUT_OFF = "_Cutoff";

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D2BC", Offset = "0xC8D2BC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D2BC", Offset = "0xC8D2BC")]
	private bool <IsAnimating>k__BackingField;

	[Token(Token = "0x1700034A")]
	private Renderer Renderer
	{
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xFA5FB4", Offset = "0xFA5FB4", VA = "0xFA5FB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034B")]
	public bool IsAnimating
	{
		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xFA6054", Offset = "0xFA6054", VA = "0xFA6054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D2F8", Offset = "0xC8D2F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xFA605C", Offset = "0xFA605C", VA = "0xFA605C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D308", Offset = "0xC8D308")]
		private set
		{
		}
	}

	[Token(Token = "0x1700034C")]
	public bool IsVisible
	{
		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xFA6068", Offset = "0xFA6068", VA = "0xFA6068")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xFA5FAC", Offset = "0xFA5FAC", VA = "0xFA5FAC")]
	public Scroll()
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xFA60FC", Offset = "0xFA60FC", VA = "0xFA60FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xFA6158", Offset = "0xFA6158", VA = "0xFA6158")]
	public void SetScrollVisible(bool enable)
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0xFA6240", Offset = "0xFA6240", VA = "0xFA6240")]
	public void SetScrollVisible(bool enable, float delay, Vector3 pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xFA648C", Offset = "0xFA648C", VA = "0xFA648C")]
	[DebuggerHidden]
	private IEnumerator ShowScroll(float delay)
	{
		return null;
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xFA6520", Offset = "0xFA6520", VA = "0xFA6520")]
	[DebuggerHidden]
	private IEnumerator HideScroll(float delay)
	{
		return null;
	}
}
namespace Assets.Scripts.UI.SpellSelection
{
	[Token(Token = "0x2000323")]
	public abstract class RadialElement : Interactable
	{
		[Token(Token = "0x40012DF")]
		protected const float ICON_SCALE_VALUE = 5.5f;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8D3F8", Offset = "0xC8D3F8")]
		public Transform m_radialParent;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_maxScaleMultiplier;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshPro m_tooltipComp;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected string m_tooltip;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected string m_altTooltip;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_maxScale;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_startScale;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_endScale;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool m_scale;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool m_elementEnabled;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_time;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_scaleTime;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WandControlOneHand m_wand;

		[Token(Token = "0x1700034D")]
		public bool IsEnabled
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xE36D1C", Offset = "0xE36D1C", VA = "0xE36D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D450", Offset = "0xC8D450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034E")]
		protected string Tooltip
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xE36DEC", Offset = "0xE36DEC", VA = "0xE36DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D460", Offset = "0xC8D460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		protected WandControlOneHand Wand
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xE36E08", Offset = "0xE36E08", VA = "0xE36E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xE36C84", Offset = "0xE36C84", VA = "0xE36C84")]
		protected RadialElement()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xE36EA4", Offset = "0xE36EA4", VA = "0xE36EA4", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xE36F80", Offset = "0xE36F80", VA = "0xE36F80", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xE37114", Offset = "0xE37114", VA = "0xE37114", Slot = "9")]
		public virtual void SetElementActive(bool active)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xE37204", Offset = "0xE37204", VA = "0xE37204")]
		public void ScaleElement(bool enable)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xE37338", Offset = "0xE37338", VA = "0xE37338")]
		public void SetTooltip(string s, bool alt = false, bool writeTooltip = false)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xE37544", Offset = "0xE37544", VA = "0xE37544")]
		public void WriteTooltip()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xE3745C", Offset = "0xE3745C", VA = "0xE3745C")]
		protected void WriteTooltip(string s)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xE37560", Offset = "0xE37560", VA = "0xE37560", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xE3767C", Offset = "0xE3767C", VA = "0xE3767C", Slot = "5")]
		public override void LookExit()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class RadialElement_Option : RadialElement
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8D470", Offset = "0xC8D470")]
		public Option m_option;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Image[] m_icons;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xE376EC", Offset = "0xE376EC", VA = "0xE376EC")]
		public RadialElement_Option()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xE376F0", Offset = "0xE376F0", VA = "0xE376F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xE377E8", Offset = "0xE377E8", VA = "0xE377E8", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xE37CCC", Offset = "0xE37CCC", VA = "0xE37CCC", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xE3803C", Offset = "0xE3803C", VA = "0xE3803C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xE38110", Offset = "0xE38110", VA = "0xE38110", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xE37A68", Offset = "0xE37A68", VA = "0xE37A68")]
		private void ToggleMusic(bool enable)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xE37FF4", Offset = "0xE37FF4", VA = "0xE37FF4")]
		private void ToggleWandGrip()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xE37BD0", Offset = "0xE37BD0", VA = "0xE37BD0")]
		private void SetWandGrip(WandGrip wandGrip)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xE38228", Offset = "0xE38228", VA = "0xE38228")]
		private void ToggleIcons(bool enable)
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class RadialElement_Rotate : MonoBehaviour
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_degreesPerSecond;

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xE3836C", Offset = "0xE3836C", VA = "0xE3836C")]
		public RadialElement_Rotate()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xE383D0", Offset = "0xE383D0", VA = "0xE383D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xE384AC", Offset = "0xE384AC", VA = "0xE384AC")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class RadialElement_Spell : RadialElement
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8D4B8", Offset = "0xC8D4B8")]
		[SerializeField]
		private SpriteRenderer m_iconRenderer;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Color m_originalColor;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_timeValue;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_hasInitialized;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_rotateRing;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 m_originalScale;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 m_originalPosition;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Quaternion m_originalRotation;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Quaternion m_startRot;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion m_endRot;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform m_ring;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform m_parent;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform m_iconTransform;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Tweener m_moveTweener;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Tweener m_scaleTweener;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D534", Offset = "0xC8D534")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D534", Offset = "0xC8D534")]
		private SpellBase <Spell>k__BackingField;

		[Token(Token = "0x17000350")]
		public SpellBase Spell
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xE38588", Offset = "0xE38588", VA = "0xE38588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D570", Offset = "0xC8D570")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xE38590", Offset = "0xE38590", VA = "0xE38590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D580", Offset = "0xC8D580")]
			private set
			{
			}
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xE3857C", Offset = "0xE3857C", VA = "0xE3857C")]
		public RadialElement_Spell()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xE38598", Offset = "0xE38598", VA = "0xE38598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xE387A4", Offset = "0xE387A4", VA = "0xE387A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xE38820", Offset = "0xE38820", VA = "0xE38820", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xE389CC", Offset = "0xE389CC", VA = "0xE389CC", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xE38EE4", Offset = "0xE38EE4", VA = "0xE38EE4")]
		public void Initialize(WandControlOneHand wand, SpellBase spell, Sprite iconSprite)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xE39098", Offset = "0xE39098", VA = "0xE39098")]
		private void AssignIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xE39110", Offset = "0xE39110", VA = "0xE39110")]
		private void SetElementSelected(bool value)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xE391F0", Offset = "0xE391F0", VA = "0xE391F0")]
		public void SelectSpell()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xE38610", Offset = "0xE38610", VA = "0xE38610")]
		private void ResetParent()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xE39374", Offset = "0xE39374", VA = "0xE39374", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xE393DC", Offset = "0xE393DC", VA = "0xE393DC", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xE39504", Offset = "0xE39504", VA = "0xE39504", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xE39664", Offset = "0xE39664", VA = "0xE39664")]
		public void DeSelectElement()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xE394AC", Offset = "0xE394AC", VA = "0xE394AC")]
		private void StartRotateIcon()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xE39620", Offset = "0xE39620", VA = "0xE39620")]
		public void StopRotateIcon()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xE387A8", Offset = "0xE387A8", VA = "0xE387A8")]
		private void ResetRotationValues()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xE38B48", Offset = "0xE38B48", VA = "0xE38B48")]
		private void SetRingLocalRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xE38C1C", Offset = "0xE38C1C", VA = "0xE38C1C")]
		private void SetEndValue()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class RadialElementRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_renderer;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_scaleTweener;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tweener m_fadeTweener;

		[Token(Token = "0x17000351")]
		private Renderer Renderer
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xE39694", Offset = "0xE39694", VA = "0xE39694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xE3968C", Offset = "0xE3968C", VA = "0xE3968C")]
		public RadialElementRenderer()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xE39734", Offset = "0xE39734", VA = "0xE39734")]
		public void ScaleUp()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xE397F8", Offset = "0xE397F8", VA = "0xE397F8")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xE398A8", Offset = "0xE398A8", VA = "0xE398A8")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xE39958", Offset = "0xE39958", VA = "0xE39958")]
		public void FadeIn(float fadeTime, float fadeWait, TweenCallback callback)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xE39A74", Offset = "0xE39A74", VA = "0xE39A74")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xE39B7C", Offset = "0xE39B7C", VA = "0xE39B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D5A0", Offset = "0xC8D5A0")]
		private void <FadeOut>m__0()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8D5B0", Offset = "0xC8D5B0")]
	public class SpellSlot : MonoBehaviour, IDragObject, IUnlockable
	{
		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D9BC", Offset = "0xC8D9BC")]
		private sealed class <PlayUnlockVfx>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GameObject vfx;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Transform relicParent;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal SpellSlot $this;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x1700061F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002BE6")]
				[Address(RVA = "0xE3EB28", Offset = "0xE3EB28", VA = "0xE3EB28", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000620")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE7")]
				[Address(RVA = "0xE3EB30", Offset = "0xE3EB30", VA = "0xE3EB30", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xE3C8FC", Offset = "0xE3C8FC", VA = "0xE3C8FC")]
			[DebuggerHidden]
			public <PlayUnlockVfx>c__Iterator0()
			{
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xE3E6F0", Offset = "0xE3E6F0", VA = "0xE3E6F0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xE3EB38", Offset = "0xE3EB38", VA = "0xE3EB38", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xE3EB4C", Offset = "0xE3EB4C", VA = "0xE3EB4C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_originalScale;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8D614", Offset = "0xC8D614")]
		public SlotState m_behaviourState;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpellBase m_spell;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Relic m_relic;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isSelected;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isHighlighted;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_rotateSlot;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private bool m_rotateLocal;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_scaleSlot;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_endPosition;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_endScale;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_endRotation;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_tableParent;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WandSlot m_wandSlot;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WandSlot m_snapSlot;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable m_interactable;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D66C", Offset = "0xC8D66C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D66C", Offset = "0xC8D66C")]
		private WandSlot <PrevSelectedWandSlot>k__BackingField;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D6A8", Offset = "0xC8D6A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D6A8", Offset = "0xC8D6A8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D6E4", Offset = "0xC8D6E4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D6E4", Offset = "0xC8D6E4")]
		private bool <IsBeingDragged>k__BackingField;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D720", Offset = "0xC8D720")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D720", Offset = "0xC8D720")]
		private float <DragTime>k__BackingField;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D75C", Offset = "0xC8D75C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D75C", Offset = "0xC8D75C")]
		private Vector3 <StartingPosition>k__BackingField;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D798", Offset = "0xC8D798")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8D798", Offset = "0xC8D798")]
		private Quaternion <StartingRotation>k__BackingField;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Action<Interactable> sm_lookEnterAction;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Action<Interactable> sm_lookExitAction;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action<Interactable> sm_interactAction;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static EventToken sm_spellSlotSelectedEventToken;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static EventToken sm_spellSlotDeselectedEventToken;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static EventToken sm_spellInfoUpdatedEventToken;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly List<SpellSlot> sm_activeSpellSlots;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D84C", Offset = "0xC8D84C")]
		private static Action<Events.SpellInfoUpdatedEvent> <>f__mg$cache0;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D85C", Offset = "0xC8D85C")]
		private static Action<Events.SpellSlotSelectedEvent> <>f__mg$cache1;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D86C", Offset = "0xC8D86C")]
		private static Action<Events.SpellSlotDeselectedEvent> <>f__mg$cache2;

		[Token(Token = "0x17000352")]
		public WandSlot PrevSelectedWandSlot
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xE39D3C", Offset = "0xE39D3C", VA = "0xE39D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D87C", Offset = "0xC8D87C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xE39D44", Offset = "0xE39D44", VA = "0xE39D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D88C", Offset = "0xC8D88C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public bool IsMoving
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xE39D4C", Offset = "0xE39D4C", VA = "0xE39D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D89C", Offset = "0xC8D89C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xE39D54", Offset = "0xE39D54", VA = "0xE39D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8AC", Offset = "0xC8D8AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public Relic Relic
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xE39D60", Offset = "0xE39D60", VA = "0xE39D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xE39E34", Offset = "0xE39E34", VA = "0xE39E34", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8BC", Offset = "0xC8D8BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xE39E3C", Offset = "0xE39E3C", VA = "0xE39E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8CC", Offset = "0xC8D8CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public bool IsDraggable
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xE39E48", Offset = "0xE39E48", VA = "0xE39E48", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8DC", Offset = "0xC8D8DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000357")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xE39F30", Offset = "0xE39F30", VA = "0xE39F30", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8EC", Offset = "0xC8D8EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000358")]
		public bool ShouldRaycastToDragPlane
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xE39F40", Offset = "0xE39F40", VA = "0xE39F40", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D8FC", Offset = "0xC8D8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000359")]
		public float DragTime
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xE39F48", Offset = "0xE39F48", VA = "0xE39F48", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D90C", Offset = "0xC8D90C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xE39F50", Offset = "0xE39F50", VA = "0xE39F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D91C", Offset = "0xC8D91C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public Vector3 StartingPosition
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xE39F58", Offset = "0xE39F58", VA = "0xE39F58", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D92C", Offset = "0xC8D92C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xE39F64", Offset = "0xE39F64", VA = "0xE39F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D93C", Offset = "0xC8D93C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public Quaternion StartingRotation
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xE39F70", Offset = "0xE39F70", VA = "0xE39F70", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D94C", Offset = "0xC8D94C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xE39F7C", Offset = "0xE39F7C", VA = "0xE39F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D95C", Offset = "0xC8D95C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public Collider Collider
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xE39F88", Offset = "0xE39F88", VA = "0xE39F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D96C", Offset = "0xC8D96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000C")]
		public event DragBeginDelegate OnDragBegin
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xE39F90", Offset = "0xE39F90", VA = "0xE39F90", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x600172A")]
			[Address(RVA = "0xE3A078", Offset = "0xE3A078", VA = "0xE3A078", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event DragEndDelegate OnDragEnd
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xE3A160", Offset = "0xE3A160", VA = "0xE3A160", Slot = "6")]
			add
			{
			}
			[Token(Token = "0x600172C")]
			[Address(RVA = "0xE3A248", Offset = "0xE3A248", VA = "0xE3A248", Slot = "7")]
			remove
			{
			}
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xE39BB0", Offset = "0xE39BB0", VA = "0xE39BB0")]
		static SpellSlot()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xE39D2C", Offset = "0xE39D2C", VA = "0xE39D2C")]
		public SpellSlot()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xE3A330", Offset = "0xE3A330", VA = "0xE3A330")]
		private static void AddSpellSlot(SpellSlot spellSlot)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xE3A690", Offset = "0xE3A690", VA = "0xE3A690")]
		private static void RemoveSpellSlot(SpellSlot spellSlot)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xE3A7F8", Offset = "0xE3A7F8", VA = "0xE3A7F8")]
		private static void OnSpellSlotDeselected(Events.SpellSlotDeselectedEvent eventData)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xE3A938", Offset = "0xE3A938", VA = "0xE3A938")]
		private static void OnSpellSlotSelected(Events.SpellSlotSelectedEvent eventData)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xE3AB98", Offset = "0xE3AB98", VA = "0xE3AB98")]
		private static void OnSpellInfoUpdated(Events.SpellInfoUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xE3ACDC", Offset = "0xE3ACDC", VA = "0xE3ACDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xE3AFAC", Offset = "0xE3AFAC", VA = "0xE3AFAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xE3B13C", Offset = "0xE3B13C", VA = "0xE3B13C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xE3B5F8", Offset = "0xE3B5F8", VA = "0xE3B5F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xE3B478", Offset = "0xE3B478", VA = "0xE3B478")]
		private void UpdateStatus()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xE3BC4C", Offset = "0xE3BC4C", VA = "0xE3BC4C")]
		public void StopMovement()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xE3BC5C", Offset = "0xE3BC5C", VA = "0xE3BC5C")]
		public void ResetSlot()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xE3BEAC", Offset = "0xE3BEAC", VA = "0xE3BEAC")]
		public void ResetSlot(WandSlot slot)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xE3BF94", Offset = "0xE3BF94", VA = "0xE3BF94")]
		private void ResetSnapSlot()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xE3C0F4", Offset = "0xE3C0F4", VA = "0xE3C0F4", Slot = "16")]
		public void SnapToObject(ISnapObject snapObject)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xE3BD14", Offset = "0xE3BD14", VA = "0xE3BD14")]
		public void MoveAndRotate(Vector3 endPos, Quaternion endRot)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xE3C794", Offset = "0xE3C794", VA = "0xE3C794", Slot = "21")]
		public void Unlock(GameObject vfx)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xE3C8D0", Offset = "0xE3C8D0", VA = "0xE3C8D0")]
		public void Unlock(GameObject vfx, Transform relicParent)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xE3C834", Offset = "0xE3C834", VA = "0xE3C834")]
		[DebuggerHidden]
		private IEnumerator PlayUnlockVfx(GameObject vfx, Transform relicParent)
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xE3C904", Offset = "0xE3C904", VA = "0xE3C904", Slot = "19")]
		public Sequence MoveToUnlock(Transform parent, float time)
		{
			return null;
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xE3CA38", Offset = "0xE3CA38", VA = "0xE3CA38", Slot = "20")]
		public Sequence ReturnToSlot(float time)
		{
			return null;
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xE3BD6C", Offset = "0xE3BD6C", VA = "0xE3BD6C")]
		public void Scale(Vector3 endScale)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xE3C5D4", Offset = "0xE3C5D4", VA = "0xE3C5D4")]
		public void Move(Vector3 endPos)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xE3C6A0", Offset = "0xE3C6A0", VA = "0xE3C6A0")]
		public void Rotate(Quaternion endRot, bool local = false)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xE3CB60", Offset = "0xE3CB60", VA = "0xE3CB60")]
		public void OnWandClose(Transform targetTf)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xE3CC64", Offset = "0xE3CC64", VA = "0xE3CC64")]
		public void OnWandOpen(Transform targetTf)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xE3CD78", Offset = "0xE3CD78", VA = "0xE3CD78")]
		public void TurnRelic(float degrees)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xE3CF84", Offset = "0xE3CF84", VA = "0xE3CF84")]
		public void SetEnabled()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xE3AA44", Offset = "0xE3AA44", VA = "0xE3AA44")]
		private void SpellSlotSelected(Events.SpellSlotSelectedEvent eventData)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xE3D074", Offset = "0xE3D074", VA = "0xE3D074")]
		public void DeselectSpellSlot(SpellSlot spellSlot, WandSlot connectedSlot)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xE3A904", Offset = "0xE3A904", VA = "0xE3A904")]
		private void SpellSlotDeselected(Events.SpellSlotDeselectedEvent eventData)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xE3ACAC", Offset = "0xE3ACAC", VA = "0xE3ACAC")]
		private void SpellInfoUpdated(Events.SpellInfoUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xE3D17C", Offset = "0xE3D17C", VA = "0xE3D17C")]
		private void ShowSpellInfo(SpellSlot spellSlot)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xE3D32C", Offset = "0xE3D32C", VA = "0xE3D32C")]
		private void Interact()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xE3D3C4", Offset = "0xE3D3C4", VA = "0xE3D3C4", Slot = "13")]
		public void BeginDrag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xE3DA74", Offset = "0xE3DA74", VA = "0xE3DA74", Slot = "14")]
		public void Drag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xE3DD94", Offset = "0xE3DD94", VA = "0xE3DD94", Slot = "15")]
		public void EndDrag()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xE3D78C", Offset = "0xE3D78C", VA = "0xE3D78C")]
		public void LookEnter()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xE3E1B0", Offset = "0xE3E1B0", VA = "0xE3E1B0")]
		public void LookExit()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xE3BBE8", Offset = "0xE3BBE8", VA = "0xE3BBE8")]
		public void Enable(bool enable, bool wait = true)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xE3B444", Offset = "0xE3B444", VA = "0xE3B444")]
		public void ToggleParticleEffects(bool enable)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xE3E2F4", Offset = "0xE3E2F4", VA = "0xE3E2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D98C", Offset = "0xC8D98C")]
		private static void <SpellSlot>m__0(Interactable interactable)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xE3E448", Offset = "0xE3E448", VA = "0xE3E448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D99C", Offset = "0xC8D99C")]
		private static void <SpellSlot>m__1(Interactable interactable)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xE3E59C", Offset = "0xE3E59C", VA = "0xE3E59C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8D9AC", Offset = "0xC8D9AC")]
		private static void <SpellSlot>m__2(Interactable interactable)
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8DA1C", Offset = "0xC8DA1C")]
	public class WandSlot : MonoBehaviour, ISnapObject
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8DA80", Offset = "0xC8DA80")]
		public SlotState m_behaviourState;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpellSlot m_spellSlot;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RadialElementRenderer m_radialElementRenderer;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Collider m_snappableCollider;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8DAC8", Offset = "0xC8DAC8")]
		[SerializeField]
		private Vector3 m_pointPosition;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 m_stickPosition;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_dualWieldPointPosition;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector3 m_dualWieldStickPosition;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Interactable m_interactable;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider m_collider;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WandSlotPulseHandler m_slotPulseHandler;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_spellSlotDragBeginEventToken;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_spellSlotDragEndEventToken;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_spellSlotSelectedEventToken;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_spellSelectActivatedEventToken;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DB44", Offset = "0xC8DB44")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8DB44", Offset = "0xC8DB44")]
		private Vector3 <SnapPoint>k__BackingField;

		[Token(Token = "0x1700035D")]
		public bool IsAvailable
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xE3EC68", Offset = "0xE3EC68", VA = "0xE3EC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DB80", Offset = "0xC8DB80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035E")]
		public bool IsSnappable
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xE3EC78", Offset = "0xE3EC78", VA = "0xE3EC78", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DB90", Offset = "0xC8DB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035F")]
		public Vector3 SnapPoint
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0xE3DA34", Offset = "0xE3DA34", VA = "0xE3DA34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DBA0", Offset = "0xC8DBA0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600175D")]
			[Address(RVA = "0xE3ECC8", Offset = "0xE3ECC8", VA = "0xE3ECC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DBB0", Offset = "0xC8DBB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public Quaternion SnapRotation
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xE3DA40", Offset = "0xE3DA40", VA = "0xE3DA40", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DBC0", Offset = "0xC8DBC0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xE3EBB0", Offset = "0xE3EBB0", VA = "0xE3EBB0")]
		public WandSlot()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xE3ECD4", Offset = "0xE3ECD4", VA = "0xE3ECD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xE3EF6C", Offset = "0xE3EF6C", VA = "0xE3EF6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xE3F118", Offset = "0xE3F118", VA = "0xE3F118")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xE3F188", Offset = "0xE3F188", VA = "0xE3F188")]
		private void Start()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xE3F1B8", Offset = "0xE3F1B8", VA = "0xE3F1B8")]
		public void SetPosition(bool isPoint, bool isDualWielding)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xE3F57C", Offset = "0xE3F57C", VA = "0xE3F57C")]
		private void OnSpellSelectActivated(Events.SpellSelectActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xE3F4EC", Offset = "0xE3F4EC", VA = "0xE3F4EC")]
		public void UpdateDragPlanePoint()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xE3F5C0", Offset = "0xE3F5C0", VA = "0xE3F5C0")]
		private void OnSpellSlotDragEnd(Events.SpellSlotDragEndEvent eventData)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xE3F7D0", Offset = "0xE3F7D0", VA = "0xE3F7D0")]
		private void OnSpellSlotSelected(Events.SpellSlotSelectedEvent eventData)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xE3F610", Offset = "0xE3F610", VA = "0xE3F610")]
		private void EndDragSpellSlot(SpellSlot spellSlot, WandSlot wandSlot)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xE3F9E0", Offset = "0xE3F9E0", VA = "0xE3F9E0")]
		private void OnSpellSlotDragBegin(Events.SpellSlotDragBeginEvent eventData)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xE3FA14", Offset = "0xE3FA14", VA = "0xE3FA14")]
		private void BeginDragSpellSlot(SpellSlot spellSlot, WandSlot wandSlot)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xE3F820", Offset = "0xE3F820", VA = "0xE3F820")]
		public void SetOccupied(bool occupy, SpellSlot spellSlot)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xE3FAF0", Offset = "0xE3FAF0", VA = "0xE3FAF0")]
		private void ConfirmPulseCondition()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xE3FD88", Offset = "0xE3FD88", VA = "0xE3FD88")]
		private void Interact()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xE3FE5C", Offset = "0xE3FE5C", VA = "0xE3FE5C")]
		private void LookEnter()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xE3FF04", Offset = "0xE3FF04", VA = "0xE3FF04")]
		private void LookExit()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xE3FFAC", Offset = "0xE3FFAC", VA = "0xE3FFAC")]
		public void SetInteractable(bool enable)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xE400D8", Offset = "0xE400D8", VA = "0xE400D8")]
		public void SetRadialElementColor(Color color)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xE3C030", Offset = "0xE3C030", VA = "0xE3C030")]
		public void ScaleRadialElement(bool scaleUp)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xE401A8", Offset = "0xE401A8", VA = "0xE401A8")]
		public void FadeRadialElement(bool fadeIn, float fadeTime, float fadeWait)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class WandSlotPulseHandler : MonoBehaviour
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_pulseColor;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_pulseTime;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color m_currentPulseColor;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<WandSlot> m_pulseSlots;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_pulsate;

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xE402CC", Offset = "0xE402CC", VA = "0xE402CC")]
		public WandSlotPulseHandler()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xE40344", Offset = "0xE40344", VA = "0xE40344")]
		private void Update()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xE3FBF4", Offset = "0xE3FBF4", VA = "0xE3FBF4")]
		public void AddSlotToPulsate(WandSlot slot)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xE3FC98", Offset = "0xE3FC98", VA = "0xE3FC98")]
		public void RemoveSlotToPulsate(WandSlot slot)
		{
		}
	}
}
[Token(Token = "0x200032B")]
public class SpellSelectUI : MonoSingleton<SpellSelectUI>, IWorkshopTileListener
{
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DD90", Offset = "0xC8DD90")]
	private sealed class <SwitchWand>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Spell[] <currentLoadoutSpells>__0;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool activateWhenFinished;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		internal bool <moveWandHandles>__0;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal SpellSlot <teleport>__0;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Transform <teleportSlot>__0;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int <i>__1;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal WandSlot <wandSlot>__2;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Spell <spell>__2;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal SpellSlot <spellSlot>__2;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal SpellSelectUI $this;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal object $current;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal bool $disposing;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal int $PC;

		[Token(Token = "0x17000621")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xFB24A4", Offset = "0xFB24A4", VA = "0xFB24A4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000622")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xFB24AC", Offset = "0xFB24AC", VA = "0xFB24AC", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0xFB0584", Offset = "0xFB0584", VA = "0xFB0584")]
		[DebuggerHidden]
		public <SwitchWand>c__Iterator0()
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xFB18F0", Offset = "0xFB18F0", VA = "0xFB18F0", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xFB24B4", Offset = "0xFB24B4", VA = "0xFB24B4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0xFB24C8", Offset = "0xFB24C8", VA = "0xFB24C8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DDF0", Offset = "0xC8DDF0")]
	private sealed class <TurnRelics>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <i>__1;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal WandSlot <wandSlot>__2;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal SpellSelectUI $this;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000623")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xFB26F4", Offset = "0xFB26F4", VA = "0xFB26F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000624")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xFB26FC", Offset = "0xFB26FC", VA = "0xFB26FC", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xFB05F8", Offset = "0xFB05F8", VA = "0xFB05F8")]
		[DebuggerHidden]
		public <TurnRelics>c__Iterator1()
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0xFB252C", Offset = "0xFB252C", VA = "0xFB252C", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xFB2704", Offset = "0xFB2704", VA = "0xFB2704", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xFB2718", Offset = "0xFB2718", VA = "0xFB2718", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DE50", Offset = "0xC8DE50")]
	private sealed class <RearrangeRelics>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <i>__1;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal WandSlot <wandSlot>__2;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Spell <spell>__2;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool isMovingHandles;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal SpellSelectUI $this;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x17000625")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xFB1868", Offset = "0xFB1868", VA = "0xFB1868", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000626")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xFB1870", Offset = "0xFB1870", VA = "0xFB1870", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xFB0690", Offset = "0xFB0690", VA = "0xFB0690")]
		[DebuggerHidden]
		public <RearrangeRelics>c__Iterator2()
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0xFB15A4", Offset = "0xFB15A4", VA = "0xFB15A4", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xFB1878", Offset = "0xFB1878", VA = "0xFB1878", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0xFB188C", Offset = "0xFB188C", VA = "0xFB188C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200060E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DEB0", Offset = "0xC8DEB0")]
	private sealed class <ControlledSpellSlotMovement>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SpellSlot[] slots;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal VirtualTransform[] <startTransforms>__0;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool useLocalRotation;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float <currentMoveTime>__0;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float <t>__0;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal SpellSelectUI $this;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal object $current;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool $disposing;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal int $PC;

		[Token(Token = "0x17000627")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xFB149C", Offset = "0xFB149C", VA = "0xFB149C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000628")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xFB14A4", Offset = "0xFB14A4", VA = "0xFB14A4", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xFB0844", Offset = "0xFB0844", VA = "0xFB0844")]
		[DebuggerHidden]
		public <ControlledSpellSlotMovement>c__Iterator3()
		{
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xFB0C1C", Offset = "0xFB0C1C", VA = "0xFB0C1C", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xFB14AC", Offset = "0xFB14AC", VA = "0xFB14AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0xFB14C0", Offset = "0xFB14C0", VA = "0xFB14C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200060F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DF10", Offset = "0xC8DF10")]
	private sealed class <LoadSpellSelection>c__AnonStorey5
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Spell[] loadout;

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xFB084C", Offset = "0xFB084C", VA = "0xFB084C")]
		public <LoadSpellSelection>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xFB1524", Offset = "0xFB1524", VA = "0xFB1524")]
		internal bool <>m__0(Spell s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DF20", Offset = "0xC8DF20")]
	private sealed class <BlockInteractionOnWandMovement>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool endState;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SpellSelectUI $this;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000629")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xFB0B94", Offset = "0xFB0B94", VA = "0xFB0B94", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xFB0B9C", Offset = "0xFB0B9C", VA = "0xFB0B9C", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xFB0A68", Offset = "0xFB0A68", VA = "0xFB0A68")]
		[DebuggerHidden]
		public <BlockInteractionOnWandMovement>c__Iterator4()
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xFB0A98", Offset = "0xFB0A98", VA = "0xFB0A98", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xFB0BA4", Offset = "0xFB0BA4", VA = "0xFB0BA4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xFB0BB8", Offset = "0xFB0BB8", VA = "0xFB0BB8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly WaitForSeconds m_shortWait;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly WaitForSeconds m_wait;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly WaitForSeconds m_wait0_05;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Vector3 m_defaultRelicScaleOpen;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly Vector3 m_defaultRelicScaleClosed;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Quaternion m_defaultRelicRotationClosed;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private WorkshopTile m_spellSelectTile;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpellSelectUIRelicHandler m_relicHandler;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_circleFadeTime;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float m_circleFadeWait;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject m_unlockVfx;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform m_unlockRelicIconParent;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private WandSlot[] m_wandSlots;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private RadialElementRenderer[] m_wandSlotCircles;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private WorkshopWand m_workshopWand;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject m_wandParentDualWield;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private RelicSlotWand[] m_relicWandSlotsOneHand;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private RelicSlotWand[] m_relicWandSlotsDualWield;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SpellSlot[] m_allSpellSlots;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RelicSlotWand[] m_wandRelicSlots;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Interactable> m_tableInteractables;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Events.SpellSelectActivatedEvent m_spellSelectActiveEvent;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private EventToken m_inputChangedEventToken;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EventToken m_workshopWandOpenedEventToken;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private EventToken m_workshopWandClosedEventToken;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WandInput m_wandInput;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool m_isInteractionActive;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	private bool m_holdHoldSwitchWandFlow;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private VirtualTransform[] m_spellSlotTargetTransforms;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DCD0", Offset = "0xC8DCD0")]
	private static Func<WandSlot, SpellSlot> <>f__am$cache0;

	[Token(Token = "0x17000361")]
	public bool IsSpellSelectActive
	{
		[Token(Token = "0x6001779")]
		[Address(RVA = "0xFACDB4", Offset = "0xFACDB4", VA = "0xFACDB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600177A")]
		[Address(RVA = "0xFACDDC", Offset = "0xFACDDC", VA = "0xFACDDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000362")]
	public SpellSelectUIRelicHandler RelicHandler
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0xFACE0C", Offset = "0xFACE0C", VA = "0xFACE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DCE0", Offset = "0xC8DCE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000363")]
	public WorkshopWand WorkshopWand
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xFACE94", Offset = "0xFACE94", VA = "0xFACE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DCF0", Offset = "0xC8DCF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000364")]
	public WandSlot[] WandSlots
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0xFACF1C", Offset = "0xFACF1C", VA = "0xFACF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DD00", Offset = "0xC8DD00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000365")]
	public SpellSlot[] AllSpellSlots
	{
		[Token(Token = "0x600177E")]
		[Address(RVA = "0xFACF24", Offset = "0xFACF24", VA = "0xFACF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DD10", Offset = "0xC8DD10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000366")]
	private bool IsDualWieldEnabled
	{
		[Token(Token = "0x600177F")]
		[Address(RVA = "0xFACF2C", Offset = "0xFACF2C", VA = "0xFACF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DD20", Offset = "0xC8DD20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xFAC970", Offset = "0xFAC970", VA = "0xFAC970")]
	public SpellSelectUI()
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0xFACF64", Offset = "0xFACF64", VA = "0xFACF64", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0xFAD708", Offset = "0xFAD708", VA = "0xFAD708")]
	private void Start()
	{
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0xFAE00C", Offset = "0xFAE00C", VA = "0xFAE00C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xFAE170", Offset = "0xFAE170", VA = "0xFAE170", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0xFAE22C", Offset = "0xFAE22C", VA = "0xFAE22C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xFAE40C", Offset = "0xFAE40C", VA = "0xFAE40C")]
	public void BeginDrag(SpellSlot spellSlot, WandSlot wandSlot)
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xFAE4C8", Offset = "0xFAE4C8", VA = "0xFAE4C8")]
	public void EndDrag(SpellSlot spellSlot, WandSlot wandSlot)
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0xFAE584", Offset = "0xFAE584", VA = "0xFAE584")]
	public void ShowInfo(SpellSlot spellSlot, WandSlot wandSlot)
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xFAE620", Offset = "0xFAE620", VA = "0xFAE620")]
	public void SelectSlot(SpellSlot spellSlot, WandSlot wandSlot)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0xFAE6DC", Offset = "0xFAE6DC", VA = "0xFAE6DC")]
	public void DeSelectSlot(SpellSlot spellSlot, WandSlot wandSlot)
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0xFAE778", Offset = "0xFAE778", VA = "0xFAE778")]
	public void UnlockSpell(Spell spell)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0xFAE934", Offset = "0xFAE934", VA = "0xFAE934")]
	private void OnInputChanged(InputEvents.InputChangedEvent eventData)
	{
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0xFAEA28", Offset = "0xFAEA28", VA = "0xFAEA28")]
	private void ChangeInput(WandInput wandInput, bool isDualWielding)
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0xFAD278", Offset = "0xFAD278", VA = "0xFAD278")]
	private void UpdateRelicSlots()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0xFAEED4", Offset = "0xFAEED4", VA = "0xFAEED4")]
	public void EnableSpellSlots(bool enable)
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0xFAEFEC", Offset = "0xFAEFEC", VA = "0xFAEFEC")]
	public void TryChangeWand(int loadoutIndex)
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0xFAF3E8", Offset = "0xFAF3E8", VA = "0xFAF3E8")]
	public bool TryCloseWand()
	{
		return default(bool);
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0xFAF12C", Offset = "0xFAF12C", VA = "0xFAF12C")]
	private bool HasCurrentLoadoutEmptySlots()
	{
		return default(bool);
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0xFAF458", Offset = "0xFAF458", VA = "0xFAF458")]
	public bool TryDisableSpellSelection()
	{
		return default(bool);
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0xFAF1C0", Offset = "0xFAF1C0", VA = "0xFAF1C0")]
	private void CloseWandFailed()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0xFAF6AC", Offset = "0xFAF6AC", VA = "0xFAF6AC")]
	private void OnFailMoveStepComplete()
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0xFAF534", Offset = "0xFAF534", VA = "0xFAF534")]
	private bool SwitchWandToUncompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0xFADA5C", Offset = "0xFADA5C", VA = "0xFADA5C")]
	public void SetSpellSelectionActive(bool enable, bool playSound, bool saveSelection)
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0xFAFE34", Offset = "0xFAFE34", VA = "0xFAFE34")]
	public void MoveTeleportRelic(Relic relic)
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xFB0258", Offset = "0xFB0258", VA = "0xFB0258")]
	public bool CanGetWandSlot(WandSlot slot, out Transform wandSlotTf)
	{
		return default(bool);
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xFB03C8", Offset = "0xFB03C8", VA = "0xFB03C8")]
	private bool CanGetRelicSlot(Spell spell, out SpellSlot slot)
	{
		return default(bool);
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xFAF2FC", Offset = "0xFAF2FC", VA = "0xFAF2FC")]
	public void ChangeWand(int loadoutIndex, bool activeAtStart)
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xFB04F0", Offset = "0xFB04F0", VA = "0xFB04F0")]
	[DebuggerHidden]
	private IEnumerator SwitchWand(bool activateWhenFinished)
	{
		return null;
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xFB058C", Offset = "0xFB058C", VA = "0xFB058C")]
	[DebuggerHidden]
	private IEnumerator TurnRelics()
	{
		return null;
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xFB0600", Offset = "0xFB0600", VA = "0xFB0600")]
	[DebuggerHidden]
	private IEnumerator RearrangeRelics(bool isMovingHandles)
	{
		return null;
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xFAF738", Offset = "0xFAF738", VA = "0xFAF738")]
	private void MoveSpellSlots(bool open)
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xFB079C", Offset = "0xFB079C", VA = "0xFB079C")]
	[DebuggerHidden]
	private IEnumerator ControlledSpellSlotMovement(SpellSlot[] slots, bool useLocalRotation)
	{
		return null;
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xFAE234", Offset = "0xFAE234", VA = "0xFAE234")]
	private void SaveSpellSelection(bool saveToPlayfab)
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xFAD3D0", Offset = "0xFAD3D0", VA = "0xFAD3D0")]
	public void LoadSpellSelection()
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xFAEC58", Offset = "0xFAEC58", VA = "0xFAEC58", Slot = "6")]
	public void ToggleInteractionActive(bool active)
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xFB0854", Offset = "0xFB0854", VA = "0xFB0854", Slot = "7")]
	public void ToggleActive(bool active)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xFB0974", Offset = "0xFB0974", VA = "0xFB0974")]
	private void OnWorkshopWandOpened(Events.WorkshopWandOpenedEvent eventData)
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xFB0A38", Offset = "0xFB0A38", VA = "0xFB0A38")]
	private void OnWorkshopWandClosed(Events.WorkshopWandClosedEvent eventData)
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xFB09A4", Offset = "0xFB09A4", VA = "0xFB09A4")]
	[DebuggerHidden]
	private IEnumerator BlockInteractionOnWandMovement(bool endState)
	{
		return null;
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xFB0A70", Offset = "0xFB0A70", VA = "0xFB0A70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DD80", Offset = "0xC8DD80")]
	private static SpellSlot <MoveSpellSlots>m__0(WandSlot x)
	{
		return null;
	}
}
namespace Cortopia.Scripts.UI
{
	[Token(Token = "0x200032C")]
	public class SpellSelectUIRelicHandler : MonoBehaviour
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_iconActiveMaterial;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_iconInactiveMaterial;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_iconLockedMaterial;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xE69FC0", Offset = "0xE69FC0", VA = "0xE69FC0")]
		public SpellSelectUIRelicHandler()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xE69FC8", Offset = "0xE69FC8", VA = "0xE69FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xE6A0C4", Offset = "0xE6A0C4", VA = "0xE6A0C4")]
		public void SetRelicIconSharedMaterial(SpellSlot spellSlot, bool active)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xE6A16C", Offset = "0xE6A16C", VA = "0xE6A16C")]
		public void UpdateRelicIconSharedMaterials(SpellSlot[] allSpellSlots, bool tryEnable)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xE6A1F0", Offset = "0xE6A1F0", VA = "0xE6A1F0")]
		private void UpdateRelicIconSharedMaterial(SpellSlot spellSlot, bool tryEnable)
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x200032D")]
	public class StartupOption : MonoBehaviour
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StartupOptionType m_startupOptionType;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DFC0", Offset = "0xC8DFC0")]
		private static TweenCallback <>f__am$cache0;

		[Token(Token = "0x17000367")]
		private CanvasGroup CanvasGroup
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xE404EC", Offset = "0xE404EC", VA = "0xE404EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public StartupOptionType Type
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xE4058C", Offset = "0xE4058C", VA = "0xE4058C")]
			get
			{
				return default(StartupOptionType);
			}
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xE404E4", Offset = "0xE404E4", VA = "0xE404E4")]
		public StartupOption()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xE40594", Offset = "0xE40594", VA = "0xE40594")]
		public void Show()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xE4069C", Offset = "0xE4069C", VA = "0xE4069C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xE406FC", Offset = "0xE406FC", VA = "0xE406FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8DFD0", Offset = "0xC8DFD0")]
		private static void <Show>m__0()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class StartupOptionsHandler : MonoBehaviour
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StartupOption[] m_options;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text m_languageText;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Localize m_subtitleLocalize;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize m_voipLocalize;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_optionIndex;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_prevOptionIndex;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasSeenOptions;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xE4070C", Offset = "0xE4070C", VA = "0xE4070C")]
		public StartupOptionsHandler()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xE4071C", Offset = "0xE4071C", VA = "0xE4071C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xE40870", Offset = "0xE40870", VA = "0xE40870")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xE408A8", Offset = "0xE408A8", VA = "0xE408A8")]
		private void DisableLoadingElements()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xE4097C", Offset = "0xE4097C", VA = "0xE4097C")]
		private void EnableControls()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xE40A54", Offset = "0xE40A54", VA = "0xE40A54")]
		private void SetupOptions()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xE407F8", Offset = "0xE407F8", VA = "0xE407F8")]
		private void DisableOptions()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xE40B9C", Offset = "0xE40B9C", VA = "0xE40B9C")]
		private void ProceedOneStep()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xE40FB0", Offset = "0xE40FB0", VA = "0xE40FB0")]
		private void FinishPreTutorial()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xE4128C", Offset = "0xE4128C", VA = "0xE4128C")]
		private void SetPanelActive(int index)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xE41358", Offset = "0xE41358", VA = "0xE41358")]
		private void SetPrimaryHand(bool rightHand)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xE41410", Offset = "0xE41410", VA = "0xE41410")]
		private void BumpLanguage()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xE40E08", Offset = "0xE40E08", VA = "0xE40E08")]
		private void SetLanguageText(string text)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xE41470", Offset = "0xE41470", VA = "0xE41470")]
		private void ToggleSubtitlesEnabled()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xE40ED8", Offset = "0xE40ED8", VA = "0xE40ED8")]
		private void SetSubtitlesEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xE40E3C", Offset = "0xE40E3C", VA = "0xE40E3C")]
		private void SetVoipLocalization(bool enabled)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xE414F8", Offset = "0xE414F8", VA = "0xE414F8")]
		public void ReceiverProceedOneStep()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xE414FC", Offset = "0xE414FC", VA = "0xE414FC")]
		public void ReceiverSetPrimaryHand(bool rightHand)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xE41504", Offset = "0xE41504", VA = "0xE41504")]
		public void ReceiverBumpLanguage()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE41508", Offset = "0xE41508", VA = "0xE41508")]
		public void ReceiverToggleSubtitlesEnabled()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE4150C", Offset = "0xE4150C", VA = "0xE4150C")]
		public void ReceiverToggleVoip()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE41604", Offset = "0xE41604", VA = "0xE41604")]
		private void SetVoipValue(bool enableVoip)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE41644", Offset = "0xE41644", VA = "0xE41644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E020", Offset = "0xC8E020")]
		private void <ProceedOneStep>m__0(bool hasAccess)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE41658", Offset = "0xE41658", VA = "0xE41658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E030", Offset = "0xC8E030")]
		private void <ReceiverToggleVoip>m__1(bool hasAccess)
		{
		}
	}
	[Token(Token = "0x200032F")]
	public enum StartupOptionType
	{
		[Token(Token = "0x400136B")]
		Language,
		[Token(Token = "0x400136C")]
		Grip,
		[Token(Token = "0x400136D")]
		VoIP,
		[Token(Token = "0x400136E")]
		FinishUp,
		[Token(Token = "0x400136F")]
		PlatformSupport
	}
	[Token(Token = "0x2000330")]
	public class UI_ExpHandler : MonoBehaviour
	{
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E0E0", Offset = "0xC8E0E0")]
		private sealed class <UpdateFillAmount>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float startValue;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float <startFill>__0;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float endValue;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <endFill>__0;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int gainedXp;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int playerLevel;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal UI_ExpHandler $this;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x1700062B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C0C")]
				[Address(RVA = "0xE423A8", Offset = "0xE423A8", VA = "0xE423A8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0D")]
				[Address(RVA = "0xE423B0", Offset = "0xE423B0", VA = "0xE423B0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xE41E6C", Offset = "0xE41E6C", VA = "0xE41E6C")]
			[DebuggerHidden]
			public <UpdateFillAmount>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xE4211C", Offset = "0xE4211C", VA = "0xE4211C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xE423B8", Offset = "0xE423B8", VA = "0xE423B8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xE423CC", Offset = "0xE423CC", VA = "0xE423CC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E140", Offset = "0xC8E140")]
		private sealed class <PingPongColor>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal UI_ExpHandler $this;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700062D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C12")]
				[Address(RVA = "0xE42094", Offset = "0xE42094", VA = "0xE42094", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C13")]
				[Address(RVA = "0xE4209C", Offset = "0xE4209C", VA = "0xE4209C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xE41EE0", Offset = "0xE41EE0", VA = "0xE41EE0")]
			[DebuggerHidden]
			public <PingPongColor>c__Iterator1()
			{
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xE41EF0", Offset = "0xE41EF0", VA = "0xE41EF0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xE420A4", Offset = "0xE420A4", VA = "0xE420A4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xE420B8", Offset = "0xE420B8", VA = "0xE420B8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_level;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_nextLevel;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_levelLockText;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_xpBar;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image m_xpReward;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_xpRewardName;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationParamsManager m_levelProgress;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite[] m_xpRewardIcons;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_purchasedFullGameEventToken;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE41668", Offset = "0xE41668", VA = "0xE41668")]
		public UI_ExpHandler()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xE41670", Offset = "0xE41670", VA = "0xE41670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xE41C10", Offset = "0xE41C10", VA = "0xE41C10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xE41734", Offset = "0xE41734", VA = "0xE41734")]
		public void UpdateUI(float customFillAmount = 0f)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xE41C94", Offset = "0xE41C94", VA = "0xE41C94")]
		public void UpdateExperience(int gainedXp, int currentXp, int playerLevel)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xE41DAC", Offset = "0xE41DAC", VA = "0xE41DAC")]
		[DebuggerHidden]
		private IEnumerator UpdateFillAmount(float startValue, float endValue, int gainedXp, int playerLevel)
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xE41E74", Offset = "0xE41E74", VA = "0xE41E74")]
		[DebuggerHidden]
		private IEnumerator PingPongColor()
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xE41EE8", Offset = "0xE41EE8", VA = "0xE41EE8")]
		public void OnPurchasedFullGame(Events.PurchasedFullGameEvent eventData)
		{
		}
	}
}
namespace Cortopia.Scripts.UI
{
	[Token(Token = "0x2000331")]
	public class WandsLanguageController : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Language, string> sm_languages;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Language sm_currentLanguage;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E1A0", Offset = "0xC8E1A0")]
		private static Dictionary<string, int> <>f__switch$map2;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xE6A464", Offset = "0xE6A464", VA = "0xE6A464")]
		public WandsLanguageController()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xE6A46C", Offset = "0xE6A46C", VA = "0xE6A46C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xE6A558", Offset = "0xE6A558", VA = "0xE6A558")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xE6A640", Offset = "0xE6A640", VA = "0xE6A640")]
		public void SetStartLanguage(IPlatform platform)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xE6A974", Offset = "0xE6A974", VA = "0xE6A974")]
		public Language GetLanguage()
		{
			return default(Language);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xE6A8A8", Offset = "0xE6A8A8", VA = "0xE6A8A8")]
		public void SetLanguage(Language newLanguage)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xE6A9DC", Offset = "0xE6A9DC", VA = "0xE6A9DC")]
		public string GetNextLanguage(bool setLanguage)
		{
			return null;
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xE6AC5C", Offset = "0xE6AC5C", VA = "0xE6AC5C", Slot = "5")]
		public virtual string GetParameterValue(string paramName)
		{
			return null;
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x2000332")]
	public class Blackboard : MonoBehaviour, IWorkshopTileListener
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected BlackboardMenu[] m_blackboardMenus;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_blackboardButtonParent;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_chalkLine;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BlackboardButton[] m_blackboardButtons;

		[Token(Token = "0x17000369")]
		public BlackboardButton[] BlackboardButtons
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xE4421C", Offset = "0xE4421C", VA = "0xE4421C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xE44214", Offset = "0xE44214", VA = "0xE44214")]
		public Blackboard()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xE442A8", Offset = "0xE442A8", VA = "0xE442A8", Slot = "6")]
		public virtual void ToggleBlackboard(BlackboardState newState)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xE44384", Offset = "0xE44384", VA = "0xE44384")]
		private void UpdateButtonSelection(BlackboardState state)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xE44658", Offset = "0xE44658", VA = "0xE44658", Slot = "7")]
		public virtual void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xE44710", Offset = "0xE44710", VA = "0xE44710", Slot = "8")]
		public virtual void ToggleActive(bool active)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class BlackboardButton : InteractableButton
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Blackboard m_blackboardUI;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private BlackboardState m_btnType;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_selectColor;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_chalkEffect;

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xE447B4", Offset = "0xE447B4", VA = "0xE447B4")]
		public BlackboardButton()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xE447BC", Offset = "0xE447BC", VA = "0xE447BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xE447EC", Offset = "0xE447EC", VA = "0xE447EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xE44870", Offset = "0xE44870", VA = "0xE44870", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xE44900", Offset = "0xE44900", VA = "0xE44900", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xE44A24", Offset = "0xE44A24", VA = "0xE44A24")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xE44A5C", Offset = "0xE44A5C", VA = "0xE44A5C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xE44B80", Offset = "0xE44B80", VA = "0xE44B80", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xE444D8", Offset = "0xE444D8", VA = "0xE444D8")]
		public bool UpdateSelection(BlackboardState state)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class BlackboardMenu
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlackboardState BlackboardState;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject GameObject;

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xE44BDC", Offset = "0xE44BDC", VA = "0xE44BDC")]
		public BlackboardMenu()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class BlackboardTitleController : MonoBehaviour
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E220", Offset = "0xC8E220")]
		[SerializeField]
		private TitleSelectButton m_titlePrefab;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_titleContainer;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TitleScroller m_scroller;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BlackboardTitleInformation m_blackboardTitleInformation;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TitleSelectButton m_activeTitleButton;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, List<TitleSelectButton>> m_buttons;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_canvasScale;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_titleHeight;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_page;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_maxIndexPage;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_scrolling;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_pageSize;

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xE44BE4", Offset = "0xE44BE4", VA = "0xE44BE4")]
		public BlackboardTitleController()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xE44C78", Offset = "0xE44C78", VA = "0xE44C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xE44CA4", Offset = "0xE44CA4", VA = "0xE44CA4")]
		private void InitializeButton()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xE4523C", Offset = "0xE4523C", VA = "0xE4523C")]
		private void InitialiseButtonDictionary(int numberOfPages)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xE454E0", Offset = "0xE454E0", VA = "0xE454E0")]
		private void DisplayTitleInformation()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xE450FC", Offset = "0xE450FC", VA = "0xE450FC")]
		private void ToggleColliders(int page, bool active)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xE457E4", Offset = "0xE457E4", VA = "0xE457E4")]
		private void Scroll(int pageDiff)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xE452FC", Offset = "0xE452FC", VA = "0xE452FC")]
		public void OnTitleClick(TitleSelectButton titleSelectButton)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xE45938", Offset = "0xE45938", VA = "0xE45938")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xE45950", Offset = "0xE45950", VA = "0xE45950")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xE45968", Offset = "0xE45968", VA = "0xE45968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E2BC", Offset = "0xC8E2BC")]
		private void <Scroll>m__0()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class BlackboardTitleInformation : MonoBehaviour
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text m_titleText;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_title;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text m_descriptionText;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize m_description;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationParamsManager[] m_seasonParams;

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xE45994", Offset = "0xE45994", VA = "0xE45994")]
		public BlackboardTitleInformation()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xE45510", Offset = "0xE45510", VA = "0xE45510")]
		public void UpdateInformation(TitleSelectButton titleSelectButton)
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class BlackboardUI : MonoSingleton<BlackboardUI>
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_blackboardMenus;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_blackboard;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture[] m_textures;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_f2PTextObject;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E35C", Offset = "0xC8E35C")]
		[SerializeField]
		private GameObject m_userLockedDisplay;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] m_holders;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_lineParents;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] m_enableOnSeasonLock;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject[] m_disableOnSeasonLock;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] m_enableOnSeasonLockIfHasRating;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize m_globalLeaderboard;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_userLeaderboard;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BlackboardButton[] m_blackboardButtons;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<TextMeshPro[]> m_global;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<TextMeshPro[]> m_user;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_leaderboardLoadedEventToken;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_purchasedFullGameEventToken;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E418", Offset = "0xC8E418")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E418", Offset = "0xC8E418")]
		private BlackboardState <CurrentState>k__BackingField;

		[Token(Token = "0x1700036A")]
		public BlackboardState CurrentState
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xE45A34", Offset = "0xE45A34", VA = "0xE45A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E454", Offset = "0xC8E454")]
			get
			{
				return default(BlackboardState);
			}
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xE45A3C", Offset = "0xE45A3C", VA = "0xE45A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E464", Offset = "0xC8E464")]
			private set
			{
			}
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE4599C", Offset = "0xE4599C", VA = "0xE4599C")]
		public BlackboardUI()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xE45A44", Offset = "0xE45A44", VA = "0xE45A44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xE45BA8", Offset = "0xE45BA8", VA = "0xE45BA8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xE45C64", Offset = "0xE45C64", VA = "0xE45C64")]
		private void OnLeaderboardLoaded(Events.LeadboardLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xE45C94", Offset = "0xE45C94", VA = "0xE45C94")]
		private void LeaderboardLoaded(LeaderboardType leaderboardType)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xE46744", Offset = "0xE46744", VA = "0xE46744")]
		private void OnPurchasedFullGame(Events.PurchasedFullGameEvent eventData)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xE46930", Offset = "0xE46930", VA = "0xE46930")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xE4695C", Offset = "0xE4695C", VA = "0xE4695C")]
		private void SceneLoaded(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xE471CC", Offset = "0xE471CC", VA = "0xE471CC")]
		public void ToggleBlackboard(string newState)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xE4674C", Offset = "0xE4674C", VA = "0xE4674C")]
		public void ToggleBlackboard(BlackboardState newState)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xE474BC", Offset = "0xE474BC", VA = "0xE474BC")]
		private void UpdateButtonSelection(BlackboardState state)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xE46B08", Offset = "0xE46B08", VA = "0xE46B08")]
		private void RetrieveTextComponents()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xE47378", Offset = "0xE47378", VA = "0xE47378")]
		private void ChangeTexture(int txtIndex)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xE45D80", Offset = "0xE45D80", VA = "0xE45D80")]
		public void WriteToBoard(LeaderboardType leaderboardType, List<Assets.Scripts.Platform.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xE46DA4", Offset = "0xE46DA4", VA = "0xE46DA4")]
		private void ClearLeaderboards()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class ButtonTextColorPulser : MonoBehaviour
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_text;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_color1;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_color2;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_currentTime;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_maxLoops;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E4A4", Offset = "0xC8E4A4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E4A4", Offset = "0xC8E4A4")]
		private bool <IsPulsing>k__BackingField;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E4E0", Offset = "0xC8E4E0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E4E0", Offset = "0xC8E4E0")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x1700036B")]
		public bool IsPulsing
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xE47600", Offset = "0xE47600", VA = "0xE47600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E51C", Offset = "0xC8E51C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xE47608", Offset = "0xE47608", VA = "0xE47608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E52C", Offset = "0xC8E52C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public bool IsPaused
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xE47614", Offset = "0xE47614", VA = "0xE47614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E53C", Offset = "0xC8E53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xE4761C", Offset = "0xE4761C", VA = "0xE4761C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E54C", Offset = "0xC8E54C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		private TMP_Text Text
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xE47628", Offset = "0xE47628", VA = "0xE47628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xE475F8", Offset = "0xE475F8", VA = "0xE475F8")]
		public ButtonTextColorPulser()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xE47744", Offset = "0xE47744", VA = "0xE47744")]
		public void StartPulse()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xE47758", Offset = "0xE47758", VA = "0xE47758")]
		public void StartPulse(int loops)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xE4776C", Offset = "0xE4776C", VA = "0xE4776C")]
		public void StopPulse()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE47778", Offset = "0xE47778", VA = "0xE47778")]
		public void StopPulse(Color endColor)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE477F0", Offset = "0xE477F0", VA = "0xE477F0")]
		public void PausePulse()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE47804", Offset = "0xE47804", VA = "0xE47804")]
		private void Update()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.CharacterSelection
{
	[Token(Token = "0x2000339")]
	public class CharacterMirror : MonoBehaviour, IWorkshopTileListener
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_characterBase;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterPortraitStand m_portraitStand;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PortraitFxHandler m_portraitFxHandler;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CharacterMirrorUI m_mirrorUI;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CharacterPortrait[] m_characterPortraits;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<CharacterType, DisplayCharacter> m_characters;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_rewardClaimedEventToken;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E5AC", Offset = "0xC8E5AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E5AC", Offset = "0xC8E5AC")]
		private CharacterType <CurrentCharacterType>k__BackingField;

		[Token(Token = "0x1700036E")]
		public CharacterType CurrentCharacterType
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xE47A30", Offset = "0xE47A30", VA = "0xE47A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E5E8", Offset = "0xC8E5E8")]
			get
			{
				return default(CharacterType);
			}
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xE47A38", Offset = "0xE47A38", VA = "0xE47A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E5F8", Offset = "0xC8E5F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public CharacterMirrorUI MirrorUI
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xE47A40", Offset = "0xE47A40", VA = "0xE47A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E608", Offset = "0xC8E608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public CharacterPortraitStand PortraitStand
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xE47A48", Offset = "0xE47A48", VA = "0xE47A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E618", Offset = "0xC8E618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public PortraitFxHandler PortraitFxHandler
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xE47A50", Offset = "0xE47A50", VA = "0xE47A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E628", Offset = "0xC8E628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE479D0", Offset = "0xE479D0", VA = "0xE479D0")]
		public CharacterMirror()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE47A58", Offset = "0xE47A58", VA = "0xE47A58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE47B14", Offset = "0xE47B14", VA = "0xE47B14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xE47B84", Offset = "0xE47B84", VA = "0xE47B84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xE47C18", Offset = "0xE47C18", VA = "0xE47C18")]
		private void SpawnCharacters(CharacterType[] availableCharacters)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xE47EC8", Offset = "0xE47EC8", VA = "0xE47EC8")]
		public void SwitchCharacter(CharacterType type)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xE47EDC", Offset = "0xE47EDC", VA = "0xE47EDC")]
		private void SetCharacter(CharacterType type)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xE47FAC", Offset = "0xE47FAC", VA = "0xE47FAC", Slot = "4")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xE47FB0", Offset = "0xE47FB0", VA = "0xE47FB0", Slot = "5")]
		public void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xE482F8", Offset = "0xE482F8", VA = "0xE482F8")]
		private void OnRewardClaimed(Events.EventRewardClaimedEvent eventData)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE48340", Offset = "0xE48340", VA = "0xE48340")]
		private void CheckRewardForCharacterUnlocks(List<CustomEventReward> rewards)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CharacterMirrorBuyButton : InteractableText
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CharacterMirrorUI m_characterMirrorUI;

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE484F4", Offset = "0xE484F4", VA = "0xE484F4")]
		public CharacterMirrorBuyButton()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xE484FC", Offset = "0xE484FC", VA = "0xE484FC", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xE4854C", Offset = "0xE4854C", VA = "0xE4854C")]
		private bool TryBuyCharacter()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200033B")]
	public class CharacterMirrorEquipButton : InteractableText
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CharacterMirrorUI m_characterMirrorUI;

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE48754", Offset = "0xE48754", VA = "0xE48754")]
		public CharacterMirrorEquipButton()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE4875C", Offset = "0xE4875C", VA = "0xE4875C", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class CharacterMirrorUI : MonoBehaviour, IWorkshopTileListener
	{
		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E7EC", Offset = "0xC8E7EC")]
		private sealed class <LatentSwitchState>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal CharacterMirrorState newState;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CharacterMirrorUI $this;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700062F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C18")]
				[Address(RVA = "0xEB22CC", Offset = "0xEB22CC", VA = "0xEB22CC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000630")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C19")]
				[Address(RVA = "0xEB22D4", Offset = "0xEB22D4", VA = "0xEB22D4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xEB21D4", Offset = "0xEB21D4", VA = "0xEB21D4")]
			[DebuggerHidden]
			public <LatentSwitchState>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xEB21DC", Offset = "0xEB21DC", VA = "0xEB21DC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xEB22DC", Offset = "0xEB22DC", VA = "0xEB22DC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xEB22F0", Offset = "0xEB22F0", VA = "0xEB22F0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E658", Offset = "0xC8E658")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_uiFadeInTime;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_uiFadeInDelay;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E6C4", Offset = "0xC8E6C4")]
		[SerializeField]
		private TMP_Text m_selectedCharacterText;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_costText;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_equippedText;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_characterUnlockedText;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text m_currentDustText;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text m_eventPrizeText;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CharacterMirrorEquipButton m_equipButton;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CharacterMirrorBuyButton m_buyButton;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E780", Offset = "0xC8E780")]
		[SerializeField]
		private CharacterMirror m_characterMirror;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_virtualCurrencyChangedEventToken;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<CharacterMirrorState, MirrorState> m_mirrorStates;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MirrorState m_currentState;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_latentSwitchState;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CharacterPortrait m_currentPortrait;

		[Token(Token = "0x17000372")]
		public CharacterMirror CharacterMirror
		{
			[Token(Token = "0x600182C")]
			[Address(RVA = "0xE4874C", Offset = "0xE4874C", VA = "0xE4874C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E7CC", Offset = "0xC8E7CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xE48A34", Offset = "0xE48A34", VA = "0xE48A34")]
		public CharacterMirrorUI()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE48A48", Offset = "0xE48A48", VA = "0xE48A48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE48A50", Offset = "0xE48A50", VA = "0xE48A50")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE48D88", Offset = "0xE48D88", VA = "0xE48D88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE48EB4", Offset = "0xE48EB4", VA = "0xE48EB4")]
		private void OnCurrencyChanged(Events.VirtualCurrencyChanged eventData)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE48E00", Offset = "0xE48E00", VA = "0xE48E00")]
		private void UpdateCurrentDust(int amount)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xE48EE4", Offset = "0xE48EE4", VA = "0xE48EE4")]
		public void UnlockPortrait()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xE48F40", Offset = "0xE48F40", VA = "0xE48F40")]
		public void SwitchCharacter(CharacterPortrait characterPortrait)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xE48798", Offset = "0xE48798", VA = "0xE48798")]
		public void EquipSelectedCharacter(CharacterEquipSource source, bool playSfx = true)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xE48674", Offset = "0xE48674", VA = "0xE48674")]
		public void SwitchState(CharacterMirrorState newState)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xE491A8", Offset = "0xE491A8", VA = "0xE491A8")]
		public void StopDelayedStateSwitch()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xE491DC", Offset = "0xE491DC", VA = "0xE491DC")]
		public void SwitchStateAfterDelay(CharacterMirrorState newState, float delay)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xE49248", Offset = "0xE49248", VA = "0xE49248")]
		[DebuggerHidden]
		private IEnumerator LatentSwitchState(CharacterMirrorState newState, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xE492EC", Offset = "0xE492EC", VA = "0xE492EC", Slot = "4")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xE48170", Offset = "0xE48170", VA = "0xE48170", Slot = "5")]
		public void ToggleActive(bool active)
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class CharacterPortrait : VanityUnlockable, IDragObject
	{
		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EA58", Offset = "0xC8EA58")]
		private sealed class <PlayUnlockVfx>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GameObject vfx;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CharacterPortrait $this;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000631")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C1E")]
				[Address(RVA = "0xEB44A4", Offset = "0xEB44A4", VA = "0xEB44A4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000632")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1F")]
				[Address(RVA = "0xEB44AC", Offset = "0xEB44AC", VA = "0xEB44AC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xEB314C", Offset = "0xEB314C", VA = "0xEB314C")]
			[DebuggerHidden]
			public <PlayUnlockVfx>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xEB41D0", Offset = "0xEB41D0", VA = "0xEB41D0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xEB44B4", Offset = "0xEB44B4", VA = "0xEB44B4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xEB44C8", Offset = "0xEB44C8", VA = "0xEB44C8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8E84C", Offset = "0xC8E84C")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private CharacterMirror m_characterMirror;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_targetPoint;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_snapPoint;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion m_snapRotation;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isMoving;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isRotating;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CharacterPortraitStand m_portraitStand;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E8B8", Offset = "0xC8E8B8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E8B8", Offset = "0xC8E8B8")]
		private float <DragTime>k__BackingField;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E8F4", Offset = "0xC8E8F4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8E8F4", Offset = "0xC8E8F4")]
		private bool <IsBeingDragged>k__BackingField;

		[Token(Token = "0x17000373")]
		protected override bool IsHighlightToggleActive
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xEB23B4", Offset = "0xEB23B4", VA = "0xEB23B4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9A8", Offset = "0xC8E9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000374")]
		public float DragTime
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xEB2420", Offset = "0xEB2420", VA = "0xEB2420", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9B8", Offset = "0xC8E9B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xEB2428", Offset = "0xEB2428", VA = "0xEB2428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9C8", Offset = "0xC8E9C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xEB2418", Offset = "0xEB2418", VA = "0xEB2418", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9D8", Offset = "0xC8E9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xEB2430", Offset = "0xEB2430", VA = "0xEB2430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9E8", Offset = "0xC8E9E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public bool IsDraggable
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xEB243C", Offset = "0xEB243C", VA = "0xEB243C", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8E9F8", Offset = "0xC8E9F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000377")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xEB245C", Offset = "0xEB245C", VA = "0xEB245C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EA08", Offset = "0xC8EA08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000378")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xEB24B8", Offset = "0xEB24B8", VA = "0xEB24B8", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EA18", Offset = "0xC8EA18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000379")]
		public bool ShouldRaycastToDragPlane
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xEB24BC", Offset = "0xEB24BC", VA = "0xEB24BC", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EA28", Offset = "0xC8EA28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037A")]
		public CharacterType CharacterType
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xEB2410", Offset = "0xEB2410", VA = "0xEB2410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EA38", Offset = "0xC8EA38")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x1400000E")]
		public event DragBeginDelegate OnDragBegin
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xEB24C4", Offset = "0xEB24C4", VA = "0xEB24C4", Slot = "15")]
			add
			{
			}
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xEB25AC", Offset = "0xEB25AC", VA = "0xEB25AC", Slot = "16")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event DragEndDelegate OnDragEnd
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xEB2694", Offset = "0xEB2694", VA = "0xEB2694", Slot = "17")]
			add
			{
			}
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xEB277C", Offset = "0xEB277C", VA = "0xEB277C", Slot = "18")]
			remove
			{
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xEB2354", Offset = "0xEB2354", VA = "0xEB2354")]
		public CharacterPortrait()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xEB2864", Offset = "0xEB2864", VA = "0xEB2864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xEB286C", Offset = "0xEB286C", VA = "0xEB286C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xEB28E0", Offset = "0xEB28E0", VA = "0xEB28E0", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xEB2A3C", Offset = "0xEB2A3C", VA = "0xEB2A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xEB2E48", Offset = "0xEB2E48", VA = "0xEB2E48")]
		public void DeselectPortrait()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xEB2E88", Offset = "0xEB2E88", VA = "0xEB2E88", Slot = "14")]
		public override void Unlock(GameObject vfx)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xEB30C0", Offset = "0xEB30C0", VA = "0xEB30C0")]
		[DebuggerHidden]
		private IEnumerator PlayUnlockVfx(GameObject vfx)
		{
			return null;
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xEB3154", Offset = "0xEB3154", VA = "0xEB3154", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xEB32B4", Offset = "0xEB32B4", VA = "0xEB32B4", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xEB34F0", Offset = "0xEB34F0", VA = "0xEB34F0", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xEB35A0", Offset = "0xEB35A0", VA = "0xEB35A0", Slot = "24")]
		public void BeginDrag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xEB377C", Offset = "0xEB377C", VA = "0xEB377C", Slot = "25")]
		public void Drag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xEB3934", Offset = "0xEB3934", VA = "0xEB3934", Slot = "26")]
		public void EndDrag()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xEB3C44", Offset = "0xEB3C44", VA = "0xEB3C44", Slot = "27")]
		public void SnapToObject(ISnapObject snapObject)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xEB4050", Offset = "0xEB4050", VA = "0xEB4050")]
		public void MoveToStartPoint()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xEB40C8", Offset = "0xEB40C8", VA = "0xEB40C8")]
		public void EquipPortrait()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xEB3760", Offset = "0xEB3760", VA = "0xEB3760")]
		private void MoveAndRotate(Vector3 targetPoint, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xEB2A8C", Offset = "0xEB2A8C", VA = "0xEB2A8C")]
		private void MoveTowardsTarget()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xEB2C6C", Offset = "0xEB2C6C", VA = "0xEB2C6C")]
		private void RotateTowardsTarget()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xEB414C", Offset = "0xEB414C", VA = "0xEB414C")]
		private void SetMeshRenderersActive(bool active)
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class CharacterPortraitStand : MonoBehaviour, ISnapObject, IWorkshopTileListener
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_snapTransform;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<CharacterType, CharacterPortrait> m_portraits;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPortrait[] m_allPortraits;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EAC8", Offset = "0xC8EAC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8EAC8", Offset = "0xC8EAC8")]
		private bool <IsSnappable>k__BackingField;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB04", Offset = "0xC8EB04")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8EB04", Offset = "0xC8EB04")]
		private CharacterPortrait <CurrentPortrait>k__BackingField;

		[Token(Token = "0x1700037B")]
		public Transform SnapTransform
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xEB4048", Offset = "0xEB4048", VA = "0xEB4048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public Vector3 SnapPoint
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xEB4534", Offset = "0xEB4534", VA = "0xEB4534", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700037D")]
		public Quaternion SnapRotation
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xEB4560", Offset = "0xEB4560", VA = "0xEB4560", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700037E")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xEB458C", Offset = "0xEB458C", VA = "0xEB458C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB40", Offset = "0xC8EB40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xEB4594", Offset = "0xEB4594", VA = "0xEB4594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB50", Offset = "0xC8EB50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public CharacterPortrait CurrentPortrait
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xEB45A0", Offset = "0xEB45A0", VA = "0xEB45A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB60", Offset = "0xC8EB60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xEB45A8", Offset = "0xEB45A8", VA = "0xEB45A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB70", Offset = "0xC8EB70")]
			set
			{
			}
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xEB452C", Offset = "0xEB452C", VA = "0xEB452C")]
		public CharacterPortraitStand()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xEB45B0", Offset = "0xEB45B0", VA = "0xEB45B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xEB47EC", Offset = "0xEB47EC", VA = "0xEB47EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xEB48C8", Offset = "0xEB48C8", VA = "0xEB48C8")]
		public void SetPortrait(CharacterType characterType)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xEB497C", Offset = "0xEB497C", VA = "0xEB497C", Slot = "7")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xEB4980", Offset = "0xEB4980", VA = "0xEB4980", Slot = "8")]
		public void ToggleActive(bool active)
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.CharacterSelection.MirrorStates
{
	[Token(Token = "0x200033F")]
	public class MirrorState
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected CharacterMirrorUI m_characterMirrorUI;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected TMP_Text m_currency;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TMP_Text m_selectedCharacter;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xEB4ABC", Offset = "0xEB4ABC", VA = "0xEB4ABC")]
		public MirrorState(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xEB4AFC", Offset = "0xEB4AFC", VA = "0xEB4AFC", Slot = "4")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xEB4D30", Offset = "0xEB4D30", VA = "0xEB4D30", Slot = "5")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xEB4B20", Offset = "0xEB4B20", VA = "0xEB4B20")]
		protected void EnableCurrency()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xEB4C08", Offset = "0xEB4C08", VA = "0xEB4C08")]
		protected void EnableSelectedCharacter()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class MirrorStateBuy : MirrorState
	{
		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_cost;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterMirrorBuyButton m_buyButton;

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xEB4DB0", Offset = "0xEB4DB0", VA = "0xEB4DB0")]
		public MirrorStateBuy(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit, TMP_Text cost, CharacterMirrorBuyButton buyButton)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xEB4E04", Offset = "0xEB4E04", VA = "0xEB4E04", Slot = "4")]
		public override void Enable()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xEB4F80", Offset = "0xEB4F80", VA = "0xEB4F80", Slot = "5")]
		public override void Disable()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class MirrorStateBuying : MirrorState
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_outfitUnlocked;

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xEB5004", Offset = "0xEB5004", VA = "0xEB5004")]
		public MirrorStateBuying(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit, TMP_Text outfitUnlocked)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xEB5050", Offset = "0xEB5050", VA = "0xEB5050", Slot = "4")]
		public override void Enable()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xEB53F4", Offset = "0xEB53F4", VA = "0xEB53F4")]
		private void SetCurrency(float f)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xEB54AC", Offset = "0xEB54AC", VA = "0xEB54AC", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xEB5528", Offset = "0xEB5528", VA = "0xEB5528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EB80", Offset = "0xC8EB80")]
		private void <Enable>m__0()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class MirrorStateEquip : MirrorState
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterMirrorEquipButton m_equipButton;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xEB559C", Offset = "0xEB559C", VA = "0xEB559C")]
		public MirrorStateEquip(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit, CharacterMirrorEquipButton equipButton)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xEB55E8", Offset = "0xEB55E8", VA = "0xEB55E8", Slot = "4")]
		public override void Enable()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xEB5640", Offset = "0xEB5640", VA = "0xEB5640", Slot = "5")]
		public override void Disable()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class MirrorStateEquipped : MirrorState
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_equipped;

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xEB5690", Offset = "0xEB5690", VA = "0xEB5690")]
		public MirrorStateEquipped(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit, TMP_Text equipped)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xEB56DC", Offset = "0xEB56DC", VA = "0xEB56DC", Slot = "4")]
		public override void Enable()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xEB5734", Offset = "0xEB5734", VA = "0xEB5734", Slot = "5")]
		public override void Disable()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class MirrorStateSpecial : MirrorState
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_cost;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_eventPrize;

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xEB5784", Offset = "0xEB5784", VA = "0xEB5784")]
		public MirrorStateSpecial(CharacterMirrorUI mirrorUI, TMP_Text currency, TMP_Text selectedOutfit, TMP_Text cost, TMP_Text eventPrize)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xEB57D8", Offset = "0xEB57D8", VA = "0xEB57D8", Slot = "4")]
		public override void Enable()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xEB5890", Offset = "0xEB5890", VA = "0xEB5890", Slot = "5")]
		public override void Disable()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.CharacterSelection
{
	[Token(Token = "0x2000345")]
	public class PortraitFxHandler : MonoBehaviour
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_paintingRenderer;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_lockedPaintingRenderer;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xEB5978", Offset = "0xEB5978", VA = "0xEB5978")]
		public PortraitFxHandler()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xEB2F24", Offset = "0xEB2F24", VA = "0xEB2F24")]
		public void AssignCorrectPortrait(CharacterType characterType)
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x2000346")]
	public class GameBlackboard : Blackboard
	{
		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ED18", Offset = "0xC8ED18")]
		private sealed class <WriteToBoard>c__AnonStorey0
		{
			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<Assets.Scripts.Platform.LeaderboardEntry> entries;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal List<TextMeshPro[]> tempList;

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xEB7930", Offset = "0xEB7930", VA = "0xEB7930")]
			public <WriteToBoard>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xEB7B80", Offset = "0xEB7B80", VA = "0xEB7B80")]
			internal void <>m__0(string[] response)
			{
			}
		}

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8EBB0", Offset = "0xC8EBB0")]
		[SerializeField]
		private GameObject[] m_userLockedDisplays;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] m_holders;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_lineParents;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] m_enableOnSeasonLock;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject[] m_disableOnSeasonLock;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] m_enableOnSeasonLockIfHasRating;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize[] m_globalLeaderboards;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer[] m_userLeaderboards;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<TextMeshPro[]> m_global;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<TextMeshPro[]> m_user;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<TextMeshPro[]> m_globalPlayStation;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<TextMeshPro[]> m_userPlayStation;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_leaderboardLoadedEventToken;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_internetDisconnectedEventToken;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Interactable[] m_childInteractables;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Action m_internetDisconnectedAction;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EC6C", Offset = "0xC8EC6C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8EC6C", Offset = "0xC8EC6C")]
		private BlackboardState <CurrentState>k__BackingField;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECA8", Offset = "0xC8ECA8")]
		private static Func<BlackboardMenu, bool> <>f__am$cache0;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECB8", Offset = "0xC8ECB8")]
		private static Func<BlackboardMenu, IEnumerable<Interactable>> <>f__am$cache1;

		[Token(Token = "0x17000380")]
		public BlackboardState CurrentState
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xEB5A50", Offset = "0xEB5A50", VA = "0xEB5A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECC8", Offset = "0xC8ECC8")]
			get
			{
				return default(BlackboardState);
			}
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xEB5A58", Offset = "0xEB5A58", VA = "0xEB5A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECD8", Offset = "0xC8ECD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000381")]
		private Interactable[] ChildInteractables
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xEB5A60", Offset = "0xEB5A60", VA = "0xEB5A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xEB5980", Offset = "0xEB5980", VA = "0xEB5980")]
		public GameBlackboard()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xEB5C04", Offset = "0xEB5C04", VA = "0xEB5C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xEB5C14", Offset = "0xEB5C14", VA = "0xEB5C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xEB5D78", Offset = "0xEB5D78", VA = "0xEB5D78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xEB5E20", Offset = "0xEB5E20", VA = "0xEB5E20")]
		private void OnLeaderboardLoaded(Events.LeadboardLoadedEvent eventData)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xEB5E50", Offset = "0xEB5E50", VA = "0xEB5E50")]
		private void LeaderboardLoaded(LeaderboardType leaderboardType)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xEB6C94", Offset = "0xEB6C94", VA = "0xEB6C94")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xEB6CC0", Offset = "0xEB6CC0", VA = "0xEB6CC0")]
		private void SceneLoaded(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xEB7848", Offset = "0xEB7848", VA = "0xEB7848")]
		private void OnInternetDisconnectedEvent(Events.InternetConnectionNotAvailableEvent eventData)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xEB7878", Offset = "0xEB7878", VA = "0xEB7878", Slot = "6")]
		public override void ToggleBlackboard(BlackboardState newState)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xEB6E6C", Offset = "0xEB6E6C", VA = "0xEB6E6C")]
		private void RetrieveTextComponents()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xEB5F3C", Offset = "0xEB5F3C", VA = "0xEB5F3C")]
		private void WriteToBoard(LeaderboardType leaderboardType, List<Assets.Scripts.Platform.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xEB7108", Offset = "0xEB7108", VA = "0xEB7108")]
		private void ClearLeaderboards()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xEB7938", Offset = "0xEB7938", VA = "0xEB7938", Slot = "7")]
		public override void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xEB7A00", Offset = "0xEB7A00", VA = "0xEB7A00", Slot = "8")]
		public override void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xEB7A48", Offset = "0xEB7A48", VA = "0xEB7A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECE8", Offset = "0xC8ECE8")]
		private static bool <get_ChildInteractables>m__0(BlackboardMenu b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xEB7A78", Offset = "0xEB7A78", VA = "0xEB7A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ECF8", Offset = "0xC8ECF8")]
		private static IEnumerable<Interactable> <get_ChildInteractables>m__1(BlackboardMenu b)
		{
			return null;
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xEB7ADC", Offset = "0xEB7ADC", VA = "0xEB7ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8ED08", Offset = "0xC8ED08")]
		private void <ToggleBlackboard>m__2()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC8ED28", Offset = "0xC8ED28")]
	public class ImageColorPulser : MonoBehaviour
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_color1;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_color2;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_image;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_normalizedFadeTime;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_currentTime;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xEB7D4C", Offset = "0xEB7D4C", VA = "0xEB7D4C")]
		public ImageColorPulser()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xEB7DA0", Offset = "0xEB7DA0", VA = "0xEB7DA0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class InfoBlackboard : Blackboard
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer m_blackboard;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture[] m_textures;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_purchasedFullGameEventToken;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Interactable[] m_childInteractables;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EDFC", Offset = "0xC8EDFC")]
		private static Func<BlackboardMenu, bool> <>f__am$cache0;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EE0C", Offset = "0xC8EE0C")]
		private static Func<BlackboardMenu, IEnumerable<Interactable>> <>f__am$cache1;

		[Token(Token = "0x17000382")]
		private Interactable[] ChildInteractables
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xEB7EF0", Offset = "0xEB7EF0", VA = "0xEB7EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xEB7EE8", Offset = "0xEB7EE8", VA = "0xEB7EE8")]
		public InfoBlackboard()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xEB8094", Offset = "0xEB8094", VA = "0xEB8094")]
		private void Start()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xEB80A4", Offset = "0xEB80A4", VA = "0xEB80A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xEB8160", Offset = "0xEB8160", VA = "0xEB8160")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xEB81D8", Offset = "0xEB81D8", VA = "0xEB81D8")]
		private void OnPurchasedFullGame(Events.PurchasedFullGameEvent eventData)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xEB81E8", Offset = "0xEB81E8", VA = "0xEB81E8")]
		private void ChangeTexture(int textureIndex)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xEB837C", Offset = "0xEB837C", VA = "0xEB837C", Slot = "7")]
		public override void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xEB8444", Offset = "0xEB8444", VA = "0xEB8444", Slot = "8")]
		public override void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xEB848C", Offset = "0xEB848C", VA = "0xEB848C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EE1C", Offset = "0xC8EE1C")]
		private static bool <get_ChildInteractables>m__0(BlackboardMenu b)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xEB84C0", Offset = "0xEB84C0", VA = "0xEB84C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EE2C", Offset = "0xC8EE2C")]
		private static IEnumerable<Interactable> <get_ChildInteractables>m__1(BlackboardMenu b)
		{
			return null;
		}
	}
	[Token(Token = "0x2000349")]
	public class LeaderboardBlackboardButton : BlackboardButton
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ButtonTextColorPulser m_colorPulser;

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xEB8524", Offset = "0xEB8524", VA = "0xEB8524")]
		public LeaderboardBlackboardButton()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xEB852C", Offset = "0xEB852C", VA = "0xEB852C", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xEB868C", Offset = "0xEB868C", VA = "0xEB868C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xEB86E4", Offset = "0xEB86E4", VA = "0xEB86E4", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xEB8758", Offset = "0xEB8758", VA = "0xEB8758", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xEB8794", Offset = "0xEB8794", VA = "0xEB8794")]
		private void OnActiveAndUpcomingEventsFetched(List<CustomEvent> events)
		{
		}
	}
}
namespace Scripts.UI.Workshop
{
	[Token(Token = "0x200034A")]
	public class LeaderboardBlackboardTabController : MonoBehaviour
	{
		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform[] m_tabs;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider[] m_colliders;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] m_verticalLines;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_totalWidth;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_leftZPosition;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_rewardMarker;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_rewardMarkerPositionZ;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xFA5A10", Offset = "0xFA5A10", VA = "0xFA5A10")]
		public LeaderboardBlackboardTabController()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xFA5AB8", Offset = "0xFA5AB8", VA = "0xFA5AB8")]
		private void Start()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.Mirus
{
	[Token(Token = "0x200034B")]
	public class FriendlyMatchMirusButton : MirusButton
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Text m_playerName;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text m_matchInfo;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RoomInfo m_roomInfo;

		[Token(Token = "0x17000383")]
		public override bool ShouldBeEnabled
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xEB89A0", Offset = "0xEB89A0", VA = "0xEB89A0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xEB8934", Offset = "0xEB8934", VA = "0xEB8934")]
		public FriendlyMatchMirusButton()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xEB89D4", Offset = "0xEB89D4", VA = "0xEB89D4", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xEB8BB4", Offset = "0xEB8BB4", VA = "0xEB8BB4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xEB8D94", Offset = "0xEB8D94", VA = "0xEB8D94")]
		public void SetFriendlyMatchInfo(RoomInfo info, string filteredRoomName)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xEB910C", Offset = "0xEB910C", VA = "0xEB910C")]
		private void OnInteract()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xEB9430", Offset = "0xEB9430", VA = "0xEB9430", Slot = "8")]
		protected override void OnLookEnter()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xEB95CC", Offset = "0xEB95CC", VA = "0xEB95CC", Slot = "9")]
		protected override void OnLookExit()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class Mirus : MonoBehaviour, IWorkshopTileListener
	{
		[Serializable]
		[Token(Token = "0x200034D")]
		private class MirusStateButtons
		{
			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MirusState State;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string TitleTerm;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MirusButton[] Buttons;

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xEBE0C8", Offset = "0xEBE0C8", VA = "0xEBE0C8")]
			public MirusStateButtons()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F0E4", Offset = "0xC8F0E4")]
		private struct <OnFriendlyMatchesUpdated>c__async0 : IAsyncStateMachine
		{
			[Token(Token = "0x2000619")]
			private sealed class <OnFriendlyMatchesUpdated>c__AnonStorey2
			{
				[Token(Token = "0x400222D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal List<int> roomIndices;

				[Token(Token = "0x400222E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal <OnFriendlyMatchesUpdated>c__async0 <>f__ref$0;

				[Token(Token = "0x6002C2A")]
				[Address(RVA = "0xEBDD5C", Offset = "0xEBDD5C", VA = "0xEBDD5C")]
				public <OnFriendlyMatchesUpdated>c__AnonStorey2()
				{
				}

				[Token(Token = "0x6002C2B")]
				[Address(RVA = "0xEBDD78", Offset = "0xEBDD78", VA = "0xEBDD78")]
				internal void <>m__0(string[] response)
				{
				}
			}

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Events.FriendlyMatchesUpdatedEvent eventData;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal List<string> <hosts>__0;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <i>__1;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RoomInfo <info>__2;

			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PlatformType <platformType>__2;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal string <playerIds>__2;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal string <host>__3;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal string <hostPlayFabId>__2;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal Mirus $this;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal AsyncVoidMethodBuilder $builder;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal int $PC;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private <OnFriendlyMatchesUpdated>c__AnonStorey2 $locvar0;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xEBDD64", Offset = "0xEBDD64", VA = "0xEBDD64", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xEBDD6C", Offset = "0xEBDD6C", VA = "0xEBDD6C", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F104", Offset = "0xC8F104")]
		private struct <GetMatchHostAsync>c__async1 : IAsyncStateMachine
		{
			[Token(Token = "0x200061A")]
			private sealed class <GetMatchHostAsync>c__AnonStorey3
			{
				[Token(Token = "0x400222F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal string platformPrefix;

				[Token(Token = "0x4002230")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal string playFabId;

				[Token(Token = "0x4002231")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				internal TaskCompletionSource<string> taskCompletionSource;

				[Token(Token = "0x4002232")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				internal <GetMatchHostAsync>c__async1 <>f__ref$1;

				[Token(Token = "0x6002C2C")]
				[Address(RVA = "0xEBCE44", Offset = "0xEBCE44", VA = "0xEBCE44")]
				public <GetMatchHostAsync>c__AnonStorey3()
				{
				}

				[Token(Token = "0x6002C2D")]
				[Address(RVA = "0xEBCEBC", Offset = "0xEBCEBC", VA = "0xEBCEBC")]
				internal void <>m__0(ExecuteCloudScriptResult result)
				{
				}

				[Token(Token = "0x6002C2E")]
				[Address(RVA = "0xEBD05C", Offset = "0xEBD05C", VA = "0xEBD05C")]
				internal void <>m__1(string errorMsg)
				{
				}
			}

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string playFabId;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal PlatformType platformType;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Mirus $this;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal AsyncTaskMethodBuilder<string> $builder;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int $PC;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <GetMatchHostAsync>c__AnonStorey3 $locvar0;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> $awaiter0;

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xEBCE4C", Offset = "0xEBCE4C", VA = "0xEBCE4C", Slot = "4")]
			public void MoveNext()
			{
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xEBCEB4", Offset = "0xEBCEB4", VA = "0xEBCEB4", Slot = "5")]
			[DebuggerHidden]
			public void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F124", Offset = "0xC8F124")]
		private sealed class <WriteErrorMessage>c__AnonStorey4
		{
			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string debugErrorInfo;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Mirus $this;

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xEBC3B8", Offset = "0xEBC3B8", VA = "0xEBC3B8")]
			public <WriteErrorMessage>c__AnonStorey4()
			{
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xEBDF60", Offset = "0xEBDF60", VA = "0xEBDF60")]
			internal void <>m__0(bool hasInternet)
			{
			}
		}

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MirusStateButtons[] m_mirusStateButtons;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractableButton m_returnButton;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractableButton m_scrollLeftButton;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InteractableButton m_scrollRightButton;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize m_title;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Localize m_message;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationParamsManager m_messageParams;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ButtonSorter m_buttonSorter;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WorkshopManager m_workshopManager;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SeasonStatsFetcher m_seasonStats;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MirusStateButtons m_currentMirusStateButtons;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<MirusState, MirusStateButtons> m_mirusStateButtonsLookup;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Stack<MirusStateButtons> m_previousStateButtons;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<RoomInfo> m_friendlyMatchInfos;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_friendlyMatchPage;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<int, string> m_roomFilteredNames;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, string> m_cachedFriendlyMatches;

		[Token(Token = "0x400142A")]
		private const float FadeInDuration = 1f;

		[Token(Token = "0x400142B")]
		private const float FadeInDelay = 1f;

		[Token(Token = "0x400142C")]
		private const float DefaultMessageDisplayTime = 5f;

		[Token(Token = "0x400142D")]
		private const string NoInternetConnectionTerm = "NoInternetConnection";

		[Token(Token = "0x400142E")]
		private const string ConnectionFailedTerm = "ConnectionFailed";

		[Token(Token = "0x400142F")]
		private const string UpdateMatchesTerm = "UpdateMatches";

		[Token(Token = "0x4001430")]
		private const string ConnectingTerm = "Connecting";

		[Token(Token = "0x4001431")]
		private const string ConnectingInternetTerm = "ConnectingInternet";

		[Token(Token = "0x4001432")]
		private const string UpdateMatchesFailTerm = "UpdateMatchesFail";

		[Token(Token = "0x4001433")]
		private const string SelectionWarningTerm = "SelectionWarning2";

		[Token(Token = "0x4001434")]
		private const string TermCategory = "Workshop/Mirus/Error";

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_connectToMatchEventToken;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_friendlyMatchesUpdatedEventToken;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EventToken m_connectToMatchRoomFailedEventToken;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EventToken m_connectToMatchLobbyFailedEventToken;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EventToken m_triedStartingWithoutCompleteLoadoutEventToken;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EventToken m_portalLeverInteractedWithEventToken;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private EventToken m_portalLeverRotatedEventToken;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private EventToken m_photonConnectionFailedEventToken;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private EventToken m_internetConnectedEventToken;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Action m_onInternetConnectedAction;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Action<Interactable> m_standardButtonsOnLookEnter;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Action<Interactable> m_standardButtonsOnInteract;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EF6C", Offset = "0xC8EF6C")]
		private static Action<Interactable> <>f__am$cache0;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EF7C", Offset = "0xC8EF7C")]
		private static Action<Interactable> <>f__am$cache1;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EF8C", Offset = "0xC8EF8C")]
		private static Func<MirusStateButtons, MirusState> <>f__am$cache2;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8EF9C", Offset = "0xC8EF9C")]
		private static Func<MirusStateButtons, MirusStateButtons> <>f__am$cache3;

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xEB96D0", Offset = "0xEB96D0", VA = "0xEB96D0")]
		public Mirus()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xEB97C8", Offset = "0xEB97C8", VA = "0xEB97C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xEB9D48", Offset = "0xEB9D48", VA = "0xEB9D48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xEB9FE0", Offset = "0xEB9FE0", VA = "0xEB9FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xEBA358", Offset = "0xEBA358", VA = "0xEBA358", Slot = "4")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xEBA568", Offset = "0xEBA568", VA = "0xEBA568", Slot = "5")]
		public void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xEBA56C", Offset = "0xEBA56C", VA = "0xEBA56C")]
		public void ChangeState(MirusState mirusState)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xEBA88C", Offset = "0xEBA88C", VA = "0xEBA88C")]
		public void ReceiverBack()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xEBAB08", Offset = "0xEBAB08", VA = "0xEBAB08")]
		public void ReceiverUpdateFriendlyMatches()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xEBB1C0", Offset = "0xEBB1C0", VA = "0xEBB1C0")]
		public void ReceiverScrollFriendlyMatchesLeft()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xEBB1F0", Offset = "0xEBB1F0", VA = "0xEBB1F0")]
		public void ReceiverScrollFriendlyMatchesRight()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xEBB220", Offset = "0xEBB220", VA = "0xEBB220")]
		public void ReceiverStartDuel()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xEBB2D0", Offset = "0xEBB2D0", VA = "0xEBB2D0")]
		public void ReceiverSetJoinState(string state)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xEBB408", Offset = "0xEBB408", VA = "0xEBB408")]
		public void ReceiverLoadArena(string arena)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xEBA9B0", Offset = "0xEBA9B0", VA = "0xEBA9B0")]
		public bool TryDisplayInternetConnectionError()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xEBB620", Offset = "0xEBB620", VA = "0xEBB620")]
		public void WriteInternetConnectionMessage()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xEBB670", Offset = "0xEBB670", VA = "0xEBB670")]
		public void WriteInternetConnectionFailedMessage()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xEBAA38", Offset = "0xEBAA38", VA = "0xEBAA38")]
		private bool TryWriteSeasonStatsMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xEBB564", Offset = "0xEBB564", VA = "0xEBB564")]
		private void DisplayNetworkErrorAndWaitForInternet()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xEBB7D4", Offset = "0xEBB7D4", VA = "0xEBB7D4")]
		private void OnInternetConnectionVerifiedEvent(Events.InternetConnectionVerifiedEvent eventData)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xEBB804", Offset = "0xEBB804", VA = "0xEBB804")]
		private void OnConnectToMatch(Events.ConnectToMatch eventData)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xEBB854", Offset = "0xEBB854", VA = "0xEBB854")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC8EFAC", Offset = "0xC8EFAC")]
		private void OnFriendlyMatchesUpdated(Events.FriendlyMatchesUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xEBB8F8", Offset = "0xEBB8F8", VA = "0xEBB8F8")]
		[DebuggerStepThrough]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xC8F020", Offset = "0xC8F020")]
		private Task<string> GetMatchHostAsync(string playFabId, PlatformType platformType)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xEBB9E8", Offset = "0xEBB9E8", VA = "0xEBB9E8")]
		private void OnConnectToMatchRoomFailed(Events.ConnectToMatchRoomFailed eventData)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xEBBAD8", Offset = "0xEBBAD8", VA = "0xEBBAD8")]
		private void OnConnectToMatchLobbyFailed(Events.ConnectToMatchLobbyFailed eventData)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xEBBB28", Offset = "0xEBBB28", VA = "0xEBBB28")]
		private void OnPhotonConnectionFailed(NetworkEvents.PhotonConnectionFailedEvent eventData)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xEBBB78", Offset = "0xEBBB78", VA = "0xEBBB78")]
		private void OnTriedStartingWithoutCompleteLoadout(Events.TriedStartingWithoutCompleteLoadoutEvent eventData)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xEBBC2C", Offset = "0xEBBC2C", VA = "0xEBBC2C")]
		private void OnPortalLeverRotated(Events.PortalLeverRotatedEvent eventData)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xEBC294", Offset = "0xEBC294", VA = "0xEBC294")]
		private void OnPortalLeverInteractedWithEvent(Events.PortalLeverInteractedWithEvent eventData)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xEBBA38", Offset = "0xEBBA38", VA = "0xEBBA38")]
		private void ResetAfterError(string errorMessageAddon)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xEBB6C0", Offset = "0xEBB6C0", VA = "0xEBB6C0")]
		private void SetParam(string param, object value)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xEBC2C4", Offset = "0xEBC2C4", VA = "0xEBC2C4")]
		private void WriteErrorMessage(string debugErrorInfo)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xEBB724", Offset = "0xEBB724", VA = "0xEBB724")]
		private void WriteMirusMessage(string term)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xEBB0E4", Offset = "0xEBB0E4", VA = "0xEBB0E4")]
		private void WriteMirusErrorMessage(string term)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xEBC3C0", Offset = "0xEBC3C0", VA = "0xEBC3C0")]
		private void WriteMirusErrorMessage(string term, float time)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xEBC20C", Offset = "0xEBC20C", VA = "0xEBC20C")]
		private void DeactivateMessage()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xEBAF54", Offset = "0xEBAF54", VA = "0xEBAF54")]
		private void DisplayCorrectFriendlyMatchPageSelectors()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xEBABCC", Offset = "0xEBABCC", VA = "0xEBABCC")]
		private void DisplayCorrectFriendlyMatches()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xEBC458", Offset = "0xEBC458", VA = "0xEBC458")]
		public void ChangeToConnectingState()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xEBA5E8", Offset = "0xEBA5E8", VA = "0xEBA5E8")]
		private void ChangeStateInternal(MirusState mirusState)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xEBA2B8", Offset = "0xEBA2B8", VA = "0xEBA2B8")]
		private void SetBackButtonEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xEBBDE8", Offset = "0xEBBDE8", VA = "0xEBBDE8")]
		private void ActivateMainMenu()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xEBC7B0", Offset = "0xEBC7B0", VA = "0xEBC7B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F094", Offset = "0xC8F094")]
		private static void <OnEnable>m__0(Interactable _)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xEBC828", Offset = "0xEBC828", VA = "0xEBC828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F0A4", Offset = "0xC8F0A4")]
		private static void <OnEnable>m__1(Interactable _)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xEBC8A0", Offset = "0xEBC8A0", VA = "0xEBC8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F0B4", Offset = "0xC8F0B4")]
		private static MirusState <Start>m__2(MirusStateButtons m)
		{
			return default(MirusState);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xEBC8C8", Offset = "0xEBC8C8", VA = "0xEBC8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F0C4", Offset = "0xC8F0C4")]
		private static MirusStateButtons <Start>m__3(MirusStateButtons m)
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xEBC8D0", Offset = "0xEBC8D0", VA = "0xEBC8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F0D4", Offset = "0xC8F0D4")]
		private void <DisplayNetworkErrorAndWaitForInternet>m__4()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class MirusButton : MonoBehaviour, IVisibilityToggleable
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MirusState m_newState;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_shouldBeEnabledMethod;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8F154", Offset = "0xC8F154")]
		[SerializeField]
		protected InteractableButton m_interactable;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mirus m_mirus;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_text;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer m_frame;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_showMirusAsConnectingWhenClicked;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F1E0", Offset = "0xC8F1E0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8F1E0", Offset = "0xC8F1E0")]
		private Color <DefaultTextColour>k__BackingField;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<Interactable> m_onInteractAction;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Interactable> m_onLookEnterAction;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<Interactable> m_onLookExitAction;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_shouldBeEnabledCount;

		[Token(Token = "0x17000384")]
		protected Color DefaultTextColour
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xEB96C4", Offset = "0xEB96C4", VA = "0xEB96C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F21C", Offset = "0xC8F21C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xEBE0D0", Offset = "0xEBE0D0", VA = "0xEBE0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F22C", Offset = "0xC8F22C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public virtual bool ShouldBeEnabled
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0xEBE0DC", Offset = "0xEBE0DC", VA = "0xEBE0DC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xEB8938", Offset = "0xEB8938", VA = "0xEB8938")]
		public MirusButton()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xEBE138", Offset = "0xEBE138", VA = "0xEBE138")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xEB8A6C", Offset = "0xEB8A6C", VA = "0xEB8A6C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xEB8C4C", Offset = "0xEB8C4C", VA = "0xEB8C4C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xEBA508", Offset = "0xEBA508", VA = "0xEBA508")]
		public void LockInteractable(bool lockInteractable)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xEBC570", Offset = "0xEBC570", VA = "0xEBC570")]
		public void FadeInButton(float fadeTime, float delay)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xEBE274", Offset = "0xEBE274", VA = "0xEBE274")]
		public void GetAiEnabled()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xEBE2F0", Offset = "0xEBE2F0", VA = "0xEBE2F0")]
		public void GetArenaEnabled(string arena)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xEBE4B8", Offset = "0xEBE4B8", VA = "0xEBE4B8")]
		public void GetTutorialStateIsAtLeast(string tutorialState)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xEBE600", Offset = "0xEBE600", VA = "0xEBE600")]
		public void GetPlatformSupported()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xEBE6B8", Offset = "0xEBE6B8", VA = "0xEBE6B8")]
		private void OnInteract()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xEBE7F8", Offset = "0xEBE7F8", VA = "0xEBE7F8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xEB94F4", Offset = "0xEB94F4", VA = "0xEB94F4", Slot = "8")]
		protected virtual void OnLookEnter()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xEB9668", Offset = "0xEB9668", VA = "0xEB9668", Slot = "9")]
		protected virtual void OnLookExit()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xEBE828", Offset = "0xEBE828", VA = "0xEBE828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F23C", Offset = "0xC8F23C")]
		private void <Awake>m__0(Interactable _)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xEBE82C", Offset = "0xEBE82C", VA = "0xEBE82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F24C", Offset = "0xC8F24C")]
		private void <Awake>m__1(Interactable _)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xEBE838", Offset = "0xEBE838", VA = "0xEBE838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F25C", Offset = "0xC8F25C")]
		private void <Awake>m__2(Interactable _)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xEBE844", Offset = "0xEBE844", VA = "0xEBE844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F26C", Offset = "0xC8F26C")]
		private void <FadeInButton>m__3()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xEBE894", Offset = "0xEBE894", VA = "0xEBE894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F27C", Offset = "0xC8F27C")]
		private void <OnInteract>m__4()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public enum MirusState
	{
		[Token(Token = "0x4001455")]
		Start,
		[Token(Token = "0x4001456")]
		DuelFriend,
		[Token(Token = "0x4001457")]
		HostFriendlyLevelSelect,
		[Token(Token = "0x4001458")]
		ExplorationLevelSelect,
		[Token(Token = "0x4001459")]
		VersusAILevelSelect,
		[Token(Token = "0x400145A")]
		JoinFriendSelect,
		[Token(Token = "0x400145B")]
		Hide
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x2000350")]
	public class NewsBlackboardButton : BlackboardButton
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextMeshPro m_header;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TextMeshPro m_body;

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xEBE8C0", Offset = "0xEBE8C0", VA = "0xEBE8C0")]
		public NewsBlackboardButton()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xEBE8C8", Offset = "0xEBE8C8", VA = "0xEBE8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xEBE910", Offset = "0xEBE910", VA = "0xEBE910")]
		private void WriteHeader(string header)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xEBE9C0", Offset = "0xEBE9C0", VA = "0xEBE9C0")]
		private void WriteBody(string body)
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class ProjectorScreenUI : MonoSingleton<ProjectorScreenUI>
	{
		[Token(Token = "0x400145E")]
		private const string RelicInteractPointPath = "InteractRelicsPoint";

		[Token(Token = "0x400145F")]
		private const string RelicInteractStickPath = "InteractRelicsStick";

		[Token(Token = "0x4001460")]
		private const string RelicInteractDualPath = "InteractRelicsDual";

		[Token(Token = "0x4001461")]
		private const string InteractPath = "ProjectorInteract";

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8F2AC", Offset = "0xC8F2AC")]
		[SerializeField]
		private Image m_interactionsBackgroundImage;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_instructionTextGos;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image[] m_wandSlotImages;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8F318", Offset = "0xC8F318")]
		[SerializeField]
		private LocalizationParamsManager m_screenParamsManager;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize m_spellName;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Localize m_spellDescription;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI m_spellCastCost;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI m_spellDamage;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_owned;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI[] m_secDisplays;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8F3C4", Offset = "0xC8F3C4")]
		[SerializeField]
		private WorkshopButton m_buyBtn;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Spell m_currentSpell;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private InfoType m_activeInfo;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ControlType? m_controlType;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WandInput? m_wandInput;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_loadoutSelectedEventToken;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_spellInfoUpdatedEventToken;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_spellUnlockedEventToken;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xEBEA70", Offset = "0xEBEA70", VA = "0xEBEA70")]
		public ProjectorScreenUI()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xEBEB10", Offset = "0xEBEB10", VA = "0xEBEB10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xEBEC74", Offset = "0xEBEC74", VA = "0xEBEC74", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xEBED30", Offset = "0xEBED30", VA = "0xEBED30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xEBEF58", Offset = "0xEBEF58", VA = "0xEBEF58")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xEBEF88", Offset = "0xEBEF88", VA = "0xEBEF88")]
		private void ChangeInput(WandInput wandInput)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xEBF23C", Offset = "0xEBF23C", VA = "0xEBF23C")]
		private void UpdateControlScreenTexture()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xEBF6FC", Offset = "0xEBF6FC", VA = "0xEBF6FC")]
		private void UpdateControlSchemeSprite(WandInput wandInput)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xEBF9A4", Offset = "0xEBF9A4", VA = "0xEBF9A4")]
		public void OnSpellUnlocked(Events.SpellUnlockedEvent eventData)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xEBFB78", Offset = "0xEBFB78", VA = "0xEBFB78")]
		private void OnSpellInfoUpdated(Events.SpellInfoUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xEBFBA8", Offset = "0xEBFBA8", VA = "0xEBFBA8")]
		private void ShowSpellInfo(SpellSlot spellSlot)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xEC00F0", Offset = "0xEC00F0", VA = "0xEC00F0")]
		public void UnlockSpell()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xEC0260", Offset = "0xEC0260", VA = "0xEC0260")]
		private void SetName(string term)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xEC0360", Offset = "0xEC0360", VA = "0xEC0360")]
		private void SetDescription(string term)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xEC0410", Offset = "0xEC0410", VA = "0xEC0410")]
		private void SetCastCost(string castCost)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xEC0578", Offset = "0xEC0578", VA = "0xEC0578")]
		private void SetDamage(string spellDamage)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xEBF9EC", Offset = "0xEBF9EC", VA = "0xEBF9EC")]
		private void SetOwned(string spellCost, bool spellOwned = false)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xEBEFF0", Offset = "0xEBEFF0", VA = "0xEBEFF0")]
		public void ClearInformation()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xEC06E4", Offset = "0xEC06E4", VA = "0xEC06E4")]
		public void ShowLockedLoadoutInfo()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xEC001C", Offset = "0xEC001C", VA = "0xEC001C")]
		public void WriteInfo(bool spellUnlocked, string nameTerm, string descriptionTerm, string castCost, string damage, string spellCost)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xEBF07C", Offset = "0xEBF07C", VA = "0xEBF07C")]
		public void SetInstructionsActive(InfoType type)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xEBED34", Offset = "0xEBED34", VA = "0xEBED34")]
		private void CheckInstructionConditions()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xEC06EC", Offset = "0xEC06EC", VA = "0xEC06EC")]
		private void EnableLoadoutTutorial()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xEC07BC", Offset = "0xEC07BC", VA = "0xEC07BC")]
		private void OnLoadoutSelected(Events.LoadoutSelectedEvent eventData)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xEC07B4", Offset = "0xEC07B4", VA = "0xEC07B4")]
		private void EnableSpellTokenTutorial()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class ScrollingNumber : MonoBehaviour
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_yOffset;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TweenCallback m_callback;

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xEC08CC", Offset = "0xEC08CC", VA = "0xEC08CC")]
		public ScrollingNumber()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xEC08D4", Offset = "0xEC08D4", VA = "0xEC08D4")]
		public void SetNumber(int number)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xEC0988", Offset = "0xEC0988", VA = "0xEC0988")]
		public void TweenNumber(int number, float time, float delay, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xEC0ACC", Offset = "0xEC0ACC", VA = "0xEC0ACC")]
		private void OnCompleted()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class ScrollingNumberManager : MonoBehaviour
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected ScrollingNumber[] m_scollingNumbers;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xEC0B7C", Offset = "0xEC0B7C", VA = "0xEC0B7C")]
		public ScrollingNumberManager()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xEC0B84", Offset = "0xEC0B84", VA = "0xEC0B84")]
		public void SetNumber(int number, bool playSfx = false)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xEC0C5C", Offset = "0xEC0C5C", VA = "0xEC0C5C")]
		protected int GetNumberAtIndex(int number, int index)
		{
			return default(int);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xEC0D00", Offset = "0xEC0D00", VA = "0xEC0D00", Slot = "4")]
		protected virtual void SetSfxActive(bool active)
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.SpellTable
{
	[Token(Token = "0x2000354")]
	public class SpellTableCrank : Interactable
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent m_onClick;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_halfRotations;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_workshopWandOpenedEventToken;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_workshopWandClosedEventToken;

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xEC0E04", Offset = "0xEC0E04", VA = "0xEC0E04")]
		public SpellTableCrank()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xEC0E0C", Offset = "0xEC0E0C", VA = "0xEC0E0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xEC0F1C", Offset = "0xEC0F1C", VA = "0xEC0F1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xEC0FAC", Offset = "0xEC0FAC", VA = "0xEC0FAC")]
		private void OnOpen(Events.WorkshopWandOpenedEvent eventData)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xEC110C", Offset = "0xEC110C", VA = "0xEC110C")]
		private void OnClose(Events.WorkshopWandClosedEvent eventData)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xEC126C", Offset = "0xEC126C", VA = "0xEC126C", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class SpellTableLoadoutButton : InteractableButton
	{
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_loadoutIndex;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_numberObject;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isLoadoutLocked;

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xEC12BC", Offset = "0xEC12BC", VA = "0xEC12BC")]
		public SpellTableLoadoutButton()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xEC12C4", Offset = "0xEC12C4", VA = "0xEC12C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xEC1424", Offset = "0xEC1424", VA = "0xEC1424", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xEC15C0", Offset = "0xEC15C0", VA = "0xEC15C0", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xEC1648", Offset = "0xEC1648", VA = "0xEC1648", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class SpellTableRod : MonoBehaviour
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_moveDistance;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3? m_closedPoint;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3? m_openedPoint;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_workshopWandOpenedEventToken;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_workshopWandClosedEventToken;

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xEC17BC", Offset = "0xEC17BC", VA = "0xEC17BC")]
		public SpellTableRod()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xEC17C4", Offset = "0xEC17C4", VA = "0xEC17C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xEC1938", Offset = "0xEC1938", VA = "0xEC1938")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xEC1A48", Offset = "0xEC1A48", VA = "0xEC1A48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xEC1AD8", Offset = "0xEC1AD8", VA = "0xEC1AD8")]
		private void OnOpen(Events.WorkshopWandOpenedEvent eventData)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xEC1BB4", Offset = "0xEC1BB4", VA = "0xEC1BB4")]
		private void OnClose(Events.WorkshopWandClosedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class SpellTableScrollingNumberManager : ScrollingNumberManager
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_spellTokensChangedEventToken;

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xEC1C90", Offset = "0xEC1C90", VA = "0xEC1C90")]
		public SpellTableScrollingNumberManager()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xEC1C98", Offset = "0xEC1C98", VA = "0xEC1C98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xEC1D9C", Offset = "0xEC1D9C", VA = "0xEC1D9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xEC1E14", Offset = "0xEC1E14", VA = "0xEC1E14")]
		private void OnSpellUnlocked(Events.SpellUnlockedEvent eventData)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xEC1E78", Offset = "0xEC1E78", VA = "0xEC1E78", Slot = "4")]
		protected override void SetSfxActive(bool active)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class SpellTableWandSnappable : MonoBehaviour, ISnapObject, IWorkshopTileListener
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_spellSelectActivatedEventToken;

		[Token(Token = "0x17000386")]
		public Vector3 SnapPoint
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xEC1F58", Offset = "0xEC1F58", VA = "0xEC1F58", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000387")]
		public Quaternion SnapRotation
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xEC1F8C", Offset = "0xEC1F8C", VA = "0xEC1F8C", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000388")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xEC1FC0", Offset = "0xEC1FC0", VA = "0xEC1FC0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xEC1F50", Offset = "0xEC1F50", VA = "0xEC1F50")]
		public SpellTableWandSnappable()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xEC2030", Offset = "0xEC2030", VA = "0xEC2030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xEC20EC", Offset = "0xEC20EC", VA = "0xEC20EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xEC2164", Offset = "0xEC2164", VA = "0xEC2164")]
		private void OnSpellSelectActivated(Events.SpellSelectActivatedEvent eventData)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xEC21A8", Offset = "0xEC21A8", VA = "0xEC21A8", Slot = "7")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xEC21DC", Offset = "0xEC21DC", VA = "0xEC21DC", Slot = "8")]
		public void ToggleActive(bool active)
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x2000359")]
	public class TableNote : Interactable, IDragObject
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TutorialSubtitleManager m_tutorialSubtitleManager;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isMoving;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_isRotating;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_startingPoint;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_targetPoint;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_startingRotation;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x400148F")]
		private const float MoveSpeed = 8f;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F528", Offset = "0xC8F528")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8F528", Offset = "0xC8F528")]
		private bool <IsBeingDragged>k__BackingField;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F564", Offset = "0xC8F564")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8F564", Offset = "0xC8F564")]
		private float <DragTime>k__BackingField;

		[Token(Token = "0x17000389")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xEC2694", Offset = "0xEC2694", VA = "0xEC2694", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F5A0", Offset = "0xC8F5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xEC269C", Offset = "0xEC269C", VA = "0xEC269C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F5B0", Offset = "0xC8F5B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public bool IsDraggable
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xEC26A8", Offset = "0xEC26A8", VA = "0xEC26A8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038B")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xEC26B0", Offset = "0xEC26B0", VA = "0xEC26B0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038C")]
		public bool ShouldRaycastToDragPlane
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xEC26B8", Offset = "0xEC26B8", VA = "0xEC26B8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038D")]
		public float DragTime
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xEC26C0", Offset = "0xEC26C0", VA = "0xEC26C0", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F5C0", Offset = "0xC8F5C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xEC26C8", Offset = "0xEC26C8", VA = "0xEC26C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F5D0", Offset = "0xC8F5D0")]
			private set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event DragBeginDelegate OnDragBegin
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xEC22F4", Offset = "0xEC22F4", VA = "0xEC22F4", Slot = "7")]
			add
			{
			}
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xEC23DC", Offset = "0xEC23DC", VA = "0xEC23DC", Slot = "8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event DragEndDelegate OnDragEnd
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xEC24C4", Offset = "0xEC24C4", VA = "0xEC24C4", Slot = "9")]
			add
			{
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xEC25AC", Offset = "0xEC25AC", VA = "0xEC25AC", Slot = "10")]
			remove
			{
			}
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xEC22EC", Offset = "0xEC22EC", VA = "0xEC22EC")]
		public TableNote()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xEC26D0", Offset = "0xEC26D0", VA = "0xEC26D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xEC2740", Offset = "0xEC2740", VA = "0xEC2740")]
		private void Update()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xEC2B4C", Offset = "0xEC2B4C", VA = "0xEC2B4C")]
		private void MoveAndRotate(Vector3 targetPoint, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xEC2790", Offset = "0xEC2790", VA = "0xEC2790")]
		private void MoveTowardsTarget()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xEC2970", Offset = "0xEC2970", VA = "0xEC2970")]
		private void RotateTowardsTarget()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xEC2B68", Offset = "0xEC2B68", VA = "0xEC2B68", Slot = "16")]
		public void BeginDrag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xEC2F40", Offset = "0xEC2F40", VA = "0xEC2F40", Slot = "17")]
		public void Drag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xEC30F0", Offset = "0xEC30F0", VA = "0xEC30F0", Slot = "18")]
		public void EndDrag()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xEC3374", Offset = "0xEC3374", VA = "0xEC3374", Slot = "19")]
		public void SnapToObject(ISnapObject snapObject)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class TitleScroller : MonoBehaviour
	{
		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F5F0", Offset = "0xC8F5F0")]
		private sealed class <Scroll>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 to;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float speed;

			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Action completed;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal TitleScroller $this;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x17000633")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C31")]
				[Address(RVA = "0xEC38BC", Offset = "0xEC38BC", VA = "0xEC38BC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000634")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C32")]
				[Address(RVA = "0xEC38C4", Offset = "0xEC38C4", VA = "0xEC38C4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xEC3598", Offset = "0xEC3598", VA = "0xEC3598")]
			[DebuggerHidden]
			public <Scroll>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xEC35A0", Offset = "0xEC35A0", VA = "0xEC35A0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xEC38CC", Offset = "0xEC38CC", VA = "0xEC38CC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xEC38E0", Offset = "0xEC38E0", VA = "0xEC38E0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xEC33B0", Offset = "0xEC33B0", VA = "0xEC33B0")]
		public TitleScroller()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xEC33B8", Offset = "0xEC33B8", VA = "0xEC33B8")]
		public void ScrollTo(Vector3 to, float speed, Action callback)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xEC34C4", Offset = "0xEC34C4", VA = "0xEC34C4")]
		[DebuggerHidden]
		private IEnumerator Scroll(Vector3 to, float speed, Action completed)
		{
			return null;
		}
	}
	[Token(Token = "0x200035B")]
	public class TitleSelectButton : InteractableButton
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizationParamsManager m_localizeParams;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color m_selectColor;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_chalkEffect;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject m_chalkLine;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ButtonTextColorer m_buttonTextColorer;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F6A0", Offset = "0xC8F6A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8F6A0", Offset = "0xC8F6A0")]
		private Title <Title>k__BackingField;

		[Token(Token = "0x1700038E")]
		public Title Title
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xEC397C", Offset = "0xEC397C", VA = "0xEC397C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F6DC", Offset = "0xC8F6DC")]
			get
			{
				return default(Title);
			}
			[Token(Token = "0x6001959")]
			[Address(RVA = "0xEC3984", Offset = "0xEC3984", VA = "0xEC3984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F6EC", Offset = "0xC8F6EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xEC3944", Offset = "0xEC3944", VA = "0xEC3944")]
		public TitleSelectButton()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xEC398C", Offset = "0xEC398C", VA = "0xEC398C", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xEC3A28", Offset = "0xEC3A28", VA = "0xEC3A28")]
		public void SetTitle(Title title, string displayName)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xEC3B10", Offset = "0xEC3B10", VA = "0xEC3B10")]
		public void Clear()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xEC3B9C", Offset = "0xEC3B9C", VA = "0xEC3B9C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xEC3D1C", Offset = "0xEC3D1C", VA = "0xEC3D1C")]
		public void ToggleCollider(bool active)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xEC3D58", Offset = "0xEC3D58", VA = "0xEC3D58", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xEC3E60", Offset = "0xEC3E60", VA = "0xEC3E60", Slot = "5")]
		public override void LookExit()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.Tutorial.Progressors
{
	[Token(Token = "0x200035C")]
	public class BeginDragTutorialReactor : DragObjectTutorialReactor
	{
		[Token(Token = "0x6001961")]
		[Address(RVA = "0xEC3EBC", Offset = "0xEC3EBC", VA = "0xEC3EBC")]
		public BeginDragTutorialReactor()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xEC3ECC", Offset = "0xEC3ECC", VA = "0xEC3ECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xEC4014", Offset = "0xEC4014", VA = "0xEC4014")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public abstract class DragObjectTutorialReactor : TutorialReactor
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Component m_component;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IDragObject m_dragObject;

		[Token(Token = "0x1700038F")]
		public Component Component
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xEC414C", Offset = "0xEC414C", VA = "0xEC414C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xEC3EC4", Offset = "0xEC3EC4", VA = "0xEC3EC4")]
		protected DragObjectTutorialReactor()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class EndDragTutorialReactor : DragObjectTutorialReactor
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xEC4154", Offset = "0xEC4154", VA = "0xEC4154")]
		public EndDragTutorialReactor()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xEC415C", Offset = "0xEC415C", VA = "0xEC415C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xEC42A8", Offset = "0xEC42A8", VA = "0xEC42A8")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public abstract class EventListenerTutorialReactor<T> : TutorialReactor where T : EventBase, IEvent
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventToken m_token;

		[Token(Token = "0x6001969")]
		protected EventListenerTutorialReactor()
		{
		}

		[Token(Token = "0x600196A")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600196B")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600196C")]
		protected virtual void OnEventTriggered(T eventData)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public abstract class EventMicroListenerTutorialReactor<T> : TutorialReactor where T : EventBase, IEvent
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventToken m_token;

		[Token(Token = "0x600196D")]
		protected EventMicroListenerTutorialReactor()
		{
		}

		[Token(Token = "0x600196E")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600196F")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001970")]
		protected virtual void OnEventTriggered(T eventData)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class InteractTutorialReactor : TutorialReactor
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Interactable m_interactable;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<Interactable> m_interactAction;

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xEC43D8", Offset = "0xEC43D8", VA = "0xEC43D8")]
		public InteractTutorialReactor()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xEC43E0", Offset = "0xEC43E0", VA = "0xEC43E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xEC4464", Offset = "0xEC4464", VA = "0xEC4464")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xEC4560", Offset = "0xEC4560", VA = "0xEC4560")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xEC465C", Offset = "0xEC465C", VA = "0xEC465C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F71C", Offset = "0xC8F71C")]
		private void <Awake>m__0(Interactable interactable)
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class LevelStartedTutorialReactor : TutorialReactor
	{
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F73C", Offset = "0xC8F73C")]
		private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LevelStartedTutorialReactor $this;

			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000635")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C37")]
				[Address(RVA = "0xEC4788", Offset = "0xEC4788", VA = "0xEC4788", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000636")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C38")]
				[Address(RVA = "0xEC4790", Offset = "0xEC4790", VA = "0xEC4790", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xEC46DC", Offset = "0xEC46DC", VA = "0xEC46DC")]
			[DebuggerHidden]
			public <Start>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xEC46E4", Offset = "0xEC46E4", VA = "0xEC46E4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0xEC4798", Offset = "0xEC4798", VA = "0xEC4798", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0xEC47AC", Offset = "0xEC47AC", VA = "0xEC47AC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xEC4668", Offset = "0xEC4668", VA = "0xEC4668")]
		public LevelStartedTutorialReactor()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xEC4670", Offset = "0xEC4670", VA = "0xEC4670")]
		[DebuggerHidden]
		private IEnumerator Start()
		{
			return null;
		}
	}
	[Token(Token = "0x2000363")]
	public class LookEnterTutorialReactor : TutorialReactor
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Interactable m_interactable;

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xEC4810", Offset = "0xEC4810", VA = "0xEC4810")]
		public LookEnterTutorialReactor()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xEC4818", Offset = "0xEC4818", VA = "0xEC4818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xEC4930", Offset = "0xEC4930", VA = "0xEC4930")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class LookExitTutorialReactor : TutorialReactor
	{
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Interactable m_interactable;

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xEC4A48", Offset = "0xEC4A48", VA = "0xEC4A48")]
		public LookExitTutorialReactor()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xEC4A50", Offset = "0xEC4A50", VA = "0xEC4A50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xEC4B68", Offset = "0xEC4B68", VA = "0xEC4B68")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class OpponentSpawnedTutorialReactor : EventListenerTutorialReactor<Events.WielderSpawnedEvent>
	{
		[Token(Token = "0x600197E")]
		[Address(RVA = "0xEC4C80", Offset = "0xEC4C80", VA = "0xEC4C80")]
		public OpponentSpawnedTutorialReactor()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xEC4CD0", Offset = "0xEC4CD0", VA = "0xEC4CD0", Slot = "7")]
		protected override void OnEventTriggered(Events.WielderSpawnedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class SpellCastTutorialReactor : EventListenerTutorialReactor<Events.SpellCastEvent>
	{
		[Token(Token = "0x6001980")]
		[Address(RVA = "0xEC4D30", Offset = "0xEC4D30", VA = "0xEC4D30")]
		public SpellCastTutorialReactor()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class SpellSelectedTutorialReactor : EventListenerTutorialReactor<Events.SpellSelectedEvent>
	{
		[Token(Token = "0x6001981")]
		[Address(RVA = "0xEC4D80", Offset = "0xEC4D80", VA = "0xEC4D80")]
		public SpellSelectedTutorialReactor()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public abstract class TutorialReactor : MonoBehaviour
	{
		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialCondition[] m_conditions;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialReactionType m_reactionType;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_int;

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xEC4144", Offset = "0xEC4144", VA = "0xEC4144")]
		protected TutorialReactor()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xEC4DD0", Offset = "0xEC4DD0", VA = "0xEC4DD0", Slot = "4")]
		protected virtual void React()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xEC5888", Offset = "0xEC5888", VA = "0xEC5888")]
		private void ProgressTutorial()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xEC58E4", Offset = "0xEC58E4", VA = "0xEC58E4")]
		private void ActivatePostTutorialTrigger()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class VoiceOverCompleteTutorialReactor : EventMicroListenerTutorialReactor<Events.TutorialVoiceOverCompleted>
	{
		[Token(Token = "0x6001986")]
		[Address(RVA = "0xEC5940", Offset = "0xEC5940", VA = "0xEC5940")]
		public VoiceOverCompleteTutorialReactor()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.Tutorial
{
	[Token(Token = "0x200036A")]
	public class RelicSlotHighlighter : TutorialHighlighter
	{
		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_tutorialVoiceOverCompletedEventToken;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_spellInfoUpdatedEventToken;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_spellUnlockedEventToken;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem m_highlightedParticles;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F7EC", Offset = "0xC8F7EC")]
		private static Func<SpellSlot, bool> <>f__am$cache0;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F7FC", Offset = "0xC8F7FC")]
		private static Func<SpellSlot, Spell> <>f__am$cache1;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F80C", Offset = "0xC8F80C")]
		private static Func<SpellSlot, bool> <>f__am$cache2;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F81C", Offset = "0xC8F81C")]
		private static Func<SpellSlot, bool> <>f__am$cache3;

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xEC5990", Offset = "0xEC5990", VA = "0xEC5990")]
		public RelicSlotHighlighter()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xEC59A0", Offset = "0xEC59A0", VA = "0xEC59A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xEC5B04", Offset = "0xEC5B04", VA = "0xEC5B04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xEC5BAC", Offset = "0xEC5BAC", VA = "0xEC5BAC")]
		private void OnSpellUnlocked(Events.SpellUnlockedEvent eventData)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xEC5C2C", Offset = "0xEC5C2C", VA = "0xEC5C2C")]
		private void OnSpellInfoUpdated(Events.SpellInfoUpdatedEvent eventData)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xEC5DC0", Offset = "0xEC5DC0", VA = "0xEC5DC0")]
		private void OnVoiceOverCompleted(Events.TutorialVoiceOverCompleted eventData)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xEC62FC", Offset = "0xEC62FC", VA = "0xEC62FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F82C", Offset = "0xC8F82C")]
		private static bool <OnVoiceOverCompleted>m__0(SpellSlot x)
		{
			return default(bool);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xEC632C", Offset = "0xEC632C", VA = "0xEC632C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F83C", Offset = "0xC8F83C")]
		private static Spell <OnVoiceOverCompleted>m__1(SpellSlot x)
		{
			return default(Spell);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xEC6368", Offset = "0xEC6368", VA = "0xEC6368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F84C", Offset = "0xC8F84C")]
		private static bool <OnVoiceOverCompleted>m__2(SpellSlot x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xEC6470", Offset = "0xEC6470", VA = "0xEC6470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F85C", Offset = "0xC8F85C")]
		private static bool <OnVoiceOverCompleted>m__3(SpellSlot x)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200036B")]
	public class TutorialCondition
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TutorialConditionType m_type;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_int;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_float;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_bool;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.Object m_object;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_shouldSwitchStateOnFail;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TutorialState m_stateOnConditionFailed;

		[Token(Token = "0x17000390")]
		public bool ShouldSwitchStateOnFail
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0xEC5878", Offset = "0xEC5878", VA = "0xEC5878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000391")]
		public TutorialState StateOnConditionFailed
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xEC5880", Offset = "0xEC5880", VA = "0xEC5880")]
			get
			{
				return default(TutorialState);
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xEC64B8", Offset = "0xEC64B8", VA = "0xEC64B8")]
		public TutorialCondition()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xEC4EE4", Offset = "0xEC4EE4", VA = "0xEC4EE4")]
		public bool IsMet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xEC64CC", Offset = "0xEC64CC", VA = "0xEC64CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200036C")]
	public class TutorialHighlighter : MonoBehaviour
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Interactable m_interactable;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected TutorialState m_activeState;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected GameObject m_attentionGrabber;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_tutorialVoiceOverCompletedEventToken;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xEC5998", Offset = "0xEC5998", VA = "0xEC5998")]
		public TutorialHighlighter()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xEC6788", Offset = "0xEC6788", VA = "0xEC6788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xEC688C", Offset = "0xEC688C", VA = "0xEC688C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xEC6958", Offset = "0xEC6958", VA = "0xEC6958")]
		private void OnInteract()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xEC6A98", Offset = "0xEC6A98", VA = "0xEC6A98")]
		private void OnVoiceOverCompleted(Events.TutorialVoiceOverCompleted eventData)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class TutorialInteractionLocker : MonoBehaviour
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_playerControlSpawnedEventToken;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_tutorialProgressedEventToken;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_tutorialVoiceOverCompletedEventToken;

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xEC6C48", Offset = "0xEC6C48", VA = "0xEC6C48")]
		public TutorialInteractionLocker()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xEC6C50", Offset = "0xEC6C50", VA = "0xEC6C50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xEC6DB4", Offset = "0xEC6DB4", VA = "0xEC6DB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xEC6E5C", Offset = "0xEC6E5C", VA = "0xEC6E5C")]
		private void OnTutorialProgressed(Events.TutorialProgressedEvent eventData)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xEC6F5C", Offset = "0xEC6F5C", VA = "0xEC6F5C")]
		private void OnVoiceOverCompleted(Events.TutorialVoiceOverCompleted eventData)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xEC6F64", Offset = "0xEC6F64", VA = "0xEC6F64")]
		private void OnPlayerSpawned(Events.PlayerControlSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xEC6E64", Offset = "0xEC6E64", VA = "0xEC6E64")]
		private void LockInteractions(bool locked)
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class TutorialManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200036F")]
		public class TutorialProgressReactor
		{
			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialState[] m_activateOnState;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_gameObject;

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xEC7458", Offset = "0xEC7458", VA = "0xEC7458")]
			public TutorialProgressReactor()
			{
			}
		}

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialProgressReactor[] m_toturialProgressReactors;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_tutorialProgressedEventToken;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_tutorialVoiceOverCompletedEventToken;

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xEC6F94", Offset = "0xEC6F94", VA = "0xEC6F94")]
		public TutorialManager()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xEC6F9C", Offset = "0xEC6F9C", VA = "0xEC6F9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xEC70AC", Offset = "0xEC70AC", VA = "0xEC70AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xEC713C", Offset = "0xEC713C", VA = "0xEC713C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xEC7140", Offset = "0xEC7140", VA = "0xEC7140")]
		private void TryActivateReactors()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xEC7274", Offset = "0xEC7274", VA = "0xEC7274")]
		private void OnTutorialProgressed(Events.TutorialProgressedEvent eventData)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xEC736C", Offset = "0xEC736C", VA = "0xEC736C")]
		private void OnVoiceOverCompleted(Events.TutorialVoiceOverCompleted eventData)
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class TutorialSoundManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000371")]
		public class TutorialSound
		{
			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialState m_activateOnState;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] m_tutorialAudioClips;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip[] m_reminderAudioClips;

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xEC8D28", Offset = "0xEC8D28", VA = "0xEC8D28")]
			public TutorialSound()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000372")]
		public class PostTutorialSound
		{
			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PostTutorialTriggerType m_activateOnState;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] m_audioClips;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_pickRandom;

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xEC8D20", Offset = "0xEC8D20", VA = "0xEC8D20")]
			public PostTutorialSound()
			{
			}
		}

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F99C", Offset = "0xC8F99C")]
		private sealed class <SendVoiceOverCompletedEvent>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TutorialState state;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000637")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C3D")]
				[Address(RVA = "0xEC8C98", Offset = "0xEC8C98", VA = "0xEC8C98", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000638")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C3E")]
				[Address(RVA = "0xEC8CA0", Offset = "0xEC8CA0", VA = "0xEC8CA0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0xEC7F24", Offset = "0xEC7F24", VA = "0xEC7F24")]
			[DebuggerHidden]
			public <SendVoiceOverCompletedEvent>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0xEC8B54", Offset = "0xEC8B54", VA = "0xEC8B54", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0xEC8CA8", Offset = "0xEC8CA8", VA = "0xEC8CA8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C40")]
			[Address(RVA = "0xEC8CBC", Offset = "0xEC8CBC", VA = "0xEC8CBC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8F9FC", Offset = "0xC8F9FC")]
		private sealed class <PlayTutorialSounds>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal TutorialSound sound;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000639")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C43")]
				[Address(RVA = "0xEC8ACC", Offset = "0xEC8ACC", VA = "0xEC8ACC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C44")]
				[Address(RVA = "0xEC8AD4", Offset = "0xEC8AD4", VA = "0xEC8AD4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C41")]
			[Address(RVA = "0xEC7F2C", Offset = "0xEC7F2C", VA = "0xEC7F2C")]
			[DebuggerHidden]
			public <PlayTutorialSounds>c__Iterator1()
			{
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xEC8918", Offset = "0xEC8918", VA = "0xEC8918", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xEC8ADC", Offset = "0xEC8ADC", VA = "0xEC8ADC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0xEC8AF0", Offset = "0xEC8AF0", VA = "0xEC8AF0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FA5C", Offset = "0xC8FA5C")]
		private sealed class <PlayRandomRemindSound>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForSeconds <wait>__0;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal AudioClip[] audioClips;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x1700063B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C49")]
				[Address(RVA = "0xEC83B8", Offset = "0xEC83B8", VA = "0xEC83B8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C4A")]
				[Address(RVA = "0xEC83C0", Offset = "0xEC83C0", VA = "0xEC83C0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xEC7FC0", Offset = "0xEC7FC0", VA = "0xEC7FC0")]
			[DebuggerHidden]
			public <PlayRandomRemindSound>c__Iterator2()
			{
			}

			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xEC82B0", Offset = "0xEC82B0", VA = "0xEC82B0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xEC83C8", Offset = "0xEC83C8", VA = "0xEC83C8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xEC83DC", Offset = "0xEC83DC", VA = "0xEC83DC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FABC", Offset = "0xC8FABC")]
		private sealed class <PlayPostTutorialSounds>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PostTutorialSound sound;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700063D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C4F")]
				[Address(RVA = "0xEC8228", Offset = "0xEC8228", VA = "0xEC8228", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C50")]
				[Address(RVA = "0xEC8230", Offset = "0xEC8230", VA = "0xEC8230", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xEC7FC8", Offset = "0xEC7FC8", VA = "0xEC7FC8")]
			[DebuggerHidden]
			public <PlayPostTutorialSounds>c__Iterator3()
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xEC80F8", Offset = "0xEC80F8", VA = "0xEC80F8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xEC8238", Offset = "0xEC8238", VA = "0xEC8238", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xEC824C", Offset = "0xEC824C", VA = "0xEC824C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FB1C", Offset = "0xC8FB1C")]
		private sealed class <PlaySoundsSequentually>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int <i>__1;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal IList<AudioClip> clips;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal AudioClip <clip>__2;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x1700063F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C55")]
				[Address(RVA = "0xEC8890", Offset = "0xEC8890", VA = "0xEC8890", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000640")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C56")]
				[Address(RVA = "0xEC8898", Offset = "0xEC8898", VA = "0xEC8898", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xEC805C", Offset = "0xEC805C", VA = "0xEC805C")]
			[DebuggerHidden]
			public <PlaySoundsSequentually>c__Iterator4()
			{
			}

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xEC86BC", Offset = "0xEC86BC", VA = "0xEC86BC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xEC88A0", Offset = "0xEC88A0", VA = "0xEC88A0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xEC88B4", Offset = "0xEC88B4", VA = "0xEC88B4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FB7C", Offset = "0xC8FB7C")]
		private sealed class <PlaySound>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AudioClip clip;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TutorialSoundManager $this;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000641")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C5B")]
				[Address(RVA = "0xEC8634", Offset = "0xEC8634", VA = "0xEC8634", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000642")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C5C")]
				[Address(RVA = "0xEC863C", Offset = "0xEC863C", VA = "0xEC863C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xEC80F0", Offset = "0xEC80F0", VA = "0xEC80F0")]
			[DebuggerHidden]
			public <PlaySound>c__Iterator5()
			{
			}

			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xEC8440", Offset = "0xEC8440", VA = "0xEC8440", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0xEC8644", Offset = "0xEC8644", VA = "0xEC8644", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0xEC8658", Offset = "0xEC8658", VA = "0xEC8658", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialSound[] m_tutorialSounds;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PostTutorialSound[] m_postTutorialSounds;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isSoundsLoaded;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_saveDataLoadedEventToken;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_tutorialProgressedEventToken;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_postTutorialTriggeredEventToken;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x40014CA")]
		private const float ReminderDelayTime = 30f;

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xEC7460", Offset = "0xEC7460", VA = "0xEC7460")]
		public TutorialSoundManager()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xEC7468", Offset = "0xEC7468", VA = "0xEC7468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xEC762C", Offset = "0xEC762C", VA = "0xEC762C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xEC76EC", Offset = "0xEC76EC", VA = "0xEC76EC")]
		private void OnSaveDataLoaded(Events.GameSaveDataLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xEC7B44", Offset = "0xEC7B44", VA = "0xEC7B44")]
		private void OnTutorialProgressed(Events.TutorialProgressedEvent eventData)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xEC7D98", Offset = "0xEC7D98", VA = "0xEC7D98")]
		private void OnPostTutorialTriggered(Events.PostTutorialTriggeredEvent eventData)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xEC7EFC", Offset = "0xEC7EFC", VA = "0xEC7EFC")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xEC7D0C", Offset = "0xEC7D0C", VA = "0xEC7D0C")]
		[DebuggerHidden]
		private IEnumerator SendVoiceOverCompletedEvent(TutorialState state)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xEC7C28", Offset = "0xEC7C28", VA = "0xEC7C28")]
		private void StopPlayingSound()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xEC7C80", Offset = "0xEC7C80", VA = "0xEC7C80")]
		[DebuggerHidden]
		private IEnumerator PlayTutorialSounds(TutorialSound sound)
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xEC7F34", Offset = "0xEC7F34", VA = "0xEC7F34")]
		[DebuggerHidden]
		private IEnumerator PlayRandomRemindSound(AudioClip[] audioClips)
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xEC7E70", Offset = "0xEC7E70", VA = "0xEC7E70")]
		[DebuggerHidden]
		private IEnumerator PlayPostTutorialSounds(PostTutorialSound sound)
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xEC7FD0", Offset = "0xEC7FD0", VA = "0xEC7FD0")]
		[DebuggerHidden]
		private IEnumerator PlaySoundsSequentually(IList<AudioClip> clips)
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xEC8064", Offset = "0xEC8064", VA = "0xEC8064")]
		[DebuggerHidden]
		private IEnumerator PlaySound(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xEC7954", Offset = "0xEC7954", VA = "0xEC7954")]
		private void LoadAudio()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xEC7760", Offset = "0xEC7760", VA = "0xEC7760")]
		private void UnloadAudio()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class TutorialSubtitleManager : MonoBehaviour
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FBDC", Offset = "0xC8FBDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8FBDC", Offset = "0xC8FBDC")]
		private static bool <AreSubtitlesCurrentlyDisplayed>k__BackingField;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_background;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_enabled;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_fontRatio;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_widthRatio;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_backgroundRatio;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_startAlpha;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TMP_Text m_text;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LayerMask m_hitMask;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_tutorialVoiceOverClipStartedEventToken;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_tutorialVoiceOverClipCompletedEventToken;

		[Token(Token = "0x40014DF")]
		private const float ForwardOffset = 4f;

		[Token(Token = "0x40014E0")]
		private const float LerpSpeed = 0.5f;

		[Token(Token = "0x40014E1")]
		private const float OutlineWidth = 0.15f;

		[Token(Token = "0x40014E2")]
		private const float CameraForwardScale = 0.1f;

		[Token(Token = "0x17000392")]
		public static bool AreSubtitlesCurrentlyDisplayed
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xEC8D38", Offset = "0xEC8D38", VA = "0xEC8D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FC38", Offset = "0xC8FC38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xEC8D88", Offset = "0xEC8D88", VA = "0xEC8D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FC48", Offset = "0xC8FC48")]
			private set
			{
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xEC8D30", Offset = "0xEC8D30", VA = "0xEC8D30")]
		public TutorialSubtitleManager()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xEC8DE0", Offset = "0xEC8DE0", VA = "0xEC8DE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xEC8EF0", Offset = "0xEC8EF0", VA = "0xEC8EF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xEC8FBC", Offset = "0xEC8FBC", VA = "0xEC8FBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xEC90C4", Offset = "0xEC90C4", VA = "0xEC90C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xEC93C0", Offset = "0xEC93C0", VA = "0xEC93C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xEC9C14", Offset = "0xEC9C14", VA = "0xEC9C14")]
		private void OnTutorialVoiceOverClipStarted(Events.TutorialVoiceOverClipStartedEvent eventData)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xEC9C5C", Offset = "0xEC9C5C", VA = "0xEC9C5C")]
		private void OnTutorialVoiceOverClipCompleted(Events.TutorialVoiceOverClipCompletedEvent eventData)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xEC2DD8", Offset = "0xEC2DD8", VA = "0xEC2DD8")]
		public void ShowSubtitle(string term)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xEC31E0", Offset = "0xEC31E0", VA = "0xEC31E0")]
		public void HideSubtitle()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x2000374")]
	public class UI_PlayerProfile : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_rating;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_ratingTitle;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_ratingLock;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_matchesPlayed;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UI_ExpHandler m_expHandler;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_winOfTheDayCheckmark;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_matchOfTheDayCheckmark;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizationParamsManager m_dustParamsManager;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_virtualCurrencyChangedEventToken;

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xEC9C60", Offset = "0xEC9C60", VA = "0xEC9C60")]
		public UI_PlayerProfile()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xEC9C68", Offset = "0xEC9C68", VA = "0xEC9C68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xECA53C", Offset = "0xECA53C", VA = "0xECA53C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xEC9DF0", Offset = "0xEC9DF0", VA = "0xEC9DF0")]
		private void UpdateRating()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xECA16C", Offset = "0xECA16C", VA = "0xECA16C")]
		private void UpdateMatchesPlayed()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xECA2BC", Offset = "0xECA2BC", VA = "0xECA2BC")]
		private void UpdateDailies()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xECA5B4", Offset = "0xECA5B4", VA = "0xECA5B4")]
		private void OnVirtualCurrencyChanged(Events.VirtualCurrencyChanged eventData)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xECA4B4", Offset = "0xECA4B4", VA = "0xECA4B4")]
		private void SetDustCount(int value)
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class VanityWandHandler : MonoBehaviour
	{
		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FCE8", Offset = "0xC8FCE8")]
		private sealed class <CanGetWand>c__AnonStorey0
		{
			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WandType type;

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0xECAB64", Offset = "0xECAB64", VA = "0xECAB64")]
			public <CanGetWand>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xECABA8", Offset = "0xECABA8", VA = "0xECABA8")]
			internal bool <>m__0(Renderer wand)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Renderer> m_wands;

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xECA5E4", Offset = "0xECA5E4", VA = "0xECA5E4")]
		public VanityWandHandler()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xECA654", Offset = "0xECA654", VA = "0xECA654")]
		public List<Renderer> GetWands()
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xECA6BC", Offset = "0xECA6BC", VA = "0xECA6BC")]
		private void SpawnWands()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xECA9DC", Offset = "0xECA9DC", VA = "0xECA9DC")]
		public bool CanGetWand(out Renderer wandRenderer, WandType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xECAB6C", Offset = "0xECAB6C", VA = "0xECAB6C")]
		public void SetWandSelectionActive(bool enable)
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Workshop.WandStation
{
	[Token(Token = "0x2000376")]
	public class WandPropertyUI : MonoBehaviour
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize[] m_localizeComponents;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationParamsManager[] m_localizationParamsComponents;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WandProperty[] m_cachedProperties;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_wandStationWandSelectedEventToken;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_wandTypeChangedEventToken;

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xE6B934", Offset = "0xE6B934", VA = "0xE6B934")]
		public WandPropertyUI()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xE6B9AC", Offset = "0xE6B9AC", VA = "0xE6B9AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xE6BABC", Offset = "0xE6BABC", VA = "0xE6BABC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xE6BB4C", Offset = "0xE6BB4C", VA = "0xE6BB4C")]
		private void OnWandStationWandSelected(Events.WandStationWandSelectedEvent eventData)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xE6BE88", Offset = "0xE6BE88", VA = "0xE6BE88")]
		private void OnWandTypeChanged(Events.WandTypeChangedEvent eventData)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xE6BB94", Offset = "0xE6BB94", VA = "0xE6BB94")]
		private void UpdateWandProperties(WandType wandType)
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop.WandStation
{
	[Token(Token = "0x2000377")]
	public class WandStation : MonoBehaviour, IWorkshopTileListener
	{
		[Token(Token = "0x40014F2")]
		private const int WandsPerPage = 4;

		[Token(Token = "0x40014F3")]
		private const int NumberOfPages = 5;

		[Token(Token = "0x40014F4")]
		private const int LastPageIndex = 4;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WandStationProjector m_projector;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandVfxHandler m_unlockVfxHandler;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WandStationWand[] m_wands;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WandStationWandHolder[] m_wandHolders;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WandStationButton[] m_wandStationButtons;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WandStationScrollingNumberManager m_scrollingNumberManager;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentPage;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_interactionLocked;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WandStationWand m_selectedWand;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<WandStationWand>[] m_pages;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_wandStationWandSelectedEventToken;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FD78", Offset = "0xC8FD78")]
		private static Func<WandStationWandHolder, bool> <>f__am$cache0;

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xECACA4", Offset = "0xECACA4", VA = "0xECACA4")]
		public WandStation()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xECAD34", Offset = "0xECAD34", VA = "0xECAD34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xECADF0", Offset = "0xECADF0", VA = "0xECADF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xECAE68", Offset = "0xECAE68", VA = "0xECAE68")]
		private void OnWandStationWandSelected(Events.WandStationWandSelectedEvent eventData)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xECAE98", Offset = "0xECAE98", VA = "0xECAE98")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xECAF0C", Offset = "0xECAF0C", VA = "0xECAF0C")]
		private void CreatePages()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xECB010", Offset = "0xECB010", VA = "0xECB010")]
		private void AddWandsToPages()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xECB3F4", Offset = "0xECB3F4", VA = "0xECB3F4")]
		private void DeactivateWands()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xECB564", Offset = "0xECB564", VA = "0xECB564")]
		private void InitializeFirstPageWands()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xECB67C", Offset = "0xECB67C", VA = "0xECB67C")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xECBBC0", Offset = "0xECBBC0", VA = "0xECBBC0")]
		public void BuyWand()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xECBD68", Offset = "0xECBD68", VA = "0xECBD68")]
		public void ShowPage(int index)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xECC374", Offset = "0xECC374", VA = "0xECC374", Slot = "4")]
		public void ToggleInteractionActive(bool active)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xECC694", Offset = "0xECC694", VA = "0xECC694", Slot = "5")]
		public void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xECC85C", Offset = "0xECC85C", VA = "0xECC85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FD88", Offset = "0xC8FD88")]
		private static bool <ShowPage>m__0(WandStationWandHolder holder)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000378")]
	public class WandStationButton : Interactable
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_index;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material[] m_materials;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isSelected;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WandStation m_wandStation;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_wandStationPageChangedEventToken;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FDC8", Offset = "0xC8FDC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC8FDC8", Offset = "0xC8FDC8")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x17000393")]
		public bool IsEnabled
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xECC5AC", Offset = "0xECC5AC", VA = "0xECC5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FE04", Offset = "0xC8FE04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xECC88C", Offset = "0xECC88C", VA = "0xECC88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FE14", Offset = "0xC8FE14")]
			private set
			{
			}
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xECC884", Offset = "0xECC884", VA = "0xECC884")]
		public WandStationButton()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xECC898", Offset = "0xECC898", VA = "0xECC898")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xECB978", Offset = "0xECB978", VA = "0xECB978")]
		public void Init(int pageCount, WandStation wandStation)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xECC998", Offset = "0xECC998", VA = "0xECC998", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xECCB04", Offset = "0xECCB04", VA = "0xECCB04", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xECCB58", Offset = "0xECCB58", VA = "0xECCB58", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xECCB94", Offset = "0xECCB94", VA = "0xECCB94")]
		private void OnWandStationPageChanged(Events.WandStationPageChangedEvent eventData)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xECCAA0", Offset = "0xECCAA0", VA = "0xECCAA0")]
		private void ChangeMaterial(bool isHighlighted)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xECC920", Offset = "0xECC920", VA = "0xECC920")]
		private void SetDisabled()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class WandStationPageArrow : MonoBehaviour
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_distanceBetweenPages;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_wandStationPageChangedEventToken;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3? m_startPosition;

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xECCBDC", Offset = "0xECCBDC", VA = "0xECCBDC")]
		public WandStationPageArrow()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xECCBE4", Offset = "0xECCBE4", VA = "0xECCBE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xECCC70", Offset = "0xECCC70", VA = "0xECCC70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xECCD2C", Offset = "0xECCD2C", VA = "0xECCD2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xECCDA4", Offset = "0xECCDA4", VA = "0xECCDA4")]
		private void OnWandStationPageChanged(Events.WandStationPageChangedEvent eventData)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xECCDD4", Offset = "0xECCDD4", VA = "0xECCDD4")]
		private void SetPage(int page)
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class WandStationProjector : MonoBehaviour
	{
		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8FE34", Offset = "0xC8FE34")]
		[SerializeField]
		private GameObject m_wandSelected;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_wandNotSelected;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_costParent;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC8FEA0", Offset = "0xC8FEA0")]
		[SerializeField]
		private Localize m_title;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize m_description;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_cost;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WandStationWorkshopButton m_unlockButton;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WandStationWorkshopButton[] m_equipButtons;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WandType m_selectedWandType;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_wandStationWandSelectedEventToken;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_wandPurchasedEventToken;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_wandTypeChangedEventToken;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_wandStationPageChangedEventToken;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventToken m_loadoutChangedEventToken;

		[Token(Token = "0x17000394")]
		private bool IsActive
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xECCF90", Offset = "0xECCF90", VA = "0xECCF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FF2C", Offset = "0xC8FF2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xECCF30", Offset = "0xECCF30", VA = "0xECCF30")]
		public WandStationProjector()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xECCFBC", Offset = "0xECCFBC", VA = "0xECCFBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xECD1FC", Offset = "0xECD1FC", VA = "0xECD1FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xECD2D4", Offset = "0xECD2D4", VA = "0xECD2D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xECC5B4", Offset = "0xECC5B4", VA = "0xECC5B4")]
		public void DisableScreen()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xECD2D8", Offset = "0xECD2D8", VA = "0xECD2D8")]
		private void OnWandStationPageChanged(Events.WandStationPageChangedEvent eventdata)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xECD328", Offset = "0xECD328", VA = "0xECD328")]
		private void OnWandTypeChanged(Events.WandTypeChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xECD410", Offset = "0xECD410", VA = "0xECD410")]
		private void OnLoadoutChanged(Events.WandLoadoutSwitchedEvent eventData)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xECD788", Offset = "0xECD788", VA = "0xECD788")]
		private void OnWandPurchased(Events.WandPurchasedEvent eventData)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xECD7B8", Offset = "0xECD7B8", VA = "0xECD7B8")]
		private void OnWandStationWandSelected(Events.WandStationWandSelectedEvent eventData)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xECD374", Offset = "0xECD374", VA = "0xECD374")]
		private void EquipWand(WandType wandType, WandHand wandHand, bool updateScreen)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xECD45C", Offset = "0xECD45C", VA = "0xECD45C")]
		private void UpdateScreen(WandType wandType)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xECD7F4", Offset = "0xECD7F4", VA = "0xECD7F4")]
		private void ShowEquippedScreen(WandType wandType)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xECD9F0", Offset = "0xECD9F0", VA = "0xECD9F0")]
		private void ShowUnlockedScreen(WandType wandType)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xECDB94", Offset = "0xECDB94", VA = "0xECDB94")]
		private void ShowSpecialScreen(WandType wandType)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xECDC30", Offset = "0xECDC30", VA = "0xECDC30")]
		private void ShowLockedScreen(WandType wandType)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xECDD78", Offset = "0xECDD78", VA = "0xECDD78")]
		private void DisableEquipButtons()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class WandStationScrollingNumberManager : ScrollingNumberManager
	{
		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC8FF9C", Offset = "0xC8FF9C")]
		private sealed class <AwaitUnlockEffect>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WandStationScrollingNumberManager $this;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000643")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C63")]
				[Address(RVA = "0xECE4C0", Offset = "0xECE4C0", VA = "0xECE4C0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000644")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C64")]
				[Address(RVA = "0xECE4C8", Offset = "0xECE4C8", VA = "0xECE4C8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xECE084", Offset = "0xECE084", VA = "0xECE084")]
			[DebuggerHidden]
			public <AwaitUnlockEffect>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xECE38C", Offset = "0xECE38C", VA = "0xECE38C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xECE4D0", Offset = "0xECE4D0", VA = "0xECE4D0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xECE4E4", Offset = "0xECE4E4", VA = "0xECE4E4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC8FF3C", Offset = "0xC8FF3C")]
		private float m_timeMultiplier;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_unlockCoroutine;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_wandPurchasedEventToken;

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xECDE24", Offset = "0xECDE24", VA = "0xECDE24")]
		public WandStationScrollingNumberManager()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xECDE34", Offset = "0xECDE34", VA = "0xECDE34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xECDF50", Offset = "0xECDF50", VA = "0xECDF50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xECDFC8", Offset = "0xECDFC8", VA = "0xECDFC8")]
		private void OnWandPurchased(Events.WandPurchasedEvent eventData)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xECE018", Offset = "0xECE018", VA = "0xECE018")]
		[DebuggerHidden]
		private IEnumerator AwaitUnlockEffect()
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xECE08C", Offset = "0xECE08C", VA = "0xECE08C")]
		private void ScrollNumbers(int number)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xECE22C", Offset = "0xECE22C", VA = "0xECE22C")]
		private void OnScrollingComplete()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xECE23C", Offset = "0xECE23C", VA = "0xECE23C", Slot = "4")]
		protected override void SetSfxActive(bool active)
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class WandStationWand : VanityUnlockable, IDragObject
	{
		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC901DC", Offset = "0xC901DC")]
		private sealed class <PlayUnlockVfx>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WandVfxHandler vfxHandler;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal WandStationWand $this;

			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000645")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C69")]
				[Address(RVA = "0xED07BC", Offset = "0xED07BC", VA = "0xED07BC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000646")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C6A")]
				[Address(RVA = "0xED07C4", Offset = "0xED07C4", VA = "0xED07C4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xECF314", Offset = "0xECF314", VA = "0xECF314")]
			[DebuggerHidden]
			public <PlayUnlockVfx>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xED00DC", Offset = "0xED00DC", VA = "0xED00DC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xED07CC", Offset = "0xED07CC", VA = "0xED07CC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xED07E0", Offset = "0xED07E0", VA = "0xED07E0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private WandType m_wandType;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform m_middle;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_specialFX;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_offset;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 m_targetPoint;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_displayRotation;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_isMoving;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool m_isRotating;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool m_isSelected;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private EventToken m_wandStationWandSelectedEventToken;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private EventToken m_wandStationPageChangedEventToken;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9003C", Offset = "0xC9003C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9003C", Offset = "0xC9003C")]
		private bool <IsBeingDragged>k__BackingField;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90078", Offset = "0xC90078")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC90078", Offset = "0xC90078")]
		private float <DragTime>k__BackingField;

		[Token(Token = "0x17000395")]
		protected override bool IsHighlightToggleActive
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xECE5A8", Offset = "0xECE5A8", VA = "0xECE5A8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9012C", Offset = "0xC9012C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000396")]
		public Transform Middle
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xECE5D0", Offset = "0xECE5D0", VA = "0xECE5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9013C", Offset = "0xC9013C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public WandType WandType
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xECB714", Offset = "0xECB714", VA = "0xECB714")]
			get
			{
				return default(WandType);
			}
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xECE5D8", Offset = "0xECE5D8", VA = "0xECE5D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xECE5C8", Offset = "0xECE5C8", VA = "0xECE5C8", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9014C", Offset = "0xC9014C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xECE5E0", Offset = "0xECE5E0", VA = "0xECE5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9015C", Offset = "0xC9015C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public bool IsDraggable
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xECE5EC", Offset = "0xECE5EC", VA = "0xECE5EC", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9016C", Offset = "0xC9016C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039A")]
		public bool IsSnappable
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xECE60C", Offset = "0xECE60C", VA = "0xECE60C", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9017C", Offset = "0xC9017C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039B")]
		public bool ShouldRaycastToDragPlane
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xECE614", Offset = "0xECE614", VA = "0xECE614", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9018C", Offset = "0xC9018C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039C")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xECE61C", Offset = "0xECE61C", VA = "0xECE61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9019C", Offset = "0xC9019C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039D")]
		public float DragTime
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xECE678", Offset = "0xECE678", VA = "0xECE678", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC901AC", Offset = "0xC901AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xECE680", Offset = "0xECE680", VA = "0xECE680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC901BC", Offset = "0xC901BC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event DragBeginDelegate OnDragBegin
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xECE688", Offset = "0xECE688", VA = "0xECE688", Slot = "15")]
			add
			{
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xECE770", Offset = "0xECE770", VA = "0xECE770", Slot = "16")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event DragEndDelegate OnDragEnd
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xECE858", Offset = "0xECE858", VA = "0xECE858", Slot = "17")]
			add
			{
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xECE940", Offset = "0xECE940", VA = "0xECE940", Slot = "18")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xECE548", Offset = "0xECE548", VA = "0xECE548")]
		public WandStationWand()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xECEA28", Offset = "0xECEA28", VA = "0xECEA28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xECEB38", Offset = "0xECEB38", VA = "0xECEB38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xECEBD4", Offset = "0xECEBD4", VA = "0xECEBD4", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xECEDFC", Offset = "0xECEDFC", VA = "0xECEDFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xECB7E4", Offset = "0xECB7E4", VA = "0xECB7E4")]
		public void UpdateStartTransform()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xECF208", Offset = "0xECF208", VA = "0xECF208", Slot = "14")]
		public override void Unlock(GameObject vfx)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xECF288", Offset = "0xECF288", VA = "0xECF288")]
		[DebuggerHidden]
		private IEnumerator PlayUnlockVfx(WandVfxHandler vfxHandler)
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xECF31C", Offset = "0xECF31C", VA = "0xECF31C", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xECF51C", Offset = "0xECF51C", VA = "0xECF51C", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xECF570", Offset = "0xECF570", VA = "0xECF570", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xECF640", Offset = "0xECF640", VA = "0xECF640")]
		private void OnWandStationPageChanged(Events.WandStationPageChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xECF650", Offset = "0xECF650", VA = "0xECF650")]
		private void OnWandStationWandSelected(Events.WandStationWandSelectedEvent eventData)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xECB71C", Offset = "0xECB71C", VA = "0xECB71C")]
		public void SetActive(bool active, bool deactivateWhenDone = false)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xECF700", Offset = "0xECF700", VA = "0xECF700")]
		private void DeactivateGameObject()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xECF738", Offset = "0xECF738", VA = "0xECF738", Slot = "24")]
		public void BeginDrag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xECF9D4", Offset = "0xECF9D4", VA = "0xECF9D4", Slot = "25")]
		public void Drag(Vector3 dragPoint, Vector3 cameraPoint)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xECFBA8", Offset = "0xECFBA8", VA = "0xECFBA8", Slot = "26")]
		public void EndDrag()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xECFCF8", Offset = "0xECFCF8", VA = "0xECFCF8", Slot = "27")]
		public void SnapToObject(ISnapObject snapObject)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xECEE4C", Offset = "0xECEE4C", VA = "0xECEE4C")]
		private void MoveTowardsTarget()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xECF02C", Offset = "0xECF02C", VA = "0xECF02C")]
		private void RotateTowardsTarget()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xECF9B8", Offset = "0xECF9B8", VA = "0xECF9B8")]
		private void MoveAndRotate(Vector3 targetPoint, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xECFFC0", Offset = "0xECFFC0", VA = "0xECFFC0")]
		private void SetMeshRenderersActive(bool active)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class WandStationWandHolder : MonoBehaviour
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_frontWandPosition;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_backWandPosition;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float spinTime;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_fullRotations;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isFrontForward;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WandStationWand m_frontWand;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WandStationWand m_backWand;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9027C", Offset = "0xC9027C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9027C", Offset = "0xC9027C")]
		private bool <IsSpinning>k__BackingField;

		[Token(Token = "0x1700039E")]
		public bool IsSpinning
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xECC36C", Offset = "0xECC36C", VA = "0xECC36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC902B8", Offset = "0xC902B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xED0854", Offset = "0xED0854", VA = "0xED0854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC902C8", Offset = "0xC902C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xED0844", Offset = "0xED0844", VA = "0xED0844")]
		public WandStationWandHolder()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xECB7DC", Offset = "0xECB7DC", VA = "0xECB7DC")]
		public void SetWand(WandStationWand wand)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xECC110", Offset = "0xECC110", VA = "0xECC110")]
		public void SpinBoard(WandStationWand newWandToShow)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xED0860", Offset = "0xED0860", VA = "0xED0860")]
		private void SetWand(WandStationWand wand, bool setFront)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xED0A64", Offset = "0xED0A64", VA = "0xED0A64")]
		private void OnSpinComplete()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class WandVfxHandler : MonoBehaviour
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_wandMeshesParent;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC902E8", Offset = "0xC902E8")]
		private Transform[] m_wandParents;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_activeWandParent;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Transform> m_wandTransforms;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xED0B4C", Offset = "0xED0B4C", VA = "0xED0B4C")]
		public WandVfxHandler()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xED0448", Offset = "0xED0448", VA = "0xED0448")]
		public void AssignCorrectWand(WandType wandType)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xED063C", Offset = "0xED063C", VA = "0xED063C")]
		public void ResetEffect()
		{
		}
	}
}
namespace Assets.Scripts.UI.Workshop
{
	[Token(Token = "0x200037F")]
	public class WorkshopDebugUI : MonoSingleton<WorkshopDebugUI>
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_deviceId;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_accountId;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_debug;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_writeDebugMessageEventToken;

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xED0BD8", Offset = "0xED0BD8", VA = "0xED0BD8")]
		public WorkshopDebugUI()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xED0C28", Offset = "0xED0C28", VA = "0xED0C28", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xED0C78", Offset = "0xED0C78", VA = "0xED0C78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xED0D34", Offset = "0xED0D34", VA = "0xED0D34", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xED0DC0", Offset = "0xED0DC0", VA = "0xED0DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xED0EB8", Offset = "0xED0EB8", VA = "0xED0EB8")]
		private void UpdateDeviceID()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xED1280", Offset = "0xED1280", VA = "0xED1280")]
		private string GetDeviceID()
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xED0FC8", Offset = "0xED0FC8", VA = "0xED0FC8")]
		public void DebugAccountID(string id)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xED1300", Offset = "0xED1300", VA = "0xED1300")]
		private void OnWriteDebugMessageEvent(Events.WriteDebugMessage eventData)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xED1104", Offset = "0xED1104", VA = "0xED1104")]
		private void WriteDebugMessage(string msg)
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class WorkshopStationTileReference : MonoBehaviour
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorkshopTile m_workshopTile;

		[Token(Token = "0x1700039F")]
		public WorkshopTile WorkshopTile
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xED1338", Offset = "0xED1338", VA = "0xED1338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xED1330", Offset = "0xED1330", VA = "0xED1330")]
		public WorkshopStationTileReference()
		{
		}
	}
}
[Token(Token = "0x2000381")]
public class AnimatedTextureUV : MonoBehaviour
{
	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_uvAnimationTileX;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_uvAnimationTileY;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_framesPerSecond;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m_material;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 m_size;

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xEFB644", Offset = "0xEFB644", VA = "0xEFB644")]
	public AnimatedTextureUV()
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xEFB65C", Offset = "0xEFB65C", VA = "0xEFB65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xEFB740", Offset = "0xEFB740", VA = "0xEFB740")]
	private void Update()
	{
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x2000382")]
	public static class ArenaUtils
	{
		[Token(Token = "0x4001544")]
		public const Arena DefaultArena = Arena.AspisPrison;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xEBE3FC", Offset = "0xEBE3FC", VA = "0xEBE3FC")]
		public static bool IsArenaPlayable(Arena arena)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xED1448", Offset = "0xED1448", VA = "0xED1448")]
		public static Arena GetRandomArena(Arena exludeArena = Arena.None, MatchType matchType = MatchType.None)
		{
			return default(Arena);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xED1340", Offset = "0xED1340", VA = "0xED1340")]
		private static IList<Arena> GetPlayableArenas()
		{
			return null;
		}
	}
	[Token(Token = "0x2000383")]
	public class AssetBundleManager
	{
		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC903A4", Offset = "0xC903A4")]
		private sealed class <LoadAndroidBundle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string <path>__0;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string bundleName;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal AssetBundleCreateRequest <bundleLoadRequest>__0;

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal AssetBundle <bundle>__0;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Action<bool> loaded;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal AssetBundleManager $this;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x17000647")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C6F")]
				[Address(RVA = "0xED1FA0", Offset = "0xED1FA0", VA = "0xED1FA0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000648")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C70")]
				[Address(RVA = "0xED1FA8", Offset = "0xED1FA8", VA = "0xED1FA8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xED16B8", Offset = "0xED16B8", VA = "0xED16B8")]
			[DebuggerHidden]
			public <LoadAndroidBundle>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xED1CB8", Offset = "0xED1CB8", VA = "0xED1CB8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xED1FB0", Offset = "0xED1FB0", VA = "0xED1FB0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xED1FC4", Offset = "0xED1FC4", VA = "0xED1FC4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90404", Offset = "0xC90404")]
		private sealed class <LoadPcBundleAsync>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string bundleName;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string <path>__0;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Action<bool> loaded;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal AssetBundleCreateRequest <bundleLoadRequest>__0;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal AssetBundle <bundle>__0;

			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal AssetBundleManager $this;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x17000649")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C75")]
				[Address(RVA = "0xED255C", Offset = "0xED255C", VA = "0xED255C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C76")]
				[Address(RVA = "0xED2564", Offset = "0xED2564", VA = "0xED2564", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xED1760", Offset = "0xED1760", VA = "0xED1760")]
			[DebuggerHidden]
			public <LoadPcBundleAsync>c__Iterator1()
			{
			}

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xED228C", Offset = "0xED228C", VA = "0xED228C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xED256C", Offset = "0xED256C", VA = "0xED256C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xED2580", Offset = "0xED2580", VA = "0xED2580", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90464", Offset = "0xC90464")]
		private sealed class <LoadAssetBundle>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string bundleName;

			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Action<bool> loaded;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal RuntimePlatform $locvar0;

			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal AssetBundleManager $this;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x1700064B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C7B")]
				[Address(RVA = "0xED2204", Offset = "0xED2204", VA = "0xED2204", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C7C")]
				[Address(RVA = "0xED220C", Offset = "0xED220C", VA = "0xED220C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0xED1BCC", Offset = "0xED1BCC", VA = "0xED1BCC")]
			[DebuggerHidden]
			public <LoadAssetBundle>c__Iterator2()
			{
			}

			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0xED2028", Offset = "0xED2028", VA = "0xED2028", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xED2214", Offset = "0xED2214", VA = "0xED2214", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xED2228", Offset = "0xED2228", VA = "0xED2228", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, AssetBundle> m_loadedBundles;

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xED15A8", Offset = "0xED15A8", VA = "0xED15A8")]
		public AssetBundleManager()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xED1618", Offset = "0xED1618", VA = "0xED1618")]
		[DebuggerHidden]
		private IEnumerator LoadAndroidBundle(string bundleName, Action<bool> loaded)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xED16C0", Offset = "0xED16C0", VA = "0xED16C0")]
		[DebuggerHidden]
		private IEnumerator LoadPcBundleAsync(string bundleName, Action<bool> loaded)
		{
			return null;
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xED1768", Offset = "0xED1768", VA = "0xED1768")]
		private void LoadPcBundle(string bundleName, Action<bool> loaded, string platformName = "Windows")
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xED1AEC", Offset = "0xED1AEC", VA = "0xED1AEC")]
		public void LoadAssetBundle(string bundleName, MonoBehaviour host, Action<bool> loaded, bool loadAsync = true)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xED1B30", Offset = "0xED1B30", VA = "0xED1B30")]
		[DebuggerHidden]
		public IEnumerator LoadAssetBundle(string bundleName, Action<bool> loaded, bool loadAsync = true)
		{
			return null;
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xED1BD4", Offset = "0xED1BD4", VA = "0xED1BD4")]
		public bool UnloadAssetBundle(string bundleName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5F")]
		public T LoadAsset<T>(string bundleName, string name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		public AssetBundleRequest LoadAssetAsync<T>(string bundleName, string name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		public T[] LoadAssets<T>(string bundleName) where T : UnityEngine.Object
		{
			return null;
		}
	}
	[Token(Token = "0x2000384")]
	public class BadgeUtils
	{
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xED25E4", Offset = "0xED25E4", VA = "0xED25E4")]
		public BadgeUtils()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xED25EC", Offset = "0xED25EC", VA = "0xED25EC")]
		public static void CheckBadgesEarned(EndState state, Wielder player, Wielder opponent, Action<MatchRewardType> playerAddOn, Action<MatchRewardType> opponentAddOn)
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class BillboardingObject : MonoBehaviour
	{
		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_rotationOffset;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion m_quaternionOffset;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_cameraTransform;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xED2B88", Offset = "0xED2B88", VA = "0xED2B88")]
		public BillboardingObject()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xED2B90", Offset = "0xED2B90", VA = "0xED2B90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xED2C68", Offset = "0xED2C68", VA = "0xED2C68")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public static class BitwiseExtensions
	{
		[Token(Token = "0x6001A67")]
		public static bool ContainsFlag<T>(this Enum e, T flag) where T : struct, IConvertible
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xED2DF4", Offset = "0xED2DF4", VA = "0xED2DF4")]
		public static bool ContainsFlag(this PlatformType e, PlatformTarget flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xED2E00", Offset = "0xED2E00", VA = "0xED2E00")]
		public static bool ContainsFlag(this Level e, Level flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xED159C", Offset = "0xED159C", VA = "0xED159C")]
		public static bool ContainsFlag(this Arena e, Arena flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xEC64C0", Offset = "0xEC64C0", VA = "0xEC64C0")]
		public static bool ContainsFlag(this MatchType e, MatchType flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xED2E0C", Offset = "0xED2E0C", VA = "0xED2E0C")]
		public static bool ContainsFlag(this InputState e, InputState flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xED2E18", Offset = "0xED2E18", VA = "0xED2E18")]
		public static bool ContainsFlag(this EndState e, EndState flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xED2E24", Offset = "0xED2E24", VA = "0xED2E24")]
		public static bool ContainsFlag(this SlotState e, SlotState flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xED2E30", Offset = "0xED2E30", VA = "0xED2E30")]
		public static bool ContainsFlag(this AimInput e, AimInput flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xED2E3C", Offset = "0xED2E3C", VA = "0xED2E3C")]
		public static bool ContainsFlag(this WandInput e, WandInput flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xED2E48", Offset = "0xED2E48", VA = "0xED2E48")]
		public static bool ContainsFlag(this NetworkState e, NetworkState flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xED2E54", Offset = "0xED2E54", VA = "0xED2E54")]
		public static bool ContainsFlag(this RoomCreationReason e, RoomCreationReason flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xED2E60", Offset = "0xED2E60", VA = "0xED2E60")]
		public static bool ContainsFlag(this ConnectionType e, ConnectionType flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xED2E6C", Offset = "0xED2E6C", VA = "0xED2E6C")]
		public static bool ContainsFlag(this ResetBehaviour e, ResetBehaviour flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xED2E78", Offset = "0xED2E78", VA = "0xED2E78")]
		public static bool ContainsFlag(this ControlType e, ControlType flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xED2E84", Offset = "0xED2E84", VA = "0xED2E84")]
		public static bool ContainsFlag(this PoolObjectCreateState e, PoolObjectCreateState flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xED2E90", Offset = "0xED2E90", VA = "0xED2E90")]
		public static int GetArrayIndex(this Enum e)
		{
			return default(int);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xED2F7C", Offset = "0xED2F7C", VA = "0xED2F7C")]
		public static WandHand Opposite(this WandHand wandHand)
		{
			return default(WandHand);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xED2F88", Offset = "0xED2F88", VA = "0xED2F88")]
		public static WandHand ToWandHand(this AimInput aimInput)
		{
			return default(WandHand);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xED2F94", Offset = "0xED2F94", VA = "0xED2F94")]
		public static Arena ToArena(this Level level)
		{
			return default(Arena);
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xED30B0", Offset = "0xED30B0", VA = "0xED30B0")]
		public static bool IsXRNode(this WandHand wandHand, XRNode nodeType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000387")]
	public class ButtonUtils
	{
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xED30D8", Offset = "0xED30D8", VA = "0xED30D8")]
		public ButtonUtils()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xED30E0", Offset = "0xED30E0", VA = "0xED30E0")]
		private static string GetLocalizedString(Option type)
		{
			return null;
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xED316C", Offset = "0xED316C", VA = "0xED316C")]
		private static string GetLocalizedString(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xED31EC", Offset = "0xED31EC", VA = "0xED31EC")]
		private static string GetLocalizedString(string addOn)
		{
			return null;
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xED3254", Offset = "0xED3254", VA = "0xED3254")]
		public static string GetTooltip(Option type, bool enabled)
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xED3404", Offset = "0xED3404", VA = "0xED3404")]
		public static string GetSpriteName(Option type, bool enabled)
		{
			return null;
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xED35A0", Offset = "0xED35A0", VA = "0xED35A0")]
		public static bool GetShouldOptionBeEnabled(Option type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xED3838", Offset = "0xED3838", VA = "0xED3838")]
		public static bool CanToggle(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xED385C", Offset = "0xED385C", VA = "0xED385C")]
		public static bool GetOptionValue(Option type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xED3A84", Offset = "0xED3A84", VA = "0xED3A84")]
		public static void SetOptionValue(Option type, bool enabled)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xED3BF0", Offset = "0xED3BF0", VA = "0xED3BF0")]
		public static WandInput GetNextWandInputValue()
		{
			return default(WandInput);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xED39EC", Offset = "0xED39EC", VA = "0xED39EC")]
		private static bool ToggleMusic(bool enabled)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000388")]
public class ByteConverter
{
	[Token(Token = "0x2000629")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90634", Offset = "0xC90634")]
	private sealed class <GetBytes>c__AnonStorey0
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string bitString;

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x100E2C0", Offset = "0x100E2C0", VA = "0x100E2C0")]
		public <GetBytes>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x100E3A8", Offset = "0x100E3A8", VA = "0x100E3A8")]
		internal byte <>m__0(int pos)
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x100E0D8", Offset = "0x100E0D8", VA = "0x100E0D8")]
	public ByteConverter()
	{
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0x100E0E0", Offset = "0x100E0E0", VA = "0x100E0E0")]
	public static byte[] GetBytes(string bitString)
	{
		return null;
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0x100E2C8", Offset = "0x100E2C8", VA = "0x100E2C8")]
	public static string ToBitString(BitArray bits)
	{
		return null;
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x2000389")]
	[ExecuteInEditMode]
	public class CatmullRomSpline : MonoBehaviour
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_showGizmos;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] controlPointsList;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isLooping;

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xED45DC", Offset = "0xED45DC", VA = "0xED45DC")]
		public CatmullRomSpline()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xED45EC", Offset = "0xED45EC", VA = "0xED45EC")]
		public Queue<Vector3> GetPoints(Transform[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xED4D38", Offset = "0xED4D38", VA = "0xED4D38")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xED4DDC", Offset = "0xED4DDC", VA = "0xED4DDC")]
		private void DisplayCatmullRomSpline(int pos)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xED48C4", Offset = "0xED48C4", VA = "0xED48C4")]
		private int ClampListPos(int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xED4940", Offset = "0xED4940", VA = "0xED4940")]
		private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200038A")]
	public class CloudScriptConverter
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, string> MethodNames;

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xED514C", Offset = "0xED514C", VA = "0xED514C")]
		public CloudScriptConverter()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xED5154", Offset = "0xED5154", VA = "0xED5154")]
		public static string GetMethodName(string fieldName)
		{
			return null;
		}
	}
}
[Token(Token = "0x200038B")]
public static class CollectionExtensions
{
	[Token(Token = "0x6001A94")]
	public static bool Contains<T>(this T[] array, T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A95")]
	public static T GetRandomElement<T>(this IList<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6001A96")]
	public static T GetRandomElement<T>(this IList<T> list, T excludedElement)
	{
		return (T)null;
	}

	[Token(Token = "0x6001A97")]
	public static T GetRandomElement<T>(this T[] array, T excludedElement)
	{
		return (T)null;
	}

	[Token(Token = "0x6001A98")]
	public static T GetRandomElement<T>(this IList<T> list, IEnumerable<T> excludedElements)
	{
		return (T)null;
	}

	[Token(Token = "0x6001A99")]
	public static List<T> GetRandomElements<T>(this IEnumerable<T> list, int amount)
	{
		return null;
	}

	[Token(Token = "0x6001A9A")]
	public static List<T> GetRandomElements<T>(this IEnumerable<T> list, int amount, T excludedElement)
	{
		return null;
	}

	[Token(Token = "0x6001A9B")]
	public static List<T> GetRandomElements<T>(this IEnumerable<T> list, int amount, IEnumerable<T> excludedElements)
	{
		return null;
	}

	[Token(Token = "0x6001A9C")]
	public static KeyValuePair<TK, TV> GetRandomElement<TK, TV>(this IDictionary<TK, TV> dictionary)
	{
		return default(KeyValuePair<TK, TV>);
	}

	[Token(Token = "0x6001A9D")]
	public static List<T> Exclude<T>(this List<T> list, T excludedElement)
	{
		return null;
	}

	[Token(Token = "0x6001A9E")]
	public static List<T> Exclude<T>(this IEnumerable<T> enumerable, T excludedElement)
	{
		return null;
	}

	[Token(Token = "0x6001A9F")]
	public static bool IsEmpty<T>(this IEnumerable<T> list)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA0")]
	public static bool IsNullOrEmpty<T>(this ICollection<T> collection)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA1")]
	public static bool IsNullOrEmpty<T>(this IEnumerable<T> collection)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x1010EC4", Offset = "0x1010EC4", VA = "0x1010EC4")]
	public static bool IsNullOrEmpty(this string text)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA3")]
	public static string ToFormattedString<T>(this IList<T> collection)
	{
		return null;
	}

	[Token(Token = "0x6001AA4")]
	public static string ToFormattedString<T, K>(this IDictionary<T, K> collection)
	{
		return null;
	}

	[Token(Token = "0x6001AA5")]
	public static bool AddRange<T>(this HashSet<T> set, IEnumerable<T> range)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA6")]
	public static void QuickSort<T>(this T[] arr) where T : IComparable
	{
	}

	[Token(Token = "0x6001AA7")]
	public static void QuickSort<T>(this T[] arr, int left, int right) where T : IComparable
	{
	}

	[Token(Token = "0x6001AA8")]
	public static void QuickSort<T1, T2>(this T1[] arr, Func<T1, T2> valueGetter) where T2 : IComparable
	{
	}

	[Token(Token = "0x6001AA9")]
	public static void QuickSort<T1, T2>(this T1[] arr, int left, int right, Func<T1, T2> valueGetter) where T2 : IComparable
	{
	}

	[Token(Token = "0x6001AAA")]
	public static void QuickSortDescending<T>(this T[] arr) where T : IComparable
	{
	}

	[Token(Token = "0x6001AAB")]
	public static void QuickSortDescending<T>(this T[] arr, int left, int right) where T : IComparable
	{
	}

	[Token(Token = "0x6001AAC")]
	public static void QuickSortDescending<T1, T2>(this T1[] arr, Func<T1, T2> valueGetter) where T2 : IComparable
	{
	}

	[Token(Token = "0x6001AAD")]
	public static void QuickSortDescending<T1, T2>(this T1[] arr, int left, int right, Func<T1, T2> valueGetter) where T2 : IComparable
	{
	}

	[Token(Token = "0x6001AAE")]
	private static int QuickSortPartition<T1, T2>(T1[] arr, int left, int right, Func<T1, T2> valueGetter) where T2 : IComparable
	{
		return default(int);
	}

	[Token(Token = "0x6001AAF")]
	private static int QuickSortPartition<T>(T[] arr, int left, int right) where T : IComparable
	{
		return default(int);
	}

	[Token(Token = "0x6001AB0")]
	private static int QuickSortPartitionDescending<T1, T2>(T1[] arr, int left, int right, Func<T1, T2> valueGetter) where T2 : IComparable
	{
		return default(int);
	}

	[Token(Token = "0x6001AB1")]
	private static int QuickSortPartitionDescending<T>(T[] arr, int left, int right) where T : IComparable
	{
		return default(int);
	}

	[Token(Token = "0x6001AB2")]
	public static void Shuffle<T>(this IList<T> arr)
	{
	}

	[Token(Token = "0x6001AB3")]
	public static void Shuffle<T>(this IList<T> arr, int left, int right)
	{
	}

	[Token(Token = "0x6001AB4")]
	public static void Shuffle<T>(this T[] arr)
	{
	}

	[Token(Token = "0x6001AB5")]
	public static void Shuffle<T>(this T[] arr, int left, int right)
	{
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x200038C")]
	public class CustomWaitForSeconds : CustomYieldInstruction
	{
		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_waitTime;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_currentWaitTime;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_lastUpdate;

		[Token(Token = "0x170003A0")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xED577C", Offset = "0xED577C", VA = "0xED577C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xED5740", Offset = "0xED5740", VA = "0xED5740")]
		public CustomWaitForSeconds(float waitTime)
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class EffectUtils
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<EffectType, ParticleAudioEffect> m_effects;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90844", Offset = "0xC90844")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC90844", Offset = "0xC90844")]
		private GameObject[] <LoadedEffects>k__BackingField;

		[Token(Token = "0x170003A1")]
		public GameObject[] LoadedEffects
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xED58C4", Offset = "0xED58C4", VA = "0xED58C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90880", Offset = "0xC90880")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xED58CC", Offset = "0xED58CC", VA = "0xED58CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90890", Offset = "0xC90890")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xED5830", Offset = "0xED5830", VA = "0xED5830")]
		public EffectUtils()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xED58D4", Offset = "0xED58D4", VA = "0xED58D4")]
		public void PreloadEffects()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xED5AF4", Offset = "0xED5AF4", VA = "0xED5AF4")]
		public void DestroyAllEffects()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xED5C94", Offset = "0xED5C94", VA = "0xED5C94")]
		public void SetCameraEffectActive(EffectType type, bool active, Transform cameraTransform)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xED616C", Offset = "0xED616C", VA = "0xED616C")]
		public void SetEffectActive(EffectType type, bool active, Transform parent)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xED5EBC", Offset = "0xED5EBC", VA = "0xED5EBC")]
		private bool CanInstantiateNewEffect(EffectType type, Transform parent)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class ParticleAudioEffect
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject GameObject;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource Audio;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] Particles;

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xED62D4", Offset = "0xED62D4", VA = "0xED62D4")]
		public ParticleAudioEffect(GameObject gameObject, AudioSource audioSource, params ParticleSystem[] particles)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xED5D88", Offset = "0xED5D88", VA = "0xED5D88")]
		public void SetEmittersActive(bool active)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xED5E1C", Offset = "0xED5E1C", VA = "0xED5E1C")]
		public void TrySetAudioActive(bool active)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xED89AC", Offset = "0xED89AC", VA = "0xED89AC")]
		private void SetAudioActive(bool active)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xED8AE8", Offset = "0xED8AE8", VA = "0xED8AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC908B0", Offset = "0xC908B0")]
		private void <SetAudioActive>m__0()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xED8B14", Offset = "0xED8B14", VA = "0xED8B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC908C0", Offset = "0xC908C0")]
		private void <SetAudioActive>m__1()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class EloUtils
	{
		[Token(Token = "0x4001555")]
		private const int SeasonScoreKFactor = 10;

		[Token(Token = "0x170003A2")]
		public static bool ShouldAffectRating
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xED6314", Offset = "0xED6314", VA = "0xED6314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A3")]
		public static bool ShouldAffectCustomEventRating
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xED63AC", Offset = "0xED63AC", VA = "0xED63AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xED6420", Offset = "0xED6420", VA = "0xED6420")]
		public static bool GetRatingDiffTooHigh(int rating, int diff)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xED6450", Offset = "0xED6450", VA = "0xED6450")]
		public static int GetKFactor(int rating)
		{
			return default(int);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xED6474", Offset = "0xED6474", VA = "0xED6474")]
		public static int[] GetSeasonScoreChange(EndState endState, int[] eloRatings)
		{
			return null;
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xED6480", Offset = "0xED6480", VA = "0xED6480")]
		public static int[] GetEloChange(EndState endState, int[] eloRatings, int kFactorP, int kFactorO)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xED66A0", Offset = "0xED66A0", VA = "0xED66A0")]
		public static bool IsObsolete(this Enum @enum)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACD")]
		private static bool HasAttribute<TAttribute>(Enum @enum) where TAttribute : Attribute
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Utils.FinalIK
{
	[Token(Token = "0x2000391")]
	public class CustomJointConstraint : MonoBehaviour
	{
		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_parentJoint;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_childJoint;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_positionLerpStrength;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_rotationLerpStrength;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_childRotationOffset;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_parentRotationOffset;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xED66F4", Offset = "0xED66F4", VA = "0xED66F4")]
		public CustomJointConstraint()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xED66FC", Offset = "0xED66FC", VA = "0xED66FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xED6910", Offset = "0xED6910", VA = "0xED6910")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xED6700", Offset = "0xED6700", VA = "0xED6700")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xED6914", Offset = "0xED6914", VA = "0xED6914")]
		private void ConstrainJoint()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xED6D2C", Offset = "0xED6D2C", VA = "0xED6D2C")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000392")]
	public class CustomScaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_animSpeed;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_animTimeOffest;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_scaleDeltaAnimation;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_startingScale;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_animCurveOutTime;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_animcurveInTime;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_elapsedTime;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xED6D6C", Offset = "0xED6D6C", VA = "0xED6D6C")]
		public CustomScaleAnimation()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xED6D74", Offset = "0xED6D74", VA = "0xED6D74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xED6E90", Offset = "0xED6E90", VA = "0xED6E90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xED6D78", Offset = "0xED6D78", VA = "0xED6D78")]
		private void InitilizeScaler()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xED6E94", Offset = "0xED6E94", VA = "0xED6E94")]
		private void ScaleAnimation()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xED6FE4", Offset = "0xED6FE4", VA = "0xED6FE4")]
		private void ResetAnimationLoop()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class PostUpdateLimits : MonoBehaviour
	{
		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRIK m_vrIK;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RotationLimit[] m_limits;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xED7004", Offset = "0xED7004", VA = "0xED7004")]
		public PostUpdateLimits()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xED700C", Offset = "0xED700C", VA = "0xED700C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xED7070", Offset = "0xED7070", VA = "0xED7070")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xED70EC", Offset = "0xED70EC", VA = "0xED70EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xED7214", Offset = "0xED7214", VA = "0xED7214")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xED733C", Offset = "0xED733C", VA = "0xED733C")]
		private void OnIKPostUpdate()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class VRIKDynamicHeight : MonoBehaviour
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC90980", Offset = "0xC90980")]
		[SerializeField]
		private float m_defaultHeadHeight;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_crouchHeadHeight;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_heightWeightCurve;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC909EC", Offset = "0xC909EC")]
		[SerializeField]
		private Vector2 m_feetWidthRange;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC90A38", Offset = "0xC90A38")]
		[SerializeField]
		private Vector2 m_leftArmSwivelRange;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 m_rightArmSwivelRange;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 m_leftLegSwivelRange;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 m_rightLegSwivelRange;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC90AB4", Offset = "0xC90AB4")]
		[SerializeField]
		private Vector2 m_comAngleRange;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRIK m_vrikSolver;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_headJoint;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_rootJoint;

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xED73B8", Offset = "0xED73B8", VA = "0xED73B8")]
		public VRIKDynamicHeight()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xED73C0", Offset = "0xED73C0", VA = "0xED73C0")]
		public void SetArmSwivelRange(Vector2 leftArm, Vector2 rightArm)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xED73CC", Offset = "0xED73CC", VA = "0xED73CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xED7484", Offset = "0xED7484", VA = "0xED7484")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xED7428", Offset = "0xED7428", VA = "0xED7428")]
		private void InitilizeVRIKController(VRIK VRIKSolver)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xED752C", Offset = "0xED752C", VA = "0xED752C")]
		private void FeetWidthHandler()
		{
		}
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x2000395")]
	public class FontUtils
	{
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string sm_path;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string sm_westernStandard;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string sm_chineseStandard;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string sm_japaneseStandard;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string sm_koreanStandard;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string sm_hindiStandard;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xED7794", Offset = "0xED7794", VA = "0xED7794")]
		public FontUtils()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xED779C", Offset = "0xED779C", VA = "0xED779C")]
		public static Font GetStandardFont(Language language)
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public static class GameObjectLoader
	{
		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90B00", Offset = "0xC90B00")]
		private sealed class <GetGameObjectAsync>c__AnonStorey0
		{
			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action<GameObject> onLoaded;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal AssetBundleRequest request;

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xED7CF0", Offset = "0xED7CF0", VA = "0xED7CF0")]
			public <GetGameObjectAsync>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xED7CF8", Offset = "0xED7CF8", VA = "0xED7CF8")]
			internal void <>m__0(AsyncOperation req)
			{
			}
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xED59F0", Offset = "0xED59F0", VA = "0xED59F0")]
		public static GameObject GetGameObject(AssetBundleType type, string path)
		{
			return null;
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xED7B78", Offset = "0xED7B78", VA = "0xED7B78")]
		public static void GetGameObjectAsync(AssetBundleType type, string path, Action<GameObject> onLoaded)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class GameObjectPool : ObjectPool<GameObject>
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_prefab;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_poolContainerObject;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xED7D90", Offset = "0xED7D90", VA = "0xED7D90")]
		public GameObjectPool(GameObject prefab, int capacity)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xED7D98", Offset = "0xED7D98", VA = "0xED7D98")]
		public GameObjectPool(GameObject prefab, int capacity, int preAllocateAmount)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xED7E60", Offset = "0xED7E60", VA = "0xED7E60")]
		public GameObjectPool(GameObject prefab, int capacity, int preAllocateAmount, GameObject parent)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xED7EF0", Offset = "0xED7EF0", VA = "0xED7EF0", Slot = "8")]
		protected override GameObject AllocateObject()
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xED8008", Offset = "0xED8008", VA = "0xED8008", Slot = "6")]
		public override GameObject Borrow(bool forceCreate = false)
		{
			return null;
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xED808C", Offset = "0xED808C", VA = "0xED808C", Slot = "7")]
		public override void Return(GameObject obj)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xED8104", Offset = "0xED8104", VA = "0xED8104", Slot = "9")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xED81B8", Offset = "0xED81B8", VA = "0xED81B8", Slot = "10")]
		protected override void OnBorrowed(GameObject borrowedObject)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xED8200", Offset = "0xED8200", VA = "0xED8200", Slot = "11")]
		protected override void OnReturned(GameObject returnedObject)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xED8268", Offset = "0xED8268", VA = "0xED8268", Slot = "12")]
		protected override void OnUnableToReturn(GameObject returnedObject)
		{
		}
	}
	[Token(Token = "0x2000398")]
	public interface IObjectPool
	{
		[Token(Token = "0x170003A4")]
		bool IsPoolEmpty
		{
			[Token(Token = "0x6001AF5")]
			get;
		}

		[Token(Token = "0x170003A5")]
		bool IsPoolFull
		{
			[Token(Token = "0x6001AF6")]
			get;
		}
	}
	[Token(Token = "0x2000399")]
	public class ItemMaterialHandler : MonoBehaviour
	{
		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC90B10", Offset = "0xC90B10")]
		[SerializeField]
		private Material[] m_itemMaterials;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material[] m_highlightedItemMaterials;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_assetBundlesLoadedToken;

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xED8310", Offset = "0xED8310", VA = "0xED8310")]
		public ItemMaterialHandler()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xED8318", Offset = "0xED8318", VA = "0xED8318")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xED8448", Offset = "0xED8448", VA = "0xED8448")]
		private void OnAssetBundlesLoaded(Events.AssetBundlesLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xED8734", Offset = "0xED8734", VA = "0xED8734")]
		public void AssignRenderers(Renderer[] renderers)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xED8574", Offset = "0xED8574", VA = "0xED8574")]
		public void AssignMaterial(ItemMaterialType type, bool highlighted)
		{
		}
	}
}
namespace Assets.Scripts.Utils.Json
{
	[Token(Token = "0x200039A")]
	public class PlayFabJsonObjectConverter : JsonConverter
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Type m_ConversionType;

		[Token(Token = "0x170003A6")]
		public override bool CanRead
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xED87C4", Offset = "0xED87C4", VA = "0xED87C4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90B7C", Offset = "0xC90B7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xED873C", Offset = "0xED873C", VA = "0xED873C")]
		public PlayFabJsonObjectConverter()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xED87CC", Offset = "0xED87CC", VA = "0xED87CC", Slot = "4")]
		public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xED88C8", Offset = "0xED88C8", VA = "0xED88C8", Slot = "5")]
		public override object ReadJson(Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xED892C", Offset = "0xED892C", VA = "0xED892C", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x200039B")]
public static class JsonExtensions
{
	[Token(Token = "0x6001B01")]
	public static string ToJson<T>(this T t)
	{
		return null;
	}
}
[Token(Token = "0x200039C")]
public class MathUtils
{
	[Token(Token = "0x6001B02")]
	[Address(RVA = "0xF68D60", Offset = "0xF68D60", VA = "0xF68D60")]
	public MathUtils()
	{
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0xF68D68", Offset = "0xF68D68", VA = "0xF68D68")]
	public static Vector3 GetMidPoint(Transform startTf, Transform endTf)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0xF68DE4", Offset = "0xF68DE4", VA = "0xF68DE4")]
	public static Vector3 GetMidPoint(Vector3 start, Vector3 end)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0xF68E94", Offset = "0xF68E94", VA = "0xF68E94")]
	public static Vector3 GetMidPoint(Vector3 start, Vector3 end, out float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0xF68F8C", Offset = "0xF68F8C", VA = "0xF68F8C")]
	public static float Distance2D(Vector3 target, Vector3 origin)
	{
		return default(float);
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0xF69048", Offset = "0xF69048", VA = "0xF69048")]
	public static float PingPong(float aValue, float aMin, float aMax)
	{
		return default(float);
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0xF690D8", Offset = "0xF690D8", VA = "0xF690D8")]
	public static float EaseOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0xF69154", Offset = "0xF69154", VA = "0xF69154")]
	public static float EaseIn(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0xF691DC", Offset = "0xF691DC", VA = "0xF691DC")]
	public static float SmoothStep(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0xF691F8", Offset = "0xF691F8", VA = "0xF691F8")]
	public static float SmootherStep(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0xF69224", Offset = "0xF69224", VA = "0xF69224")]
	public static float RoundToNearestHalf(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0xF6924C", Offset = "0xF6924C", VA = "0xF6924C")]
	public static float SnapTo(float a, float snap)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x200039D")]
public struct MinMax
{
	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Min;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Max;

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0xF69DD8", Offset = "0xF69DD8", VA = "0xF69DD8")]
	public MinMax(float min, float max)
	{
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x200039E")]
	public class ObjectPool<T> : IObjectPool where T : class, new()
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Stack<T> m_pool;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int m_capacity;

		[Token(Token = "0x170003A7")]
		public bool IsPoolEmpty
		{
			[Token(Token = "0x6001B10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A8")]
		public bool IsPoolFull
		{
			[Token(Token = "0x6001B11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B0F")]
		public ObjectPool()
		{
		}

		[Token(Token = "0x6001B12")]
		protected void Initialize(int capacity, int preAllocateAmount)
		{
		}

		[Token(Token = "0x6001B13")]
		public void Allocate(int amount)
		{
		}

		[Token(Token = "0x6001B14")]
		private void AddObject()
		{
		}

		[Token(Token = "0x6001B15")]
		public virtual T Borrow(bool forceCreate = false)
		{
			return null;
		}

		[Token(Token = "0x6001B16")]
		public virtual void Return(T obj)
		{
		}

		[Token(Token = "0x6001B17")]
		protected virtual T AllocateObject()
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001B19")]
		protected virtual void OnBorrowed(T borrowedObject)
		{
		}

		[Token(Token = "0x6001B1A")]
		protected virtual void OnReturned(T returnedObject)
		{
		}

		[Token(Token = "0x6001B1B")]
		protected virtual void OnUnableToReturn(T returnedObject)
		{
		}
	}
	[Token(Token = "0x200039F")]
	public static class PhysicsExtensions
	{
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xED8B40", Offset = "0xED8B40", VA = "0xED8B40")]
		public static bool CapsuleCast(this CapsuleCollider capsule, Vector3 direction, out RaycastHit hitInfo, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xED91B0", Offset = "0xED91B0", VA = "0xED91B0")]
		public static Collider[] OverlapCapsule(this CapsuleCollider capsule, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return null;
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xED9224", Offset = "0xED9224", VA = "0xED9224")]
		public static int OverlapCapsuleNonAlloc(this CapsuleCollider capsule, Collider[] results, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(int);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xED8BF4", Offset = "0xED8BF4", VA = "0xED8BF4")]
		public static void ToWorldSpaceCapsule(this CapsuleCollider capsule, out Vector3 point0, out Vector3 point1, out float radius)
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class PlayerUtils
	{
		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90C1C", Offset = "0xC90C1C")]
		private sealed class <LevelToLoadouts>c__AnonStorey0
		{
			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int level;

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xED99F0", Offset = "0xED99F0", VA = "0xED99F0")]
			public <LevelToLoadouts>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xEDAEA4", Offset = "0xEDAEA4", VA = "0xEDAEA4")]
			internal bool <>m__0(KeyValuePair<int, ExperienceTableObject> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90BFC", Offset = "0xC90BFC")]
		private static Func<KeyValuePair<int, ExperienceTableObject>, int> <>f__am$cache0;

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xED92A8", Offset = "0xED92A8", VA = "0xED92A8")]
		public PlayerUtils()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xED92B0", Offset = "0xED92B0", VA = "0xED92B0")]
		public static int LevelToNumberOfSpellUnlocks(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xED9618", Offset = "0xED9618", VA = "0xED9618")]
		public static int LevelToXp(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xED96BC", Offset = "0xED96BC", VA = "0xED96BC")]
		public static int LevelToDustReward(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xED973C", Offset = "0xED973C", VA = "0xED973C")]
		public static int LevelToSpellUnlocks(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xED97BC", Offset = "0xED97BC", VA = "0xED97BC")]
		public static int LevelToLoadoutUnlocks(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xED983C", Offset = "0xED983C", VA = "0xED983C")]
		public static int LevelToLoadouts(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xED99F8", Offset = "0xED99F8", VA = "0xED99F8")]
		public static RewardType LevelToReward(int level)
		{
			return default(RewardType);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xED9A80", Offset = "0xED9A80", VA = "0xED9A80")]
		public static RatingTitle RatingToTitle(int rating)
		{
			return default(RatingTitle);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xED9D60", Offset = "0xED9D60", VA = "0xED9D60")]
		public static int TitleToRating(RatingTitle title)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xED9E40", Offset = "0xED9E40", VA = "0xED9E40")]
		public static void ConvertItemsToDust(JObject jObject)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xEDAAD0", Offset = "0xEDAAD0", VA = "0xEDAAD0")]
		public static void ConvertItemsToDust(IDictionary<string, UserDataRecord> data)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xEDA0FC", Offset = "0xEDA0FC", VA = "0xEDA0FC")]
		private static ConversionResult ConvertMasks(JToken token)
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xEDA3C4", Offset = "0xEDA3C4", VA = "0xEDA3C4")]
		private static ConversionResult ConvertOutfits(JToken token)
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xEDA65C", Offset = "0xEDA65C", VA = "0xEDA65C")]
		private static ConversionResult ConvertWands(JToken token)
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xEDA954", Offset = "0xEDA954", VA = "0xEDA954")]
		private static ConversionResult ConvertTitles(JToken token)
		{
			return null;
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xEDAE3C", Offset = "0xEDAE3C", VA = "0xEDAE3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90C0C", Offset = "0xC90C0C")]
		private static int <LevelToLoadouts>m__0(KeyValuePair<int, ExperienceTableObject> p)
		{
			return default(int);
		}
	}
}
namespace Assets.Scripts.Spells.Utils
{
	[Token(Token = "0x20003A1")]
	public class PoolObject : MonoBehaviourPun, IPunInstantiateMagicCallback, IPoolObject
	{
		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC90CE8", Offset = "0xC90CE8")]
		private sealed class <DisableAfterTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PoolObject $this;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700064D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C87")]
				[Address(RVA = "0xFD35D4", Offset = "0xFD35D4", VA = "0xFD35D4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0xFD35DC", Offset = "0xFD35DC", VA = "0xFD35DC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xFD330C", Offset = "0xFD330C", VA = "0xFD330C")]
			[DebuggerHidden]
			public <DisableAfterTime>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xFD34EC", Offset = "0xFD34EC", VA = "0xFD34EC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xFD35E4", Offset = "0xFD35E4", VA = "0xFD35E4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xFD35F8", Offset = "0xFD35F8", VA = "0xFD35F8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC90C2C", Offset = "0xC90C2C")]
		protected float m_lifeTime;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected PoolObjectType m_poolObjectType;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject m_core;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xFC5098", Offset = "0xFC5098", VA = "0xFC5098")]
		public PoolObject()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xFD2F84", Offset = "0xFD2F84", VA = "0xFD2F84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xFD2F8C", Offset = "0xFD2F8C", VA = "0xFD2F8C", Slot = "8")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xFD3034", Offset = "0xFD3034", VA = "0xFD3034", Slot = "6")]
		public void EnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xFD31A4", Offset = "0xFD31A4", VA = "0xFD31A4", Slot = "9")]
		[PunRPC]
		public virtual void PunEnableObject(Vector3 position, params object[] data)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xFC5378", Offset = "0xFC5378", VA = "0xFC5378")]
		[DebuggerHidden]
		protected IEnumerator DisableAfterTime()
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xFD3314", Offset = "0xFD3314", VA = "0xFD3314", Slot = "7")]
		public void DisableObject()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xFD341C", Offset = "0xFD341C", VA = "0xFD341C", Slot = "10")]
		[PunRPC]
		protected virtual void PunDisableObject()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xFD34E4", Offset = "0xFD34E4", VA = "0xFD34E4", Slot = "5")]
		private PhotonView Assets.Scripts.Interfaces.IPoolObject.get_photonView()
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x20003A2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC90D48", Offset = "0xC90D48")]
	public class PostProcessingSwitcher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003A3")]
		public class PostProfile
		{
			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level Level;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PostProcessingProfile Profile;

			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xEDB34C", Offset = "0xEDB34C", VA = "0xEDB34C")]
			public PostProfile()
			{
			}
		}

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Level DebugLevel;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<PostProfile> Profiles;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Level m_level;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PostProcessingBehaviour m_postProcessingComponent;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xEDAF0C", Offset = "0xEDAF0C", VA = "0xEDAF0C")]
		public PostProcessingSwitcher()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xEDAF7C", Offset = "0xEDAF7C", VA = "0xEDAF7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xEDB038", Offset = "0xEDB038", VA = "0xEDB038")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xEDB0B0", Offset = "0xEDB0B0", VA = "0xEDB0B0")]
		private void OnLevelUpdated(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xEDB2F8", Offset = "0xEDB2F8", VA = "0xEDB2F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xEDB104", Offset = "0xEDB104", VA = "0xEDB104")]
		private void SetCorrectPostEffect(Level level)
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public enum PromiseState
	{
		[Token(Token = "0x4001590")]
		Pending,
		[Token(Token = "0x4001591")]
		Rejected,
		[Token(Token = "0x4001592")]
		Resolved
	}
	[Token(Token = "0x20003A5")]
	public interface IPromise
	{
		[Token(Token = "0x6001B41")]
		void Done(Action onResolved);

		[Token(Token = "0x6001B42")]
		void Done(Action onResolved, Action<Exception> onRejected);
	}
	[Token(Token = "0x20003A6")]
	public class Promise : IPromise
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Promise sm_resolvedPromise;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Promise sm_rejectedPromise;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Exception m_rejectionException;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PromiseState m_state;

		[Token(Token = "0x14000014")]
		private event Action m_resolveHandler
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xEDB3A8", Offset = "0xEDB3A8", VA = "0xEDB3A8")]
			add
			{
			}
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xEDB490", Offset = "0xEDB490", VA = "0xEDB490")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		private event Action<Exception> m_rejectionHandler
		{
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xEDB578", Offset = "0xEDB578", VA = "0xEDB578")]
			add
			{
			}
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xEDB660", Offset = "0xEDB660", VA = "0xEDB660")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEDB354", Offset = "0xEDB354", VA = "0xEDB354")]
		public Promise()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xEDB37C", Offset = "0xEDB37C", VA = "0xEDB37C")]
		public Promise(PromiseState state)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xEDB748", Offset = "0xEDB748", VA = "0xEDB748")]
		public static IPromise Resolved()
		{
			return null;
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xEDB7B0", Offset = "0xEDB7B0", VA = "0xEDB7B0")]
		public static IPromise Rejected(Exception exception)
		{
			return null;
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xEDB83C", Offset = "0xEDB83C", VA = "0xEDB83C", Slot = "4")]
		public void Done(Action onResolved)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xEDB8CC", Offset = "0xEDB8CC", VA = "0xEDB8CC", Slot = "5")]
		public void Done(Action onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xEDB914", Offset = "0xEDB914", VA = "0xEDB914")]
		public void Resolve()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xEDB94C", Offset = "0xEDB94C", VA = "0xEDB94C")]
		public void Reject(Exception exception)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xEDB874", Offset = "0xEDB874", VA = "0xEDB874")]
		private void FinishPromise()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public interface IPromise<T>
	{
		[Token(Token = "0x6001B51")]
		void Done(Action<T> onResolved);

		[Token(Token = "0x6001B52")]
		void Done(Action<T> onResolved, Action<Exception> onRejected);
	}
	[Token(Token = "0x20003A8")]
	public class Promise<T> : IPromise<T>
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Promise<T> sm_resolvedPromise;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Promise<T> sm_rejectedPromise;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_resolveValue;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception m_rejectionException;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PromiseState m_state;

		[Token(Token = "0x14000016")]
		private event Action<T> m_resolveHandler
		{
			[Token(Token = "0x6001B55")]
			add
			{
			}
			[Token(Token = "0x6001B56")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		private event Action<Exception> m_rejectionHandler
		{
			[Token(Token = "0x6001B57")]
			add
			{
			}
			[Token(Token = "0x6001B58")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B53")]
		public Promise()
		{
		}

		[Token(Token = "0x6001B54")]
		public Promise(PromiseState state)
		{
		}

		[Token(Token = "0x6001B59")]
		public static IPromise<T> Resolved(T value)
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		public static IPromise<T> Rejected(Exception exception)
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		public void Done(Action<T> onResolved)
		{
		}

		[Token(Token = "0x6001B5C")]
		public void Done(Action<T> onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6001B5D")]
		public void Resolve(T value)
		{
		}

		[Token(Token = "0x6001B5E")]
		public void Reject(Exception exception)
		{
		}

		[Token(Token = "0x6001B5F")]
		private void FinishPromise()
		{
		}
	}
}
[Token(Token = "0x20003A9")]
public static class QuaternionExtensions
{
	[Token(Token = "0x6001B61")]
	[Address(RVA = "0xFA2470", Offset = "0xFA2470", VA = "0xFA2470")]
	public static float GetRoll(this Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0xFA2518", Offset = "0xFA2518", VA = "0xFA2518")]
	public static float GetPitch(this Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0xFA25C0", Offset = "0xFA25C0", VA = "0xFA25C0")]
	public static float GetYaw(this Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0xFA2650", Offset = "0xFA2650", VA = "0xFA2650")]
	public static bool IsValid(this Quaternion q)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0xFA2680", Offset = "0xFA2680", VA = "0xFA2680")]
	public static bool IsValidThorough(this Quaternion q)
	{
		return default(bool);
	}
}
namespace Assets.Scripts.GoogleSheetsDatabase
{
	[Token(Token = "0x20003AA")]
	public static class RijndaelManagedConverter
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] SALT;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xDE7020", Offset = "0xDE7020", VA = "0xDE7020")]
		public static byte[] Encrypt(byte[] plain, string password)
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xDE7234", Offset = "0xDE7234", VA = "0xDE7234")]
		public static byte[] Decrypt(byte[] cipher, string password)
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x20003AB")]
	public abstract class DrawableDictionary
	{
		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xED5828", Offset = "0xED5828", VA = "0xED5828")]
		protected DrawableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC90F2C", Offset = "0xC90F2C")]
	public class SerializableDictionaryBase<TKey, TValue> : DrawableDictionary, IDictionary<TKey, TValue>, ISerializationCallbackReceiver, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
	{
		[NonSerialized]
		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> _dict;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TKey[] _keys;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TValue[] _values;

		[Token(Token = "0x170003A9")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
		{
			[Token(Token = "0x6001B79")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AA")]
		public int Count
		{
			[Token(Token = "0x6001B6B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AB")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x6001B6E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x6001B71")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public TValue Item
		{
			[Token(Token = "0x6001B72")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6001B73")]
			set
			{
			}
		}

		[Token(Token = "0x6001B6A")]
		public SerializableDictionaryBase()
		{
		}

		[Token(Token = "0x6001B6C")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001B6D")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6F")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B74")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B75")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6001B76")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B77")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001B78")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7A")]
		public Dictionary<TKey, TValue>.Enumerator GetEnumerator()
		{
			return default(Dictionary<TKey, TValue>.Enumerator);
		}

		[Token(Token = "0x6001B7B")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B7C")]
		private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001B7E")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}
	}
}
[Token(Token = "0x20003AD")]
public static class StringExtensions
{
	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0xFB2CCC", Offset = "0xFB2CCC", VA = "0xFB2CCC")]
	public static string Truncate(this string value, int maxLength)
	{
		return null;
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0xFB2BCC", Offset = "0xFB2BCC", VA = "0xFB2BCC")]
	public static string WithPrefix(this float value)
	{
		return null;
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0xFB2D44", Offset = "0xFB2D44", VA = "0xFB2D44")]
	public static string WithPrefix(this int value)
	{
		return null;
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0xFB2DDC", Offset = "0xFB2DDC", VA = "0xFB2DDC")]
	public static string ToNumbers(this string value)
	{
		return null;
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0xFB2E6C", Offset = "0xFB2E6C", VA = "0xFB2E6C")]
	public static void EmptyTerm(this Localize localize)
	{
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x20003AE")]
	public class TrailerCamera : MonoBehaviour
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LerpConstraint m_lerpConstraint;

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xEDBA58", Offset = "0xEDBA58", VA = "0xEDBA58")]
		public TrailerCamera()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xEDBA60", Offset = "0xEDBA60", VA = "0xEDBA60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xEDBA64", Offset = "0xEDBA64", VA = "0xEDBA64")]
		private void ConfigureTrailerCamera()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xEDBB04", Offset = "0xEDBB04", VA = "0xEDBB04")]
		private void EnableTrailerCamera(bool enable)
		{
		}
	}
}
namespace Assets.Scripts.Utils.Tweeners
{
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC91004", Offset = "0xC91004")]
	public class AnchorMoveTweener : WandsTweener
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 m_startPos;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 m_endPos;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xEDBB8C", Offset = "0xEDBB8C", VA = "0xEDBB8C")]
		public AnchorMoveTweener()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xEDBBAC", Offset = "0xEDBBAC", VA = "0xEDBBAC", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xEDBCC8", Offset = "0xEDBCC8", VA = "0xEDBCC8", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xEDBD6C", Offset = "0xEDBD6C", VA = "0xEDBD6C", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC91088", Offset = "0xC91088")]
	public class ImageMaterialPropertyTweener : WandsTweener
	{
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_materialPropertyName;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_startValue;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_endValue;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_playBackWards;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material;

		[Token(Token = "0x170003AE")]
		private Material Material
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xEDBE20", Offset = "0xEDBE20", VA = "0xEDBE20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xEDBE10", Offset = "0xEDBE10", VA = "0xEDBE10")]
		public ImageMaterialPropertyTweener()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xEDBF68", Offset = "0xEDBF68", VA = "0xEDBF68", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xEDC250", Offset = "0xEDC250", VA = "0xEDC250", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xEDC368", Offset = "0xEDC368", VA = "0xEDC368", Slot = "7")]
		protected override void SetTweener()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xEDC0C0", Offset = "0xEDC0C0", VA = "0xEDC0C0")]
		private bool CanGetMaterialProperty()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003B1")]
	public class MaterialPropertyTweener : WandsTweener
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_materialPropertyName;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_startValue;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_endValue;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material;

		[Token(Token = "0x170003AF")]
		private Material Material
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xEDC3E0", Offset = "0xEDC3E0", VA = "0xEDC3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xEDC3D0", Offset = "0xEDC3D0", VA = "0xEDC3D0")]
		public MaterialPropertyTweener()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xEDC498", Offset = "0xEDC498", VA = "0xEDC498", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xEDC774", Offset = "0xEDC774", VA = "0xEDC774", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xEDC7DC", Offset = "0xEDC7DC", VA = "0xEDC7DC", Slot = "7")]
		protected override void SetTweener()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xEDC5A0", Offset = "0xEDC5A0", VA = "0xEDC5A0")]
		private bool CanGetMaterialProperty()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC9114C", Offset = "0xC9114C")]
	public class MonolithTextTweener : WandsTweener
	{
		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC911B0", Offset = "0xC911B0")]
		[SerializeField]
		private Color m_startColor;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_middleColor;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color m_endColor;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC9121C", Offset = "0xC9121C")]
		[SerializeField]
		private float m_endValue;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_reverse;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Tweener> m_activeTweeners;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TextMeshPro m_textComponent;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material m_material;

		[Token(Token = "0x170003B0")]
		private Color EndColor
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xEDC8BC", Offset = "0xEDC8BC", VA = "0xEDC8BC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003B1")]
		private float EndValue
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xEDC8DC", Offset = "0xEDC8DC", VA = "0xEDC8DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B2")]
		private TextMeshPro TextComponent
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xEDC8F4", Offset = "0xEDC8F4", VA = "0xEDC8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private Material Material
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xEDC994", Offset = "0xEDC994", VA = "0xEDC994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xEDC844", Offset = "0xEDC844", VA = "0xEDC844")]
		public MonolithTextTweener()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xEDCA40", Offset = "0xEDCA40", VA = "0xEDCA40", Slot = "4")]
		public override void SkipTweener()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xEDCB20", Offset = "0xEDCB20", VA = "0xEDCB20", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xEDCD68", Offset = "0xEDCD68", VA = "0xEDCD68")]
		private void Reverse()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xEDCD9C", Offset = "0xEDCD9C", VA = "0xEDCD9C", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xEDCE88", Offset = "0xEDCE88", VA = "0xEDCE88", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class MoveTweener : WandsTweener
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_localSpace;

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xEDCF74", Offset = "0xEDCF74", VA = "0xEDCF74")]
		public MoveTweener()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xEDCF84", Offset = "0xEDCF84", VA = "0xEDCF84", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xEDD098", Offset = "0xEDD098", VA = "0xEDD098", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xEDD124", Offset = "0xEDD124", VA = "0xEDD124", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class ScaleTweener : WandsTweener
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_startScale;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_endScale;

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xEDD1B0", Offset = "0xEDD1B0", VA = "0xEDD1B0")]
		public ScaleTweener()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xEDD1C0", Offset = "0xEDD1C0", VA = "0xEDD1C0", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xEDD2BC", Offset = "0xEDD2BC", VA = "0xEDD2BC", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xEDD384", Offset = "0xEDD384", VA = "0xEDD384", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class TextColorTweener : WandsTweener
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_startColor;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_endColor;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MaskableGraphic m_textComponent;

		[Token(Token = "0x170003B4")]
		private MaskableGraphic TextComponent
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xEDD474", Offset = "0xEDD474", VA = "0xEDD474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xEDD464", Offset = "0xEDD464", VA = "0xEDD464")]
		public TextColorTweener()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xEDD514", Offset = "0xEDD514", VA = "0xEDD514", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xEDD610", Offset = "0xEDD610", VA = "0xEDD610", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xEDD674", Offset = "0xEDD674", VA = "0xEDD674", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class TextFadeTweener : WandsTweener
	{
		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_startAlpha;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_endAlpha;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaskableGraphic m_textComponent;

		[Token(Token = "0x170003B5")]
		private MaskableGraphic TextComponent
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xEDD6F0", Offset = "0xEDD6F0", VA = "0xEDD6F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xEDD6D8", Offset = "0xEDD6D8", VA = "0xEDD6D8")]
		public TextFadeTweener()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xEDD790", Offset = "0xEDD790", VA = "0xEDD790", Slot = "6")]
		protected override void StartTweener()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xEDD888", Offset = "0xEDD888", VA = "0xEDD888", Slot = "5")]
		protected override void ResetTweener()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xEDD91C", Offset = "0xEDD91C", VA = "0xEDD91C", Slot = "7")]
		protected override void SetTweener()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public abstract class WandsTweener : MonoBehaviour
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float m_tweenTime;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float m_tweenStartDelay;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Ease m_ease;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Tweener m_activeTweener;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Action OnComplete;

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xEDBB9C", Offset = "0xEDBB9C", VA = "0xEDBB9C")]
		protected WandsTweener()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xEDD9B0", Offset = "0xEDD9B0", VA = "0xEDD9B0")]
		public void ResetTween()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xEDD9BC", Offset = "0xEDD9BC", VA = "0xEDD9BC")]
		public void Initiate(Action onComplete)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xEDC23C", Offset = "0xEDC23C", VA = "0xEDC23C")]
		protected void EndTweener()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xEDD9CC", Offset = "0xEDD9CC", VA = "0xEDD9CC", Slot = "4")]
		public virtual void SkipTweener()
		{
		}

		[Token(Token = "0x6001BB9")]
		protected abstract void ResetTweener();

		[Token(Token = "0x6001BBA")]
		protected abstract void StartTweener();

		[Token(Token = "0x6001BBB")]
		protected abstract void SetTweener();
	}
	[Token(Token = "0x20003B8")]
	public class WandsTweenerController : MonoBehaviour
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TweenerControlOption m_startOption;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandsTweener[] m_tweeners;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onStart;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onComplete;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent m_onSkip;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_tweenersCompleted;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_tweenersToComplete;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_tweenControllerCompleted;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_postMatchUiSkippedEventToken;

		[Token(Token = "0x170003B6")]
		private WandsTweener[] Tweeners
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xEDDA1C", Offset = "0xEDDA1C", VA = "0xEDDA1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xEDDA0C", Offset = "0xEDDA0C", VA = "0xEDDA0C")]
		public WandsTweenerController()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xEDDAB4", Offset = "0xEDDAB4", VA = "0xEDDAB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xEDDB70", Offset = "0xEDDB70", VA = "0xEDDB70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xEDDBE8", Offset = "0xEDDBE8", VA = "0xEDDBE8")]
		private void OnPostMatchUiSkipped(Events.PostMatchUiSkippedEvent eventData)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xEDDCD4", Offset = "0xEDDCD4", VA = "0xEDDCD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xEDDD2C", Offset = "0xEDDD2C", VA = "0xEDDD2C")]
		public void ResetTweeners()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xEDDE10", Offset = "0xEDDE10", VA = "0xEDDE10")]
		public void StartTweeners()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xEDDBEC", Offset = "0xEDDBEC", VA = "0xEDDBEC")]
		public void PostMatchUiSkipped()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xEDDFAC", Offset = "0xEDDFAC", VA = "0xEDDFAC")]
		private void OnTweenComplete()
		{
		}
	}
}
[Token(Token = "0x20003B9")]
public static class UnityExtensions
{
	[Token(Token = "0x6001BC6")]
	public static string Trim<Spell>(this Spell spell)
	{
		return null;
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0xFB7A08", Offset = "0xFB7A08", VA = "0xFB7A08")]
	public static Transform RetrieveOrCreateChild(this Transform tf, string childName, bool includeInactive = false)
	{
		return null;
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0xFAD0E4", Offset = "0xFAD0E4", VA = "0xFAD0E4")]
	public static Transform RetrieveChild(this Transform tf, string childName, bool includeInactive = false, bool includePartials = false)
	{
		return null;
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0xFB7BA4", Offset = "0xFB7BA4", VA = "0xFB7BA4")]
	public static List<Transform> RetrieveChildren(this Transform tf, string childName, bool includeInactive = false, bool includePartials = false)
	{
		return null;
	}

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0xFB7D1C", Offset = "0xFB7D1C", VA = "0xFB7D1C")]
	public static void SetParent(this Transform transform, Transform parent, ResetBehaviour resetBehaviour)
	{
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0xFB7F00", Offset = "0xFB7F00", VA = "0xFB7F00")]
	public static void SetParent(this Transform transform, Transform parent, bool worldPositionStays, ResetBehaviour resetBehaviour)
	{
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0xFB80F8", Offset = "0xFB80F8", VA = "0xFB80F8")]
	public static void SetLocalPositionAndRotation(this Transform transform, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0xFB81A8", Offset = "0xFB81A8", VA = "0xFB81A8")]
	public static void SetLocalPositionRotationAndScale(this Transform transform, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0xFB82A8", Offset = "0xFB82A8", VA = "0xFB82A8")]
	public static void ResetPositionAndRotation(this Transform transform, bool useWorldPositions)
	{
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0xFB8484", Offset = "0xFB8484", VA = "0xFB8484")]
	public static string SplitCamelCase(this string s)
	{
		return null;
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0xFB8574", Offset = "0xFB8574", VA = "0xFB8574")]
	public static string UppercaseFirst(this string s)
	{
		return null;
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0xFB867C", Offset = "0xFB867C", VA = "0xFB867C")]
	public static bool HasParameterOfType(this Animator self, string name, AnimatorControllerParameterType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD2")]
	public static T GetOrAddComponent<T>(this GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0xFB8760", Offset = "0xFB8760", VA = "0xFB8760")]
	public static int Wrap(this int value, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0xFB877C", Offset = "0xFB877C", VA = "0xFB877C")]
	public static float RoundToDecimal(this float value, int decimals)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x20003BA")]
public class VirtualTransform
{
	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Position;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion Rotation;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Scale;

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0xFACCEC", Offset = "0xFACCEC", VA = "0xFACCEC")]
	public VirtualTransform()
	{
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0xFB8808", Offset = "0xFB8808", VA = "0xFB8808")]
	public VirtualTransform(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0xFB8894", Offset = "0xFB8894", VA = "0xFB8894")]
	public void SetValues(Vector3 newPosition, Quaternion newRotation)
	{
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0xFB88A8", Offset = "0xFB88A8", VA = "0xFB88A8")]
	public void SetValues(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
	{
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0xFB88C8", Offset = "0xFB88C8", VA = "0xFB88C8")]
	public void SetValues(VirtualTransform virtualTransform)
	{
	}

	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0xFB0698", Offset = "0xFB0698", VA = "0xFB0698")]
	public static explicit operator VirtualTransform(Transform transform)
	{
		return null;
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x20003BB")]
	public class WandFPS : MonoBehaviour
	{
		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_fpsMeasurePeriod;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_perFrameUpdate;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_text;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_fpsAccumulator;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_currentFps;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_fpsNextPeriod;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_display;

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xEDDFF4", Offset = "0xEDDFF4", VA = "0xEDDFF4")]
		public WandFPS()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xEDE054", Offset = "0xEDE054", VA = "0xEDE054")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xEDE128", Offset = "0xEDE128", VA = "0xEDE128")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x20003BC")]
public static class WandsLogger
{
	[Token(Token = "0x40015DC")]
	private const int MaximumPlayFabBodySize = 1000;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC914A8", Offset = "0xC914A8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC914A8", Offset = "0xC914A8")]
	private static IReadOnlyDictionary<LogColor, Color> <LogColors>k__BackingField;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sm_isPicoGoblin;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] sm_analyticsStackTraceSplit;

	[Token(Token = "0x170003B7")]
	public static IReadOnlyDictionary<LogColor, Color> LogColors
	{
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x26C4B44", Offset = "0x26C4B44", VA = "0x26C4B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC914E4", Offset = "0xC914E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x26C4418", Offset = "0x26C4418", VA = "0x26C4418")]
	static WandsLogger()
	{
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0x26C4BAC", Offset = "0x26C4BAC", VA = "0x26C4BAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC914F4", Offset = "0xC914F4")]
	public static void Log(string message, LogColor logColor)
	{
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x26C4CAC", Offset = "0x26C4CAC", VA = "0x26C4CAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC9152C", Offset = "0xC9152C")]
	public static void LogWarning(string message, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x26C4D14", Offset = "0x26C4D14", VA = "0x26C4D14")]
	public static void LogError(string message, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x26C4D7C", Offset = "0x26C4D7C", VA = "0x26C4D7C")]
	public static void LogException(string message, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x26C4DE4", Offset = "0x26C4DE4", VA = "0x26C4DE4")]
	public static void LogAssert(string message, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x26C4E4C", Offset = "0x26C4E4C", VA = "0x26C4E4C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC91564", Offset = "0xC91564")]
	public static void Log(string message, GameObject gameObject, LogColor logColor)
	{
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x26C4FAC", Offset = "0x26C4FAC", VA = "0x26C4FAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC9159C", Offset = "0xC9159C")]
	public static void LogWarning(string message, GameObject gameObject, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x26C5024", Offset = "0x26C5024", VA = "0x26C5024")]
	public static void LogError(string message, GameObject gameObject, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x26C509C", Offset = "0x26C509C", VA = "0x26C509C")]
	public static void LogException(string message, GameObject gameObject, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x26C5114", Offset = "0x26C5114", VA = "0x26C5114")]
	public static void LogAssert(string message, GameObject gameObject, LogColor logColor = LogColor.Default)
	{
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x26C518C", Offset = "0x26C518C", VA = "0x26C518C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC915D4", Offset = "0xC915D4")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x26C528C", Offset = "0x26C528C", VA = "0x26C528C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC9160C", Offset = "0xC9160C")]
	public static void LogFormat(string message, params object[] args)
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x26C5384", Offset = "0x26C5384", VA = "0x26C5384")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC91654", Offset = "0xC91654")]
	public static void Log(string message, GameObject gameObject)
	{
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0x26C4C14", Offset = "0x26C4C14", VA = "0x26C4C14")]
	private static void Log(string message, LogType logType, LogColor logColor)
	{
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x26C4EC4", Offset = "0x26C4EC4", VA = "0x26C4EC4")]
	private static void Log(string message, GameObject gameObject, LogType logType, LogColor logColor)
	{
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x26C5304", Offset = "0x26C5304", VA = "0x26C5304")]
	public static void LogFormat(LogType logType, string message, params object[] args)
	{
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x26C51F4", Offset = "0x26C51F4", VA = "0x26C51F4")]
	public static void Log(string message, LogType logType)
	{
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0x26C53FC", Offset = "0x26C53FC", VA = "0x26C53FC")]
	public static void Log(string message, GameObject gameObject, LogType logType)
	{
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x26C54E4", Offset = "0x26C54E4", VA = "0x26C54E4")]
	public static void LogAnalytics(LogType logType, string message, string stackTrace, params object[] args)
	{
	}
}
namespace Assets.Scripts.Vanity
{
	[Token(Token = "0x20003BD")]
	public class VanityObject
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC916AC", Offset = "0xC916AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC916AC", Offset = "0xC916AC")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC916E8", Offset = "0xC916E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC916E8", Offset = "0xC916E8")]
		private string <DefaultMaterialName>k__BackingField;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91724", Offset = "0xC91724")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91724", Offset = "0xC91724")]
		private int <Cost>k__BackingField;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91760", Offset = "0xC91760")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91760", Offset = "0xC91760")]
		private ItemRarity <Rarity>k__BackingField;

		[Token(Token = "0x170003B8")]
		public string Name
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xEDE2D8", Offset = "0xEDE2D8", VA = "0xEDE2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9179C", Offset = "0xC9179C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xEDE2B8", Offset = "0xEDE2B8", VA = "0xEDE2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917AC", Offset = "0xC917AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public string DefaultMaterialName
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xEDE2E0", Offset = "0xEDE2E0", VA = "0xEDE2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917BC", Offset = "0xC917BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xEDE2C0", Offset = "0xEDE2C0", VA = "0xEDE2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917CC", Offset = "0xC917CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public string RimMaterialName
		{
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xEDE2E8", Offset = "0xEDE2E8", VA = "0xEDE2E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		public string HighlightMaterialName
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xEDE340", Offset = "0xEDE340", VA = "0xEDE340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public int Cost
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xEDE398", Offset = "0xEDE398", VA = "0xEDE398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917DC", Offset = "0xC917DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xEDE2C8", Offset = "0xEDE2C8", VA = "0xEDE2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917EC", Offset = "0xC917EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public ItemRarity Rarity
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xEDE3A0", Offset = "0xEDE3A0", VA = "0xEDE3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC917FC", Offset = "0xC917FC")]
			get
			{
				return default(ItemRarity);
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xEDE2D0", Offset = "0xEDE2D0", VA = "0xEDE2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9180C", Offset = "0xC9180C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xEDE26C", Offset = "0xEDE26C", VA = "0xEDE26C")]
		public VanityObject(string name, string defaultMaterialName, int cost, ItemRarity rarity)
		{
		}
	}
}
namespace Cortopia.Scripts.Vanity
{
	[Token(Token = "0x20003BE")]
	public abstract class VanityUnlockable : InteractableUnlockable, IUnlockable
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9181C", Offset = "0xC9181C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9181C", Offset = "0xC9181C")]
		private Vector3 <StartingPosition>k__BackingField;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91858", Offset = "0xC91858")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91858", Offset = "0xC91858")]
		private Quaternion <StartingRotation>k__BackingField;

		[Token(Token = "0x170003BE")]
		public Vector3 StartingPosition
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xE6BEC0", Offset = "0xE6BEC0", VA = "0xE6BEC0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91894", Offset = "0xC91894")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xE6BECC", Offset = "0xE6BECC", VA = "0xE6BECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC918A4", Offset = "0xC918A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public Quaternion StartingRotation
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xE6BED8", Offset = "0xE6BED8", VA = "0xE6BED8", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC918B4", Offset = "0xC918B4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xE6BEE4", Offset = "0xE6BEE4", VA = "0xE6BEE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC918C4", Offset = "0xC918C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xE6BEB8", Offset = "0xE6BEB8", VA = "0xE6BEB8")]
		protected VanityUnlockable()
		{
		}

		[Token(Token = "0x6001C03")]
		public abstract void Unlock(GameObject vfx);

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xE6BEF0", Offset = "0xE6BEF0", VA = "0xE6BEF0", Slot = "11")]
		public Sequence MoveToUnlock(Transform parent, float time)
		{
			return null;
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xE6C020", Offset = "0xE6C020", VA = "0xE6C020", Slot = "12")]
		public Sequence ReturnToSlot(float time)
		{
			return null;
		}
	}
}
namespace Assets.Scripts.Vanity
{
	[Token(Token = "0x20003BF")]
	public class VirtualCurrencyObject
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC918D4", Offset = "0xC918D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC918D4", Offset = "0xC918D4")]
		private ItemRarity <Rarity>k__BackingField;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91910", Offset = "0xC91910")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91910", Offset = "0xC91910")]
		private int <Amount>k__BackingField;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9194C", Offset = "0xC9194C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9194C", Offset = "0xC9194C")]
		private string <TextureName>k__BackingField;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91988", Offset = "0xC91988")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91988", Offset = "0xC91988")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170003C0")]
		public ItemRarity Rarity
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xEDE414", Offset = "0xEDE414", VA = "0xEDE414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC919C4", Offset = "0xC919C4")]
			get
			{
				return default(ItemRarity);
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xEDE3F4", Offset = "0xEDE3F4", VA = "0xEDE3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC919D4", Offset = "0xC919D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public int Amount
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xEDE41C", Offset = "0xEDE41C", VA = "0xEDE41C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC919E4", Offset = "0xC919E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xEDE3FC", Offset = "0xEDE3FC", VA = "0xEDE3FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC919F4", Offset = "0xC919F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public string TextureName
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xEDE424", Offset = "0xEDE424", VA = "0xEDE424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A04", Offset = "0xC91A04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xEDE404", Offset = "0xEDE404", VA = "0xEDE404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A14", Offset = "0xC91A14")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public string Name
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xEDE42C", Offset = "0xEDE42C", VA = "0xEDE42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A24", Offset = "0xC91A24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xEDE40C", Offset = "0xEDE40C", VA = "0xEDE40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A34", Offset = "0xC91A34")]
			set
			{
			}
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xEDE3A8", Offset = "0xEDE3A8", VA = "0xEDE3A8")]
		public VirtualCurrencyObject(ItemRarity rarity, int amount, string textureName, string name)
		{
		}
	}
}
namespace Cortopia.Scripts.Wand
{
	[Token(Token = "0x20003C0")]
	public class BotWandControl : WandControl
	{
		[Token(Token = "0x40015EA")]
		private const int MaxSpellCheckIterations = 20;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int m_spellCheckIterations;

		[Token(Token = "0x170003C4")]
		public Transform Transform
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xE6C130", Offset = "0xE6C130", VA = "0xE6C130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A44", Offset = "0xC91A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		public Transform WandMeshTransform
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xE6C138", Offset = "0xE6C138", VA = "0xE6C138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A54", Offset = "0xC91A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xE6C128", Offset = "0xE6C128", VA = "0xE6C128")]
		public BotWandControl()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xE6C16C", Offset = "0xE6C16C", VA = "0xE6C16C", Slot = "46")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xE6C27C", Offset = "0xE6C27C", VA = "0xE6C27C", Slot = "47")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xE6C30C", Offset = "0xE6C30C", VA = "0xE6C30C", Slot = "50")]
		public override bool CanCastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xE6C508", Offset = "0xE6C508", VA = "0xE6C508")]
		private bool ShouldForceReleaseSpell(SpellBase spell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xE6C568", Offset = "0xE6C568", VA = "0xE6C568", Slot = "52")]
		protected override void UpdateLoadout()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xE6C668", Offset = "0xE6C668", VA = "0xE6C668", Slot = "53")]
		protected override void AddSpells(SpellBase[] spells, bool isLocal)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xE6C88C", Offset = "0xE6C88C", VA = "0xE6C88C", Slot = "55")]
		public override void ResetActiveSpell()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xE6CA20", Offset = "0xE6CA20", VA = "0xE6CA20")]
		public void SelectSpell(int spellSlotIndex)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xE6CB64", Offset = "0xE6CB64", VA = "0xE6CB64", Slot = "56")]
		protected override void ChangeSpell(SpellBase newSpell)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE6CB6C", Offset = "0xE6CB6C", VA = "0xE6CB6C", Slot = "59")]
		protected override void OnSystemMenuPress()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public interface IWandControl
	{
		[Token(Token = "0x170003C6")]
		bool IsConnected
		{
			[Token(Token = "0x6001C1C")]
			get;
		}

		[Token(Token = "0x170003C7")]
		WandHandler WandHandler
		{
			[Token(Token = "0x6001C1D")]
			get;
		}

		[Token(Token = "0x170003C8")]
		WandArcHandler ArcHandler
		{
			[Token(Token = "0x6001C1E")]
			get;
		}

		[Token(Token = "0x170003C9")]
		Aim Aim
		{
			[Token(Token = "0x6001C1F")]
			get;
		}

		[Token(Token = "0x170003CA")]
		PlayerAim PlayerAim
		{
			[Token(Token = "0x6001C20")]
			get;
		}

		[Token(Token = "0x170003CB")]
		PhotonView photonView
		{
			[Token(Token = "0x6001C21")]
			get;
		}

		[Token(Token = "0x170003CC")]
		int ViewID
		{
			[Token(Token = "0x6001C22")]
			get;
		}

		[Token(Token = "0x170003CD")]
		Wielder Wielder
		{
			[Token(Token = "0x6001C23")]
			get;
		}

		[Token(Token = "0x170003CE")]
		WandInput WandInput
		{
			[Token(Token = "0x6001C24")]
			get;
		}

		[Token(Token = "0x170003CF")]
		WandHand WandHand
		{
			[Token(Token = "0x6001C25")]
			get;
		}

		[Token(Token = "0x170003D0")]
		IList<SpellBase> AvailableSpells
		{
			[Token(Token = "0x6001C26")]
			get;
		}

		[Token(Token = "0x170003D1")]
		SpellBase ActiveSpell
		{
			[Token(Token = "0x6001C27")]
			get;
		}

		[Token(Token = "0x170003D2")]
		bool IsCasting
		{
			[Token(Token = "0x6001C28")]
			get;
		}

		[Token(Token = "0x170003D3")]
		Vector3 CachedTipPoint
		{
			[Token(Token = "0x6001C29")]
			get;
		}

		[Token(Token = "0x170003D4")]
		LayerMask HitMask
		{
			[Token(Token = "0x6001C2A")]
			get;
		}

		[Token(Token = "0x6001C2B")]
		void RunUpdate();

		[Token(Token = "0x6001C2C")]
		void DestroyWand();

		[Token(Token = "0x6001C2D")]
		void SetAim(Aim aim);

		[Token(Token = "0x6001C2E")]
		void SetStatsData(StatsData m_healthData, StatsData m_manaData);

		[Token(Token = "0x6001C2F")]
		void SetWandHandler(WandHandler wandHandler);

		[Token(Token = "0x6001C30")]
		void AddChargeEffect(WandChargeEffect chargeEffect);

		[Token(Token = "0x6001C31")]
		void SetChargeEffectsParent(Transform wandParent);

		[Token(Token = "0x6001C32")]
		void ResetPosition();

		[Token(Token = "0x6001C33")]
		bool IsSpellTypeSelected(Spell spell_Teleport);

		[Token(Token = "0x6001C34")]
		bool CanCastSpell();

		[Token(Token = "0x6001C35")]
		void CacheWandProperties(WandType wandType);

		[Token(Token = "0x6001C36")]
		void InstantiateSpells(WandInput wandInput, WandHand wandHand = WandHand.Right);

		[Token(Token = "0x6001C37")]
		void AbortSpellCasting(bool discrete = false, bool backButtonForce = false);

		[Token(Token = "0x6001C38")]
		void ResetActiveSpell();

		[Token(Token = "0x6001C39")]
		SpellBase TrySelectSpell(int spellSlotIndex);

		[Token(Token = "0x6001C3A")]
		void DeselectSpell();

		[Token(Token = "0x6001C3B")]
		bool TrySelectTeleport();

		[Token(Token = "0x6001C3C")]
		void DeselectTeleport();

		[Token(Token = "0x6001C3D")]
		void PlaySpellActiveSound();

		[Token(Token = "0x6001C3E")]
		T GetSpell<T>() where T : SpellBase;

		[Token(Token = "0x6001C3F")]
		float GetAimDistance();

		[Token(Token = "0x6001C40")]
		Vector3 GetTipPosition(float m_originOffset);

		[Token(Token = "0x6001C41")]
		Vector3 GetCurrentHitPoint(float m_collisionRadius);
	}
}
namespace Cortopia.Scripts.Wand.Properties
{
	[Token(Token = "0x20003C2")]
	public static class WandProperties
	{
		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializerSettings sm_jsonSerializerSettings;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<WandType, WandProperty[]> sm_properties;

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xF438E8", Offset = "0xF438E8", VA = "0xF438E8")]
		public static void Create(WandType wandType, JObject parsedData)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xF43D3C", Offset = "0xF43D3C", VA = "0xF43D3C")]
		public static void Create(WandType wandType, WandProperty[] properties)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xF43E7C", Offset = "0xF43E7C", VA = "0xF43E7C")]
		public static bool Get(WandType wandType, out WandProperty[] properties)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x20003C3")]
public enum WandPropertyType
{
	[Token(Token = "0x40015EF")]
	UserEffect,
	[Token(Token = "0x40015F0")]
	PlayerEffect,
	[Token(Token = "0x40015F1")]
	WandEffect,
	[Token(Token = "0x40015F2")]
	SpellEffect,
	[Token(Token = "0x40015F3")]
	SplashDamageMultiplier
}
[Token(Token = "0x20003C4")]
public enum DamageMultiplierType
{
	[Token(Token = "0x40015F5")]
	General,
	[Token(Token = "0x40015F6")]
	Fire,
	[Token(Token = "0x40015F7")]
	Cold,
	[Token(Token = "0x40015F8")]
	Electric
}
[Serializable]
[Token(Token = "0x20003C5")]
public abstract class WandProperty
{
	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Value;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float ValueDouble;

	[Token(Token = "0x170003D5")]
	public virtual string Description
	{
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x26C3C4C", Offset = "0x26C3C4C", VA = "0x26C3C4C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A64", Offset = "0xC91A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D6")]
	public abstract WandPropertyType Type
	{
		[Token(Token = "0x6001C48")]
		get;
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x26C3BEC", Offset = "0x26C3BEC", VA = "0x26C3BEC")]
	protected WandProperty()
	{
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x26C3CB0", Offset = "0x26C3CB0", VA = "0x26C3CB0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x26C3EBC", Offset = "0x26C3EBC", VA = "0x26C3EBC", Slot = "6")]
	public virtual string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0x26C3F6C", Offset = "0x26C3F6C", VA = "0x26C3F6C")]
	protected float GetValue(bool applyDoubleValue)
	{
		return default(float);
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x26C3F84", Offset = "0x26C3F84", VA = "0x26C3F84")]
	protected float GetMultiplierValue(bool applyDoubleValue)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x20003C6")]
public abstract class UserEffect : WandProperty
{
	[Token(Token = "0x170003D7")]
	public override WandPropertyType Type
	{
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xFB8800", Offset = "0xFB8800", VA = "0xFB8800", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A74", Offset = "0xC91A74")]
		get
		{
			return default(WandPropertyType);
		}
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0xFA594C", Offset = "0xFA594C", VA = "0xFA594C")]
	protected UserEffect()
	{
	}

	[Token(Token = "0x6001C4F")]
	public abstract void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect);
}
[Serializable]
[Token(Token = "0x20003C7")]
public abstract class PlayerEffect : WandProperty
{
	[Token(Token = "0x170003D8")]
	public override WandPropertyType Type
	{
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x186925C", Offset = "0x186925C", VA = "0x186925C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A84", Offset = "0xC91A84")]
		get
		{
			return default(WandPropertyType);
		}
	}

	[Token(Token = "0x6001C50")]
	[Address(RVA = "0x1869254", Offset = "0x1869254", VA = "0x1869254")]
	protected PlayerEffect()
	{
	}

	[Token(Token = "0x6001C52")]
	public abstract void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand);
}
[Serializable]
[Token(Token = "0x20003C8")]
public abstract class WandEffect : WandProperty
{
	[Token(Token = "0x170003D9")]
	public override WandPropertyType Type
	{
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x26C3BF4", Offset = "0x26C3BF4", VA = "0x26C3BF4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91A94", Offset = "0xC91A94")]
		get
		{
			return default(WandPropertyType);
		}
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0x26C3BE4", Offset = "0x26C3BE4", VA = "0x26C3BE4")]
	protected WandEffect()
	{
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0x26C3BFC", Offset = "0x26C3BFC", VA = "0x26C3BFC", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C56")]
	public abstract void Apply(ref ActiveWandEffects activeWandEffects);
}
[Serializable]
[Token(Token = "0x20003C9")]
public abstract class SpellEffect : WandProperty
{
	[Token(Token = "0x170003DA")]
	public override WandPropertyType Type
	{
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xFAC8B8", Offset = "0xFAC8B8", VA = "0xFAC8B8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91AA4", Offset = "0xC91AA4")]
		get
		{
			return default(WandPropertyType);
		}
	}

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0xFAC8B0", Offset = "0xFAC8B0", VA = "0xFAC8B0")]
	protected SpellEffect()
	{
	}

	[Token(Token = "0x6001C59")]
	public abstract void Apply(ref SpellBase spell, bool applyDoubleEffects);
}
[Serializable]
[Token(Token = "0x20003CA")]
public class ExperienceProperty : UserEffect
{
	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0xF631A0", Offset = "0xF631A0", VA = "0xF631A0")]
	public ExperienceProperty()
	{
	}

	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0xF631A8", Offset = "0xF631A8", VA = "0xF631A8", Slot = "7")]
	public override void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003CB")]
public class CurrencyProperty : UserEffect
{
	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0xF5FA94", Offset = "0xF5FA94", VA = "0xF5FA94")]
	public CurrencyProperty()
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0xF5FA9C", Offset = "0xF5FA9C", VA = "0xF5FA9C", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0xF5FB54", Offset = "0xF5FB54", VA = "0xF5FB54", Slot = "7")]
	public override void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003CC")]
public class ScoreProperty : UserEffect
{
	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0xFA5944", Offset = "0xFA5944", VA = "0xFA5944")]
	public ScoreProperty()
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0xFA5954", Offset = "0xFA5954", VA = "0xFA5954", Slot = "7")]
	public override void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003CD")]
public class KOWinProperty : UserEffect
{
	[Token(Token = "0x6001C61")]
	[Address(RVA = "0xF66E7C", Offset = "0xF66E7C", VA = "0xF66E7C")]
	public KOWinProperty()
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0xF66E84", Offset = "0xF66E84", VA = "0xF66E84", Slot = "7")]
	public override void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003CE")]
public class KOLoseProperty : UserEffect
{
	[Token(Token = "0x6001C63")]
	[Address(RVA = "0xF66DB8", Offset = "0xF66DB8", VA = "0xF66DB8")]
	public KOLoseProperty()
	{
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0xF66DC0", Offset = "0xF66DC0", VA = "0xF66DC0", Slot = "7")]
	public override void Apply(ref RewardModifiers rewardModifiers, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003CF")]
public class MaxManaProperty : PlayerEffect
{
	[Token(Token = "0x6001C65")]
	[Address(RVA = "0xF693A8", Offset = "0xF693A8", VA = "0xF693A8")]
	public MaxManaProperty()
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0xF693B0", Offset = "0xF693B0", VA = "0xF693B0", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0xF693D4", Offset = "0xF693D4", VA = "0xF693D4", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D0")]
public class ManaRegenProperty : PlayerEffect
{
	[Token(Token = "0x6001C68")]
	[Address(RVA = "0xF68634", Offset = "0xF68634", VA = "0xF68634")]
	public ManaRegenProperty()
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0xF6863C", Offset = "0xF6863C", VA = "0xF6863C", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0xF686F4", Offset = "0xF686F4", VA = "0xF686F4", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D1")]
public class ManaRestoreOnHitProperty : PlayerEffect
{
	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0xF68734", Offset = "0xF68734", VA = "0xF68734")]
	public ManaRestoreOnHitProperty()
	{
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0xF6873C", Offset = "0xF6873C", VA = "0xF6873C", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0xF68760", Offset = "0xF68760", VA = "0xF68760", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D2")]
public class MaxHealthProperty : PlayerEffect
{
	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0xF6933C", Offset = "0xF6933C", VA = "0xF6933C")]
	public MaxHealthProperty()
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0xF69344", Offset = "0xF69344", VA = "0xF69344", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0xF69368", Offset = "0xF69368", VA = "0xF69368", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D3")]
public class DamageTakenProperty : PlayerEffect
{
	[Token(Token = "0x170003DB")]
	public override string Description
	{
		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xF60E30", Offset = "0xF60E30", VA = "0xF60E30", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91AB4", Offset = "0xC91AB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0xF60E28", Offset = "0xF60E28", VA = "0xF60E28")]
	public DamageTakenProperty()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0xF60EA8", Offset = "0xF60EA8", VA = "0xF60EA8", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0xF60F80", Offset = "0xF60F80", VA = "0xF60F80", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D4")]
public class HealBonusProperty : PlayerEffect
{
	[Token(Token = "0x6001C75")]
	[Address(RVA = "0xF64E88", Offset = "0xF64E88", VA = "0xF64E88")]
	public HealBonusProperty()
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0xF64E90", Offset = "0xF64E90", VA = "0xF64E90", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D5")]
public class StartingArmorProperty : PlayerEffect
{
	[Token(Token = "0x6001C77")]
	[Address(RVA = "0xFB2BA8", Offset = "0xFB2BA8", VA = "0xFB2BA8")]
	public StartingArmorProperty()
	{
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0xFB2BB0", Offset = "0xFB2BB0", VA = "0xFB2BB0", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0xFB2C6C", Offset = "0xFB2C6C", VA = "0xFB2C6C", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D6")]
public class AlwaysCursedProperty : PlayerEffect
{
	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0xEFB5E0", Offset = "0xEFB5E0", VA = "0xEFB5E0")]
	public AlwaysCursedProperty()
	{
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0xEFB5E8", Offset = "0xEFB5E8", VA = "0xEFB5E8", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0xEFB638", Offset = "0xEFB638", VA = "0xEFB638", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D7")]
public class AutoLeapProperty : PlayerEffect
{
	[Token(Token = "0x40015FB")]
	public const float ContinuousAutoLeapPerSeconds = 1f;

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0xEF65A4", Offset = "0xEF65A4", VA = "0xEF65A4")]
	public AutoLeapProperty()
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0xEF65AC", Offset = "0xEF65AC", VA = "0xEF65AC", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D8")]
public class HealTileProperty : PlayerEffect
{
	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0xF64F4C", Offset = "0xF64F4C", VA = "0xF64F4C")]
	public HealTileProperty()
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0xF64F54", Offset = "0xF64F54", VA = "0xF64F54", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0xF64F78", Offset = "0xF64F78", VA = "0xF64F78", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003D9")]
public class ManaRestoringPickupsProperty : PlayerEffect
{
	[Token(Token = "0x6001C82")]
	[Address(RVA = "0xF687C0", Offset = "0xF687C0", VA = "0xF687C0")]
	public ManaRestoringPickupsProperty()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0xF687C8", Offset = "0xF687C8", VA = "0xF687C8", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0xF687EC", Offset = "0xF687EC", VA = "0xF687EC", Slot = "7")]
	public override void Apply(ref PlayerStats playerStats, bool applyDoubleEffect, WandHand wandHand)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DA")]
public class AcidTeleportProperty : WandEffect
{
	[Token(Token = "0x6001C85")]
	[Address(RVA = "0xEFB578", Offset = "0xEFB578", VA = "0xEFB578")]
	public AcidTeleportProperty()
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0xEFB580", Offset = "0xEFB580", VA = "0xEFB580", Slot = "7")]
	public override void Apply(ref ActiveWandEffects activeWandEffects)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DB")]
public class AlternateSpellLookProperty : WandEffect
{
	[Token(Token = "0x6001C87")]
	[Address(RVA = "0xEFB5CC", Offset = "0xEFB5CC", VA = "0xEFB5CC")]
	public AlternateSpellLookProperty()
	{
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0xEFB5D4", Offset = "0xEFB5D4", VA = "0xEFB5D4", Slot = "7")]
	public override void Apply(ref ActiveWandEffects activeWandEffects)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DC")]
public class TeleportCostProperty : SpellEffect
{
	[Token(Token = "0x6001C89")]
	[Address(RVA = "0xFB3064", Offset = "0xFB3064", VA = "0xFB3064")]
	public TeleportCostProperty()
	{
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0xFB306C", Offset = "0xFB306C", VA = "0xFB306C", Slot = "6")]
	public override string GetLocalizationValue(bool applyDoubleEffect)
	{
		return null;
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0xFB3088", Offset = "0xFB3088", VA = "0xFB3088", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DD")]
public class SummonedCostProperty : SpellEffect
{
	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0xFB2F8C", Offset = "0xFB2F8C", VA = "0xFB2F8C")]
	public SummonedCostProperty()
	{
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0xFB2F94", Offset = "0xFB2F94", VA = "0xFB2F94", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DE")]
public class DamageDealtProperty : SpellEffect
{
	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0xF60DCC", Offset = "0xF60DCC", VA = "0xF60DCC")]
	public DamageDealtProperty()
	{
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0xF60DD4", Offset = "0xF60DD4", VA = "0xF60DD4", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003DF")]
public class FireDamageProperty : SpellEffect
{
	[Token(Token = "0x6001C90")]
	[Address(RVA = "0xF64B68", Offset = "0xF64B68", VA = "0xF64B68")]
	public FireDamageProperty()
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0xF64B70", Offset = "0xF64B70", VA = "0xF64B70", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003E0")]
public class ElectricDamageProperty : SpellEffect
{
	[Token(Token = "0x6001C92")]
	[Address(RVA = "0xF63038", Offset = "0xF63038", VA = "0xF63038")]
	public ElectricDamageProperty()
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0xF63040", Offset = "0xF63040", VA = "0xF63040", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003E1")]
public class ColdDamageProperty : SpellEffect
{
	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x1010E14", Offset = "0x1010E14", VA = "0x1010E14")]
	public ColdDamageProperty()
	{
	}

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x1010E1C", Offset = "0x1010E1C", VA = "0x1010E1C", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}
}
[Serializable]
[Token(Token = "0x20003E2")]
public class SplashDamageProperty : SpellEffect
{
	[Token(Token = "0x170003DC")]
	public override WandPropertyType Type
	{
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xFB2784", Offset = "0xFB2784", VA = "0xFB2784", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91AC4", Offset = "0xC91AC4")]
		get
		{
			return default(WandPropertyType);
		}
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0xFB277C", Offset = "0xFB277C", VA = "0xFB277C")]
	public SplashDamageProperty()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0xFB278C", Offset = "0xFB278C", VA = "0xFB278C", Slot = "7")]
	public override void Apply(ref SpellBase spell, bool applyDoubleEffect)
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0xFB2800", Offset = "0xFB2800", VA = "0xFB2800")]
	public void Apply(ref SpellBase spell, bool applyDoubleEffect, IDictionary<DamageMultiplierType, float> activeDamageMultipliers)
	{
	}
}
namespace Cortopia.Scripts.Wand
{
	[Token(Token = "0x20003E3")]
	public class WandArcHandler : MonoBehaviour
	{
		[Token(Token = "0x40015FC")]
		private const int ArcPointsCount = 30;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC91AD4", Offset = "0xC91AD4")]
		[SerializeField]
		private GameObject m_trajectoryPrefab;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IList<GameObject> m_dots;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IList<Vector3> m_arcPositions;

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xF44018", Offset = "0xF44018", VA = "0xF44018")]
		public WandArcHandler()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xF440B8", Offset = "0xF440B8", VA = "0xF440B8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xF4416C", Offset = "0xF4416C", VA = "0xF4416C")]
		public void TryInstantiateDotPool(IList<Spell> availableSpellTypes)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xF442C0", Offset = "0xF442C0", VA = "0xF442C0")]
		private void InstantiateDotPool()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xF44668", Offset = "0xF44668", VA = "0xF44668")]
		public void CalculateProjectileCurve(Vector3[] points, bool bounceActive, [Optional] Vector3 offset)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xF44F4C", Offset = "0xF44F4C", VA = "0xF44F4C")]
		public void HideDots(bool clearArcPositions = false)
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC91B20", Offset = "0xC91B20")]
	public class WandControl : MonoBehaviourPun, IPunInstantiateMagicCallback, IPauseObject, IWandControl
	{
		[Token(Token = "0x4001600")]
		protected const string UIChooseClipName = "ui_choose";

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandArcHandler m_arcHandler;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_hitMask;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC91BA4", Offset = "0xC91BA4")]
		[SerializeField]
		protected Spell[] m_debugSpells;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected StatsData m_healthData;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected StatsData m_manaData;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected WandSpellSpawner m_spellSpawner;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected SpellBase m_activeSpell;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected SpellBase m_previouslyActiveSpell;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected AudioSource m_audioSource;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected WandHandler m_wandHandler;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected WandType m_wandType;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Spell[] m_availableSpellTypes;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int[] m_spellCastCosts;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected EventToken m_matchPausedEventToken;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected EventToken m_matchResetEventToken;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isWandPositionValid;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_hasHandTracking;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IList<SpellEffect> m_activeSpellEffects;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ActiveWandEffects m_activeEffects;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IList<WandChargeEffect> m_wandChargeEffects;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IDictionary<DamageMultiplierType, float> m_activeDamageMultipliers;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private EventToken m_systemMenuInputEventToken;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private EventToken m_platformInputUpdatedEventToken;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private EventToken m_tileAreaExitEventToken;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91BF0", Offset = "0xC91BF0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91BF0", Offset = "0xC91BF0")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91C2C", Offset = "0xC91C2C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91C2C", Offset = "0xC91C2C")]
		private Aim <Aim>k__BackingField;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91C68", Offset = "0xC91C68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91C68", Offset = "0xC91C68")]
		private PlayerAim <PlayerAim>k__BackingField;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91CA4", Offset = "0xC91CA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91CA4", Offset = "0xC91CA4")]
		private Wielder <Wielder>k__BackingField;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91CE0", Offset = "0xC91CE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91CE0", Offset = "0xC91CE0")]
		private WandInput <WandInput>k__BackingField;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91D1C", Offset = "0xC91D1C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91D1C", Offset = "0xC91D1C")]
		private WandHand <WandHand>k__BackingField;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91D58", Offset = "0xC91D58")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91D58", Offset = "0xC91D58")]
		private IList<SpellBase> <AvailableSpells>k__BackingField;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91D94", Offset = "0xC91D94")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91D94", Offset = "0xC91D94")]
		private Vector3 <CachedTipPoint>k__BackingField;

		[Token(Token = "0x170003DD")]
		public bool IsPaused
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xF45394", Offset = "0xF45394", VA = "0xF45394", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91DD0", Offset = "0xC91DD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xF4539C", Offset = "0xF4539C", VA = "0xF4539C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91DE0", Offset = "0xC91DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public bool IsConnected
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xF453A8", Offset = "0xF453A8", VA = "0xF453A8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91DF0", Offset = "0xC91DF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DF")]
		public WandHandler WandHandler
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xF45478", Offset = "0xF45478", VA = "0xF45478", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E00", Offset = "0xC91E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public WandArcHandler ArcHandler
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xF45500", Offset = "0xF45500", VA = "0xF45500", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E10", Offset = "0xC91E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public Aim Aim
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xF45508", Offset = "0xF45508", VA = "0xF45508", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E20", Offset = "0xC91E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xF45510", Offset = "0xF45510", VA = "0xF45510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E30", Offset = "0xC91E30")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public PlayerAim PlayerAim
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xF45518", Offset = "0xF45518", VA = "0xF45518", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E40", Offset = "0xC91E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xF45520", Offset = "0xF45520", VA = "0xF45520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E50", Offset = "0xC91E50")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public int ViewID
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xF45528", Offset = "0xF45528", VA = "0xF45528", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E60", Offset = "0xC91E60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E4")]
		public Wielder Wielder
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xF4555C", Offset = "0xF4555C", VA = "0xF4555C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E70", Offset = "0xC91E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xF45564", Offset = "0xF45564", VA = "0xF45564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E80", Offset = "0xC91E80")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xF4556C", Offset = "0xF4556C", VA = "0xF4556C", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91E90", Offset = "0xC91E90")]
			get
			{
				return default(WandInput);
			}
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xF45574", Offset = "0xF45574", VA = "0xF45574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91EA0", Offset = "0xC91EA0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public WandHand WandHand
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xF4557C", Offset = "0xF4557C", VA = "0xF4557C", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91EB0", Offset = "0xC91EB0")]
			get
			{
				return default(WandHand);
			}
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xF45584", Offset = "0xF45584", VA = "0xF45584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91EC0", Offset = "0xC91EC0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public IList<SpellBase> AvailableSpells
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xF4558C", Offset = "0xF4558C", VA = "0xF4558C", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91ED0", Offset = "0xC91ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xF45594", Offset = "0xF45594", VA = "0xF45594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91EE0", Offset = "0xC91EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public SpellBase ActiveSpell
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xF4559C", Offset = "0xF4559C", VA = "0xF4559C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91EF0", Offset = "0xC91EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		public bool IsCasting
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xF45624", Offset = "0xF45624", VA = "0xF45624", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F00", Offset = "0xC91F00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EA")]
		public Vector3 CachedTipPoint
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xF456F0", Offset = "0xF456F0", VA = "0xF456F0", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F10", Offset = "0xC91F10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xF45700", Offset = "0xF45700", VA = "0xF45700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F20", Offset = "0xC91F20")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public LayerMask HitMask
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xF45710", Offset = "0xF45710", VA = "0xF45710", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F30", Offset = "0xC91F30")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x170003EC")]
		protected virtual bool ApplyDoubleWandPropertyEffects
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xF45718", Offset = "0xF45718", VA = "0xF45718", Slot = "45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F40", Offset = "0xC91F40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xF452C0", Offset = "0xF452C0", VA = "0xF452C0")]
		public WandControl()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xF45720", Offset = "0xF45720", VA = "0xF45720")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xF457FC", Offset = "0xF457FC", VA = "0xF457FC", Slot = "46")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xF45B10", Offset = "0xF45B10", VA = "0xF45B10", Slot = "47")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xF45D00", Offset = "0xF45D00", VA = "0xF45D00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xF45D58", Offset = "0xF45D58", VA = "0xF45D58", Slot = "48")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xF462EC", Offset = "0xF462EC", VA = "0xF462EC", Slot = "6")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xF46358", Offset = "0xF46358", VA = "0xF46358", Slot = "22")]
		public void RunUpdate()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xF46534", Offset = "0xF46534", VA = "0xF46534", Slot = "23")]
		public void DestroyWand()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xF46774", Offset = "0xF46774", VA = "0xF46774")]
		private void ClearAllSpells()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xF46B30", Offset = "0xF46B30", VA = "0xF46B30", Slot = "24")]
		public void SetAim(Aim aim)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xF46BC4", Offset = "0xF46BC4", VA = "0xF46BC4", Slot = "25")]
		public void SetStatsData(StatsData healthData, StatsData manaData)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF46BCC", Offset = "0xF46BCC", VA = "0xF46BCC", Slot = "49")]
		public virtual void SetWandHandler(WandHandler wandHandler)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xF477E8", Offset = "0xF477E8", VA = "0xF477E8", Slot = "27")]
		public void AddChargeEffect(WandChargeEffect chargeEffect)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xF47974", Offset = "0xF47974", VA = "0xF47974", Slot = "28")]
		public void SetChargeEffectsParent(Transform wandParent)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xF47AE8", Offset = "0xF47AE8", VA = "0xF47AE8", Slot = "29")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xF47B94", Offset = "0xF47B94", VA = "0xF47B94", Slot = "30")]
		public bool IsSpellTypeSelected(Spell spellType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xF47C6C", Offset = "0xF47C6C", VA = "0xF47C6C", Slot = "50")]
		public virtual bool CanCastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xF47E28", Offset = "0xF47E28", VA = "0xF47E28", Slot = "32")]
		public void CacheWandProperties(WandType wandType)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xF48578", Offset = "0xF48578", VA = "0xF48578", Slot = "51")]
		public virtual void InstantiateSpells(WandInput wandInput, WandHand wandHand = WandHand.Right)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xF48604", Offset = "0xF48604", VA = "0xF48604")]
		private void ResetSpells()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xF487D8", Offset = "0xF487D8", VA = "0xF487D8", Slot = "52")]
		protected virtual void UpdateLoadout()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xF48FF8", Offset = "0xF48FF8", VA = "0xF48FF8")]
		[PunRPC]
		protected void PunUpdateLoadout(int wandTypeIndex)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xF4906C", Offset = "0xF4906C", VA = "0xF4906C", Slot = "53")]
		protected virtual void AddSpells(SpellBase[] spells, bool isLocal)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xF49310", Offset = "0xF49310", VA = "0xF49310")]
		private void TryApplyModifierToSpell(SpellBase spell)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xF494B0", Offset = "0xF494B0", VA = "0xF494B0")]
		protected void GenerateSpellPool(SpellBase spell)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xF49BAC", Offset = "0xF49BAC", VA = "0xF49BAC")]
		private void RemoteGenerateSpellPool(SpellBase spell, bool checkForDuplicates)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xF49FBC", Offset = "0xF49FBC", VA = "0xF49FBC", Slot = "54")]
		public virtual void AbortSpellCasting(bool discrete = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xF4A1B8", Offset = "0xF4A1B8", VA = "0xF4A1B8", Slot = "55")]
		public virtual void ResetActiveSpell()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xF4A278", Offset = "0xF4A278", VA = "0xF4A278", Slot = "56")]
		protected virtual void ChangeSpell(SpellBase newSpell)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xF4A438", Offset = "0xF4A438", VA = "0xF4A438", Slot = "36")]
		public SpellBase TrySelectSpell(int spellSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xF4A0B4", Offset = "0xF4A0B4", VA = "0xF4A0B4", Slot = "37")]
		public void DeselectSpell()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xF4A5AC", Offset = "0xF4A5AC", VA = "0xF4A5AC", Slot = "57")]
		public virtual bool TrySelectTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xF4A690", Offset = "0xF4A690", VA = "0xF4A690", Slot = "58")]
		public virtual void DeselectTeleport()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xF4A694", Offset = "0xF4A694", VA = "0xF4A694", Slot = "40")]
		public void PlaySpellActiveSound()
		{
		}

		[Token(Token = "0x6001CDB")]
		public T GetSpell<T>() where T : SpellBase
		{
			return null;
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xF4A7AC", Offset = "0xF4A7AC", VA = "0xF4A7AC", Slot = "42")]
		public float GetAimDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xF4A7D8", Offset = "0xF4A7D8", VA = "0xF4A7D8", Slot = "43")]
		public Vector3 GetTipPosition(float offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xF4A818", Offset = "0xF4A818", VA = "0xF4A818", Slot = "44")]
		public Vector3 GetCurrentHitPoint(float collisionRadius = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xF4A854", Offset = "0xF4A854", VA = "0xF4A854", Slot = "59")]
		protected virtual void OnSystemMenuPress()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xF4637C", Offset = "0xF4637C", VA = "0xF4637C")]
		private void UpdateTipPoint()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xF463C4", Offset = "0xF463C4", VA = "0xF463C4")]
		private void ValidateWandPosition()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xF4A9EC", Offset = "0xF4A9EC", VA = "0xF4A9EC")]
		private void ResetWand()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xF4AC14", Offset = "0xF4AC14", VA = "0xF4AC14")]
		protected void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xF4AC44", Offset = "0xF4AC44", VA = "0xF4AC44")]
		protected void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xF4AC48", Offset = "0xF4AC48", VA = "0xF4AC48")]
		private void OnSystemMenuPress(InputEvents.SystemMenuInputEvent eventData)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xF4AC58", Offset = "0xF4AC58", VA = "0xF4AC58")]
		private void OnInputUpdated(InputEvents.InputChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xF4AC98", Offset = "0xF4AC98", VA = "0xF4AC98")]
		private void OnTileAreaExit(Events.TileAreaExitEvent eventData)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF4ACB0", Offset = "0xF4ACB0", VA = "0xF4ACB0")]
		private void OnTrackingAquired(XRNodeState nodeState)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xF4AD00", Offset = "0xF4AD00", VA = "0xF4AD00")]
		private void OnTrackingLost(XRNodeState nodeState)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xF4821C", Offset = "0xF4821C", VA = "0xF4821C")]
		private void TryCacheDamageMultiplier(SpellEffect spellEffect, bool applyDoubleEffect)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xF49EA0", Offset = "0xF49EA0", VA = "0xF49EA0")]
		private void EnableAcidTeleport()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xF4B08C", Offset = "0xF4B08C", VA = "0xF4B08C")]
		private void OnTeleportedSuccessfully(Tile oldTile, Tile newTile)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xF4B38C", Offset = "0xF4B38C", VA = "0xF4B38C", Slot = "12")]
		private PhotonView Cortopia.Scripts.Wand.IWandControl.get_photonView()
		{
			return null;
		}
	}
	[Token(Token = "0x20003E5")]
	public class WandControlOneHand : WandControl
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool m_wasActiveSpellReplaced;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F60", Offset = "0xC91F60")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC91F60", Offset = "0xC91F60")]
		private WandUI <UI>k__BackingField;

		[Token(Token = "0x170003ED")]
		public WandUI UI
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xF4B398", Offset = "0xF4B398", VA = "0xF4B398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91F9C", Offset = "0xC91F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xF4B3A0", Offset = "0xF4B3A0", VA = "0xF4B3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91FAC", Offset = "0xC91FAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		protected override bool ApplyDoubleWandPropertyEffects
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xF4B3A8", Offset = "0xF4B3A8", VA = "0xF4B3A8", Slot = "45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC91FBC", Offset = "0xC91FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xF4B394", Offset = "0xF4B394", VA = "0xF4B394")]
		public WandControlOneHand()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xF4B3B0", Offset = "0xF4B3B0", VA = "0xF4B3B0", Slot = "48")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xF4B4E0", Offset = "0xF4B4E0", VA = "0xF4B4E0", Slot = "49")]
		public override void SetWandHandler(WandHandler wandHandler)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xF4B52C", Offset = "0xF4B52C", VA = "0xF4B52C", Slot = "50")]
		public override bool CanCastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xF4B594", Offset = "0xF4B594", VA = "0xF4B594", Slot = "51")]
		public override void InstantiateSpells(WandInput wandInput, WandHand wandHand = WandHand.Right)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xF4B940", Offset = "0xF4B940", VA = "0xF4B940", Slot = "52")]
		protected override void UpdateLoadout()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xF4C67C", Offset = "0xF4C67C", VA = "0xF4C67C", Slot = "54")]
		public override void AbortSpellCasting(bool discrete = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xF4C6B8", Offset = "0xF4C6B8", VA = "0xF4C6B8")]
		private void TryDisableUI()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xF4CC90", Offset = "0xF4CC90", VA = "0xF4CC90", Slot = "55")]
		public override void ResetActiveSpell()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xF4CEB4", Offset = "0xF4CEB4", VA = "0xF4CEB4")]
		public void SelectSpell(SpellBase spell, bool playSfx = true, bool playHighlightSfx = false)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xF4D12C", Offset = "0xF4D12C", VA = "0xF4D12C", Slot = "57")]
		public override bool TrySelectTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xF4D184", Offset = "0xF4D184", VA = "0xF4D184", Slot = "58")]
		public override void DeselectTeleport()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xF4D194", Offset = "0xF4D194", VA = "0xF4D194", Slot = "59")]
		protected override void OnSystemMenuPress()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xF4D270", Offset = "0xF4D270", VA = "0xF4D270")]
		public void HighlightSpellSlot(PrimaryAxisState spellSlotType, bool selectSpell)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xF4DBC0", Offset = "0xF4DBC0", VA = "0xF4DBC0")]
		public bool ToggleSpellSelectionUi()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xF4DC84", Offset = "0xF4DC84", VA = "0xF4DC84")]
		public bool ToggleSpellSelectionUi(bool active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xF4DBFC", Offset = "0xF4DBFC", VA = "0xF4DBFC")]
		public bool ToggleSpellSelectionUi(bool active, bool selectHighlightedRadialElement)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E6")]
	public class WandHandler : MonoBehaviour
	{
		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WandType m_wandType;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_wandTipTransform;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_wandTipTwoWandsPosition;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 m_lobbyAdjustedLocalPosition;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 m_aimAdjustedLocalPosition;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<UnlockableRendererMaterialPair> m_meshMaterials;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IReadOnlyList<Renderer> m_relicRenderers;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IReadOnlyList<Relic> m_relics;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IReadOnlyList<int> m_castCosts;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_bloodBoltCastCost;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Relic m_bloodBoltRelic;

		[Token(Token = "0x170003EF")]
		public WandType Type
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xF4DD74", Offset = "0xF4DD74", VA = "0xF4DD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9202C", Offset = "0xC9202C")]
			get
			{
				return default(WandType);
			}
		}

		[Token(Token = "0x170003F0")]
		public Vector3 AimAdjustedLocalPosition
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xF4DD7C", Offset = "0xF4DD7C", VA = "0xF4DD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9203C", Offset = "0xC9203C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xF4DC90", Offset = "0xF4DC90", VA = "0xF4DC90")]
		public WandHandler()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xF4DD88", Offset = "0xF4DD88", VA = "0xF4DD88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xF4DE4C", Offset = "0xF4DE4C", VA = "0xF4DE4C")]
		public void InitializeInLobby()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xF4DF6C", Offset = "0xF4DF6C", VA = "0xF4DF6C")]
		public void AdjustWandTipToDualWield(bool disableRelics = false)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xF4E0E4", Offset = "0xF4E0E4", VA = "0xF4E0E4")]
		public Relic[] UpdateLobbyLoadout(Spell[] spells)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xF46C84", Offset = "0xF46C84", VA = "0xF46C84")]
		public void UpdateLoadout(IList<Spell> spells, int[] spellCastCosts)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xF4E3D8", Offset = "0xF4E3D8", VA = "0xF4E3D8")]
		private void UpdateRelicRenderers()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xF4E5F4", Offset = "0xF4E5F4", VA = "0xF4E5F4")]
		public void UpdateManaRelics(float currentMana)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xF4E90C", Offset = "0xF4E90C", VA = "0xF4E90C")]
		public void UpdateBloodBoltRelic(float currentHealth)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xF47504", Offset = "0xF47504", VA = "0xF47504")]
		public void SetRelicHighlighted(int highlightIndex)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class WandManager
	{
		[Token(Token = "0x400162E")]
		public const int MinHealthThresholdForBloodSpells = 5;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PlayerControl m_playerControl;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly StatsData m_healthData;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StatsData m_manaData;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerWand m_defaultPlayerWand;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IList<PlayerWand> m_playerWands;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<Spell> m_availableSpellTypes;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IList<int> m_spellCastCosts;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Spell_ArmorOfTheSun m_armor;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Spell_DevilsTwins m_twins;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Spell_LightningStrike m_lightning;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Spell_AcidCloud m_acid;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpellBase m_previouslySelectedSpell;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_isSpellCastingActive;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] m_isWandPositionValid;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Events.WandPositionValidationEvent m_wandPositionValidationEvent;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9204C", Offset = "0xC9204C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9204C", Offset = "0xC9204C")]
		private Tile_TeleportRandom <ChaosLeap>k__BackingField;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92088", Offset = "0xC92088")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92088", Offset = "0xC92088")]
		private IDictionary<WandHand, IList<SpellBase>> <AvailableSpells>k__BackingField;

		[Token(Token = "0x170003F1")]
		public bool IsSpellCastingLocked
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xF4F130", Offset = "0xF4F130", VA = "0xF4F130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC920C4", Offset = "0xC920C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F2")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xF4F170", Offset = "0xF4F170", VA = "0xF4F170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC920D4", Offset = "0xC920D4")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x170003F3")]
		public Spell_DevilsTwins Twins
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xF4F244", Offset = "0xF4F244", VA = "0xF4F244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC920E4", Offset = "0xC920E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		public Tile_TeleportRandom ChaosLeap
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xF4F2CC", Offset = "0xF4F2CC", VA = "0xF4F2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC920F4", Offset = "0xC920F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xF4F2D4", Offset = "0xF4F2D4", VA = "0xF4F2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92104", Offset = "0xC92104")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public IDictionary<WandHand, IList<SpellBase>> AvailableSpells
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xF4F2DC", Offset = "0xF4F2DC", VA = "0xF4F2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92114", Offset = "0xC92114")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xF4F2E4", Offset = "0xF4F2E4", VA = "0xF4F2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92124", Offset = "0xC92124")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public Spell[] AvailableSpellTypes
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xF4F2EC", Offset = "0xF4F2EC", VA = "0xF4F2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92134", Offset = "0xC92134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		public int[] SpellCastCosts
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xF4F340", Offset = "0xF4F340", VA = "0xF4F340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92144", Offset = "0xC92144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		public int WandCount
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xF4F394", Offset = "0xF4F394", VA = "0xF4F394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92154", Offset = "0xC92154")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F9")]
		private bool IsPlayer
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xF4F1D0", Offset = "0xF4F1D0", VA = "0xF4F1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92164", Offset = "0xC92164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xF4EA24", Offset = "0xF4EA24", VA = "0xF4EA24")]
		public WandManager(CharacterControl characterControl, StatsData healthData, StatsData manaData, Transform wandParent, Aim aim)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xF4ED00", Offset = "0xF4ED00", VA = "0xF4ED00")]
		public WandManager(PlayerControl playerControl, StatsData healthData, StatsData manaData)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xF4F444", Offset = "0xF4F444", VA = "0xF4F444")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xF4F628", Offset = "0xF4F628", VA = "0xF4F628")]
		public void OnTeleportInitiated()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xF4F868", Offset = "0xF4F868", VA = "0xF4F868")]
		public void SetSpellInputActive(bool active)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xF4A86C", Offset = "0xF4A86C", VA = "0xF4A86C")]
		public void SendWandPositionValidationEvent(WandHand wandHand, bool isPositionValid)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xF4FA78", Offset = "0xF4FA78", VA = "0xF4FA78")]
		public void OnArmorHit(ref float damage)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xF4FAE0", Offset = "0xF4FAE0", VA = "0xF4FAE0")]
		public void SetFreeTeleport(float timeFrame)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xF4FD0C", Offset = "0xF4FD0C", VA = "0xF4FD0C")]
		public void TrackTileHit()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xF4FD38", Offset = "0xF4FD38", VA = "0xF4FD38")]
		public void TrackTileHit(WandHand wandHand)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xF4FE28", Offset = "0xF4FE28", VA = "0xF4FE28")]
		public bool IsTileHighlighted(WandHand wandHand, Tile tile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF4FED4", Offset = "0xF4FED4", VA = "0xF4FED4")]
		public Tile GetHighlightedTile()
		{
			return null;
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF4FF00", Offset = "0xF4FF00", VA = "0xF4FF00")]
		public Tile GetHighlightedTile(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xF4FFD8", Offset = "0xF4FFD8", VA = "0xF4FFD8")]
		public void ResetHighlightedTile()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xF50004", Offset = "0xF50004", VA = "0xF50004")]
		public void ResetHighlightedTile(WandHand wandHand)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xF4F6FC", Offset = "0xF4F6FC", VA = "0xF4F6FC")]
		public void ResetHighlightedTiles()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF500DC", Offset = "0xF500DC", VA = "0xF500DC")]
		public PlayerWand GetPlayerWand()
		{
			return null;
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF4FD68", Offset = "0xF4FD68", VA = "0xF4FD68")]
		public PlayerWand GetPlayerWand(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xF500E4", Offset = "0xF500E4", VA = "0xF500E4")]
		public IWandControl GetWandControl()
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF500FC", Offset = "0xF500FC", VA = "0xF500FC")]
		public IWandControl GetWandControl(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF501D4", Offset = "0xF501D4", VA = "0xF501D4")]
		public SpellBase GetActiveSpell()
		{
			return null;
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF502A0", Offset = "0xF502A0", VA = "0xF502A0")]
		public SpellBase GetActiveSpell(WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xF5036C", Offset = "0xF5036C", VA = "0xF5036C")]
		public bool IsSpellTypeSelected(Spell spellType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xF50584", Offset = "0xF50584", VA = "0xF50584")]
		public void DestroyPlayerWands()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xF5077C", Offset = "0xF5077C", VA = "0xF5077C")]
		public void SpawnOnlineWandControllers(int wielderViewID, Transform parent, AimInput aimInput)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xF510CC", Offset = "0xF510CC", VA = "0xF510CC")]
		public void SpawnOfflineWandControllers(Transform parent, AimInput aimInput)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xF5128C", Offset = "0xF5128C", VA = "0xF5128C")]
		public void SpawnBotWandController(int wielderViewID, Transform parent, AimInput aimInput)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xF509D8", Offset = "0xF509D8", VA = "0xF509D8")]
		private void UpdateAvailableSpells()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xF4EBF4", Offset = "0xF4EBF4", VA = "0xF4EBF4")]
		private void InstantiateBotWand(CharacterControl characterControl, Transform wandParent, Aim aim)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xF4EFA8", Offset = "0xF4EFA8", VA = "0xF4EFA8")]
		private void InstantiatePlayerWand(PlayerAim playerAim)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xF51310", Offset = "0xF51310", VA = "0xF51310")]
		public bool CanCastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xF513DC", Offset = "0xF513DC", VA = "0xF513DC")]
		public bool OutOfEnergy(SpellBase spell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xF51774", Offset = "0xF51774", VA = "0xF51774")]
		public bool OutOfEnergy(SpellBase spell, WandHand wandHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xF51508", Offset = "0xF51508", VA = "0xF51508")]
		public bool OutOfEnergy(float castCost, CostType costType, WandHand wandHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xF4F874", Offset = "0xF4F874", VA = "0xF4F874")]
		public void AbortSpellCasting(bool discrete = false, bool backButtonForce = false)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xF518BC", Offset = "0xF518BC", VA = "0xF518BC")]
		public void TryCastingSpell(InputState inputState)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xF51AFC", Offset = "0xF51AFC", VA = "0xF51AFC")]
		public void TryCastAndDeselectTeleport()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xF51D10", Offset = "0xF51D10", VA = "0xF51D10")]
		public void SpellPress(WandHand wandHand, int spellSlotIndex)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xF51F34", Offset = "0xF51F34", VA = "0xF51F34")]
		public bool SpellRelease(WandHand wandHand, int spellSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xF522F0", Offset = "0xF522F0", VA = "0xF522F0")]
		public void SpellHold(WandHand wandHand)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xF5231C", Offset = "0xF5231C", VA = "0xF5231C")]
		public bool TrySelectTeleport(WandHand wandHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xF523E8", Offset = "0xF523E8", VA = "0xF523E8")]
		public void DeselectTeleport(WandHand wandHand)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xF525F8", Offset = "0xF525F8", VA = "0xF525F8")]
		public void UpdatedPlayerStatsMana(float currentMana)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xF52814", Offset = "0xF52814", VA = "0xF52814")]
		public void UpdatedPlayerStatsHealth(float currentHealth)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xF52A30", Offset = "0xF52A30", VA = "0xF52A30")]
		public void OnMatchEnded()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xF52CA4", Offset = "0xF52CA4", VA = "0xF52CA4")]
		public void TrySpawnArmor(WandHand wandHand, Transform wandParent, float durability)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xF5313C", Offset = "0xF5313C", VA = "0xF5313C")]
		public void TrySpawnLeap()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xF4AD4C", Offset = "0xF4AD4C", VA = "0xF4AD4C")]
		public bool GetOrCreateAcidCloud(WandHand wandHand, out Spell_AcidCloud acidCloud)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E8")]
	public class WandSpellSpawner
	{
		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IWandControl m_wandControl;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IList<SpellBase> m_availableSpells;

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xF489A8", Offset = "0xF489A8", VA = "0xF489A8")]
		public WandSpellSpawner()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xF4BC5C", Offset = "0xF4BC5C", VA = "0xF4BC5C")]
		public SpellBase[] SpawnRelics(Wielder wielder, IWandControl wandControl, Spell[] defaultSpells)
		{
			return null;
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xF48A1C", Offset = "0xF48A1C", VA = "0xF48A1C")]
		public SpellBase[] SpawnRelics(Wielder wielder, IWandControl wandControl, Spell[] defaultSpells, WandHand wandHand)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xF53464", Offset = "0xF53464", VA = "0xF53464")]
		private void SpawnSpell(Spell spellType, int spellIndex)
		{
		}
	}
}
namespace Assets.Scripts.UI
{
	[Token(Token = "0x20003E9")]
	public class WandStatsHandler : MonoBehaviour
	{
		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC921D4", Offset = "0xC921D4")]
		private sealed class <ChangeColor>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int index;

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Color <startSurface>__0;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal Color <startAccent>__0;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal Color <startBase>__0;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal float <currentTime>__0;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal Color surfaceColor;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal Color accentColor;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal Color baseColor;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal WandStatsHandler $this;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal object $current;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal bool $disposing;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			internal int $PC;

			[Token(Token = "0x1700064F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C8D")]
				[Address(RVA = "0xE4418C", Offset = "0xE4418C", VA = "0xE4418C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000650")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0xE44194", Offset = "0xE44194", VA = "0xE44194", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xE43A6C", Offset = "0xE43A6C", VA = "0xE43A6C")]
			[DebuggerHidden]
			public <ChangeColor>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xE43D74", Offset = "0xE43D74", VA = "0xE43D74", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xE4419C", Offset = "0xE4419C", VA = "0xE4419C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xE441B0", Offset = "0xE441B0", VA = "0xE441B0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001642")]
		private const int ColorCount = 3;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Renderer[] m_bars;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_manaAccentColor;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_manaAccentColorOriginal;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color[] m_hpStartColors;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color[] m_armorHighlightColors;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WandControlOneHand m_wandControl;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StatsData m_healthData;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StatsData m_manaData;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material[] m_fillMaterials;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] m_awaitClose;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] m_startFill;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_currentValue;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] m_hideTime;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_suddenDeath;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_suddenDeathStartedEventToken;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventToken m_armorActivationEventToken;

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xE42430", Offset = "0xE42430", VA = "0xE42430")]
		public WandStatsHandler()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xE424EC", Offset = "0xE424EC", VA = "0xE424EC")]
		private string[] GetStatsColors()
		{
			return null;
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xE42638", Offset = "0xE42638", VA = "0xE42638")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xE4279C", Offset = "0xE4279C", VA = "0xE4279C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xE42844", Offset = "0xE42844", VA = "0xE42844")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xE42A84", Offset = "0xE42A84", VA = "0xE42A84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xE432D8", Offset = "0xE432D8", VA = "0xE432D8")]
		public void Initialize(WandControlOneHand wandController)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xE43360", Offset = "0xE43360", VA = "0xE43360")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xE433FC", Offset = "0xE433FC", VA = "0xE433FC")]
		private void OnReset()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xE4356C", Offset = "0xE4356C", VA = "0xE4356C")]
		private void OnSuddenDeath()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xE43574", Offset = "0xE43574", VA = "0xE43574")]
		private void OnArmorActivated(bool isArmorActive)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xE43404", Offset = "0xE43404", VA = "0xE43404")]
		private void SetSuddenDeathActive(bool enable)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xE43848", Offset = "0xE43848", VA = "0xE43848")]
		public void SetColor(int index)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xE436B8", Offset = "0xE436B8", VA = "0xE436B8")]
		public void SetColor(int index, Color surfaceColor, Color accentColor, Color baseColor)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xE43968", Offset = "0xE43968", VA = "0xE43968")]
		[DebuggerHidden]
		private IEnumerator ChangeColor(int index, Color surfaceColor, Color accentColor, Color baseColor)
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xE431A4", Offset = "0xE431A4", VA = "0xE431A4")]
		private void SetFillValue(int matIndex)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xE43A74", Offset = "0xE43A74", VA = "0xE43A74")]
		private void SetStartValues(int i)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xE42E34", Offset = "0xE42E34", VA = "0xE42E34")]
		private void UpdateFillValue(int i)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xE43B7C", Offset = "0xE43B7C", VA = "0xE43B7C")]
		private void DoneDeal(int i)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xE43D34", Offset = "0xE43D34", VA = "0xE43D34")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xE43D3C", Offset = "0xE43D3C", VA = "0xE43D3C")]
		private void OnSuddenDeathStarted(Events.SuddenDeathStartedEvent eventData)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xE43D44", Offset = "0xE43D44", VA = "0xE43D44")]
		private void OnArmorActivated(Events.ArmorActivationEvent eventData)
		{
		}
	}
}
namespace Cortopia.Scripts.Wand
{
	[Token(Token = "0x20003EA")]
	public class WandUI : MonoBehaviour
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_showText;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_followWandMovement;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC92254", Offset = "0xC92254")]
		private float m_positionOffsetZ;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandStatsHandler m_wandStats;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isDirectionalInput;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isHudActive;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RadialElement> m_spellSelecionElements;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_currentScaleTime;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_startScale;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_endScale;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_trackRotation;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject m_radialElementsParent;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform m_selectionScalerParent;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_radialRoot;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WandInput m_wandInput;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private WandControlOneHand m_wandControl;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_matchResetEventToken;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_matchEndedEventToken;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC922A4", Offset = "0xC922A4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC922A4", Offset = "0xC922A4")]
		private RadialElement <HighlightedRelic>k__BackingField;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC922E0", Offset = "0xC922E0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC922E0", Offset = "0xC922E0")]
		private bool <IsScaling>k__BackingField;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9231C", Offset = "0xC9231C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9231C", Offset = "0xC9231C")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92358", Offset = "0xC92358")]
		private static Func<RadialElement, string> <>f__am$cache0;

		[Token(Token = "0x170003FA")]
		public RadialElement HighlightedRelic
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xF539C8", Offset = "0xF539C8", VA = "0xF539C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92368", Offset = "0xC92368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xF539D0", Offset = "0xF539D0", VA = "0xF539D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92378", Offset = "0xC92378")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public bool IsScaling
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xF4B58C", Offset = "0xF4B58C", VA = "0xF4B58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92388", Offset = "0xC92388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xF539D8", Offset = "0xF539D8", VA = "0xF539D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92398", Offset = "0xC92398")]
			private set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public bool IsActive
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xF4B584", Offset = "0xF4B584", VA = "0xF4B584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC923A8", Offset = "0xC923A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xF539E4", Offset = "0xF539E4", VA = "0xF539E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC923B8", Offset = "0xC923B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public bool ShowTooltip
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xF539F0", Offset = "0xF539F0", VA = "0xF539F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC923C8", Offset = "0xC923C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xF53940", Offset = "0xF53940", VA = "0xF53940")]
		public WandUI()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xF539F8", Offset = "0xF539F8", VA = "0xF539F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xF53B08", Offset = "0xF53B08", VA = "0xF53B08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xF53B98", Offset = "0xF53B98", VA = "0xF53B98")]
		private void OnMatchReset(Events.MatchResetEvent eventData)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xF53B9C", Offset = "0xF53B9C", VA = "0xF53B9C")]
		private void OnMatchEnded(Events.MatchEndedEvent eventData)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xF53BA0", Offset = "0xF53BA0", VA = "0xF53BA0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xF542F4", Offset = "0xF542F4", VA = "0xF542F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xF4B5E8", Offset = "0xF4B5E8", VA = "0xF4B5E8")]
		public void Initialize(WandControlOneHand wandControl, WandInput wandInput)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xF4C12C", Offset = "0xF4C12C", VA = "0xF4C12C")]
		public void SetupRelicIcons()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xF54440", Offset = "0xF54440", VA = "0xF54440")]
		private void SetupRelicIcon(SpellBase spell, int index)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xF53D80", Offset = "0xF53D80", VA = "0xF53D80")]
		private void EndScale(Vector3 endScale)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xF4D1DC", Offset = "0xF4D1DC", VA = "0xF4D1DC")]
		public void ResetUI()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xF4D5C8", Offset = "0xF4D5C8", VA = "0xF4D5C8")]
		public void HighlightSpellSlot(int selectIndex)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xF4D89C", Offset = "0xF4D89C", VA = "0xF4D89C")]
		public RadialElement_Spell HighlightAndReturnSpellSlot(int selectIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF4C788", Offset = "0xF4C788", VA = "0xF4C788")]
		public void ToggleUI(bool active, bool selectHighlightedRadialElement = true, bool playSfx = true, bool playSpellSelectSfx = true)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xF5472C", Offset = "0xF5472C", VA = "0xF5472C")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xF4BB40", Offset = "0xF4BB40", VA = "0xF4BB40")]
		public void TryHideUI()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xF54544", Offset = "0xF54544", VA = "0xF54544")]
		private void SetSpellSelectionColliders(bool value)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xF54CD0", Offset = "0xF54CD0", VA = "0xF54CD0")]
		private void SetUIVisible(bool updatePosition)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xF54938", Offset = "0xF54938", VA = "0xF54938")]
		private void SetUIActive(bool active, bool enableInteraction, bool selectHighlightedRadialElement, bool playSpellSelectSfx = true)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xF54D30", Offset = "0xF54D30", VA = "0xF54D30")]
		public void DisableWandStatsObject()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xF5435C", Offset = "0xF5435C", VA = "0xF5435C")]
		public void SetWandStatsActive(bool active)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xF54830", Offset = "0xF54830", VA = "0xF54830")]
		public void ResetBarColor(int index)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xF54DE8", Offset = "0xF54DE8", VA = "0xF54DE8")]
		public void SetBarColor(int index, Color surfaceColor, Color accentColor, Color baseColor)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF54924", Offset = "0xF54924", VA = "0xF54924")]
		public void SetTrackPosition(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xF53EB0", Offset = "0xF53EB0", VA = "0xF53EB0")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xF54F4C", Offset = "0xF54F4C", VA = "0xF54F4C")]
		private void UpdatedWandStatsTransform()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xF550F4", Offset = "0xF550F4", VA = "0xF550F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC923D8", Offset = "0xC923D8")]
		private static string <SetupRelicIcons>m__0(RadialElement x)
		{
			return null;
		}
	}
}
[Token(Token = "0x20003EB")]
public static class WandsAnalytics
{
	[Token(Token = "0x400166B")]
	public const string ClientVersion = "ClientVersion";

	[Token(Token = "0x400166C")]
	public const string Platform = "Platform";

	[Token(Token = "0x400166D")]
	public const string Level = "Level";

	[Token(Token = "0x400166E")]
	public const string MatchesPlayed = "MatchesPlayed";

	[Token(Token = "0x400166F")]
	public const string SpellsUnlocked = "SpellsUnlocked";

	[Token(Token = "0x4001670")]
	public const string Rating = "Rating";

	[Token(Token = "0x4001671")]
	public const string ArenaID = "ArenaId";

	[Token(Token = "0x4001672")]
	public const string SpellID = "SpellId";

	[Token(Token = "0x4001673")]
	public const string UnlockOrder = "UnlockOrder";

	[Token(Token = "0x4001674")]
	public const string Score = "Score";

	[Token(Token = "0x4001675")]
	public const string Reason = "Reason";

	[Token(Token = "0x4001676")]
	public const string Result = "Result";

	[Token(Token = "0x4001677")]
	public const string SpellTokenCount = "SpellTokenCount";

	[Token(Token = "0x4001678")]
	public const string MatchID = "MatchId";

	[Token(Token = "0x4001679")]
	public const string Error = "Error";

	[Token(Token = "0x400167A")]
	public const string StackTrace = "StackTrace";

	[Token(Token = "0x400167B")]
	public const string VirtualCurrency = "VirtualCurrency";

	[Token(Token = "0x400167C")]
	public const string ItemType = "ItemType";

	[Token(Token = "0x400167D")]
	public const string ItemID = "ItemId";

	[Token(Token = "0x400167E")]
	public const string ItemCost = "ItemCost";

	[Token(Token = "0x400167F")]
	public const string Language = "Language";

	[Token(Token = "0x4001680")]
	public const string Amount = "Amount";

	[Token(Token = "0x4001681")]
	public const string NewTutorialState = "NewTutorialState";

	[Token(Token = "0x4001682")]
	public const string OldWandID = "OldWandId";

	[Token(Token = "0x4001683")]
	public const string NewWandID = "NewWandId";

	[Token(Token = "0x4001684")]
	public const string OldCharacterID = "OldCharacterId";

	[Token(Token = "0x4001685")]
	public const string NewCharacterID = "NewCharacterId";

	[Token(Token = "0x4001686")]
	public const string CurrentLoadoutInfo = "CurrentLoadoutInfo";

	[Token(Token = "0x4001687")]
	private const string FullGamePurchasedEventName = "FullGamePurchased";

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, object> sm_predefinedEventData;

	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x26C3FA4", Offset = "0x26C3FA4", VA = "0x26C3FA4")]
	public static void SendCustomEvent(CustomEventType customEventType, [Optional] Dictionary<string, object> predefinedData)
	{
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC923E8", Offset = "0xC923E8")]
	public class AimPivot : MonoBehaviour
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC9244C", Offset = "0xC9244C")]
		private float m_maxLaserDistance;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_allowWandGrip;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_startRotationX;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_localStartPosition;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_wandGripChangedEventToken;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_wandControllerSpawnedEventToken;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_inputChangedEventToken;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9249C", Offset = "0xC9249C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9249C", Offset = "0xC9249C")]
		private LineRenderer <LineRenderer>k__BackingField;

		[Token(Token = "0x170003FE")]
		public LineRenderer LineRenderer
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xEDFBE0", Offset = "0xEDFBE0", VA = "0xEDFBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC924D8", Offset = "0xC924D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xEDFBE8", Offset = "0xEDFBE8", VA = "0xEDFBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC924E8", Offset = "0xC924E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xEDFBD0", Offset = "0xEDFBD0", VA = "0xEDFBD0")]
		public AimPivot()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xEDFBF0", Offset = "0xEDFBF0", VA = "0xEDFBF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xEDFD4C", Offset = "0xEDFD4C", VA = "0xEDFD4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xEDFED0", Offset = "0xEDFED0", VA = "0xEDFED0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xEDFFB4", Offset = "0xEDFFB4", VA = "0xEDFFB4")]
		private void ChangePrimaryHand(AimInput aimInput)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xEE0020", Offset = "0xEE0020", VA = "0xEE0020")]
		private void OnWandControllerSpawned(InputEvents.WandControllerSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xEE0064", Offset = "0xEE0064", VA = "0xEE0064")]
		private void OnWandGripChanged(InputEvents.WandGripChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xEE0058", Offset = "0xEE0058", VA = "0xEE0058")]
		private void ChangeWandGrip(WandGrip wandGrip)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xEE009C", Offset = "0xEE009C", VA = "0xEE009C")]
		private void SetWandGripAngle(bool isWandGrip)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xEE01E4", Offset = "0xEE01E4", VA = "0xEE01E4")]
		private void OnInputChanged(InputEvents.InputChangedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class GearVrTouchInput : IPlatformInput
	{
		[Token(Token = "0x4001691")]
		private const OVRInput.Button MenuButton = OVRInput.Button.Back;

		[Token(Token = "0x4001692")]
		private const OVRInput.Touch PrimaryTouch = OVRInput.Touch.PrimaryTouchpad;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<InputState> m_menuAction;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<InputState, float> m_swipeAction;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<InputState> m_holdAction;

		[Token(Token = "0x4001696")]
		private const float MinSwipeMagnitue = 25f;

		[Token(Token = "0x4001697")]
		private const float MinSwipeMagnitudeSqr = 625f;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_swipeStartPoint;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_currentHoldTime;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_isHolding;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool m_hasSwiped;

		[Token(Token = "0x170003FF")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xEE0268", Offset = "0xEE0268", VA = "0xEE0268", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000400")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xEE0314", Offset = "0xEE0314", VA = "0xEE0314", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC924F8", Offset = "0xC924F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000401")]
		public AimInput Aim
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xEE031C", Offset = "0xEE031C", VA = "0xEE031C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92508", Offset = "0xC92508")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000402")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xEE0324", Offset = "0xEE0324", VA = "0xEE0324", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92518", Offset = "0xC92518")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xEE0260", Offset = "0xEE0260", VA = "0xEE0260")]
		public GearVrTouchInput()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xEE032C", Offset = "0xEE032C", VA = "0xEE032C", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xEE0548", Offset = "0xEE0548", VA = "0xEE0548", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xEE054C", Offset = "0xEE054C", VA = "0xEE054C", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xEE0570", Offset = "0xEE0570", VA = "0xEE0570")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xEE0B5C", Offset = "0xEE0B5C", VA = "0xEE0B5C")]
		private InputState GetSwipeDirection(Vector2 diff)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xEE05EC", Offset = "0xEE05EC", VA = "0xEE05EC")]
		private void CheckTouchBindings()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xEE0BF8", Offset = "0xEE0BF8", VA = "0xEE0BF8")]
		public InputState GetTouchInputState(OVRInput.Touch touch)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xEE0A64", Offset = "0xEE0A64", VA = "0xEE0A64")]
		public InputState GetButtonInputState(OVRInput.Button button)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x20003EE")]
	public class GoblinInputPoint : IPlatformInput, IPauseListenerInput<Pvr_KeyCode>
	{
		[Token(Token = "0x400169C")]
		private const Pvr_KeyCode PrimaryButton = Pvr_KeyCode.TOUCHPAD;

		[Token(Token = "0x400169D")]
		private const Pvr_KeyCode SecondaryButton = Pvr_KeyCode.APP;

		[Token(Token = "0x400169E")]
		private const int HandIndex = 0;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputPauseListener<Pvr_KeyCode> m_inputPauseListener;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92528", Offset = "0xC92528")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92528", Offset = "0xC92528")]
		private Dictionary<Pvr_KeyCode, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x17000403")]
		public Dictionary<Pvr_KeyCode, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xEE0DC0", Offset = "0xEE0DC0", VA = "0xEE0DC0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92564", Offset = "0xC92564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xEE0DC8", Offset = "0xEE0DC8", VA = "0xEE0DC8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92574", Offset = "0xC92574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000405")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xEE0DD0", Offset = "0xEE0DD0", VA = "0xEE0DD0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92584", Offset = "0xC92584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000406")]
		public AimInput Aim
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xEE0DD8", Offset = "0xEE0DD8", VA = "0xEE0DD8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92594", Offset = "0xC92594")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000407")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xEE0DE0", Offset = "0xEE0DE0", VA = "0xEE0DE0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925A4", Offset = "0xC925A4")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xEE0CF0", Offset = "0xEE0CF0", VA = "0xEE0CF0")]
		public GoblinInputPoint()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xEE0DE8", Offset = "0xEE0DE8", VA = "0xEE0DE8", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xEE10E8", Offset = "0xEE10E8", VA = "0xEE10E8", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xEE0F80", Offset = "0xEE0F80", VA = "0xEE0F80")]
		private void BindButton(Pvr_KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xEE1280", Offset = "0xEE1280", VA = "0xEE1280")]
		private void UnbindButton(Pvr_KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xEE13B8", Offset = "0xEE13B8", VA = "0xEE13B8", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xEE13BC", Offset = "0xEE13BC", VA = "0xEE13BC")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xEE16BC", Offset = "0xEE16BC", VA = "0xEE16BC", Slot = "12")]
		public InputState GetButtonInputState(Pvr_KeyCode button)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x20003EF")]
	public class GoblinInputSwipe : IPlatformInput
	{
		[Token(Token = "0x40016A2")]
		private const Pvr_KeyCode PrimaryButton = Pvr_KeyCode.TOUCHPAD;

		[Token(Token = "0x40016A3")]
		private const Pvr_KeyCode SecondaryButton = Pvr_KeyCode.APP;

		[Token(Token = "0x40016A4")]
		private const int HandIndex = 0;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<InputState> m_swipeAction;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<InputState> m_primaryAction;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<InputState> m_menuAction;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<InputState> m_teleportAction;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<InputState, float> m_eulaSwipeAction;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isTouching;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_awaitingDoubleButtonRelease;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_firstSwipeInput;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<Vector2> m_swipePoints;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputState m_previousSwipeState;

		[Token(Token = "0x40016AF")]
		private const float PicoToNormal = 0.007843138f;

		[Token(Token = "0x40016B0")]
		private const int MaxSwipePoints = 20;

		[Token(Token = "0x40016B1")]
		private const float MinSwipeCenterOffset = 0.25f;

		[Token(Token = "0x40016B2")]
		private const float MinSwipeDistance = 0.707f;

		[Token(Token = "0x40016B3")]
		private const float MinSwipeDistanceSqr = 0.49984902f;

		[Token(Token = "0x17000408")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xEE17B0", Offset = "0xEE17B0", VA = "0xEE17B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925B4", Offset = "0xC925B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000409")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xEE17B8", Offset = "0xEE17B8", VA = "0xEE17B8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925C4", Offset = "0xC925C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040A")]
		public AimInput Aim
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xEE17C0", Offset = "0xEE17C0", VA = "0xEE17C0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925D4", Offset = "0xC925D4")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x1700040B")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xEE17C8", Offset = "0xEE17C8", VA = "0xEE17C8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925E4", Offset = "0xC925E4")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xEE1740", Offset = "0xEE1740", VA = "0xEE1740")]
		public GoblinInputSwipe()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xEE17D0", Offset = "0xEE17D0", VA = "0xEE17D0", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xEE1A64", Offset = "0xEE1A64", VA = "0xEE1A64", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xEE1A74", Offset = "0xEE1A74", VA = "0xEE1A74", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xEE1C90", Offset = "0xEE1C90", VA = "0xEE1C90")]
		private void UpdatePrimaryInput()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xEE1D88", Offset = "0xEE1D88", VA = "0xEE1D88")]
		private void UpdateSecondaryInput()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xEE1B74", Offset = "0xEE1B74", VA = "0xEE1B74")]
		private void UpdateMenuInput(out bool justPressedBothButtons, out bool shouldGatherOtherInput)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xEE1D14", Offset = "0xEE1D14", VA = "0xEE1D14")]
		private void UpdateSwipeInput()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xEE1EF4", Offset = "0xEE1EF4", VA = "0xEE1EF4")]
		public InputState GetButtonInputState(Pvr_KeyCode button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xEE1F78", Offset = "0xEE1F78", VA = "0xEE1F78")]
		private void ResetSwipe()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xEE21F4", Offset = "0xEE21F4", VA = "0xEE21F4")]
		private InputState GetStateInsideSlice(Vector2 currentPoint)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xEE230C", Offset = "0xEE230C", VA = "0xEE230C")]
		private InputState GetSwipeState(Vector2 currentPoint, Vector2 swipeStartPoint)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xEE21E4", Offset = "0xEE21E4", VA = "0xEE21E4")]
		private Vector2 GetTouchPadPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xEE2024", Offset = "0xEE2024", VA = "0xEE2024")]
		private InputState GetTouchState()
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x20003F0")]
	public class GoTouchInput : IPlatformInput
	{
		[Token(Token = "0x1700040C")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xEE251C", Offset = "0xEE251C", VA = "0xEE251C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC925F4", Offset = "0xC925F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040D")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xEE2524", Offset = "0xEE2524", VA = "0xEE2524", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92604", Offset = "0xC92604")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040E")]
		public AimInput Aim
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xEE252C", Offset = "0xEE252C", VA = "0xEE252C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92614", Offset = "0xC92614")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x1700040F")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xEE2534", Offset = "0xEE2534", VA = "0xEE2534", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92624", Offset = "0xC92624")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xEE2514", Offset = "0xEE2514", VA = "0xEE2514")]
		public GoTouchInput()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xEE253C", Offset = "0xEE253C", VA = "0xEE253C", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xEE2540", Offset = "0xEE2540", VA = "0xEE2540", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xEE2544", Offset = "0xEE2544", VA = "0xEE2544", Slot = "8")]
		public void Update()
		{
		}
	}
}
namespace Assets.Scripts.WandsInput.Haptics
{
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xC92634", Offset = "0xC92634")]
	public class HapticsData : ScriptableObject
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VibrationType Type;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VibrateController Controller;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VibrationForce Force;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Time;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC926A4", Offset = "0xC926A4")]
		public int StartLevel;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC926C0", Offset = "0xC926C0")]
		public int EndLevel;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xEE2548", Offset = "0xEE2548", VA = "0xEE2548")]
		public HapticsData()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xEE2550", Offset = "0xEE2550", VA = "0xEE2550", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xEE2978", Offset = "0xEE2978", VA = "0xEE2978")]
		public static HapticsData Copy(HapticsData data)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F2")]
	public interface IPlatformHaptics
	{
		[Token(Token = "0x6001DCB")]
		void InitializeHaptics(MonoBehaviour Owner);

		[Token(Token = "0x6001DCC")]
		void StartHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand);

		[Token(Token = "0x6001DCD")]
		void CancelHaptics();

		[Token(Token = "0x6001DCE")]
		void UpdatePrimaryChannel(bool primaryIsRight);

		[Token(Token = "0x6001DCF")]
		IEnumerator ContinuousVibration(VibrationForce vibrationForce);

		[Token(Token = "0x6001DD0")]
		IEnumerator TimedVibration(VibrationForce vibrationForce, float time);

		[Token(Token = "0x6001DD1")]
		IEnumerator TimedIncreasingVibration(float time, int startingLevel, int endingLevel);
	}
	[Token(Token = "0x20003F3")]
	public class OculusTouchHapticsController : IPlatformHaptics
	{
		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9270C", Offset = "0xC9270C")]
		private sealed class <ContinuousVibration>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal OculusTouchHapticsController $this;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000651")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C93")]
				[Address(RVA = "0xEE35B0", Offset = "0xEE35B0", VA = "0xEE35B0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000652")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C94")]
				[Address(RVA = "0xEE35B8", Offset = "0xEE35B8", VA = "0xEE35B8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xEE340C", Offset = "0xEE340C", VA = "0xEE340C")]
			[DebuggerHidden]
			public <ContinuousVibration>c__Iterator0()
			{
			}

			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xEE3490", Offset = "0xEE3490", VA = "0xEE3490", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xEE35C0", Offset = "0xEE35C0", VA = "0xEE35C0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xEE35D4", Offset = "0xEE35D4", VA = "0xEE35D4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9276C", Offset = "0xC9276C")]
		private sealed class <TimedVibration>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal OculusTouchHapticsController $this;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000653")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C99")]
				[Address(RVA = "0xEE3A08", Offset = "0xEE3A08", VA = "0xEE3A08", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000654")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0xEE3A10", Offset = "0xEE3A10", VA = "0xEE3A10", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xEE3414", Offset = "0xEE3414", VA = "0xEE3414")]
			[DebuggerHidden]
			public <TimedVibration>c__Iterator1()
			{
			}

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xEE38BC", Offset = "0xEE38BC", VA = "0xEE38BC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0xEE3A18", Offset = "0xEE3A18", VA = "0xEE3A18", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xEE3A2C", Offset = "0xEE3A2C", VA = "0xEE3A2C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC927CC", Offset = "0xC927CC")]
		private sealed class <TimedIncreasingVibration>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int startingLevel;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float <levelMin>__0;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int endingLevel;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <levelMax>__0;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float time;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int <level>__1;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal OculusTouchHapticsController $this;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x17000655")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002C9F")]
				[Address(RVA = "0xEE3834", Offset = "0xEE3834", VA = "0xEE3834", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000656")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CA0")]
				[Address(RVA = "0xEE383C", Offset = "0xEE383C", VA = "0xEE383C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0xEE341C", Offset = "0xEE341C", VA = "0xEE341C")]
			[DebuggerHidden]
			public <TimedIncreasingVibration>c__Iterator2()
			{
			}

			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0xEE3638", Offset = "0xEE3638", VA = "0xEE3638", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0xEE3844", Offset = "0xEE3844", VA = "0xEE3844", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0xEE3858", Offset = "0xEE3858", VA = "0xEE3858", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private OVRHapticsClip m_clipLight;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRHapticsClip m_clipMedium;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRHapticsClip m_clipHard;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRHapticsClip[] m_clipIncreasing;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHaptics.OVRHapticsChannel m_channel;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticsData m_activeHaptics;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator m_activeCoroutine;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MonoBehaviour m_owner;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte m_lightValue;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private byte m_mediumValue;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private byte m_hardValue;

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xEE2A68", Offset = "0xEE2A68", VA = "0xEE2A68")]
		public OculusTouchHapticsController(byte lightValue, byte mediumValue, byte hardValue)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xEE2AAC", Offset = "0xEE2AAC", VA = "0xEE2AAC", Slot = "4")]
		public void InitializeHaptics(MonoBehaviour owner)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xEE2FB0", Offset = "0xEE2FB0", VA = "0xEE2FB0", Slot = "7")]
		public void UpdatePrimaryChannel(bool primaryIsRight)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xEE3074", Offset = "0xEE3074", VA = "0xEE3074", Slot = "5")]
		public void StartHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xEE31C4", Offset = "0xEE31C4", VA = "0xEE31C4", Slot = "6")]
		public void CancelHaptics()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xEE322C", Offset = "0xEE322C", VA = "0xEE322C", Slot = "8")]
		[DebuggerHidden]
		public IEnumerator ContinuousVibration(VibrationForce vibrationForce)
		{
			return null;
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xEE32B8", Offset = "0xEE32B8", VA = "0xEE32B8", Slot = "9")]
		[DebuggerHidden]
		public IEnumerator TimedVibration(VibrationForce vibrationForce, float time)
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xEE335C", Offset = "0xEE335C", VA = "0xEE335C", Slot = "10")]
		[DebuggerHidden]
		public IEnumerator TimedIncreasingVibration(float time, int startingLevel, int endingLevel)
		{
			return null;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xEE3424", Offset = "0xEE3424", VA = "0xEE3424")]
		private void AddClipToQueue(OVRHaptics.OVRHapticsChannel channel, VibrationForce vibrationForce)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class QuestHapticsController : IPlatformHaptics
	{
		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9285C", Offset = "0xC9285C")]
		private sealed class <ContinuousVibration>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal QuestHapticsController $this;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000657")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CA5")]
				[Address(RVA = "0xEE40EC", Offset = "0xEE40EC", VA = "0xEE40EC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000658")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CA6")]
				[Address(RVA = "0xEE40F4", Offset = "0xEE40F4", VA = "0xEE40F4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0xEE3ECC", Offset = "0xEE3ECC", VA = "0xEE3ECC")]
			[DebuggerHidden]
			public <ContinuousVibration>c__Iterator0()
			{
			}

			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0xEE3FCC", Offset = "0xEE3FCC", VA = "0xEE3FCC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xEE40FC", Offset = "0xEE40FC", VA = "0xEE40FC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0xEE4110", Offset = "0xEE4110", VA = "0xEE4110", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC928BC", Offset = "0xC928BC")]
		private sealed class <TimedVibration>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float time;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal QuestHapticsController $this;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000659")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CAB")]
				[Address(RVA = "0xEE4498", Offset = "0xEE4498", VA = "0xEE4498", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CAC")]
				[Address(RVA = "0xEE44A0", Offset = "0xEE44A0", VA = "0xEE44A0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xEE3ED4", Offset = "0xEE3ED4", VA = "0xEE3ED4")]
			[DebuggerHidden]
			public <TimedVibration>c__Iterator1()
			{
			}

			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0xEE434C", Offset = "0xEE434C", VA = "0xEE434C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xEE44A8", Offset = "0xEE44A8", VA = "0xEE44A8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xEE44BC", Offset = "0xEE44BC", VA = "0xEE44BC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9291C", Offset = "0xC9291C")]
		private sealed class <TimedIncreasingVibration>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float time;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal QuestHapticsController $this;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700065B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CB1")]
				[Address(RVA = "0xEE42C4", Offset = "0xEE42C4", VA = "0xEE42C4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0xEE42CC", Offset = "0xEE42CC", VA = "0xEE42CC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xEE3EDC", Offset = "0xEE3EDC", VA = "0xEE3EDC")]
			[DebuggerHidden]
			public <TimedIncreasingVibration>c__Iterator2()
			{
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xEE4174", Offset = "0xEE4174", VA = "0xEE4174", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xEE42D4", Offset = "0xEE42D4", VA = "0xEE42D4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xEE42E8", Offset = "0xEE42E8", VA = "0xEE42E8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HapticsData m_activeHaptics;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator m_activeCoroutine;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MonoBehaviour m_owner;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_lightValue;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_mediumValue;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_hardValue;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_frequency;

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xEE3A90", Offset = "0xEE3A90", VA = "0xEE3A90")]
		public QuestHapticsController(float lightValue, float mediumValue, float hardValue, float frequency)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xEE3ADC", Offset = "0xEE3ADC", VA = "0xEE3ADC", Slot = "4")]
		public void InitializeHaptics(MonoBehaviour Owner)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xEE3AE4", Offset = "0xEE3AE4", VA = "0xEE3AE4", Slot = "7")]
		public void UpdatePrimaryChannel(bool primaryIsRight)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xEE3B18", Offset = "0xEE3B18", VA = "0xEE3B18", Slot = "5")]
		public void StartHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xEE3C64", Offset = "0xEE3C64", VA = "0xEE3C64", Slot = "6")]
		public void CancelHaptics()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xEE3D14", Offset = "0xEE3D14", VA = "0xEE3D14", Slot = "8")]
		[DebuggerHidden]
		public IEnumerator ContinuousVibration(VibrationForce vibrationForce)
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xEE3DA0", Offset = "0xEE3DA0", VA = "0xEE3DA0", Slot = "9")]
		[DebuggerHidden]
		public IEnumerator TimedVibration(VibrationForce vibrationForce, float time)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xEE3E44", Offset = "0xEE3E44", VA = "0xEE3E44", Slot = "10")]
		[DebuggerHidden]
		public IEnumerator TimedIncreasingVibration(float time, int startingLevel, int endingLevel)
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xEE3EE4", Offset = "0xEE3EE4", VA = "0xEE3EE4")]
		private void TriggerVibrationValue(OVRInput.Controller controller, VibrationForce vibrationForce)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class ViveHapticsController : IPlatformHaptics
	{
		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC929AC", Offset = "0xC929AC")]
		private sealed class <ContinuousVibration>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal ushort <strength>__0;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ViveHapticsController $this;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x1700065D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CB7")]
				[Address(RVA = "0xEE4D44", Offset = "0xEE4D44", VA = "0xEE4D44", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB8")]
				[Address(RVA = "0xEE4D4C", Offset = "0xEE4D4C", VA = "0xEE4D4C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xEE4A38", Offset = "0xEE4A38", VA = "0xEE4A38")]
			[DebuggerHidden]
			public <ContinuousVibration>c__Iterator0()
			{
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xEE4BB4", Offset = "0xEE4BB4", VA = "0xEE4BB4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xEE4D54", Offset = "0xEE4D54", VA = "0xEE4D54", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xEE4D68", Offset = "0xEE4D68", VA = "0xEE4D68", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92A0C", Offset = "0xC92A0C")]
		private sealed class <TimedIncreasingVibration>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int startingLevel;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int endingLevel;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ushort[] <convertedStrength>__0;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float time;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float <timer>__0;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal ushort <strength>__1;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal ViveHapticsController $this;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x1700065F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CBD")]
				[Address(RVA = "0xEE4FC4", Offset = "0xEE4FC4", VA = "0xEE4FC4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000660")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CBE")]
				[Address(RVA = "0xEE4FCC", Offset = "0xEE4FCC", VA = "0xEE4FCC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xEE4A40", Offset = "0xEE4A40", VA = "0xEE4A40")]
			[DebuggerHidden]
			public <TimedIncreasingVibration>c__Iterator1()
			{
			}

			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xEE4DCC", Offset = "0xEE4DCC", VA = "0xEE4DCC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xEE4FD4", Offset = "0xEE4FD4", VA = "0xEE4FD4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xEE4FE8", Offset = "0xEE4FE8", VA = "0xEE4FE8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92A6C", Offset = "0xC92A6C")]
		private sealed class <TimedVibration>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal VibrationForce vibrationForce;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal ushort <strength>__0;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float time;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float <timer>__0;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal ViveHapticsController $this;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000661")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CC3")]
				[Address(RVA = "0xEE519C", Offset = "0xEE519C", VA = "0xEE519C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000662")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CC4")]
				[Address(RVA = "0xEE51A4", Offset = "0xEE51A4", VA = "0xEE51A4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xEE4A48", Offset = "0xEE4A48", VA = "0xEE4A48")]
			[DebuggerHidden]
			public <TimedVibration>c__Iterator2()
			{
			}

			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xEE504C", Offset = "0xEE504C", VA = "0xEE504C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xEE51AC", Offset = "0xEE51AC", VA = "0xEE51AC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xEE51C0", Offset = "0xEE51C0", VA = "0xEE51C0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint m_controllerId;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HapticsData m_activeHaptics;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator m_activeCoroutine;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MonoBehaviour m_owner;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private global::OVR.OpenVR.CVRSystem m_system;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ushort m_light;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private ushort m_medium;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ushort m_hard;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint m_leftHandID;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint m_rightHandID;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xEE4520", Offset = "0xEE4520", VA = "0xEE4520")]
		public ViveHapticsController()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xEE453C", Offset = "0xEE453C", VA = "0xEE453C", Slot = "4")]
		public void InitializeHaptics(MonoBehaviour Owner)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xEE4674", Offset = "0xEE4674", VA = "0xEE4674", Slot = "7")]
		public void UpdatePrimaryChannel(bool primaryIsRight)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xEE46B0", Offset = "0xEE46B0", VA = "0xEE46B0", Slot = "6")]
		public void CancelHaptics()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xEE4700", Offset = "0xEE4700", VA = "0xEE4700", Slot = "5")]
		public void StartHaptics(HapticsData hapticsData, bool overrideCurrent, WandHand wandHand)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xEE4850", Offset = "0xEE4850", VA = "0xEE4850", Slot = "8")]
		[DebuggerHidden]
		public IEnumerator ContinuousVibration(VibrationForce vibrationForce)
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xEE4984", Offset = "0xEE4984", VA = "0xEE4984", Slot = "10")]
		[DebuggerHidden]
		public IEnumerator TimedIncreasingVibration(float time, int startingLevel, int endingLevel)
		{
			return null;
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xEE48DC", Offset = "0xEE48DC", VA = "0xEE48DC", Slot = "9")]
		[DebuggerHidden]
		public IEnumerator TimedVibration(VibrationForce vibrationForce, float time)
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xEE4A50", Offset = "0xEE4A50", VA = "0xEE4A50")]
		private ushort ConvertStrength(VibrationForce vibrationForce)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xEE4A84", Offset = "0xEE4A84", VA = "0xEE4A84")]
		private ushort[] ConvertStrength(int startingLevel, int endingLevel)
		{
			return null;
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xEE4B94", Offset = "0xEE4B94", VA = "0xEE4B94")]
		private void TriggerHapticPulse(uint controller, ushort durationMicroSec = 500)
		{
		}
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x20003F6")]
	public abstract class InputPauseListener
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected EventToken m_matchPausedEventToken;

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xEE5224", Offset = "0xEE5224", VA = "0xEE5224")]
		protected InputPauseListener()
		{
		}

		[Token(Token = "0x6001DF0")]
		protected void AddBindings<T>(Dictionary<T, Action<InputState>> buttonBindings, Func<T, InputState> getButtonInputState, List<T> pressedOnPaused)
		{
		}

		[Token(Token = "0x6001DF1")]
		protected void TryTriggerBinding<T>(Dictionary<T, Action<InputState>> buttonBindings, Func<T, InputState> getButtonInputState, List<T> pressedOnPaused)
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class InputPauseListener<T> : InputPauseListener
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IPauseListenerInput<T> m_inputHandler;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<T> m_pressedOnPaused;

		[Token(Token = "0x6001DF2")]
		public InputPauseListener(IPauseListenerInput<T> inputHandler)
		{
		}

		[Token(Token = "0x6001DF3")]
		~InputPauseListener()
		{
		}

		[Token(Token = "0x6001DF4")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class InputPauseListener<T1, T2> : InputPauseListener
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IPauseListenerInput<T1, T2> m_inputHandler;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<T1> m_pressedOnPaused;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<T2> m_secondaryPressedOnPaused;

		[Token(Token = "0x6001DF5")]
		public InputPauseListener(IPauseListenerInput<T1, T2> inputHandler)
		{
		}

		[Token(Token = "0x6001DF6")]
		~InputPauseListener()
		{
		}

		[Token(Token = "0x6001DF7")]
		private void OnMatchPaused(Events.MatchPausedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public interface IPauseListenerInput<T>
	{
		[Token(Token = "0x17000410")]
		Dictionary<T, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001DF8")]
			get;
		}

		[Token(Token = "0x6001DF9")]
		InputState GetButtonInputState(T button);
	}
	[Token(Token = "0x20003FA")]
	public interface IPauseListenerInput<T1, T2>
	{
		[Token(Token = "0x17000411")]
		Dictionary<T1, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001DFA")]
			get;
		}

		[Token(Token = "0x17000412")]
		Dictionary<T2, Action<InputState>> SecondaryButtonBindings
		{
			[Token(Token = "0x6001DFB")]
			get;
		}

		[Token(Token = "0x6001DFC")]
		InputState GetButtonInputState(T1 button);

		[Token(Token = "0x6001DFD")]
		InputState GetSecondaryButtonInputState(T2 button);
	}
	[Token(Token = "0x20003FB")]
	public interface IPlatformInput
	{
		[Token(Token = "0x17000413")]
		bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001DFE")]
			get;
		}

		[Token(Token = "0x17000414")]
		bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001DFF")]
			get;
		}

		[Token(Token = "0x17000415")]
		AimInput Aim
		{
			[Token(Token = "0x6001E00")]
			get;
		}

		[Token(Token = "0x17000416")]
		WandInput WandInput
		{
			[Token(Token = "0x6001E01")]
			get;
		}

		[Token(Token = "0x6001E02")]
		void Update();

		[Token(Token = "0x6001E03")]
		void BindActions(IInputListener listener);

		[Token(Token = "0x6001E04")]
		void UnbindActions(IInputListener listener);
	}
	[Token(Token = "0x20003FC")]
	public interface IPlatformInputTwoWands : IPlatformInput
	{
		[Token(Token = "0x6001E05")]
		void BindSpellButtonActions(IInputListenerTwoWands listener);

		[Token(Token = "0x6001E06")]
		void UnbindSpellButtonActions(IInputListenerTwoWands listener);
	}
	[Token(Token = "0x20003FD")]
	public class MouseAndKeyboardInput : IPlatformInput, IPauseListenerInput<KeyCode>
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputPauseListener<KeyCode> m_inputPauseListener;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<InputState> m_swipeAction;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputState m_previousSwipeState;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_playerPosition;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_cameraRotation;

		[Token(Token = "0x40016E3")]
		private const KeyCode PrimaryButton = KeyCode.Mouse0;

		[Token(Token = "0x40016E4")]
		private const KeyCode SecondaryButton = KeyCode.Mouse1;

		[Token(Token = "0x40016E5")]
		private const KeyCode ReverseButton = KeyCode.Mouse2;

		[Token(Token = "0x40016E6")]
		private const KeyCode MenuButton = KeyCode.Escape;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92ACC", Offset = "0xC92ACC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92ACC", Offset = "0xC92ACC")]
		private Dictionary<KeyCode, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x17000417")]
		public Dictionary<KeyCode, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xEE52FC", Offset = "0xEE52FC", VA = "0xEE52FC", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92B08", Offset = "0xC92B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000418")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xEE5304", Offset = "0xEE5304", VA = "0xEE5304", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000419")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xEE549C", Offset = "0xEE549C", VA = "0xEE549C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92B18", Offset = "0xC92B18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041A")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xEE54A4", Offset = "0xEE54A4", VA = "0xEE54A4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92B28", Offset = "0xC92B28")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x1700041B")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xEE54AC", Offset = "0xEE54AC", VA = "0xEE54AC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92B38", Offset = "0xC92B38")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xEE522C", Offset = "0xEE522C", VA = "0xEE522C")]
		public MouseAndKeyboardInput()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xEE54B4", Offset = "0xEE54B4", VA = "0xEE54B4", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xEE5968", Offset = "0xEE5968", VA = "0xEE5968", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xEE5800", Offset = "0xEE5800", VA = "0xEE5800")]
		private void BindButton(KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xEE5C04", Offset = "0xEE5C04", VA = "0xEE5C04")]
		private void UnbindButton(KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xEE5D3C", Offset = "0xEE5D3C", VA = "0xEE5D3C", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xEE60F0", Offset = "0xEE60F0", VA = "0xEE60F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC92B48", Offset = "0xC92B48")]
		private void CheckPlayerMovement()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xEE5D74", Offset = "0xEE5D74", VA = "0xEE5D74")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xEE60F4", Offset = "0xEE60F4", VA = "0xEE60F4", Slot = "12")]
		public InputState GetButtonInputState(KeyCode keyCode)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xEE6074", Offset = "0xEE6074", VA = "0xEE6074")]
		private void UpdateTouchState()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xEE61E0", Offset = "0xEE61E0", VA = "0xEE61E0")]
		private InputState GetTouchState()
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xEE6410", Offset = "0xEE6410", VA = "0xEE6410")]
		private InputState GetStateInsideSlice(Vector2 currentPoint)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x20003FE")]
	public class MouseInput : IPlatformInput, IPauseListenerInput<KeyCode>
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputPauseListener<KeyCode> m_inputPauseListener;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_playerPosition;

		[Token(Token = "0x40016EB")]
		private const KeyCode PrimaryButton = KeyCode.Mouse0;

		[Token(Token = "0x40016EC")]
		private const KeyCode SecondaryButton = KeyCode.Mouse1;

		[Token(Token = "0x40016ED")]
		private const KeyCode ReverseButton = KeyCode.Mouse2;

		[Token(Token = "0x40016EE")]
		private const KeyCode MenuButton = KeyCode.Escape;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92B80", Offset = "0xC92B80")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92B80", Offset = "0xC92B80")]
		private Dictionary<KeyCode, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x1700041C")]
		public Dictionary<KeyCode, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xEE65F8", Offset = "0xEE65F8", VA = "0xEE65F8", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92BBC", Offset = "0xC92BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xEE6600", Offset = "0xEE6600", VA = "0xEE6600", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041E")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xEE6798", Offset = "0xEE6798", VA = "0xEE6798", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92BCC", Offset = "0xC92BCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041F")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xEE67A0", Offset = "0xEE67A0", VA = "0xEE67A0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92BDC", Offset = "0xC92BDC")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000420")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xEE67A8", Offset = "0xEE67A8", VA = "0xEE67A8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92BEC", Offset = "0xC92BEC")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xEE6528", Offset = "0xEE6528", VA = "0xEE6528")]
		public MouseInput()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xEE67B0", Offset = "0xEE67B0", VA = "0xEE67B0", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xEE6BD8", Offset = "0xEE6BD8", VA = "0xEE6BD8", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xEE6A70", Offset = "0xEE6A70", VA = "0xEE6A70")]
		private void BindButton(KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xEE6E84", Offset = "0xEE6E84", VA = "0xEE6E84")]
		private void UnbindButton(KeyCode button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xEE6FBC", Offset = "0xEE6FBC", VA = "0xEE6FBC", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xEE72C0", Offset = "0xEE72C0", VA = "0xEE72C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC92BFC", Offset = "0xC92BFC")]
		private void CheckPlayerMovement()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xEE6FC0", Offset = "0xEE6FC0", VA = "0xEE6FC0")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xEE72C4", Offset = "0xEE72C4", VA = "0xEE72C4", Slot = "12")]
		public InputState GetButtonInputState(KeyCode keyCode)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x20003FF")]
	public class ButtonAxisCombination
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OVRInput.RawButton Button;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly OVRInput.RawAxis1D Axis;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92C34", Offset = "0xC92C34")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92C34", Offset = "0xC92C34")]
		private InputState <PreviousAxisInputState>k__BackingField;

		[Token(Token = "0x17000421")]
		public InputState PreviousAxisInputState
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xEE0258", Offset = "0xEE0258", VA = "0xEE0258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92C70", Offset = "0xC92C70")]
			get
			{
				return default(InputState);
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xEE0250", Offset = "0xEE0250", VA = "0xEE0250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92C80", Offset = "0xC92C80")]
			set
			{
			}
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xEE0214", Offset = "0xEE0214", VA = "0xEE0214")]
		public ButtonAxisCombination(OVRInput.RawButton button, OVRInput.RawAxis1D axis)
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class OculusGamepadInput : IPlatformInput, IPauseListenerInput<OVRInput.RawButton, ButtonAxisCombination>
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputPauseListener<OVRInput.RawButton, ButtonAxisCombination> m_inputPauseListener;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InputState[] m_previousAxis2DState;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ButtonAxisCombination m_primary;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ButtonAxisCombination m_teleport;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<OVRInput.RawAxis2D, Action<InputState>> m_axis2DBindings;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x40016F9")]
		private const OVRInput.RawButton Menu = OVRInput.RawButton.Start;

		[Token(Token = "0x40016FA")]
		private const OVRInput.RawButton Recenter = OVRInput.RawButton.A;

		[Token(Token = "0x40016FB")]
		private const OVRInput.RawAxis2D PrimaryThumbstick = OVRInput.RawAxis2D.LThumbstick;

		[Token(Token = "0x40016FC")]
		private const OVRInput.RawAxis2D SecondaryThumbstick = OVRInput.RawAxis2D.RThumbstick;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92C90", Offset = "0xC92C90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92C90", Offset = "0xC92C90")]
		private Dictionary<OVRInput.RawButton, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92CCC", Offset = "0xC92CCC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92CCC", Offset = "0xC92CCC")]
		private Dictionary<ButtonAxisCombination, Action<InputState>> <SecondaryButtonBindings>k__BackingField;

		[Token(Token = "0x17000422")]
		public Dictionary<OVRInput.RawButton, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xEE755C", Offset = "0xEE755C", VA = "0xEE755C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D08", Offset = "0xC92D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		public Dictionary<ButtonAxisCombination, Action<InputState>> SecondaryButtonBindings
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xEE7564", Offset = "0xEE7564", VA = "0xEE7564", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D18", Offset = "0xC92D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xEE756C", Offset = "0xEE756C", VA = "0xEE756C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D28", Offset = "0xC92D28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000425")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xEE75D4", Offset = "0xEE75D4", VA = "0xEE75D4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D38", Offset = "0xC92D38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000426")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xEE75DC", Offset = "0xEE75DC", VA = "0xEE75DC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D48", Offset = "0xC92D48")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000427")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xEE75E4", Offset = "0xEE75E4", VA = "0xEE75E4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D58", Offset = "0xC92D58")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xEE73B0", Offset = "0xEE73B0", VA = "0xEE73B0")]
		public OculusGamepadInput()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xEE75EC", Offset = "0xEE75EC", VA = "0xEE75EC", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xEE8328", Offset = "0xEE8328", VA = "0xEE8328", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xEE7EF0", Offset = "0xEE7EF0", VA = "0xEE7EF0")]
		private void BindButton(OVRInput.RawButton button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xEE8C2C", Offset = "0xEE8C2C", VA = "0xEE8C2C")]
		private void UnbindButton(OVRInput.RawButton button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xEE8058", Offset = "0xEE8058", VA = "0xEE8058")]
		private void BindButtonAxis(ButtonAxisCombination buttonAxis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xEE8D64", Offset = "0xEE8D64", VA = "0xEE8D64")]
		private void UnbindButtonAxis(ButtonAxisCombination buttonAxis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xEE81C0", Offset = "0xEE81C0", VA = "0xEE81C0")]
		private void BindAxis(OVRInput.RawAxis2D axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xEE8E9C", Offset = "0xEE8E9C", VA = "0xEE8E9C")]
		private void UnbindAxis(OVRInput.RawAxis2D axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xEE8FD4", Offset = "0xEE8FD4", VA = "0xEE8FD4", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xEE9000", Offset = "0xEE9000", VA = "0xEE9000")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xEE95FC", Offset = "0xEE95FC", VA = "0xEE95FC")]
		private void CheckButtonAxisBindings()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xEE9300", Offset = "0xEE9300", VA = "0xEE9300")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xEE9924", Offset = "0xEE9924", VA = "0xEE9924", Slot = "13")]
		public InputState GetButtonInputState(OVRInput.RawButton button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xEE9A1C", Offset = "0xEE9A1C", VA = "0xEE9A1C")]
		public InputState GetAxis1DInputState(OVRInput.RawAxis1D axis, InputState prevState)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xEE9BA8", Offset = "0xEE9BA8", VA = "0xEE9BA8")]
		public InputState GetAxis2DInputState(OVRInput.RawAxis2D axis, InputState prevState)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xEE9CBC", Offset = "0xEE9CBC", VA = "0xEE9CBC", Slot = "14")]
		public InputState GetSecondaryButtonInputState(ButtonAxisCombination buttonAxisCombination)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xEE9ADC", Offset = "0xEE9ADC", VA = "0xEE9ADC")]
		private InputState GetPrioritizedInputState(InputState state1, InputState state2)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000401")]
	public class OculusRemoteInput : IPlatformInput, IPauseListenerInput<KeyValuePair<OVRInput.Button, OVRInput.Controller>>
	{
		[Token(Token = "0x40016FF")]
		public const OVRInput.Controller RemoteController = OVRInput.Controller.LTrackedRemote | OVRInput.Controller.RTrackedRemote;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly KeyValuePair<OVRInput.Button, OVRInput.Controller> m_secondaryInput;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly KeyValuePair<OVRInput.Button, OVRInput.Controller> m_menuInput;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly KeyValuePair<OVRInput.Button, OVRInput.Controller> m_primaryInput;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InputPauseListener<KeyValuePair<OVRInput.Button, OVRInput.Controller>> m_inputPauseListener;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92D68", Offset = "0xC92D68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92D68", Offset = "0xC92D68")]
		private Dictionary<KeyValuePair<OVRInput.Button, OVRInput.Controller>, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x17000428")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xEE9E70", Offset = "0xEE9E70", VA = "0xEE9E70", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DA4", Offset = "0xC92DA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000429")]
		public Dictionary<KeyValuePair<OVRInput.Button, OVRInput.Controller>, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xEE9F48", Offset = "0xEE9F48", VA = "0xEE9F48", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DB4", Offset = "0xC92DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xEE9F50", Offset = "0xEE9F50", VA = "0xEE9F50", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DC4", Offset = "0xC92DC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042B")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xEE9F58", Offset = "0xEE9F58", VA = "0xEE9F58", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DD4", Offset = "0xC92DD4")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x1700042C")]
		public virtual WandInput WandInput
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xEE9F60", Offset = "0xEE9F60", VA = "0xEE9F60", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DE4", Offset = "0xC92DE4")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xEE9D30", Offset = "0xEE9D30", VA = "0xEE9D30")]
		public OculusRemoteInput()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xEE9F68", Offset = "0xEE9F68", VA = "0xEE9F68", Slot = "14")]
		public virtual void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xEE9F6C", Offset = "0xEE9F6C", VA = "0xEE9F6C", Slot = "15")]
		public virtual void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xEE9F70", Offset = "0xEE9F70", VA = "0xEE9F70")]
		protected void BindButton(KeyValuePair<OVRInput.Button, OVRInput.Controller> button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xEEA0D8", Offset = "0xEEA0D8", VA = "0xEEA0D8")]
		protected void UnbindButton(KeyValuePair<OVRInput.Button, OVRInput.Controller> button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xEEA210", Offset = "0xEEA210", VA = "0xEEA210", Slot = "16")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xEEA214", Offset = "0xEEA214", VA = "0xEEA214")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xEEA5A4", Offset = "0xEEA5A4", VA = "0xEEA5A4", Slot = "17")]
		protected virtual void CheckActions(Dictionary<Action<InputState>, InputState> actions)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xEEA418", Offset = "0xEEA418", VA = "0xEEA418", Slot = "12")]
		public InputState GetButtonInputState(KeyValuePair<OVRInput.Button, OVRInput.Controller> button)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000402")]
	public class OculusRemoteInputDirectional : OculusRemoteInput
	{
		[Token(Token = "0x4001706")]
		private const OVRInput.Touch Touch = OVRInput.Touch.PrimaryTouchpad;

		[Token(Token = "0x4001707")]
		private const OVRInput.Axis2D TouchAxis = OVRInput.Axis2D.PrimaryTouchpad;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action<InputState> m_swipeAction;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputState m_previousSwipeState;

		[Token(Token = "0x1700042D")]
		public override WandInput WandInput
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xEEA708", Offset = "0xEEA708", VA = "0xEEA708", Slot = "13")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xEEA704", Offset = "0xEEA704", VA = "0xEEA704")]
		public OculusRemoteInputDirectional()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xEEA710", Offset = "0xEEA710", VA = "0xEEA710", Slot = "14")]
		public override void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xEEAB3C", Offset = "0xEEAB3C", VA = "0xEEAB3C", Slot = "15")]
		public override void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xEEAEE4", Offset = "0xEEAEE4", VA = "0xEEAEE4", Slot = "16")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xEEAF14", Offset = "0xEEAF14", VA = "0xEEAF14")]
		private void UpdateTouchState()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xEEAF90", Offset = "0xEEAF90", VA = "0xEEAF90")]
		private InputState GetTouchState()
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xEEB0C8", Offset = "0xEEB0C8", VA = "0xEEB0C8")]
		private InputState GetStateInsideSlice(Vector2 currentPoint)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000403")]
	public class OculusRemoteInputPoint : OculusRemoteInput
	{
		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xEEB1E8", Offset = "0xEEB1E8", VA = "0xEEB1E8")]
		public OculusRemoteInputPoint()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xEEB1EC", Offset = "0xEEB1EC", VA = "0xEEB1EC", Slot = "14")]
		public override void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xEEB424", Offset = "0xEEB424", VA = "0xEEB424", Slot = "15")]
		public override void UnbindActions(IInputListener listener)
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class OculusRemoteInputSwipe : OculusRemoteInput
	{
		[Token(Token = "0x400170A")]
		private const OVRInput.Touch Touch = OVRInput.Touch.PrimaryTouchpad;

		[Token(Token = "0x400170B")]
		private const OVRInput.Axis2D TouchAxis = OVRInput.Axis2D.PrimaryTouchpad;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action<InputState> m_swipeAction;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_tick;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_firstSwipeInput;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 m_previousPoint;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<Vector2> m_swipePoints;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputState m_previousSwipeState;

		[Token(Token = "0x1700042E")]
		public override WandInput WandInput
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xEEB6C8", Offset = "0xEEB6C8", VA = "0xEEB6C8", Slot = "13")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xEEB65C", Offset = "0xEEB65C", VA = "0xEEB65C")]
		public OculusRemoteInputSwipe()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xEEB6D0", Offset = "0xEEB6D0", VA = "0xEEB6D0", Slot = "14")]
		public override void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xEEB994", Offset = "0xEEB994", VA = "0xEEB994", Slot = "15")]
		public override void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xEEBBD4", Offset = "0xEEBBD4", VA = "0xEEBBD4", Slot = "16")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xEEBC88", Offset = "0xEEBC88", VA = "0xEEBC88", Slot = "17")]
		protected override void CheckActions(Dictionary<Action<InputState>, InputState> actions)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xEEBC0C", Offset = "0xEEBC0C", VA = "0xEEBC0C")]
		private void CheckSwipeInput()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xEEBE08", Offset = "0xEEBE08", VA = "0xEEBE08")]
		private void ResetSwipe()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xEEC18C", Offset = "0xEEC18C", VA = "0xEEC18C")]
		private InputState GetStateInsideSlice(Vector2 currentPoint)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xEEC2A4", Offset = "0xEEC2A4", VA = "0xEEC2A4")]
		private InputState GetSwipeState(Vector2 currentPoint, Vector2 swipeStartPoint)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xEEBEDC", Offset = "0xEEBEDC", VA = "0xEEBEDC")]
		private InputState GetTouchState()
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000405")]
	public class OculusRemoteInputSwipeMainMenu : OculusRemoteInput
	{
		[Token(Token = "0x1700042F")]
		public override WandInput WandInput
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xEEC408", Offset = "0xEEC408", VA = "0xEEC408", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92DF4", Offset = "0xC92DF4")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xEEC404", Offset = "0xEEC404", VA = "0xEEC404")]
		public OculusRemoteInputSwipeMainMenu()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xEEC410", Offset = "0xEEC410", VA = "0xEEC410", Slot = "14")]
		public override void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xEEC5B0", Offset = "0xEEC5B0", VA = "0xEEC5B0", Slot = "15")]
		public override void UnbindActions(IInputListener listener)
		{
		}
	}
}
namespace Cortopia.Scripts.WandsInput
{
	[Token(Token = "0x2000406")]
	public class OculusRemoteTracker : MonoBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_gearVrMesh;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_goMesh;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_goMaterial;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material m_miVrMaterial;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_skipControllerRenderers;

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xF5512C", Offset = "0xF5512C", VA = "0xF5512C")]
		public OculusRemoteTracker()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xF5513C", Offset = "0xF5513C", VA = "0xF5513C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xF553A0", Offset = "0xF553A0", VA = "0xF553A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xF5545C", Offset = "0xF5545C", VA = "0xF5545C")]
		private void UpdateTransform(OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xF55578", Offset = "0xF55578", VA = "0xF55578")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xC92E54", Offset = "0xC92E54")]
		private void TrackOculusTouch()
		{
		}
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x2000407")]
	public class QuestInput : OculusTouchInput
	{
		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xEF2D34", Offset = "0xEF2D34", VA = "0xEF2D34")]
		public QuestInput(OVRInput.Controller primaryController)
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class RiftInput : OculusTouchInput
	{
		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xEF2D38", Offset = "0xEF2D38", VA = "0xEF2D38")]
		public RiftInput(OVRInput.Controller primaryController)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class OculusTouchInput : IPlatformInputTwoWands, IPauseListenerInput<OVRInput.RawButton>, IPlatformInput
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly InputPauseListener<OVRInput.RawButton> m_inputPauseListener;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InputState[] m_prevAxis;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Action<InputState>, InputState> m_actionMap;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<OVRInput.RawAxis2D, Action<InputState>> m_axisBindings;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly OVRInput.Controller m_primaryController;

		[Token(Token = "0x400171C")]
		private const OVRInput.RawButton PrimaryButtonLeft = OVRInput.RawButton.LIndexTrigger;

		[Token(Token = "0x400171D")]
		private const OVRInput.RawButton PrimaryButtonRight = OVRInput.RawButton.RIndexTrigger;

		[Token(Token = "0x400171E")]
		private const OVRInput.RawButton PointButtonLeft = OVRInput.RawButton.LHandTrigger;

		[Token(Token = "0x400171F")]
		private const OVRInput.RawButton PointButtonRight = OVRInput.RawButton.RHandTrigger;

		[Token(Token = "0x4001720")]
		private const OVRInput.RawButton MenuButton = OVRInput.RawButton.Start;

		[Token(Token = "0x4001721")]
		private const OVRInput.RawButton RecenterButtonLeft = OVRInput.RawButton.X;

		[Token(Token = "0x4001722")]
		private const OVRInput.RawButton RecenterButtonRight = OVRInput.RawButton.A;

		[Token(Token = "0x4001723")]
		private const OVRInput.RawAxis2D LeftThumbstick = OVRInput.RawAxis2D.LThumbstick;

		[Token(Token = "0x4001724")]
		private const OVRInput.RawAxis2D RightThumbstick = OVRInput.RawAxis2D.RThumbstick;

		[Token(Token = "0x4001725")]
		private const OVRInput.RawButton SpellLeft01 = OVRInput.RawButton.X;

		[Token(Token = "0x4001726")]
		private const OVRInput.RawButton SpellLeft02 = OVRInput.RawButton.Y;

		[Token(Token = "0x4001727")]
		private const OVRInput.RawButton SpellRight01 = OVRInput.RawButton.A;

		[Token(Token = "0x4001728")]
		private const OVRInput.RawButton SpellRight02 = OVRInput.RawButton.B;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92E8C", Offset = "0xC92E8C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92E8C", Offset = "0xC92E8C")]
		private AimInput <Aim>k__BackingField;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92EC8", Offset = "0xC92EC8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92EC8", Offset = "0xC92EC8")]
		private Dictionary<OVRInput.RawButton, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x17000430")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xEEC8A4", Offset = "0xEEC8A4", VA = "0xEEC8A4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F04", Offset = "0xC92F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000431")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xEEC8AC", Offset = "0xEEC8AC", VA = "0xEEC8AC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F14", Offset = "0xC92F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000432")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xEEC8B4", Offset = "0xEEC8B4", VA = "0xEEC8B4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F24", Offset = "0xC92F24")]
			get
			{
				return default(AimInput);
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xEEC89C", Offset = "0xEEC89C", VA = "0xEEC89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F34", Offset = "0xC92F34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xEEC8BC", Offset = "0xEEC8BC", VA = "0xEEC8BC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F44", Offset = "0xC92F44")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x17000434")]
		public Dictionary<OVRInput.RawButton, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xEEC8C4", Offset = "0xEEC8C4", VA = "0xEEC8C4", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F54", Offset = "0xC92F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xEEC750", Offset = "0xEEC750", VA = "0xEEC750")]
		public OculusTouchInput(OVRInput.Controller primaryController)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xEEC8CC", Offset = "0xEEC8CC", VA = "0xEEC8CC", Slot = "11")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xEED974", Offset = "0xEED974", VA = "0xEED974", Slot = "4")]
		public void BindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xEEDE88", Offset = "0xEEDE88", VA = "0xEEDE88", Slot = "12")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xEEEED0", Offset = "0xEEEED0", VA = "0xEEEED0", Slot = "5")]
		public void UnbindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xEED6A4", Offset = "0xEED6A4", VA = "0xEED6A4")]
		private void BindButton(OVRInput.RawButton button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xEEEC60", Offset = "0xEEEC60", VA = "0xEEEC60")]
		private void UnbindButton(OVRInput.RawButton button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xEED80C", Offset = "0xEED80C", VA = "0xEED80C")]
		private void BindAxis(OVRInput.RawAxis2D axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xEEED98", Offset = "0xEEED98", VA = "0xEEED98")]
		private void UnbindAxis(OVRInput.RawAxis2D axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xEEF3E4", Offset = "0xEEF3E4", VA = "0xEEF3E4", Slot = "10")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xEEF408", Offset = "0xEEF408", VA = "0xEEF408")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xEEF708", Offset = "0xEEF708", VA = "0xEEF708")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xEEFA70", Offset = "0xEEFA70", VA = "0xEEFA70", Slot = "14")]
		public InputState GetButtonInputState(OVRInput.RawButton button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xEEFB68", Offset = "0xEEFB68", VA = "0xEEFB68")]
		private InputState GetAxisInputState(OVRInput.RawAxis2D axis, InputState prevState)
		{
			return default(InputState);
		}
	}
}
namespace Cortopia.Scripts.WandsInput
{
	[Token(Token = "0x200040A")]
	public class OpenVRGamepadInput : IPlatformInput, IPauseListenerInput<SteamVR_Action_Boolean>
	{
		[Token(Token = "0x400172B")]
		private const float Half = 0.5f;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly SteamVR_Action_Boolean m_indexLeft;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SteamVR_Action_Boolean m_indexRight;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly SteamVR_Action_Boolean m_menuButton;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly SteamVR_Action_Boolean m_buttonLeft01;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly SteamVR_Action_Boolean m_buttonRight01;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly SteamVR_Action_Vector2 m_leftThumbstick;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly SteamVR_Action_Vector2 m_rightThumbstick;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly InputState[] m_prevAxis;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<SteamVR_Action_Vector2, Action<InputState>> m_axisBindings;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputPauseListener<SteamVR_Action_Boolean> m_inputPauseListener;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92F64", Offset = "0xC92F64")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC92F64", Offset = "0xC92F64")]
		private Dictionary<SteamVR_Action_Boolean, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x17000435")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xF557EC", Offset = "0xF557EC", VA = "0xF557EC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92FA0", Offset = "0xC92FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000436")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xF557F4", Offset = "0xF557F4", VA = "0xF557F4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92FB0", Offset = "0xC92FB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000437")]
		public AimInput Aim
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xF557FC", Offset = "0xF557FC", VA = "0xF557FC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92FC0", Offset = "0xC92FC0")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000438")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xF55804", Offset = "0xF55804", VA = "0xF55804", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92FD0", Offset = "0xC92FD0")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x17000439")]
		public Dictionary<SteamVR_Action_Boolean, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xF5580C", Offset = "0xF5580C", VA = "0xF5580C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC92FE0", Offset = "0xC92FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xF5557C", Offset = "0xF5557C", VA = "0xF5557C")]
		public OpenVRGamepadInput()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xF55814", Offset = "0xF55814", VA = "0xF55814", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xF56310", Offset = "0xF56310", VA = "0xF56310", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xF56DAC", Offset = "0xF56DAC", VA = "0xF56DAC", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xF56040", Offset = "0xF56040", VA = "0xF56040")]
		private void BindButton(SteamVR_Action_Boolean button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xF56B3C", Offset = "0xF56B3C", VA = "0xF56B3C")]
		private void UnbindButton(SteamVR_Action_Boolean button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xF561A8", Offset = "0xF561A8", VA = "0xF561A8")]
		private void BindAxis(SteamVR_Action_Vector2 axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xF56C74", Offset = "0xF56C74", VA = "0xF56C74")]
		private void UnbindAxis(SteamVR_Action_Vector2 axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xF56DD0", Offset = "0xF56DD0", VA = "0xF56DD0")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xF570D0", Offset = "0xF570D0", VA = "0xF570D0")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xF57438", Offset = "0xF57438", VA = "0xF57438", Slot = "12")]
		public InputState GetButtonInputState(SteamVR_Action_Boolean button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xF574BC", Offset = "0xF574BC", VA = "0xF574BC")]
		private InputState GetAxisInputState(SteamVR_Action_Vector2 axis, InputState prevState)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x200040B")]
	public class OpenVRInput : SteamInput
	{
		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xF57584", Offset = "0xF57584", VA = "0xF57584")]
		public OpenVRInput(Valve.VR.ETrackedControllerRole primaryController, StringBuilder inputStringBuilder)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xF5792C", Offset = "0xF5792C", VA = "0xF5792C", Slot = "15")]
		public override void BindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xF58434", Offset = "0xF58434", VA = "0xF58434", Slot = "17")]
		public override void BindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xF58968", Offset = "0xF58968", VA = "0xF58968", Slot = "16")]
		public override void UnbindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xF59410", Offset = "0xF59410", VA = "0xF59410", Slot = "18")]
		public override void UnbindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x200040C")]
	public class PicoController : MonoBehaviour
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_handIndex;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_trackPosition;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xEEFC7C", Offset = "0xEEFC7C", VA = "0xEEFC7C")]
		public PicoController()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xEEFC84", Offset = "0xEEFC84", VA = "0xEEFC84")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public struct PicoNeo2Key
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Hand;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool CanBeSwap;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Pvr_KeyCode Key;
	}
	[Token(Token = "0x200040E")]
	public enum AxisControl
	{
		[Token(Token = "0x400173E")]
		Left,
		[Token(Token = "0x400173F")]
		Right
	}
	[Token(Token = "0x200040F")]
	public class PicoNeo2Input : IPlatformInput, IPauseListenerInput<PicoNeo2Key>
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PicoNeo2Key PrimaryButton;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private PicoNeo2Key SecondaryButton;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PicoNeo2Key PrimaryButtonLeft;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private PicoNeo2Key PrimaryButtonRight;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PicoNeo2Key PointButtonLeft;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private PicoNeo2Key PointButtonRight;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PicoNeo2Key MenuButtonLeft;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private PicoNeo2Key MenuButtonRight;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PicoNeo2Key RecenterButtonLeft;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private PicoNeo2Key RecenterButtonRight;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PicoNeo2Key SpellLeft01;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private PicoNeo2Key SpellLeft02;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PicoNeo2Key SpellRight01;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private PicoNeo2Key SpellRight02;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InputPauseListener<PicoNeo2Key> m_inputPauseListener;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int m_handIndex;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93010", Offset = "0xC93010")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93010", Offset = "0xC93010")]
		private Dictionary<PicoNeo2Key, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly Dictionary<AxisControl, Action<InputState>> m_axis2DBindings;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly InputState[] m_previousAxis2DState;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9304C", Offset = "0xC9304C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9304C", Offset = "0xC9304C")]
		private AimInput <Aim>k__BackingField;

		[Token(Token = "0x1700043A")]
		public Dictionary<PicoNeo2Key, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xEEFF90", Offset = "0xEEFF90", VA = "0xEEFF90", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93088", Offset = "0xC93088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xEEFF98", Offset = "0xEEFF98", VA = "0xEEFF98", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93098", Offset = "0xC93098")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043C")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xEEFFA0", Offset = "0xEEFFA0", VA = "0xEEFFA0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930A8", Offset = "0xC930A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043D")]
		public AimInput Aim
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xEEFFA8", Offset = "0xEEFFA8", VA = "0xEEFFA8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930B8", Offset = "0xC930B8")]
			get
			{
				return default(AimInput);
			}
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xEEFF88", Offset = "0xEEFF88", VA = "0xEEFF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930C8", Offset = "0xC930C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xEEFFB0", Offset = "0xEEFFB0", VA = "0xEEFFB0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930D8", Offset = "0xC930D8")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x1700043F")]
		private bool IsRightHanded
		{
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xEEFF78", Offset = "0xEEFF78", VA = "0xEEFF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930E8", Offset = "0xC930E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xEEFD64", Offset = "0xEEFD64", VA = "0xEEFD64")]
		public PicoNeo2Input()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xEEFFB8", Offset = "0xEEFFB8", VA = "0xEEFFB8", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xEF0D44", Offset = "0xEF0D44", VA = "0xEF0D44")]
		public void BindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xEF12C0", Offset = "0xEF12C0", VA = "0xEF12C0", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xEF0BDC", Offset = "0xEF0BDC", VA = "0xEF0BDC")]
		private void BindAxis(AxisControl axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xEF1EAC", Offset = "0xEF1EAC", VA = "0xEF1EAC")]
		private void UnbindAxis(AxisControl axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xEF1FE4", Offset = "0xEF1FE4", VA = "0xEF1FE4")]
		public void UnbindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xEF0A50", Offset = "0xEF0A50", VA = "0xEF0A50")]
		private void BindButton(PicoNeo2Key button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xEF1D58", Offset = "0xEF1D58", VA = "0xEF1D58")]
		private void UnbindButton(PicoNeo2Key button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xEF2560", Offset = "0xEF2560", VA = "0xEF2560", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xEF2584", Offset = "0xEF2584", VA = "0xEF2584")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xEF28AC", Offset = "0xEF28AC", VA = "0xEF28AC")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xEF2BA8", Offset = "0xEF2BA8", VA = "0xEF2BA8", Slot = "12")]
		public InputState GetButtonInputState(PicoNeo2Key button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xEF2C34", Offset = "0xEF2C34", VA = "0xEF2C34")]
		private InputState GetAxisInputState(AxisControl axis, InputState prevState)
		{
			return default(InputState);
		}
	}
}
namespace Assets.Cortopia.Scripts.WandsInput
{
	[Token(Token = "0x2000410")]
	public class PlayStationDualShockInput : IPlatformInput
	{
		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93184", Offset = "0xC93184")]
		private sealed class <BindActions>c__AnonStorey0
		{
			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IInputListener listener;

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xEFC8E8", Offset = "0xEFC8E8", VA = "0xEFC8E8")]
			public <BindActions>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xEFE8B4", Offset = "0xEFE8B4", VA = "0xEFE8B4")]
			internal void <>m__0(InputState state)
			{
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xEFEA04", Offset = "0xEFEA04", VA = "0xEFEA04")]
			internal void <>m__1(InputState state)
			{
			}

			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xEFEB54", Offset = "0xEFEB54", VA = "0xEFEB54")]
			internal void <>m__2(InputState state)
			{
			}

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xEFECA4", Offset = "0xEFECA4", VA = "0xEFECA4")]
			internal void <>m__3(InputState state)
			{
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xEFEDF4", Offset = "0xEFEDF4", VA = "0xEFEDF4")]
			internal void <>m__4(InputState state)
			{
			}

			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xEFEEDC", Offset = "0xEFEEDC", VA = "0xEFEEDC")]
			internal void <>m__5(InputState state)
			{
			}

			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0xEFEFC4", Offset = "0xEFEFC4", VA = "0xEFEFC4")]
			internal void <>m__6(InputState state)
			{
			}

			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xEFF0AC", Offset = "0xEFF0AC", VA = "0xEFF0AC")]
			internal void <>m__7(InputState state)
			{
			}
		}

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly InputState[] PreviousAxis2DState;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<InputControlType, Action<InputState>> ButtonBindings;

		[Token(Token = "0x4001757")]
		private const InputControlType Menu = InputControlType.TouchPadButton;

		[Token(Token = "0x4001758")]
		private const InputControlType Recenter = InputControlType.Options;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly InputControlType[] Primary;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly InputControlType[] Teleport;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly InputControlType[] LeftAxis;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly InputControlType[] RightAxis;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputDevice inputDevice;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Dictionary<InputControlType[], Action<InputState>> ButtonCombinationBindings;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<InputControlType[], Action<InputState>> Axis2DBindings;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<InputControlType, Action<InputState>> ButtonAxisBindings;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Dictionary<Action<InputState>, InputState> buttonsActions;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Dictionary<Action<InputState>, InputState> buttonCombinationActions;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<Action<InputState>, InputState> axisActions;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC930F8", Offset = "0xC930F8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC930F8", Offset = "0xC930F8")]
		private bool <IsValidated>k__BackingField;

		[Token(Token = "0x17000440")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xEFBB70", Offset = "0xEFBB70", VA = "0xEFBB70", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000441")]
		public bool IsControllerPlugged
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xEFBB78", Offset = "0xEFBB78", VA = "0xEFBB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000442")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xEFBB80", Offset = "0xEFBB80", VA = "0xEFBB80", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93134", Offset = "0xC93134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000443")]
		public AimInput Aim
		{
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xEFBB88", Offset = "0xEFBB88", VA = "0xEFBB88", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93144", Offset = "0xC93144")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x17000444")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xEFBB90", Offset = "0xEFBB90", VA = "0xEFBB90", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93154", Offset = "0xC93154")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x17000445")]
		public bool IsValidated
		{
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xEFBB98", Offset = "0xEFBB98", VA = "0xEFBB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93164", Offset = "0xC93164")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xEFBBA0", Offset = "0xEFBBA0", VA = "0xEFBBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93174", Offset = "0xC93174")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xEFB84C", Offset = "0xEFB84C", VA = "0xEFB84C")]
		public PlayStationDualShockInput()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xEFBBAC", Offset = "0xEFBBAC", VA = "0xEFBBAC", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xEFCD28", Offset = "0xEFCD28", VA = "0xEFCD28", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xEFC8F0", Offset = "0xEFC8F0", VA = "0xEFC8F0")]
		private void BindButton(InputControlType button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xEFCA58", Offset = "0xEFCA58", VA = "0xEFCA58")]
		private void BindButtonCombination(InputControlType[] buttonCombination, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xEFCBC0", Offset = "0xEFCBC0", VA = "0xEFCBC0")]
		private void BindAxis(InputControlType[] axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xEFD7AC", Offset = "0xEFD7AC", VA = "0xEFD7AC")]
		private void UnbindButton(InputControlType button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xEFD8E4", Offset = "0xEFD8E4", VA = "0xEFD8E4")]
		private void UnbindButtonCombination(InputControlType[] buttonCombination, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xEFDA1C", Offset = "0xEFDA1C", VA = "0xEFDA1C")]
		private void UnbindAxis(InputControlType[] axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xEFDB54", Offset = "0xEFDB54", VA = "0xEFDB54", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xEFDEE8", Offset = "0xEFDEE8", VA = "0xEFDEE8")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xEFDB80", Offset = "0xEFDB80", VA = "0xEFDB80")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xEFE1EC", Offset = "0xEFE1EC", VA = "0xEFE1EC")]
		private void CheckButtonCombinationBindings()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xEFE56C", Offset = "0xEFE56C", VA = "0xEFE56C")]
		private InputState GetButtonInputState(InputControlType button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xEFE6A8", Offset = "0xEFE6A8", VA = "0xEFE6A8")]
		private static InputState GetAxis2DInputState(InputControlType[] axis, InputState prevState)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xEFE878", Offset = "0xEFE878", VA = "0xEFE878")]
		private InputState GetPrioritizedInputState(InputState state1, InputState state2)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000411")]
	public class PlayStationMotionControllerInput : IPlatformInput
	{
		[Token(Token = "0x2000412")]
		private class ButtonAssociation
		{
			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputState State;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<InputState> Action;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ControllerIndex;

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xF02318", Offset = "0xF02318", VA = "0xF02318")]
			public ButtonAssociation()
			{
			}
		}

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93220", Offset = "0xC93220")]
		private sealed class <BindActions>c__AnonStorey0
		{
			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IInputListener listener;

			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xF00B4C", Offset = "0xF00B4C", VA = "0xF00B4C")]
			public <BindActions>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xF0339C", Offset = "0xF0339C", VA = "0xF0339C")]
			internal void <>m__0(InputState state)
			{
			}

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xF035E4", Offset = "0xF035E4", VA = "0xF035E4")]
			internal void <>m__1(InputState state)
			{
			}

			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xF03734", Offset = "0xF03734", VA = "0xF03734")]
			internal void <>m__2(InputState state)
			{
			}

			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0xF03884", Offset = "0xF03884", VA = "0xF03884")]
			internal void <>m__3(InputState state)
			{
			}

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xF039D4", Offset = "0xF039D4", VA = "0xF039D4")]
			internal void <>m__4(InputState state)
			{
			}
		}

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int PrimaryControllerIndex;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int SecondaryControllerIndex;

		[Token(Token = "0x4001767")]
		private const PlayStationMoveHandler.MoveInput Menu = PlayStationMoveHandler.MoveInput.Select;

		[Token(Token = "0x4001768")]
		private const PlayStationMoveHandler.MoveInput Recenter = PlayStationMoveHandler.MoveInput.Select;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<PlayStationMoveHandler.MoveInput, ButtonAssociation>[] ButtonBindings;

		[Token(Token = "0x400176A")]
		private const PlayStationMoveHandler.MoveInput Primary = PlayStationMoveHandler.MoveInput.Trigger;

		[Token(Token = "0x400176B")]
		private const PlayStationMoveHandler.MoveInput Teleport = PlayStationMoveHandler.MoveInput.Move;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<PlayStationMoveHandler.MoveInput[], ButtonAssociation> ButtonCombinationBindings;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<PlayStationMoveHandler.MoveInput[], ButtonAssociation>[] Axis2DBindings;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<PlayStationMoveHandler.MoveInput, Action<InputState>> ButtonAxisBindings;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly PlayStationMoveHandler.MoveInput[] LeftAxis;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PlayStationMoveHandler.MoveInput[] RightAxis;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly PlayStationMoveHandler.MoveInput[] LeftAxisSecondary;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly PlayStationMoveHandler.MoveInput[] RightAxisSecondary;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly PlayStationMoveHandler.MoveInput[] DownAxis;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly PlayStationMoveHandler.MoveInput[] DownAxisSecondary;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly PlayStationMoveHandler.MoveInput[] Spell1;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly PlayStationMoveHandler.MoveInput[] Spell2;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly PlayStationMoveHandler.MoveInput[] Spell3;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly PlayStationMoveHandler.MoveInput[] Spell4;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<Action<InputState>, InputState> actionsAxisBindings;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<Action<InputState>, InputState> actionsButtonBindings;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<Action<InputState>, InputState> actionsButtonCombinationBindings;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93194", Offset = "0xC93194")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93194", Offset = "0xC93194")]
		private bool <IsValidated>k__BackingField;

		[Token(Token = "0x17000446")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xEFF734", Offset = "0xEFF734", VA = "0xEFF734", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000447")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xEFF74C", Offset = "0xEFF74C", VA = "0xEFF74C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC931D0", Offset = "0xC931D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000448")]
		public bool IsControllerPlugged
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xEFF73C", Offset = "0xEFF73C", VA = "0xEFF73C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000449")]
		public AimInput Aim
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xEFF754", Offset = "0xEFF754", VA = "0xEFF754", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC931E0", Offset = "0xC931E0")]
			get
			{
				return default(AimInput);
			}
		}

		[Token(Token = "0x1700044A")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xEFF76C", Offset = "0xEFF76C", VA = "0xEFF76C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC931F0", Offset = "0xC931F0")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x1700044B")]
		public bool IsValidated
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xEFF744", Offset = "0xEFF744", VA = "0xEFF744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93200", Offset = "0xC93200")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xEFF774", Offset = "0xEFF774", VA = "0xEFF774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93210", Offset = "0xC93210")]
			set
			{
			}
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xEFF194", Offset = "0xEFF194", VA = "0xEFF194")]
		public PlayStationMotionControllerInput(int primaryControllerIndex)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xEFF780", Offset = "0xEFF780", VA = "0xEFF780", Slot = "9")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xF00FB4", Offset = "0xF00FB4", VA = "0xF00FB4", Slot = "10")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xF00B54", Offset = "0xF00B54", VA = "0xF00B54")]
		private void BindButton(PlayStationMoveHandler.MoveInput button, int controllerIndex, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xF02320", Offset = "0xF02320", VA = "0xF02320")]
		private void BindButtonCombination(PlayStationMoveHandler.MoveInput[] buttonCombination, int controllerIndex, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xF00D74", Offset = "0xF00D74", VA = "0xF00D74")]
		private void BindAxis(PlayStationMoveHandler.MoveInput[] axis, int controllerIndex, InputState matchingState, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xF01FC8", Offset = "0xF01FC8", VA = "0xF01FC8")]
		private void UnbindButton(PlayStationMoveHandler.MoveInput button, int controllerIndex, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xF02520", Offset = "0xF02520", VA = "0xF02520")]
		private void UnbindButtonCombination(PlayStationMoveHandler.MoveInput[] buttonCombination, int controllerIndex, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xF02170", Offset = "0xF02170", VA = "0xF02170")]
		private void UnbindAxis(PlayStationMoveHandler.MoveInput[] axis, int controllerIndex, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xF026A8", Offset = "0xF026A8", VA = "0xF026A8", Slot = "8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xF02B38", Offset = "0xF02B38", VA = "0xF02B38")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xF02EF0", Offset = "0xF02EF0", VA = "0xF02EF0")]
		private void CheckButtonCombinationBindings()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xF026D4", Offset = "0xF026D4", VA = "0xF026D4")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xF032D0", Offset = "0xF032D0", VA = "0xF032D0")]
		private InputState GetPrioritizedInputState(InputState state1, InputState state2)
		{
			return default(InputState);
		}
	}
}
namespace Cortopia.Scripts.WandsInput
{
	[Token(Token = "0x2000413")]
	public static class PlayStationMoveHandler
	{
		[Token(Token = "0x2000414")]
		[Flags]
		public enum MoveInput
		{
			[Token(Token = "0x4001783")]
			Trigger = 2,
			[Token(Token = "0x4001784")]
			Move = 4,
			[Token(Token = "0x4001785")]
			Select = 8,
			[Token(Token = "0x4001786")]
			Triangle = 0x10,
			[Token(Token = "0x4001787")]
			Circle = 0x20,
			[Token(Token = "0x4001788")]
			Cross = 0x40,
			[Token(Token = "0x4001789")]
			Square = 0x80
		}

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<MoveInput, InputState>[] PrevButton;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<MoveInput, InputState>[] PrevButtonBuffered;

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xF59944", Offset = "0xF59944", VA = "0xF59944")]
		public static void Flush()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xF59CB0", Offset = "0xF59CB0", VA = "0xF59CB0")]
		public static bool GetButtonInputStateRaw(MoveInput bindingKey, int controllerIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xF59CB8", Offset = "0xF59CB8", VA = "0xF59CB8")]
		public static InputState GetButtonInputState(MoveInput bindingKey, int controllerIndex)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xF59CC0", Offset = "0xF59CC0", VA = "0xF59CC0")]
		public static InputState GetButtonInputState(MoveInput[] bindingKeys, int controllerIndex)
		{
			return default(InputState);
		}
	}
	[Token(Token = "0x2000415")]
	public abstract class SteamInput : IPlatformInputTwoWands, IPauseListenerInput<SteamVR_Action_Boolean>, IPlatformInput
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly SteamVR_Action_Boolean m_indexLeft;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly SteamVR_Action_Boolean m_indexRight;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly SteamVR_Action_Boolean m_grabLeft;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly SteamVR_Action_Boolean m_grabRight;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly SteamVR_Action_Boolean m_menuButton;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly SteamVR_Action_Boolean m_buttonLeft01;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly SteamVR_Action_Boolean m_buttonLeft02;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly SteamVR_Action_Boolean m_buttonRight01;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly SteamVR_Action_Boolean m_buttonRight02;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly SteamVR_Action_Vector2 m_leftThumbstick;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly SteamVR_Action_Vector2 m_rightThumbstick;

		[Token(Token = "0x4001795")]
		private const float Half = 0.5f;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly StringBuilder m_inputStringBuilder;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly StringBuilder m_compareInputStringBuilder;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly InputState[] m_prevAxis;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<SteamVR_Action_Vector2, Action<InputState>> m_axisBindings;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<Action<InputState>, InputState> m_actions;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Valve.VR.ETrackedControllerRole m_primaryController;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InputPauseListener<SteamVR_Action_Boolean> m_inputPauseListener;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93240", Offset = "0xC93240")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93240", Offset = "0xC93240")]
		private AimInput <Aim>k__BackingField;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9327C", Offset = "0xC9327C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9327C", Offset = "0xC9327C")]
		private Dictionary<SteamVR_Action_Boolean, Action<InputState>> <ButtonBindings>k__BackingField;

		[Token(Token = "0x1700044C")]
		public bool IsCorrectInputSystem
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xF5A464", Offset = "0xF5A464", VA = "0xF5A464", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC932B8", Offset = "0xC932B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044D")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xF5A648", Offset = "0xF5A648", VA = "0xF5A648", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC932C8", Offset = "0xC932C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044E")]
		public AimInput Aim
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xF5A650", Offset = "0xF5A650", VA = "0xF5A650", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC932D8", Offset = "0xC932D8")]
			get
			{
				return default(AimInput);
			}
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xF5A45C", Offset = "0xF5A45C", VA = "0xF5A45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC932E8", Offset = "0xC932E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public WandInput WandInput
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xF5A658", Offset = "0xF5A658", VA = "0xF5A658", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC932F8", Offset = "0xC932F8")]
			get
			{
				return default(WandInput);
			}
		}

		[Token(Token = "0x17000450")]
		public Dictionary<SteamVR_Action_Boolean, Action<InputState>> ButtonBindings
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xF5A660", Offset = "0xF5A660", VA = "0xF5A660", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93308", Offset = "0xC93308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xF57588", Offset = "0xF57588", VA = "0xF57588")]
		public SteamInput(Valve.VR.ETrackedControllerRole primaryController, StringBuilder inputStringBuilder)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xF5A668", Offset = "0xF5A668", VA = "0xF5A668", Slot = "11")]
		public void BindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xF5ABD4", Offset = "0xF5ABD4", VA = "0xF5ABD4", Slot = "12")]
		public void UnbindActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EEC")]
		public abstract void BindDefaultActions(IInputListener listener);

		[Token(Token = "0x6001EED")]
		public abstract void UnbindDefaultActions(IInputListener listener);

		[Token(Token = "0x6001EEE")]
		public abstract void BindSpellButtonActions(IInputListenerTwoWands listener);

		[Token(Token = "0x6001EEF")]
		public abstract void UnbindSpellButtonActions(IInputListenerTwoWands listener);

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xF5B140", Offset = "0xF5B140", VA = "0xF5B140", Slot = "10")]
		public void Update()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xF58164", Offset = "0xF58164", VA = "0xF58164")]
		protected void BindButton(SteamVR_Action_Boolean button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xF591A0", Offset = "0xF591A0", VA = "0xF591A0")]
		protected void UnbindButton(SteamVR_Action_Boolean button, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xF582CC", Offset = "0xF582CC", VA = "0xF582CC")]
		protected void BindAxis(SteamVR_Action_Vector2 axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xF592D8", Offset = "0xF592D8", VA = "0xF592D8")]
		protected void UnbindAxis(SteamVR_Action_Vector2 axis, Action<InputState> action)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xF5B164", Offset = "0xF5B164", VA = "0xF5B164")]
		private void CheckButtonBindings()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xF5B464", Offset = "0xF5B464", VA = "0xF5B464")]
		private void CheckAxisBindings()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xF5B7CC", Offset = "0xF5B7CC", VA = "0xF5B7CC", Slot = "14")]
		public InputState GetButtonInputState(SteamVR_Action_Boolean button)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xF5B850", Offset = "0xF5B850", VA = "0xF5B850")]
		private InputState GetAxisInputState(SteamVR_Action_Vector2 axis, InputState prevState)
		{
			return default(InputState);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xF5A468", Offset = "0xF5A468", VA = "0xF5A468")]
		private bool IsControllerConnected()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000416")]
	public class ViveControllerInput : SteamInput
	{
		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xF5B918", Offset = "0xF5B918", VA = "0xF5B918")]
		public ViveControllerInput(Valve.VR.ETrackedControllerRole primaryController, StringBuilder inputStringBuilder)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xF5B91C", Offset = "0xF5B91C", VA = "0xF5B91C", Slot = "15")]
		public override void BindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xF5C154", Offset = "0xF5C154", VA = "0xF5C154", Slot = "17")]
		public override void BindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xF5C688", Offset = "0xF5C688", VA = "0xF5C688", Slot = "16")]
		public override void UnbindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xF5CEC0", Offset = "0xF5CEC0", VA = "0xF5CEC0", Slot = "18")]
		public override void UnbindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}
	}
}
namespace Assets.Scripts.WandsInput
{
	[Token(Token = "0x2000417")]
	public class WandsDebugInput : MonoBehaviour
	{
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xEF2D3C", Offset = "0xEF2D3C", VA = "0xEF2D3C")]
		public WandsDebugInput()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class WandsInputManager
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPlatformInput m_platformInput;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IInputListener m_inputListener;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93318", Offset = "0xC93318")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93318", Offset = "0xC93318")]
		private bool <IsInputLocked>k__BackingField;

		[Token(Token = "0x17000451")]
		public bool IsInputLocked
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xEF2D4C", Offset = "0xEF2D4C", VA = "0xEF2D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93354", Offset = "0xC93354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xEF2D54", Offset = "0xEF2D54", VA = "0xEF2D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93364", Offset = "0xC93364")]
			private set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public bool IsAutoTeleportEnabled
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xEF2D60", Offset = "0xEF2D60", VA = "0xEF2D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93374", Offset = "0xC93374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000453")]
		public bool IsDualWandInputListener
		{
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xEF2E14", Offset = "0xEF2E14", VA = "0xEF2E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93384", Offset = "0xC93384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xEF2D44", Offset = "0xEF2D44", VA = "0xEF2D44")]
		public WandsInputManager()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xEF2E70", Offset = "0xEF2E70", VA = "0xEF2E70")]
		public void EnableInputLock()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xEF2E7C", Offset = "0xEF2E7C", VA = "0xEF2E7C")]
		public void DisableInputLock()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xEF2E84", Offset = "0xEF2E84", VA = "0xEF2E84")]
		public void TryUpdateInputMethod()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xEF317C", Offset = "0xEF317C", VA = "0xEF317C")]
		public void UpdateInputMethod()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xEF2F98", Offset = "0xEF2F98", VA = "0xEF2F98")]
		private void SetInputMethod(IPlatformInput platformInput)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xEF32B8", Offset = "0xEF32B8", VA = "0xEF32B8")]
		public void SetInputListener(IInputListener listener)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xEF33E0", Offset = "0xEF33E0", VA = "0xEF33E0")]
		public void SetWandManager(WandManager wandManager)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xEF3318", Offset = "0xEF3318", VA = "0xEF3318")]
		private void StartListening(IInputListener listener)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xEF3308", Offset = "0xEF3308", VA = "0xEF3308")]
		public void StopCurrentListener()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xEF31E4", Offset = "0xEF31E4", VA = "0xEF31E4")]
		private void StopListening(IInputListener listener)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xEF350C", Offset = "0xEF350C", VA = "0xEF350C")]
		public void Update()
		{
		}
	}
}
namespace Cortopia.Scripts.WandsInput
{
	[Token(Token = "0x2000419")]
	public class WindowsMixedRealityInput : SteamInput
	{
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xF5D3F4", Offset = "0xF5D3F4", VA = "0xF5D3F4")]
		public WindowsMixedRealityInput(Valve.VR.ETrackedControllerRole primaryController, StringBuilder inputStringBuilder)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xF5D3F8", Offset = "0xF5D3F8", VA = "0xF5D3F8", Slot = "15")]
		public override void BindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xF5DC30", Offset = "0xF5DC30", VA = "0xF5DC30", Slot = "17")]
		public override void BindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xF5E164", Offset = "0xF5E164", VA = "0xF5E164", Slot = "16")]
		public override void UnbindDefaultActions(IInputListener listener)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xF5E99C", Offset = "0xF5E99C", VA = "0xF5E99C", Slot = "18")]
		public override void UnbindSpellButtonActions(IInputListenerTwoWands listener)
		{
		}
	}
}
[Token(Token = "0x200041A")]
public sealed class WandsPrefs
{
	[Token(Token = "0x40017A2")]
	public const string MUSIC_OPTIONAL = "MO";

	[Token(Token = "0x40017A3")]
	public const string SUBTITLES_ENABLED = "SE";

	[Token(Token = "0x40017A4")]
	public const string VOIP_ENABLED = "VE";

	[Token(Token = "0x40017A5")]
	public const string VOIP_ENABLED_OPP = "VEO";

	[Token(Token = "0x40017A6")]
	public const string PRIMARY_HAND = "P1";

	[Token(Token = "0x40017A7")]
	public const string WAND_GRIP = "WG";

	[Token(Token = "0x40017A8")]
	public const string POSITIONAL_TRACKING_OPPONENT = "PTO";

	[Token(Token = "0x40017A9")]
	public const string CONTROL_SCHEME = "CS";

	[Token(Token = "0x40017AA")]
	public const string DUAL_WIELD = "DW";

	[Token(Token = "0x40017AB")]
	public const string TUTORIAL = "TU";

	[Token(Token = "0x40017AC")]
	public const string POST_TUTORIAL_TYPE = "PTT";

	[Token(Token = "0x40017AD")]
	public const string PRE_TUTORIAL = "PT";

	[Token(Token = "0x40017AE")]
	public const string CHARACTER_INDEX = "V0";

	[Token(Token = "0x40017AF")]
	public const string WAND_INDEX_RIGHT = "V1";

	[Token(Token = "0x40017B0")]
	public const string WAND_INDEX_LEFT = "V3";

	[Token(Token = "0x40017B1")]
	public const string TITLE = "V2";

	[Token(Token = "0x6001F15")]
	[Address(RVA = "0x26C5994", Offset = "0x26C5994", VA = "0x26C5994")]
	public WandsPrefs()
	{
	}
}
[Token(Token = "0x200041B")]
public static class WandsSave
{
	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sm_isSaving;

	[Token(Token = "0x40017B3")]
	private const int MaximumTextlength = 64;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93394", Offset = "0xC93394")]
	private static Action <>f__am$cache0;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC933A4", Offset = "0xC933A4")]
	private static Action<Task> <>f__am$cache1;

	[Token(Token = "0x17000454")]
	public static bool IsDualWieldEnabled
	{
		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x26C599C", Offset = "0x26C599C", VA = "0x26C599C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x26C5ACC", Offset = "0x26C5ACC", VA = "0x26C5ACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000455")]
	public static WandGrip WandGrip
	{
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x26C5BBC", Offset = "0x26C5BBC", VA = "0x26C5BBC")]
		get
		{
			return default(WandGrip);
		}
		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x26C5CD4", Offset = "0x26C5CD4", VA = "0x26C5CD4")]
		set
		{
		}
	}

	[Token(Token = "0x6001F1A")]
	[Address(RVA = "0x26C5DC4", Offset = "0x26C5DC4", VA = "0x26C5DC4")]
	public static void SetPlayerPref(string key, string value)
	{
	}

	[Token(Token = "0x6001F1B")]
	[Address(RVA = "0x26C5D44", Offset = "0x26C5D44", VA = "0x26C5D44")]
	public static void SetPlayerPref(string key, int value)
	{
	}

	[Token(Token = "0x6001F1C")]
	[Address(RVA = "0x26C5B3C", Offset = "0x26C5B3C", VA = "0x26C5B3C")]
	public static void SetPlayerPref(string key, bool value)
	{
	}

	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0x26C6110", Offset = "0x26C6110", VA = "0x26C6110")]
	public static void SetPlayerPref(string key, float value)
	{
	}

	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0x26C6190", Offset = "0x26C6190", VA = "0x26C6190")]
	public static bool HasPlayerPref(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F1F")]
	[Address(RVA = "0x26C619C", Offset = "0x26C619C", VA = "0x26C619C")]
	public static string GetStringPref(string key, [Optional] string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6001F20")]
	[Address(RVA = "0x26C5C74", Offset = "0x26C5C74", VA = "0x26C5C74")]
	public static int GetIntPref(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6001F21")]
	[Address(RVA = "0x26C5A68", Offset = "0x26C5A68", VA = "0x26C5A68")]
	public static bool GetBoolPref(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x26C61FC", Offset = "0x26C61FC", VA = "0x26C61FC")]
	public static float GetFloatPref(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6001F23")]
	[Address(RVA = "0x26C5EE0", Offset = "0x26C5EE0", VA = "0x26C5EE0")]
	public static void Save()
	{
	}

	[Token(Token = "0x6001F25")]
	[Address(RVA = "0x26C626C", Offset = "0x26C626C", VA = "0x26C626C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC933B4", Offset = "0xC933B4")]
	private static void <Save>m__0()
	{
	}

	[Token(Token = "0x6001F26")]
	[Address(RVA = "0x26C631C", Offset = "0x26C631C", VA = "0x26C631C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC933C4", Offset = "0xC933C4")]
	private static void <Save>m__1(Task _)
	{
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x200041C")]
	public class WandsSceneManager : MonoBehaviour
	{
		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Level m_currentLevel;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Level m_previousLevel;

		[Token(Token = "0x17000456")]
		public Level PreviousLevel
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xEF3668", Offset = "0xEF3668", VA = "0xEF3668")]
			get
			{
				return default(Level);
			}
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xEF3660", Offset = "0xEF3660", VA = "0xEF3660")]
		public WandsSceneManager()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xEF3670", Offset = "0xEF3670", VA = "0xEF3670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xEF36FC", Offset = "0xEF36FC", VA = "0xEF36FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xEF3788", Offset = "0xEF3788", VA = "0xEF3788")]
		private void SceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xEF3880", Offset = "0xEF3880", VA = "0xEF3880")]
		private void ParseScene(string activeSceneName)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xEF397C", Offset = "0xEF397C", VA = "0xEF397C")]
		public Level GetCurrentLevel(bool callBeforeLevelLoaded = false)
		{
			return default(Level);
		}
	}
}
namespace Assets.Scripts.Workshop
{
	[Token(Token = "0x200041D")]
	public class InputImageHandler : MonoBehaviour
	{
		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_renderer;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_controllerEventToken;

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xEF39DC", Offset = "0xEF39DC", VA = "0xEF39DC")]
		public InputImageHandler()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xEF39E4", Offset = "0xEF39E4", VA = "0xEF39E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xEF3A5C", Offset = "0xEF3A5C", VA = "0xEF3A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xEF3B18", Offset = "0xEF3B18", VA = "0xEF3B18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xEF4408", Offset = "0xEF4408", VA = "0xEF4408")]
		private void OnControllerConnectionStatusChanged(InputEvents.ControllerConnectionStatusChanged eventData)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xEF3B1C", Offset = "0xEF3B1C", VA = "0xEF3B1C")]
		private void ShowCorrectImage()
		{
		}
	}
}
namespace Assets.Scripts
{
	[Token(Token = "0x200041E")]
	public class PortalHandler : MonoSingleton<PortalHandler>
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_toggleActiveOnOpen;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_toggleActiveOnClose;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC93404", Offset = "0xC93404")]
		[SerializeField]
		private SplitAudioSoundPlayer m_portalEffectHolder;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_portalMatchStart;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_lvlIndex;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_portalVfx;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93460", Offset = "0xC93460")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93460", Offset = "0xC93460")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9349C", Offset = "0xC9349C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9349C", Offset = "0xC9349C")]
		private JoinState <JoinState>k__BackingField;

		[Token(Token = "0x17000457")]
		public bool IsActive
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xEA23FC", Offset = "0xEA23FC", VA = "0xEA23FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC934D8", Offset = "0xC934D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xEA2404", Offset = "0xEA2404", VA = "0xEA2404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC934E8", Offset = "0xC934E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public JoinState JoinState
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xEA2410", Offset = "0xEA2410", VA = "0xEA2410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC934F8", Offset = "0xC934F8")]
			get
			{
				return default(JoinState);
			}
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xEA2418", Offset = "0xEA2418", VA = "0xEA2418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93508", Offset = "0xC93508")]
			private set
			{
			}
		}

		[Token(Token = "0x17000459")]
		private Arena SelectedLevel
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xEA2420", Offset = "0xEA2420", VA = "0xEA2420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93518", Offset = "0xC93518")]
			get
			{
				return default(Arena);
			}
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xEA2384", Offset = "0xEA2384", VA = "0xEA2384")]
		public PortalHandler()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xEA2428", Offset = "0xEA2428", VA = "0xEA2428")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xEA2450", Offset = "0xEA2450", VA = "0xEA2450")]
		private void SpawnPortalVfx()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xEA26A4", Offset = "0xEA26A4", VA = "0xEA26A4")]
		public void PlayStartMatchSound()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xEA2784", Offset = "0xEA2784", VA = "0xEA2784")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xEA2838", Offset = "0xEA2838", VA = "0xEA2838")]
		public void SetPortalEffectActive(bool enable, bool effectOnly = false)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xEA2C48", Offset = "0xEA2C48", VA = "0xEA2C48")]
		public void SetJoinState(JoinState newState)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xEA2C50", Offset = "0xEA2C50", VA = "0xEA2C50")]
		public bool LoadLevel(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xEA2550", Offset = "0xEA2550", VA = "0xEA2550")]
		public void SetMirrorActive(bool enable)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xEA2C60", Offset = "0xEA2C60", VA = "0xEA2C60")]
		public bool TryStartMatch(bool multiplayer)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Workshop
{
	[Token(Token = "0x200041F")]
	public class WorkshopElevator : MonoBehaviour
	{
		[Token(Token = "0x40017C2")]
		private const float MoveTime = 0f;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 StartPosition;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 EndPosition;

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xEF4448", Offset = "0xEF4448", VA = "0xEF4448")]
		public WorkshopElevator()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xEF44EC", Offset = "0xEF44EC", VA = "0xEF44EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xEF45AC", Offset = "0xEF45AC", VA = "0xEF45AC")]
		private void MoveElevator()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xEF47A0", Offset = "0xEF47A0", VA = "0xEF47A0")]
		private void OnMoveCompleted()
		{
		}
	}
}
namespace Assets.Scripts.Network
{
	[Token(Token = "0x2000420")]
	public class WorkshopManager : MonoBehaviour
	{
		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC936BC", Offset = "0xC936BC")]
		private sealed class <LoadLobbyAndStartMatch>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x17000663")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CD8")]
				[Address(RVA = "0xE08A48", Offset = "0xE08A48", VA = "0xE08A48", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000664")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD9")]
				[Address(RVA = "0xE08A50", Offset = "0xE08A50", VA = "0xE08A50", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xE07C8C", Offset = "0xE07C8C", VA = "0xE07C8C")]
			[DebuggerHidden]
			public <LoadLobbyAndStartMatch>c__Iterator0()
			{
			}

			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xE088E8", Offset = "0xE088E8", VA = "0xE088E8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xE08A58", Offset = "0xE08A58", VA = "0xE08A58", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xE08A6C", Offset = "0xE08A6C", VA = "0xE08A6C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9371C", Offset = "0xC9371C")]
		private sealed class <LoadArenaAndStartExploration>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Arena explorationArena;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000665")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CDE")]
				[Address(RVA = "0xE08860", Offset = "0xE08860", VA = "0xE08860", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000666")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CDF")]
				[Address(RVA = "0xE08868", Offset = "0xE08868", VA = "0xE08868", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xE07D00", Offset = "0xE07D00", VA = "0xE07D00")]
			[DebuggerHidden]
			public <LoadArenaAndStartExploration>c__Iterator1()
			{
			}

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xE086F4", Offset = "0xE086F4", VA = "0xE086F4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xE08870", Offset = "0xE08870", VA = "0xE08870", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xE08884", Offset = "0xE08884", VA = "0xE08884", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40017C5")]
		private const float MaxRoomUpdateWaitTime = 5f;

		[Token(Token = "0x40017C6")]
		private const int MaxRoomPings = 2;

		[Token(Token = "0x40017C7")]
		private const string NoInternetConnectionTerm = "NoInternetConnection";

		[Token(Token = "0x40017C8")]
		private const string ConnectionFailedTerm = "ConnectionFailed";

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventToken m_connectToMatchEventToken;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_connectedToMatchRoomEventToken;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_receivedRoomListUpdateEventToken;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_connectToMatchRoomFailedEventToken;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_connectToMatchLobbyFailedEventToken;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_levelInitializedEventToken;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_photonPlayerConnectedEventToken;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_photonConnectionFailedEventToken;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_sceneLoadedEventToken;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93528", Offset = "0xC93528")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93528", Offset = "0xC93528")]
		private bool <IsUpdatingMatches>k__BackingField;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93564", Offset = "0xC93564")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93564", Offset = "0xC93564")]
		private bool <WasMatchUpdateSuccessful>k__BackingField;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC935A0", Offset = "0xC935A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC935A0", Offset = "0xC935A0")]
		private bool <FirstEntraceInWorkshop>k__BackingField;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC935DC", Offset = "0xC935DC")]
		private static Func<RoomInfo, bool> <>f__am$cache0;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC935EC", Offset = "0xC935EC")]
		private static Func<RoomInfo, bool> <>f__am$cache1;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC935FC", Offset = "0xC935FC")]
		private static Func<RoomInfo, bool> <>f__am$cache2;

		[Token(Token = "0x1700045A")]
		public bool IsUpdatingMatches
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xE06D04", Offset = "0xE06D04", VA = "0xE06D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9360C", Offset = "0xC9360C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xE06D0C", Offset = "0xE06D0C", VA = "0xE06D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9361C", Offset = "0xC9361C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public bool WasMatchUpdateSuccessful
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xE06D18", Offset = "0xE06D18", VA = "0xE06D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9362C", Offset = "0xC9362C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xE06D20", Offset = "0xE06D20", VA = "0xE06D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9363C", Offset = "0xC9363C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public bool FirstEntraceInWorkshop
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xE06D2C", Offset = "0xE06D2C", VA = "0xE06D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9364C", Offset = "0xC9364C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xE06D34", Offset = "0xE06D34", VA = "0xE06D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9365C", Offset = "0xC9365C")]
			set
			{
			}
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xE06CFC", Offset = "0xE06CFC", VA = "0xE06CFC")]
		public WorkshopManager()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xE06D40", Offset = "0xE06D40", VA = "0xE06D40")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xE07048", Offset = "0xE07048", VA = "0xE07048")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xE071B8", Offset = "0xE071B8", VA = "0xE071B8")]
		private void OnConnectToMatch(Events.ConnectToMatch eventData)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xE07414", Offset = "0xE07414", VA = "0xE07414")]
		private void OnConnectedToMatchRoom(Events.ConnectedToMatchRoom eventData)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xE07550", Offset = "0xE07550", VA = "0xE07550")]
		private void OnReceivedRoomUpdate(Events.ReceivedRoomListUpdate eventData)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xE07924", Offset = "0xE07924", VA = "0xE07924")]
		private void OnConnectToMatchRoomFailed(Events.ConnectToMatchRoomFailed eventData)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xE07A2C", Offset = "0xE07A2C", VA = "0xE07A2C")]
		private void OnConnectToMatchLobbyFailed(Events.ConnectToMatchLobbyFailed eventData)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xE07AB4", Offset = "0xE07AB4", VA = "0xE07AB4")]
		private void OnError()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xE079A8", Offset = "0xE079A8", VA = "0xE079A8")]
		private void ResetPortalAfterError(string errorMessage)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xE07C30", Offset = "0xE07C30", VA = "0xE07C30")]
		[DebuggerHidden]
		private IEnumerator LoadLobbyAndStartMatch()
		{
			return null;
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xE07C94", Offset = "0xE07C94", VA = "0xE07C94")]
		[DebuggerHidden]
		private IEnumerator LoadArenaAndStartExploration(Arena explorationArena)
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xE07D08", Offset = "0xE07D08", VA = "0xE07D08")]
		private void OnSceneLoaded(Events.SceneLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xE07B78", Offset = "0xE07B78", VA = "0xE07B78")]
		private void SceneLoaded()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xE07D0C", Offset = "0xE07D0C", VA = "0xE07D0C")]
		public void UpdatePrivateMatches()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xE07680", Offset = "0xE07680", VA = "0xE07680")]
		private void CheckRooms(RoomInfo[] roomList)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xE07E38", Offset = "0xE07E38", VA = "0xE07E38")]
		private void OnLevelInitialized(Events.LevelInitializedEvent eventData)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xE07ECC", Offset = "0xE07ECC", VA = "0xE07ECC")]
		private void OnAnyPhotonPlayerConnected(NetworkEvents.PhotonPlayerConnectedEvent eventData)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xE07EE4", Offset = "0xE07EE4", VA = "0xE07EE4")]
		private void PhotonPlayerConnected(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xE07F4C", Offset = "0xE07F4C", VA = "0xE07F4C")]
		private void OnPhotonConnectionFailed(NetworkEvents.PhotonConnectionFailedEvent eventData)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xE07FD0", Offset = "0xE07FD0", VA = "0xE07FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9368C", Offset = "0xC9368C")]
		private static bool <CheckRooms>m__0(RoomInfo room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xE08504", Offset = "0xE08504", VA = "0xE08504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9369C", Offset = "0xC9369C")]
		private static bool <CheckRooms>m__1(RoomInfo room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xE085FC", Offset = "0xE085FC", VA = "0xE085FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC936AC", Offset = "0xC936AC")]
		private static bool <CheckRooms>m__2(RoomInfo room)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Workshop
{
	[Token(Token = "0x2000421")]
	public class WorkshopTeleportHandler : MonoBehaviour
	{
		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC937BC", Offset = "0xC937BC")]
		private sealed class <Teleport>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WaitForEndOfFrame <endOfFrameWait>__0;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal WorkshopTeleportHandler $this;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000667")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CE4")]
				[Address(RVA = "0xEF4FDC", Offset = "0xEF4FDC", VA = "0xEF4FDC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000668")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CE5")]
				[Address(RVA = "0xEF4FE4", Offset = "0xEF4FE4", VA = "0xEF4FE4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xEF4CBC", Offset = "0xEF4CBC", VA = "0xEF4CBC")]
			[DebuggerHidden]
			public <Teleport>c__Iterator0()
			{
			}

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xEF4CC4", Offset = "0xEF4CC4", VA = "0xEF4CC4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xEF4FEC", Offset = "0xEF4FEC", VA = "0xEF4FEC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0xEF5000", Offset = "0xEF5000", VA = "0xEF5000", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_teleportFadeTime;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_teleportStartTime;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_teleportStartPosition;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_teleportEndPosition;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_teleportDistance;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_teleportAcceleration;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isTeleporting;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_playerTransform;

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xEF480C", Offset = "0xEF480C", VA = "0xEF480C")]
		public WorkshopTeleportHandler()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xEF4820", Offset = "0xEF4820", VA = "0xEF4820")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xEF49A8", Offset = "0xEF49A8", VA = "0xEF49A8")]
		public void TeleportPlayer(Transform playerTransform, WorkshopTile newTile)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xEF4A4C", Offset = "0xEF4A4C", VA = "0xEF4A4C")]
		private void SetTeleportVariables(WorkshopTile newTile)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xEF4C50", Offset = "0xEF4C50", VA = "0xEF4C50")]
		[DebuggerHidden]
		private IEnumerator Teleport()
		{
			return null;
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xEF4830", Offset = "0xEF4830", VA = "0xEF4830")]
		private void TeleportTransport()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class WorkshopTile : Interactable
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WorkshopTileManager m_workshopTileManager;

		[Token(Token = "0x1700045D")]
		public bool IsOccupied
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xEF506C", Offset = "0xEF506C", VA = "0xEF506C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9382C", Offset = "0xC9382C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xEF5064", Offset = "0xEF5064", VA = "0xEF5064")]
		public WorkshopTile()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xEF5188", Offset = "0xEF5188", VA = "0xEF5188")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xEF524C", Offset = "0xEF524C", VA = "0xEF524C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xEF52EC", Offset = "0xEF52EC", VA = "0xEF52EC", Slot = "4")]
		public override void LookEnter()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xEF5434", Offset = "0xEF5434", VA = "0xEF5434", Slot = "5")]
		public override void LookExit()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xEF54F4", Offset = "0xEF54F4", VA = "0xEF54F4", Slot = "6")]
		public override void Interact()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class WorkshopTileManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		public class WorkshopTileToggle
		{
			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorkshopTile m_workshopTile;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool[] m_enableInteractions;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool[] m_enalbeObjects;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject[] m_objects;

			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IWorkshopTileListener[] WorkshopTileListeners;

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xEF659C", Offset = "0xEF659C", VA = "0xEF659C")]
			public WorkshopTileToggle()
			{
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xEF5B70", Offset = "0xEF5B70", VA = "0xEF5B70")]
			public void UpdateWorkshopTileListeners()
			{
			}
		}

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorkshopTile m_startTile;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WorkshopTeleportHandler m_workshopTeleportHandler;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WorkshopTileToggle[] m_allTileToggles;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<WorkshopTile, WorkshopTileToggle> m_tileToggleDictionary;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_tileMaterial;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WorkshopTile[] m_allTiles;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WorkshopTile m_currentTile;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9386C", Offset = "0xC9386C")]
		private static Func<WorkshopTileToggle, WorkshopTile> <>f__am$cache0;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9387C", Offset = "0xC9387C")]
		private static Func<WorkshopTile, bool> <>f__am$cache1;

		[Token(Token = "0x1700045E")]
		private WorkshopTile[] AllTiles
		{
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xEF56F4", Offset = "0xEF56F4", VA = "0xEF56F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		public WorkshopTile CurrentTile
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xEF50F8", Offset = "0xEF50F8", VA = "0xEF50F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xEF580C", Offset = "0xEF580C", VA = "0xEF580C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xEF56EC", Offset = "0xEF56EC", VA = "0xEF56EC")]
		public WorkshopTileManager()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xEF58BC", Offset = "0xEF58BC", VA = "0xEF58BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xEF5900", Offset = "0xEF5900", VA = "0xEF5900")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xEF617C", Offset = "0xEF617C", VA = "0xEF617C")]
		private void MatchPlayerRotationWithStartTile()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xEF61CC", Offset = "0xEF61CC", VA = "0xEF61CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xEF6080", Offset = "0xEF6080", VA = "0xEF6080")]
		private void MoveToStartTile()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xEF5D54", Offset = "0xEF5D54", VA = "0xEF5D54")]
		private void MoveToPortalTile()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xEF5CB8", Offset = "0xEF5CB8", VA = "0xEF5CB8")]
		private void SetTileMaterialColor(Color color)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xEF554C", Offset = "0xEF554C", VA = "0xEF554C")]
		public void TeleportPlayer(WorkshopTile newTile)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xEF61D4", Offset = "0xEF61D4", VA = "0xEF61D4")]
		private void ToggleObjects(WorkshopTile newTile)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xEF6500", Offset = "0xEF6500", VA = "0xEF6500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9388C", Offset = "0xC9388C")]
		private static WorkshopTile <get_AllTiles>m__0(WorkshopTileToggle t)
		{
			return null;
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xEF6528", Offset = "0xEF6528", VA = "0xEF6528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9389C", Offset = "0xC9389C")]
		private static bool <MoveToPortalTile>m__1(WorkshopTile t)
		{
			return default(bool);
		}
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x2000425")]
	[ExecuteInEditMode]
	public class CameraSaturationHandler : MonoBehaviour
	{
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9390C", Offset = "0xC9390C")]
		private sealed class <SaturateCamera>c__AnonStorey0
		{
			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action onCompleted;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool value;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal CameraSaturationHandler $this;

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xED456C", Offset = "0xED456C", VA = "0xED456C")]
			public <SaturateCamera>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0xED4584", Offset = "0xED4584", VA = "0xED4584")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x40017F1")]
		private const string ShaderName = "Hidden/Desaturation";

		[Token(Token = "0x40017F2")]
		private const string DesaturationProperty = "_desaturation";

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC938BC", Offset = "0xC938BC")]
		private float m_saturation;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_material;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween m_tween;

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xED4160", Offset = "0xED4160", VA = "0xED4160")]
		public CameraSaturationHandler()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xED4170", Offset = "0xED4170", VA = "0xED4170")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xED4404", Offset = "0xED4404", VA = "0xED4404")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xED4208", Offset = "0xED4208", VA = "0xED4208")]
		public void SaturateCamera(bool value, Action onCompleted)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xED4574", Offset = "0xED4574", VA = "0xED4574")]
		private float GetSaturation()
		{
			return default(float);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xED457C", Offset = "0xED457C", VA = "0xED457C")]
		private void SetSaturation(float value)
		{
		}
	}
}
namespace MIVR
{
	[Token(Token = "0x2000426")]
	public class AccountInfo
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9391C", Offset = "0xC9391C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9391C", Offset = "0xC9391C")]
		private string <OpenId>k__BackingField;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93958", Offset = "0xC93958")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93958", Offset = "0xC93958")]
		private string <SessionId>k__BackingField;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93994", Offset = "0xC93994")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93994", Offset = "0xC93994")]
		private string <NickName>k__BackingField;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC939D0", Offset = "0xC939D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC939D0", Offset = "0xC939D0")]
		private string <Avatar>k__BackingField;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A0C", Offset = "0xC93A0C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93A0C", Offset = "0xC93A0C")]
		private string <Gender>k__BackingField;

		[Token(Token = "0x17000460")]
		public string OpenId
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xF6BA18", Offset = "0xF6BA18", VA = "0xF6BA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A48", Offset = "0xC93A48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xF6BA20", Offset = "0xF6BA20", VA = "0xF6BA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A58", Offset = "0xC93A58")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public string SessionId
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xF6BA28", Offset = "0xF6BA28", VA = "0xF6BA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A68", Offset = "0xC93A68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xF6BA30", Offset = "0xF6BA30", VA = "0xF6BA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A78", Offset = "0xC93A78")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public string NickName
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xF6BA38", Offset = "0xF6BA38", VA = "0xF6BA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A88", Offset = "0xC93A88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xF6BA40", Offset = "0xF6BA40", VA = "0xF6BA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93A98", Offset = "0xC93A98")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public string Avatar
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xF6BA48", Offset = "0xF6BA48", VA = "0xF6BA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93AA8", Offset = "0xC93AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xF6BA50", Offset = "0xF6BA50", VA = "0xF6BA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93AB8", Offset = "0xC93AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public string Gender
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xF6BA58", Offset = "0xF6BA58", VA = "0xF6BA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93AC8", Offset = "0xC93AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xF6BA60", Offset = "0xF6BA60", VA = "0xF6BA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93AD8", Offset = "0xC93AD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xF6BA10", Offset = "0xF6BA10", VA = "0xF6BA10")]
		public AccountInfo()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class BillCreatedEventArgs : EventArgs
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93AE8", Offset = "0xC93AE8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93AE8", Offset = "0xC93AE8")]
		private ErrorCode <Code>k__BackingField;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93B24", Offset = "0xC93B24")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93B24", Offset = "0xC93B24")]
		private OrderInfo <OrderInfo>k__BackingField;

		[Token(Token = "0x17000465")]
		public ErrorCode Code
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xF6BAD0", Offset = "0xF6BAD0", VA = "0xF6BAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93B60", Offset = "0xC93B60")]
			get
			{
				return default(ErrorCode);
			}
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xF6BAD8", Offset = "0xF6BAD8", VA = "0xF6BAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93B70", Offset = "0xC93B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public OrderInfo OrderInfo
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xF6BAE0", Offset = "0xF6BAE0", VA = "0xF6BAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93B80", Offset = "0xC93B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xF6BAE8", Offset = "0xF6BAE8", VA = "0xF6BAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93B90", Offset = "0xC93B90")]
			set
			{
			}
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xF6BA68", Offset = "0xF6BA68", VA = "0xF6BA68")]
		public BillCreatedEventArgs()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class CommerceCallback : AndroidJavaProxy
	{
		[Token(Token = "0x14000018")]
		public event EventHandler<LoginFinishedEventArgs> LoginFinished
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xF6BB64", Offset = "0xF6BB64", VA = "0xF6BB64")]
			add
			{
			}
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xF6BC4C", Offset = "0xF6BC4C", VA = "0xF6BC4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event EventHandler<BillCreatedEventArgs> BillCreated
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xF6BD34", Offset = "0xF6BD34", VA = "0xF6BD34")]
			add
			{
			}
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xF6BE1C", Offset = "0xF6BE1C", VA = "0xF6BE1C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xF6BAF0", Offset = "0xF6BAF0", VA = "0xF6BAF0")]
		public CommerceCallback()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xF6BF04", Offset = "0xF6BF04", VA = "0xF6BF04")]
		public void OnLoginFinished(int errorCode, AndroidJavaObject accountInfo)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xF6C1DC", Offset = "0xF6C1DC", VA = "0xF6C1DC")]
		public void OnCreateBillFinished(int status, AndroidJavaObject orderInfo)
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class CommerceManager : MonoBehaviour
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppId;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AppKey;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AndroidJavaObject nativeCommerceManager;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommerceCallback commerceCallback;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93C90", Offset = "0xC93C90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93C90", Offset = "0xC93C90")]
		private static CommerceManager <Instance>k__BackingField;

		[Token(Token = "0x17000467")]
		public static CommerceManager Instance
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xF6CA3C", Offset = "0xF6CA3C", VA = "0xF6CA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93CCC", Offset = "0xC93CCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xF6CA8C", Offset = "0xF6CA8C", VA = "0xF6CA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93CDC", Offset = "0xC93CDC")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event EventHandler<LoginFinishedEventArgs> LoginFinished
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xF6C69C", Offset = "0xF6C69C", VA = "0xF6C69C")]
			add
			{
			}
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xF6C784", Offset = "0xF6C784", VA = "0xF6C784")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event EventHandler<BillCreatedEventArgs> BillCreated
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xF6C86C", Offset = "0xF6C86C", VA = "0xF6C86C")]
			add
			{
			}
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xF6C954", Offset = "0xF6C954", VA = "0xF6C954")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xF6C62C", Offset = "0xF6C62C", VA = "0xF6C62C")]
		public CommerceManager()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xF6CAE0", Offset = "0xF6CAE0", VA = "0xF6CAE0")]
		public void Login()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xF6CB60", Offset = "0xF6CB60", VA = "0xF6CB60")]
		public void CreateBill(string orderId, string displayTitle, string accountOpenId, int totalPrice)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xF6CD30", Offset = "0xF6CD30", VA = "0xF6CD30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xF6D0F0", Offset = "0xF6D0F0", VA = "0xF6D0F0")]
		private void CommerceCallback_LoginFinished(object sender, LoginFinishedEventArgs e)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xF6D168", Offset = "0xF6D168", VA = "0xF6D168")]
		private void CommerceCallback_BillCreated(object sender, BillCreatedEventArgs e)
		{
		}
	}
	[Token(Token = "0x200042A")]
	public sealed class EntitlementCheck
	{
		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass nativeVrLibClass;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1845C6C", Offset = "0x1845C6C", VA = "0x1845C6C")]
		public EntitlementCheck()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1845C74", Offset = "0x1845C74", VA = "0x1845C74")]
		public static void InitAndCheckEntitlement()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1845ED8", Offset = "0x1845ED8", VA = "0x1845ED8")]
		public static void ReleaseEntitlementCheck()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001809")]
		Success,
		[Token(Token = "0x400180A")]
		UnknownError,
		[Token(Token = "0x400180B")]
		InvalidParameter,
		[Token(Token = "0x400180C")]
		NotLogin,
		[Token(Token = "0x400180D")]
		LoginError,
		[Token(Token = "0x400180E")]
		NoLauncher,
		[Token(Token = "0x400180F")]
		CreateBillFailed,
		[Token(Token = "0x4001810")]
		CanceledByUser,
		[Token(Token = "0x4001811")]
		PayError
	}
	[Token(Token = "0x200042C")]
	public class LoginFinishedEventArgs : EventArgs
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93CEC", Offset = "0xC93CEC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93CEC", Offset = "0xC93CEC")]
		private ErrorCode <Code>k__BackingField;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93D28", Offset = "0xC93D28")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93D28", Offset = "0xC93D28")]
		private AccountInfo <Account>k__BackingField;

		[Token(Token = "0x17000468")]
		public ErrorCode Code
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x18460E0", Offset = "0x18460E0", VA = "0x18460E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93D64", Offset = "0xC93D64")]
			get
			{
				return default(ErrorCode);
			}
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x18460E8", Offset = "0x18460E8", VA = "0x18460E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93D74", Offset = "0xC93D74")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public AccountInfo Account
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x18460F0", Offset = "0x18460F0", VA = "0x18460F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93D84", Offset = "0xC93D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x18460F8", Offset = "0x18460F8", VA = "0x18460F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93D94", Offset = "0xC93D94")]
			set
			{
			}
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1846078", Offset = "0x1846078", VA = "0x1846078")]
		public LoginFinishedEventArgs()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class OrderInfo
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93DA4", Offset = "0xC93DA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93DA4", Offset = "0xC93DA4")]
		private string <OrderId>k__BackingField;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93DE0", Offset = "0xC93DE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93DE0", Offset = "0xC93DE0")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93E1C", Offset = "0xC93E1C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93E1C", Offset = "0xC93E1C")]
		private string <AppKey>k__BackingField;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93E58", Offset = "0xC93E58")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93E58", Offset = "0xC93E58")]
		private string <OpenId>k__BackingField;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93E94", Offset = "0xC93E94")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93E94", Offset = "0xC93E94")]
		private long <LocalCreatedTime>k__BackingField;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93ED0", Offset = "0xC93ED0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93ED0", Offset = "0xC93ED0")]
		private int <Quantity>k__BackingField;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93F0C", Offset = "0xC93F0C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93F0C", Offset = "0xC93F0C")]
		private string <CurrencyType>k__BackingField;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93F48", Offset = "0xC93F48")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93F48", Offset = "0xC93F48")]
		private string <ProductName>k__BackingField;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93F84", Offset = "0xC93F84")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC93F84", Offset = "0xC93F84")]
		private string <ExtraData>k__BackingField;

		[Token(Token = "0x1700046A")]
		public string OrderId
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x1846108", Offset = "0x1846108", VA = "0x1846108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93FC0", Offset = "0xC93FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x1846110", Offset = "0x1846110", VA = "0x1846110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93FD0", Offset = "0xC93FD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public string AppId
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1846118", Offset = "0x1846118", VA = "0x1846118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93FE0", Offset = "0xC93FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1846120", Offset = "0x1846120", VA = "0x1846120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC93FF0", Offset = "0xC93FF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public string AppKey
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x1846128", Offset = "0x1846128", VA = "0x1846128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94000", Offset = "0xC94000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x1846130", Offset = "0x1846130", VA = "0x1846130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94010", Offset = "0xC94010")]
			set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		public string OpenId
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x1846138", Offset = "0x1846138", VA = "0x1846138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94020", Offset = "0xC94020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x1846140", Offset = "0x1846140", VA = "0x1846140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94030", Offset = "0xC94030")]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public long LocalCreatedTime
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x1846148", Offset = "0x1846148", VA = "0x1846148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94040", Offset = "0xC94040")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x1846150", Offset = "0x1846150", VA = "0x1846150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94050", Offset = "0xC94050")]
			set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public int Quantity
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x1846158", Offset = "0x1846158", VA = "0x1846158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94060", Offset = "0xC94060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x1846160", Offset = "0x1846160", VA = "0x1846160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94070", Offset = "0xC94070")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public string CurrencyType
		{
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x1846168", Offset = "0x1846168", VA = "0x1846168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94080", Offset = "0xC94080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x1846170", Offset = "0x1846170", VA = "0x1846170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94090", Offset = "0xC94090")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public string ProductName
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x1846178", Offset = "0x1846178", VA = "0x1846178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC940A0", Offset = "0xC940A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x1846180", Offset = "0x1846180", VA = "0x1846180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC940B0", Offset = "0xC940B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public string ExtraData
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x1846188", Offset = "0x1846188", VA = "0x1846188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC940C0", Offset = "0xC940C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x1846190", Offset = "0x1846190", VA = "0x1846190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC940D0", Offset = "0xC940D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1846100", Offset = "0x1846100", VA = "0x1846100")]
		public OrderInfo()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class OrderVerification
	{
		[Token(Token = "0x200042F")]
		public enum QueryStatus
		{
			[Token(Token = "0x400181E")]
			Success,
			[Token(Token = "0x400181F")]
			WrongParameter
		}

		[Token(Token = "0x2000430")]
		public enum PayType
		{
			[Token(Token = "0x4001821")]
			Unknown,
			[Token(Token = "0x4001822")]
			ALIPAY
		}

		[Token(Token = "0x2000431")]
		public struct VerificationInfo
		{
			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC940E0", Offset = "0xC940E0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC940E0", Offset = "0xC940E0")]
			private QueryStatus <Status>k__BackingField;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9411C", Offset = "0xC9411C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9411C", Offset = "0xC9411C")]
			private int <PayedAmount>k__BackingField;

			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94158", Offset = "0xC94158")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC94158", Offset = "0xC94158")]
			private bool <IsPayed>k__BackingField;

			[Token(Token = "0x4001826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94194", Offset = "0xC94194")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC94194", Offset = "0xC94194")]
			private PayType <PayType>k__BackingField;

			[Token(Token = "0x17000473")]
			public QueryStatus Status
			{
				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0x1846698", Offset = "0x1846698", VA = "0x1846698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC941D0", Offset = "0xC941D0")]
				get
				{
					return default(QueryStatus);
				}
				[Token(Token = "0x6001FCA")]
				[Address(RVA = "0x18466A0", Offset = "0x18466A0", VA = "0x18466A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC941E0", Offset = "0xC941E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000474")]
			public int PayedAmount
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0x18466A8", Offset = "0x18466A8", VA = "0x18466A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC941F0", Offset = "0xC941F0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001FCC")]
				[Address(RVA = "0x18466B0", Offset = "0x18466B0", VA = "0x18466B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94200", Offset = "0xC94200")]
				set
				{
				}
			}

			[Token(Token = "0x17000475")]
			public bool IsPayed
			{
				[Token(Token = "0x6001FCD")]
				[Address(RVA = "0x18466B8", Offset = "0x18466B8", VA = "0x18466B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94210", Offset = "0xC94210")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FCE")]
				[Address(RVA = "0x18466C0", Offset = "0x18466C0", VA = "0x18466C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94220", Offset = "0xC94220")]
				set
				{
				}
			}

			[Token(Token = "0x17000476")]
			public PayType PayType
			{
				[Token(Token = "0x6001FCF")]
				[Address(RVA = "0x18466CC", Offset = "0x18466CC", VA = "0x18466CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94230", Offset = "0xC94230")]
				get
				{
					return default(PayType);
				}
				[Token(Token = "0x6001FD0")]
				[Address(RVA = "0x18466D4", Offset = "0x18466D4", VA = "0x18466D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94240", Offset = "0xC94240")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000432")]
		public class Detail
		{
			[Token(Token = "0x4001827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string orderId;

			[Token(Token = "0x4001828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int buyerPayAmount;

			[Token(Token = "0x4001829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string paymentStatus;

			[Token(Token = "0x400182A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string paymentType;

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1846634", Offset = "0x1846634", VA = "0x1846634")]
			public Detail()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000433")]
		public class QueryResult
		{
			[Token(Token = "0x400182B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg;

			[Token(Token = "0x400182C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int code;

			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Detail data;

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x184663C", Offset = "0x184663C", VA = "0x184663C")]
			public QueryResult()
			{
			}
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1846198", Offset = "0x1846198", VA = "0x1846198")]
		public OrderVerification()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x18461A0", Offset = "0x18461A0", VA = "0x18461A0")]
		public VerificationInfo Query(string appId, string orderId, string appSecret)
		{
			return default(VerificationInfo);
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000434")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94250", Offset = "0xC94250")]
		public bool autoRetrigger;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xC94288", Offset = "0xC94288")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC942AC", Offset = "0xC942AC")]
		public Transform[] playPositions;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x185DBB0", Offset = "0x185DBB0", VA = "0x185DBB0")]
		public AmbienceEmitter()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x185DC88", Offset = "0x185DC88", VA = "0x185DC88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x185DE18", Offset = "0x185DE18", VA = "0x185DE18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x185E088", Offset = "0x185E088", VA = "0x185E088")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x185DE80", Offset = "0x185DE80", VA = "0x185DE80")]
		public void Play()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x185E1E4", Offset = "0x185E1E4", VA = "0x185E1E4")]
		public void EnableEmitter(bool enable)
		{
		}
	}
	[Token(Token = "0x2000435")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001839")]
		Default,
		[Token(Token = "0x400183A")]
		Preload,
		[Token(Token = "0x400183B")]
		ManualPreload
	}
	[Token(Token = "0x2000436")]
	public enum Fade
	{
		[Token(Token = "0x400183D")]
		In,
		[Token(Token = "0x400183E")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000437")]
	public class SoundGroup
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC942E4", Offset = "0xC942E4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1867FD8", Offset = "0x1867FD8", VA = "0x1867FD8")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x1868078", Offset = "0x1868078", VA = "0x1868078")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1866818", Offset = "0x1866818", VA = "0x1866818")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1866950", Offset = "0x1866950", VA = "0x1866950")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x18675C0", Offset = "0x18675C0", VA = "0x18675C0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000438")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200043B")]
		public enum Fade
		{
			[Token(Token = "0x400186D")]
			In,
			[Token(Token = "0x400186E")]
			Out
		}

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94598", Offset = "0xC94598")]
		private sealed class <FindFreeEmitter>c__AnonStorey0
		{
			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SoundPriority priority;

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0x18632D8", Offset = "0x18632D8", VA = "0x18632D8")]
			public <FindFreeEmitter>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x186615C", Offset = "0x186615C", VA = "0x186615C")]
			internal bool <>m__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94310", Offset = "0xC94310")]
		public bool makePersistent;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94348", Offset = "0xC94348")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94380", Offset = "0xC94380")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC943B8", Offset = "0xC943B8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC943F0", Offset = "0xC943F0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94428", Offset = "0xC94428")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94460", Offset = "0xC94460")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94498", Offset = "0xC94498")]
		public bool verboseLogging;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC944D0", Offset = "0xC944D0")]
		public int maxSoundEmitters;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94508", Offset = "0xC94508")]
		public float volumeSoundFX;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94540", Offset = "0xC94540")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94578", Offset = "0xC94578")]
		private static Predicate<SoundEmitter> <>f__am$cache0;

		[Token(Token = "0x17000477")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x185E450", Offset = "0x185E450", VA = "0x185E450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000478")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x185E530", Offset = "0x185E530", VA = "0x185E530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x185E598", Offset = "0x185E598", VA = "0x185E598")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700047A")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0x185E60C", Offset = "0x185E60C", VA = "0x185E60C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700047B")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x185E680", Offset = "0x185E680", VA = "0x185E680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x185E6F4", Offset = "0x185E6F4", VA = "0x185E6F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x185E768", Offset = "0x185E768", VA = "0x185E768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x1860CA4", Offset = "0x1860CA4", VA = "0x1860CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x185E370", Offset = "0x185E370", VA = "0x185E370")]
		public AudioManager()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x185E7DC", Offset = "0x185E7DC", VA = "0x185E7DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x185EA20", Offset = "0x185EA20", VA = "0x185EA20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x185E7E0", Offset = "0x185E7E0", VA = "0x185E7E0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x185FACC", Offset = "0x185FACC", VA = "0x185FACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x185EB78", Offset = "0x185EB78", VA = "0x185EB78")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x18602A4", Offset = "0x18602A4", VA = "0x18602A4")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x186044C", Offset = "0x186044C", VA = "0x186044C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x186060C", Offset = "0x186060C", VA = "0x186060C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1860710", Offset = "0x1860710", VA = "0x1860710")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x18607C8", Offset = "0x18607C8", VA = "0x18607C8")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x185F2A0", Offset = "0x185F2A0", VA = "0x185F2A0")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x185FAD0", Offset = "0x185FAD0", VA = "0x185FAD0")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1860F88", Offset = "0x1860F88", VA = "0x1860F88")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x18610AC", Offset = "0x18610AC", VA = "0x18610AC")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x18611D4", Offset = "0x18611D4", VA = "0x18611D4")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1860E04", Offset = "0x1860E04", VA = "0x1860E04")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x186139C", Offset = "0x186139C", VA = "0x186139C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1861514", Offset = "0x1861514", VA = "0x1861514")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1861734", Offset = "0x1861734", VA = "0x1861734")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x185E11C", Offset = "0x185E11C", VA = "0x185E11C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x185E2A8", Offset = "0x185E2A8", VA = "0x185E2A8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1861910", Offset = "0x1861910", VA = "0x1861910")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x18619F0", Offset = "0x18619F0", VA = "0x18619F0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1861AAC", Offset = "0x1861AAC", VA = "0x1861AAC")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1861BB8", Offset = "0x1861BB8", VA = "0x1861BB8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1861C70", Offset = "0x1861C70", VA = "0x1861C70")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1861D8C", Offset = "0x1861D8C", VA = "0x1861D8C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1862B0C", Offset = "0x1862B0C", VA = "0x1862B0C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x18632E0", Offset = "0x18632E0", VA = "0x18632E0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x186348C", Offset = "0x186348C", VA = "0x186348C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1864608", Offset = "0x1864608", VA = "0x1864608")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1861F60", Offset = "0x1861F60", VA = "0x1861F60")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x186472C", Offset = "0x186472C", VA = "0x186472C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x186482C", Offset = "0x186482C", VA = "0x186482C")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1864938", Offset = "0x1864938", VA = "0x1864938")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1864DC8", Offset = "0x1864DC8", VA = "0x1864DC8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x186500C", Offset = "0x186500C", VA = "0x186500C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x186515C", Offset = "0x186515C", VA = "0x186515C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x186533C", Offset = "0x186533C", VA = "0x186533C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1865414", Offset = "0x1865414", VA = "0x1865414")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1865560", Offset = "0x1865560", VA = "0x1865560")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x18660C8", Offset = "0x18660C8", VA = "0x18660C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94588", Offset = "0xC94588")]
		private static bool <FindFreeEmitter>m__0(SoundEmitter item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000439")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001867")]
		None = -1,
		[Token(Token = "0x4001868")]
		Reserved,
		[Token(Token = "0x4001869")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200043A")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x186625C", Offset = "0x186625C", VA = "0x186625C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1866200", Offset = "0x1866200", VA = "0x1866200")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200043E")]
		public enum FadeState
		{
			[Token(Token = "0x4001883")]
			Null,
			[Token(Token = "0x4001884")]
			FadingIn,
			[Token(Token = "0x4001885")]
			FadingOut,
			[Token(Token = "0x4001886")]
			Ducking
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94688", Offset = "0xC94688")]
		private sealed class <DelayedSyncTo>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SoundEmitter other;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float fadeTime;

			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float toVolume;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal SoundEmitter $this;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal object $current;

			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool $disposing;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal int $PC;

			[Token(Token = "0x17000669")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CEE")]
				[Address(RVA = "0x1866E88", Offset = "0x1866E88", VA = "0x1866E88", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CEF")]
				[Address(RVA = "0x1866E90", Offset = "0x1866E90", VA = "0x1866E90", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x1866B30", Offset = "0x1866B30", VA = "0x1866B30")]
			[DebuggerHidden]
			public <DelayedSyncTo>c__Iterator0()
			{
			}

			[Token(Token = "0x6002CED")]
			[Address(RVA = "0x1866D2C", Offset = "0x1866D2C", VA = "0x1866D2C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x1866E98", Offset = "0x1866E98", VA = "0x1866E98", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x1866EAC", Offset = "0x1866EAC", VA = "0x1866EAC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC946E8", Offset = "0xC946E8")]
		private sealed class <FadeSoundChannelTo>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <start>__0;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float toVolume;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float <end>__0;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float <startTime>__0;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <elapsedTime>__0;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float fadeTime;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float <t>__1;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal SoundEmitter $this;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x1700066B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CF4")]
				[Address(RVA = "0x1867458", Offset = "0x1867458", VA = "0x1867458", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CF5")]
				[Address(RVA = "0x1867460", Offset = "0x1867460", VA = "0x1867460", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x1866D1C", Offset = "0x1866D1C", VA = "0x1866D1C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>c__Iterator1()
			{
			}

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x186728C", Offset = "0x186728C", VA = "0x186728C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0x1867468", Offset = "0x1867468", VA = "0x1867468", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x186747C", Offset = "0x186747C", VA = "0x186747C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94748", Offset = "0xC94748")]
		private sealed class <FadeSoundChannel>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delaySecs;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Fade fadeType;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float defaultVolume;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal float <start>__0;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <end>__0;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool <restartPlay>__0;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float <startTime>__0;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal float <elapsedTime>__0;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float fadeTime;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float <t>__1;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal SoundEmitter $this;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x1700066D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002CFA")]
				[Address(RVA = "0x1867204", Offset = "0x1867204", VA = "0x1867204", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CFB")]
				[Address(RVA = "0x186720C", Offset = "0x186720C", VA = "0x186720C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0x1866D24", Offset = "0x1866D24", VA = "0x1866D24")]
			[DebuggerHidden]
			public <FadeSoundChannel>c__Iterator2()
			{
			}

			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0x1866F10", Offset = "0x1866F10", VA = "0x1866F10", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0x1867214", Offset = "0x1867214", VA = "0x1867214", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0x1867228", Offset = "0x1867228", VA = "0x1867228", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700047F")]
		public float volume
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x18645DC", Offset = "0x18645DC", VA = "0x18645DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x1866320", Offset = "0x1866320", VA = "0x1866320")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public float pitch
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x186635C", Offset = "0x186635C", VA = "0x186635C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x1866388", Offset = "0x1866388", VA = "0x1866388")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public AudioClip clip
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x18663C4", Offset = "0x18663C4", VA = "0x18663C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x18663F0", Offset = "0x18663F0", VA = "0x18663F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public float time
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x1866424", Offset = "0x1866424", VA = "0x1866424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x1861D50", Offset = "0x1861D50", VA = "0x1861D50")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public float length
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x1866450", Offset = "0x1866450", VA = "0x1866450")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000484")]
		public bool loop
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x1866524", Offset = "0x1866524", VA = "0x1866524")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x1866550", Offset = "0x1866550", VA = "0x1866550")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public bool mute
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x1866584", Offset = "0x1866584", VA = "0x1866584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x18665B0", Offset = "0x18665B0", VA = "0x18665B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x18665E4", Offset = "0x18665E4", VA = "0x18665E4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x1866610", Offset = "0x1866610", VA = "0x1866610")]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public bool isPlaying
		{
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x1866644", Offset = "0x1866644", VA = "0x1866644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x1866308", Offset = "0x1866308", VA = "0x1866308")]
		public SoundEmitter()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1866670", Offset = "0x1866670", VA = "0x1866670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x18645C8", Offset = "0x18645C8", VA = "0x18645C8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1864824", Offset = "0x1864824", VA = "0x1864824")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1864930", Offset = "0x1864930", VA = "0x1864930")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1860D14", Offset = "0x1860D14", VA = "0x1860D14")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1860D0C", Offset = "0x1860D0C", VA = "0x1860D0C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x186528C", Offset = "0x186528C", VA = "0x186528C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x1860F08", Offset = "0x1860F08", VA = "0x1860F08")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x18668AC", Offset = "0x18668AC", VA = "0x18668AC")]
		public void Play()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1866914", Offset = "0x1866914", VA = "0x1866914")]
		public void Pause()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1860D1C", Offset = "0x1860D1C", VA = "0x1860D1C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x18669E4", Offset = "0x18669E4", VA = "0x18669E4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1864CB0", Offset = "0x1864CB0", VA = "0x1864CB0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1864F2C", Offset = "0x1864F2C", VA = "0x1864F2C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x186134C", Offset = "0x186134C", VA = "0x186134C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1866A50", Offset = "0x1866A50", VA = "0x1866A50")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1866A7C", Offset = "0x1866A7C", VA = "0x1866A7C")]
		[DebuggerHidden]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x1866B38", Offset = "0x1866B38", VA = "0x1866B38")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1861804", Offset = "0x1861804", VA = "0x1861804")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1861890", Offset = "0x1861890", VA = "0x1861890")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1861690", Offset = "0x1861690", VA = "0x1861690")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x186146C", Offset = "0x186146C", VA = "0x186146C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1866BB0", Offset = "0x1866BB0", VA = "0x1866BB0")]
		[DebuggerHidden]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x1866C48", Offset = "0x1866C48", VA = "0x1866C48")]
		[DebuggerHidden]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}
	}
	[Token(Token = "0x200043F")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001888")]
		Random,
		[Token(Token = "0x4001889")]
		Sequential
	}
	[Token(Token = "0x2000440")]
	public enum FreqHint
	{
		[Token(Token = "0x400188B")]
		None,
		[Token(Token = "0x400188C")]
		Wide,
		[Token(Token = "0x400188D")]
		Narrow
	}
	[Token(Token = "0x2000441")]
	public enum SoundPriority
	{
		[Token(Token = "0x400188F")]
		VeryLow = -2,
		[Token(Token = "0x4001890")]
		Low,
		[Token(Token = "0x4001891")]
		Default,
		[Token(Token = "0x4001892")]
		High,
		[Token(Token = "0x4001893")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000442")]
	public class OSPProps
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC947A8", Offset = "0xC947A8")]
		public bool enableSpatialization;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC947E0", Offset = "0xC947E0")]
		public bool useFastOverride;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94818", Offset = "0xC94818")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC94818", Offset = "0xC94818")]
		public float gain;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC9486C", Offset = "0xC9486C")]
		public bool enableInvSquare;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC948A4", Offset = "0xC948A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC948A4", Offset = "0xC948A4")]
		public float volumetric;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC948FC", Offset = "0xC948FC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xC948FC", Offset = "0xC948FC")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x186626C", Offset = "0x186626C", VA = "0x186626C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000443")]
	public class SoundFX
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC9495C", Offset = "0xC9495C")]
		public string name;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94994", Offset = "0xC94994")]
		public SoundFXNext playback;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC949CC", Offset = "0xC949CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC949CC", Offset = "0xC949CC")]
		public float volume;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94A20", Offset = "0xC94A20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xC94A20", Offset = "0xC94A20")]
		public Vector2 pitchVariance;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94A7C", Offset = "0xC94A7C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xC94A7C", Offset = "0xC94A7C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94ADC", Offset = "0xC94ADC")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94B14", Offset = "0xC94B14")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94B4C", Offset = "0xC94B4C")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94B84", Offset = "0xC94B84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC94B84", Offset = "0xC94B84")]
		public float spread;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94BDC", Offset = "0xC94BDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC94BDC", Offset = "0xC94BDC")]
		public float pctChanceToPlay;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94C30", Offset = "0xC94C30")]
		public SoundPriority priority;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94C68", Offset = "0xC94C68")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xC94C68", Offset = "0xC94C68")]
		public Vector2 delay;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94CC4", Offset = "0xC94CC4")]
		public bool looping;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94CFC", Offset = "0xC94CFC")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000488")]
		public int Length
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x18674E0", Offset = "0x18674E0", VA = "0x18674E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000489")]
		public bool IsValid
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x1867508", Offset = "0x1867508", VA = "0x1867508")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048A")]
		public SoundGroup Group
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x18645C0", Offset = "0x18645C0", VA = "0x18645C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x186029C", Offset = "0x186029C", VA = "0x186029C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x18644BC", Offset = "0x18644BC", VA = "0x18644BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700048C")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x18644F0", Offset = "0x18644F0", VA = "0x18644F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1865C50", Offset = "0x1865C50", VA = "0x1865C50")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x186436C", Offset = "0x186436C", VA = "0x186436C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x186451C", Offset = "0x186451C", VA = "0x186451C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x18644C8", Offset = "0x18644C8", VA = "0x18644C8")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x18675E0", Offset = "0x18675E0", VA = "0x18675E0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1864508", Offset = "0x1864508", VA = "0x1864508")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x186771C", Offset = "0x186771C", VA = "0x186771C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1867800", Offset = "0x1867800", VA = "0x1867800")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x186791C", Offset = "0x186791C", VA = "0x186791C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x18679A8", Offset = "0x18679A8", VA = "0x18679A8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1867A3C", Offset = "0x1867A3C", VA = "0x1867A3C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1867ACC", Offset = "0x1867ACC", VA = "0x1867ACC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1867B58", Offset = "0x1867B58", VA = "0x1867B58")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public class SoundFXRef
	{
		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700048D")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x1867C30", Offset = "0x1867C30", VA = "0x1867C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public string name
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x1867D24", Offset = "0x1867D24", VA = "0x1867D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x1867D2C", Offset = "0x1867D2C", VA = "0x1867D2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public int Length
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x1867D34", Offset = "0x1867D34", VA = "0x1867D34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000490")]
		public bool IsValid
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x1867D7C", Offset = "0x1867D7C", VA = "0x1867D7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1867BD0", Offset = "0x1867BD0", VA = "0x1867BD0")]
		public SoundFXRef()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1867C60", Offset = "0x1867C60", VA = "0x1867C60")]
		private void Init()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1867DB8", Offset = "0x1867DB8", VA = "0x1867DB8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1867DF4", Offset = "0x1867DF4", VA = "0x1867DF4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1867E38", Offset = "0x1867E38", VA = "0x1867E38")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x185E098", Offset = "0x185E098", VA = "0x185E098")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1867E84", Offset = "0x1867E84", VA = "0x1867E84")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1867EC8", Offset = "0x1867EC8", VA = "0x1867EC8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1867F1C", Offset = "0x1867F1C", VA = "0x1867F1C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x1867F58", Offset = "0x1867F58", VA = "0x1867F58")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1867F9C", Offset = "0x1867F9C", VA = "0x1867F9C")]
		public void DetachFromParent()
		{
		}
	}
}
[Token(Token = "0x2000445")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC94D34", Offset = "0xC94D34")]
public class FastList<T>
{
	[Token(Token = "0x2000446")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000642")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94D7C", Offset = "0xC94D7C")]
	private sealed class <GetEnumerator>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<T>
	{
		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int <i>__1;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal FastList<T> $this;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal T $current;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool $disposing;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int $PC;

		[Token(Token = "0x1700066F")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002D00")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000670")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D01")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFE")]
		[DebuggerHidden]
		public <GetEnumerator>c__Iterator0()
		{
		}

		[Token(Token = "0x6002CFF")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D02")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D03")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000491")]
	public int Count
	{
		[Token(Token = "0x6002063")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002064")]
		set
		{
		}
	}

	[Token(Token = "0x17000492")]
	public T Item
	{
		[Token(Token = "0x6002065")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6002066")]
		set
		{
		}
	}

	[Token(Token = "0x6002061")]
	public FastList()
	{
	}

	[Token(Token = "0x6002062")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6002067")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6002068")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6002069")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600206A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600206B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600206C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600206D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600206E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600206F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6002070")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6002071")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6002072")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6002073")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6002074")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6002075")]
	[DebuggerHidden]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6002076")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6002077")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6002078")]
	private void Trim()
	{
	}

	[Token(Token = "0x6002079")]
	public void Clear()
	{
	}

	[Token(Token = "0x600207A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000447")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600207F")]
	[Address(RVA = "0xF66D80", Offset = "0xF66D80", VA = "0xF66D80")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000448")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6002080")]
	[Address(RVA = "0xF66D54", Offset = "0xF66D54", VA = "0xF66D54")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000449")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200044A")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6002081")]
	[Address(RVA = "0x185CF5C", Offset = "0x185CF5C", VA = "0x185CF5C")]
	public ONSPReflectionZone()
	{
	}

	[Token(Token = "0x6002082")]
	[Address(RVA = "0x185CF64", Offset = "0x185CF64", VA = "0x185CF64")]
	private void Start()
	{
	}

	[Token(Token = "0x6002083")]
	[Address(RVA = "0x185CF68", Offset = "0x185CF68", VA = "0x185CF68")]
	private void Update()
	{
	}

	[Token(Token = "0x6002084")]
	[Address(RVA = "0x185CF6C", Offset = "0x185CF6C", VA = "0x185CF6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6002085")]
	[Address(RVA = "0x185D0F0", Offset = "0x185D0F0", VA = "0x185D0F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6002086")]
	[Address(RVA = "0x185CFBC", Offset = "0x185CFBC", VA = "0x185CFBC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6002087")]
	[Address(RVA = "0x185D050", Offset = "0x185D050", VA = "0x185D050")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6002088")]
	[Address(RVA = "0x185D140", Offset = "0x185D140", VA = "0x185D140")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6002089")]
	[Address(RVA = "0x185D1DC", Offset = "0x185D1DC", VA = "0x185D1DC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600208A")]
	[Address(RVA = "0x185D370", Offset = "0x185D370", VA = "0x185D370")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}
}
[Token(Token = "0x200044B")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200044C")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40018CA")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40018D0")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600208C")]
	[Address(RVA = "0x18480C4", Offset = "0x18480C4", VA = "0x18480C4")]
	public OculusSpatializerUnity()
	{
	}

	[Token(Token = "0x600208D")]
	[Address(RVA = "0x1848254", Offset = "0x1848254", VA = "0x1848254")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208E")]
	[Address(RVA = "0x184828C", Offset = "0x184828C", VA = "0x184828C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600208F")]
	[Address(RVA = "0x18484B4", Offset = "0x18484B4", VA = "0x18484B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002090")]
	[Address(RVA = "0x1848568", Offset = "0x1848568", VA = "0x1848568")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002091")]
	[Address(RVA = "0x1848674", Offset = "0x1848674", VA = "0x1848674")]
	private void Update()
	{
	}

	[Token(Token = "0x6002092")]
	[Address(RVA = "0x1849228", Offset = "0x1849228", VA = "0x1849228")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6002093")]
	[Address(RVA = "0x1848548", Offset = "0x1848548", VA = "0x1848548")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6002094")]
	[Address(RVA = "0x18485CC", Offset = "0x18485CC", VA = "0x18485CC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6002095")]
	[Address(RVA = "0x1848F24", Offset = "0x1848F24", VA = "0x1848F24")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6002096")]
	[Address(RVA = "0x1848FBC", Offset = "0x1848FBC", VA = "0x1848FBC")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6002097")]
	[Address(RVA = "0x1849058", Offset = "0x1849058", VA = "0x1849058")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6002098")]
	[Address(RVA = "0x18490F4", Offset = "0x18490F4", VA = "0x18490F4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6002099")]
	[Address(RVA = "0x184918C", Offset = "0x184918C", VA = "0x184918C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600209A")]
	[Address(RVA = "0x184A51C", Offset = "0x184A51C", VA = "0x184A51C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600209B")]
	[Address(RVA = "0x184A5F4", Offset = "0x184A5F4", VA = "0x184A5F4")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);
}
[Token(Token = "0x200044D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200044E")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40018D7")]
		Uninitialized = -1,
		[Token(Token = "0x40018D8")]
		NotEnabled,
		[Token(Token = "0x40018D9")]
		Success,
		[Token(Token = "0x40018DA")]
		StreamError,
		[Token(Token = "0x40018DB")]
		ProcessError,
		[Token(Token = "0x40018DC")]
		MaxStatValue
	}

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000493")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x184AE7C", Offset = "0x184AE7C", VA = "0x184AE7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x184AE84", Offset = "0x184AE84", VA = "0x184AE84")]
		set
		{
		}
	}

	[Token(Token = "0x60020A1")]
	[Address(RVA = "0x184AE6C", Offset = "0x184AE6C", VA = "0x184AE6C")]
	public ONSPAmbisonicsNative()
	{
	}

	[Token(Token = "0x60020A4")]
	[Address(RVA = "0x184AE90", Offset = "0x184AE90", VA = "0x184AE90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020A5")]
	[Address(RVA = "0x184B0F0", Offset = "0x184B0F0", VA = "0x184B0F0")]
	private void Update()
	{
	}
}
[Token(Token = "0x200044F")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000450")]
	private enum Parameters
	{
		[Token(Token = "0x40018E8")]
		P_GAIN,
		[Token(Token = "0x40018E9")]
		P_USEINVSQR,
		[Token(Token = "0x40018EA")]
		P_NEAR,
		[Token(Token = "0x40018EB")]
		P_FAR,
		[Token(Token = "0x40018EC")]
		P_RADIUS,
		[Token(Token = "0x40018ED")]
		P_DISABLE_RFL,
		[Token(Token = "0x40018EE")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40018EF")]
		P_AMBISTAT,
		[Token(Token = "0x40018F0")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40018F1")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40018F2")]
		P_SENDLEVEL,
		[Token(Token = "0x40018F3")]
		P_NUM
	}

	[Token(Token = "0x40018DD")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000494")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x184B75C", Offset = "0x184B75C", VA = "0x184B75C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x184B764", Offset = "0x184B764", VA = "0x184B764")]
		set
		{
		}
	}

	[Token(Token = "0x17000495")]
	public float Gain
	{
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x184B770", Offset = "0x184B770", VA = "0x184B770")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x184B778", Offset = "0x184B778", VA = "0x184B778")]
		set
		{
		}
	}

	[Token(Token = "0x17000496")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x184B800", Offset = "0x184B800", VA = "0x184B800")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x184B808", Offset = "0x184B808", VA = "0x184B808")]
		set
		{
		}
	}

	[Token(Token = "0x17000497")]
	public float Near
	{
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x184B814", Offset = "0x184B814", VA = "0x184B814")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x184B81C", Offset = "0x184B81C", VA = "0x184B81C")]
		set
		{
		}
	}

	[Token(Token = "0x17000498")]
	public float Far
	{
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x184B8A8", Offset = "0x184B8A8", VA = "0x184B8A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x184B8B0", Offset = "0x184B8B0", VA = "0x184B8B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000499")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x184B93C", Offset = "0x184B93C", VA = "0x184B93C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x184B944", Offset = "0x184B944", VA = "0x184B944")]
		set
		{
		}
	}

	[Token(Token = "0x1700049A")]
	public float ReverbSend
	{
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x184B9D0", Offset = "0x184B9D0", VA = "0x184B9D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x184B9D8", Offset = "0x184B9D8", VA = "0x184B9D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700049B")]
	public bool EnableRfl
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x184BA64", Offset = "0x184BA64", VA = "0x184BA64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x184BA6C", Offset = "0x184BA6C", VA = "0x184BA6C")]
		set
		{
		}
	}

	[Token(Token = "0x60020A7")]
	[Address(RVA = "0x184B418", Offset = "0x184B418", VA = "0x184B418")]
	public ONSPAudioSource()
	{
	}

	[Token(Token = "0x60020A8")]
	[Address(RVA = "0x184B434", Offset = "0x184B434", VA = "0x184B434")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xC94E6C", Offset = "0xC94E6C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60020A9")]
	[Address(RVA = "0x184B664", Offset = "0x184B664", VA = "0x184B664")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60020BA")]
	[Address(RVA = "0x184BA78", Offset = "0x184BA78", VA = "0x184BA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020BB")]
	[Address(RVA = "0x184BC50", Offset = "0x184BC50", VA = "0x184BC50")]
	private void Start()
	{
	}

	[Token(Token = "0x60020BC")]
	[Address(RVA = "0x184BC54", Offset = "0x184BC54", VA = "0x184BC54")]
	private void Update()
	{
	}

	[Token(Token = "0x60020BD")]
	[Address(RVA = "0x184BAE4", Offset = "0x184BAE4", VA = "0x184BAE4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60020BE")]
	[Address(RVA = "0x184BD38", Offset = "0x184BD38", VA = "0x184BD38")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60020BF")]
	[Address(RVA = "0x184C278", Offset = "0x184C278", VA = "0x184C278")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60020C0")]
	[Address(RVA = "0x184B5CC", Offset = "0x184B5CC", VA = "0x184B5CC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);
}
[Token(Token = "0x2000451")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40018F5")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40018F7")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60020C2")]
	[Address(RVA = "0x184C34C", Offset = "0x184C34C", VA = "0x184C34C")]
	public ONSPProfiler()
	{
	}

	[Token(Token = "0x60020C3")]
	[Address(RVA = "0x184C35C", Offset = "0x184C35C", VA = "0x184C35C")]
	private void Start()
	{
	}

	[Token(Token = "0x60020C4")]
	[Address(RVA = "0x184C36C", Offset = "0x184C36C", VA = "0x184C36C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60020C5")]
	[Address(RVA = "0x184C43C", Offset = "0x184C43C", VA = "0x184C43C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60020C6")]
	[Address(RVA = "0x184C3A4", Offset = "0x184C3A4", VA = "0x184C3A4")]
	private static extern int ONSP_SetProfilerPort(int port);
}
[Token(Token = "0x2000452")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000453")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000454")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40018FE")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700049C")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x184F3D4", Offset = "0x184F3D4", VA = "0x184F3D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049D")]
	public string filePath
	{
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x184F468", Offset = "0x184F468", VA = "0x184F468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020C7")]
	[Address(RVA = "0x184F368", Offset = "0x184F368", VA = "0x184F368")]
	public ONSPPropagationGeometry()
	{
	}

	[Token(Token = "0x60020CA")]
	[Address(RVA = "0x184F4E8", Offset = "0x184F4E8", VA = "0x184F4E8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60020CB")]
	[Address(RVA = "0x184F660", Offset = "0x184F660", VA = "0x184F660")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020CC")]
	[Address(RVA = "0x184F664", Offset = "0x184F664", VA = "0x184F664")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60020CD")]
	[Address(RVA = "0x184FC24", Offset = "0x184FC24", VA = "0x184FC24")]
	private void Update()
	{
	}

	[Token(Token = "0x60020CE")]
	[Address(RVA = "0x18500D0", Offset = "0x18500D0", VA = "0x18500D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60020CF")]
	[Address(RVA = "0x1850234", Offset = "0x1850234", VA = "0x1850234")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60020D0")]
	[Address(RVA = "0x1850A64", Offset = "0x1850A64", VA = "0x1850A64")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60020D1")]
	[Address(RVA = "0x1850AB0", Offset = "0x1850AB0", VA = "0x1850AB0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60020D2")]
	[Address(RVA = "0x185258C", Offset = "0x185258C", VA = "0x185258C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60020D3")]
	[Address(RVA = "0x185242C", Offset = "0x185242C", VA = "0x185242C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60020D4")]
	[Address(RVA = "0x184FA38", Offset = "0x184FA38", VA = "0x184FA38")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60020D5")]
	[Address(RVA = "0x184F850", Offset = "0x184F850", VA = "0x184F850")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60020D6")]
	[Address(RVA = "0x1852D0C", Offset = "0x1852D0C", VA = "0x1852D0C")]
	public bool WriteToObj()
	{
		return default(bool);
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000455")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001906")]
		TRIANGLES,
		[Token(Token = "0x4001907")]
		QUADS
	}
	[Token(Token = "0x2000456")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001909")]
		ABSORPTION,
		[Token(Token = "0x400190A")]
		TRANSMISSION,
		[Token(Token = "0x400190B")]
		SCATTERING
	}
	[Token(Token = "0x2000457")]
	public struct MeshGroup
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
[Token(Token = "0x2000458")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000459")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001912")]
		Int8,
		[Token(Token = "0x4001913")]
		UInt8,
		[Token(Token = "0x4001914")]
		Int16,
		[Token(Token = "0x4001915")]
		UInt16,
		[Token(Token = "0x4001916")]
		Int32,
		[Token(Token = "0x4001917")]
		UInt32,
		[Token(Token = "0x4001918")]
		Int64,
		[Token(Token = "0x4001919")]
		UInt64,
		[Token(Token = "0x400191A")]
		Float16,
		[Token(Token = "0x400191B")]
		Float32,
		[Token(Token = "0x400191C")]
		Float64
	}

	[Token(Token = "0x200045A")]
	public class ClientType
	{
		[Token(Token = "0x400191D")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400191E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400191F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001920")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001921")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001922")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001923")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001924")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001925")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001926")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001927")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001928")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001929")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400192A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x184C9D4", Offset = "0x184C9D4", VA = "0x184C9D4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200045B")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60020DC")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60020DD")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60020DE")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60020DF")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60020E0")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60020E1")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60020E2")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60020E3")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020E4")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020E5")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60020E6")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60020E7")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60020E8")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60020E9")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60020EA")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200045C")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400192B")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700049F")]
		private IntPtr context
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0x184D77C", Offset = "0x184D77C", VA = "0x184D77C")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x184C988", Offset = "0x184C988", VA = "0x184C988")]
		public UnityNativeInterface()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x184D7E4", Offset = "0x184D7E4", VA = "0x184D7E4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x184D898", Offset = "0x184D898", VA = "0x184D898")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x184D940", Offset = "0x184D940", VA = "0x184D940", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x184D968", Offset = "0x184D968", VA = "0x184D968")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x184DA10", Offset = "0x184DA10", VA = "0x184DA10", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x184DA38", Offset = "0x184DA38", VA = "0x184DA38")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x184DAE8", Offset = "0x184DAE8", VA = "0x184DAE8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x184DB10", Offset = "0x184DB10", VA = "0x184DB10")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x184DBA8", Offset = "0x184DBA8", VA = "0x184DBA8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x184DBAC", Offset = "0x184DBAC", VA = "0x184DBAC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x184DCC0", Offset = "0x184DCC0", VA = "0x184DCC0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x184DDC0", Offset = "0x184DDC0", VA = "0x184DDC0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x184DE70", Offset = "0x184DE70", VA = "0x184DE70", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x184DE74", Offset = "0x184DE74", VA = "0x184DE74")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x184DFB8", Offset = "0x184DFB8", VA = "0x184DFB8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x184DFBC", Offset = "0x184DFBC", VA = "0x184DFBC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x184E080", Offset = "0x184E080", VA = "0x184E080", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x184E084", Offset = "0x184E084", VA = "0x184E084")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x184E148", Offset = "0x184E148", VA = "0x184E148", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002100")]
		[Address(RVA = "0x184E14C", Offset = "0x184E14C", VA = "0x184E14C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x184E210", Offset = "0x184E210", VA = "0x184E210", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002102")]
		[Address(RVA = "0x184E214", Offset = "0x184E214", VA = "0x184E214")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x184E2C4", Offset = "0x184E2C4", VA = "0x184E2C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002104")]
		[Address(RVA = "0x184E2EC", Offset = "0x184E2EC", VA = "0x184E2EC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x184E384", Offset = "0x184E384", VA = "0x184E384", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002106")]
		[Address(RVA = "0x184E388", Offset = "0x184E388", VA = "0x184E388")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x184E448", Offset = "0x184E448", VA = "0x184E448", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x184E44C", Offset = "0x184E44C", VA = "0x184E44C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x184E518", Offset = "0x184E518", VA = "0x184E518", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600210A")]
		[Address(RVA = "0x184E51C", Offset = "0x184E51C", VA = "0x184E51C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x184E5C4", Offset = "0x184E5C4", VA = "0x184E5C4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200045D")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400192D")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170004A0")]
		private IntPtr context
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x184E5C8", Offset = "0x184E5C8", VA = "0x184E5C8")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x184C83C", Offset = "0x184C83C", VA = "0x184C83C")]
		public WwisePluginInterface()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600210E")]
		[Address(RVA = "0x184C788", Offset = "0x184C788", VA = "0x184C788")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600210F")]
		[Address(RVA = "0x184E630", Offset = "0x184E630", VA = "0x184E630")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x184E6D8", Offset = "0x184E6D8", VA = "0x184E6D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002111")]
		[Address(RVA = "0x184E700", Offset = "0x184E700", VA = "0x184E700")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x184E7A8", Offset = "0x184E7A8", VA = "0x184E7A8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x184E7D0", Offset = "0x184E7D0", VA = "0x184E7D0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x184E884", Offset = "0x184E884", VA = "0x184E884", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002115")]
		[Address(RVA = "0x184E8AC", Offset = "0x184E8AC", VA = "0x184E8AC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x184E944", Offset = "0x184E944", VA = "0x184E944", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002117")]
		[Address(RVA = "0x184E948", Offset = "0x184E948", VA = "0x184E948")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x184EA5C", Offset = "0x184EA5C", VA = "0x184EA5C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002119")]
		[Address(RVA = "0x184EB5C", Offset = "0x184EB5C", VA = "0x184EB5C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x184EC0C", Offset = "0x184EC0C", VA = "0x184EC0C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600211B")]
		[Address(RVA = "0x184EC10", Offset = "0x184EC10", VA = "0x184EC10")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x184ED54", Offset = "0x184ED54", VA = "0x184ED54", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600211D")]
		[Address(RVA = "0x184ED58", Offset = "0x184ED58", VA = "0x184ED58")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x184EE1C", Offset = "0x184EE1C", VA = "0x184EE1C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600211F")]
		[Address(RVA = "0x184EE20", Offset = "0x184EE20", VA = "0x184EE20")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x184EEE4", Offset = "0x184EEE4", VA = "0x184EEE4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002121")]
		[Address(RVA = "0x184EEE8", Offset = "0x184EEE8", VA = "0x184EEE8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x184EFAC", Offset = "0x184EFAC", VA = "0x184EFAC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002123")]
		[Address(RVA = "0x184EFB0", Offset = "0x184EFB0", VA = "0x184EFB0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x184F064", Offset = "0x184F064", VA = "0x184F064", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002125")]
		[Address(RVA = "0x184F08C", Offset = "0x184F08C", VA = "0x184F08C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x184F124", Offset = "0x184F124", VA = "0x184F124", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002127")]
		[Address(RVA = "0x184F128", Offset = "0x184F128", VA = "0x184F128")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x184F1E8", Offset = "0x184F1E8", VA = "0x184F1E8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002129")]
		[Address(RVA = "0x184F1EC", Offset = "0x184F1EC", VA = "0x184F1EC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x184F2B8", Offset = "0x184F2B8", VA = "0x184F2B8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600212B")]
		[Address(RVA = "0x184F2BC", Offset = "0x184F2BC", VA = "0x184F2BC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x184F364", Offset = "0x184F364", VA = "0x184F364", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200045E")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400192F")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170004A1")]
		private IntPtr context
		{
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x184C9DC", Offset = "0x184C9DC", VA = "0x184C9DC")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x184C93C", Offset = "0x184C93C", VA = "0x184C93C")]
		public FMODPluginInterface()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600212F")]
		[Address(RVA = "0x184C888", Offset = "0x184C888", VA = "0x184C888")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x184CA44", Offset = "0x184CA44", VA = "0x184CA44")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x184CAEC", Offset = "0x184CAEC", VA = "0x184CAEC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002132")]
		[Address(RVA = "0x184CB14", Offset = "0x184CB14", VA = "0x184CB14")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x184CBBC", Offset = "0x184CBBC", VA = "0x184CBBC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002134")]
		[Address(RVA = "0x184CBE4", Offset = "0x184CBE4", VA = "0x184CBE4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x184CC98", Offset = "0x184CC98", VA = "0x184CC98", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x184CCC0", Offset = "0x184CCC0", VA = "0x184CCC0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x184CD58", Offset = "0x184CD58", VA = "0x184CD58", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x184CD5C", Offset = "0x184CD5C", VA = "0x184CD5C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x184CE70", Offset = "0x184CE70", VA = "0x184CE70", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x184CF70", Offset = "0x184CF70", VA = "0x184CF70")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x184D020", Offset = "0x184D020", VA = "0x184D020", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x184D024", Offset = "0x184D024", VA = "0x184D024")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x184D168", Offset = "0x184D168", VA = "0x184D168", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600213E")]
		[Address(RVA = "0x184D16C", Offset = "0x184D16C", VA = "0x184D16C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x184D230", Offset = "0x184D230", VA = "0x184D230", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002140")]
		[Address(RVA = "0x184D234", Offset = "0x184D234", VA = "0x184D234")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x184D2F8", Offset = "0x184D2F8", VA = "0x184D2F8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002142")]
		[Address(RVA = "0x184D2FC", Offset = "0x184D2FC", VA = "0x184D2FC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x184D3C0", Offset = "0x184D3C0", VA = "0x184D3C0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x184D3C4", Offset = "0x184D3C4", VA = "0x184D3C4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x184D478", Offset = "0x184D478", VA = "0x184D478", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002146")]
		[Address(RVA = "0x184D4A0", Offset = "0x184D4A0", VA = "0x184D4A0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x184D538", Offset = "0x184D538", VA = "0x184D538", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x184D53C", Offset = "0x184D53C", VA = "0x184D53C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x184D5FC", Offset = "0x184D5FC", VA = "0x184D5FC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600214A")]
		[Address(RVA = "0x184D600", Offset = "0x184D600", VA = "0x184D600")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x184D6CC", Offset = "0x184D6CC", VA = "0x184D6CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600214C")]
		[Address(RVA = "0x184D6D0", Offset = "0x184D6D0", VA = "0x184D6D0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x184D778", Offset = "0x184D778", VA = "0x184D778", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700049E")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x184C4DC", Offset = "0x184C4DC", VA = "0x184C4DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020D8")]
	[Address(RVA = "0x184C4D4", Offset = "0x184C4D4", VA = "0x184C4D4")]
	public ONSPPropagation()
	{
	}

	[Token(Token = "0x60020DA")]
	[Address(RVA = "0x184C54C", Offset = "0x184C54C", VA = "0x184C54C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}
}
[Token(Token = "0x200045F")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000460")]
	public enum Preset
	{
		[Token(Token = "0x4001937")]
		Custom,
		[Token(Token = "0x4001938")]
		AcousticTile,
		[Token(Token = "0x4001939")]
		Brick,
		[Token(Token = "0x400193A")]
		BrickPainted,
		[Token(Token = "0x400193B")]
		Carpet,
		[Token(Token = "0x400193C")]
		CarpetHeavy,
		[Token(Token = "0x400193D")]
		CarpetHeavyPadded,
		[Token(Token = "0x400193E")]
		CeramicTile,
		[Token(Token = "0x400193F")]
		Concrete,
		[Token(Token = "0x4001940")]
		ConcreteRough,
		[Token(Token = "0x4001941")]
		ConcreteBlock,
		[Token(Token = "0x4001942")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001943")]
		Curtain,
		[Token(Token = "0x4001944")]
		Foliage,
		[Token(Token = "0x4001945")]
		Glass,
		[Token(Token = "0x4001946")]
		GlassHeavy,
		[Token(Token = "0x4001947")]
		Grass,
		[Token(Token = "0x4001948")]
		Gravel,
		[Token(Token = "0x4001949")]
		GypsumBoard,
		[Token(Token = "0x400194A")]
		PlasterOnBrick,
		[Token(Token = "0x400194B")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400194C")]
		Soil,
		[Token(Token = "0x400194D")]
		SoundProof,
		[Token(Token = "0x400194E")]
		Snow,
		[Token(Token = "0x400194F")]
		Steel,
		[Token(Token = "0x4001950")]
		Water,
		[Token(Token = "0x4001951")]
		WoodThin,
		[Token(Token = "0x4001952")]
		WoodThick,
		[Token(Token = "0x4001953")]
		WoodFloor,
		[Token(Token = "0x4001954")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000461")]
	public sealed class Point
	{
		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x185C924", Offset = "0x185C924", VA = "0x185C924")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x185C95C", Offset = "0x185C95C", VA = "0x185C95C")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x185C9CC", Offset = "0x185C9CC", VA = "0x185C9CC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC94F38", Offset = "0xC94F38")]
	public sealed class Spectrum
	{
		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94F70", Offset = "0xC94F70")]
		private static Func<Point, float> <>f__am$cache0;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94F80", Offset = "0xC94F80")]
		private static Func<Point, float> <>f__am$cache1;

		[Token(Token = "0x170004A3")]
		public float Item
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x185CA30", Offset = "0x185CA30", VA = "0x185CA30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x1853310", Offset = "0x1853310", VA = "0x1853310")]
		public Spectrum()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x185CE2C", Offset = "0x185CE2C", VA = "0x185CE2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94F90", Offset = "0xC94F90")]
		private static float <get_Item>m__0(Point p)
		{
			return default(float);
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x185CE54", Offset = "0x185CE54", VA = "0x185CE54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94FA0", Offset = "0xC94FA0")]
		private static float <get_Item>m__1(Point p)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94E80", Offset = "0xC94E80")]
	public Spectrum absorption;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94EB8", Offset = "0xC94EB8")]
	public Spectrum transmission;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC94EF0", Offset = "0xC94EF0")]
	public Spectrum scattering;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170004A2")]
	public Preset preset
	{
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1853388", Offset = "0x1853388", VA = "0x1853388")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1853390", Offset = "0x1853390", VA = "0x1853390")]
		set
		{
		}
	}

	[Token(Token = "0x600214E")]
	[Address(RVA = "0x1853278", Offset = "0x1853278", VA = "0x1853278")]
	public ONSPPropagationMaterial()
	{
	}

	[Token(Token = "0x6002151")]
	[Address(RVA = "0x18533B8", Offset = "0x18533B8", VA = "0x18533B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6002152")]
	[Address(RVA = "0x1852B94", Offset = "0x1852B94", VA = "0x1852B94")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6002153")]
	[Address(RVA = "0x18539D8", Offset = "0x18539D8", VA = "0x18539D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002154")]
	[Address(RVA = "0x18539DC", Offset = "0x18539DC", VA = "0x18539DC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6002155")]
	[Address(RVA = "0x18533BC", Offset = "0x18533BC", VA = "0x18533BC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6002156")]
	[Address(RVA = "0x185228C", Offset = "0x185228C", VA = "0x185228C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6002157")]
	[Address(RVA = "0x1853AC4", Offset = "0x1853AC4", VA = "0x1853AC4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002158")]
	[Address(RVA = "0x1853FF8", Offset = "0x1853FF8", VA = "0x1853FF8")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002159")]
	[Address(RVA = "0x1854534", Offset = "0x1854534", VA = "0x1854534")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x1854A70", Offset = "0x1854A70", VA = "0x1854A70")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x1854FB0", Offset = "0x1854FB0", VA = "0x1854FB0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x18554E8", Offset = "0x18554E8", VA = "0x18554E8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215D")]
	[Address(RVA = "0x1855A20", Offset = "0x1855A20", VA = "0x1855A20")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x1855F60", Offset = "0x1855F60", VA = "0x1855F60")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0x18564A0", Offset = "0x18564A0", VA = "0x18564A0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0x18569DC", Offset = "0x18569DC", VA = "0x18569DC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002161")]
	[Address(RVA = "0x1856F1C", Offset = "0x1856F1C", VA = "0x1856F1C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x185745C", Offset = "0x185745C", VA = "0x185745C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002163")]
	[Address(RVA = "0x1857994", Offset = "0x1857994", VA = "0x1857994")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002164")]
	[Address(RVA = "0x1857ECC", Offset = "0x1857ECC", VA = "0x1857ECC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0x1858404", Offset = "0x1858404", VA = "0x1858404")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0x1858944", Offset = "0x1858944", VA = "0x1858944")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0x1858D18", Offset = "0x1858D18", VA = "0x1858D18")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0x18590E4", Offset = "0x18590E4", VA = "0x18590E4")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0x1859624", Offset = "0x1859624", VA = "0x1859624")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0x1859B60", Offset = "0x1859B60", VA = "0x1859B60")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216B")]
	[Address(RVA = "0x185A09C", Offset = "0x185A09C", VA = "0x185A09C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0x185A46C", Offset = "0x185A46C", VA = "0x185A46C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216D")]
	[Address(RVA = "0x185A5E0", Offset = "0x185A5E0", VA = "0x185A5E0")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0x185A9AC", Offset = "0x185A9AC", VA = "0x185A9AC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0x185AEE8", Offset = "0x185AEE8", VA = "0x185AEE8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002170")]
	[Address(RVA = "0x185B428", Offset = "0x185B428", VA = "0x185B428")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002171")]
	[Address(RVA = "0x185B964", Offset = "0x185B964", VA = "0x185B964")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0x185BEA4", Offset = "0x185BEA4", VA = "0x185BEA4")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6002173")]
	[Address(RVA = "0x185C3E4", Offset = "0x185C3E4", VA = "0x185C3E4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}
}
[Token(Token = "0x2000463")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600217B")]
	[Address(RVA = "0x185CE7C", Offset = "0x185CE7C", VA = "0x185CE7C")]
	public ONSPPropagationSettings()
	{
	}

	[Token(Token = "0x600217C")]
	[Address(RVA = "0x185CE8C", Offset = "0x185CE8C", VA = "0x185CE8C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000464")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170004A4")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x184B4A8", Offset = "0x184B4A8", VA = "0x184B4A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0x185D584", Offset = "0x185D584", VA = "0x185D584")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000465")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400195E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600217F")]
	[Address(RVA = "0x185D594", Offset = "0x185D594", VA = "0x185D594")]
	public ONSPVersion()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6002180")]
	[Address(RVA = "0x185D59C", Offset = "0x185D59C", VA = "0x185D59C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6002181")]
	[Address(RVA = "0x185D64C", Offset = "0x185D64C", VA = "0x185D64C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002182")]
	[Address(RVA = "0x185D758", Offset = "0x185D758", VA = "0x185D758")]
	private void Start()
	{
	}

	[Token(Token = "0x6002183")]
	[Address(RVA = "0x185D75C", Offset = "0x185D75C", VA = "0x185D75C")]
	private void Update()
	{
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000466")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x400195F")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6002184")]
		[Address(RVA = "0xEF829C", Offset = "0xEF829C", VA = "0xEF829C")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6002185")]
		[Address(RVA = "0xEF8324", Offset = "0xEF8324", VA = "0xEF8324")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6002186")]
		[Address(RVA = "0xEF83AC", Offset = "0xEF83AC", VA = "0xEF83AC")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6002187")]
		[Address(RVA = "0xEF8498", Offset = "0xEF8498", VA = "0xEF8498")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6002188")]
		[Address(RVA = "0xEF8520", Offset = "0xEF8520", VA = "0xEF8520")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6002189")]
		[Address(RVA = "0xEF85A8", Offset = "0xEF85A8", VA = "0xEF85A8")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x600218A")]
		[Address(RVA = "0xEF8638", Offset = "0xEF8638", VA = "0xEF8638")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xEF86C0", Offset = "0xEF86C0", VA = "0xEF86C0")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xEF86D4", Offset = "0xEF86D4", VA = "0xEF86D4")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xEF8710", Offset = "0xEF8710", VA = "0xEF8710")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xEF8714", Offset = "0xEF8714", VA = "0xEF8714")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x600218F")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002190")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000467")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC94FC0", Offset = "0xC94FC0")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC94FD4", Offset = "0xC94FD4")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x200046A")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x200046B")]
		public struct GSALine
		{
			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x200046C")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x200046D")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x200046E")]
		public struct GSARect
		{
			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001960")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6002191")]
		[Address(RVA = "0xEF8A3C", Offset = "0xEF8A3C", VA = "0xEF8A3C")]
		private static extern int GSAInit();

		[PreserveSig]
		[Token(Token = "0x6002192")]
		[Address(RVA = "0xEF8AC4", Offset = "0xEF8AC4", VA = "0xEF8AC4")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6002193")]
		[Address(RVA = "0xEF8B4C", Offset = "0xEF8B4C", VA = "0xEF8B4C")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6002194")]
		[Address(RVA = "0xEF8BE8", Offset = "0xEF8BE8", VA = "0xEF8BE8")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6002195")]
		[Address(RVA = "0xEF8C84", Offset = "0xEF8C84", VA = "0xEF8C84")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6002196")]
		[Address(RVA = "0xEF8D1C", Offset = "0xEF8D1C", VA = "0xEF8D1C")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6002197")]
		[Address(RVA = "0xEF8DB4", Offset = "0xEF8DB4", VA = "0xEF8DB4")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6002198")]
		[Address(RVA = "0xEF8E44", Offset = "0xEF8E44", VA = "0xEF8E44")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6002199")]
		[Address(RVA = "0xEF8EDC", Offset = "0xEF8EDC", VA = "0xEF8EDC")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x600219A")]
		[Address(RVA = "0xEF8F74", Offset = "0xEF8F74", VA = "0xEF8F74")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600219B")]
		[Address(RVA = "0xEF901C", Offset = "0xEF901C", VA = "0xEF901C")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xEF90DC", Offset = "0xEF90DC", VA = "0xEF90DC")]
		public static int Pvr_GSAInit()
		{
			return default(int);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xEF90E0", Offset = "0xEF90E0", VA = "0xEF90E0")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xEF90E4", Offset = "0xEF90E4", VA = "0xEF90E4")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xEF90E8", Offset = "0xEF90E8", VA = "0xEF90E8")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xEF90EC", Offset = "0xEF90EC", VA = "0xEF90EC")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xEF90F0", Offset = "0xEF90F0", VA = "0xEF90F0")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xEF9184", Offset = "0xEF9184", VA = "0xEF9184")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xEF9188", Offset = "0xEF9188", VA = "0xEF9188")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xEF918C", Offset = "0xEF918C", VA = "0xEF918C")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xEF9190", Offset = "0xEF9190", VA = "0xEF9190")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xEF9198", Offset = "0xEF9198", VA = "0xEF9198")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200046F")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001979")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x400197A")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170004A5")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0xEF8764", Offset = "0xEF8764", VA = "0xEF8764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xEF8718", Offset = "0xEF8718", VA = "0xEF8718")]
		public Pvr_BoundarySystem()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xEF87E0", Offset = "0xEF87E0", VA = "0xEF87E0")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xEF87E4", Offset = "0xEF87E4", VA = "0xEF87E4")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xEF87E8", Offset = "0xEF87E8", VA = "0xEF87E8")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xEF87EC", Offset = "0xEF87EC", VA = "0xEF87EC")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}
	}
	[Token(Token = "0x2000470")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000471")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000472")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000473")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000474")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94FE8", Offset = "0xC94FE8")]
		private static Pvr_SafeAreaAlgoAPI.SafeAreaCallback <>f__mg$cache0;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC94FF8", Offset = "0xC94FF8")]
		private static Pvr_SafeAreaAlgoAPI.SafeAreaCallbackShrink <>f__mg$cache1;

		[Token(Token = "0x170004A6")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0xEFADCC", Offset = "0xEFADCC", VA = "0xEFADCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xEFADC4", Offset = "0xEFADC4", VA = "0xEFADC4")]
		public Pvr_SafeAreaAlgoModule()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xEFAE4C", Offset = "0xEFAE4C", VA = "0xEFAE4C")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xEFAE54", Offset = "0xEFAE54", VA = "0xEFAE54")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xEFAE5C", Offset = "0xEFAE5C", VA = "0xEFAE5C")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xEFAFD4", Offset = "0xEFAFD4", VA = "0xEFAFD4")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xEFB3A8", Offset = "0xEFB3A8", VA = "0xEFB3A8")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xEFB430", Offset = "0xEFB430", VA = "0xEFB430")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xEFB488", Offset = "0xEFB488", VA = "0xEFB488")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xEF9CC4", Offset = "0xEF9CC4", VA = "0xEF9CC4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC95008", Offset = "0xC95008")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xEFA54C", Offset = "0xEFA54C", VA = "0xEFA54C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC9506C", Offset = "0xC9506C")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000475")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1769B9C", Offset = "0x1769B9C", VA = "0x1769B9C")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class ControllerHand
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int TriggerNum;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Quaternion Rotation;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 Position;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Battery;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public ControllerState ConnectState;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool isShowBoundary;

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x17699A8", Offset = "0x17699A8", VA = "0x17699A8")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public enum ControllerState
	{
		[Token(Token = "0x40019AC")]
		Error = -1,
		[Token(Token = "0x40019AD")]
		DisConnected,
		[Token(Token = "0x40019AE")]
		Connected
	}
	[Token(Token = "0x2000478")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40019B0")]
		APP = 1,
		[Token(Token = "0x40019B1")]
		TOUCHPAD,
		[Token(Token = "0x40019B2")]
		HOME,
		[Token(Token = "0x40019B3")]
		VOLUMEUP,
		[Token(Token = "0x40019B4")]
		VOLUMEDOWN,
		[Token(Token = "0x40019B5")]
		TRIGGER,
		[Token(Token = "0x40019B6")]
		A,
		[Token(Token = "0x40019B7")]
		B,
		[Token(Token = "0x40019B8")]
		X,
		[Token(Token = "0x40019B9")]
		Y,
		[Token(Token = "0x40019BA")]
		Left,
		[Token(Token = "0x40019BB")]
		Right
	}
	[Token(Token = "0x2000479")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40019BD")]
		No,
		[Token(Token = "0x40019BE")]
		SwipeUp,
		[Token(Token = "0x40019BF")]
		SwipeDown,
		[Token(Token = "0x40019C0")]
		SwipeLeft,
		[Token(Token = "0x40019C1")]
		SwipeRight
	}
	[Token(Token = "0x200047A")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40019C3")]
		No,
		[Token(Token = "0x40019C4")]
		ClickUp,
		[Token(Token = "0x40019C5")]
		ClickDown,
		[Token(Token = "0x40019C6")]
		ClickLeft,
		[Token(Token = "0x40019C7")]
		ClickRight
	}
	[Token(Token = "0x200047B")]
	public struct Controller
	{
		[Token(Token = "0x40019C8")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x175DD14", Offset = "0x175DD14", VA = "0x175DD14")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1765A10", Offset = "0x1765A10", VA = "0x1765A10")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1765CEC", Offset = "0x1765CEC", VA = "0x1765CEC")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1765DF8", Offset = "0x1765DF8", VA = "0x1765DF8")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x1765F28", Offset = "0x1765F28", VA = "0x1765F28")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x176604C", Offset = "0x176604C", VA = "0x176604C")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x1766120", Offset = "0x1766120", VA = "0x1766120")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x17661F4", Offset = "0x17661F4", VA = "0x17661F4")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x17662C8", Offset = "0x17662C8", VA = "0x17662C8")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x176639C", Offset = "0x176639C", VA = "0x176639C")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1766994", Offset = "0x1766994", VA = "0x1766994")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1766F8C", Offset = "0x1766F8C", VA = "0x1766F8C")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1767584", Offset = "0x1767584", VA = "0x1767584")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1767B7C", Offset = "0x1767B7C", VA = "0x1767B7C")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x175DB28", Offset = "0x175DB28", VA = "0x175DB28")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1768174", Offset = "0x1768174", VA = "0x1768174")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x176824C", Offset = "0x176824C", VA = "0x176824C")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x17682C0", Offset = "0x17682C0", VA = "0x17682C0")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1768380", Offset = "0x1768380", VA = "0x1768380")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x17683F8", Offset = "0x17683F8", VA = "0x17683F8")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x176846C", Offset = "0x176846C", VA = "0x176846C")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x17684E0", Offset = "0x17684E0", VA = "0x17684E0")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1768560", Offset = "0x1768560", VA = "0x1768560")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x17685E0", Offset = "0x17685E0", VA = "0x17685E0")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1768680", Offset = "0x1768680", VA = "0x1768680")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1768700", Offset = "0x1768700", VA = "0x1768700")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1768780", Offset = "0x1768780", VA = "0x1768780")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1768800", Offset = "0x1768800", VA = "0x1768800")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1768880", Offset = "0x1768880", VA = "0x1768880")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x17688F8", Offset = "0x17688F8", VA = "0x17688F8")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1768970", Offset = "0x1768970", VA = "0x1768970")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1768A4C", Offset = "0x1768A4C", VA = "0x1768A4C")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1768AC4", Offset = "0x1768AC4", VA = "0x1768AC4")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1768B44", Offset = "0x1768B44", VA = "0x1768B44")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1768BBC", Offset = "0x1768BBC", VA = "0x1768BBC")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1768C3C", Offset = "0x1768C3C", VA = "0x1768C3C")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1768CBC", Offset = "0x1768CBC", VA = "0x1768CBC")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1768D3C", Offset = "0x1768D3C", VA = "0x1768D3C")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1768DB4", Offset = "0x1768DB4", VA = "0x1768DB4")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1768E2C", Offset = "0x1768E2C", VA = "0x1768E2C")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1768EBC", Offset = "0x1768EBC", VA = "0x1768EBC")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1768F3C", Offset = "0x1768F3C", VA = "0x1768F3C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1768FBC", Offset = "0x1768FBC", VA = "0x1768FBC")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1769034", Offset = "0x1769034", VA = "0x1769034")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x17690AC", Offset = "0x17690AC", VA = "0x17690AC")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1769124", Offset = "0x1769124", VA = "0x1769124")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x17691A4", Offset = "0x17691A4", VA = "0x17691A4")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1769294", Offset = "0x1769294", VA = "0x1769294")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1769318", Offset = "0x1769318", VA = "0x1769318")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x176939C", Offset = "0x176939C", VA = "0x176939C")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x17693A0", Offset = "0x17693A0", VA = "0x17693A0")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1769474", Offset = "0x1769474", VA = "0x1769474")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1769540", Offset = "0x1769540", VA = "0x1769540")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x17695FC", Offset = "0x17695FC", VA = "0x17695FC")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x17696B4", Offset = "0x17696B4", VA = "0x17696B4")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x176976C", Offset = "0x176976C", VA = "0x176976C")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1769828", Offset = "0x1769828", VA = "0x1769828")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x17698A8", Offset = "0x17698A8", VA = "0x17698A8")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1769928", Offset = "0x1769928", VA = "0x1769928")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1769478", Offset = "0x1769478", VA = "0x1769478")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1769544", Offset = "0x1769544", VA = "0x1769544")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1769600", Offset = "0x1769600", VA = "0x1769600")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002208")]
		[Address(RVA = "0x17696B8", Offset = "0x17696B8", VA = "0x17696B8")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1769770", Offset = "0x1769770", VA = "0x1769770")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600220A")]
		[Address(RVA = "0x17693A4", Offset = "0x17693A4", VA = "0x17693A4")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
}
[Token(Token = "0x200047C")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x200047D")]
	public enum UserHandNess
	{
		[Token(Token = "0x40019DE")]
		Right,
		[Token(Token = "0x40019DF")]
		Left
	}

	[Token(Token = "0x200047E")]
	public enum GazeType
	{
		[Token(Token = "0x40019E1")]
		Never,
		[Token(Token = "0x40019E2")]
		DuringMotion,
		[Token(Token = "0x40019E3")]
		Always
	}

	[Token(Token = "0x200047F")]
	public enum ControllerAxis
	{
		[Token(Token = "0x40019E5")]
		Controller,
		[Token(Token = "0x40019E6")]
		Wrist,
		[Token(Token = "0x40019E7")]
		Elbow,
		[Token(Token = "0x40019E8")]
		Shoulder
	}

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC950D0", Offset = "0xC950D0")]
	public float ElbowHeight;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC950EC", Offset = "0xC950EC")]
	public float ElbowDepth;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC95108", Offset = "0xC95108")]
	public float PointerTiltAngle;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95120", Offset = "0xC95120")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC95120", Offset = "0xC95120")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9515C", Offset = "0xC9515C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9515C", Offset = "0xC9515C")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95198", Offset = "0xC95198")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC95198", Offset = "0xC95198")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC951D4", Offset = "0xC951D4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC951D4", Offset = "0xC951D4")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95210", Offset = "0xC95210")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC95210", Offset = "0xC95210")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9524C", Offset = "0xC9524C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9524C", Offset = "0xC9524C")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95288", Offset = "0xC95288")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC95288", Offset = "0xC95288")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC952C4", Offset = "0xC952C4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC952C4", Offset = "0xC952C4")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x170004A7")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x600221F")]
		[Address(RVA = "0x186C548", Offset = "0x186C548", VA = "0x186C548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95300", Offset = "0xC95300")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6002220")]
		[Address(RVA = "0x186C464", Offset = "0x186C464", VA = "0x186C464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95310", Offset = "0xC95310")]
		set
		{
		}
	}

	[Token(Token = "0x170004A8")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6002221")]
		[Address(RVA = "0x186C59C", Offset = "0x186C59C", VA = "0x186C59C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95320", Offset = "0xC95320")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6002222")]
		[Address(RVA = "0x186C4D4", Offset = "0x186C4D4", VA = "0x186C4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95330", Offset = "0xC95330")]
		set
		{
		}
	}

	[Token(Token = "0x170004A9")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6002223")]
		[Address(RVA = "0x186C860", Offset = "0x186C860", VA = "0x186C860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95340", Offset = "0xC95340")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6002224")]
		[Address(RVA = "0x186C77C", Offset = "0x186C77C", VA = "0x186C77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95350", Offset = "0xC95350")]
		set
		{
		}
	}

	[Token(Token = "0x170004AA")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6002225")]
		[Address(RVA = "0x186C8B4", Offset = "0x186C8B4", VA = "0x186C8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95360", Offset = "0xC95360")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6002226")]
		[Address(RVA = "0x186C7EC", Offset = "0x186C7EC", VA = "0x186C7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95370", Offset = "0xC95370")]
		set
		{
		}
	}

	[Token(Token = "0x170004AB")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6002227")]
		[Address(RVA = "0x186C6D4", Offset = "0x186C6D4", VA = "0x186C6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95380", Offset = "0xC95380")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6002228")]
		[Address(RVA = "0x186C5F0", Offset = "0x186C5F0", VA = "0x186C5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95390", Offset = "0xC95390")]
		set
		{
		}
	}

	[Token(Token = "0x170004AC")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6002229")]
		[Address(RVA = "0x186C728", Offset = "0x186C728", VA = "0x186C728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953A0", Offset = "0xC953A0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600222A")]
		[Address(RVA = "0x186C660", Offset = "0x186C660", VA = "0x186C660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953B0", Offset = "0xC953B0")]
		set
		{
		}
	}

	[Token(Token = "0x170004AD")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x600222B")]
		[Address(RVA = "0x186C9EC", Offset = "0x186C9EC", VA = "0x186C9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953C0", Offset = "0xC953C0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600222C")]
		[Address(RVA = "0x186C908", Offset = "0x186C908", VA = "0x186C908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953D0", Offset = "0xC953D0")]
		set
		{
		}
	}

	[Token(Token = "0x170004AE")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x600222D")]
		[Address(RVA = "0x186CA40", Offset = "0x186CA40", VA = "0x186CA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953E0", Offset = "0xC953E0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600222E")]
		[Address(RVA = "0x186C978", Offset = "0x186C978", VA = "0x186C978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC953F0", Offset = "0xC953F0")]
		set
		{
		}
	}

	[Token(Token = "0x600220B")]
	[Address(RVA = "0x1869F3C", Offset = "0x1869F3C", VA = "0x1869F3C")]
	public Pvr_Controller()
	{
	}

	[Token(Token = "0x600220C")]
	[Address(RVA = "0x1869FB0", Offset = "0x1869FB0", VA = "0x1869FB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600220D")]
	[Address(RVA = "0x186A114", Offset = "0x186A114", VA = "0x186A114")]
	private void Start()
	{
	}

	[Token(Token = "0x600220E")]
	[Address(RVA = "0x186A188", Offset = "0x186A188", VA = "0x186A188")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600220F")]
	[Address(RVA = "0x186A2EC", Offset = "0x186A2EC", VA = "0x186A2EC")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6002210")]
	[Address(RVA = "0x186A39C", Offset = "0x186A39C", VA = "0x186A39C")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6002211")]
	[Address(RVA = "0x186A3A0", Offset = "0x186A3A0", VA = "0x186A3A0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6002212")]
	[Address(RVA = "0x186A2F0", Offset = "0x186A2F0", VA = "0x186A2F0")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6002213")]
	[Address(RVA = "0x186A400", Offset = "0x186A400", VA = "0x186A400")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6002214")]
	[Address(RVA = "0x186A5F0", Offset = "0x186A5F0", VA = "0x186A5F0")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6002215")]
	[Address(RVA = "0x186A7BC", Offset = "0x186A7BC", VA = "0x186A7BC")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6002216")]
	[Address(RVA = "0x186A8B4", Offset = "0x186A8B4", VA = "0x186A8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6002217")]
	[Address(RVA = "0x186A3A4", Offset = "0x186A3A4", VA = "0x186A3A4")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6002218")]
	[Address(RVA = "0x186AB94", Offset = "0x186AB94", VA = "0x186AB94")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6002219")]
	[Address(RVA = "0x186AC14", Offset = "0x186AC14", VA = "0x186AC14")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x600221A")]
	[Address(RVA = "0x186AC9C", Offset = "0x186AC9C", VA = "0x186AC9C")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x600221B")]
	[Address(RVA = "0x186C1E0", Offset = "0x186C1E0", VA = "0x186C1E0")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600221C")]
	[Address(RVA = "0x186AE28", Offset = "0x186AE28", VA = "0x186AE28")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x600221D")]
	[Address(RVA = "0x186AE34", Offset = "0x186AE34", VA = "0x186AE34")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x600221E")]
	[Address(RVA = "0x186B538", Offset = "0x186B538", VA = "0x186B538")]
	public void UpdateControllerDataSO(int hand)
	{
	}
}
[Token(Token = "0x2000480")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x600222F")]
	[Address(RVA = "0x1E79C74", Offset = "0x1E79C74", VA = "0x1E79C74")]
	public Pvr_ControllerDemo()
	{
	}

	[Token(Token = "0x6002230")]
	[Address(RVA = "0x1E79C84", Offset = "0x1E79C84", VA = "0x1E79C84")]
	private void Start()
	{
	}

	[Token(Token = "0x6002231")]
	[Address(RVA = "0x1E7A21C", Offset = "0x1E7A21C", VA = "0x1E7A21C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002232")]
	[Address(RVA = "0x1E7A6E0", Offset = "0x1E7A6E0", VA = "0x1E7A6E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6002233")]
	[Address(RVA = "0x1E7CA80", Offset = "0x1E7CA80", VA = "0x1E7CA80")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6002234")]
	[Address(RVA = "0x1E7CB34", Offset = "0x1E7CB34", VA = "0x1E7CB34")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6002235")]
	[Address(RVA = "0x1E7CBE8", Offset = "0x1E7CBE8", VA = "0x1E7CBE8")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6002236")]
	[Address(RVA = "0x1E7CC88", Offset = "0x1E7CC88", VA = "0x1E7CC88")]
	public void SwitchControlMode()
	{
	}
}
[Token(Token = "0x2000481")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6002237")]
	[Address(RVA = "0x1E7CC8C", Offset = "0x1E7CC8C", VA = "0x1E7CC8C")]
	public Pvr_ControllerEventsExamples()
	{
	}

	[Token(Token = "0x6002238")]
	[Address(RVA = "0x1E7CC94", Offset = "0x1E7CC94", VA = "0x1E7CC94")]
	private void Start()
	{
	}

	[Token(Token = "0x6002239")]
	[Address(RVA = "0x1E7CEF8", Offset = "0x1E7CEF8", VA = "0x1E7CEF8")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600223A")]
	[Address(RVA = "0x1E7CFA0", Offset = "0x1E7CFA0", VA = "0x1E7CFA0")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600223B")]
	[Address(RVA = "0x1E7D048", Offset = "0x1E7D048", VA = "0x1E7D048")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600223C")]
	[Address(RVA = "0x1E7D0F0", Offset = "0x1E7D0F0", VA = "0x1E7D0F0")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600223D")]
	[Address(RVA = "0x1E7D198", Offset = "0x1E7D198", VA = "0x1E7D198")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}
}
[Token(Token = "0x2000482")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC954C0", Offset = "0xC954C0")]
	private sealed class <RefreshController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Pvr_ControllerInit $this;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000671")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D06")]
			[Address(RVA = "0x1E7FEE0", Offset = "0x1E7FEE0", VA = "0x1E7FEE0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000672")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D07")]
			[Address(RVA = "0x1E7FEE8", Offset = "0x1E7FEE8", VA = "0x1E7FEE8", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x1E7E4E8", Offset = "0x1E7E4E8", VA = "0x1E7E4E8")]
		[DebuggerHidden]
		public <RefreshController>c__Iterator0()
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x1E7F998", Offset = "0x1E7F998", VA = "0x1E7F998", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x1E7FEF0", Offset = "0x1E7FEF0", VA = "0x1E7FEF0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x1E7FF04", Offset = "0x1E7FF04", VA = "0x1E7FF04", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject neo;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int controllerType;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int systemOrUnity;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private JsonData curControllerData;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string modelName;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string texFormat;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string prePath;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string modelFilePath;

	[Token(Token = "0x4001A11")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4001A12")]
	private const string neoTexbasePath = "Controller/controller2/controller2";

	[Token(Token = "0x4001A13")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4001A14")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x600223E")]
	[Address(RVA = "0x1E7D240", Offset = "0x1E7D240", VA = "0x1E7D240")]
	public Pvr_ControllerInit()
	{
	}

	[Token(Token = "0x600223F")]
	[Address(RVA = "0x1E7D2D8", Offset = "0x1E7D2D8", VA = "0x1E7D2D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002240")]
	[Address(RVA = "0x1E7D5BC", Offset = "0x1E7D5BC", VA = "0x1E7D5BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002241")]
	[Address(RVA = "0x1E7D7F0", Offset = "0x1E7D7F0", VA = "0x1E7D7F0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6002242")]
	[Address(RVA = "0x1E7DAE8", Offset = "0x1E7DAE8", VA = "0x1E7DAE8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6002243")]
	[Address(RVA = "0x1E7DD0C", Offset = "0x1E7DD0C", VA = "0x1E7DD0C")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6002244")]
	[Address(RVA = "0x1E7DF34", Offset = "0x1E7DF34", VA = "0x1E7DF34")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6002245")]
	[Address(RVA = "0x1E7E360", Offset = "0x1E7E360", VA = "0x1E7E360")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6002246")]
	[Address(RVA = "0x1E7D7FC", Offset = "0x1E7D7FC", VA = "0x1E7D7FC")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6002247")]
	[Address(RVA = "0x1E7E028", Offset = "0x1E7E028", VA = "0x1E7E028")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6002248")]
	[Address(RVA = "0x1E7DEA8", Offset = "0x1E7DEA8", VA = "0x1E7DEA8")]
	[DebuggerHidden]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6002249")]
	[Address(RVA = "0x1E7E4F0", Offset = "0x1E7E4F0", VA = "0x1E7E4F0")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x600224A")]
	[Address(RVA = "0x1E7EBD4", Offset = "0x1E7EBD4", VA = "0x1E7EBD4")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x600224B")]
	[Address(RVA = "0x1E7E7FC", Offset = "0x1E7E7FC", VA = "0x1E7E7FC")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x600224C")]
	[Address(RVA = "0x1E7F700", Offset = "0x1E7F700", VA = "0x1E7F700")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x600224D")]
	[Address(RVA = "0x1E7F82C", Offset = "0x1E7F82C", VA = "0x1E7F82C")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}
}
[Token(Token = "0x2000483")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x4001A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] sensorData;

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] keyData;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] fixedState;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] neoposeData;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] neoKeyArray;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] neotriggerV;

	[Token(Token = "0x600224E")]
	[Address(RVA = "0x1E7FF68", Offset = "0x1E7FF68", VA = "0x1E7FF68")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x600224F")]
	[Address(RVA = "0x1E80388", Offset = "0x1E80388", VA = "0x1E80388")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6002250")]
	[Address(RVA = "0x1E80D58", Offset = "0x1E80D58", VA = "0x1E80D58")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6002251")]
	[Address(RVA = "0x1E80AB8", Offset = "0x1E80AB8", VA = "0x1E80AB8")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6002252")]
	[Address(RVA = "0x1E80BE0", Offset = "0x1E80BE0", VA = "0x1E80BE0")]
	public void BindService()
	{
	}

	[Token(Token = "0x6002253")]
	[Address(RVA = "0x1E80F1C", Offset = "0x1E80F1C", VA = "0x1E80F1C")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6002254")]
	[Address(RVA = "0x1E81094", Offset = "0x1E81094", VA = "0x1E81094")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6002255")]
	[Address(RVA = "0x1E81230", Offset = "0x1E81230", VA = "0x1E81230")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6002256")]
	[Address(RVA = "0x1E81380", Offset = "0x1E81380", VA = "0x1E81380")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6002257")]
	[Address(RVA = "0x1E8151C", Offset = "0x1E8151C", VA = "0x1E8151C")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6002258")]
	[Address(RVA = "0x1E816FC", Offset = "0x1E816FC", VA = "0x1E816FC")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6002259")]
	[Address(RVA = "0x1E818B0", Offset = "0x1E818B0", VA = "0x1E818B0")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x600225A")]
	[Address(RVA = "0x1E81A20", Offset = "0x1E81A20", VA = "0x1E81A20")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600225B")]
	[Address(RVA = "0x1E81B58", Offset = "0x1E81B58", VA = "0x1E81B58")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600225C")]
	[Address(RVA = "0x1E809B0", Offset = "0x1E809B0", VA = "0x1E809B0")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x600225D")]
	[Address(RVA = "0x1E81C94", Offset = "0x1E81C94", VA = "0x1E81C94")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600225E")]
	[Address(RVA = "0x1E81E48", Offset = "0x1E81E48", VA = "0x1E81E48")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x600225F")]
	[Address(RVA = "0x1E81FA8", Offset = "0x1E81FA8", VA = "0x1E81FA8")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6002260")]
	[Address(RVA = "0x1E82054", Offset = "0x1E82054", VA = "0x1E82054")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6002261")]
	[Address(RVA = "0x1E82124", Offset = "0x1E82124", VA = "0x1E82124")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6002262")]
	[Address(RVA = "0x1E822D8", Offset = "0x1E822D8", VA = "0x1E822D8")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6002263")]
	[Address(RVA = "0x1E823E0", Offset = "0x1E823E0", VA = "0x1E823E0")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6002264")]
	[Address(RVA = "0x1E824DC", Offset = "0x1E824DC", VA = "0x1E824DC")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6002265")]
	[Address(RVA = "0x1E825E4", Offset = "0x1E825E4", VA = "0x1E825E4")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6002266")]
	[Address(RVA = "0x1E826E0", Offset = "0x1E826E0", VA = "0x1E826E0")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6002267")]
	[Address(RVA = "0x1E82A3C", Offset = "0x1E82A3C", VA = "0x1E82A3C")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6002268")]
	[Address(RVA = "0x1E82B3C", Offset = "0x1E82B3C", VA = "0x1E82B3C")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6002269")]
	[Address(RVA = "0x1E82CF8", Offset = "0x1E82CF8", VA = "0x1E82CF8")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x600226A")]
	[Address(RVA = "0x1E82EB4", Offset = "0x1E82EB4", VA = "0x1E82EB4")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x600226B")]
	[Address(RVA = "0x1E83378", Offset = "0x1E83378", VA = "0x1E83378")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x600226C")]
	[Address(RVA = "0x1E834F8", Offset = "0x1E834F8", VA = "0x1E834F8")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x600226D")]
	[Address(RVA = "0x1E83590", Offset = "0x1E83590", VA = "0x1E83590")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x600226E")]
	[Address(RVA = "0x1E83D8C", Offset = "0x1E83D8C", VA = "0x1E83D8C")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x600226F")]
	[Address(RVA = "0x1E84854", Offset = "0x1E84854", VA = "0x1E84854")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6002270")]
	[Address(RVA = "0x1E864DC", Offset = "0x1E864DC", VA = "0x1E864DC")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6002271")]
	[Address(RVA = "0x1E86610", Offset = "0x1E86610", VA = "0x1E86610")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6002272")]
	[Address(RVA = "0x1E88EFC", Offset = "0x1E88EFC", VA = "0x1E88EFC")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6002273")]
	[Address(RVA = "0x1E890F0", Offset = "0x1E890F0", VA = "0x1E890F0")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6002274")]
	[Address(RVA = "0x1E892A0", Offset = "0x1E892A0", VA = "0x1E892A0")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6002275")]
	[Address(RVA = "0x1E8949C", Offset = "0x1E8949C", VA = "0x1E8949C")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6002276")]
	[Address(RVA = "0x1E89698", Offset = "0x1E89698", VA = "0x1E89698")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6002277")]
	[Address(RVA = "0x1E897CC", Offset = "0x1E897CC", VA = "0x1E897CC")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002278")]
	[Address(RVA = "0x1E89CB8", Offset = "0x1E89CB8", VA = "0x1E89CB8")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002279")]
	[Address(RVA = "0x1E8A378", Offset = "0x1E8A378", VA = "0x1E8A378")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600227A")]
	[Address(RVA = "0x1E8A8E4", Offset = "0x1E8A8E4", VA = "0x1E8A8E4")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600227B")]
	[Address(RVA = "0x1E8A9EC", Offset = "0x1E8A9EC", VA = "0x1E8A9EC")]
	public void VibateController(int hand, int strength)
	{
	}

	[Token(Token = "0x600227C")]
	[Address(RVA = "0x1E8ABDC", Offset = "0x1E8ABDC", VA = "0x1E8ABDC")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x600227D")]
	[Address(RVA = "0x1E8AF74", Offset = "0x1E8AF74", VA = "0x1E8AF74")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600227E")]
	[Address(RVA = "0x1E8B084", Offset = "0x1E8B084", VA = "0x1E8B084")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x600227F")]
	[Address(RVA = "0x1E8B1F0", Offset = "0x1E8B1F0", VA = "0x1E8B1F0")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6002280")]
	[Address(RVA = "0x1E8B2A4", Offset = "0x1E8B2A4", VA = "0x1E8B2A4")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6002281")]
	[Address(RVA = "0x1E8B418", Offset = "0x1E8B418", VA = "0x1E8B418")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6002282")]
	[Address(RVA = "0x1E8B58C", Offset = "0x1E8B58C", VA = "0x1E8B58C")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6002283")]
	[Address(RVA = "0x1E8B700", Offset = "0x1E8B700", VA = "0x1E8B700")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6002284")]
	[Address(RVA = "0x1E8B7B4", Offset = "0x1E8B7B4", VA = "0x1E8B7B4")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6002285")]
	[Address(RVA = "0x1E8B868", Offset = "0x1E8B868", VA = "0x1E8B868")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6002286")]
	[Address(RVA = "0x1E8BA58", Offset = "0x1E8BA58", VA = "0x1E8BA58")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6002287")]
	[Address(RVA = "0x1E8BBCC", Offset = "0x1E8BBCC", VA = "0x1E8BBCC")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6002288")]
	[Address(RVA = "0x1E8BD40", Offset = "0x1E8BD40", VA = "0x1E8BD40")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6002289")]
	[Address(RVA = "0x1E8BE50", Offset = "0x1E8BE50", VA = "0x1E8BE50")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600228A")]
	[Address(RVA = "0x1E8BF60", Offset = "0x1E8BF60", VA = "0x1E8BF60")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600228B")]
	[Address(RVA = "0x1E8C070", Offset = "0x1E8C070", VA = "0x1E8C070")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600228C")]
	[Address(RVA = "0x1E8C1E4", Offset = "0x1E8C1E4", VA = "0x1E8C1E4")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x600228D")]
	[Address(RVA = "0x1E8C298", Offset = "0x1E8C298", VA = "0x1E8C298")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x600228E")]
	[Address(RVA = "0x1E8C34C", Offset = "0x1E8C34C", VA = "0x1E8C34C")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x600228F")]
	[Address(RVA = "0x1E8C4DC", Offset = "0x1E8C4DC", VA = "0x1E8C4DC")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6002290")]
	[Address(RVA = "0x1E8C5A4", Offset = "0x1E8C5A4", VA = "0x1E8C5A4")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6002291")]
	[Address(RVA = "0x1E8C650", Offset = "0x1E8C650", VA = "0x1E8C650")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6002292")]
	[Address(RVA = "0x1E8C758", Offset = "0x1E8C758", VA = "0x1E8C758")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6002293")]
	[Address(RVA = "0x1E8C860", Offset = "0x1E8C860", VA = "0x1E8C860")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6002294")]
	[Address(RVA = "0x1E8C960", Offset = "0x1E8C960", VA = "0x1E8C960")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6002295")]
	[Address(RVA = "0x1E8CA60", Offset = "0x1E8CA60", VA = "0x1E8CA60")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6002296")]
	[Address(RVA = "0x1E8CB64", Offset = "0x1E8CB64", VA = "0x1E8CB64")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6002297")]
	[Address(RVA = "0x1E8CCD8", Offset = "0x1E8CCD8", VA = "0x1E8CCD8")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6002298")]
	[Address(RVA = "0x1E8CE4C", Offset = "0x1E8CE4C", VA = "0x1E8CE4C")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6002299")]
	[Address(RVA = "0x1E8CFCC", Offset = "0x1E8CFCC", VA = "0x1E8CFCC")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600229A")]
	[Address(RVA = "0x1E8D14C", Offset = "0x1E8D14C", VA = "0x1E8D14C")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000484")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000486")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000487")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000488")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000489")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200048A")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200048B")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200048C")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x200048D")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x200048E")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x200048F")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000490")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000491")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000492")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000493")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000494")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000495")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000496")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000497")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000498")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x170004AF")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1E7C814", Offset = "0x1E7C814", VA = "0x1E7C814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400001C")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x600229D")]
		[Address(RVA = "0x1E79E48", Offset = "0x1E79E48", VA = "0x1E79E48")]
		add
		{
		}
		[Token(Token = "0x600229E")]
		[Address(RVA = "0x1E7A32C", Offset = "0x1E7A32C", VA = "0x1E7A32C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1E8D2DC", Offset = "0x1E8D2DC", VA = "0x1E8D2DC")]
		add
		{
		}
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x1E8D418", Offset = "0x1E8D418", VA = "0x1E8D418")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1E8D554", Offset = "0x1E8D554", VA = "0x1E8D554")]
		add
		{
		}
		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1E8D690", Offset = "0x1E8D690", VA = "0x1E8D690")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1E8D7CC", Offset = "0x1E8D7CC", VA = "0x1E8D7CC")]
		add
		{
		}
		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1E8D908", Offset = "0x1E8D908", VA = "0x1E8D908")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1E8DA44", Offset = "0x1E8DA44", VA = "0x1E8DA44")]
		add
		{
		}
		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x1E8DB80", Offset = "0x1E8DB80", VA = "0x1E8DB80")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x1E8DCBC", Offset = "0x1E8DCBC", VA = "0x1E8DCBC")]
		add
		{
		}
		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x1E8DDF8", Offset = "0x1E8DDF8", VA = "0x1E8DDF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1E8DF34", Offset = "0x1E8DF34", VA = "0x1E8DF34")]
		add
		{
		}
		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x1E8E070", Offset = "0x1E8E070", VA = "0x1E8E070")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x1E7A0E0", Offset = "0x1E7A0E0", VA = "0x1E7A0E0")]
		add
		{
		}
		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1E7A5A4", Offset = "0x1E7A5A4", VA = "0x1E7A5A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1E7D480", Offset = "0x1E7D480", VA = "0x1E7D480")]
		add
		{
		}
		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1E7D6B4", Offset = "0x1E7D6B4", VA = "0x1E7D6B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1E79F94", Offset = "0x1E79F94", VA = "0x1E79F94")]
		add
		{
		}
		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1E7A468", Offset = "0x1E7A468", VA = "0x1E7A468")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1E8E1AC", Offset = "0x1E8E1AC", VA = "0x1E8E1AC")]
		add
		{
		}
		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1E8E2E8", Offset = "0x1E8E2E8", VA = "0x1E8E2E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x1E8E424", Offset = "0x1E8E424", VA = "0x1E8E424")]
		add
		{
		}
		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1E8E560", Offset = "0x1E8E560", VA = "0x1E8E560")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x1E8E69C", Offset = "0x1E8E69C", VA = "0x1E8E69C")]
		add
		{
		}
		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x1E8E7D8", Offset = "0x1E8E7D8", VA = "0x1E8E7D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x1E8E914", Offset = "0x1E8E914", VA = "0x1E8E914")]
		add
		{
		}
		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1E8EA50", Offset = "0x1E8EA50", VA = "0x1E8EA50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x1E8EB8C", Offset = "0x1E8EB8C", VA = "0x1E8EB8C")]
		add
		{
		}
		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x1E8ECC8", Offset = "0x1E8ECC8", VA = "0x1E8ECC8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x1E8EE04", Offset = "0x1E8EE04", VA = "0x1E8EE04")]
		add
		{
		}
		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x1E8EF40", Offset = "0x1E8EF40", VA = "0x1E8EF40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x1E8F07C", Offset = "0x1E8F07C", VA = "0x1E8F07C")]
		add
		{
		}
		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1E8F1B8", Offset = "0x1E8F1B8", VA = "0x1E8F1B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1E8F2F4", Offset = "0x1E8F2F4", VA = "0x1E8F2F4")]
		add
		{
		}
		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x1E8F430", Offset = "0x1E8F430", VA = "0x1E8F430")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1E8F56C", Offset = "0x1E8F56C", VA = "0x1E8F56C")]
		add
		{
		}
		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x1E8F6A8", Offset = "0x1E8F6A8", VA = "0x1E8F6A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1E8F7E4", Offset = "0x1E8F7E4", VA = "0x1E8F7E4")]
		add
		{
		}
		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1E8F920", Offset = "0x1E8F920", VA = "0x1E8F920")]
		remove
		{
		}
	}

	[Token(Token = "0x600229B")]
	[Address(RVA = "0x1E8D2CC", Offset = "0x1E8D2CC", VA = "0x1E8D2CC")]
	public Pvr_ControllerManager()
	{
	}

	[Token(Token = "0x60022C5")]
	[Address(RVA = "0x1E8FA5C", Offset = "0x1E8FA5C", VA = "0x1E8FA5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022C6")]
	[Address(RVA = "0x1E8FD6C", Offset = "0x1E8FD6C", VA = "0x1E8FD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60022C7")]
	[Address(RVA = "0x1E8FE10", Offset = "0x1E8FE10", VA = "0x1E8FE10")]
	private void Update()
	{
	}

	[Token(Token = "0x60022C8")]
	[Address(RVA = "0x1E919C0", Offset = "0x1E919C0", VA = "0x1E919C0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60022C9")]
	[Address(RVA = "0x1E92308", Offset = "0x1E92308", VA = "0x1E92308")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60022CA")]
	[Address(RVA = "0x1E923F4", Offset = "0x1E923F4", VA = "0x1E923F4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60022CB")]
	[Address(RVA = "0x1E92554", Offset = "0x1E92554", VA = "0x1E92554")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60022CC")]
	[Address(RVA = "0x1E925FC", Offset = "0x1E925FC", VA = "0x1E925FC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0x1E926E0", Offset = "0x1E926E0", VA = "0x1E926E0")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0x1E8FCC4", Offset = "0x1E8FCC4", VA = "0x1E8FCC4")]
	public void BindService()
	{
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0x1E927C4", Offset = "0x1E927C4", VA = "0x1E927C4")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60022D0")]
	[Address(RVA = "0x1E9286C", Offset = "0x1E9286C", VA = "0x1E9286C")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0x1E92914", Offset = "0x1E92914", VA = "0x1E92914")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60022D2")]
	[Address(RVA = "0x1E91E80", Offset = "0x1E91E80", VA = "0x1E91E80")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60022D3")]
	[Address(RVA = "0x1E929C4", Offset = "0x1E929C4", VA = "0x1E929C4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60022D4")]
	[Address(RVA = "0x1E92A6C", Offset = "0x1E92A6C", VA = "0x1E92A6C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60022D5")]
	[Address(RVA = "0x1E92B14", Offset = "0x1E92B14", VA = "0x1E92B14")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x60022D6")]
	[Address(RVA = "0x1E92BD8", Offset = "0x1E92BD8", VA = "0x1E92BD8")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x60022D7")]
	[Address(RVA = "0x1E92C80", Offset = "0x1E92C80", VA = "0x1E92C80")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60022D8")]
	[Address(RVA = "0x1E92CF4", Offset = "0x1E92CF4", VA = "0x1E92CF4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60022D9")]
	[Address(RVA = "0x1E92D68", Offset = "0x1E92D68", VA = "0x1E92D68")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60022DA")]
	[Address(RVA = "0x1E92DDC", Offset = "0x1E92DDC", VA = "0x1E92DDC")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60022DB")]
	[Address(RVA = "0x1E92E50", Offset = "0x1E92E50", VA = "0x1E92E50")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x60022DC")]
	[Address(RVA = "0x1E92F00", Offset = "0x1E92F00", VA = "0x1E92F00")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60022DD")]
	[Address(RVA = "0x1E92FC0", Offset = "0x1E92FC0", VA = "0x1E92FC0")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x60022DE")]
	[Address(RVA = "0x1E938F4", Offset = "0x1E938F4", VA = "0x1E938F4")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x60022DF")]
	[Address(RVA = "0x1E93968", Offset = "0x1E93968", VA = "0x1E93968")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x60022E0")]
	[Address(RVA = "0x1E94064", Offset = "0x1E94064", VA = "0x1E94064")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x60022E1")]
	[Address(RVA = "0x1E94758", Offset = "0x1E94758", VA = "0x1E94758")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0x1E95900", Offset = "0x1E95900", VA = "0x1E95900")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0x1E96738", Offset = "0x1E96738", VA = "0x1E96738")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0x1E96F98", Offset = "0x1E96F98", VA = "0x1E96F98")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0x1E97874", Offset = "0x1E97874", VA = "0x1E97874")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0x1E980D4", Offset = "0x1E980D4", VA = "0x1E980D4")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x60022E7")]
	[Address(RVA = "0x1E98934", Offset = "0x1E98934", VA = "0x1E98934")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x60022E8")]
	[Address(RVA = "0x1E99194", Offset = "0x1E99194", VA = "0x1E99194")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x60022E9")]
	[Address(RVA = "0x1E999F4", Offset = "0x1E999F4", VA = "0x1E999F4")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x60022EA")]
	[Address(RVA = "0x1E9A254", Offset = "0x1E9A254", VA = "0x1E9A254")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x60022EB")]
	[Address(RVA = "0x1E9AAB4", Offset = "0x1E9AAB4", VA = "0x1E9AAB4")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x60022EC")]
	[Address(RVA = "0x1E9B314", Offset = "0x1E9B314", VA = "0x1E9B314")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x60022ED")]
	[Address(RVA = "0x1E9BB74", Offset = "0x1E9BB74", VA = "0x1E9BB74")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x60022EE")]
	[Address(RVA = "0x1E9C380", Offset = "0x1E9C380", VA = "0x1E9C380")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x60022EF")]
	[Address(RVA = "0x1E9C384", Offset = "0x1E9C384", VA = "0x1E9C384")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x60022F0")]
	[Address(RVA = "0x1E9C388", Offset = "0x1E9C388", VA = "0x1E9C388")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x60022F1")]
	[Address(RVA = "0x1E9C38C", Offset = "0x1E9C38C", VA = "0x1E9C38C")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x60022F2")]
	[Address(RVA = "0x1E9C6F0", Offset = "0x1E9C6F0", VA = "0x1E9C6F0")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x60022F3")]
	[Address(RVA = "0x1E9C860", Offset = "0x1E9C860", VA = "0x1E9C860")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x60022F4")]
	[Address(RVA = "0x1E9D11C", Offset = "0x1E9D11C", VA = "0x1E9D11C")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x60022F5")]
	[Address(RVA = "0x1E9C4F0", Offset = "0x1E9C4F0", VA = "0x1E9C4F0")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x60022F6")]
	[Address(RVA = "0x1E9D9D8", Offset = "0x1E9D9D8", VA = "0x1E9D9D8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x60022F7")]
	[Address(RVA = "0x1E9DA94", Offset = "0x1E9DA94", VA = "0x1E9DA94")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x60022F8")]
	[Address(RVA = "0x1E970E0", Offset = "0x1E970E0", VA = "0x1E970E0")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x60022F9")]
	[Address(RVA = "0x1E9112C", Offset = "0x1E9112C", VA = "0x1E9112C")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x60022FA")]
	[Address(RVA = "0x1E90CFC", Offset = "0x1E90CFC", VA = "0x1E90CFC")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0x1E9DAA8", Offset = "0x1E9DAA8", VA = "0x1E9DAA8")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000499")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001A52")]
		Controller0,
		[Token(Token = "0x4001A53")]
		Controller1
	}
}
[Token(Token = "0x200049A")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x2000645")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95A10", Offset = "0xC95A10")]
	private sealed class <ShowOrHideRay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Pvr_ControllerModuleInit $this;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000673")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0x1E9EFCC", Offset = "0x1E9EFCC", VA = "0x1E9EFCC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000674")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0x1E9EFD4", Offset = "0x1E9EFD4", VA = "0x1E9EFD4", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x1E9EA6C", Offset = "0x1E9EA6C", VA = "0x1E9EA6C")]
		[DebuggerHidden]
		public <ShowOrHideRay>c__Iterator0()
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0x1E9EE94", Offset = "0x1E9EE94", VA = "0x1E9EE94", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0x1E9EFDC", Offset = "0x1E9EFDC", VA = "0x1E9EFDC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0x1E9EFF0", Offset = "0x1E9EFF0", VA = "0x1E9EFF0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x600234D")]
	[Address(RVA = "0x1E9E530", Offset = "0x1E9E530", VA = "0x1E9E530")]
	public Pvr_ControllerModuleInit()
	{
	}

	[Token(Token = "0x600234E")]
	[Address(RVA = "0x1E9E540", Offset = "0x1E9E540", VA = "0x1E9E540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600234F")]
	[Address(RVA = "0x1E9E724", Offset = "0x1E9E724", VA = "0x1E9E724")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002350")]
	[Address(RVA = "0x1E9E81C", Offset = "0x1E9E81C", VA = "0x1E9E81C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6002351")]
	[Address(RVA = "0x1E9E890", Offset = "0x1E9E890", VA = "0x1E9E890")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6002352")]
	[Address(RVA = "0x1E9E9DC", Offset = "0x1E9E9DC", VA = "0x1E9E9DC")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6002353")]
	[Address(RVA = "0x1E9E820", Offset = "0x1E9E820", VA = "0x1E9E820")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0x1E9E9E0", Offset = "0x1E9E9E0", VA = "0x1E9E9E0")]
	[DebuggerHidden]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6002355")]
	[Address(RVA = "0x1E9EA74", Offset = "0x1E9EA74", VA = "0x1E9EA74")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6002356")]
	[Address(RVA = "0x1E9EBD0", Offset = "0x1E9EBD0", VA = "0x1E9EBD0")]
	public void UpdateRay()
	{
	}
}
[Token(Token = "0x200049B")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x6002357")]
	[Address(RVA = "0x1E9F054", Offset = "0x1E9F054", VA = "0x1E9F054")]
	public Pvr_ControllerPower()
	{
	}

	[Token(Token = "0x6002358")]
	[Address(RVA = "0x1E9F05C", Offset = "0x1E9F05C", VA = "0x1E9F05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6002359")]
	[Address(RVA = "0x1E9F154", Offset = "0x1E9F154", VA = "0x1E9F154")]
	private void Update()
	{
	}

	[Token(Token = "0x600235A")]
	[Address(RVA = "0x1E9F18C", Offset = "0x1E9F18C", VA = "0x1E9F18C")]
	private void RefreshPower(int hand)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200049C")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001A64")]
		Goblin,
		[Token(Token = "0x4001A65")]
		Neo,
		[Token(Token = "0x4001A66")]
		G2,
		[Token(Token = "0x4001A67")]
		Neo2,
		[Token(Token = "0x4001A68")]
		NewController
	}
}
[Token(Token = "0x200049D")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600235B")]
	[Address(RVA = "0x1E9F9C4", Offset = "0x1E9F9C4", VA = "0x1E9F9C4")]
	public Pvr_ControllerVisual()
	{
	}

	[Token(Token = "0x600235C")]
	[Address(RVA = "0x1E9F9CC", Offset = "0x1E9F9CC", VA = "0x1E9F9CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600235D")]
	[Address(RVA = "0x1E9FA24", Offset = "0x1E9FA24", VA = "0x1E9FA24")]
	private void Start()
	{
	}

	[Token(Token = "0x600235E")]
	[Address(RVA = "0x1E9FAA4", Offset = "0x1E9FAA4", VA = "0x1E9FAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600235F")]
	[Address(RVA = "0x1E9FADC", Offset = "0x1E9FADC", VA = "0x1E9FADC")]
	private void ChangeKeyEffects(int hand)
	{
	}
}
[Token(Token = "0x200049E")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200049F")]
	public enum TipBtn
	{
		[Token(Token = "0x4001A7C")]
		app,
		[Token(Token = "0x4001A7D")]
		touchpad,
		[Token(Token = "0x4001A7E")]
		home,
		[Token(Token = "0x4001A7F")]
		volup,
		[Token(Token = "0x4001A80")]
		voldown,
		[Token(Token = "0x4001A81")]
		trigger,
		[Token(Token = "0x4001A82")]
		grip
	}

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6002360")]
	[Address(RVA = "0x1EA4A28", Offset = "0x1EA4A28", VA = "0x1EA4A28")]
	public Pvr_ToolTips()
	{
	}

	[Token(Token = "0x6002361")]
	[Address(RVA = "0x1EA4A30", Offset = "0x1EA4A30", VA = "0x1EA4A30")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6002362")]
	[Address(RVA = "0x1EA4C04", Offset = "0x1EA4C04", VA = "0x1EA4C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002363")]
	[Address(RVA = "0x1EA4C84", Offset = "0x1EA4C84", VA = "0x1EA4C84")]
	private void Update()
	{
	}

	[Token(Token = "0x6002364")]
	[Address(RVA = "0x1EA50E4", Offset = "0x1EA50E4", VA = "0x1EA50E4")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6002365")]
	[Address(RVA = "0x1E7FE84", Offset = "0x1E7FE84", VA = "0x1E7FE84")]
	public static void RefreshTips()
	{
	}
}
[Token(Token = "0x20004A0")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6002366")]
	[Address(RVA = "0x1EA561C", Offset = "0x1EA561C", VA = "0x1EA561C")]
	public Pvr_TouchPadScroll()
	{
	}

	[Token(Token = "0x6002367")]
	[Address(RVA = "0x1EA56E0", Offset = "0x1EA56E0", VA = "0x1EA56E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002368")]
	[Address(RVA = "0x1EA5784", Offset = "0x1EA5784", VA = "0x1EA5784")]
	private void Update()
	{
	}

	[Token(Token = "0x6002369")]
	[Address(RVA = "0x1EA5CF0", Offset = "0x1EA5CF0", VA = "0x1EA5CF0")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600236A")]
	[Address(RVA = "0x1EA590C", Offset = "0x1EA590C", VA = "0x1EA590C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600236B")]
	[Address(RVA = "0x1EA62D0", Offset = "0x1EA62D0", VA = "0x1EA62D0")]
	private void ComputePos()
	{
	}

	[Token(Token = "0x600236C")]
	[Address(RVA = "0x1EA5EE4", Offset = "0x1EA5EE4", VA = "0x1EA5EE4")]
	private void ComputeNeo2Pos()
	{
	}

	[Token(Token = "0x600236D")]
	[Address(RVA = "0x1EA6688", Offset = "0x1EA6688", VA = "0x1EA6688")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600236E")]
	[Address(RVA = "0x1EA5A70", Offset = "0x1EA5A70", VA = "0x1EA5A70")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600236F")]
	[Address(RVA = "0x1EA5DD4", Offset = "0x1EA5DD4", VA = "0x1EA5DD4")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6002370")]
	[Address(RVA = "0x1EA57B0", Offset = "0x1EA57B0", VA = "0x1EA57B0")]
	private void Process()
	{
	}

	[Token(Token = "0x6002371")]
	[Address(RVA = "0x1EA66C4", Offset = "0x1EA66C4", VA = "0x1EA66C4")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6002372")]
	[Address(RVA = "0x1EA68D0", Offset = "0x1EA68D0", VA = "0x1EA68D0")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A1")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6002373")]
	[Address(RVA = "0x175D7C0", Offset = "0x175D7C0", VA = "0x175D7C0")]
	public Pvr_TouchVisual()
	{
	}

	[Token(Token = "0x6002374")]
	[Address(RVA = "0x175D7C8", Offset = "0x175D7C8", VA = "0x175D7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6002375")]
	[Address(RVA = "0x175D888", Offset = "0x175D888", VA = "0x175D888")]
	private void Update()
	{
	}

	[Token(Token = "0x6002376")]
	[Address(RVA = "0x175D8C0", Offset = "0x175D8C0", VA = "0x175D8C0")]
	private void ChangeEffects(int hand)
	{
	}
}
[Token(Token = "0x20004A2")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95B10", Offset = "0xC95B10")]
	private sealed class <InitDelegate>c__AnonStorey0
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject btnObj;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal DemoController $this;

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0xF61FFC", Offset = "0xF61FFC", VA = "0xF61FFC")]
		public <InitDelegate>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xF62BB0", Offset = "0xF62BB0", VA = "0xF62BB0")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6002377")]
	[Address(RVA = "0xF61618", Offset = "0xF61618", VA = "0xF61618")]
	public DemoController()
	{
	}

	[Token(Token = "0x6002378")]
	[Address(RVA = "0xF61620", Offset = "0xF61620", VA = "0xF61620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002379")]
	[Address(RVA = "0xF61890", Offset = "0xF61890", VA = "0xF61890")]
	private void Start()
	{
	}

	[Token(Token = "0x600237A")]
	[Address(RVA = "0xF61DE8", Offset = "0xF61DE8", VA = "0xF61DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600237B")]
	[Address(RVA = "0xF61968", Offset = "0xF61968", VA = "0xF61968")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600237C")]
	[Address(RVA = "0xF62004", Offset = "0xF62004", VA = "0xF62004")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600237D")]
	[Address(RVA = "0xF624C0", Offset = "0xF624C0", VA = "0xF624C0")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x600237E")]
	[Address(RVA = "0xF6240C", Offset = "0xF6240C", VA = "0xF6240C")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600237F")]
	[Address(RVA = "0xF62574", Offset = "0xF62574", VA = "0xF62574")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6002380")]
	[Address(RVA = "0xF6269C", Offset = "0xF6269C", VA = "0xF6269C")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6002381")]
	[Address(RVA = "0xF62A88", Offset = "0xF62A88", VA = "0xF62A88")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A4")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6002386")]
	[Address(RVA = "0xF67FDC", Offset = "0xF67FDC", VA = "0xF67FDC")]
	public LoadingRatation()
	{
	}

	[Token(Token = "0x6002387")]
	[Address(RVA = "0xF67FE4", Offset = "0xF67FE4", VA = "0xF67FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002388")]
	[Address(RVA = "0xF67FE8", Offset = "0xF67FE8", VA = "0xF67FE8")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004A5")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20004A6")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95B20", Offset = "0xC95B20")]
	private sealed class <InitKeyBoard>c__AnonStorey0
	{
		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject btnObj;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal InputManager $this;

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xF65E08", Offset = "0xF65E08", VA = "0xF65E08")]
		public <InitKeyBoard>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0xF66CD8", Offset = "0xF66CD8", VA = "0xF66CD8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6002389")]
	[Address(RVA = "0xF65308", Offset = "0xF65308", VA = "0xF65308")]
	public InputManager()
	{
	}

	[Token(Token = "0x600238A")]
	[Address(RVA = "0xF65390", Offset = "0xF65390", VA = "0xF65390")]
	private void Awake()
	{
	}

	[Token(Token = "0x600238B")]
	[Address(RVA = "0xF65E00", Offset = "0xF65E00", VA = "0xF65E00")]
	private void Start()
	{
	}

	[Token(Token = "0x600238C")]
	[Address(RVA = "0xF65E04", Offset = "0xF65E04", VA = "0xF65E04")]
	private void Update()
	{
	}

	[Token(Token = "0x600238D")]
	[Address(RVA = "0xF65394", Offset = "0xF65394", VA = "0xF65394")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x600238E")]
	[Address(RVA = "0xF65E10", Offset = "0xF65E10", VA = "0xF65E10")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600238F")]
	[Address(RVA = "0xF66BBC", Offset = "0xF66BBC", VA = "0xF66BBC")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6002390")]
	[Address(RVA = "0xF66110", Offset = "0xF66110", VA = "0xF66110")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6002391")]
	[Address(RVA = "0xF6670C", Offset = "0xF6670C", VA = "0xF6670C")]
	private void ClearBuffer()
	{
	}
}
[Token(Token = "0x20004A7")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject messageGameObject;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string DATA;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string USERNAME;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string OPENID;

	[Token(Token = "0x14000030")]
	public static event Action<string> OnLoginCallback
	{
		[Token(Token = "0x6002397")]
		[Address(RVA = "0x100EAB4", Offset = "0x100EAB4", VA = "0x100EAB4")]
		add
		{
		}
		[Token(Token = "0x6002398")]
		[Address(RVA = "0x100EBF0", Offset = "0x100EBF0", VA = "0x100EBF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public static event Action<string, string> OnUserInfoCallback
	{
		[Token(Token = "0x6002399")]
		[Address(RVA = "0x100ED2C", Offset = "0x100ED2C", VA = "0x100ED2C")]
		add
		{
		}
		[Token(Token = "0x600239A")]
		[Address(RVA = "0x100EE68", Offset = "0x100EE68", VA = "0x100EE68")]
		remove
		{
		}
	}

	[Token(Token = "0x6002396")]
	[Address(RVA = "0x100EAAC", Offset = "0x100EAAC", VA = "0x100EAAC")]
	public Callback()
	{
	}

	[Token(Token = "0x600239B")]
	[Address(RVA = "0x100EFA4", Offset = "0x100EFA4", VA = "0x100EFA4")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x600239C")]
	[Address(RVA = "0x100F52C", Offset = "0x100F52C", VA = "0x100F52C")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x600239D")]
	[Address(RVA = "0x100F7A4", Offset = "0x100F7A4", VA = "0x100F7A4")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x600239E")]
	[Address(RVA = "0x100F2FC", Offset = "0x100F2FC", VA = "0x100F2FC")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x600239F")]
	[Address(RVA = "0x100F9D0", Offset = "0x100F9D0", VA = "0x100F9D0")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60023A0")]
	[Address(RVA = "0x100FA20", Offset = "0x100FA20", VA = "0x100FA20")]
	public void ActivityForResultCallback(string activity)
	{
	}
}
[Token(Token = "0x20004A8")]
public class CommonDic
{
	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x170004B0")]
	public string subject
	{
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x101225C", Offset = "0x101225C", VA = "0x101225C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x10121A8", Offset = "0x10121A8", VA = "0x10121A8")]
		set
		{
		}
	}

	[Token(Token = "0x170004B1")]
	public string body
	{
		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x1012264", Offset = "0x1012264", VA = "0x1012264")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x10121B0", Offset = "0x10121B0", VA = "0x10121B0")]
		set
		{
		}
	}

	[Token(Token = "0x170004B2")]
	public string order_id
	{
		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x101226C", Offset = "0x101226C", VA = "0x101226C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x10121B8", Offset = "0x10121B8", VA = "0x10121B8")]
		set
		{
		}
	}

	[Token(Token = "0x170004B3")]
	public string total
	{
		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x1012274", Offset = "0x1012274", VA = "0x1012274")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x10121C0", Offset = "0x10121C0", VA = "0x10121C0")]
		set
		{
		}
	}

	[Token(Token = "0x170004B4")]
	public string goods_tag
	{
		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x101227C", Offset = "0x101227C", VA = "0x101227C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x10121C8", Offset = "0x10121C8", VA = "0x10121C8")]
		set
		{
		}
	}

	[Token(Token = "0x170004B5")]
	public string notify_url
	{
		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1012284", Offset = "0x1012284", VA = "0x1012284")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x10121D0", Offset = "0x10121D0", VA = "0x10121D0")]
		set
		{
		}
	}

	[Token(Token = "0x170004B6")]
	public string pay_code
	{
		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x101228C", Offset = "0x101228C", VA = "0x101228C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x10121E0", Offset = "0x10121E0", VA = "0x10121E0")]
		set
		{
		}
	}

	[Token(Token = "0x170004B7")]
	public string trade_type
	{
		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x1012294", Offset = "0x1012294", VA = "0x1012294")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x10121D8", Offset = "0x10121D8", VA = "0x10121D8")]
		set
		{
		}
	}

	[Token(Token = "0x170004B8")]
	public string user_token
	{
		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x101229C", Offset = "0x101229C", VA = "0x101229C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x10122A4", Offset = "0x10122A4", VA = "0x10122A4")]
		set
		{
		}
	}

	[Token(Token = "0x170004B9")]
	public string access_token
	{
		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x10122AC", Offset = "0x10122AC", VA = "0x10122AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x10122B4", Offset = "0x10122B4", VA = "0x10122B4")]
		set
		{
		}
	}

	[Token(Token = "0x170004BA")]
	public string open_id
	{
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x10122BC", Offset = "0x10122BC", VA = "0x10122BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x10122C4", Offset = "0x10122C4", VA = "0x10122C4")]
		set
		{
		}
	}

	[Token(Token = "0x170004BB")]
	public string refresh_token
	{
		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x10122CC", Offset = "0x10122CC", VA = "0x10122CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x10122D4", Offset = "0x10122D4", VA = "0x10122D4")]
		set
		{
		}
	}

	[Token(Token = "0x170004BC")]
	public string expires_in
	{
		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x10122DC", Offset = "0x10122DC", VA = "0x10122DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x10122E4", Offset = "0x10122E4", VA = "0x10122E4")]
		set
		{
		}
	}

	[Token(Token = "0x170004BD")]
	public string isSuccess
	{
		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x10122EC", Offset = "0x10122EC", VA = "0x10122EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x100F51C", Offset = "0x100F51C", VA = "0x100F51C")]
		set
		{
		}
	}

	[Token(Token = "0x170004BE")]
	public string loginMsg
	{
		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x10122F4", Offset = "0x10122F4", VA = "0x10122F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x100F524", Offset = "0x100F524", VA = "0x100F524")]
		set
		{
		}
	}

	[Token(Token = "0x170004BF")]
	public string user_info
	{
		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x10122FC", Offset = "0x10122FC", VA = "0x10122FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x100F9C8", Offset = "0x100F9C8", VA = "0x100F9C8")]
		set
		{
		}
	}

	[Token(Token = "0x170004C0")]
	public string order_info
	{
		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1012304", Offset = "0x1012304", VA = "0x1012304")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x100F79C", Offset = "0x100F79C", VA = "0x100F79C")]
		set
		{
		}
	}

	[Token(Token = "0x170004C1")]
	public string code
	{
		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x101230C", Offset = "0x101230C", VA = "0x101230C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x100F78C", Offset = "0x100F78C", VA = "0x100F78C")]
		set
		{
		}
	}

	[Token(Token = "0x170004C2")]
	public string msg
	{
		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x1012314", Offset = "0x1012314", VA = "0x1012314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x100F794", Offset = "0x100F794", VA = "0x100F794")]
		set
		{
		}
	}

	[Token(Token = "0x170004C3")]
	public string app_ID
	{
		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x101231C", Offset = "0x101231C", VA = "0x101231C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x1012324", Offset = "0x1012324", VA = "0x1012324")]
		set
		{
		}
	}

	[Token(Token = "0x170004C4")]
	public string app_Key
	{
		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x101232C", Offset = "0x101232C", VA = "0x101232C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x1012334", Offset = "0x1012334", VA = "0x1012334")]
		set
		{
		}
	}

	[Token(Token = "0x170004C5")]
	public string merchant_ID
	{
		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x101233C", Offset = "0x101233C", VA = "0x101233C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1012344", Offset = "0x1012344", VA = "0x1012344")]
		set
		{
		}
	}

	[Token(Token = "0x170004C6")]
	public string paykey
	{
		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x101234C", Offset = "0x101234C", VA = "0x101234C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1012354", Offset = "0x1012354", VA = "0x1012354")]
		set
		{
		}
	}

	[Token(Token = "0x60023A2")]
	[Address(RVA = "0x10117E4", Offset = "0x10117E4", VA = "0x10117E4")]
	public CommonDic()
	{
	}

	[Token(Token = "0x60023A3")]
	[Address(RVA = "0x100F454", Offset = "0x100F454", VA = "0x100F454")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60023A4")]
	[Address(RVA = "0x1011FC8", Offset = "0x1011FC8", VA = "0x1011FC8")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60023A5")]
	[Address(RVA = "0x1012018", Offset = "0x1012018", VA = "0x1012018")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60023A6")]
	[Address(RVA = "0x10121E8", Offset = "0x10121E8", VA = "0x10121E8")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60023D5")]
	[Address(RVA = "0x1011864", Offset = "0x1011864", VA = "0x1011864")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}
}
[Token(Token = "0x20004A9")]
public class LoginSDK
{
	[Token(Token = "0x60023D6")]
	[Address(RVA = "0xF68550", Offset = "0xF68550", VA = "0xF68550")]
	public LoginSDK()
	{
	}

	[Token(Token = "0x60023D7")]
	[Address(RVA = "0xF6245C", Offset = "0xF6245C", VA = "0xF6245C")]
	public static void Login()
	{
	}

	[Token(Token = "0x60023D8")]
	[Address(RVA = "0xF62510", Offset = "0xF62510", VA = "0xF62510")]
	public static void GetUserAPI()
	{
	}
}
[Token(Token = "0x20004AA")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x170004C7")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1868A00", Offset = "0x1868A00", VA = "0x1868A00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1868A68", Offset = "0x1868A68", VA = "0x1868A68")]
		set
		{
		}
	}

	[Token(Token = "0x60023D9")]
	[Address(RVA = "0x18689F8", Offset = "0x18689F8", VA = "0x18689F8")]
	public PicoPaymentSDK()
	{
	}

	[Token(Token = "0x60023DC")]
	[Address(RVA = "0x1868AD4", Offset = "0x1868AD4", VA = "0x1868AD4")]
	public static void Login()
	{
	}

	[Token(Token = "0x60023DD")]
	[Address(RVA = "0x1868C64", Offset = "0x1868C64", VA = "0x1868C64")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60023DE")]
	[Address(RVA = "0x1868E48", Offset = "0x1868E48", VA = "0x1868E48")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60023DF")]
	[Address(RVA = "0x186902C", Offset = "0x186902C", VA = "0x186902C")]
	public static void GetUserAPI()
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20004AB")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4001AC5")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001AC6")]
		PUI_VERSION,
		[Token(Token = "0x4001AC7")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001AC8")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001AC9")]
		CUSTOMER_SN,
		[Token(Token = "0x4001ACA")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001ACB")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001ACC")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001ACD")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001ACE")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001ACF")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4001AD0")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4001AD1")]
		DEVICE_IP
	}
	[Token(Token = "0x20004AC")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4001AD3")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4001AD4")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20004AD")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001AD6")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001AD7")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20004AE")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001AD9")]
		S_ON,
		[Token(Token = "0x4001ADA")]
		S_OFF
	}
	[Token(Token = "0x20004AF")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001ADC")]
		SINGLE_CLICK,
		[Token(Token = "0x4001ADD")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001ADE")]
		LONG_PRESS
	}
	[Token(Token = "0x20004B0")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4001AE0")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4001AE1")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4001AE2")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001AE3")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4001AE4")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4001AE5")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001AE6")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001AE7")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20004B1")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001AE9")]
		THREE = 3,
		[Token(Token = "0x4001AEA")]
		TEN = 10,
		[Token(Token = "0x4001AEB")]
		THIRTY = 30,
		[Token(Token = "0x4001AEC")]
		SIXTY = 60,
		[Token(Token = "0x4001AED")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001AEE")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001AEF")]
		NEVER = -1
	}
	[Token(Token = "0x20004B2")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001AF1")]
		FIFTEEN = 15,
		[Token(Token = "0x4001AF2")]
		THIRTY = 30,
		[Token(Token = "0x4001AF3")]
		SIXTY = 60,
		[Token(Token = "0x4001AF4")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001AF5")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001AF6")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001AF7")]
		NEVER = -1
	}
	[Token(Token = "0x20004B3")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001AF9")]
		SFS_USB,
		[Token(Token = "0x4001AFA")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001AFB")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001AFC")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001AFD")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001AFE")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001AFF")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001B00")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001B01")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001B02")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001B03")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001B04")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001B05")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001B06")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20004B4")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001B08")]
		MTP,
		[Token(Token = "0x4001B09")]
		CHARGE
	}
	[Token(Token = "0x20004B5")]
	public struct ToBService
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1773148", Offset = "0x1773148", VA = "0x1773148")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1773290", Offset = "0x1773290", VA = "0x1773290")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1773368", Offset = "0x1773368", VA = "0x1773368")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1773448", Offset = "0x1773448", VA = "0x1773448")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1773528", Offset = "0x1773528", VA = "0x1773528")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1773658", Offset = "0x1773658", VA = "0x1773658")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x17737F4", Offset = "0x17737F4", VA = "0x17737F4")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x177391C", Offset = "0x177391C", VA = "0x177391C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1773AE4", Offset = "0x1773AE4", VA = "0x1773AE4")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1773C84", Offset = "0x1773C84", VA = "0x1773C84")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1773D00", Offset = "0x1773D00", VA = "0x1773D00")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1773E90", Offset = "0x1773E90", VA = "0x1773E90")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1774118", Offset = "0x1774118", VA = "0x1774118")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x17742A0", Offset = "0x17742A0", VA = "0x17742A0")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x17743C8", Offset = "0x17743C8", VA = "0x17743C8")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x17744D4", Offset = "0x17744D4", VA = "0x17744D4")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x17746A4", Offset = "0x17746A4", VA = "0x17746A4")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}
	}
}
[Token(Token = "0x20004B6")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60023F2")]
	[Address(RVA = "0x1EA44AC", Offset = "0x1EA44AC", VA = "0x1EA44AC")]
	public Pvr_ToBService()
	{
	}

	[Token(Token = "0x60023F3")]
	[Address(RVA = "0x1EA44B4", Offset = "0x1EA44B4", VA = "0x1EA44B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023F4")]
	[Address(RVA = "0x1EA44F8", Offset = "0x1EA44F8", VA = "0x1EA44F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60023F5")]
	[Address(RVA = "0x1EA4510", Offset = "0x1EA4510", VA = "0x1EA4510")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60023F6")]
	[Address(RVA = "0x1EA44B8", Offset = "0x1EA44B8", VA = "0x1EA44B8")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60023F7")]
	[Address(RVA = "0x1EA4504", Offset = "0x1EA4504", VA = "0x1EA4504")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60023F8")]
	[Address(RVA = "0x1EA451C", Offset = "0x1EA451C", VA = "0x1EA451C")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60023F9")]
	[Address(RVA = "0x1EA4528", Offset = "0x1EA4528", VA = "0x1EA4528")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60023FA")]
	[Address(RVA = "0x1EA45DC", Offset = "0x1EA45DC", VA = "0x1EA45DC")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60023FB")]
	[Address(RVA = "0x1EA4670", Offset = "0x1EA4670", VA = "0x1EA4670")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60023FC")]
	[Address(RVA = "0x1EA4704", Offset = "0x1EA4704", VA = "0x1EA4704")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60023FD")]
	[Address(RVA = "0x1EA4794", Offset = "0x1EA4794", VA = "0x1EA4794")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60023FE")]
	[Address(RVA = "0x1EA4824", Offset = "0x1EA4824", VA = "0x1EA4824")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60023FF")]
	[Address(RVA = "0x1EA48D8", Offset = "0x1EA48D8", VA = "0x1EA48D8")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6002400")]
	[Address(RVA = "0x1EA4974", Offset = "0x1EA4974", VA = "0x1EA4974")]
	private void AppManagerCallBack(int value)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20004B7")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001B13")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001B14")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001B15")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001B16")]
		ABILITY6DOF,
		[Token(Token = "0x4001B17")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001B18")]
		TRACKING_MODE,
		[Token(Token = "0x4001B19")]
		LOG_LEVEL,
		[Token(Token = "0x4001B1A")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001B1B")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001B1C")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001B1D")]
		iShowFPS,
		[Token(Token = "0x4001B1E")]
		SensorMode,
		[Token(Token = "0x4001B1F")]
		LOGICFLOW,
		[Token(Token = "0x4001B20")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001B21")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001B22")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001B23")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001B24")]
		isEnableBoundary,
		[Token(Token = "0x4001B25")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001B26")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001B27")]
		GetWaitFrameNum,
		[Token(Token = "0x4001B28")]
		GetResetFrameNum
	}
	[Token(Token = "0x20004B8")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001B2A")]
		IPD,
		[Token(Token = "0x4001B2B")]
		VFOV,
		[Token(Token = "0x4001B2C")]
		HFOV,
		[Token(Token = "0x4001B2D")]
		NECK_MODEL_X,
		[Token(Token = "0x4001B2E")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001B2F")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001B30")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20004B9")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001B32")]
		X_1 = 1,
		[Token(Token = "0x4001B33")]
		X_2 = 2,
		[Token(Token = "0x4001B34")]
		X_4 = 4,
		[Token(Token = "0x4001B35")]
		X_8 = 8
	}
	[Token(Token = "0x20004BA")]
	public enum PlatForm
	{
		[Token(Token = "0x4001B37")]
		Android = 1,
		[Token(Token = "0x4001B38")]
		IOS,
		[Token(Token = "0x4001B39")]
		Win,
		[Token(Token = "0x4001B3A")]
		Notsupport
	}
	[Token(Token = "0x20004BB")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001B3C")]
		BD_0 = 0,
		[Token(Token = "0x4001B3D")]
		BD_16 = 16,
		[Token(Token = "0x4001B3E")]
		BD_24 = 24
	}
	[Token(Token = "0x20004BC")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001B40")]
		Normal,
		[Token(Token = "0x4001B41")]
		High
	}
	[Token(Token = "0x20004BD")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001B43")]
		Default,
		[Token(Token = "0x4001B44")]
		FirstSensor,
		[Token(Token = "0x4001B45")]
		SecondSensor
	}
	[Token(Token = "0x20004BE")]
	public enum Eye
	{
		[Token(Token = "0x4001B47")]
		LeftEye,
		[Token(Token = "0x4001B48")]
		RightEye,
		[Token(Token = "0x4001B49")]
		BothEye
	}
	[Token(Token = "0x20004BF")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001B4B")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001B4C")]
		TYPE_COLOR,
		[Token(Token = "0x4001B4D")]
		TYPE_TEXT,
		[Token(Token = "0x4001B4E")]
		TYPE_FONT,
		[Token(Token = "0x4001B4F")]
		TYPE_VALUE,
		[Token(Token = "0x4001B50")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001B51")]
		TYPE_OBJECT,
		[Token(Token = "0x4001B52")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20004C0")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001B54")]
		EyeLevel,
		[Token(Token = "0x4001B55")]
		FloorLevel,
		[Token(Token = "0x4001B56")]
		StageLevel
	}
	[Token(Token = "0x20004C1")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001B58")]
		Low,
		[Token(Token = "0x4001B59")]
		Med,
		[Token(Token = "0x4001B5A")]
		High,
		[Token(Token = "0x4001B5B")]
		Top_High
	}
	[Token(Token = "0x20004C2")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001B5D")]
		MultiPass,
		[Token(Token = "0x4001B5E")]
		SinglePass
	}
	[Token(Token = "0x20004C3")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001B60")]
		kGazePointValid = 1,
		[Token(Token = "0x4001B61")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001B62")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001B63")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001B64")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20004C4")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001B66")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001B67")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001B68")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20004C5")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20004C6")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20004C7")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20004C8")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20004C9")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20004CA")]
	public struct Sensor
	{
		[Token(Token = "0x4001B8C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6002401")]
		[Address(RVA = "0x176C858", Offset = "0x176C858", VA = "0x176C858")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6002402")]
		[Address(RVA = "0x176C8F0", Offset = "0x176C8F0", VA = "0x176C8F0")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6002403")]
		[Address(RVA = "0x176C99C", Offset = "0x176C99C", VA = "0x176C99C")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6002404")]
		[Address(RVA = "0x176CA34", Offset = "0x176CA34", VA = "0x176CA34")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002405")]
		[Address(RVA = "0x176CACC", Offset = "0x176CACC", VA = "0x176CACC")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002406")]
		[Address(RVA = "0x176CB64", Offset = "0x176CB64", VA = "0x176CB64")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002407")]
		[Address(RVA = "0x176CBFC", Offset = "0x176CBFC", VA = "0x176CBFC")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6002408")]
		[Address(RVA = "0x176CC94", Offset = "0x176CC94", VA = "0x176CC94")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6002409")]
		[Address(RVA = "0x176CD78", Offset = "0x176CD78", VA = "0x176CD78")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600240A")]
		[Address(RVA = "0x176CE64", Offset = "0x176CE64", VA = "0x176CE64")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x600240B")]
		[Address(RVA = "0x176CEEC", Offset = "0x176CEEC", VA = "0x176CEEC")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x600240C")]
		[Address(RVA = "0x176CF74", Offset = "0x176CF74", VA = "0x176CF74")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600240D")]
		[Address(RVA = "0x176D034", Offset = "0x176D034", VA = "0x176D034")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600240E")]
		[Address(RVA = "0x176D0F4", Offset = "0x176D0F4", VA = "0x176D0F4")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x600240F")]
		[Address(RVA = "0x176D17C", Offset = "0x176D17C", VA = "0x176D17C")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6002410")]
		[Address(RVA = "0x176D20C", Offset = "0x176D20C", VA = "0x176D20C")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6002411")]
		[Address(RVA = "0x176D314", Offset = "0x176D314", VA = "0x176D314")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x176D3B4", Offset = "0x176D3B4", VA = "0x176D3B4")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x176D3B8", Offset = "0x176D3B8", VA = "0x176D3B8")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x176D3BC", Offset = "0x176D3BC", VA = "0x176D3BC")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x176D5B0", Offset = "0x176D5B0", VA = "0x176D5B0")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x176D7A4", Offset = "0x176D7A4", VA = "0x176D7A4")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x176D7A8", Offset = "0x176D7A8", VA = "0x176D7A8")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x176D920", Offset = "0x176D920", VA = "0x176D920")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x176D924", Offset = "0x176D924", VA = "0x176D924")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x176D928", Offset = "0x176D928", VA = "0x176D928")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x176DAC8", Offset = "0x176DAC8", VA = "0x176DAC8")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x176DACC", Offset = "0x176DACC", VA = "0x176DACC")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x176DAD8", Offset = "0x176DAD8", VA = "0x176DAD8")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x176DAEC", Offset = "0x176DAEC", VA = "0x176DAEC")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x176DAF0", Offset = "0x176DAF0", VA = "0x176DAF0")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x176DAF4", Offset = "0x176DAF4", VA = "0x176DAF4")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x176DAF8", Offset = "0x176DAF8", VA = "0x176DAF8")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x176D3C0", Offset = "0x176D3C0", VA = "0x176D3C0")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x176DD6C", Offset = "0x176DD6C", VA = "0x176DD6C")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x176D60C", Offset = "0x176D60C", VA = "0x176D60C")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x176D7AC", Offset = "0x176D7AC", VA = "0x176D7AC")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x176DFA4", Offset = "0x176DFA4", VA = "0x176DFA4")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x176DFA8", Offset = "0x176DFA8", VA = "0x176DFA8")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x176E4C4", Offset = "0x176E4C4", VA = "0x176E4C4")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004CB")]
	public struct Render
	{
		[Token(Token = "0x4001B8D")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6002429")]
		[Address(RVA = "0x176AE9C", Offset = "0x176AE9C", VA = "0x176AE9C")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600242A")]
		[Address(RVA = "0x176AF84", Offset = "0x176AF84", VA = "0x176AF84")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600242B")]
		[Address(RVA = "0x176B024", Offset = "0x176B024", VA = "0x176B024")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x600242C")]
		[Address(RVA = "0x176B0BC", Offset = "0x176B0BC", VA = "0x176B0BC")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x600242D")]
		[Address(RVA = "0x176B144", Offset = "0x176B144", VA = "0x176B144")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x600242E")]
		[Address(RVA = "0x176B1EC", Offset = "0x176B1EC", VA = "0x176B1EC")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600242F")]
		[Address(RVA = "0x176B290", Offset = "0x176B290", VA = "0x176B290")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6002430")]
		[Address(RVA = "0x176B334", Offset = "0x176B334", VA = "0x176B334")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6002431")]
		[Address(RVA = "0x176B414", Offset = "0x176B414", VA = "0x176B414")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6002432")]
		[Address(RVA = "0x176B50C", Offset = "0x176B50C", VA = "0x176B50C")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6002433")]
		[Address(RVA = "0x176B65C", Offset = "0x176B65C", VA = "0x176B65C")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6002434")]
		[Address(RVA = "0x176B6FC", Offset = "0x176B6FC", VA = "0x176B6FC")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6002435")]
		[Address(RVA = "0x176B7EC", Offset = "0x176B7EC", VA = "0x176B7EC")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6002436")]
		[Address(RVA = "0x176B8AC", Offset = "0x176B8AC", VA = "0x176B8AC")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6002437")]
		[Address(RVA = "0x176B968", Offset = "0x176B968", VA = "0x176B968")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6002438")]
		[Address(RVA = "0x176BA00", Offset = "0x176BA00", VA = "0x176BA00")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6002439")]
		[Address(RVA = "0x176BA88", Offset = "0x176BA88", VA = "0x176BA88")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600243A")]
		[Address(RVA = "0x176BB20", Offset = "0x176BB20", VA = "0x176BB20")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600243B")]
		[Address(RVA = "0x176BBB8", Offset = "0x176BBB8", VA = "0x176BBB8")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600243C")]
		[Address(RVA = "0x176BC60", Offset = "0x176BC60", VA = "0x176BC60")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600243D")]
		[Address(RVA = "0x176BD08", Offset = "0x176BD08", VA = "0x176BD08")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x600243E")]
		[Address(RVA = "0x176BDA0", Offset = "0x176BDA0", VA = "0x176BDA0")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x176BE68", Offset = "0x176BE68", VA = "0x176BE68")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x176BE6C", Offset = "0x176BE6C", VA = "0x176BE6C")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x176BE70", Offset = "0x176BE70", VA = "0x176BE70")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x176BE78", Offset = "0x176BE78", VA = "0x176BE78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC95BA8", Offset = "0xC95BA8")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x176BE7C", Offset = "0x176BE7C", VA = "0x176BE7C")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x176BE80", Offset = "0x176BE80", VA = "0x176BE80")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x176BE84", Offset = "0x176BE84", VA = "0x176BE84")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x176BE88", Offset = "0x176BE88", VA = "0x176BE88")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x176BE8C", Offset = "0x176BE8C", VA = "0x176BE8C")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x176BE90", Offset = "0x176BE90", VA = "0x176BE90")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x176BE94", Offset = "0x176BE94", VA = "0x176BE94")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x176BF2C", Offset = "0x176BF2C", VA = "0x176BF2C")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x176BF30", Offset = "0x176BF30", VA = "0x176BF30")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x176C0F0", Offset = "0x176C0F0", VA = "0x176C0F0")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x176C0F4", Offset = "0x176C0F4", VA = "0x176C0F4")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x176C840", Offset = "0x176C840", VA = "0x176C840")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x176C844", Offset = "0x176C844", VA = "0x176C844")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x176C848", Offset = "0x176C848", VA = "0x176C848")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x176C84C", Offset = "0x176C84C", VA = "0x176C84C")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x176C850", Offset = "0x176C850", VA = "0x176C850")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1764064", Offset = "0x1764064", VA = "0x1764064")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public struct System
	{
		[Token(Token = "0x4001B8E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001B8F")]
		public const string UnitySDKVersion = "2.8.7.3";

		[PreserveSig]
		[Token(Token = "0x6002454")]
		[Address(RVA = "0x176E4C8", Offset = "0x176E4C8", VA = "0x176E4C8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6002455")]
		[Address(RVA = "0x176E570", Offset = "0x176E570", VA = "0x176E570")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6002456")]
		[Address(RVA = "0x176E5F8", Offset = "0x176E5F8", VA = "0x176E5F8")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6002457")]
		[Address(RVA = "0x176E680", Offset = "0x176E680", VA = "0x176E680")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6002458")]
		[Address(RVA = "0x176E708", Offset = "0x176E708", VA = "0x176E708")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6002459")]
		[Address(RVA = "0x176E790", Offset = "0x176E790", VA = "0x176E790")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x600245A")]
		[Address(RVA = "0x176E818", Offset = "0x176E818", VA = "0x176E818")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x600245B")]
		[Address(RVA = "0x176E8A0", Offset = "0x176E8A0", VA = "0x176E8A0")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x600245C")]
		[Address(RVA = "0x176E938", Offset = "0x176E938", VA = "0x176E938")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x600245D")]
		[Address(RVA = "0x176EA80", Offset = "0x176EA80", VA = "0x176EA80")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x600245E")]
		[Address(RVA = "0x176EB20", Offset = "0x176EB20", VA = "0x176EB20")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x600245F")]
		[Address(RVA = "0x176EBA8", Offset = "0x176EBA8", VA = "0x176EBA8")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6002460")]
		[Address(RVA = "0x176EC30", Offset = "0x176EC30", VA = "0x176EC30")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6002461")]
		[Address(RVA = "0x176ECC8", Offset = "0x176ECC8", VA = "0x176ECC8")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6002462")]
		[Address(RVA = "0x176ED68", Offset = "0x176ED68", VA = "0x176ED68")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6002463")]
		[Address(RVA = "0x176EE00", Offset = "0x176EE00", VA = "0x176EE00")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6002464")]
		[Address(RVA = "0x176EE88", Offset = "0x176EE88", VA = "0x176EE88")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6002465")]
		[Address(RVA = "0x176EF20", Offset = "0x176EF20", VA = "0x176EF20")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6002466")]
		[Address(RVA = "0x176EFD0", Offset = "0x176EFD0", VA = "0x176EFD0")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6002467")]
		[Address(RVA = "0x176F078", Offset = "0x176F078", VA = "0x176F078")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6002468")]
		[Address(RVA = "0x176F11C", Offset = "0x176F11C", VA = "0x176F11C")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6002469")]
		[Address(RVA = "0x176F1A4", Offset = "0x176F1A4", VA = "0x176F1A4")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x600246A")]
		[Address(RVA = "0x176F244", Offset = "0x176F244", VA = "0x176F244")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x600246B")]
		[Address(RVA = "0x176F2D4", Offset = "0x176F2D4", VA = "0x176F2D4")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x600246C")]
		[Address(RVA = "0x176AE14", Offset = "0x176AE14", VA = "0x176AE14")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x600246D")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x176DB00", Offset = "0x176DB00", VA = "0x176DB00")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600246F")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x176F374", Offset = "0x176F374", VA = "0x176F374")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x176F5E0", Offset = "0x176F5E0", VA = "0x176F5E0")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x176F688", Offset = "0x176F688", VA = "0x176F688")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x176F6D0", Offset = "0x176F6D0", VA = "0x176F6D0")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x176F714", Offset = "0x176F714", VA = "0x176F714")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x176A0BC", Offset = "0x176A0BC", VA = "0x176A0BC")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x176A480", Offset = "0x176A480", VA = "0x176A480")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x176F720", Offset = "0x176F720", VA = "0x176F720")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x176F78C", Offset = "0x176F78C", VA = "0x176F78C")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x176F82C", Offset = "0x176F82C", VA = "0x176F82C")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x176F8CC", Offset = "0x176F8CC", VA = "0x176F8CC")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x176F95C", Offset = "0x176F95C", VA = "0x176F95C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x176FBF0", Offset = "0x176FBF0", VA = "0x176FBF0")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x176FE40", Offset = "0x176FE40", VA = "0x176FE40")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x176FED0", Offset = "0x176FED0", VA = "0x176FED0")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x176FF60", Offset = "0x176FF60", VA = "0x176FF60")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x176FFF0", Offset = "0x176FFF0", VA = "0x176FFF0")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1770118", Offset = "0x1770118", VA = "0x1770118")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x17701A8", Offset = "0x17701A8", VA = "0x17701A8")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x17702DC", Offset = "0x17702DC", VA = "0x17702DC")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x17705FC", Offset = "0x17705FC", VA = "0x17705FC")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x17706C0", Offset = "0x17706C0", VA = "0x17706C0")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x17706C8", Offset = "0x17706C8", VA = "0x17706C8")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x17706CC", Offset = "0x17706CC", VA = "0x17706CC")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1765734", Offset = "0x1765734", VA = "0x1765734")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x17706D0", Offset = "0x17706D0", VA = "0x17706D0")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1770754", Offset = "0x1770754", VA = "0x1770754")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x17708B4", Offset = "0x17708B4", VA = "0x17708B4")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x17708B8", Offset = "0x17708B8", VA = "0x17708B8")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x1770960", Offset = "0x1770960", VA = "0x1770960")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x1770A08", Offset = "0x1770A08", VA = "0x1770A08")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x1770A0C", Offset = "0x1770A0C", VA = "0x1770A0C")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x1770A10", Offset = "0x1770A10", VA = "0x1770A10")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x1770A18", Offset = "0x1770A18", VA = "0x1770A18")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1770A1C", Offset = "0x1770A1C", VA = "0x1770A1C")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1770A20", Offset = "0x1770A20", VA = "0x1770A20")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x1770C64", Offset = "0x1770C64", VA = "0x1770C64")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x1770EB8", Offset = "0x1770EB8", VA = "0x1770EB8")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x177118C", Offset = "0x177118C", VA = "0x177118C")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x17714D0", Offset = "0x17714D0", VA = "0x17714D0")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x17715EC", Offset = "0x17715EC", VA = "0x17715EC")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x177174C", Offset = "0x177174C", VA = "0x177174C")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1771A00", Offset = "0x1771A00", VA = "0x1771A00")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1771A08", Offset = "0x1771A08", VA = "0x1771A08")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1771A0C", Offset = "0x1771A0C", VA = "0x1771A0C")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1771A10", Offset = "0x1771A10", VA = "0x1771A10")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1771A14", Offset = "0x1771A14", VA = "0x1771A14")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1771A18", Offset = "0x1771A18", VA = "0x1771A18")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1771A1C", Offset = "0x1771A1C", VA = "0x1771A1C")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1771C14", Offset = "0x1771C14", VA = "0x1771C14")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1771E0C", Offset = "0x1771E0C", VA = "0x1771E0C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1772018", Offset = "0x1772018", VA = "0x1772018")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1772224", Offset = "0x1772224", VA = "0x1772224")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x177241C", Offset = "0x177241C", VA = "0x177241C")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1772628", Offset = "0x1772628", VA = "0x1772628")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x1772894", Offset = "0x1772894", VA = "0x1772894")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1772AEC", Offset = "0x1772AEC", VA = "0x1772AEC")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1772CE4", Offset = "0x1772CE4", VA = "0x1772CE4")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1772F50", Offset = "0x1772F50", VA = "0x1772F50")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004CD")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20004CE")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001B92")]
			OuterBoundary,
			[Token(Token = "0x4001B93")]
			PlayArea
		}

		[Token(Token = "0x20004CF")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20004D0")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001B99")]
			HandLeft,
			[Token(Token = "0x4001B9A")]
			HandRight,
			[Token(Token = "0x4001B9B")]
			Head
		}

		[Token(Token = "0x20004D1")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4001B9D")]
			PVR_NOREASON,
			[Token(Token = "0x4001B9E")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x4001B9F")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4001BA0")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4001BA1")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4001BA2")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001B90")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x176413C", Offset = "0x176413C", VA = "0x176413C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x17641C4", Offset = "0x17641C4", VA = "0x17641C4")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x176424C", Offset = "0x176424C", VA = "0x176424C")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x17642E4", Offset = "0x17642E4", VA = "0x17642E4")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x176436C", Offset = "0x176436C", VA = "0x176436C")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x17643FC", Offset = "0x17643FC", VA = "0x17643FC")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x176448C", Offset = "0x176448C", VA = "0x176448C")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x176451C", Offset = "0x176451C", VA = "0x176451C")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1764628", Offset = "0x1764628", VA = "0x1764628")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1764758", Offset = "0x1764758", VA = "0x1764758")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1764808", Offset = "0x1764808", VA = "0x1764808")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x17648C8", Offset = "0x17648C8", VA = "0x17648C8")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1764958", Offset = "0x1764958", VA = "0x1764958")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x17649F0", Offset = "0x17649F0", VA = "0x17649F0")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1764A80", Offset = "0x1764A80", VA = "0x1764A80")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1764B20", Offset = "0x1764B20", VA = "0x1764B20")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1764BD0", Offset = "0x1764BD0", VA = "0x1764BD0")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1764C68", Offset = "0x1764C68", VA = "0x1764C68")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1764D10", Offset = "0x1764D10", VA = "0x1764D10")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1764D14", Offset = "0x1764D14", VA = "0x1764D14")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1764D18", Offset = "0x1764D18", VA = "0x1764D18")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1764D20", Offset = "0x1764D20", VA = "0x1764D20")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x1764D24", Offset = "0x1764D24", VA = "0x1764D24")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1764D28", Offset = "0x1764D28", VA = "0x1764D28")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1764D2C", Offset = "0x1764D2C", VA = "0x1764D2C")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1764D30", Offset = "0x1764D30", VA = "0x1764D30")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1764E84", Offset = "0x1764E84", VA = "0x1764E84")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1764FE0", Offset = "0x1764FE0", VA = "0x1764FE0")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1765238", Offset = "0x1765238", VA = "0x1765238")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1765294", Offset = "0x1765294", VA = "0x1765294")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x1765298", Offset = "0x1765298", VA = "0x1765298")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x17652A0", Offset = "0x17652A0", VA = "0x17652A0")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x17652A4", Offset = "0x17652A4", VA = "0x17652A4")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x17652AC", Offset = "0x17652AC", VA = "0x17652AC")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x17652B0", Offset = "0x17652B0", VA = "0x17652B0")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x17653FC", Offset = "0x17653FC", VA = "0x17653FC")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x1765548", Offset = "0x1765548", VA = "0x1765548")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x1765738", Offset = "0x1765738", VA = "0x1765738")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1765874", Offset = "0x1765874", VA = "0x1765874")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1769F1C", Offset = "0x1769F1C", VA = "0x1769F1C")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x176A180", Offset = "0x176A180", VA = "0x176A180")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x176A508", Offset = "0x176A508", VA = "0x176A508")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x176A808", Offset = "0x176A808", VA = "0x176A808")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x176AB0C", Offset = "0x176AB0C", VA = "0x176AB0C")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x176AE10", Offset = "0x176AE10", VA = "0x176AE10")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
}
[Token(Token = "0x20004D3")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60024D8")]
	[Address(RVA = "0x186933C", Offset = "0x186933C", VA = "0x186933C")]
	public PLOG()
	{
	}

	[Token(Token = "0x60024D9")]
	[Address(RVA = "0x1869344", Offset = "0x1869344", VA = "0x1869344")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60024DA")]
	[Address(RVA = "0x18693B8", Offset = "0x18693B8", VA = "0x18693B8")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60024DB")]
	[Address(RVA = "0x1869464", Offset = "0x1869464", VA = "0x1869464")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60024DC")]
	[Address(RVA = "0x1869510", Offset = "0x1869510", VA = "0x1869510")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60024DD")]
	[Address(RVA = "0x18695BC", Offset = "0x18695BC", VA = "0x18695BC")]
	public static void E(string msg)
	{
	}
}
[Token(Token = "0x20004D4")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x60024DF")]
	[Address(RVA = "0xF5F300", Offset = "0xF5F300", VA = "0xF5F300")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004D5")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60024E0")]
	[Address(RVA = "0xF99354", Offset = "0xF99354", VA = "0xF99354")]
	public Pvr_UnitySDKProjectSetting()
	{
	}

	[Token(Token = "0x60024E1")]
	[Address(RVA = "0xF9935C", Offset = "0xF9935C", VA = "0xF9935C")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}
}
[Token(Token = "0x20004D6")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20004D7")]
	public enum simulationType
	{
		[Token(Token = "0x4001BB2")]
		Null,
		[Token(Token = "0x4001BB3")]
		Invalid,
		[Token(Token = "0x4001BB4")]
		Valid
	}

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4001BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> deviceSN;

	[Token(Token = "0x4001BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x170004C8")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xF98340", Offset = "0xF98340", VA = "0xF98340")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xF9842C", Offset = "0xF9842C", VA = "0xF9842C")]
		set
		{
		}
	}

	[Token(Token = "0x170004C9")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xF9836C", Offset = "0xF9836C", VA = "0xF9836C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xF98484", Offset = "0xF98484", VA = "0xF98484")]
		set
		{
		}
	}

	[Token(Token = "0x60024E2")]
	[Address(RVA = "0xF982D0", Offset = "0xF982D0", VA = "0xF982D0")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20004D8")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95EFC", Offset = "0xC95EFC")]
	private sealed class <ToastManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float time;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int type;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool state;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000675")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xF98248", Offset = "0xF98248", VA = "0xF98248", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000676")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xF98250", Offset = "0xF98250", VA = "0xF98250", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xF980A8", Offset = "0xF980A8", VA = "0xF980A8")]
		[DebuggerHidden]
		public <ToastManager>c__Iterator0()
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0xF980B0", Offset = "0xF980B0", VA = "0xF980B0", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0xF98258", Offset = "0xF98258", VA = "0xF98258", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0xF9826C", Offset = "0xF9826C", VA = "0xF9826C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95F5C", Offset = "0xC95F5C")]
	private sealed class <SetProperty>c__AnonStorey5
	{
		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Transform trans;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0xF97D6C", Offset = "0xF97D6C", VA = "0xF97D6C")]
		public <SetProperty>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0xF97D74", Offset = "0xF97D74", VA = "0xF97D74")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95F6C", Offset = "0xC95F6C")]
	private sealed class <G3TipsManager>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float time;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal GameObject tip;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000677")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xF96CF8", Offset = "0xF96CF8", VA = "0xF96CF8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000678")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xF96D00", Offset = "0xF96D00", VA = "0xF96D00", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0xF96C0C", Offset = "0xF96C0C", VA = "0xF96C0C")]
		[DebuggerHidden]
		public <G3TipsManager>c__Iterator1()
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xF96C14", Offset = "0xF96C14", VA = "0xF96C14", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0xF96D08", Offset = "0xF96D08", VA = "0xF96D08", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0xF96D1C", Offset = "0xF96D1C", VA = "0xF96D1C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95FCC", Offset = "0xC95FCC")]
	private sealed class <Start>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x17000679")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xF98020", Offset = "0xF98020", VA = "0xF98020", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xF98028", Offset = "0xF98028", VA = "0xF98028", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xF97DF4", Offset = "0xF97DF4", VA = "0xF97DF4")]
		[DebuggerHidden]
		public <Start>c__Iterator2()
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xF97DFC", Offset = "0xF97DFC", VA = "0xF97DFC", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0xF98030", Offset = "0xF98030", VA = "0xF98030", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0xF98044", Offset = "0xF98044", VA = "0xF98044", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9602C", Offset = "0xC9602C")]
	private sealed class <InitRenderThreadRoutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <i>__1;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x1700067B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xF971C0", Offset = "0xF971C0", VA = "0xF971C0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0xF971C8", Offset = "0xF971C8", VA = "0xF971C8", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0xF96D80", Offset = "0xF96D80", VA = "0xF96D80")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>c__Iterator3()
		{
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0xF96D88", Offset = "0xF96D88", VA = "0xF96D88", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0xF971D0", Offset = "0xF971D0", VA = "0xF971D0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0xF971E4", Offset = "0xF971E4", VA = "0xF971E4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9608C", Offset = "0xC9608C")]
	private sealed class <OnResume>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <ability6dof>__0;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <enumindex>__0;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <waitNum>__0;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <resetNum>__0;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <i>__1;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x1700067D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xF97CE4", Offset = "0xF97CE4", VA = "0xF97CE4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xF97CEC", Offset = "0xF97CEC", VA = "0xF97CEC", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0xF97248", Offset = "0xF97248", VA = "0xF97248")]
		[DebuggerHidden]
		public <OnResume>c__Iterator4()
		{
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0xF97250", Offset = "0xF97250", VA = "0xF97250", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0xF97CF4", Offset = "0xF97CF4", VA = "0xF97CF4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0xF97D08", Offset = "0xF97D08", VA = "0xF97D08", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4001BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95D90", Offset = "0xC95D90")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC95D90", Offset = "0xC95D90")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x170004CA")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x176D9A4", Offset = "0x176D9A4", VA = "0x176D9A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004CB")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1780EF0", Offset = "0x1780EF0", VA = "0x1780EF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1780EF8", Offset = "0x1780EF8", VA = "0x1780EF8")]
		set
		{
		}
	}

	[Token(Token = "0x170004CC")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1780F18", Offset = "0x1780F18", VA = "0x1780F18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1780F20", Offset = "0x1780F20", VA = "0x1780F20")]
		set
		{
		}
	}

	[Token(Token = "0x170004CD")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1780F40", Offset = "0x1780F40", VA = "0x1780F40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1780F48", Offset = "0x1780F48", VA = "0x1780F48")]
		set
		{
		}
	}

	[Token(Token = "0x170004CE")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1780F68", Offset = "0x1780F68", VA = "0x1780F68")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x1780F70", Offset = "0x1780F70", VA = "0x1780F70")]
		set
		{
		}
	}

	[Token(Token = "0x170004CF")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x177A940", Offset = "0x177A940", VA = "0x177A940")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x1778B98", Offset = "0x1778B98", VA = "0x1778B98")]
		set
		{
		}
	}

	[Token(Token = "0x170004D0")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1781010", Offset = "0x1781010", VA = "0x1781010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95E5C", Offset = "0xC95E5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x17779D0", Offset = "0x17779D0", VA = "0x17779D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC95E6C", Offset = "0xC95E6C")]
		set
		{
		}
	}

	[Token(Token = "0x170004D1")]
	public bool ShowFPS
	{
		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1781018", Offset = "0x1781018", VA = "0x1781018")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1781020", Offset = "0x1781020", VA = "0x1781020")]
		set
		{
		}
	}

	[Token(Token = "0x170004D2")]
	public bool PVRNeck
	{
		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1781040", Offset = "0x1781040", VA = "0x1781040")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x1781048", Offset = "0x1781048", VA = "0x1781048")]
		set
		{
		}
	}

	[Token(Token = "0x170004D3")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x177A0C8", Offset = "0x177A0C8", VA = "0x177A0C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1781068", Offset = "0x1781068", VA = "0x1781068")]
		set
		{
		}
	}

	[Token(Token = "0x60024E7")]
	[Address(RVA = "0x1780E14", Offset = "0x1780E14", VA = "0x1780E14")]
	public Pvr_UnitySDKManager()
	{
	}

	[Token(Token = "0x60024F1")]
	[Address(RVA = "0x1780F88", Offset = "0x1780F88", VA = "0x1780F88")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60024F2")]
	[Address(RVA = "0x177A0AC", Offset = "0x177A0AC", VA = "0x177A0AC")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60024F3")]
	[Address(RVA = "0x1780FF4", Offset = "0x1780FF4", VA = "0x1780FF4")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60024FE")]
	[Address(RVA = "0x178108C", Offset = "0x178108C", VA = "0x178108C")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60024FF")]
	[Address(RVA = "0x1781200", Offset = "0x1781200", VA = "0x1781200")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6002500")]
	[Address(RVA = "0x1781350", Offset = "0x1781350", VA = "0x1781350")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6002501")]
	[Address(RVA = "0x1781D4C", Offset = "0x1781D4C", VA = "0x1781D4C")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6002502")]
	[Address(RVA = "0x17821C8", Offset = "0x17821C8", VA = "0x17821C8")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6002503")]
	[Address(RVA = "0x17824CC", Offset = "0x17824CC", VA = "0x17824CC")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6002504")]
	[Address(RVA = "0x17817CC", Offset = "0x17817CC", VA = "0x17817CC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6002505")]
	[Address(RVA = "0x1782618", Offset = "0x1782618", VA = "0x1782618")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6002506")]
	[Address(RVA = "0x1781C8C", Offset = "0x1781C8C", VA = "0x1781C8C")]
	[DebuggerHidden]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6002507")]
	[Address(RVA = "0x178261C", Offset = "0x178261C", VA = "0x178261C")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6002508")]
	[Address(RVA = "0x17827DC", Offset = "0x17827DC", VA = "0x17827DC")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6002509")]
	[Address(RVA = "0x1783BE0", Offset = "0x1783BE0", VA = "0x1783BE0")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x600250A")]
	[Address(RVA = "0x1783D10", Offset = "0x1783D10", VA = "0x1783D10")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x600250B")]
	[Address(RVA = "0x1782C64", Offset = "0x1782C64", VA = "0x1782C64")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x600250C")]
	[Address(RVA = "0x178331C", Offset = "0x178331C", VA = "0x178331C")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600250D")]
	[Address(RVA = "0x1783810", Offset = "0x1783810", VA = "0x1783810")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x600250E")]
	[Address(RVA = "0x1783ECC", Offset = "0x1783ECC", VA = "0x1783ECC")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x600250F")]
	[Address(RVA = "0x1783B54", Offset = "0x1783B54", VA = "0x1783B54")]
	[DebuggerHidden]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6002510")]
	[Address(RVA = "0x1784240", Offset = "0x1784240", VA = "0x1784240")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6002511")]
	[Address(RVA = "0x17842C4", Offset = "0x17842C4", VA = "0x17842C4")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6002512")]
	[Address(RVA = "0x178118C", Offset = "0x178118C", VA = "0x178118C")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6002513")]
	[Address(RVA = "0x17844A8", Offset = "0x17844A8", VA = "0x17844A8")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6002514")]
	[Address(RVA = "0x178455C", Offset = "0x178455C", VA = "0x178455C")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6002515")]
	[Address(RVA = "0x1784564", Offset = "0x1784564", VA = "0x1784564")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6002516")]
	[Address(RVA = "0x1784684", Offset = "0x1784684", VA = "0x1784684")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6002517")]
	[Address(RVA = "0x178494C", Offset = "0x178494C", VA = "0x178494C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6002518")]
	[Address(RVA = "0x17849DC", Offset = "0x17849DC", VA = "0x17849DC")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6002519")]
	[Address(RVA = "0x1784B14", Offset = "0x1784B14", VA = "0x1784B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600251A")]
	[Address(RVA = "0x1785CA8", Offset = "0x1785CA8", VA = "0x1785CA8")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600251B")]
	[Address(RVA = "0x1785D14", Offset = "0x1785D14", VA = "0x1785D14")]
	[DebuggerHidden]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600251C")]
	[Address(RVA = "0x1785D70", Offset = "0x1785D70", VA = "0x1785D70")]
	private void Update()
	{
	}

	[Token(Token = "0x600251D")]
	[Address(RVA = "0x17860A0", Offset = "0x17860A0", VA = "0x17860A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600251E")]
	[Address(RVA = "0x1786214", Offset = "0x1786214", VA = "0x1786214")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600251F")]
	[Address(RVA = "0x1786368", Offset = "0x1786368", VA = "0x1786368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002520")]
	[Address(RVA = "0x1786370", Offset = "0x1786370", VA = "0x1786370")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6002521")]
	[Address(RVA = "0x17864A4", Offset = "0x17864A4", VA = "0x17864A4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6002522")]
	[Address(RVA = "0x17866D0", Offset = "0x17866D0", VA = "0x17866D0")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6002523")]
	[Address(RVA = "0x1786430", Offset = "0x1786430", VA = "0x1786430")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6002524")]
	[Address(RVA = "0x17867C0", Offset = "0x17867C0", VA = "0x17867C0")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6002525")]
	[Address(RVA = "0x1785548", Offset = "0x1785548", VA = "0x1785548")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6002526")]
	[Address(RVA = "0x17857D4", Offset = "0x17857D4", VA = "0x17857D4")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6002527")]
	[Address(RVA = "0x17851C4", Offset = "0x17851C4", VA = "0x17851C4")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6002528")]
	[Address(RVA = "0x1786664", Offset = "0x1786664", VA = "0x1786664")]
	[DebuggerHidden]
	private IEnumerator OnResume()
	{
		return null;
	}
}
[Token(Token = "0x20004D9")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x600252A")]
	[Address(RVA = "0xFA279C", Offset = "0xFA279C", VA = "0xFA279C")]
	public QuitGame()
	{
	}

	[Token(Token = "0x600252B")]
	[Address(RVA = "0xFA27A4", Offset = "0xFA27A4", VA = "0xFA27A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600252C")]
	[Address(RVA = "0xFA27A8", Offset = "0xFA27A8", VA = "0xFA27A8")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004DA")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x20004DB")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x1764134", Offset = "0x1764134", VA = "0x1764134")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4001BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4001BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4001BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x600252D")]
	[Address(RVA = "0x17623AC", Offset = "0x17623AC", VA = "0x17623AC")]
	public Pvr_UnityEyeMask()
	{
	}

	[Token(Token = "0x600252E")]
	[Address(RVA = "0x1762438", Offset = "0x1762438", VA = "0x1762438")]
	private void Awake()
	{
	}

	[Token(Token = "0x600252F")]
	[Address(RVA = "0x1762504", Offset = "0x1762504", VA = "0x1762504")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002530")]
	[Address(RVA = "0x1763114", Offset = "0x1763114", VA = "0x1763114")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002531")]
	[Address(RVA = "0x1762B14", Offset = "0x1762B14", VA = "0x1762B14")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6002532")]
	[Address(RVA = "0x1763E68", Offset = "0x1763E68", VA = "0x1763E68")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6002533")]
	[Address(RVA = "0x176352C", Offset = "0x176352C", VA = "0x176352C")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6002534")]
	[Address(RVA = "0x17639C8", Offset = "0x17639C8", VA = "0x17639C8")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6002535")]
	[Address(RVA = "0x17633F4", Offset = "0x17633F4", VA = "0x17633F4")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6002536")]
	[Address(RVA = "0x17627F0", Offset = "0x17627F0", VA = "0x17627F0")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6002537")]
	[Address(RVA = "0x1764010", Offset = "0x1764010", VA = "0x1764010")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6002538")]
	[Address(RVA = "0x1763334", Offset = "0x1763334", VA = "0x1763334")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6002539")]
	[Address(RVA = "0x1763388", Offset = "0x1763388", VA = "0x1763388")]
	private void CleanEyeMask()
	{
	}
}
[Token(Token = "0x20004DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC960EC", Offset = "0xC960EC")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96150", Offset = "0xC96150")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96150", Offset = "0xC96150")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4001BFB")]
	private const int bufferSize = 3;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4001BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x170004D4")]
	public Camera eyecamera
	{
		[Token(Token = "0x600253C")]
		[Address(RVA = "0x1778CE8", Offset = "0x1778CE8", VA = "0x1778CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9618C", Offset = "0xC9618C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600253D")]
		[Address(RVA = "0x1778CF0", Offset = "0x1778CF0", VA = "0x1778CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9619C", Offset = "0xC9619C")]
		private set
		{
		}
	}

	[Token(Token = "0x600253B")]
	[Address(RVA = "0x1778C44", Offset = "0x1778C44", VA = "0x1778C44")]
	public Pvr_UnitySDKEye()
	{
	}

	[Token(Token = "0x600253E")]
	[Address(RVA = "0x1778CF8", Offset = "0x1778CF8", VA = "0x1778CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600253F")]
	[Address(RVA = "0x1778D9C", Offset = "0x1778D9C", VA = "0x1778D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6002540")]
	[Address(RVA = "0x1779440", Offset = "0x1779440", VA = "0x1779440")]
	private void Update()
	{
	}

	[Token(Token = "0x6002541")]
	[Address(RVA = "0x1779700", Offset = "0x1779700", VA = "0x1779700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002542")]
	[Address(RVA = "0x1779704", Offset = "0x1779704", VA = "0x1779704")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002543")]
	[Address(RVA = "0x1779708", Offset = "0x1779708", VA = "0x1779708")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002544")]
	[Address(RVA = "0x1779790", Offset = "0x1779790", VA = "0x1779790")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6002545")]
	[Address(RVA = "0x17799D8", Offset = "0x17799D8", VA = "0x17799D8")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6002546")]
	[Address(RVA = "0x1779AA0", Offset = "0x1779AA0", VA = "0x1779AA0")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6002547")]
	[Address(RVA = "0x1779858", Offset = "0x1779858", VA = "0x1779858")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6002548")]
	[Address(RVA = "0x1779B68", Offset = "0x1779B68", VA = "0x1779B68")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6002549")]
	[Address(RVA = "0x1779ED8", Offset = "0x1779ED8", VA = "0x1779ED8")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600254A")]
	[Address(RVA = "0x1778E84", Offset = "0x1778E84", VA = "0x1778E84")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600254B")]
	[Address(RVA = "0x17790E4", Offset = "0x17790E4", VA = "0x17790E4")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600254C")]
	[Address(RVA = "0x1770448", Offset = "0x1770448", VA = "0x1770448")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x600254D")]
	[Address(RVA = "0x177A0D0", Offset = "0x177A0D0", VA = "0x177A0D0")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600254E")]
	[Address(RVA = "0x177A21C", Offset = "0x177A21C", VA = "0x177A21C")]
	private void vignette()
	{
	}

	[Token(Token = "0x600254F")]
	[Address(RVA = "0x1779D60", Offset = "0x1779D60", VA = "0x1779D60")]
	private void SetFFRParameter()
	{
	}
}
[Token(Token = "0x20004DD")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96374", Offset = "0xC96374")]
	private sealed class <EndOfFrame>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <boundaryState>__1;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Pvr_UnitySDKEyeManager $this;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x1700067F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0x177F1F8", Offset = "0x177F1F8", VA = "0x177F1F8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000680")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D37")]
			[Address(RVA = "0x177F200", Offset = "0x177F200", VA = "0x177F200", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x177C800", Offset = "0x177C800", VA = "0x177C800")]
		[DebuggerHidden]
		public <EndOfFrame>c__Iterator0()
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0x177D5AC", Offset = "0x177D5AC", VA = "0x177D5AC", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x177F208", Offset = "0x177F208", VA = "0x177F208", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0x177F21C", Offset = "0x177F21C", VA = "0x177F21C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC963D4", Offset = "0xC963D4")]
	private sealed class <ScreenFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float startAlpha;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float endAlpha;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Pvr_UnitySDKEyeManager $this;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000681")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0x177F3FC", Offset = "0x177F3FC", VA = "0x177F3FC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000682")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0x177F404", Offset = "0x177F404", VA = "0x177F404", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0x177D5A4", Offset = "0x177D5A4", VA = "0x177D5A4")]
		[DebuggerHidden]
		public <ScreenFade>c__Iterator1()
		{
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0x177F280", Offset = "0x177F280", VA = "0x177F280", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x177F40C", Offset = "0x177F40C", VA = "0x177F40C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0x177F420", Offset = "0x177F420", VA = "0x177F420", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isFrameRateLimitForBoundary;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lastBoundaryState;

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int recordTargetFrameRate;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int limitTargetFrameRate;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4001C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4001C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int eyeTextureId;

	[Token(Token = "0x4001C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderEventType eventType;

	[Token(Token = "0x4001C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4001C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int overlayLayerDepth;

	[Token(Token = "0x4001C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isHeadLocked;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int layerFlags;

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public bool supportEyeTracking;

	[Token(Token = "0x4001C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC9628C", Offset = "0xC9628C")]
	public bool screenFade;

	[Token(Token = "0x4001C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC962C4", Offset = "0xC962C4")]
	public float fadeTime;

	[Token(Token = "0x4001C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC962FC", Offset = "0xC962FC")]
	public Color fadeColor;

	[Token(Token = "0x4001C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int renderQueue;

	[Token(Token = "0x4001C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4001C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4001C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Material fadeMaterial;

	[Token(Token = "0x4001C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float elapsedTime;

	[Token(Token = "0x4001C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool isFading;

	[Token(Token = "0x4001C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float currentAlpha;

	[Token(Token = "0x4001C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float nowFadeAlpha;

	[Token(Token = "0x170004D5")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6002552")]
		[Address(RVA = "0x1764068", Offset = "0x1764068", VA = "0x1764068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004D6")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6002553")]
		[Address(RVA = "0x17703B4", Offset = "0x17703B4", VA = "0x17703B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004D7")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6002554")]
		[Address(RVA = "0x177A4F0", Offset = "0x177A4F0", VA = "0x177A4F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002555")]
		[Address(RVA = "0x177A600", Offset = "0x177A600", VA = "0x177A600")]
		set
		{
		}
	}

	[Token(Token = "0x170004D8")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6002556")]
		[Address(RVA = "0x177A668", Offset = "0x177A668", VA = "0x177A668")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6002557")]
		[Address(RVA = "0x177A670", Offset = "0x177A670", VA = "0x177A670")]
		set
		{
		}
	}

	[Token(Token = "0x6002551")]
	[Address(RVA = "0x177A578", Offset = "0x177A578", VA = "0x177A578")]
	public Pvr_UnitySDKEyeManager()
	{
	}

	[Token(Token = "0x6002558")]
	[Address(RVA = "0x177A684", Offset = "0x177A684", VA = "0x177A684")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6002559")]
	[Address(RVA = "0x177A948", Offset = "0x177A948", VA = "0x177A948")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600255A")]
	[Address(RVA = "0x177AA2C", Offset = "0x177AA2C", VA = "0x177AA2C")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600255B")]
	[Address(RVA = "0x177AB88", Offset = "0x177AB88", VA = "0x177AB88")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600255C")]
	[Address(RVA = "0x177ACAC", Offset = "0x177ACAC", VA = "0x177ACAC")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x600255D")]
	[Address(RVA = "0x177AE80", Offset = "0x177AE80", VA = "0x177AE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600255E")]
	[Address(RVA = "0x177B8D4", Offset = "0x177B8D4", VA = "0x177B8D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600255F")]
	[Address(RVA = "0x177BFD4", Offset = "0x177BFD4", VA = "0x177BFD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002560")]
	[Address(RVA = "0x177C018", Offset = "0x177C018", VA = "0x177C018")]
	private void Update()
	{
	}

	[Token(Token = "0x6002561")]
	[Address(RVA = "0x177C3C8", Offset = "0x177C3C8", VA = "0x177C3C8")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6002562")]
	[Address(RVA = "0x177C4FC", Offset = "0x177C4FC", VA = "0x177C4FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002563")]
	[Address(RVA = "0x177C504", Offset = "0x177C504", VA = "0x177C504")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002564")]
	[Address(RVA = "0x177C684", Offset = "0x177C684", VA = "0x177C684")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6002565")]
	[Address(RVA = "0x177C794", Offset = "0x177C794", VA = "0x177C794")]
	[DebuggerHidden]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6002566")]
	[Address(RVA = "0x177C808", Offset = "0x177C808", VA = "0x177C808")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6002567")]
	[Address(RVA = "0x177CE50", Offset = "0x177CE50", VA = "0x177CE50")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6002568")]
	[Address(RVA = "0x17712A4", Offset = "0x17712A4", VA = "0x17712A4")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002569")]
	[Address(RVA = "0x177D138", Offset = "0x177D138", VA = "0x177D138")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600256A")]
	[Address(RVA = "0x177B2AC", Offset = "0x177B2AC", VA = "0x177B2AC")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600256B")]
	[Address(RVA = "0x177C508", Offset = "0x177C508", VA = "0x177C508")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600256C")]
	[Address(RVA = "0x177B8CC", Offset = "0x177B8CC", VA = "0x177B8CC")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x600256D")]
	[Address(RVA = "0x177BF3C", Offset = "0x177BF3C", VA = "0x177BF3C")]
	[DebuggerHidden]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600256E")]
	[Address(RVA = "0x177D40C", Offset = "0x177D40C", VA = "0x177D40C")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600256F")]
	[Address(RVA = "0x177BF34", Offset = "0x177BF34", VA = "0x177BF34")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004DE")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20004DF")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20004E0")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001C3F")]
		Quad,
		[Token(Token = "0x4001C40")]
		Cylinder,
		[Token(Token = "0x4001C41")]
		Equirect
	}

	[Token(Token = "0x20004E1")]
	public enum OverlayType
	{
		[Token(Token = "0x4001C43")]
		Overlay,
		[Token(Token = "0x4001C44")]
		Underlay
	}

	[Token(Token = "0x20004E2")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001C46")]
		NotCare,
		[Token(Token = "0x4001C47")]
		Nearest,
		[Token(Token = "0x4001C48")]
		Linear,
		[Token(Token = "0x4001C49")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001C4A")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4001C4B")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001C4C")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4001C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OverlayTexFilterMode magTexFilterMode;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public OverlayTexFilterMode minTexFilterMode;

	[Token(Token = "0x6002570")]
	[Address(RVA = "0x177F484", Offset = "0x177F484", VA = "0x177F484")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}

	[Token(Token = "0x6002571")]
	[Address(RVA = "0x177F674", Offset = "0x177F674", VA = "0x177F674", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6002572")]
	[Address(RVA = "0x177F6A8", Offset = "0x177F6A8", VA = "0x177F6A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002573")]
	[Address(RVA = "0x177FC1C", Offset = "0x177FC1C", VA = "0x177FC1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6002574")]
	[Address(RVA = "0x17802A0", Offset = "0x17802A0", VA = "0x17802A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002575")]
	[Address(RVA = "0x177BCC8", Offset = "0x177BCC8", VA = "0x177BCC8")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6002576")]
	[Address(RVA = "0x177FA28", Offset = "0x177FA28", VA = "0x177FA28")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6002577")]
	[Address(RVA = "0x177FC20", Offset = "0x177FC20", VA = "0x177FC20")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6002578")]
	[Address(RVA = "0x1780328", Offset = "0x1780328", VA = "0x1780328")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6002579")]
	[Address(RVA = "0x17803D8", Offset = "0x17803D8", VA = "0x17803D8")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600257A")]
	[Address(RVA = "0x177F1AC", Offset = "0x177F1AC", VA = "0x177F1AC")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600257B")]
	[Address(RVA = "0x177F1D8", Offset = "0x177F1D8", VA = "0x177F1D8")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20004E3")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x4001C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4001C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4001C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4001C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96434", Offset = "0xC96434")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96434", Offset = "0xC96434")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x170004D9")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6002582")]
		[Address(RVA = "0xF96F64", Offset = "0xF96F64", VA = "0xF96F64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002583")]
		[Address(RVA = "0xF99DF8", Offset = "0xF99DF8", VA = "0xF99DF8")]
		set
		{
		}
	}

	[Token(Token = "0x170004DA")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6002584")]
		[Address(RVA = "0xF99E64", Offset = "0xF99E64", VA = "0xF99E64")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x170004DB")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6002585")]
		[Address(RVA = "0xF99E6C", Offset = "0xF99E6C", VA = "0xF99E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96470", Offset = "0xC96470")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002586")]
		[Address(RVA = "0xF99E74", Offset = "0xF99E74", VA = "0xF99E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96480", Offset = "0xC96480")]
		private set
		{
		}
	}

	[Token(Token = "0x170004DC")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6002587")]
		[Address(RVA = "0xF99E7C", Offset = "0xF99E7C", VA = "0xF99E7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002588")]
		[Address(RVA = "0xF99E84", Offset = "0xF99E84", VA = "0xF99E84")]
		set
		{
		}
	}

	[Token(Token = "0x170004DD")]
	public float EyeVFoV
	{
		[Token(Token = "0x6002589")]
		[Address(RVA = "0xF9A014", Offset = "0xF9A014", VA = "0xF9A014")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600258A")]
		[Address(RVA = "0xF9A01C", Offset = "0xF9A01C", VA = "0xF9A01C")]
		set
		{
		}
	}

	[Token(Token = "0x170004DE")]
	public float EyeHFoV
	{
		[Token(Token = "0x600258B")]
		[Address(RVA = "0xF9A030", Offset = "0xF9A030", VA = "0xF9A030")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600258C")]
		[Address(RVA = "0xF9A038", Offset = "0xF9A038", VA = "0xF9A038")]
		set
		{
		}
	}

	[Token(Token = "0x6002581")]
	[Address(RVA = "0xF993B4", Offset = "0xF993B4", VA = "0xF993B4")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x600258D")]
	[Address(RVA = "0xF994DC", Offset = "0xF994DC", VA = "0xF994DC")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600258E")]
	[Address(RVA = "0xF99D74", Offset = "0xF99D74", VA = "0xF99D74")]
	public void Init()
	{
	}

	[Token(Token = "0x600258F")]
	[Address(RVA = "0xF9A3A8", Offset = "0xF9A3A8", VA = "0xF9A3A8")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6002590")]
	[Address(RVA = "0xF9A4D4", Offset = "0xF9A4D4", VA = "0xF9A4D4")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6002591")]
	[Address(RVA = "0xF9A58C", Offset = "0xF9A58C", VA = "0xF9A58C")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6002592")]
	[Address(RVA = "0xF9AFF8", Offset = "0xF9AFF8", VA = "0xF9AFF8")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6002593")]
	[Address(RVA = "0xF9A97C", Offset = "0xF9A97C", VA = "0xF9A97C")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6002594")]
	[Address(RVA = "0xF9AAE0", Offset = "0xF9AAE0", VA = "0xF9AAE0")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6002595")]
	[Address(RVA = "0xF9B264", Offset = "0xF9B264", VA = "0xF9B264")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6002596")]
	[Address(RVA = "0xF99E9C", Offset = "0xF99E9C", VA = "0xF99E9C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6002597")]
	[Address(RVA = "0xF98004", Offset = "0xF98004", VA = "0xF98004")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6002598")]
	[Address(RVA = "0xF97024", Offset = "0xF97024", VA = "0xF97024")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6002599")]
	[Address(RVA = "0xF9B908", Offset = "0xF9B908", VA = "0xF9B908")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x600259A")]
	[Address(RVA = "0xF9AC44", Offset = "0xF9AC44", VA = "0xF9AC44")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600259B")]
	[Address(RVA = "0xF9BC1C", Offset = "0xF9BC1C", VA = "0xF9BC1C")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600259C")]
	[Address(RVA = "0xF9A04C", Offset = "0xF9A04C", VA = "0xF9A04C")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004E4")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x600259E")]
	[Address(RVA = "0xF9B81C", Offset = "0xF9B81C", VA = "0xF9B81C")]
	public Pvr_UnitySDKSinglePass()
	{
	}

	[Token(Token = "0x600259F")]
	[Address(RVA = "0xF9F4D4", Offset = "0xF9F4D4", VA = "0xF9F4D4", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x60025A0")]
	[Address(RVA = "0xF9FF40", Offset = "0xF9FF40", VA = "0xF9FF40", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x60025A1")]
	[Address(RVA = "0xFA0088", Offset = "0xFA0088", VA = "0xFA0088", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x60025A2")]
	[Address(RVA = "0xFA09E4", Offset = "0xFA09E4", VA = "0xFA09E4", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x60025A3")]
	[Address(RVA = "0xF9FF44", Offset = "0xF9FF44", VA = "0xF9FF44")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x60025A4")]
	[Address(RVA = "0xFA0AB4", Offset = "0xFA0AB4", VA = "0xFA0AB4")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x60025A5")]
	[Address(RVA = "0xF9F8EC", Offset = "0xF9F8EC", VA = "0xF9F8EC")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x60025A6")]
	[Address(RVA = "0xF9FDCC", Offset = "0xF9FDCC", VA = "0xF9FDCC")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x60025A7")]
	[Address(RVA = "0xFA0BD0", Offset = "0xFA0BD0", VA = "0xFA0BD0")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60025A8")]
	[Address(RVA = "0xFA0E7C", Offset = "0xFA0E7C", VA = "0xFA0E7C")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60025A9")]
	[Address(RVA = "0xFA0CD8", Offset = "0xFA0CD8", VA = "0xFA0CD8")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60025AA")]
	[Address(RVA = "0xFA09EC", Offset = "0xFA09EC", VA = "0xFA09EC")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60025AB")]
	[Address(RVA = "0xFA1070", Offset = "0xFA1070", VA = "0xFA1070")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60025AC")]
	[Address(RVA = "0xFA008C", Offset = "0xFA008C", VA = "0xFA008C")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60025AD")]
	[Address(RVA = "0xFA138C", Offset = "0xFA138C", VA = "0xFA138C")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60025AE")]
	[Address(RVA = "0xFA12D8", Offset = "0xFA12D8", VA = "0xFA12D8")]
	private void SetRenderTextureWithDepth()
	{
	}
}
[Token(Token = "0x20004E5")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60025B0")]
	[Address(RVA = "0xF9F4CC", Offset = "0xF9F4CC", VA = "0xF9F4CC")]
	protected SDKStereoRendering()
	{
	}

	[Token(Token = "0x60025B1")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60025B2")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60025B3")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60025B4")]
	public abstract void OnSDKPostRender();
}
[Token(Token = "0x20004E6")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60025B5")]
	[Address(RVA = "0xF64FD8", Offset = "0xF64FD8", VA = "0xF64FD8")]
	public HighlightAtGaze()
	{
	}

	[Token(Token = "0x60025B6")]
	[Address(RVA = "0xF6501C", Offset = "0xF6501C", VA = "0xF6501C")]
	private void Start()
	{
	}

	[Token(Token = "0x60025B7")]
	[Address(RVA = "0xF650B4", Offset = "0xF650B4", VA = "0xF650B4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004E7")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60025B8")]
	[Address(RVA = "0xFA2A60", Offset = "0xFA2A60", VA = "0xFA2A60")]
	public RayVisualizer()
	{
	}

	[Token(Token = "0x60025B9")]
	[Address(RVA = "0xFA2A68", Offset = "0xFA2A68", VA = "0xFA2A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60025BA")]
	[Address(RVA = "0xFA2B1C", Offset = "0xFA2B1C", VA = "0xFA2B1C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004E8")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60025BB")]
	[Address(RVA = "0xF64C44", Offset = "0xF64C44", VA = "0xF64C44")]
	public GetSeeThroughImage()
	{
	}

	[Token(Token = "0x60025BC")]
	[Address(RVA = "0xF64C4C", Offset = "0xF64C4C", VA = "0xF64C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60025BD")]
	[Address(RVA = "0xF64D8C", Offset = "0xF64D8C", VA = "0xF64D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60025BE")]
	[Address(RVA = "0xF64E6C", Offset = "0xF64E6C", VA = "0xF64E6C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60025BF")]
	[Address(RVA = "0xF64C50", Offset = "0xF64C50", VA = "0xF64C50")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60025C0")]
	[Address(RVA = "0xF64E10", Offset = "0xF64E10", VA = "0xF64E10")]
	private void DrawTexture()
	{
	}
}
[Token(Token = "0x20004E9")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x4001C86")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96490", Offset = "0xC96490")]
	private static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>f__am$cache0;

	[Token(Token = "0x60025C1")]
	[Address(RVA = "0x185D760", Offset = "0x185D760", VA = "0x185D760")]
	public OverlayExternalSurfaceDemo()
	{
	}

	[Token(Token = "0x60025C2")]
	[Address(RVA = "0x185D768", Offset = "0x185D768", VA = "0x185D768")]
	private void Awake()
	{
	}

	[Token(Token = "0x60025C3")]
	[Address(RVA = "0x185D8B4", Offset = "0x185D8B4", VA = "0x185D8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60025C4")]
	[Address(RVA = "0x185D94C", Offset = "0x185D94C", VA = "0x185D94C")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x60025C5")]
	[Address(RVA = "0x185DB40", Offset = "0x185DB40", VA = "0x185DB40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC964A0", Offset = "0xC964A0")]
	private static void <StartPlay>m__0()
	{
	}
}
[Token(Token = "0x20004EA")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x60025C6")]
	[Address(RVA = "0x18466DC", Offset = "0x18466DC", VA = "0x18466DC")]
	public MoveCylinder()
	{
	}

	[Token(Token = "0x60025C7")]
	[Address(RVA = "0x18466E4", Offset = "0x18466E4", VA = "0x18466E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60025C8")]
	[Address(RVA = "0x1846754", Offset = "0x1846754", VA = "0x1846754")]
	public void Reset()
	{
	}
}
[Token(Token = "0x20004EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC964B0", Offset = "0xC964B0")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x60025C9")]
	[Address(RVA = "0x18467EC", Offset = "0x18467EC", VA = "0x18467EC")]
	public MoveSphere()
	{
	}

	[Token(Token = "0x60025CA")]
	[Address(RVA = "0x18467F4", Offset = "0x18467F4", VA = "0x18467F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60025CB")]
	[Address(RVA = "0x18469EC", Offset = "0x18469EC", VA = "0x18469EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60025CC")]
	[Address(RVA = "0x1846918", Offset = "0x1846918", VA = "0x1846918")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60025CD")]
	[Address(RVA = "0x18469F0", Offset = "0x18469F0", VA = "0x18469F0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60025CE")]
	[Address(RVA = "0x1846B64", Offset = "0x1846B64", VA = "0x1846B64")]
	public void TeleportRandomly()
	{
	}
}
[Token(Token = "0x20004EC")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x60025CF")]
	[Address(RVA = "0xFA2D4C", Offset = "0xFA2D4C", VA = "0xFA2D4C")]
	public Resetbutton()
	{
	}

	[Token(Token = "0x60025D0")]
	[Address(RVA = "0xFA2D54", Offset = "0xFA2D54", VA = "0xFA2D54")]
	public void DemoResetTracking()
	{
	}
}
[Token(Token = "0x20004ED")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC96514", Offset = "0xC96514")]
	public bool trackRotation;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC9654C", Offset = "0xC9654C")]
	public bool trackPosition;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x170004DF")]
	public Ray Gaze
	{
		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1780770", Offset = "0x1780770", VA = "0x1780770")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60025D1")]
	[Address(RVA = "0x1780760", Offset = "0x1780760", VA = "0x1780760")]
	public Pvr_UnitySDKHeadTrack()
	{
	}

	[Token(Token = "0x60025D3")]
	[Address(RVA = "0x1780E0C", Offset = "0x1780E0C", VA = "0x1780E0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60025D4")]
	[Address(RVA = "0x1780828", Offset = "0x1780828", VA = "0x1780828")]
	private void UpdateHead()
	{
	}
}
[Token(Token = "0x20004EE")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4001C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96584", Offset = "0xC96584")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96584", Offset = "0xC96584")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4001C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC965C0", Offset = "0xC965C0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC965C0", Offset = "0xC965C0")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4001C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC965FC", Offset = "0xC965FC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC965FC", Offset = "0xC965FC")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170004E0")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xF98F90", Offset = "0xF98F90", VA = "0xF98F90")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x170004E1")]
	public Vector3 Position
	{
		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xF9913C", Offset = "0xF9913C", VA = "0xF9913C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96638", Offset = "0xC96638")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xF99148", Offset = "0xF99148", VA = "0xF99148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96648", Offset = "0xC96648")]
		protected set
		{
		}
	}

	[Token(Token = "0x170004E2")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xF99154", Offset = "0xF99154", VA = "0xF99154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96658", Offset = "0xC96658")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xF99160", Offset = "0xF99160", VA = "0xF99160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96668", Offset = "0xC96668")]
		protected set
		{
		}
	}

	[Token(Token = "0x170004E3")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xF99118", Offset = "0xF99118", VA = "0xF99118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96678", Offset = "0xC96678")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xF9916C", Offset = "0xF9916C", VA = "0xF9916C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96688", Offset = "0xC96688")]
		protected set
		{
		}
	}

	[Token(Token = "0x60025D5")]
	[Address(RVA = "0xF98BF4", Offset = "0xF98BF4", VA = "0xF98BF4")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60025D6")]
	[Address(RVA = "0xF98DCC", Offset = "0xF98DCC", VA = "0xF98DCC")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60025DE")]
	[Address(RVA = "0xF98E4C", Offset = "0xF98E4C", VA = "0xF98E4C")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60025DF")]
	[Address(RVA = "0xF98C50", Offset = "0xF98C50", VA = "0xF98C50")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60025E0")]
	[Address(RVA = "0xF99188", Offset = "0xF99188", VA = "0xF99188")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20004EF")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x20004F0")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x20004F1")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4001C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4001C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x4001C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x4001C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4001C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4001C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4001CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4001CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4001CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4001CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x170004E4")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xF9777C", Offset = "0xF9777C", VA = "0xF9777C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xF9BE28", Offset = "0xF9BE28", VA = "0xF9BE28")]
		set
		{
		}
	}

	[Token(Token = "0x14000032")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xF9BE94", Offset = "0xF9BE94", VA = "0xF9BE94")]
		add
		{
		}
		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xF9BFD0", Offset = "0xF9BFD0", VA = "0xF9BFD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xF9C10C", Offset = "0xF9C10C", VA = "0xF9C10C")]
		add
		{
		}
		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xF9C248", Offset = "0xF9C248", VA = "0xF9C248")]
		remove
		{
		}
	}

	[Token(Token = "0x60025E2")]
	[Address(RVA = "0xF9BC28", Offset = "0xF9BC28", VA = "0xF9BC28")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60025E9")]
	[Address(RVA = "0xF9BCEC", Offset = "0xF9BCEC", VA = "0xF9BCEC")]
	public void Init()
	{
	}

	[Token(Token = "0x60025EA")]
	[Address(RVA = "0xF9C738", Offset = "0xF9C738", VA = "0xF9C738")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60025EB")]
	[Address(RVA = "0xF9C5F8", Offset = "0xF9C5F8", VA = "0xF9C5F8")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60025EC")]
	[Address(RVA = "0xF9C384", Offset = "0xF9C384", VA = "0xF9C384")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60025ED")]
	[Address(RVA = "0xF9783C", Offset = "0xF9783C", VA = "0xF9783C")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60025EE")]
	[Address(RVA = "0xF9D7C8", Offset = "0xF9D7C8", VA = "0xF9D7C8")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60025EF")]
	[Address(RVA = "0xF9797C", Offset = "0xF9797C", VA = "0xF9797C")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60025F0")]
	[Address(RVA = "0xF97AFC", Offset = "0xF97AFC", VA = "0xF97AFC")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60025F1")]
	[Address(RVA = "0xF9C7D4", Offset = "0xF9C7D4", VA = "0xF9C7D4")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60025F2")]
	[Address(RVA = "0xF9E374", Offset = "0xF9E374", VA = "0xF9E374")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60025F3")]
	[Address(RVA = "0xF9E120", Offset = "0xF9E120", VA = "0xF9E120")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20004F2")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4001CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4001CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4001CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4001CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4001CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4001CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4001CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4001CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60025FD")]
	[Address(RVA = "0x1010DA4", Offset = "0x1010DA4", VA = "0x1010DA4")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004F3")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x20004F4")]
	public struct Lenses
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001CBD")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001CBE")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001CBF")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x20004F5")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x20004F6")]
	public struct Distortion
	{
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x1777498", Offset = "0x1777498", VA = "0x1777498")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x17774A0", Offset = "0x17774A0", VA = "0x17774A0")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x17774A8", Offset = "0x17774A8", VA = "0x17774A8")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20004F7")]
	public struct Device
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4001CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4001CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4001CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60025FE")]
	[Address(RVA = "0x1776B28", Offset = "0x1776B28", VA = "0x1776B28")]
	public Pvr_UnitySDKConfigProfile()
	{
	}

	[Token(Token = "0x60025FF")]
	[Address(RVA = "0x1776B30", Offset = "0x1776B30", VA = "0x1776B30")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6002600")]
	[Address(RVA = "0x1776BC0", Offset = "0x1776BC0", VA = "0x1776BC0")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6002601")]
	[Address(RVA = "0x1776C68", Offset = "0x1776C68", VA = "0x1776C68")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6002602")]
	[Address(RVA = "0x1777008", Offset = "0x1777008", VA = "0x1777008")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6002603")]
	[Address(RVA = "0x1777288", Offset = "0x1777288", VA = "0x1777288")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}
}
[Token(Token = "0x20004F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC96710", Offset = "0xC96710")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x6002608")]
	[Address(RVA = "0x17804C0", Offset = "0x17804C0", VA = "0x17804C0")]
	public Pvr_UnitySDKFPS()
	{
	}

	[Token(Token = "0x6002609")]
	[Address(RVA = "0x17804D0", Offset = "0x17804D0", VA = "0x17804D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600260A")]
	[Address(RVA = "0x17804DC", Offset = "0x17804DC", VA = "0x17804DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600260B")]
	[Address(RVA = "0x17805AC", Offset = "0x17805AC", VA = "0x17805AC")]
	public string ShowFps()
	{
		return null;
	}
}
[Token(Token = "0x20004F9")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4001CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x600260C")]
	[Address(RVA = "0x1E9FEB4", Offset = "0x1E9FEB4", VA = "0x1E9FEB4")]
	public Pvr_GazeFuse()
	{
	}

	[Token(Token = "0x600260D")]
	[Address(RVA = "0x1E9FEBC", Offset = "0x1E9FEBC", VA = "0x1E9FEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600260E")]
	[Address(RVA = "0x1E9FF14", Offset = "0x1E9FF14", VA = "0x1E9FF14")]
	private void Update()
	{
	}

	[Token(Token = "0x600260F")]
	[Address(RVA = "0x1EA00F4", Offset = "0x1EA00F4", VA = "0x1EA00F4")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}
}
[Token(Token = "0x20004FA")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20004FB")]
	public enum Mode
	{
		[Token(Token = "0x4001CDC")]
		Click,
		[Token(Token = "0x4001CDD")]
		Gaze
	}

	[Token(Token = "0x4001CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4001CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC96774", Offset = "0xC96774")]
	public string ClickInputName;

	[Token(Token = "0x4001CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC967AC", Offset = "0xC967AC")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC967E4", Offset = "0xC967E4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC967E4", Offset = "0xC967E4")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96820", Offset = "0xC96820")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96820", Offset = "0xC96820")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x170004E5")]
	public static float gazeFraction
	{
		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1EA00A4", Offset = "0x1EA00A4", VA = "0x1EA00A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9685C", Offset = "0xC9685C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002612")]
		[Address(RVA = "0x1EA0204", Offset = "0x1EA0204", VA = "0x1EA0204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9686C", Offset = "0xC9686C")]
		private set
		{
		}
	}

	[Token(Token = "0x170004E6")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1EA0054", Offset = "0x1EA0054", VA = "0x1EA0054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9687C", Offset = "0xC9687C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1EA0260", Offset = "0x1EA0260", VA = "0x1EA0260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9688C", Offset = "0xC9688C")]
		private set
		{
		}
	}

	[Token(Token = "0x6002610")]
	[Address(RVA = "0x1EA01A4", Offset = "0x1EA01A4", VA = "0x1EA01A4")]
	public Pvr_GazeInputModule()
	{
	}

	[Token(Token = "0x6002615")]
	[Address(RVA = "0x1EA02B4", Offset = "0x1EA02B4", VA = "0x1EA02B4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6002616")]
	[Address(RVA = "0x1EA02D8", Offset = "0x1EA02D8", VA = "0x1EA02D8")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6002617")]
	[Address(RVA = "0x1EA051C", Offset = "0x1EA051C", VA = "0x1EA051C")]
	private void HandleSelection()
	{
	}
}
[Token(Token = "0x20004FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC9689C", Offset = "0xC9689C")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC96900", Offset = "0xC96900")]
	public Transform Crosshair;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6002618")]
	[Address(RVA = "0x1EA0A30", Offset = "0x1EA0A30", VA = "0x1EA0A30")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}

	[Token(Token = "0x6002619")]
	[Address(RVA = "0x1EA0A38", Offset = "0x1EA0A38", VA = "0x1EA0A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600261A")]
	[Address(RVA = "0x1EA0A90", Offset = "0x1EA0A90", VA = "0x1EA0A90")]
	private void Start()
	{
	}

	[Token(Token = "0x600261B")]
	[Address(RVA = "0x1EA0B18", Offset = "0x1EA0B18", VA = "0x1EA0B18")]
	private void Update()
	{
	}

	[Token(Token = "0x600261C")]
	[Address(RVA = "0x1EA0C40", Offset = "0x1EA0C40", VA = "0x1EA0C40")]
	private void SetCrossHairAtDistance(float dist)
	{
	}
}
[Token(Token = "0x20004FD")]
public enum RenderEventType
{
	[Token(Token = "0x4001CE4")]
	InitRenderThread = 1024,
	[Token(Token = "0x4001CE5")]
	Pause,
	[Token(Token = "0x4001CE6")]
	Resume,
	[Token(Token = "0x4001CE7")]
	LeftEyeEndFrame,
	[Token(Token = "0x4001CE8")]
	RightEyeEndFrame,
	[Token(Token = "0x4001CE9")]
	TimeWarp,
	[Token(Token = "0x4001CEA")]
	ResetVrModeParms,
	[Token(Token = "0x4001CEB")]
	ShutdownRenderThread,
	[Token(Token = "0x4001CEC")]
	BeginEye,
	[Token(Token = "0x4001CED")]
	EndEye,
	[Token(Token = "0x4001CEE")]
	BoundaryRenderLeft,
	[Token(Token = "0x4001CEF")]
	BoundaryRenderRight,
	[Token(Token = "0x4001CF0")]
	BothEyeEndFrame,
	[Token(Token = "0x4001CF1")]
	CameraFrameLeft,
	[Token(Token = "0x4001CF2")]
	CameraFrameRight,
	[Token(Token = "0x4001CF3")]
	StartCameraFrame,
	[Token(Token = "0x4001CF4")]
	StopCameraFrame
}
[Token(Token = "0x20004FE")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x20004FF")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4001CF5")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4001CF6")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4001CF7")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4001CF8")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4001CF9")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4001CFA")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4001CFB")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x600261E")]
	[Address(RVA = "0xF98544", Offset = "0xF98544", VA = "0xF98544")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x600261F")]
	[Address(RVA = "0xF9857C", Offset = "0xF9857C", VA = "0xF9857C")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6002620")]
	[Address(RVA = "0xF98584", Offset = "0xF98584", VA = "0xF98584")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6002621")]
	[Address(RVA = "0xF985A4", Offset = "0xF985A4", VA = "0xF985A4")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6002622")]
	[Address(RVA = "0xF98538", Offset = "0xF98538", VA = "0xF98538")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC96938", Offset = "0xC96938")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6002623")]
	[Address(RVA = "0xF985B8", Offset = "0xF985B8", VA = "0xF985B8")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000500")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC9699C", Offset = "0xC9699C")]
	public GameObject cursor;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6002629")]
	[Address(RVA = "0xF9E578", Offset = "0xF9E578", VA = "0xF9E578")]
	public Pvr_UnitySDKSightInputModule()
	{
	}

	[Token(Token = "0x600262A")]
	[Address(RVA = "0xF9E5D8", Offset = "0xF9E5D8", VA = "0xF9E5D8", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x600262B")]
	[Address(RVA = "0xF9E678", Offset = "0xF9E678", VA = "0xF9E678", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600262C")]
	[Address(RVA = "0xF9E9C8", Offset = "0xF9E9C8", VA = "0xF9E9C8", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600262D")]
	[Address(RVA = "0xF9EA60", Offset = "0xF9EA60", VA = "0xF9EA60", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600262E")]
	[Address(RVA = "0xF9EA9C", Offset = "0xF9EA9C", VA = "0xF9EA9C")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x600262F")]
	[Address(RVA = "0xF9EC40", Offset = "0xF9EC40", VA = "0xF9EC40")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6002630")]
	[Address(RVA = "0xF9EE40", Offset = "0xF9EE40", VA = "0xF9EE40")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6002631")]
	[Address(RVA = "0xF9E79C", Offset = "0xF9E79C", VA = "0xF9E79C")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6002632")]
	[Address(RVA = "0xF9F12C", Offset = "0xF9F12C", VA = "0xF9F12C")]
	private void HandleTrigger()
	{
	}
}
[Token(Token = "0x2000501")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4001D0A")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4001D0B")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4001D0C")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x170004E7")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6002634")]
		[Address(RVA = "0x1E7F0FC", Offset = "0x1E7F0FC", VA = "0x1E7F0FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002633")]
	[Address(RVA = "0x1EA349C", Offset = "0x1EA349C", VA = "0x1EA349C")]
	public Pvr_ObjImporter()
	{
	}

	[Token(Token = "0x6002635")]
	[Address(RVA = "0x1E7F1A0", Offset = "0x1E7F1A0", VA = "0x1E7F1A0")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6002636")]
	[Address(RVA = "0x1EA34A4", Offset = "0x1EA34A4", VA = "0x1EA34A4")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6002637")]
	[Address(RVA = "0x1EA3CD4", Offset = "0x1EA3CD4", VA = "0x1EA3CD4")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6002638")]
	[Address(RVA = "0x1EA3E90", Offset = "0x1EA3E90", VA = "0x1EA3E90")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6002639")]
	[Address(RVA = "0x1EA4338", Offset = "0x1EA4338", VA = "0x1EA4338")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x600263A")]
	[Address(RVA = "0x1EA4004", Offset = "0x1EA4004", VA = "0x1EA4004")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x600263B")]
	[Address(RVA = "0x1EA42B8", Offset = "0x1EA42B8", VA = "0x1EA42B8")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}
}
[Token(Token = "0x2000502")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC969F4", Offset = "0xC969F4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC969F4", Offset = "0xC969F4")]
	private int <x>k__BackingField;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96A30", Offset = "0xC96A30")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96A30", Offset = "0xC96A30")]
	private int <y>k__BackingField;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96A6C", Offset = "0xC96A6C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC96A6C", Offset = "0xC96A6C")]
	private int <z>k__BackingField;

	[Token(Token = "0x170004E8")]
	public int x
	{
		[Token(Token = "0x600263F")]
		[Address(RVA = "0xFA2458", Offset = "0xFA2458", VA = "0xFA2458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AA8", Offset = "0xC96AA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002640")]
		[Address(RVA = "0xFA2440", Offset = "0xFA2440", VA = "0xFA2440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AB8", Offset = "0xC96AB8")]
		set
		{
		}
	}

	[Token(Token = "0x170004E9")]
	public int y
	{
		[Token(Token = "0x6002641")]
		[Address(RVA = "0xFA2460", Offset = "0xFA2460", VA = "0xFA2460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AC8", Offset = "0xC96AC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002642")]
		[Address(RVA = "0xFA2448", Offset = "0xFA2448", VA = "0xFA2448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AD8", Offset = "0xC96AD8")]
		set
		{
		}
	}

	[Token(Token = "0x170004EA")]
	public int z
	{
		[Token(Token = "0x6002643")]
		[Address(RVA = "0xFA2468", Offset = "0xFA2468", VA = "0xFA2468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AE8", Offset = "0xC96AE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002644")]
		[Address(RVA = "0xFA2450", Offset = "0xFA2450", VA = "0xFA2450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96AF8", Offset = "0xC96AF8")]
		set
		{
		}
	}

	[Token(Token = "0x600263D")]
	[Address(RVA = "0xFA23F8", Offset = "0xFA23F8", VA = "0xFA23F8")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x600263E")]
	[Address(RVA = "0xFA2400", Offset = "0xFA2400", VA = "0xFA2400")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000503")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6002645")]
	[Address(RVA = "0x1E9FEAC", Offset = "0x1E9FEAC", VA = "0x1E9FEAC")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000504")]
public enum ConfirmBtn
{
	[Token(Token = "0x4001D12")]
	App = 1,
	[Token(Token = "0x4001D13")]
	TouchPad = 2,
	[Token(Token = "0x4001D14")]
	Trigger = 4
}
[Token(Token = "0x2000505")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x6002646")]
	[Address(RVA = "0x1EA0DB4", Offset = "0x1EA0DB4", VA = "0x1EA0DB4")]
	public Pvr_InputModule()
	{
	}

	[Token(Token = "0x6002647")]
	[Address(RVA = "0x1EA0DC4", Offset = "0x1EA0DC4", VA = "0x1EA0DC4", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6002648")]
	[Address(RVA = "0x1EA0E44", Offset = "0x1EA0E44", VA = "0x1EA0E44")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6002649")]
	[Address(RVA = "0x1EA0F30", Offset = "0x1EA0F30", VA = "0x1EA0F30")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600264A")]
	[Address(RVA = "0x1EA1018", Offset = "0x1EA1018", VA = "0x1EA1018", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600264B")]
	[Address(RVA = "0x1EA13F0", Offset = "0x1EA13F0", VA = "0x1EA13F0", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600264C")]
	[Address(RVA = "0x1EA158C", Offset = "0x1EA158C", VA = "0x1EA158C", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600264D")]
	[Address(RVA = "0x1EA1694", Offset = "0x1EA1694", VA = "0x1EA1694", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600264E")]
	[Address(RVA = "0x1EA17DC", Offset = "0x1EA17DC", VA = "0x1EA17DC", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600264F")]
	[Address(RVA = "0x1EA1A20", Offset = "0x1EA1A20", VA = "0x1EA1A20", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002650")]
	[Address(RVA = "0x1EA1AE0", Offset = "0x1EA1AE0", VA = "0x1EA1AE0", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6002651")]
	[Address(RVA = "0x1EA1B80", Offset = "0x1EA1B80", VA = "0x1EA1B80", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6002652")]
	[Address(RVA = "0x1EA241C", Offset = "0x1EA241C", VA = "0x1EA241C", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6002653")]
	[Address(RVA = "0x1EA24B4", Offset = "0x1EA24B4", VA = "0x1EA24B4", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6002654")]
	[Address(RVA = "0x1EA2584", Offset = "0x1EA2584", VA = "0x1EA2584", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6002655")]
	[Address(RVA = "0x1EA2678", Offset = "0x1EA2678", VA = "0x1EA2678", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6002656")]
	[Address(RVA = "0x1EA29A4", Offset = "0x1EA29A4", VA = "0x1EA29A4", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6002657")]
	[Address(RVA = "0x1EA2CD8", Offset = "0x1EA2CD8", VA = "0x1EA2CD8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}
}
[Token(Token = "0x2000506")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96B28", Offset = "0xC96B28")]
	private sealed class <CreateDraggablePanel>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Canvas canvas;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal GameObject <draggablePanel>__1;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Vector2 canvasSize;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000683")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0x175EC10", Offset = "0x175EC10", VA = "0x175EC10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000684")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D43")]
			[Address(RVA = "0x175EC18", Offset = "0x175EC18", VA = "0x175EC18", Slot = "5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0x175E3A0", Offset = "0x175E3A0", VA = "0x175E3A0")]
		[DebuggerHidden]
		public <CreateDraggablePanel>c__Iterator0()
		{
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0x175E6F8", Offset = "0x175E6F8", VA = "0x175E6F8", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x175EC20", Offset = "0x175EC20", VA = "0x175EC20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0x175EC34", Offset = "0x175EC34", VA = "0x175EC34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4001D1C")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6002659")]
	[Address(RVA = "0x175DE20", Offset = "0x175DE20", VA = "0x175DE20")]
	public Pvr_UICanvas()
	{
	}

	[Token(Token = "0x600265A")]
	[Address(RVA = "0x175DE28", Offset = "0x175DE28", VA = "0x175DE28", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600265B")]
	[Address(RVA = "0x175DE34", Offset = "0x175DE34", VA = "0x175DE34", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600265C")]
	[Address(RVA = "0x175DE40", Offset = "0x175DE40", VA = "0x175DE40", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600265D")]
	[Address(RVA = "0x175DE4C", Offset = "0x175DE4C", VA = "0x175DE4C", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600265E")]
	[Address(RVA = "0x175E310", Offset = "0x175E310", VA = "0x175E310", Slot = "8")]
	[DebuggerHidden]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x600265F")]
	[Address(RVA = "0x175E3A8", Offset = "0x175E3A8", VA = "0x175E3A8", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}
}
[Token(Token = "0x2000507")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000508")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000509")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IDragHandler, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000034")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6002665")]
		[Address(RVA = "0x175ECAC", Offset = "0x175ECAC", VA = "0x175ECAC")]
		add
		{
		}
		[Token(Token = "0x6002666")]
		[Address(RVA = "0x175ED94", Offset = "0x175ED94", VA = "0x175ED94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6002667")]
		[Address(RVA = "0x175EE7C", Offset = "0x175EE7C", VA = "0x175EE7C")]
		add
		{
		}
		[Token(Token = "0x6002668")]
		[Address(RVA = "0x175EF64", Offset = "0x175EF64", VA = "0x175EF64")]
		remove
		{
		}
	}

	[Token(Token = "0x6002664")]
	[Address(RVA = "0x175EC98", Offset = "0x175EC98", VA = "0x175EC98")]
	public Pvr_UIDraggableItem()
	{
	}

	[Token(Token = "0x6002669")]
	[Address(RVA = "0x175F04C", Offset = "0x175F04C", VA = "0x175F04C", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600266A")]
	[Address(RVA = "0x175F070", Offset = "0x175F070", VA = "0x175F070", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600266B")]
	[Address(RVA = "0x175F094", Offset = "0x175F094", VA = "0x175F094", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600266C")]
	[Address(RVA = "0x175F2F4", Offset = "0x175F2F4", VA = "0x175F2F4", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600266D")]
	[Address(RVA = "0x175F300", Offset = "0x175F300", VA = "0x175F300", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600266E")]
	[Address(RVA = "0x175F7E8", Offset = "0x175F7E8", VA = "0x175F7E8", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600266F")]
	[Address(RVA = "0x175F8E4", Offset = "0x175F8E4", VA = "0x175F8E4", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6002670")]
	[Address(RVA = "0x175FA90", Offset = "0x175FA90", VA = "0x175FA90", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6002671")]
	[Address(RVA = "0x175FE30", Offset = "0x175FE30", VA = "0x175FE30", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6002672")]
	[Address(RVA = "0x175FF3C", Offset = "0x175FF3C", VA = "0x175FF3C", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}
}
[Token(Token = "0x200050A")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler
{
	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6002673")]
	[Address(RVA = "0x175FF44", Offset = "0x175FF44", VA = "0x175FF44")]
	public Pvr_UIDropZone()
	{
	}

	[Token(Token = "0x6002674")]
	[Address(RVA = "0x175FF4C", Offset = "0x175FF4C", VA = "0x175FF4C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6002675")]
	[Address(RVA = "0x1760074", Offset = "0x1760074", VA = "0x1760074", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}
}
[Token(Token = "0x200050B")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4001D2F")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96C10", Offset = "0xC96C10")]
	private static Comparison<RaycastResult> <>f__am$cache0;

	[Token(Token = "0x170004EB")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600267B")]
		[Address(RVA = "0x17610C8", Offset = "0x17610C8", VA = "0x17610C8", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002676")]
	[Address(RVA = "0x1760100", Offset = "0x1760100", VA = "0x1760100")]
	public Pvr_UIGraphicRaycaster()
	{
	}

	[Token(Token = "0x6002677")]
	[Address(RVA = "0x1760168", Offset = "0x1760168", VA = "0x1760168", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6002678")]
	[Address(RVA = "0x1760378", Offset = "0x1760378", VA = "0x1760378", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6002679")]
	[Address(RVA = "0x17606E8", Offset = "0x17606E8", VA = "0x17606E8", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600267A")]
	[Address(RVA = "0x1760A74", Offset = "0x1760A74", VA = "0x1760A74", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600267D")]
	[Address(RVA = "0x17611F0", Offset = "0x17611F0", VA = "0x17611F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96C20", Offset = "0xC96C20")]
	private static int <Raycast>m__0(RaycastResult g1, RaycastResult g2)
	{
		return default(int);
	}
}
[Token(Token = "0x200050C")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200050D")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200050E")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200050F")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001D50")]
		ClickOnButtonUp,
		[Token(Token = "0x4001D51")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4001D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4001D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x14000036")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1761208", Offset = "0x1761208", VA = "0x1761208")]
		add
		{
		}
		[Token(Token = "0x6002684")]
		[Address(RVA = "0x17612F0", Offset = "0x17612F0", VA = "0x17612F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6002685")]
		[Address(RVA = "0x17613D8", Offset = "0x17613D8", VA = "0x17613D8")]
		add
		{
		}
		[Token(Token = "0x6002686")]
		[Address(RVA = "0x17614C0", Offset = "0x17614C0", VA = "0x17614C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6002687")]
		[Address(RVA = "0x17615A8", Offset = "0x17615A8", VA = "0x17615A8")]
		add
		{
		}
		[Token(Token = "0x6002688")]
		[Address(RVA = "0x1761690", Offset = "0x1761690", VA = "0x1761690")]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1761778", Offset = "0x1761778", VA = "0x1761778")]
		add
		{
		}
		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1761860", Offset = "0x1761860", VA = "0x1761860")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600268B")]
		[Address(RVA = "0x1761948", Offset = "0x1761948", VA = "0x1761948")]
		add
		{
		}
		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1761A30", Offset = "0x1761A30", VA = "0x1761A30")]
		remove
		{
		}
	}

	[Token(Token = "0x6002682")]
	[Address(RVA = "0x1761200", Offset = "0x1761200", VA = "0x1761200")]
	public Pvr_UIPointer()
	{
	}

	[Token(Token = "0x600268D")]
	[Address(RVA = "0x1761B18", Offset = "0x1761B18", VA = "0x1761B18", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600268E")]
	[Address(RVA = "0x1761B20", Offset = "0x1761B20", VA = "0x1761B20", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600268F")]
	[Address(RVA = "0x1761C48", Offset = "0x1761C48", VA = "0x1761C48", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002690")]
	[Address(RVA = "0x1761CEC", Offset = "0x1761CEC", VA = "0x1761CEC", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002691")]
	[Address(RVA = "0x1761D90", Offset = "0x1761D90", VA = "0x1761D90", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6002692")]
	[Address(RVA = "0x1761DAC", Offset = "0x1761DAC", VA = "0x1761DAC", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6002693")]
	[Address(RVA = "0x1761DB8", Offset = "0x1761DB8", VA = "0x1761DB8", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6002694")]
	[Address(RVA = "0x1761E90", Offset = "0x1761E90", VA = "0x1761E90", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6002695")]
	[Address(RVA = "0x1761F60", Offset = "0x1761F60", VA = "0x1761F60", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6002696")]
	[Address(RVA = "0x1762030", Offset = "0x1762030", VA = "0x1762030", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6002697")]
	[Address(RVA = "0x176207C", Offset = "0x176207C", VA = "0x176207C", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6002698")]
	[Address(RVA = "0x17620C8", Offset = "0x17620C8", VA = "0x17620C8", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6002699")]
	[Address(RVA = "0x1762130", Offset = "0x1762130", VA = "0x1762130", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600269A")]
	[Address(RVA = "0x176213C", Offset = "0x176213C", VA = "0x176213C", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600269B")]
	[Address(RVA = "0x1762174", Offset = "0x1762174", VA = "0x1762174", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600269C")]
	[Address(RVA = "0x17621E0", Offset = "0x17621E0", VA = "0x17621E0", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}
}
[Token(Token = "0x2000510")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4001D5E")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x600269E")]
	[Address(RVA = "0x17774B0", Offset = "0x17774B0", VA = "0x17774B0")]
	public Pvr_UnitySDKEditor()
	{
	}

	[Token(Token = "0x600269F")]
	[Address(RVA = "0x17774C0", Offset = "0x17774C0", VA = "0x17774C0")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60026A0")]
	[Address(RVA = "0x1777518", Offset = "0x1777518", VA = "0x1777518")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60026A1")]
	[Address(RVA = "0x1777570", Offset = "0x1777570", VA = "0x1777570")]
	private void Awake()
	{
	}

	[Token(Token = "0x60026A2")]
	[Address(RVA = "0x1777784", Offset = "0x1777784", VA = "0x1777784")]
	private void Update()
	{
	}

	[Token(Token = "0x60026A3")]
	[Address(RVA = "0x1777584", Offset = "0x1777584", VA = "0x1777584")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x60026A4")]
	[Address(RVA = "0x17776EC", Offset = "0x17776EC", VA = "0x17776EC")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x60026A5")]
	[Address(RVA = "0x177826C", Offset = "0x177826C", VA = "0x177826C")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60026A6")]
	[Address(RVA = "0x177841C", Offset = "0x177841C", VA = "0x177841C")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60026A7")]
	[Address(RVA = "0x17779DC", Offset = "0x17779DC", VA = "0x17779DC")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x60026A8")]
	[Address(RVA = "0x17789B4", Offset = "0x17789B4", VA = "0x17789B4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60026A9")]
	[Address(RVA = "0x1777828", Offset = "0x1777828", VA = "0x1777828")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x60026AA")]
	[Address(RVA = "0x17781A0", Offset = "0x17781A0", VA = "0x17781A0")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x60026AB")]
	[Address(RVA = "0x1778A68", Offset = "0x1778A68", VA = "0x1778A68")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x60026AC")]
	[Address(RVA = "0x1778434", Offset = "0x1778434", VA = "0x1778434")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x60026AD")]
	[Address(RVA = "0x177801C", Offset = "0x177801C", VA = "0x177801C")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x60026AE")]
	[Address(RVA = "0x17789C8", Offset = "0x17789C8", VA = "0x17789C8")]
	private void EnableVEmodel()
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000511")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001D61")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001D62")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000512")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001D64")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001D65")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001D66")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001D67")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001D68")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000513")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001D69")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1774850", Offset = "0x1774850", VA = "0x1774850")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x17748F8", Offset = "0x17748F8", VA = "0x17748F8")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x1774988", Offset = "0x1774988", VA = "0x1774988")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x1774A10", Offset = "0x1774A10", VA = "0x1774A10")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x1774AB0", Offset = "0x1774AB0", VA = "0x1774AB0")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x1774AB4", Offset = "0x1774AB4", VA = "0x1774AB4")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x1774AB8", Offset = "0x1774AB8", VA = "0x1774AB8")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x1774ABC", Offset = "0x1774ABC", VA = "0x1774ABC")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x1774D58", Offset = "0x1774D58", VA = "0x1774D58")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x1774F8C", Offset = "0x1774F8C", VA = "0x1774F8C")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x177512C", Offset = "0x177512C", VA = "0x177512C")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x177536C", Offset = "0x177536C", VA = "0x177536C")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x17754EC", Offset = "0x17754EC", VA = "0x17754EC")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1775634", Offset = "0x1775634", VA = "0x1775634")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x177583C", Offset = "0x177583C", VA = "0x177583C")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1775B14", Offset = "0x1775B14", VA = "0x1775B14")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x1775D50", Offset = "0x1775D50", VA = "0x1775D50")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x1774AF0", Offset = "0x1774AF0", VA = "0x1774AF0")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x1774D78", Offset = "0x1774D78", VA = "0x1774D78")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x1774F90", Offset = "0x1774F90", VA = "0x1774F90")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x1775130", Offset = "0x1775130", VA = "0x1775130")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x1775F48", Offset = "0x1775F48", VA = "0x1775F48")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x1776184", Offset = "0x1776184", VA = "0x1776184")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x177637C", Offset = "0x177637C", VA = "0x177637C")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x17764F8", Offset = "0x17764F8", VA = "0x17764F8")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1776674", Offset = "0x1776674", VA = "0x1776674")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x17767D4", Offset = "0x17767D4", VA = "0x17767D4")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1776934", Offset = "0x1776934", VA = "0x1776934")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x1776B18", Offset = "0x1776B18", VA = "0x1776B18")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x1776B20", Offset = "0x1776B20", VA = "0x1776B20")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x17754F0", Offset = "0x17754F0", VA = "0x17754F0")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x1775370", Offset = "0x1775370", VA = "0x1775370")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000514")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4001D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4001D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4001D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4001D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4001D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4001D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x60026D0")]
	[Address(RVA = "0xFA1BFC", Offset = "0xFA1BFC", VA = "0xFA1BFC")]
	public Pvr_VolumePowerBrightness()
	{
	}

	[Token(Token = "0x60026D1")]
	[Address(RVA = "0xFA1C04", Offset = "0xFA1C04", VA = "0xFA1C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60026D2")]
	[Address(RVA = "0xFA1CF0", Offset = "0xFA1CF0", VA = "0xFA1CF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60026D3")]
	[Address(RVA = "0xFA1D60", Offset = "0xFA1D60", VA = "0xFA1D60")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x60026D4")]
	[Address(RVA = "0xFA1E08", Offset = "0xFA1E08", VA = "0xFA1E08")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x60026D5")]
	[Address(RVA = "0xFA1EB0", Offset = "0xFA1EB0", VA = "0xFA1EB0")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x60026D6")]
	[Address(RVA = "0xFA1F40", Offset = "0xFA1F40", VA = "0xFA1F40")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60026D7")]
	[Address(RVA = "0xFA1FD0", Offset = "0xFA1FD0", VA = "0xFA1FD0")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60026D8")]
	[Address(RVA = "0xFA20FC", Offset = "0xFA20FC", VA = "0xFA20FC")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60026D9")]
	[Address(RVA = "0xFA2228", Offset = "0xFA2228", VA = "0xFA2228")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60026DA")]
	[Address(RVA = "0xFA22D0", Offset = "0xFA22D0", VA = "0xFA22D0")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60026DB")]
	[Address(RVA = "0xFA2364", Offset = "0xFA2364", VA = "0xFA2364")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60026DC")]
	[Address(RVA = "0xFA1C84", Offset = "0xFA1C84", VA = "0xFA1C84")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60026DD")]
	[Address(RVA = "0xFA1C90", Offset = "0xFA1C90", VA = "0xFA1C90")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60026DE")]
	[Address(RVA = "0xFA1D54", Offset = "0xFA1D54", VA = "0xFA1D54")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60026DF")]
	[Address(RVA = "0xFA1CC0", Offset = "0xFA1CC0", VA = "0xFA1CC0")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60026E0")]
	[Address(RVA = "0xFA1D48", Offset = "0xFA1D48", VA = "0xFA1D48")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}
}
namespace Viveport
{
	[Token(Token = "0x2000515")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96E7C", Offset = "0xC96E7C")]
		private sealed class <Enqueue>c__AnonStorey5
		{
			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IEnumerator action;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal MainThreadDispatcher $this;

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0x26C15A4", Offset = "0x26C15A4", VA = "0x26C15A4")]
			public <Enqueue>c__AnonStorey5()
			{
			}

			[Token(Token = "0x6002D47")]
			[Address(RVA = "0x26C17DC", Offset = "0x26C17DC", VA = "0x26C17DC")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96E8C", Offset = "0xC96E8C")]
		private sealed class <ActionWrapper>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action action;

			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000685")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002D4A")]
				[Address(RVA = "0x26C1754", Offset = "0x26C1754", VA = "0x26C1754", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000686")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D4B")]
				[Address(RVA = "0x26C175C", Offset = "0x26C175C", VA = "0x26C175C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D48")]
			[Address(RVA = "0x26C1640", Offset = "0x26C1640", VA = "0x26C1640")]
			[DebuggerHidden]
			public <ActionWrapper>c__Iterator0()
			{
			}

			[Token(Token = "0x6002D49")]
			[Address(RVA = "0x26C16C8", Offset = "0x26C16C8", VA = "0x26C16C8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0x26C1764", Offset = "0x26C1764", VA = "0x26C1764", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0x26C1778", Offset = "0x26C1778", VA = "0x26C1778", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96EEC", Offset = "0xC96EEC")]
		private sealed class <ActionWrapper>c__Iterator1<T1> : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Action<T1> action;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T1 param1;

			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object $current;

			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool $disposing;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int $PC;

			[Token(Token = "0x17000687")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002D50")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000688")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D51")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D4E")]
			[DebuggerHidden]
			public <ActionWrapper>c__Iterator1()
			{
			}

			[Token(Token = "0x6002D4F")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D52")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D53")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96F4C", Offset = "0xC96F4C")]
		private sealed class <ActionWrapper>c__Iterator2<T1, T2> : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Action<T1, T2> action;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T1 param1;

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T2 param2;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object $current;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool $disposing;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int $PC;

			[Token(Token = "0x17000689")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002D56")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D57")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D54")]
			[DebuggerHidden]
			public <ActionWrapper>c__Iterator2()
			{
			}

			[Token(Token = "0x6002D55")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D58")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D59")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC96FAC", Offset = "0xC96FAC")]
		private sealed class <ActionWrapper>c__Iterator3<T1, T2, T3> : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Action<T1, T2, T3> action;

			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T1 param1;

			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T2 param2;

			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T3 param3;

			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object $current;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool $disposing;

			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int $PC;

			[Token(Token = "0x1700068B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002D5C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D5D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D5A")]
			[DebuggerHidden]
			public <ActionWrapper>c__Iterator3()
			{
			}

			[Token(Token = "0x6002D5B")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D5E")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D5F")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9700C", Offset = "0xC9700C")]
		private sealed class <ActionWrapper>c__Iterator4<T1, T2, T3, T4> : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T1 param1;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T2 param2;

			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T3 param3;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T4 param4;

			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object $current;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool $disposing;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int $PC;

			[Token(Token = "0x1700068D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002D62")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D63")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D60")]
			[DebuggerHidden]
			public <ActionWrapper>c__Iterator4()
			{
			}

			[Token(Token = "0x6002D61")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D64")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D65")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x26C0FE4", Offset = "0x26C0FE4", VA = "0x26C0FE4")]
		public MainThreadDispatcher()
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x26C0FEC", Offset = "0x26C0FEC", VA = "0x26C0FEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x26C1104", Offset = "0x26C1104", VA = "0x26C1104")]
		public void Update()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x26C1294", Offset = "0x26C1294", VA = "0x26C1294")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x26C1398", Offset = "0x26C1398", VA = "0x26C1398")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x26C1400", Offset = "0x26C1400", VA = "0x26C1400")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x26C15AC", Offset = "0x26C15AC", VA = "0x26C15AC")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60026E8")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60026E9")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60026EA")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60026EB")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x26C15D4", Offset = "0x26C15D4", VA = "0x26C15D4")]
		[DebuggerHidden]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[DebuggerHidden]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60026EE")]
		[DebuggerHidden]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60026EF")]
		[DebuggerHidden]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60026F0")]
		[DebuggerHidden]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000516")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x186983C", Offset = "0x186983C", VA = "0x186983C")]
		public PEMKeyLoader()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x1869844", Offset = "0x1869844", VA = "0x1869844")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x1869910", Offset = "0x1869910", VA = "0x1869910")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x1869D9C", Offset = "0x1869D9C", VA = "0x1869D9C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000517")]
	public enum Locale
	{
		[Token(Token = "0x4001D78")]
		US,
		[Token(Token = "0x4001D79")]
		DE,
		[Token(Token = "0x4001D7A")]
		JP,
		[Token(Token = "0x4001D7B")]
		KR,
		[Token(Token = "0x4001D7C")]
		RU,
		[Token(Token = "0x4001D7D")]
		CN,
		[Token(Token = "0x4001D7E")]
		TW,
		[Token(Token = "0x4001D7F")]
		FR
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000518")]
	public class Logger
	{
		[Token(Token = "0x4001D80")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xFB92A4", Offset = "0xFB92A4", VA = "0xFB92A4")]
		public Logger()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xFB92AC", Offset = "0xFB92AC", VA = "0xFB92AC")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xFB96A8", Offset = "0xFB96A8", VA = "0xFB96A8")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xFB937C", Offset = "0xFB937C", VA = "0xFB937C")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xFB9748", Offset = "0xFB9748", VA = "0xFB9748")]
		private static Type GetType(string typeName)
		{
			return null;
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000519")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200051A")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200051B")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200051C")]
	public class Leaderboard
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9706C", Offset = "0xC9706C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9706C", Offset = "0xC9706C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC970A8", Offset = "0xC970A8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC970A8", Offset = "0xC970A8")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC970E4", Offset = "0xC970E4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC970E4", Offset = "0xC970E4")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x170004EC")]
		public int Rank
		{
			[Token(Token = "0x600270A")]
			[Address(RVA = "0x26C0FCC", Offset = "0x26C0FCC", VA = "0x26C0FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97120", Offset = "0xC97120")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600270B")]
			[Address(RVA = "0x26C0E30", Offset = "0x26C0E30", VA = "0x26C0E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97130", Offset = "0xC97130")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public int Score
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0x26C0FD4", Offset = "0x26C0FD4", VA = "0x26C0FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97140", Offset = "0xC97140")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600270D")]
			[Address(RVA = "0x26C0E38", Offset = "0x26C0E38", VA = "0x26C0E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97150", Offset = "0xC97150")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public string UserName
		{
			[Token(Token = "0x600270E")]
			[Address(RVA = "0x26C0FDC", Offset = "0x26C0FDC", VA = "0x26C0FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97160", Offset = "0xC97160")]
			get
			{
				return null;
			}
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x26C0E28", Offset = "0x26C0E28", VA = "0x26C0E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97170", Offset = "0xC97170")]
			set
			{
			}
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x26C0E20", Offset = "0x26C0E20", VA = "0x26C0E20")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x200051E")]
		public enum Platform
		{
			[Token(Token = "0x4001D8A")]
			Windows,
			[Token(Token = "0x4001D8B")]
			Android
		}

		[Token(Token = "0x200051F")]
		public enum TransactionType
		{
			[Token(Token = "0x4001D8D")]
			Unknown,
			[Token(Token = "0x4001D8E")]
			Paid,
			[Token(Token = "0x4001D8F")]
			Redeem,
			[Token(Token = "0x4001D90")]
			FreeTrial
		}

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97180", Offset = "0xC97180")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97180", Offset = "0xC97180")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC971BC", Offset = "0xC971BC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC971BC", Offset = "0xC971BC")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x170004EF")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x26C2C0C", Offset = "0x26C2C0C", VA = "0x26C2C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC971F8", Offset = "0xC971F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x26C2C1C", Offset = "0x26C2C1C", VA = "0x26C2C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97208", Offset = "0xC97208")]
			set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public TransactionType Type
		{
			[Token(Token = "0x6002713")]
			[Address(RVA = "0x26C2C24", Offset = "0x26C2C24", VA = "0x26C2C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97218", Offset = "0xC97218")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6002714")]
			[Address(RVA = "0x26C2C14", Offset = "0x26C2C14", VA = "0x26C2C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97228", Offset = "0xC97228")]
			set
			{
			}
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x26C2B94", Offset = "0x26C2B94", VA = "0x26C2B94")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class Api
	{
		[Token(Token = "0x2000521")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0xFB928C", Offset = "0xFB928C", VA = "0xFB928C")]
			protected LicenseChecker()
			{
			}

			[Token(Token = "0x600271E")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x600271F")]
			public abstract void OnFailure(int errorCode, string errorMessage);
		}

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97238", Offset = "0xC97238")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache0;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97248", Offset = "0xC97248")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache1;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97258", Offset = "0xC97258")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache2;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97268", Offset = "0xC97268")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache3;

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xFB8AF0", Offset = "0xFB8AF0", VA = "0xFB8AF0")]
		public Api()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xFB8AF8", Offset = "0xFB8AF8", VA = "0xFB8AF8")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xFB8990", Offset = "0xFB8990", VA = "0xFB8990")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97278", Offset = "0xC97278")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xFB8C0C", Offset = "0xFB8C0C", VA = "0xFB8C0C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xFB8A70", Offset = "0xFB8A70", VA = "0xFB8A70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC972DC", Offset = "0xC972DC")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xFB8E48", Offset = "0xFB8E48", VA = "0xFB8E48")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xFB9068", Offset = "0xFB9068", VA = "0xFB9068")]
		public static string Version()
		{
			return null;
		}
	}
	[Token(Token = "0x2000522")]
	public class User
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97340", Offset = "0xC97340")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache0;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97350", Offset = "0xC97350")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache1;

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x26C2CF8", Offset = "0x26C2CF8", VA = "0x26C2CF8")]
		public User()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x26C2C94", Offset = "0x26C2C94", VA = "0x26C2C94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97360", Offset = "0xC97360")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x26C2D00", Offset = "0x26C2D00", VA = "0x26C2D00")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x26C2EA4", Offset = "0x26C2EA4", VA = "0x26C2EA4")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x26C2ED8", Offset = "0x26C2ED8", VA = "0x26C2ED8")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x26C2F0C", Offset = "0x26C2F0C", VA = "0x26C2F0C")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}
	}
	[Token(Token = "0x2000523")]
	public class UserStats
	{
		[Token(Token = "0x2000524")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001DB3")]
			GlobalData,
			[Token(Token = "0x4001DB4")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001DB5")]
			LocalData,
			[Token(Token = "0x4001DB6")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000525")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001DB8")]
			AllTime,
			[Token(Token = "0x4001DB9")]
			Daily,
			[Token(Token = "0x4001DBA")]
			Weekly,
			[Token(Token = "0x4001DBB")]
			Monthly
		}

		[Token(Token = "0x2000526")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001DBD")]
			None,
			[Token(Token = "0x4001DBE")]
			Ascending,
			[Token(Token = "0x4001DBF")]
			Descending
		}

		[Token(Token = "0x2000527")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001DC1")]
			None,
			[Token(Token = "0x4001DC2")]
			Numeric,
			[Token(Token = "0x4001DC3")]
			TimeSeconds,
			[Token(Token = "0x4001DC4")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000528")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001DC6")]
			None,
			[Token(Token = "0x4001DC7")]
			KeepBest,
			[Token(Token = "0x4001DC8")]
			ForceUpdate
		}

		[Token(Token = "0x2000529")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001DCA")]
			Name,
			[Token(Token = "0x4001DCB")]
			Desc,
			[Token(Token = "0x4001DCC")]
			Hidden
		}

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC973C4", Offset = "0xC973C4")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache0;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC973D4", Offset = "0xC973D4")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache1;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC973E4", Offset = "0xC973E4")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache2;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC973F4", Offset = "0xC973F4")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache3;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97404", Offset = "0xC97404")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache4;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97414", Offset = "0xC97414")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache5;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97424", Offset = "0xC97424")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache6;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97434", Offset = "0xC97434")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache7;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97444", Offset = "0xC97444")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache8;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97454", Offset = "0xC97454")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache9;

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x26C3314", Offset = "0x26C3314", VA = "0x26C3314")]
		public UserStats()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x26C2FA0", Offset = "0x26C2FA0", VA = "0x26C2FA0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97464", Offset = "0xC97464")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x26C331C", Offset = "0x26C331C", VA = "0x26C331C")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x26C3064", Offset = "0x26C3064", VA = "0x26C3064")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC974C8", Offset = "0xC974C8")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x26C34C0", Offset = "0x26C34C0", VA = "0x26C34C0")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x26C3664", Offset = "0x26C3664", VA = "0x26C3664")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x26C3668", Offset = "0x26C3668", VA = "0x26C3668")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x26C366C", Offset = "0x26C366C", VA = "0x26C366C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x26C3670", Offset = "0x26C3670", VA = "0x26C3670")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x26C3128", Offset = "0x26C3128", VA = "0x26C3128")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC9752C", Offset = "0xC9752C")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x26C3674", Offset = "0x26C3674", VA = "0x26C3674")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x26C3818", Offset = "0x26C3818", VA = "0x26C3818")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x26C381C", Offset = "0x26C381C", VA = "0x26C381C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x26C3820", Offset = "0x26C3820", VA = "0x26C3820")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x26C3824", Offset = "0x26C3824", VA = "0x26C3824")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x26C3828", Offset = "0x26C3828", VA = "0x26C3828")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x26C382C", Offset = "0x26C382C", VA = "0x26C382C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x26C3830", Offset = "0x26C3830", VA = "0x26C3830")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x26C31EC", Offset = "0x26C31EC", VA = "0x26C31EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97590", Offset = "0xC97590")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x26C3834", Offset = "0x26C3834", VA = "0x26C3834")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x26C32B0", Offset = "0x26C32B0", VA = "0x26C32B0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC975F4", Offset = "0xC975F4")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x26C3A18", Offset = "0x26C3A18", VA = "0x26C3A18")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x26C3BD4", Offset = "0x26C3BD4", VA = "0x26C3BD4")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x26C3BD8", Offset = "0x26C3BD8", VA = "0x26C3BD8")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x26C3BDC", Offset = "0x26C3BDC", VA = "0x26C3BDC")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x26C3BE0", Offset = "0x26C3BE0", VA = "0x26C3BE0")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}
	}
	[Token(Token = "0x200052A")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x6002740")]
		[Address(RVA = "0xFB929C", Offset = "0xFB929C", VA = "0xFB929C")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class IAPurchase
	{
		[Token(Token = "0x200052C")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x600275C")]
			[Address(RVA = "0xFBABC4", Offset = "0xFBABC4", VA = "0xFBABC4")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x600275D")]
			[Address(RVA = "0xFBAC30", Offset = "0xFBAC30", VA = "0xFBAC30")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0xFBBDB4", Offset = "0xFBBDB4", VA = "0xFBBDB4", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0xFBADA0", Offset = "0xFBADA0", VA = "0xFBADA0")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0xFBC30C", Offset = "0xFBC30C", VA = "0xFBC30C", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002761")]
			[Address(RVA = "0xFBB010", Offset = "0xFBB010", VA = "0xFBB010")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0xFBC864", Offset = "0xFBC864", VA = "0xFBC864", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0xFBB180", Offset = "0xFBB180", VA = "0xFBB180")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0xFBCF3C", Offset = "0xFBCF3C", VA = "0xFBCF3C", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0xFBB2E8", Offset = "0xFBB2E8", VA = "0xFBB2E8")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0xFBDB24", Offset = "0xFBDB24", VA = "0xFBDB24", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002767")]
			[Address(RVA = "0xFBB450", Offset = "0xFBB450", VA = "0xFBB450")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0xFBEC7C", Offset = "0xFBEC7C", VA = "0xFBEC7C", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0xFBB604", Offset = "0xFBB604", VA = "0xFBB604")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600276A")]
			[Address(RVA = "0xFBF364", Offset = "0xFBF364", VA = "0xFBF364", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0xFBB774", Offset = "0xFBB774", VA = "0xFBB774")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0xFBF8A4", Offset = "0xFBF8A4", VA = "0xFBF8A4", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x600276D")]
			[Address(RVA = "0xFBB8E4", Offset = "0xFBB8E4", VA = "0xFBB8E4")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0xFBFDE4", Offset = "0xFBFDE4", VA = "0xFBFDE4", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0xFBBA54", Offset = "0xFBBA54", VA = "0xFBBA54")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0xFC0578", Offset = "0xFC0578", VA = "0xFC0578", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0xFBBBBC", Offset = "0xFBBBBC", VA = "0xFBBBBC")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0xFC0B08", Offset = "0xFC0B08", VA = "0xFC0B08", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xFBBD2C", Offset = "0xFBBD2C", VA = "0xFBBD2C")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xFC109C", Offset = "0xFC109C", VA = "0xFC109C", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200052D")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6002775")]
			[Address(RVA = "0xFBBDAC", Offset = "0xFBBDAC", VA = "0xFBBDAC")]
			protected BaseHandler()
			{
			}

			[Token(Token = "0x6002776")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6002777")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6002778")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6002779")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x600277A")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x600277B")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x600277C")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x600277D")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x600277E")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x600277F")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6002780")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6002781")]
			protected abstract void CancelSubscriptionHandler(int code, string message);
		}

		[Token(Token = "0x200052E")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6002782")]
			[Address(RVA = "0x26B9AC0", Offset = "0x26B9AC0", VA = "0x26B9AC0")]
			public IAPurchaseListener()
			{
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0x26B9AC8", Offset = "0x26B9AC8", VA = "0x26B9AC8", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0x26B9ACC", Offset = "0x26B9ACC", VA = "0x26B9ACC", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0x26B9AD0", Offset = "0x26B9AD0", VA = "0x26B9AD0", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0x26B9AD4", Offset = "0x26B9AD4", VA = "0x26B9AD4", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6002787")]
			[Address(RVA = "0x26B9AD8", Offset = "0x26B9AD8", VA = "0x26B9AD8", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0x26B9ADC", Offset = "0x26B9ADC", VA = "0x26B9ADC", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6002789")]
			[Address(RVA = "0x26B9AE0", Offset = "0x26B9AE0", VA = "0x26B9AE0", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x26B9AE4", Offset = "0x26B9AE4", VA = "0x26B9AE4", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0x26B9AE8", Offset = "0x26B9AE8", VA = "0x26B9AE8", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x26B9AEC", Offset = "0x26B9AEC", VA = "0x26B9AEC", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x26B9AF0", Offset = "0x26B9AF0", VA = "0x26B9AF0", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x26B9AF4", Offset = "0x26B9AF4", VA = "0x26B9AF4", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x26B9AF8", Offset = "0x26B9AF8", VA = "0x26B9AF8", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}
		}

		[Token(Token = "0x200052F")]
		public class QueryResponse
		{
			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97C3C", Offset = "0xC97C3C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97C3C", Offset = "0xC97C3C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97C78", Offset = "0xC97C78")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97C78", Offset = "0xC97C78")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97CB4", Offset = "0xC97CB4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97CB4", Offset = "0xC97CB4")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97CF0", Offset = "0xC97CF0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97CF0", Offset = "0xC97CF0")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97D2C", Offset = "0xC97D2C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97D2C", Offset = "0xC97D2C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97D68", Offset = "0xC97D68")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97D68", Offset = "0xC97D68")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170004F1")]
			public string order_id
			{
				[Token(Token = "0x6002791")]
				[Address(RVA = "0x26B9B3C", Offset = "0x26B9B3C", VA = "0x26B9B3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DA4", Offset = "0xC97DA4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002792")]
				[Address(RVA = "0x26B9B44", Offset = "0x26B9B44", VA = "0x26B9B44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DB4", Offset = "0xC97DB4")]
				set
				{
				}
			}

			[Token(Token = "0x170004F2")]
			public string purchase_id
			{
				[Token(Token = "0x6002793")]
				[Address(RVA = "0x26B9B4C", Offset = "0x26B9B4C", VA = "0x26B9B4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DC4", Offset = "0xC97DC4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002794")]
				[Address(RVA = "0x26B9B54", Offset = "0x26B9B54", VA = "0x26B9B54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DD4", Offset = "0xC97DD4")]
				set
				{
				}
			}

			[Token(Token = "0x170004F3")]
			public string status
			{
				[Token(Token = "0x6002795")]
				[Address(RVA = "0x26B9B5C", Offset = "0x26B9B5C", VA = "0x26B9B5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DE4", Offset = "0xC97DE4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002796")]
				[Address(RVA = "0x26B9B64", Offset = "0x26B9B64", VA = "0x26B9B64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97DF4", Offset = "0xC97DF4")]
				set
				{
				}
			}

			[Token(Token = "0x170004F4")]
			public string price
			{
				[Token(Token = "0x6002797")]
				[Address(RVA = "0x26B9B6C", Offset = "0x26B9B6C", VA = "0x26B9B6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E04", Offset = "0xC97E04")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002798")]
				[Address(RVA = "0x26B9B74", Offset = "0x26B9B74", VA = "0x26B9B74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E14", Offset = "0xC97E14")]
				set
				{
				}
			}

			[Token(Token = "0x170004F5")]
			public string currency
			{
				[Token(Token = "0x6002799")]
				[Address(RVA = "0x26B9B7C", Offset = "0x26B9B7C", VA = "0x26B9B7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E24", Offset = "0xC97E24")]
				get
				{
					return null;
				}
				[Token(Token = "0x600279A")]
				[Address(RVA = "0x26B9B84", Offset = "0x26B9B84", VA = "0x26B9B84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E34", Offset = "0xC97E34")]
				set
				{
				}
			}

			[Token(Token = "0x170004F6")]
			public long paid_timestamp
			{
				[Token(Token = "0x600279B")]
				[Address(RVA = "0x26B9B8C", Offset = "0x26B9B8C", VA = "0x26B9B8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E44", Offset = "0xC97E44")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600279C")]
				[Address(RVA = "0x26B9B94", Offset = "0x26B9B94", VA = "0x26B9B94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E54", Offset = "0xC97E54")]
				set
				{
				}
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x26B9B34", Offset = "0x26B9B34", VA = "0x26B9B34")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000530")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97E64", Offset = "0xC97E64")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97E64", Offset = "0xC97E64")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97EA0", Offset = "0xC97EA0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97EA0", Offset = "0xC97EA0")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97EDC", Offset = "0xC97EDC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97EDC", Offset = "0xC97EDC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97F18", Offset = "0xC97F18")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97F18", Offset = "0xC97F18")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97F54", Offset = "0xC97F54")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97F54", Offset = "0xC97F54")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97F90", Offset = "0xC97F90")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97F90", Offset = "0xC97F90")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97FCC", Offset = "0xC97FCC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC97FCC", Offset = "0xC97FCC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170004F7")]
			public string order_id
			{
				[Token(Token = "0x600279E")]
				[Address(RVA = "0x26B9BA4", Offset = "0x26B9BA4", VA = "0x26B9BA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98008", Offset = "0xC98008")]
				get
				{
					return null;
				}
				[Token(Token = "0x600279F")]
				[Address(RVA = "0x26B9BAC", Offset = "0x26B9BAC", VA = "0x26B9BAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98018", Offset = "0xC98018")]
				set
				{
				}
			}

			[Token(Token = "0x170004F8")]
			public string app_id
			{
				[Token(Token = "0x60027A0")]
				[Address(RVA = "0x26B9BB4", Offset = "0x26B9BB4", VA = "0x26B9BB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98028", Offset = "0xC98028")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027A1")]
				[Address(RVA = "0x26B9BBC", Offset = "0x26B9BBC", VA = "0x26B9BBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98038", Offset = "0xC98038")]
				set
				{
				}
			}

			[Token(Token = "0x170004F9")]
			public string purchase_id
			{
				[Token(Token = "0x60027A2")]
				[Address(RVA = "0x26B9BC4", Offset = "0x26B9BC4", VA = "0x26B9BC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98048", Offset = "0xC98048")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027A3")]
				[Address(RVA = "0x26B9BCC", Offset = "0x26B9BCC", VA = "0x26B9BCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98058", Offset = "0xC98058")]
				set
				{
				}
			}

			[Token(Token = "0x170004FA")]
			public string user_data
			{
				[Token(Token = "0x60027A4")]
				[Address(RVA = "0x26B9BD4", Offset = "0x26B9BD4", VA = "0x26B9BD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98068", Offset = "0xC98068")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027A5")]
				[Address(RVA = "0x26B9BDC", Offset = "0x26B9BDC", VA = "0x26B9BDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98078", Offset = "0xC98078")]
				set
				{
				}
			}

			[Token(Token = "0x170004FB")]
			public string price
			{
				[Token(Token = "0x60027A6")]
				[Address(RVA = "0x26B9BE4", Offset = "0x26B9BE4", VA = "0x26B9BE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98088", Offset = "0xC98088")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027A7")]
				[Address(RVA = "0x26B9BEC", Offset = "0x26B9BEC", VA = "0x26B9BEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98098", Offset = "0xC98098")]
				set
				{
				}
			}

			[Token(Token = "0x170004FC")]
			public string currency
			{
				[Token(Token = "0x60027A8")]
				[Address(RVA = "0x26B9BF4", Offset = "0x26B9BF4", VA = "0x26B9BF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC980A8", Offset = "0xC980A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027A9")]
				[Address(RVA = "0x26B9BFC", Offset = "0x26B9BFC", VA = "0x26B9BFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC980B8", Offset = "0xC980B8")]
				set
				{
				}
			}

			[Token(Token = "0x170004FD")]
			public long paid_timestamp
			{
				[Token(Token = "0x60027AA")]
				[Address(RVA = "0x26B9C04", Offset = "0x26B9C04", VA = "0x26B9C04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC980C8", Offset = "0xC980C8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027AB")]
				[Address(RVA = "0x26B9C0C", Offset = "0x26B9C0C", VA = "0x26B9C0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC980D8", Offset = "0xC980D8")]
				set
				{
				}
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0x26B9B9C", Offset = "0x26B9B9C", VA = "0x26B9B9C")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000531")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC980E8", Offset = "0xC980E8")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC980E8", Offset = "0xC980E8")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98124", Offset = "0xC98124")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98124", Offset = "0xC98124")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98160", Offset = "0xC98160")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98160", Offset = "0xC98160")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x170004FE")]
			public int total
			{
				[Token(Token = "0x60027AD")]
				[Address(RVA = "0x26B9B04", Offset = "0x26B9B04", VA = "0x26B9B04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9819C", Offset = "0xC9819C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027AE")]
				[Address(RVA = "0x26B9B0C", Offset = "0x26B9B0C", VA = "0x26B9B0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981AC", Offset = "0xC981AC")]
				set
				{
				}
			}

			[Token(Token = "0x170004FF")]
			public int from
			{
				[Token(Token = "0x60027AF")]
				[Address(RVA = "0x26B9B14", Offset = "0x26B9B14", VA = "0x26B9B14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981BC", Offset = "0xC981BC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027B0")]
				[Address(RVA = "0x26B9B1C", Offset = "0x26B9B1C", VA = "0x26B9B1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981CC", Offset = "0xC981CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000500")]
			public int to
			{
				[Token(Token = "0x60027B1")]
				[Address(RVA = "0x26B9B24", Offset = "0x26B9B24", VA = "0x26B9B24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981DC", Offset = "0xC981DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027B2")]
				[Address(RVA = "0x26B9B2C", Offset = "0x26B9B2C", VA = "0x26B9B2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981EC", Offset = "0xC981EC")]
				set
				{
				}
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x26B9AFC", Offset = "0x26B9AFC", VA = "0x26B9AFC")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000532")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC981FC", Offset = "0xC981FC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC981FC", Offset = "0xC981FC")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98238", Offset = "0xC98238")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98238", Offset = "0xC98238")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98274", Offset = "0xC98274")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98274", Offset = "0xC98274")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000501")]
			public long create_time
			{
				[Token(Token = "0x60027B4")]
				[Address(RVA = "0x26B9C8C", Offset = "0x26B9C8C", VA = "0x26B9C8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC982B0", Offset = "0xC982B0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027B5")]
				[Address(RVA = "0x26B9C94", Offset = "0x26B9C94", VA = "0x26B9C94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC982C0", Offset = "0xC982C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000502")]
			public string payment_method
			{
				[Token(Token = "0x60027B6")]
				[Address(RVA = "0x26B9C9C", Offset = "0x26B9C9C", VA = "0x26B9C9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC982D0", Offset = "0xC982D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027B7")]
				[Address(RVA = "0x26B9CA4", Offset = "0x26B9CA4", VA = "0x26B9CA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC982E0", Offset = "0xC982E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000503")]
			public string status
			{
				[Token(Token = "0x60027B8")]
				[Address(RVA = "0x26B9CAC", Offset = "0x26B9CAC", VA = "0x26B9CAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC982F0", Offset = "0xC982F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027B9")]
				[Address(RVA = "0x26B9CB4", Offset = "0x26B9CB4", VA = "0x26B9CB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98300", Offset = "0xC98300")]
				set
				{
				}
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x26B9C84", Offset = "0x26B9C84", VA = "0x26B9C84")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000533")]
		public class StatusDetail
		{
			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98310", Offset = "0xC98310")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98310", Offset = "0xC98310")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9834C", Offset = "0xC9834C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC9834C", Offset = "0xC9834C")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98388", Offset = "0xC98388")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98388", Offset = "0xC98388")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000504")]
			public long date_next_charge
			{
				[Token(Token = "0x60027BB")]
				[Address(RVA = "0x26B9C54", Offset = "0x26B9C54", VA = "0x26B9C54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC983C4", Offset = "0xC983C4")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027BC")]
				[Address(RVA = "0x26B9C5C", Offset = "0x26B9C5C", VA = "0x26B9C5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC983D4", Offset = "0xC983D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000505")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60027BD")]
				[Address(RVA = "0x26B9C64", Offset = "0x26B9C64", VA = "0x26B9C64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC983E4", Offset = "0xC983E4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027BE")]
				[Address(RVA = "0x26B9C6C", Offset = "0x26B9C6C", VA = "0x26B9C6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC983F4", Offset = "0xC983F4")]
				set
				{
				}
			}

			[Token(Token = "0x17000506")]
			public string cancel_reason
			{
				[Token(Token = "0x60027BF")]
				[Address(RVA = "0x26B9C74", Offset = "0x26B9C74", VA = "0x26B9C74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98404", Offset = "0xC98404")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027C0")]
				[Address(RVA = "0x26B9C7C", Offset = "0x26B9C7C", VA = "0x26B9C7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98414", Offset = "0xC98414")]
				set
				{
				}
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x26B9C4C", Offset = "0x26B9C4C", VA = "0x26B9C4C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000534")]
		public class TimePeriod
		{
			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98424", Offset = "0xC98424")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98424", Offset = "0xC98424")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98460", Offset = "0xC98460")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98460", Offset = "0xC98460")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000507")]
			public string time_type
			{
				[Token(Token = "0x60027C2")]
				[Address(RVA = "0x26B9D9C", Offset = "0x26B9D9C", VA = "0x26B9D9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC9849C", Offset = "0xC9849C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027C3")]
				[Address(RVA = "0x26B9DA4", Offset = "0x26B9DA4", VA = "0x26B9DA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC984AC", Offset = "0xC984AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000508")]
			public int value
			{
				[Token(Token = "0x60027C4")]
				[Address(RVA = "0x26B9DAC", Offset = "0x26B9DAC", VA = "0x26B9DAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC984BC", Offset = "0xC984BC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027C5")]
				[Address(RVA = "0x26B9DB4", Offset = "0x26B9DB4", VA = "0x26B9DB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC984CC", Offset = "0xC984CC")]
				set
				{
				}
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x26B9D94", Offset = "0x26B9D94", VA = "0x26B9D94")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000535")]
		public class Subscription
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC984DC", Offset = "0xC984DC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC984DC", Offset = "0xC984DC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98518", Offset = "0xC98518")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98518", Offset = "0xC98518")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98554", Offset = "0xC98554")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98554", Offset = "0xC98554")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98590", Offset = "0xC98590")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98590", Offset = "0xC98590")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC985CC", Offset = "0xC985CC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC985CC", Offset = "0xC985CC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98608", Offset = "0xC98608")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98608", Offset = "0xC98608")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98644", Offset = "0xC98644")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98644", Offset = "0xC98644")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98680", Offset = "0xC98680")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98680", Offset = "0xC98680")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC986BC", Offset = "0xC986BC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC986BC", Offset = "0xC986BC")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC986F8", Offset = "0xC986F8")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC986F8", Offset = "0xC986F8")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98734", Offset = "0xC98734")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98734", Offset = "0xC98734")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98770", Offset = "0xC98770")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98770", Offset = "0xC98770")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC987AC", Offset = "0xC987AC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC987AC", Offset = "0xC987AC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000509")]
			public string app_id
			{
				[Token(Token = "0x60027C7")]
				[Address(RVA = "0x26B9CC4", Offset = "0x26B9CC4", VA = "0x26B9CC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC987E8", Offset = "0xC987E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027C8")]
				[Address(RVA = "0x26B9CCC", Offset = "0x26B9CCC", VA = "0x26B9CCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC987F8", Offset = "0xC987F8")]
				set
				{
				}
			}

			[Token(Token = "0x1700050A")]
			public string order_id
			{
				[Token(Token = "0x60027C9")]
				[Address(RVA = "0x26B9CD4", Offset = "0x26B9CD4", VA = "0x26B9CD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98808", Offset = "0xC98808")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CA")]
				[Address(RVA = "0x26B9CDC", Offset = "0x26B9CDC", VA = "0x26B9CDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98818", Offset = "0xC98818")]
				set
				{
				}
			}

			[Token(Token = "0x1700050B")]
			public string subscription_id
			{
				[Token(Token = "0x60027CB")]
				[Address(RVA = "0x26B9CE4", Offset = "0x26B9CE4", VA = "0x26B9CE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98828", Offset = "0xC98828")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CC")]
				[Address(RVA = "0x26B9CEC", Offset = "0x26B9CEC", VA = "0x26B9CEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98838", Offset = "0xC98838")]
				set
				{
				}
			}

			[Token(Token = "0x1700050C")]
			public string price
			{
				[Token(Token = "0x60027CD")]
				[Address(RVA = "0x26B9CF4", Offset = "0x26B9CF4", VA = "0x26B9CF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98848", Offset = "0xC98848")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CE")]
				[Address(RVA = "0x26B9CFC", Offset = "0x26B9CFC", VA = "0x26B9CFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98858", Offset = "0xC98858")]
				set
				{
				}
			}

			[Token(Token = "0x1700050D")]
			public string currency
			{
				[Token(Token = "0x60027CF")]
				[Address(RVA = "0x26B9D04", Offset = "0x26B9D04", VA = "0x26B9D04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98868", Offset = "0xC98868")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D0")]
				[Address(RVA = "0x26B9D0C", Offset = "0x26B9D0C", VA = "0x26B9D0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98878", Offset = "0xC98878")]
				set
				{
				}
			}

			[Token(Token = "0x1700050E")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x60027D1")]
				[Address(RVA = "0x26B9D14", Offset = "0x26B9D14", VA = "0x26B9D14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98888", Offset = "0xC98888")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027D2")]
				[Address(RVA = "0x26B9D1C", Offset = "0x26B9D1C", VA = "0x26B9D1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98898", Offset = "0xC98898")]
				set
				{
				}
			}

			[Token(Token = "0x1700050F")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0x26B9D24", Offset = "0x26B9D24", VA = "0x26B9D24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988A8", Offset = "0xC988A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D4")]
				[Address(RVA = "0x26B9D2C", Offset = "0x26B9D2C", VA = "0x26B9D2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988B8", Offset = "0xC988B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000510")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x60027D5")]
				[Address(RVA = "0x26B9D34", Offset = "0x26B9D34", VA = "0x26B9D34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988C8", Offset = "0xC988C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D6")]
				[Address(RVA = "0x26B9D3C", Offset = "0x26B9D3C", VA = "0x26B9D3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988D8", Offset = "0xC988D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000511")]
			public int number_of_charge_period
			{
				[Token(Token = "0x60027D7")]
				[Address(RVA = "0x26B9D44", Offset = "0x26B9D44", VA = "0x26B9D44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988E8", Offset = "0xC988E8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027D8")]
				[Address(RVA = "0x26B9D4C", Offset = "0x26B9D4C", VA = "0x26B9D4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC988F8", Offset = "0xC988F8")]
				set
				{
				}
			}

			[Token(Token = "0x17000512")]
			public string plan_id
			{
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0x26B9D54", Offset = "0x26B9D54", VA = "0x26B9D54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98908", Offset = "0xC98908")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027DA")]
				[Address(RVA = "0x26B9D5C", Offset = "0x26B9D5C", VA = "0x26B9D5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98918", Offset = "0xC98918")]
				set
				{
				}
			}

			[Token(Token = "0x17000513")]
			public string plan_name
			{
				[Token(Token = "0x60027DB")]
				[Address(RVA = "0x26B9D64", Offset = "0x26B9D64", VA = "0x26B9D64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98928", Offset = "0xC98928")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027DC")]
				[Address(RVA = "0x26B9D6C", Offset = "0x26B9D6C", VA = "0x26B9D6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98938", Offset = "0xC98938")]
				set
				{
				}
			}

			[Token(Token = "0x17000514")]
			public string status
			{
				[Token(Token = "0x60027DD")]
				[Address(RVA = "0x26B9D74", Offset = "0x26B9D74", VA = "0x26B9D74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98948", Offset = "0xC98948")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027DE")]
				[Address(RVA = "0x26B9D7C", Offset = "0x26B9D7C", VA = "0x26B9D7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98958", Offset = "0xC98958")]
				set
				{
				}
			}

			[Token(Token = "0x17000515")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x60027DF")]
				[Address(RVA = "0x26B9D84", Offset = "0x26B9D84", VA = "0x26B9D84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98968", Offset = "0xC98968")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027E0")]
				[Address(RVA = "0x26B9D8C", Offset = "0x26B9D8C", VA = "0x26B9D8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98978", Offset = "0xC98978")]
				set
				{
				}
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x26B9CBC", Offset = "0x26B9CBC", VA = "0x26B9CBC")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000536")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98988", Offset = "0xC98988")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98988", Offset = "0xC98988")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC989C4", Offset = "0xC989C4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC989C4", Offset = "0xC989C4")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A00", Offset = "0xC98A00")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98A00", Offset = "0xC98A00")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000516")]
			public int statusCode
			{
				[Token(Token = "0x60027E2")]
				[Address(RVA = "0x26B9C1C", Offset = "0x26B9C1C", VA = "0x26B9C1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A3C", Offset = "0xC98A3C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027E3")]
				[Address(RVA = "0x26B9C24", Offset = "0x26B9C24", VA = "0x26B9C24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A4C", Offset = "0xC98A4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000517")]
			public string message
			{
				[Token(Token = "0x60027E4")]
				[Address(RVA = "0x26B9C2C", Offset = "0x26B9C2C", VA = "0x26B9C2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A5C", Offset = "0xC98A5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0x26B9C34", Offset = "0x26B9C34", VA = "0x26B9C34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A6C", Offset = "0xC98A6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000518")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x60027E6")]
				[Address(RVA = "0x26B9C3C", Offset = "0x26B9C3C", VA = "0x26B9C3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A7C", Offset = "0xC98A7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027E7")]
				[Address(RVA = "0x26B9C44", Offset = "0x26B9C44", VA = "0x26B9C44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A8C", Offset = "0xC98A8C")]
				set
				{
				}
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x26B9C14", Offset = "0x26B9C14", VA = "0x26B9C14")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97658", Offset = "0xC97658")]
		private static IAPurchaseCallback <>f__mg$cache0;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97668", Offset = "0xC97668")]
		private static IAPurchaseCallback <>f__mg$cache1;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97678", Offset = "0xC97678")]
		private static IAPurchaseCallback <>f__mg$cache2;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97688", Offset = "0xC97688")]
		private static IAPurchaseCallback <>f__mg$cache3;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97698", Offset = "0xC97698")]
		private static IAPurchaseCallback <>f__mg$cache4;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976A8", Offset = "0xC976A8")]
		private static IAPurchaseCallback <>f__mg$cache5;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976B8", Offset = "0xC976B8")]
		private static IAPurchaseCallback <>f__mg$cache6;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976C8", Offset = "0xC976C8")]
		private static IAPurchaseCallback <>f__mg$cache7;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976D8", Offset = "0xC976D8")]
		private static IAPurchaseCallback <>f__mg$cache8;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976E8", Offset = "0xC976E8")]
		private static IAPurchaseCallback <>f__mg$cache9;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC976F8", Offset = "0xC976F8")]
		private static IAPurchaseCallback <>f__mg$cacheA;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97708", Offset = "0xC97708")]
		private static IAPurchaseCallback <>f__mg$cacheB;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC97718", Offset = "0xC97718")]
		private static IAPurchaseCallback <>f__mg$cacheC;

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xFBAACC", Offset = "0xFBAACC", VA = "0xFBAACC")]
		public IAPurchase()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xFB9F74", Offset = "0xFB9F74", VA = "0xFB9F74")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97728", Offset = "0xC97728")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xFBAAD4", Offset = "0xFBAAD4", VA = "0xFBAAD4")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xFBA05C", Offset = "0xFBA05C", VA = "0xFBA05C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC9778C", Offset = "0xC9778C")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xFBACB0", Offset = "0xFBACB0", VA = "0xFBACB0")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xFBA144", Offset = "0xFBA144", VA = "0xFBA144")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC977F0", Offset = "0xC977F0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xFBAE20", Offset = "0xFBAE20", VA = "0xFBAE20")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xFBA22C", Offset = "0xFBA22C", VA = "0xFBA22C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97854", Offset = "0xC97854")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xFBAF20", Offset = "0xFBAF20", VA = "0xFBAF20")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xFBA314", Offset = "0xFBA314", VA = "0xFBA314")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC978B8", Offset = "0xC978B8")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xFBB090", Offset = "0xFBB090", VA = "0xFBB090")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xFBA3FC", Offset = "0xFBA3FC", VA = "0xFBA3FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC9791C", Offset = "0xC9791C")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xFBB200", Offset = "0xFBB200", VA = "0xFBB200")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xFBA4E4", Offset = "0xFBA4E4", VA = "0xFBA4E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97980", Offset = "0xC97980")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xFBB368", Offset = "0xFBB368", VA = "0xFBB368")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xFBA5CC", Offset = "0xFBA5CC", VA = "0xFBA5CC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC979E4", Offset = "0xC979E4")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xFBB4D0", Offset = "0xFBB4D0", VA = "0xFBB4D0")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xFBA6B4", Offset = "0xFBA6B4", VA = "0xFBA6B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97A48", Offset = "0xC97A48")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xFBB684", Offset = "0xFBB684", VA = "0xFBB684")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xFBA79C", Offset = "0xFBA79C", VA = "0xFBA79C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97AAC", Offset = "0xC97AAC")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xFBB7F4", Offset = "0xFBB7F4", VA = "0xFBB7F4")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xFBA884", Offset = "0xFBA884", VA = "0xFBA884")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97B10", Offset = "0xC97B10")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xFBB964", Offset = "0xFBB964", VA = "0xFBB964")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xFBA96C", Offset = "0xFBA96C", VA = "0xFBA96C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97B74", Offset = "0xC97B74")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xFBBAD4", Offset = "0xFBBAD4", VA = "0xFBBAD4")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xFBAA54", Offset = "0xFBAA54", VA = "0xFBAA54")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC97BD8", Offset = "0xC97BD8")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xFBBC3C", Offset = "0xFBBC3C", VA = "0xFBBC3C")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class DLC
	{
		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xFB9EFC", Offset = "0xFB9EFC", VA = "0xFB9EFC")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class Subscription
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98A9C", Offset = "0xC98A9C")]
		private static Viveport.Internal.StatusCallback2 <>f__mg$cache0;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98AAC", Offset = "0xC98AAC")]
		private static Viveport.Internal.StatusCallback2 <>f__mg$cache1;

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x26C2894", Offset = "0x26C2894", VA = "0x26C2894")]
		public Subscription()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x26C2820", Offset = "0x26C2820", VA = "0x26C2820")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC98ABC", Offset = "0xC98ABC")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x26C289C", Offset = "0x26C289C", VA = "0x26C289C")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x26C2A60", Offset = "0x26C2A60", VA = "0x26C2A60")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}
	}
	[Token(Token = "0x2000539")]
	public class Deeplink
	{
		[Token(Token = "0x200053A")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xFB9EF4", Offset = "0xFB9EF4", VA = "0xFB9EF4")]
			protected DeeplinkChecker()
			{
			}

			[Token(Token = "0x60027F6")]
			public abstract void OnSuccess();

			[Token(Token = "0x60027F7")]
			public abstract void OnFailure(int errorCode, string errorMessage);
		}

		[Token(Token = "0x4001E14")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98B20", Offset = "0xC98B20")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache0;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98B30", Offset = "0xC98B30")]
		private static Viveport.Internal.StatusCallback <>f__mg$cache1;

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xFB99F8", Offset = "0xFB99F8", VA = "0xFB99F8")]
		public Deeplink()
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xFB9990", Offset = "0xFB9990", VA = "0xFB9990")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xC98B40", Offset = "0xC98B40")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xFB9A00", Offset = "0xFB9A00", VA = "0xFB9A00")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xFB9BCC", Offset = "0xFB9BCC", VA = "0xFB9BCC")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xFB9CA0", Offset = "0xFB9CA0", VA = "0xFB9CA0")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xFB9D74", Offset = "0xFB9D74", VA = "0xFB9D74")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xFB9E14", Offset = "0xFB9E14", VA = "0xFB9E14")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xFB9EE8", Offset = "0xFB9EE8", VA = "0xFB9EE8")]
		public static string GetAppLaunchData()
		{
			return null;
		}
	}
	[Token(Token = "0x200053B")]
	internal class Token
	{
		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x26C2C2C", Offset = "0x26C2C2C", VA = "0x26C2C2C")]
		public Token()
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200053C")]
	internal class Session
	{
		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xFB9294", Offset = "0xFB9294", VA = "0xFB9294")]
		public Session()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC98BA4", Offset = "0xC98BA4")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC98BB8", Offset = "0xC98BB8")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC98BCC", Offset = "0xC98BCC")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC98BE0", Offset = "0xC98BE0")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000541")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001E1D")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001E1E")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001E1F")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001E20")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000542")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001E22")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001E23")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001E24")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001E25")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000543")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001E27")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001E28")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001E29")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000544")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001E2B")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001E2C")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001E2D")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001E2E")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000545")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001E30")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001E31")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001E32")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000546")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4001E34")]
		UNKNOWN,
		[Token(Token = "0x4001E35")]
		PAID,
		[Token(Token = "0x4001E36")]
		REDEEM,
		[Token(Token = "0x4001E37")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000547")]
	internal enum ELocale
	{
		[Token(Token = "0x4001E39")]
		k_ELocaleUS,
		[Token(Token = "0x4001E3A")]
		k_ELocaleDE,
		[Token(Token = "0x4001E3B")]
		k_ELocaleJP,
		[Token(Token = "0x4001E3C")]
		k_ELocaleKR,
		[Token(Token = "0x4001E3D")]
		k_ELocaleRU,
		[Token(Token = "0x4001E3E")]
		k_ELocaleCN,
		[Token(Token = "0x4001E3F")]
		k_ELocaleTW,
		[Token(Token = "0x4001E40")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000548")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001E42")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001E43")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001E44")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000549")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xC98BF4", Offset = "0xC98BF4")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x200054B")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x200054C")]
	internal class Api
	{
		[Token(Token = "0x200054D")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002813")]
			[Address(RVA = "0x26BB8F4", Offset = "0x26BB8F4", VA = "0x26BB8F4")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0x26BB97C", Offset = "0x26BB97C", VA = "0x26BB97C")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x26BBBD4", Offset = "0x26BBBD4", VA = "0x26BBBD4")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x26BB40C", Offset = "0x26BB40C", VA = "0x26BB40C")]
		public Api()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x26BB414", Offset = "0x26BB414", VA = "0x26BB414")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x26BB5A4", Offset = "0x26BB5A4", VA = "0x26BB5A4")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x26BB6A4", Offset = "0x26BB6A4", VA = "0x26BB6A4")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x26BB728", Offset = "0x26BB728", VA = "0x26BB728")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}
	}
	[Token(Token = "0x200054E")]
	internal class User
	{
		[Token(Token = "0x6002816")]
		[Address(RVA = "0x26BF1F0", Offset = "0x26BF1F0", VA = "0x26BF1F0")]
		public User()
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x26BF1F8", Offset = "0x26BF1F8", VA = "0x26BF1F8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x26BF33C", Offset = "0x26BF33C", VA = "0x26BF33C")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x26BF420", Offset = "0x26BF420", VA = "0x26BF420")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x26BF504", Offset = "0x26BF504", VA = "0x26BF504")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}
	}
	[Token(Token = "0x200054F")]
	internal class UserStats
	{
		[Token(Token = "0x600281B")]
		[Address(RVA = "0x26BF5E8", Offset = "0x26BF5E8", VA = "0x26BF5E8")]
		public UserStats()
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x26BF5F0", Offset = "0x26BF5F0", VA = "0x26BF5F0")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x26BF734", Offset = "0x26BF734", VA = "0x26BF734")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x26BF878", Offset = "0x26BF878", VA = "0x26BF878")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x26BF9BC", Offset = "0x26BF9BC", VA = "0x26BF9BC")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x26BFB08", Offset = "0x26BFB08", VA = "0x26BFB08")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x26BFC5C", Offset = "0x26BFC5C", VA = "0x26BFC5C")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x26BFDA8", Offset = "0x26BFDA8", VA = "0x26BFDA8")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x26BFEFC", Offset = "0x26BFEFC", VA = "0x26BFEFC")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x26BFFDC", Offset = "0x26BFFDC", VA = "0x26BFFDC")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x26C00BC", Offset = "0x26C00BC", VA = "0x26C00BC")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x26C019C", Offset = "0x26C019C", VA = "0x26C019C")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x26C027C", Offset = "0x26C027C", VA = "0x26C027C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x26C03C8", Offset = "0x26C03C8", VA = "0x26C03C8")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x26C0574", Offset = "0x26C0574", VA = "0x26C0574")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x26C0654", Offset = "0x26C0654", VA = "0x26C0654")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x26C0968", Offset = "0x26C0968", VA = "0x26C0968")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x26C0B64", Offset = "0x26C0B64", VA = "0x26C0B64")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x26C0E40", Offset = "0x26C0E40", VA = "0x26C0E40")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x26C0EC4", Offset = "0x26C0EC4", VA = "0x26C0EC4")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x26C0F48", Offset = "0x26C0F48", VA = "0x26C0F48")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}
	}
	[Token(Token = "0x2000550")]
	internal class Deeplink
	{
		[Token(Token = "0x2000551")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x26BC0C0", Offset = "0x26BC0C0", VA = "0x26BC0C0")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x26BC580", Offset = "0x26BC580", VA = "0x26BC580")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0x26BC614", Offset = "0x26BC614", VA = "0x26BC614")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x26BBDF4", Offset = "0x26BBDF4", VA = "0x26BBDF4")]
		public Deeplink()
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x26BBDFC", Offset = "0x26BBDFC", VA = "0x26BBDFC")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x26BBEF4", Offset = "0x26BBEF4", VA = "0x26BBEF4")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x26BC148", Offset = "0x26BC148", VA = "0x26BC148")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x26BC2D0", Offset = "0x26BC2D0", VA = "0x26BC2D0")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x26BC49C", Offset = "0x26BC49C", VA = "0x26BC49C")]
		internal static string GetAppLaunchData()
		{
			return null;
		}
	}
	[Token(Token = "0x2000552")]
	internal class IAPurchase
	{
		[Token(Token = "0x6002839")]
		[Address(RVA = "0x26BD0F0", Offset = "0x26BD0F0", VA = "0x26BD0F0")]
		public IAPurchase()
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x26BD0F8", Offset = "0x26BD0F8", VA = "0x26BD0F8")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x26BD280", Offset = "0x26BD280", VA = "0x26BD280")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x26BD408", Offset = "0x26BD408", VA = "0x26BD408")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x26BD5D4", Offset = "0x26BD5D4", VA = "0x26BD5D4")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x26BD75C", Offset = "0x26BD75C", VA = "0x26BD75C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x26BD8E4", Offset = "0x26BD8E4", VA = "0x26BD8E4")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x26BDA20", Offset = "0x26BDA20", VA = "0x26BDA20")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x26BDB5C", Offset = "0x26BDB5C", VA = "0x26BDB5C")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x26BDEDC", Offset = "0x26BDEDC", VA = "0x26BDEDC")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x26BE064", Offset = "0x26BE064", VA = "0x26BE064")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x26BE1EC", Offset = "0x26BE1EC", VA = "0x26BE1EC")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x26BE374", Offset = "0x26BE374", VA = "0x26BE374")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x26BE4B0", Offset = "0x26BE4B0", VA = "0x26BE4B0")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}
	}
	[Token(Token = "0x2000553")]
	internal class Subscription
	{
		[Token(Token = "0x6002847")]
		[Address(RVA = "0x26BEE9C", Offset = "0x26BEE9C", VA = "0x26BEE9C")]
		public Subscription()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x26BEEA4", Offset = "0x26BEEA4", VA = "0x26BEEA4")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x26BEFE8", Offset = "0x26BEFE8", VA = "0x26BEFE8")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x26BF06C", Offset = "0x26BF06C", VA = "0x26BF06C")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x26BF0F0", Offset = "0x26BF0F0", VA = "0x26BF0F0")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}
	}
	[Token(Token = "0x2000554")]
	internal class Android
	{
		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000519")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x26BA22C", Offset = "0x26BA22C", VA = "0x26BA22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x26BA2C0", Offset = "0x26BA2C0", VA = "0x26BA2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051B")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x26BA328", Offset = "0x26BA328", VA = "0x26BA328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x26B9DBC", Offset = "0x26B9DBC", VA = "0x26B9DBC")]
		public Android()
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x26B9DC4", Offset = "0x26B9DC4", VA = "0x26B9DC4")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x26B9E80", Offset = "0x26B9E80", VA = "0x26B9E80")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x26B9F3C", Offset = "0x26B9F3C", VA = "0x26B9F3C")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x26B9FF8", Offset = "0x26B9FF8", VA = "0x26B9FF8")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x26BA0B4", Offset = "0x26BA0B4", VA = "0x26BA0B4")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x26BA170", Offset = "0x26BA170", VA = "0x26BA170")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}
	}
	[Token(Token = "0x2000555")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x26BA32C", Offset = "0x26BA32C", VA = "0x26BA32C")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x26BA3B4", Offset = "0x26BA3B4", VA = "0x26BA3B4")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x26BA43C", Offset = "0x26BA43C", VA = "0x26BA43C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x26BA4C4", Offset = "0x26BA4C4", VA = "0x26BA4C4")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
[Token(Token = "0x200057E")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC98C18", Offset = "0xC98C18")]
internal sealed class <>__AnonType0<<Elo>__T, <SeasonScore>__T, <Level>__T, <Version>__T, <PositionalTracked>__T>
{
	[Token(Token = "0x4001F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98C28", Offset = "0xC98C28")]
	private readonly <Elo>__T <Elo>;

	[Token(Token = "0x4001F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98C3C", Offset = "0xC98C3C")]
	private readonly <SeasonScore>__T <SeasonScore>;

	[Token(Token = "0x4001F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98C50", Offset = "0xC98C50")]
	private readonly <Level>__T <Level>;

	[Token(Token = "0x4001F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98C64", Offset = "0xC98C64")]
	private readonly <Version>__T <Version>;

	[Token(Token = "0x4001F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC98C78", Offset = "0xC98C78")]
	private readonly <PositionalTracked>__T <PositionalTracked>;

	[Token(Token = "0x17000556")]
	public <Elo>__T Elo
	{
		[Token(Token = "0x600291D")]
		get
		{
			return (<Elo>__T)null;
		}
	}

	[Token(Token = "0x17000557")]
	public <SeasonScore>__T SeasonScore
	{
		[Token(Token = "0x600291E")]
		get
		{
			return (<SeasonScore>__T)null;
		}
	}

	[Token(Token = "0x17000558")]
	public <Level>__T Level
	{
		[Token(Token = "0x600291F")]
		get
		{
			return (<Level>__T)null;
		}
	}

	[Token(Token = "0x17000559")]
	public <Version>__T Version
	{
		[Token(Token = "0x6002920")]
		get
		{
			return (<Version>__T)null;
		}
	}

	[Token(Token = "0x1700055A")]
	public <PositionalTracked>__T PositionalTracked
	{
		[Token(Token = "0x6002921")]
		get
		{
			return (<PositionalTracked>__T)null;
		}
	}

	[Token(Token = "0x600291C")]
	[DebuggerHidden]
	public <>__AnonType0(<Elo>__T Elo, <SeasonScore>__T SeasonScore, <Level>__T Level, <Version>__T Version, <PositionalTracked>__T PositionalTracked)
	{
	}

	[Token(Token = "0x6002922")]
	[DebuggerHidden]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002923")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6002924")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
