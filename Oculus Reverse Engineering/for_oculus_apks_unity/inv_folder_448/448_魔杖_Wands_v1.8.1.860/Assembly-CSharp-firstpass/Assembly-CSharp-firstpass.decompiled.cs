using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using Cortopia.BE.Runtime.Actions;
using Cortopia.BE.Runtime.Actions.Connectors;
using Cortopia.BE.Runtime.Actions.Interfaces;
using Cortopia.BE.Runtime.Components.Senses.Hearing;
using Cortopia.BE.Runtime.Components.Senses.Hearing.Collections;
using Cortopia.BE.Runtime.Components.Senses.Sight;
using Cortopia.BE.Runtime.Components.Senses.Sight.Collections;
using Cortopia.BE.Runtime.Events;
using Cortopia.BE.Runtime.Events.ActionEvents;
using Cortopia.BE.Runtime.Nodes;
using Cortopia.BE.Runtime.Nodes.Properties;
using Cortopia.BE.Runtime.Transition;
using Cortopia.DebugUtilities.Text;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Store;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Cortopia.BE.Runtime.Actions
{
	[Serializable]
	[Token(Token = "0x2000002")]
	public class BE_Action : ScriptableObject
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC65374", Offset = "0xC65374")]
		public List<TransitionConnector> TransitionConnectors;

		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Node OwnerNode;

		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string TypeName;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC653AC", Offset = "0xC653AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC653AC", Offset = "0xC653AC")]
		private string <Description>k__BackingField;

		[Token(Token = "0x17000001")]
		public string Description
		{
			[Token(Token = "0x6000002")]
			[Address(RVA = "0x11C3ED8", Offset = "0x11C3ED8", VA = "0x11C3ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC653E8", Offset = "0xC653E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000003")]
			[Address(RVA = "0x11C3EE0", Offset = "0x11C3EE0", VA = "0x11C3EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC653F8", Offset = "0xC653F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000001")]
		[Address(RVA = "0x11C3E64", Offset = "0x11C3E64", VA = "0x11C3E64")]
		public BE_Action()
		{
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0x11C3EE8", Offset = "0x11C3EE8", VA = "0x11C3EE8", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0x11C3EEC", Offset = "0x11C3EEC", VA = "0x11C3EEC")]
		public void AddTransitionConnector(TransitionConnector connector)
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x11C4058", Offset = "0x11C4058", VA = "0x11C4058")]
		public int GetTransitionIndexByName(string transitionName)
		{
			return default(int);
		}

		[Token(Token = "0x6000007")]
		public T GetValidComponent<T>(Component owner)
		{
			return (T)null;
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0x11C41A0", Offset = "0x11C41A0", VA = "0x11C41A0", Slot = "5")]
		public virtual void Process()
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x11C41A4", Offset = "0x11C41A4", VA = "0x11C41A4", Slot = "6")]
		public virtual void DrawCustomProperties()
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x11C41A8", Offset = "0x11C41A8", VA = "0x11C41A8")]
		public void Finish()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Conditions
{
	[Token(Token = "0x2000003")]
	public class RelationalCondition : BE_Action
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x11C43AC", Offset = "0x11C43AC", VA = "0x11C43AC")]
		public RelationalCondition()
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x11C43B0", Offset = "0x11C43B0", VA = "0x11C43B0")]
		protected bool Evaluate(RelationalOperator type, int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x11C4428", Offset = "0x11C4428", VA = "0x11C4428")]
		protected bool Evaluate(RelationalOperator type, float a, float b)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Connectors
{
	[Serializable]
	[Token(Token = "0x2000004")]
	public class TransitionConnector
	{
		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int TransitionIndex;

		[Token(Token = "0x600000E")]
		[Address(RVA = "0x11C44A0", Offset = "0x11C44A0", VA = "0x11C44A0")]
		public TransitionConnector(string name, int index)
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Execution
{
	[Token(Token = "0x2000005")]
	public class ChangeState : BE_Action, IBehaviourSystemReferable
	{
		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public State State;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StateMachine StateMachine;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StateChangeEvent m_stateChangeEvent;

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x11C44DC", Offset = "0x11C44DC", VA = "0x11C44DC")]
		public ChangeState()
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x11C458C", Offset = "0x11C458C", VA = "0x11C458C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x11C45DC", Offset = "0x11C45DC", VA = "0x11C45DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x11C46BC", Offset = "0x11C46BC", VA = "0x11C46BC", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x11C45E4", Offset = "0x11C45E4", VA = "0x11C45E4")]
		private void SetListenerActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x11C4740", Offset = "0x11C4740", VA = "0x11C4740", Slot = "7")]
		public void UpdateReferences()
		{
		}
	}
	[Token(Token = "0x2000006")]
	public enum ExecutionType
	{
		[Token(Token = "0x400000B")]
		FixedNumber,
		[Token(Token = "0x400000C")]
		Infinity
	}
	[Token(Token = "0x2000007")]
	public class PerformTransition : BE_Action
	{
		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int ConnectionIndex;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x11C47E4", Offset = "0x11C47E4", VA = "0x11C47E4")]
		public PerformTransition()
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x11C47E8", Offset = "0x11C47E8", VA = "0x11C47E8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x11C4838", Offset = "0x11C4838", VA = "0x11C4838", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x2000008")]
	public class Repeat : BE_Action
	{
		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExecutionType RepetitionType;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public uint Repetitions;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint m_repetitions;

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x11C4914", Offset = "0x11C4914", VA = "0x11C4914")]
		public Repeat()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x11C4920", Offset = "0x11C4920", VA = "0x11C4920", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0x11C4970", Offset = "0x11C4970", VA = "0x11C4970", Slot = "5")]
		public override void Process()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Interfaces
{
	[Token(Token = "0x2000009")]
	public interface IBehaviourSystemReferable
	{
		[Token(Token = "0x600001B")]
		void UpdateReferences();
	}
}
namespace Cortopia.BE.Runtime.Actions.Movement
{
	[Token(Token = "0x200000A")]
	public class Rotate : BE_Action
	{
		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 EulerAngles;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Seconds;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve Curve;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_duration;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_frameDeltaRotation;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_totalRotation;

		[Token(Token = "0x600001C")]
		[Address(RVA = "0x11C4A34", Offset = "0x11C4A34", VA = "0x11C4A34")]
		public Rotate()
		{
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0x11C4A38", Offset = "0x11C4A38", VA = "0x11C4A38", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x11C4A88", Offset = "0x11C4A88", VA = "0x11C4A88", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x200000B")]
	public class Wait : BE_Action
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Seconds;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_duration;

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x11C4CC4", Offset = "0x11C4CC4", VA = "0x11C4CC4")]
		public Wait()
		{
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x11C4CC8", Offset = "0x11C4CC8", VA = "0x11C4CC8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x11C4D18", Offset = "0x11C4D18", VA = "0x11C4D18", Slot = "5")]
		public override void Process()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Parameters
{
	[Serializable]
	[Token(Token = "0x200000C")]
	public class BE_ActionParam
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object Value;

		[Token(Token = "0x6000022")]
		[Address(RVA = "0x11C4D88", Offset = "0x11C4D88", VA = "0x11C4D88")]
		public BE_ActionParam(string name, object value)
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Physics.Collision
{
	[Token(Token = "0x200000D")]
	public enum ColliderEventType
	{
		[Token(Token = "0x400001C")]
		Default,
		[Token(Token = "0x400001D")]
		OnEnter,
		[Token(Token = "0x400001E")]
		OnStay,
		[Token(Token = "0x400001F")]
		OnExit
	}
	[Token(Token = "0x200000E")]
	public class OnColliderEnter : BE_Action
	{
		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsTrigger;

		[NonSerialized]
		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider m_collider;

		[NonSerialized]
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventDelegate m_eventDelegate;

		[NonSerialized]
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasEntered;

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x11C4DC0", Offset = "0x11C4DC0", VA = "0x11C4DC0")]
		public OnColliderEnter()
		{
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x11C4DC4", Offset = "0x11C4DC4", VA = "0x11C4DC4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x11C4E8C", Offset = "0x11C4E8C", VA = "0x11C4E8C", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x11C53B4", Offset = "0x11C53B4", VA = "0x11C53B4")]
		private void OnCollisionEnter(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x11C53C0", Offset = "0x11C53C0", VA = "0x11C53C0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x11C53CC", Offset = "0x11C53CC", VA = "0x11C53CC")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x200000F")]
	public class OnColliderEvent : BE_Action
	{
		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC65428", Offset = "0xC65428")]
		public bool IsTrigger;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC65460", Offset = "0xC65460")]
		public bool OnEnter;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool OnStay;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool OnExit;

		[NonSerialized]
		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider m_collider;

		[NonSerialized]
		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventDelegate m_eventDelegate;

		[NonSerialized]
		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ColliderEventType m_currentState;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IDictionary<ColliderEventType, TransitionConnector> m_transitionTypes;

		[Token(Token = "0x6000029")]
		[Address(RVA = "0x11C57C4", Offset = "0x11C57C4", VA = "0x11C57C4")]
		public OnColliderEvent()
		{
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x11C5840", Offset = "0x11C5840", VA = "0x11C5840", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0x11C5978", Offset = "0x11C5978", VA = "0x11C5978")]
		private void AddConnector(ColliderEventType colliderEvent, TransitionConnector connector)
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x11C5A50", Offset = "0x11C5A50", VA = "0x11C5A50", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x11C600C", Offset = "0x11C600C", VA = "0x11C600C")]
		private void OnCollisionEnter(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x11C607C", Offset = "0x11C607C", VA = "0x11C607C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0x11C60EC", Offset = "0x11C60EC", VA = "0x11C60EC")]
		private void OnCollisionStay(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x11C615C", Offset = "0x11C615C", VA = "0x11C615C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x11C61CC", Offset = "0x11C61CC", VA = "0x11C61CC")]
		private void OnCollisionExit(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x11C623C", Offset = "0x11C623C", VA = "0x11C623C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x11C5BF0", Offset = "0x11C5BF0", VA = "0x11C5BF0")]
		private void SetEventDelegates(bool shouldActivate)
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x11C664C", Offset = "0x11C664C", VA = "0x11C664C")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000010")]
	public class OnColliderExit : BE_Action
	{
		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsTrigger;

		[NonSerialized]
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider m_collider;

		[NonSerialized]
		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventDelegate m_eventDelegate;

		[NonSerialized]
		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasExited;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x11C6674", Offset = "0x11C6674", VA = "0x11C6674")]
		public OnColliderExit()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x11C6678", Offset = "0x11C6678", VA = "0x11C6678", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x11C6740", Offset = "0x11C6740", VA = "0x11C6740", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x11C6A84", Offset = "0x11C6A84", VA = "0x11C6A84")]
		private void OnCollisionExit(UnityEngine.Collision collision)
		{
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x11C6A90", Offset = "0x11C6A90", VA = "0x11C6A90")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x11C6A9C", Offset = "0x11C6A9C", VA = "0x11C6A9C")]
		private void OnDestroy()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Randomness
{
	[Token(Token = "0x2000011")]
	public class RandomBranch : BE_Action
	{
		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TransitionsCount;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly System.Random m_random;

		[Token(Token = "0x600003B")]
		[Address(RVA = "0x11C6CC4", Offset = "0x11C6CC4", VA = "0x11C6CC4")]
		public RandomBranch()
		{
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x11C6D88", Offset = "0x11C6D88", VA = "0x11C6D88", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x11C6E50", Offset = "0x11C6E50", VA = "0x11C6E50", Slot = "5")]
		public override void Process()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Script
{
	[Token(Token = "0x2000012")]
	public class CallScriptMethod : BE_Action
	{
		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65498", Offset = "0xC65498")]
		private sealed class <Process>c__AnonStorey0
		{
			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MethodInfo method;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal CallScriptMethod $this;

			[Token(Token = "0x6001302")]
			[Address(RVA = "0x11C6FCC", Offset = "0x11C6FCC", VA = "0x11C6FCC")]
			public <Process>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001303")]
			[Address(RVA = "0x11C6FD4", Offset = "0x11C6FD4", VA = "0x11C6FD4")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string MethodName;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action m_action;

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x11C6EB4", Offset = "0x11C6EB4", VA = "0x11C6EB4")]
		public CallScriptMethod()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x11C6EB8", Offset = "0x11C6EB8", VA = "0x11C6EB8", Slot = "5")]
		public override void Process()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Senses
{
	[Token(Token = "0x2000013")]
	public class InHearingRange : BE_Action
	{
		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Range;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Hearing m_hearing;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IHearing m_interface;

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x11C70BC", Offset = "0x11C70BC", VA = "0x11C70BC")]
		public InHearingRange()
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x11C70C0", Offset = "0x11C70C0", VA = "0x11C70C0", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x11C7188", Offset = "0x11C7188", VA = "0x11C7188", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x2000014")]
	public class InLineOfSight : BE_Action
	{
		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsInsideFOV;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Distance;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool UseLayerMask;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask LayerMaskFilter;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Component m_componentFilter;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Sight m_sight;

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x11C748C", Offset = "0x11C748C", VA = "0x11C748C")]
		public InLineOfSight()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x11C7490", Offset = "0x11C7490", VA = "0x11C7490", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x11C7558", Offset = "0x11C7558", VA = "0x11C7558", Slot = "5")]
		public override void Process()
		{
		}
	}
	[Token(Token = "0x2000015")]
	public class InProximityRange : BE_Action
	{
		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Range;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseLayerMask;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask LayerMaskFilter;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Component m_componentFilter;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Sight m_sight;

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x11C77C8", Offset = "0x11C77C8", VA = "0x11C77C8")]
		public InProximityRange()
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x11C77CC", Offset = "0x11C77CC", VA = "0x11C77CC", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x11C7894", Offset = "0x11C7894", VA = "0x11C7894", Slot = "5")]
		public override void Process()
		{
		}
	}
}
namespace Cortopia.BE.Runtime
{
	[Token(Token = "0x2000016")]
	public class BehaviourSystem : ScriptableObject
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Node m_firstNode;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Rect m_startNodeRect;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour m_owner;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Node> Nodes;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65598", Offset = "0xC65598")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65598", Offset = "0xC65598")]
		private bool <IsLooping>k__BackingField;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC655D4", Offset = "0xC655D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC655D4", Offset = "0xC655D4")]
		private Node <CurrentNode>k__BackingField;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65610", Offset = "0xC65610")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65610", Offset = "0xC65610")]
		private NodePriority <CurrentNodePriority>k__BackingField;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6564C", Offset = "0xC6564C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6564C", Offset = "0xC6564C")]
		private Node <PendingNodeChange>k__BackingField;

		[Token(Token = "0x17000002")]
		public virtual bool IsLooping
		{
			[Token(Token = "0x600004A")]
			[Address(RVA = "0x11C7D24", Offset = "0x11C7D24", VA = "0x11C7D24", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65688", Offset = "0xC65688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600004B")]
			[Address(RVA = "0x11C7D2C", Offset = "0x11C7D2C", VA = "0x11C7D2C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65698", Offset = "0xC65698")]
			set
			{
			}
		}

		[Token(Token = "0x17000003")]
		public Node CurrentNode
		{
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x11C7D38", Offset = "0x11C7D38", VA = "0x11C7D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656A8", Offset = "0xC656A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004D")]
			[Address(RVA = "0x11C7D40", Offset = "0x11C7D40", VA = "0x11C7D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656B8", Offset = "0xC656B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000004")]
		public NodePriority CurrentNodePriority
		{
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x11C7D48", Offset = "0x11C7D48", VA = "0x11C7D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656C8", Offset = "0xC656C8")]
			get
			{
				return default(NodePriority);
			}
			[Token(Token = "0x600004F")]
			[Address(RVA = "0x11C7D50", Offset = "0x11C7D50", VA = "0x11C7D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656D8", Offset = "0xC656D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000005")]
		public Node FirstNode
		{
			[Token(Token = "0x6000050")]
			[Address(RVA = "0x11C7D58", Offset = "0x11C7D58", VA = "0x11C7D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		public Rect StartNodeRect
		{
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x11C7D60", Offset = "0x11C7D60", VA = "0x11C7D60")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000052")]
			[Address(RVA = "0x11C7D6C", Offset = "0x11C7D6C", VA = "0x11C7D6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000007")]
		public MonoBehaviour Owner
		{
			[Token(Token = "0x6000053")]
			[Address(RVA = "0x11C7D78", Offset = "0x11C7D78", VA = "0x11C7D78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000054")]
			[Address(RVA = "0x11C7D80", Offset = "0x11C7D80", VA = "0x11C7D80")]
			set
			{
			}
		}

		[Token(Token = "0x17000008")]
		public Node PendingNodeChange
		{
			[Token(Token = "0x6000055")]
			[Address(RVA = "0x11C806C", Offset = "0x11C806C", VA = "0x11C806C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656E8", Offset = "0xC656E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000056")]
			[Address(RVA = "0x11C8074", Offset = "0x11C8074", VA = "0x11C8074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC656F8", Offset = "0xC656F8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x11C7CB4", Offset = "0x11C7CB4", VA = "0x11C7CB4")]
		public BehaviourSystem()
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x11C7D84", Offset = "0x11C7D84", VA = "0x11C7D84")]
		private void SetOwner(MonoBehaviour owner)
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x11C81F8", Offset = "0x11C81F8", VA = "0x11C81F8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x11C8324", Offset = "0x11C8324", VA = "0x11C8324")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x11C8434", Offset = "0x11C8434", VA = "0x11C8434")]
		public void AddNode(Node newNode)
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x11C84DC", Offset = "0x11C84DC", VA = "0x11C84DC")]
		public void RemoveNode(Node node)
		{
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x11C8548", Offset = "0x11C8548", VA = "0x11C8548")]
		public void SetFirstNode(Node node)
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x11C8278", Offset = "0x11C8278", VA = "0x11C8278")]
		public void ChangeNode(Node newNode)
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x11C861C", Offset = "0x11C861C", VA = "0x11C861C")]
		public void SetPendingNodeChange(Node newNode)
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x11C8748", Offset = "0x11C8748", VA = "0x11C8748")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x11C8750", Offset = "0x11C8750", VA = "0x11C8750")]
		public void Restart()
		{
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0x11C8758", Offset = "0x11C8758", VA = "0x11C8758")]
		private void NodeFinished()
		{
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0x11C8874", Offset = "0x11C8874", VA = "0x11C8874", Slot = "6")]
		public virtual bool UpdateNode()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000017")]
	public class BehaviourTree : BehaviourSystem
	{
		[Token(Token = "0x400004A")]
		private const int m_maxIterationCount = 64;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private State m_ownerState;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_doStateIteration;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65740", Offset = "0xC65740")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65740", Offset = "0xC65740")]
		private Branch <LastBranch>k__BackingField;

		[Token(Token = "0x17000009")]
		public State OwnerState
		{
			[Token(Token = "0x6000064")]
			[Address(RVA = "0x11C8944", Offset = "0x11C8944", VA = "0x11C8944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000065")]
			[Address(RVA = "0x11C894C", Offset = "0x11C894C", VA = "0x11C894C")]
			set
			{
			}
		}

		[Token(Token = "0x1700000A")]
		public Branch LastBranch
		{
			[Token(Token = "0x6000066")]
			[Address(RVA = "0x11C8954", Offset = "0x11C8954", VA = "0x11C8954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6577C", Offset = "0xC6577C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000067")]
			[Address(RVA = "0x11C895C", Offset = "0x11C895C", VA = "0x11C895C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6578C", Offset = "0xC6578C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000B")]
		public override bool IsLooping
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x11C8964", Offset = "0x11C8964", VA = "0x11C8964", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x11C8940", Offset = "0x11C8940", VA = "0x11C8940")]
		public BehaviourTree()
		{
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x11C896C", Offset = "0x11C896C", VA = "0x11C896C", Slot = "6")]
		public override bool UpdateNode()
		{
			return default(bool);
		}
	}
}
namespace Cortopia.BE.Runtime.Components.Senses.Hearing
{
	[Token(Token = "0x2000018")]
	public struct AudibleSource
	{
		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Amplitude;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float RegisteredTime;

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x11C8AFC", Offset = "0x11C8AFC", VA = "0x11C8AFC")]
		public AudibleSource(Vector3 position, float amplitude, float registeredTime)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000019")]
	public class AudioEvent : UnityEvent<Vector3, float>
	{
		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioEvent Event;

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x11C8B0C", Offset = "0x11C8B0C", VA = "0x11C8B0C")]
		public AudioEvent()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Components.Senses.Hearing.Collections
{
	[Token(Token = "0x200001A")]
	public struct AudibleSourceCollection
	{
		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_nextIndex;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Count;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudibleSource[] Sources;

		[Token(Token = "0x600006D")]
		[Address(RVA = "0x11C8E00", Offset = "0x11C8E00", VA = "0x11C8E00")]
		public AudibleSourceCollection(int size)
		{
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x11C8F28", Offset = "0x11C8F28", VA = "0x11C8F28")]
		public void Add(Vector3 position, float amplitude)
		{
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x11C8F90", Offset = "0x11C8F90", VA = "0x11C8F90")]
		public void Add(AudibleSource source)
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Components.Senses.Hearing
{
	[Token(Token = "0x200001B")]
	public class Hearing : Sense
	{
		[Token(Token = "0x4000055")]
		private const float MinDistanceVolumeCap = 0.1f;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_runInUpdate;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC657AC", Offset = "0xC657AC")]
		private float m_sensitivity;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_minRange;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_maxRange;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_sourceRegistryCapacity;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_origin;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_noticeDuration;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudibleSourceCollection m_registeredAudioSources;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudibleSourceCollection HeardAudioPositions;

		[Token(Token = "0x1700000C")]
		public float MinRange
		{
			[Token(Token = "0x6000071")]
			[Address(RVA = "0x11C8FF4", Offset = "0x11C8FF4", VA = "0x11C8FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6582C", Offset = "0xC6582C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700000D")]
		public float MaxRange
		{
			[Token(Token = "0x6000072")]
			[Address(RVA = "0x11C8FFC", Offset = "0x11C8FFC", VA = "0x11C8FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6583C", Offset = "0xC6583C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x11C8FC4", Offset = "0x11C8FC4", VA = "0x11C8FC4")]
		public Hearing()
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x11C9004", Offset = "0x11C9004", VA = "0x11C9004")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x11C9108", Offset = "0x11C9108", VA = "0x11C9108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x11C9180", Offset = "0x11C9180", VA = "0x11C9180")]
		private void OnAudioEvent(Vector3 position, float amplitude)
		{
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0x11C92E0", Offset = "0x11C92E0", VA = "0x11C92E0")]
		private float GetVolumeFactorAtDistance(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x11C9424", Offset = "0x11C9424", VA = "0x11C9424")]
		public bool IsWithinHearingRange(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x11C7378", Offset = "0x11C7378", VA = "0x11C7378")]
		public bool IsWithinHearingRange(Vector3 position, float range)
		{
			return default(bool);
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0x11C9530", Offset = "0x11C9530", VA = "0x11C9530")]
		private void UpdateHearing()
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0x11C962C", Offset = "0x11C962C", VA = "0x11C962C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public interface IHearing
	{
		[Token(Token = "0x600007B")]
		Hearing GetHearing();

		[Token(Token = "0x600007C")]
		Vector3 GetOpponentPosition();
	}
}
namespace Cortopia.BE.Runtime.Components.Senses
{
	[Token(Token = "0x200001D")]
	public class Sense : MonoBehaviour
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x11C8FEC", Offset = "0x11C8FEC", VA = "0x11C8FEC")]
		public Sense()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Components.Senses.Sight.Collections
{
	[Token(Token = "0x200001E")]
	public struct ColliderCollection
	{
		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider[] Colliders;

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x11C96F4", Offset = "0x11C96F4", VA = "0x11C96F4")]
		public ColliderCollection(int size)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x11C97E8", Offset = "0x11C97E8", VA = "0x11C97E8")]
		public bool Contains(Collider element)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200001F")]
	public struct ComponentCollection<T> where T : Component
	{
		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Components;

		[Token(Token = "0x6000080")]
		public ComponentCollection(int size)
		{
		}

		[Token(Token = "0x6000081")]
		public bool Contains(T element)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000020")]
	public struct SightRayCollection
	{
		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SightRay[] SightRays;

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x11C98A8", Offset = "0x11C98A8", VA = "0x11C98A8")]
		public SightRayCollection(int size)
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x11C9BE0", Offset = "0x11C9BE0", VA = "0x11C9BE0")]
		public bool Contains(SightRay element)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000021")]
	public struct VectorCollection
	{
		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] Vectors;

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x11C9E50", Offset = "0x11C9E50", VA = "0x11C9E50")]
		public VectorCollection(int size)
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Components.Senses.Sight
{
	[Serializable]
	[Token(Token = "0x2000022")]
	public struct FieldOfView
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6584C", Offset = "0xC6584C")]
		private float m_angle;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC65890", Offset = "0xC65890")]
		private float m_distance;

		[Token(Token = "0x1700000E")]
		public float Angle
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x11C9E60", Offset = "0x11C9E60", VA = "0x11C9E60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700000F")]
		public float Distance
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0x11C9E68", Offset = "0x11C9E68", VA = "0x11C9E68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000010")]
		public float AngleFromForward
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0x11C9E70", Offset = "0x11C9E70", VA = "0x11C9E70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x11C9E58", Offset = "0x11C9E58", VA = "0x11C9E58")]
		public FieldOfView(float angle, float distance)
		{
		}
	}
	[Token(Token = "0x2000023")]
	public interface ISight
	{
		[Token(Token = "0x6000089")]
		Sight GetSight();

		[Token(Token = "0x600008A")]
		bool TryGetSight(out Sight sight);
	}
	[Token(Token = "0x2000024")]
	public class Sight : Sense
	{
		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_runInUpdate;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FieldOfView m_fov;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask m_targetMask;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_obstacleMask;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_origin;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Collider[] m_excludedColliders;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_excludeSelf;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_targetsCachedTime;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SightRayCollection m_unblockedRays;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_sightObj;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ColliderCollection m_visibleTargets;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ColliderCollection m_allTargetsInSightRange;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Collider m_currentTargetCollider;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] m_currentMatchingLayerColliders;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Component[] m_currentMatchingTypes;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ColliderCollection m_currentColliders;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] m_currentBoundPositions;

		[Token(Token = "0x17000011")]
		public Transform Origin
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0x11C9FBC", Offset = "0x11C9FBC", VA = "0x11C9FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65944", Offset = "0xC65944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		public FieldOfView FOV
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0x11C9FC4", Offset = "0x11C9FC4", VA = "0x11C9FC4")]
			get
			{
				return default(FieldOfView);
			}
		}

		[Token(Token = "0x17000013")]
		public ColliderCollection VisibleTargets
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0x11C9FCC", Offset = "0x11C9FCC", VA = "0x11C9FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65954", Offset = "0xC65954")]
			get
			{
				return default(ColliderCollection);
			}
		}

		[Token(Token = "0x17000014")]
		public ColliderCollection AllTargetsInSightRange
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x11C9FD8", Offset = "0x11C9FD8", VA = "0x11C9FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65964", Offset = "0xC65964")]
			get
			{
				return default(ColliderCollection);
			}
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x11C9E80", Offset = "0x11C9E80", VA = "0x11C9E80")]
		public Sight()
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x11C9FE4", Offset = "0x11C9FE4", VA = "0x11C9FE4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x11CA238", Offset = "0x11CA238", VA = "0x11CA238")]
		private void Start()
		{
		}

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x11CA4E8", Offset = "0x11CA4E8", VA = "0x11CA4E8")]
		private ColliderCollection GetTargetsInFieldOfVision()
		{
			return default(ColliderCollection);
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x11CA800", Offset = "0x11CA800", VA = "0x11CA800")]
		public bool IsInLineOfSight(Collider target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x11CA84C", Offset = "0x11CA84C", VA = "0x11CA84C")]
		public bool IsInLineOfSight(Collider target, out SightRay unblockedRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x11CB1DC", Offset = "0x11CB1DC", VA = "0x11CB1DC")]
		public bool IsRayBlocked(Vector3 rayStart, Vector3 rayEnd, [Optional] Collider testedCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x11CB0A4", Offset = "0x11CB0A4", VA = "0x11CB0A4")]
		public bool IsRayBlocked(ref SightRay sightRay, [Optional] Collider testedCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x11CB348", Offset = "0x11CB348", VA = "0x11CB348")]
		private void UpdateVisibleTargets()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x11CB4DC", Offset = "0x11CB4DC", VA = "0x11CB4DC")]
		public bool IsVisible(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x11CB56C", Offset = "0x11CB56C", VA = "0x11CB56C")]
		public bool IsInSightRange(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600009A")]
		public T GetClosest<T>(T[] components, int length = -1) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x11CB598", Offset = "0x11CB598", VA = "0x11CB598")]
		public int MatchTargets(Collider[] matchingTargets, bool InFieldOfView = true, int length = -1, float customRange = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600009C")]
		public int MatchTargets<T>(T[] matchingTargets, bool InFieldOfView = true, int length = -1, float customRange = 0f) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x11CB59C", Offset = "0x11CB59C", VA = "0x11CB59C")]
		public int FindTargets(Collider[] matchingColliders, LayerMask layerMask, bool InFieldOfView = true, int length = -1, float customRange = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600009E")]
		public int FindTargets<T>(T[] matchingComponents, LayerMask layerMask, bool InFieldOfView = true, int length = -1, float customRange = 0f) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x11CB62C", Offset = "0x11CB62C", VA = "0x11CB62C")]
		public Collider GetClosestTarget(bool InFieldOfView = true, float customRange = 0f, int length = -1)
		{
			return null;
		}

		[Token(Token = "0x60000A0")]
		public T GetClosestTarget<T>(bool InFieldOfView = true, float customRange = 0f, int length = -1) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x11C7740", Offset = "0x11C7740", VA = "0x11C7740")]
		public Collider GetClosestTarget(LayerMask layerMask, bool InFieldOfView = true, float customRange = 0f, int length = -1)
		{
			return null;
		}

		[Token(Token = "0x60000A2")]
		public T GetClosestTarget<T>(LayerMask layerMask, bool InFieldOfView = true, float customRange = 0f, int length = -1) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x11CB6A4", Offset = "0x11CB6A4", VA = "0x11CB6A4")]
		public Component GetClosestTarget(Type type, bool inFieldOfView = true, int length = -1, float customRange = 0f)
		{
			return null;
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x11CB994", Offset = "0x11CB994", VA = "0x11CB994")]
		public Component GetClosestTarget(Type type, LayerMask layerMask, bool inFieldOfView = true, int length = -1, float customRange = 0f)
		{
			return null;
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x11CBA8C", Offset = "0x11CBA8C", VA = "0x11CBA8C")]
		private int FindTargetsInLayers(Collider[] matchingColliders, Collider[] colliders, LayerMask layerMask, int length = -1)
		{
			return default(int);
		}

		[Token(Token = "0x60000A6")]
		private int FindTargetsInLayers<T>(T[] matchingComponents, Collider[] colliders, LayerMask layerMask, int length = -1) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x60000A7")]
		private int FindTargetsInLayers<T>(T[] matchingComponents, T[] collection, LayerMask layerMask, int length = -1) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x60000A8")]
		private int FindTargetsInRange<T>(T[] targetsInRange, T[] collection, float range, int length = -1) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x60000A9")]
		private T GetTargetInRange<T>(T target, float range) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60000AA")]
		private int FindTargetsOfType<T>(Component[] matchingComponents, Collider[] colliders, int length = -1) where T : Component
		{
			return default(int);
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x11CB77C", Offset = "0x11CB77C", VA = "0x11CB77C")]
		private int FindTargetsOfType(Component[] matchingComponents, Collider[] colliders, Type type, int length = -1)
		{
			return default(int);
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x11CBC1C", Offset = "0x11CBC1C", VA = "0x11CBC1C")]
		public SightRay GetUnblockedSightRayForCollider(Collider collider)
		{
			return default(SightRay);
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x11CA160", Offset = "0x11CA160", VA = "0x11CA160")]
		private bool ArrayContains(Collider[] collection, Collider element)
		{
			return default(bool);
		}

		[Token(Token = "0x60000AE")]
		private bool IsEmpty<T>(List<T> collection)
		{
			return default(bool);
		}

		[Token(Token = "0x60000AF")]
		private bool IsEmpty<T>(T[] collection)
		{
			return default(bool);
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x11CB508", Offset = "0x11CB508", VA = "0x11CB508")]
		public void TryUpdateOutdatedVisualTargets()
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x11CBDBC", Offset = "0x11CBDBC", VA = "0x11CBDBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x11CBDB8", Offset = "0x11CBDB8", VA = "0x11CBDB8")]
		public void UpdateSight()
		{
		}
	}
	[Token(Token = "0x2000025")]
	public struct SightRay
	{
		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SightRay Invalid;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly Color HitColor;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly Color MissColor;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65974", Offset = "0xC65974")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65974", Offset = "0xC65974")]
		private readonly Vector3 <Origin>k__BackingField;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC659B0", Offset = "0xC659B0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC659B0", Offset = "0xC659B0")]
		private Vector3 <Direction>k__BackingField;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC659EC", Offset = "0xC659EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC659EC", Offset = "0xC659EC")]
		private readonly Vector3 <End>k__BackingField;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65A28", Offset = "0xC65A28")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65A28", Offset = "0xC65A28")]
		private readonly float <Range>k__BackingField;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65A64", Offset = "0xC65A64")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65A64", Offset = "0xC65A64")]
		private bool <IsBlocked>k__BackingField;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65AA0", Offset = "0xC65AA0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65AA0", Offset = "0xC65AA0")]
		private Color <Color>k__BackingField;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65ADC", Offset = "0xC65ADC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC65ADC", Offset = "0xC65ADC")]
		private Collider <HitCollider>k__BackingField;

		[Token(Token = "0x17000015")]
		public Vector3 Origin
		{
			[Token(Token = "0x60000B4")]
			[Address(RVA = "0x11CBE1C", Offset = "0x11CBE1C", VA = "0x11CBE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B18", Offset = "0xC65B18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000016")]
		public Vector3 Direction
		{
			[Token(Token = "0x60000B5")]
			[Address(RVA = "0x11CBE28", Offset = "0x11CBE28", VA = "0x11CBE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B28", Offset = "0xC65B28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60000B6")]
			[Address(RVA = "0x11CBE34", Offset = "0x11CBE34", VA = "0x11CBE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B38", Offset = "0xC65B38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000017")]
		public Vector3 End
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0x11CBE4C", Offset = "0x11CBE4C", VA = "0x11CBE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B48", Offset = "0xC65B48")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000018")]
		public float Range
		{
			[Token(Token = "0x60000B8")]
			[Address(RVA = "0x11CBE58", Offset = "0x11CBE58", VA = "0x11CBE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B58", Offset = "0xC65B58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000019")]
		public bool IsBlocked
		{
			[Token(Token = "0x60000B9")]
			[Address(RVA = "0x11CBE60", Offset = "0x11CBE60", VA = "0x11CBE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B68", Offset = "0xC65B68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000BA")]
			[Address(RVA = "0x11CBE68", Offset = "0x11CBE68", VA = "0x11CBE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B78", Offset = "0xC65B78")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001A")]
		public Color Color
		{
			[Token(Token = "0x60000BB")]
			[Address(RVA = "0x11CBE74", Offset = "0x11CBE74", VA = "0x11CBE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B88", Offset = "0xC65B88")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x11CBE80", Offset = "0x11CBE80", VA = "0x11CBE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65B98", Offset = "0xC65B98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public Collider HitCollider
		{
			[Token(Token = "0x60000BD")]
			[Address(RVA = "0x11CBE8C", Offset = "0x11CBE8C", VA = "0x11CBE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65BA8", Offset = "0xC65BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000BE")]
			[Address(RVA = "0x11CBE94", Offset = "0x11CBE94", VA = "0x11CBE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC65BB8", Offset = "0xC65BB8")]
			private set
			{
			}
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x11CBE10", Offset = "0x11CBE10", VA = "0x11CBE10")]
		public SightRay(Vector3 origin, Vector3 end, [Optional] Collider hitCollider, bool isBlocked = true)
		{
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x11CBE9C", Offset = "0x11CBE9C", VA = "0x11CBE9C")]
		public void SetBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x11CBEA8", Offset = "0x11CBEA8", VA = "0x11CBEA8")]
		public void SetHitCollider(Collider collider)
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x11CBF3C", Offset = "0x11CBF3C", VA = "0x11CBF3C")]
		public bool IsInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x11CBF44", Offset = "0x11CBF44", VA = "0x11CBF44")]
		public bool EqualTo(SightRay ray)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.BE.Runtime.Actions
{
	[Token(Token = "0x2000026")]
	public enum RelationalOperator
	{
		[Token(Token = "0x4000085")]
		Equal,
		[Token(Token = "0x4000086")]
		Not,
		[Token(Token = "0x4000087")]
		Greater,
		[Token(Token = "0x4000088")]
		Less,
		[Token(Token = "0x4000089")]
		GreaterOrEqual,
		[Token(Token = "0x400008A")]
		LessOrEqual
	}
}
namespace Cortopia.BE.Runtime.Events.ActionEvents
{
	[Serializable]
	[Token(Token = "0x2000027")]
	public class ActionEvent : UnityEvent
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x11CC02C", Offset = "0x11CC02C", VA = "0x11CC02C")]
		public ActionEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000028")]
	public class StateChangeEvent : UnityEvent<State>
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x11C453C", Offset = "0x11C453C", VA = "0x11C453C")]
		public StateChangeEvent()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Events
{
	[Token(Token = "0x2000029")]
	public class EventDelegate : MonoBehaviour
	{
		[Token(Token = "0x200002A")]
		public delegate void EventHandler();

		[Token(Token = "0x200002B")]
		public delegate void EventHandlerParam<TParam>(TParam param);

		[Token(Token = "0x200002C")]
		public delegate void EventHandlerMultipleParam<TParam1, TParam2>(TParam1 param1, TParam2 param2);

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC667BC", Offset = "0xC667BC")]
		private static EventHandler <>f__am$cache0;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC667CC", Offset = "0xC667CC")]
		private static EventHandler <>f__am$cache1;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC667DC", Offset = "0xC667DC")]
		private static EventHandler <>f__am$cache2;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC667EC", Offset = "0xC667EC")]
		private static EventHandlerParam<int> <>f__am$cache3;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC667FC", Offset = "0xC667FC")]
		private static EventHandler <>f__am$cache4;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6680C", Offset = "0xC6680C")]
		private static EventHandlerParam<bool> <>f__am$cache5;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6681C", Offset = "0xC6681C")]
		private static EventHandlerParam<bool> <>f__am$cache6;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6682C", Offset = "0xC6682C")]
		private static EventHandler <>f__am$cache7;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6683C", Offset = "0xC6683C")]
		private static EventHandlerMultipleParam<float[], int> <>f__am$cache8;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6684C", Offset = "0xC6684C")]
		private static EventHandler <>f__am$cache9;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6685C", Offset = "0xC6685C")]
		private static EventHandler <>f__am$cacheA;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6686C", Offset = "0xC6686C")]
		private static EventHandlerParam<Collision> <>f__am$cacheB;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6687C", Offset = "0xC6687C")]
		private static EventHandlerParam<Collision2D> <>f__am$cacheC;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6688C", Offset = "0xC6688C")]
		private static EventHandlerParam<Collision> <>f__am$cacheD;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6689C", Offset = "0xC6689C")]
		private static EventHandlerParam<Collision2D> <>f__am$cacheE;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668AC", Offset = "0xC668AC")]
		private static EventHandlerParam<Collision> <>f__am$cacheF;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668BC", Offset = "0xC668BC")]
		private static EventHandlerParam<Collision2D> <>f__am$cache10;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668CC", Offset = "0xC668CC")]
		private static EventHandler <>f__am$cache11;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668DC", Offset = "0xC668DC")]
		private static EventHandlerParam<ControllerColliderHit> <>f__am$cache12;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668EC", Offset = "0xC668EC")]
		private static EventHandler <>f__am$cache13;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC668FC", Offset = "0xC668FC")]
		private static EventHandler <>f__am$cache14;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6690C", Offset = "0xC6690C")]
		private static EventHandler <>f__am$cache15;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6691C", Offset = "0xC6691C")]
		private static EventHandler <>f__am$cache16;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6692C", Offset = "0xC6692C")]
		private static EventHandler <>f__am$cache17;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6693C", Offset = "0xC6693C")]
		private static EventHandler <>f__am$cache18;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6694C", Offset = "0xC6694C")]
		private static EventHandlerParam<float> <>f__am$cache19;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6695C", Offset = "0xC6695C")]
		private static EventHandler <>f__am$cache1A;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6696C", Offset = "0xC6696C")]
		private static EventHandler <>f__am$cache1B;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6697C", Offset = "0xC6697C")]
		private static EventHandler <>f__am$cache1C;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6698C", Offset = "0xC6698C")]
		private static EventHandler <>f__am$cache1D;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6699C", Offset = "0xC6699C")]
		private static EventHandler <>f__am$cache1E;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669AC", Offset = "0xC669AC")]
		private static EventHandler <>f__am$cache1F;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669BC", Offset = "0xC669BC")]
		private static EventHandler <>f__am$cache20;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669CC", Offset = "0xC669CC")]
		private static EventHandlerParam<GameObject> <>f__am$cache21;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669DC", Offset = "0xC669DC")]
		private static EventHandler <>f__am$cache22;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669EC", Offset = "0xC669EC")]
		private static EventHandler <>f__am$cache23;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC669FC", Offset = "0xC669FC")]
		private static EventHandler <>f__am$cache24;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A0C", Offset = "0xC66A0C")]
		private static EventHandlerMultipleParam<RenderTexture, RenderTexture> <>f__am$cache25;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A1C", Offset = "0xC66A1C")]
		private static EventHandler <>f__am$cache26;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A2C", Offset = "0xC66A2C")]
		private static EventHandler <>f__am$cache27;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A3C", Offset = "0xC66A3C")]
		private static EventHandlerParam<Collider> <>f__am$cache28;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A4C", Offset = "0xC66A4C")]
		private static EventHandlerParam<Collider2D> <>f__am$cache29;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A5C", Offset = "0xC66A5C")]
		private static EventHandlerParam<Collider> <>f__am$cache2A;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A6C", Offset = "0xC66A6C")]
		private static EventHandlerParam<Collider2D> <>f__am$cache2B;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A7C", Offset = "0xC66A7C")]
		private static EventHandlerParam<Collider> <>f__am$cache2C;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A8C", Offset = "0xC66A8C")]
		private static EventHandlerParam<Collider2D> <>f__am$cache2D;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66A9C", Offset = "0xC66A9C")]
		private static EventHandler <>f__am$cache2E;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66AAC", Offset = "0xC66AAC")]
		private static EventHandler <>f__am$cache2F;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66ABC", Offset = "0xC66ABC")]
		private static EventHandler <>f__am$cache30;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66ACC", Offset = "0xC66ACC")]
		private static EventHandler <>f__am$cache31;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66ADC", Offset = "0xC66ADC")]
		private static EventHandler <>f__am$cache32;

		[Token(Token = "0x14000001")]
		public event EventHandler AwakeEvent
		{
			[Token(Token = "0x60000C7")]
			[Address(RVA = "0x11CD290", Offset = "0x11CD290", VA = "0x11CD290")]
			add
			{
			}
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x11CD378", Offset = "0x11CD378", VA = "0x11CD378")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event EventHandler FixedUpdateEvent
		{
			[Token(Token = "0x60000C9")]
			[Address(RVA = "0x11CD460", Offset = "0x11CD460", VA = "0x11CD460")]
			add
			{
			}
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x11CD548", Offset = "0x11CD548", VA = "0x11CD548")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public event EventHandler LateUpdateEvent
		{
			[Token(Token = "0x60000CB")]
			[Address(RVA = "0x11CD630", Offset = "0x11CD630", VA = "0x11CD630")]
			add
			{
			}
			[Token(Token = "0x60000CC")]
			[Address(RVA = "0x11CD718", Offset = "0x11CD718", VA = "0x11CD718")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event EventHandlerParam<int> OnAnimatorIKEvent
		{
			[Token(Token = "0x60000CD")]
			[Address(RVA = "0x11CD800", Offset = "0x11CD800", VA = "0x11CD800")]
			add
			{
			}
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0x11CD8E8", Offset = "0x11CD8E8", VA = "0x11CD8E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event EventHandler OnAnimatorMoveEvent
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0x11CD9D0", Offset = "0x11CD9D0", VA = "0x11CD9D0")]
			add
			{
			}
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0x11CDAB8", Offset = "0x11CDAB8", VA = "0x11CDAB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event EventHandlerParam<bool> OnApplicationFocusEvent
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0x11CDBA0", Offset = "0x11CDBA0", VA = "0x11CDBA0")]
			add
			{
			}
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x11CDC88", Offset = "0x11CDC88", VA = "0x11CDC88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event EventHandlerParam<bool> OnApplicationPauseEvent
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0x11CDD70", Offset = "0x11CDD70", VA = "0x11CDD70")]
			add
			{
			}
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0x11CDE58", Offset = "0x11CDE58", VA = "0x11CDE58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event EventHandler OnApplicationQuitEvent
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0x11CDF40", Offset = "0x11CDF40", VA = "0x11CDF40")]
			add
			{
			}
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0x11CE028", Offset = "0x11CE028", VA = "0x11CE028")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event EventHandlerMultipleParam<float[], int> OnAudioFilterReadEvent
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0x11CE110", Offset = "0x11CE110", VA = "0x11CE110")]
			add
			{
			}
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0x11CE1F8", Offset = "0x11CE1F8", VA = "0x11CE1F8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event EventHandler OnBecameInvisibleEvent
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0x11CE2E0", Offset = "0x11CE2E0", VA = "0x11CE2E0")]
			add
			{
			}
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0x11CE3C8", Offset = "0x11CE3C8", VA = "0x11CE3C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event EventHandler OnBecameVisibleEvent
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0x11CE4B0", Offset = "0x11CE4B0", VA = "0x11CE4B0")]
			add
			{
			}
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0x11CE598", Offset = "0x11CE598", VA = "0x11CE598")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event EventHandlerParam<Collision> OnCollisionEnterEvent
		{
			[Token(Token = "0x60000DD")]
			[Address(RVA = "0x11C51D4", Offset = "0x11C51D4", VA = "0x11C51D4")]
			add
			{
			}
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0x11C55F4", Offset = "0x11C55F4", VA = "0x11C55F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event EventHandlerParam<Collision2D> OnCollisionEnter2DEvent
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0x11CE680", Offset = "0x11CE680", VA = "0x11CE680")]
			add
			{
			}
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x11CE768", Offset = "0x11CE768", VA = "0x11CE768")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event EventHandlerParam<Collision> OnCollisionExitEvent
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x11C647C", Offset = "0x11C647C", VA = "0x11C647C")]
			add
			{
			}
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x11C6564", Offset = "0x11C6564", VA = "0x11C6564")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event EventHandlerParam<Collision2D> OnCollisionExit2DEvent
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x11CE850", Offset = "0x11CE850", VA = "0x11CE850")]
			add
			{
			}
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x11CE938", Offset = "0x11CE938", VA = "0x11CE938")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event EventHandlerParam<Collision> OnCollisionStayEvent
		{
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0x11C62AC", Offset = "0x11C62AC", VA = "0x11C62AC")]
			add
			{
			}
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x11C6394", Offset = "0x11C6394", VA = "0x11C6394")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event EventHandlerParam<Collision2D> OnCollisionStay2DEvent
		{
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x11CEA20", Offset = "0x11CEA20", VA = "0x11CEA20")]
			add
			{
			}
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0x11CEB08", Offset = "0x11CEB08", VA = "0x11CEB08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event EventHandler OnConnectedToServerEvent
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0x11CEBF0", Offset = "0x11CEBF0", VA = "0x11CEBF0")]
			add
			{
			}
			[Token(Token = "0x60000EA")]
			[Address(RVA = "0x11CECD8", Offset = "0x11CECD8", VA = "0x11CECD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event EventHandlerParam<ControllerColliderHit> OnControllerColliderHitEvent
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0x11CEDC0", Offset = "0x11CEDC0", VA = "0x11CEDC0")]
			add
			{
			}
			[Token(Token = "0x60000EC")]
			[Address(RVA = "0x11CEEA8", Offset = "0x11CEEA8", VA = "0x11CEEA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event EventHandler OnDestroyEvent
		{
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x11C52CC", Offset = "0x11C52CC", VA = "0x11C52CC")]
			add
			{
			}
			[Token(Token = "0x60000EE")]
			[Address(RVA = "0x11C56DC", Offset = "0x11C56DC", VA = "0x11C56DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event EventHandler OnDisableEvent
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x11CEF90", Offset = "0x11CEF90", VA = "0x11CEF90")]
			add
			{
			}
			[Token(Token = "0x60000F0")]
			[Address(RVA = "0x11CF078", Offset = "0x11CF078", VA = "0x11CF078")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event EventHandler OnDrawGizmosEvent
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0x11CF160", Offset = "0x11CF160", VA = "0x11CF160")]
			add
			{
			}
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0x11CF248", Offset = "0x11CF248", VA = "0x11CF248")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event EventHandler OnDrawGizmosSelectedEvent
		{
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0x11CF330", Offset = "0x11CF330", VA = "0x11CF330")]
			add
			{
			}
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0x11CF418", Offset = "0x11CF418", VA = "0x11CF418")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event EventHandler OnEnableEvent
		{
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0x11CF500", Offset = "0x11CF500", VA = "0x11CF500")]
			add
			{
			}
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0x11CF5E8", Offset = "0x11CF5E8", VA = "0x11CF5E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event EventHandler OnGUIEvent
		{
			[Token(Token = "0x60000F7")]
			[Address(RVA = "0x11CF6D0", Offset = "0x11CF6D0", VA = "0x11CF6D0")]
			add
			{
			}
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0x11CF7B8", Offset = "0x11CF7B8", VA = "0x11CF7B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event EventHandlerParam<float> OnJointBreakEvent
		{
			[Token(Token = "0x60000F9")]
			[Address(RVA = "0x11CF8A0", Offset = "0x11CF8A0", VA = "0x11CF8A0")]
			add
			{
			}
			[Token(Token = "0x60000FA")]
			[Address(RVA = "0x11CF988", Offset = "0x11CF988", VA = "0x11CF988")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event EventHandler OnMouseDownEvent
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x11CFA70", Offset = "0x11CFA70", VA = "0x11CFA70")]
			add
			{
			}
			[Token(Token = "0x60000FC")]
			[Address(RVA = "0x11CFB58", Offset = "0x11CFB58", VA = "0x11CFB58")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event EventHandler OnMouseDragEvent
		{
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x11CFC40", Offset = "0x11CFC40", VA = "0x11CFC40")]
			add
			{
			}
			[Token(Token = "0x60000FE")]
			[Address(RVA = "0x11CFD28", Offset = "0x11CFD28", VA = "0x11CFD28")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event EventHandler OnMouseEnterEvent
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0x11CFE10", Offset = "0x11CFE10", VA = "0x11CFE10")]
			add
			{
			}
			[Token(Token = "0x6000100")]
			[Address(RVA = "0x11CFEF8", Offset = "0x11CFEF8", VA = "0x11CFEF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event EventHandler OnMouseExitEvent
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x11CFFE0", Offset = "0x11CFFE0", VA = "0x11CFFE0")]
			add
			{
			}
			[Token(Token = "0x6000102")]
			[Address(RVA = "0x11D00CC", Offset = "0x11D00CC", VA = "0x11D00CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event EventHandler OnMouseOverEvent
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x11D01B8", Offset = "0x11D01B8", VA = "0x11D01B8")]
			add
			{
			}
			[Token(Token = "0x6000104")]
			[Address(RVA = "0x11D02A4", Offset = "0x11D02A4", VA = "0x11D02A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event EventHandler OnMouseUpEvent
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x11D0390", Offset = "0x11D0390", VA = "0x11D0390")]
			add
			{
			}
			[Token(Token = "0x6000106")]
			[Address(RVA = "0x11D047C", Offset = "0x11D047C", VA = "0x11D047C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event EventHandler OnMouseUpAsButtonEvent
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0x11D0568", Offset = "0x11D0568", VA = "0x11D0568")]
			add
			{
			}
			[Token(Token = "0x6000108")]
			[Address(RVA = "0x11D0654", Offset = "0x11D0654", VA = "0x11D0654")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event EventHandlerParam<GameObject> OnParticleCollisionEvent
		{
			[Token(Token = "0x6000109")]
			[Address(RVA = "0x11D0740", Offset = "0x11D0740", VA = "0x11D0740")]
			add
			{
			}
			[Token(Token = "0x600010A")]
			[Address(RVA = "0x11D082C", Offset = "0x11D082C", VA = "0x11D082C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event EventHandler OnPostRenderEvent
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0x11D0918", Offset = "0x11D0918", VA = "0x11D0918")]
			add
			{
			}
			[Token(Token = "0x600010C")]
			[Address(RVA = "0x11D0A04", Offset = "0x11D0A04", VA = "0x11D0A04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event EventHandler OnPreCullEvent
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0x11D0AF0", Offset = "0x11D0AF0", VA = "0x11D0AF0")]
			add
			{
			}
			[Token(Token = "0x600010E")]
			[Address(RVA = "0x11D0BDC", Offset = "0x11D0BDC", VA = "0x11D0BDC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event EventHandler OnPreRenderEvent
		{
			[Token(Token = "0x600010F")]
			[Address(RVA = "0x11D0CC8", Offset = "0x11D0CC8", VA = "0x11D0CC8")]
			add
			{
			}
			[Token(Token = "0x6000110")]
			[Address(RVA = "0x11D0DB4", Offset = "0x11D0DB4", VA = "0x11D0DB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event EventHandlerMultipleParam<RenderTexture, RenderTexture> OnRenderImageEvent
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0x11D0EA0", Offset = "0x11D0EA0", VA = "0x11D0EA0")]
			add
			{
			}
			[Token(Token = "0x6000112")]
			[Address(RVA = "0x11D0F8C", Offset = "0x11D0F8C", VA = "0x11D0F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event EventHandler OnRenderObjectEvent
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0x11D1078", Offset = "0x11D1078", VA = "0x11D1078")]
			add
			{
			}
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x11D1164", Offset = "0x11D1164", VA = "0x11D1164")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event EventHandler OnServerInitializedEvent
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0x11D1250", Offset = "0x11D1250", VA = "0x11D1250")]
			add
			{
			}
			[Token(Token = "0x6000116")]
			[Address(RVA = "0x11D133C", Offset = "0x11D133C", VA = "0x11D133C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event EventHandlerParam<Collider> OnTriggerEnterEvent
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0x11C50E8", Offset = "0x11C50E8", VA = "0x11C50E8")]
			add
			{
			}
			[Token(Token = "0x6000118")]
			[Address(RVA = "0x11C5508", Offset = "0x11C5508", VA = "0x11C5508")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event EventHandlerParam<Collider2D> OnTriggerEnter2DEvent
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0x11D1428", Offset = "0x11D1428", VA = "0x11D1428")]
			add
			{
			}
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x11D1514", Offset = "0x11D1514", VA = "0x11D1514")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event EventHandlerParam<Collider> OnTriggerExitEvent
		{
			[Token(Token = "0x600011B")]
			[Address(RVA = "0x11C6998", Offset = "0x11C6998", VA = "0x11C6998")]
			add
			{
			}
			[Token(Token = "0x600011C")]
			[Address(RVA = "0x11C6BD8", Offset = "0x11C6BD8", VA = "0x11C6BD8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event EventHandlerParam<Collider2D> OnTriggerExit2DEvent
		{
			[Token(Token = "0x600011D")]
			[Address(RVA = "0x11D1600", Offset = "0x11D1600", VA = "0x11D1600")]
			add
			{
			}
			[Token(Token = "0x600011E")]
			[Address(RVA = "0x11D16EC", Offset = "0x11D16EC", VA = "0x11D16EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event EventHandlerParam<Collider> OnTriggerStayEvent
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0x11D17D8", Offset = "0x11D17D8", VA = "0x11D17D8")]
			add
			{
			}
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x11D18C4", Offset = "0x11D18C4", VA = "0x11D18C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event EventHandlerParam<Collider2D> OnTriggerStay2DEvent
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0x11D19B0", Offset = "0x11D19B0", VA = "0x11D19B0")]
			add
			{
			}
			[Token(Token = "0x6000122")]
			[Address(RVA = "0x11D1A9C", Offset = "0x11D1A9C", VA = "0x11D1A9C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event EventHandler OnValidateEvent
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0x11D1B88", Offset = "0x11D1B88", VA = "0x11D1B88")]
			add
			{
			}
			[Token(Token = "0x6000124")]
			[Address(RVA = "0x11D1C74", Offset = "0x11D1C74", VA = "0x11D1C74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event EventHandler OnWillRenderObjectEvent
		{
			[Token(Token = "0x6000125")]
			[Address(RVA = "0x11D1D60", Offset = "0x11D1D60", VA = "0x11D1D60")]
			add
			{
			}
			[Token(Token = "0x6000126")]
			[Address(RVA = "0x11D1E4C", Offset = "0x11D1E4C", VA = "0x11D1E4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event EventHandler ResetEvent
		{
			[Token(Token = "0x6000127")]
			[Address(RVA = "0x11D1F38", Offset = "0x11D1F38", VA = "0x11D1F38")]
			add
			{
			}
			[Token(Token = "0x6000128")]
			[Address(RVA = "0x11D2024", Offset = "0x11D2024", VA = "0x11D2024")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event EventHandler StartEvent
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0x11D2110", Offset = "0x11D2110", VA = "0x11D2110")]
			add
			{
			}
			[Token(Token = "0x600012A")]
			[Address(RVA = "0x11D21FC", Offset = "0x11D21FC", VA = "0x11D21FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event EventHandler UpdateEvent
		{
			[Token(Token = "0x600012B")]
			[Address(RVA = "0x11D22E8", Offset = "0x11D22E8", VA = "0x11D22E8")]
			add
			{
			}
			[Token(Token = "0x600012C")]
			[Address(RVA = "0x11D23D4", Offset = "0x11D23D4", VA = "0x11D23D4")]
			remove
			{
			}
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x11CC034", Offset = "0x11CC034", VA = "0x11CC034")]
		public EventDelegate()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x11D24C0", Offset = "0x11D24C0", VA = "0x11D24C0")]
		public void Awake()
		{
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x11D28F4", Offset = "0x11D28F4", VA = "0x11D28F4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x11D291C", Offset = "0x11D291C", VA = "0x11D291C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x11D2944", Offset = "0x11D2944", VA = "0x11D2944")]
		public void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x11D29B0", Offset = "0x11D29B0", VA = "0x11D29B0")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x11D29D8", Offset = "0x11D29D8", VA = "0x11D29D8")]
		public void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x11D2A44", Offset = "0x11D2A44", VA = "0x11D2A44")]
		public void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x11D2AB0", Offset = "0x11D2AB0", VA = "0x11D2AB0")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x11D2AD8", Offset = "0x11D2AD8", VA = "0x11D2AD8")]
		public void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x11D2B4C", Offset = "0x11D2B4C", VA = "0x11D2B4C")]
		public void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x11D2B74", Offset = "0x11D2B74", VA = "0x11D2B74")]
		public void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x11D2B9C", Offset = "0x11D2B9C", VA = "0x11D2B9C")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x11D2C08", Offset = "0x11D2C08", VA = "0x11D2C08")]
		public void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x11D2C74", Offset = "0x11D2C74", VA = "0x11D2C74")]
		public void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x11D2CE0", Offset = "0x11D2CE0", VA = "0x11D2CE0")]
		public void OnCollisionExit2D(Collision2D collision)
		{
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x11D2D4C", Offset = "0x11D2D4C", VA = "0x11D2D4C")]
		public void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x11D2DB8", Offset = "0x11D2DB8", VA = "0x11D2DB8")]
		public void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x11D2E24", Offset = "0x11D2E24", VA = "0x11D2E24")]
		public void OnConnectedToServer()
		{
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x11D2E4C", Offset = "0x11D2E4C", VA = "0x11D2E4C")]
		public void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x11D2EB8", Offset = "0x11D2EB8", VA = "0x11D2EB8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x11D2EE0", Offset = "0x11D2EE0", VA = "0x11D2EE0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x11D2F08", Offset = "0x11D2F08", VA = "0x11D2F08")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x11D2F30", Offset = "0x11D2F30", VA = "0x11D2F30")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x11D2F58", Offset = "0x11D2F58", VA = "0x11D2F58")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0x11D2F80", Offset = "0x11D2F80", VA = "0x11D2F80")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x11D2FA8", Offset = "0x11D2FA8", VA = "0x11D2FA8")]
		public void OnJointBreak(float breakForce)
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x11D3014", Offset = "0x11D3014", VA = "0x11D3014")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x11D303C", Offset = "0x11D303C", VA = "0x11D303C")]
		public void OnMouseDrag()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x11D3064", Offset = "0x11D3064", VA = "0x11D3064")]
		public void OnMouseEnter()
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x11D308C", Offset = "0x11D308C", VA = "0x11D308C")]
		public void OnMouseExit()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x11D30B4", Offset = "0x11D30B4", VA = "0x11D30B4")]
		public void OnMouseOver()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x11D30DC", Offset = "0x11D30DC", VA = "0x11D30DC")]
		public void OnMouseUp()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x11D3104", Offset = "0x11D3104", VA = "0x11D3104")]
		public void OnMouseUpAsButton()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x11D312C", Offset = "0x11D312C", VA = "0x11D312C")]
		public void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x11D3198", Offset = "0x11D3198", VA = "0x11D3198")]
		public void OnPostRender()
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x11D31C0", Offset = "0x11D31C0", VA = "0x11D31C0")]
		public void OnPreCull()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x11D31E8", Offset = "0x11D31E8", VA = "0x11D31E8")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x11D3210", Offset = "0x11D3210", VA = "0x11D3210")]
		public void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x11D3284", Offset = "0x11D3284", VA = "0x11D3284")]
		public void OnRenderObject()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x11D32AC", Offset = "0x11D32AC", VA = "0x11D32AC")]
		public void OnServerInitialized()
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x11D32D4", Offset = "0x11D32D4", VA = "0x11D32D4")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x11D3340", Offset = "0x11D3340", VA = "0x11D3340")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x11D33AC", Offset = "0x11D33AC", VA = "0x11D33AC")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x11D3418", Offset = "0x11D3418", VA = "0x11D3418")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x11D3484", Offset = "0x11D3484", VA = "0x11D3484")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x11D34F0", Offset = "0x11D34F0", VA = "0x11D34F0")]
		public void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x11D355C", Offset = "0x11D355C", VA = "0x11D355C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x11D3584", Offset = "0x11D3584", VA = "0x11D3584")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x11D35AC", Offset = "0x11D35AC", VA = "0x11D35AC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x11D35D4", Offset = "0x11D35D4", VA = "0x11D35D4")]
		public void Start()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x11D35FC", Offset = "0x11D35FC", VA = "0x11D35FC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x11D3624", Offset = "0x11D3624", VA = "0x11D3624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66AEC", Offset = "0xC66AEC")]
		private static void <AwakeEvent>m__0()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x11D3628", Offset = "0x11D3628", VA = "0x11D3628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66AFC", Offset = "0xC66AFC")]
		private static void <FixedUpdateEvent>m__1()
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x11D362C", Offset = "0x11D362C", VA = "0x11D362C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B0C", Offset = "0xC66B0C")]
		private static void <LateUpdateEvent>m__2()
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x11D3630", Offset = "0x11D3630", VA = "0x11D3630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B1C", Offset = "0xC66B1C")]
		private static void <OnAnimatorIKEvent>m__3(int layerIndex)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x11D3634", Offset = "0x11D3634", VA = "0x11D3634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B2C", Offset = "0xC66B2C")]
		private static void <OnAnimatorMoveEvent>m__4()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x11D3638", Offset = "0x11D3638", VA = "0x11D3638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B3C", Offset = "0xC66B3C")]
		private static void <OnApplicationFocusEvent>m__5(bool focusStatus)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x11D363C", Offset = "0x11D363C", VA = "0x11D363C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B4C", Offset = "0xC66B4C")]
		private static void <OnApplicationPauseEvent>m__6(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x11D3640", Offset = "0x11D3640", VA = "0x11D3640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B5C", Offset = "0xC66B5C")]
		private static void <OnApplicationQuitEvent>m__7()
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x11D3644", Offset = "0x11D3644", VA = "0x11D3644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B6C", Offset = "0xC66B6C")]
		private static void <OnAudioFilterReadEvent>m__8(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x11D3648", Offset = "0x11D3648", VA = "0x11D3648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B7C", Offset = "0xC66B7C")]
		private static void <OnBecameInvisibleEvent>m__9()
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x11D364C", Offset = "0x11D364C", VA = "0x11D364C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B8C", Offset = "0xC66B8C")]
		private static void <OnBecameVisibleEvent>m__A()
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x11D3650", Offset = "0x11D3650", VA = "0x11D3650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66B9C", Offset = "0xC66B9C")]
		private static void <OnCollisionEnterEvent>m__B(Collision collision)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x11D3654", Offset = "0x11D3654", VA = "0x11D3654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BAC", Offset = "0xC66BAC")]
		private static void <OnCollisionEnter2DEvent>m__C(Collision2D collision)
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x11D3658", Offset = "0x11D3658", VA = "0x11D3658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BBC", Offset = "0xC66BBC")]
		private static void <OnCollisionExitEvent>m__D(Collision collision)
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x11D365C", Offset = "0x11D365C", VA = "0x11D365C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BCC", Offset = "0xC66BCC")]
		private static void <OnCollisionExit2DEvent>m__E(Collision2D collision)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x11D3660", Offset = "0x11D3660", VA = "0x11D3660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BDC", Offset = "0xC66BDC")]
		private static void <OnCollisionStayEvent>m__F(Collision collision)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x11D3664", Offset = "0x11D3664", VA = "0x11D3664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BEC", Offset = "0xC66BEC")]
		private static void <OnCollisionStay2DEvent>m__10(Collision2D collision)
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x11D3668", Offset = "0x11D3668", VA = "0x11D3668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66BFC", Offset = "0xC66BFC")]
		private static void <OnConnectedToServerEvent>m__11()
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x11D366C", Offset = "0x11D366C", VA = "0x11D366C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C0C", Offset = "0xC66C0C")]
		private static void <OnControllerColliderHitEvent>m__12(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x11D3670", Offset = "0x11D3670", VA = "0x11D3670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C1C", Offset = "0xC66C1C")]
		private static void <OnDestroyEvent>m__13()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x11D3674", Offset = "0x11D3674", VA = "0x11D3674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C2C", Offset = "0xC66C2C")]
		private static void <OnDisableEvent>m__14()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x11D3678", Offset = "0x11D3678", VA = "0x11D3678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C3C", Offset = "0xC66C3C")]
		private static void <OnDrawGizmosEvent>m__15()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x11D367C", Offset = "0x11D367C", VA = "0x11D367C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C4C", Offset = "0xC66C4C")]
		private static void <OnDrawGizmosSelectedEvent>m__16()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x11D3680", Offset = "0x11D3680", VA = "0x11D3680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C5C", Offset = "0xC66C5C")]
		private static void <OnEnableEvent>m__17()
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x11D3684", Offset = "0x11D3684", VA = "0x11D3684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C6C", Offset = "0xC66C6C")]
		private static void <OnGUIEvent>m__18()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x11D3688", Offset = "0x11D3688", VA = "0x11D3688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C7C", Offset = "0xC66C7C")]
		private static void <OnJointBreakEvent>m__19(float breakForce)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x11D368C", Offset = "0x11D368C", VA = "0x11D368C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C8C", Offset = "0xC66C8C")]
		private static void <OnMouseDownEvent>m__1A()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x11D3690", Offset = "0x11D3690", VA = "0x11D3690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66C9C", Offset = "0xC66C9C")]
		private static void <OnMouseDragEvent>m__1B()
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x11D3694", Offset = "0x11D3694", VA = "0x11D3694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CAC", Offset = "0xC66CAC")]
		private static void <OnMouseEnterEvent>m__1C()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x11D3698", Offset = "0x11D3698", VA = "0x11D3698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CBC", Offset = "0xC66CBC")]
		private static void <OnMouseExitEvent>m__1D()
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x11D369C", Offset = "0x11D369C", VA = "0x11D369C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CCC", Offset = "0xC66CCC")]
		private static void <OnMouseOverEvent>m__1E()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x11D36A0", Offset = "0x11D36A0", VA = "0x11D36A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CDC", Offset = "0xC66CDC")]
		private static void <OnMouseUpEvent>m__1F()
		{
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x11D36A4", Offset = "0x11D36A4", VA = "0x11D36A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CEC", Offset = "0xC66CEC")]
		private static void <OnMouseUpAsButtonEvent>m__20()
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x11D36A8", Offset = "0x11D36A8", VA = "0x11D36A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66CFC", Offset = "0xC66CFC")]
		private static void <OnParticleCollisionEvent>m__21(GameObject other)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x11D36AC", Offset = "0x11D36AC", VA = "0x11D36AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D0C", Offset = "0xC66D0C")]
		private static void <OnPostRenderEvent>m__22()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x11D36B0", Offset = "0x11D36B0", VA = "0x11D36B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D1C", Offset = "0xC66D1C")]
		private static void <OnPreCullEvent>m__23()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x11D36B4", Offset = "0x11D36B4", VA = "0x11D36B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D2C", Offset = "0xC66D2C")]
		private static void <OnPreRenderEvent>m__24()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x11D36B8", Offset = "0x11D36B8", VA = "0x11D36B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D3C", Offset = "0xC66D3C")]
		private static void <OnRenderImageEvent>m__25(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x11D36BC", Offset = "0x11D36BC", VA = "0x11D36BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D4C", Offset = "0xC66D4C")]
		private static void <OnRenderObjectEvent>m__26()
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x11D36C0", Offset = "0x11D36C0", VA = "0x11D36C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D5C", Offset = "0xC66D5C")]
		private static void <OnServerInitializedEvent>m__27()
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x11D36C4", Offset = "0x11D36C4", VA = "0x11D36C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D6C", Offset = "0xC66D6C")]
		private static void <OnTriggerEnterEvent>m__28(Collider other)
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x11D36C8", Offset = "0x11D36C8", VA = "0x11D36C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D7C", Offset = "0xC66D7C")]
		private static void <OnTriggerEnter2DEvent>m__29(Collider2D other)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x11D36CC", Offset = "0x11D36CC", VA = "0x11D36CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D8C", Offset = "0xC66D8C")]
		private static void <OnTriggerExitEvent>m__2A(Collider other)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x11D36D0", Offset = "0x11D36D0", VA = "0x11D36D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66D9C", Offset = "0xC66D9C")]
		private static void <OnTriggerExit2DEvent>m__2B(Collider2D other)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x11D36D4", Offset = "0x11D36D4", VA = "0x11D36D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DAC", Offset = "0xC66DAC")]
		private static void <OnTriggerStayEvent>m__2C(Collider other)
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x11D36D8", Offset = "0x11D36D8", VA = "0x11D36D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DBC", Offset = "0xC66DBC")]
		private static void <OnTriggerStay2DEvent>m__2D(Collider2D other)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x11D36DC", Offset = "0x11D36DC", VA = "0x11D36DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DCC", Offset = "0xC66DCC")]
		private static void <OnValidateEvent>m__2E()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x11D36E0", Offset = "0x11D36E0", VA = "0x11D36E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DDC", Offset = "0xC66DDC")]
		private static void <OnWillRenderObjectEvent>m__2F()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x11D36E4", Offset = "0x11D36E4", VA = "0x11D36E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DEC", Offset = "0xC66DEC")]
		private static void <ResetEvent>m__30()
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x11D36E8", Offset = "0x11D36E8", VA = "0x11D36E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66DFC", Offset = "0xC66DFC")]
		private static void <StartEvent>m__31()
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x11D36EC", Offset = "0x11D36EC", VA = "0x11D36EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66E0C", Offset = "0xC66E0C")]
		private static void <UpdateEvent>m__32()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Instance
{
	[Token(Token = "0x200002D")]
	public class BE_AI : MonoBehaviour
	{
		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BehaviourSystem m_behaviourAsset;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_currentStateName;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float m_updateInterval;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_isInitialized;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_updateintervalDelta;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66E3C", Offset = "0xC66E3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66E3C", Offset = "0xC66E3C")]
		private BE_Objective <Objective>k__BackingField;

		[Token(Token = "0x1700001C")]
		public BE_Objective Objective
		{
			[Token(Token = "0x60001A0")]
			[Address(RVA = "0x11D37A0", Offset = "0x11D37A0", VA = "0x11D37A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66E78", Offset = "0xC66E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0x11D37A8", Offset = "0x11D37A8", VA = "0x11D37A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66E88", Offset = "0xC66E88")]
			set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public BehaviourSystem BehaviourSystem
		{
			[Token(Token = "0x60001A2")]
			[Address(RVA = "0x11D37B0", Offset = "0x11D37B0", VA = "0x11D37B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0x11D37B8", Offset = "0x11D37B8", VA = "0x11D37B8")]
			set
			{
			}
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x11D3740", Offset = "0x11D3740", VA = "0x11D3740")]
		public BE_AI()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x11D37C0", Offset = "0x11D37C0", VA = "0x11D37C0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x11D392C", Offset = "0x11D392C", VA = "0x11D392C", Slot = "5")]
		protected virtual void Update()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Managers
{
	[Token(Token = "0x200002E")]
	public static class ReferenceManager
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<BehaviourSystem, BehaviourSystem> sm_behaviourSystemMapping;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<Node, Node> sm_nodeMapping;

		[Token(Token = "0x60001A6")]
		public static T InstantiateBehaviourSystem<T>(T original) where T : BehaviourSystem
		{
			return null;
		}

		[Token(Token = "0x60001A7")]
		public static T InstantiateNode<T>(T original) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60001A8")]
		public static T GetBehaviourSystemInstance<T>(T original) where T : BehaviourSystem
		{
			return null;
		}

		[Token(Token = "0x60001A9")]
		public static T GetNodeInstance<T>(T original) where T : Node
		{
			return null;
		}
	}
}
namespace Cortopia.BE.Runtime.Nodes
{
	[Token(Token = "0x200002F")]
	public class Branch : Node
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x11D3B70", Offset = "0x11D3B70", VA = "0x11D3B70")]
		public Branch()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x11D3C70", Offset = "0x11D3C70", VA = "0x11D3C70", Slot = "6")]
		public override void UpdateNode()
		{
		}
	}
	[Token(Token = "0x2000030")]
	public class Node : ScriptableObject
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Rect m_nodeRect;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<BE_Transition> m_transitions;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<BE_Action> m_beActions;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BE_Transition m_activeTransition;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<BE_Action> m_actionsToProcessThisUpdate;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<BE_Action> m_processedActionsThisUpdate;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<BE_Action> m_finishedActions;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66EF0", Offset = "0xC66EF0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66EF0", Offset = "0xC66EF0")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66F2C", Offset = "0xC66F2C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66F2C", Offset = "0xC66F2C")]
		private MonoBehaviour <Owner>k__BackingField;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66F68", Offset = "0xC66F68")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66F68", Offset = "0xC66F68")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66FA4", Offset = "0xC66FA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66FA4", Offset = "0xC66FA4")]
		private bool <IsFinished>k__BackingField;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC66FE0", Offset = "0xC66FE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC66FE0", Offset = "0xC66FE0")]
		private int <Index>k__BackingField;

		[Token(Token = "0x1700001E")]
		public Rect NodeRect
		{
			[Token(Token = "0x60001AE")]
			[Address(RVA = "0x11D3D74", Offset = "0x11D3D74", VA = "0x11D3D74")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x11D3D80", Offset = "0x11D3D80", VA = "0x11D3D80")]
			set
			{
			}
		}

		[Token(Token = "0x1700001F")]
		public List<BE_Action> Actions
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0x11D3D8C", Offset = "0x11D3D8C", VA = "0x11D3D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		public string Name
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0x11D3D94", Offset = "0x11D3D94", VA = "0x11D3D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6701C", Offset = "0xC6701C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001B2")]
			[Address(RVA = "0x11D3D9C", Offset = "0x11D3D9C", VA = "0x11D3D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6702C", Offset = "0xC6702C")]
			set
			{
			}
		}

		[Token(Token = "0x17000021")]
		public MonoBehaviour Owner
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0x11C4CBC", Offset = "0x11C4CBC", VA = "0x11C4CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6703C", Offset = "0xC6703C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001B4")]
			[Address(RVA = "0x11D3DA4", Offset = "0x11D3DA4", VA = "0x11D3DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6704C", Offset = "0xC6704C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public bool IsRunning
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0x11D3DAC", Offset = "0x11D3DAC", VA = "0x11D3DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6705C", Offset = "0xC6705C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001B6")]
			[Address(RVA = "0x11D3DB4", Offset = "0x11D3DB4", VA = "0x11D3DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6706C", Offset = "0xC6706C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000023")]
		public bool IsFinished
		{
			[Token(Token = "0x60001B7")]
			[Address(RVA = "0x11C8938", Offset = "0x11C8938", VA = "0x11C8938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6707C", Offset = "0xC6707C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001B8")]
			[Address(RVA = "0x11D3D68", Offset = "0x11D3D68", VA = "0x11D3D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6708C", Offset = "0xC6708C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public int Index
		{
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0x11D3DC0", Offset = "0x11D3DC0", VA = "0x11D3DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6709C", Offset = "0xC6709C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x11D3DC8", Offset = "0x11D3DC8", VA = "0x11D3DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC670AC", Offset = "0xC670AC")]
			private set
			{
			}
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x11D3B74", Offset = "0x11D3B74", VA = "0x11D3B74")]
		public Node()
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x11D3DD0", Offset = "0x11D3DD0", VA = "0x11D3DD0")]
		private void RemoveActionSubAsset(BE_Action action)
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x11D3E70", Offset = "0x11D3E70", VA = "0x11D3E70")]
		public void Initialize(string name)
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x11D3EF0", Offset = "0x11D3EF0", VA = "0x11D3EF0", Slot = "4")]
		public virtual void SetOwner(BehaviourSystem system, MonoBehaviour owner)
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x11C807C", Offset = "0x11C807C", VA = "0x11C807C")]
		public void UpdateTransitions(List<Node> oldStates, List<Node> newStates)
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x11D4088", Offset = "0x11D4088", VA = "0x11D4088", Slot = "5")]
		public virtual void UpdateReferences()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x11D408C", Offset = "0x11D408C", VA = "0x11D408C")]
		public void UpdateActions()
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x11D4244", Offset = "0x11D4244", VA = "0x11D4244")]
		public void AddActionInstance(BE_Action action)
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x11D42BC", Offset = "0x11D42BC", VA = "0x11D42BC")]
		public void RemoveActionInstance(BE_Action action)
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x11D4360", Offset = "0x11D4360", VA = "0x11D4360")]
		public void ClearTransitions()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x11D43C0", Offset = "0x11D43C0", VA = "0x11D43C0")]
		public void AddTransition(BE_Transition transition)
		{
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x11D442C", Offset = "0x11D442C", VA = "0x11D442C")]
		public List<BE_Transition> GetTransitions()
		{
			return null;
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x11C85B4", Offset = "0x11C85B4", VA = "0x11C85B4")]
		public void EnterState()
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x11C8550", Offset = "0x11C8550", VA = "0x11C8550")]
		public void ExitState()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x11C8648", Offset = "0x11C8648", VA = "0x11C8648")]
		public void ForceFinish()
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x11C886C", Offset = "0x11C886C", VA = "0x11C886C")]
		public BE_Transition GetActiveTransition()
		{
			return null;
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x11C41D8", Offset = "0x11C41D8", VA = "0x11C41D8")]
		public void OnActionFinished(BE_Action action)
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x11C4868", Offset = "0x11C4868", VA = "0x11C4868")]
		public void PerformTransition(int index)
		{
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x11D449C", Offset = "0x11D449C", VA = "0x11D449C")]
		private void AddActionsToProcess()
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x11D45C8", Offset = "0x11D45C8", VA = "0x11D45C8")]
		public void ProcessActions()
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x11D3C98", Offset = "0x11D3C98", VA = "0x11D3C98", Slot = "6")]
		public virtual void UpdateNode()
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x11D47F8", Offset = "0x11D47F8", VA = "0x11D47F8")]
		public void OnRemove()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Nodes.Properties
{
	[Token(Token = "0x2000031")]
	public static class NodeColor
	{
		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IDictionary<NodePriority, Color> StateTypeColorDictionary;

		[Token(Token = "0x17000025")]
		public static Color Neutral
		{
			[Token(Token = "0x60001D0")]
			[Address(RVA = "0x11D4864", Offset = "0x11D4864", VA = "0x11D4864")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000026")]
		public static Color Normal
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0x11D4870", Offset = "0x11D4870", VA = "0x11D4870")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000027")]
		public static Color Prioritized
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x11D487C", Offset = "0x11D487C", VA = "0x11D487C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000028")]
		public static Color Imminent
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0x11D4888", Offset = "0x11D4888", VA = "0x11D4888")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x11D4894", Offset = "0x11D4894", VA = "0x11D4894")]
		public static Color GetStateColor(NodePriority type)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000032")]
	public enum NodePriority
	{
		[Token(Token = "0x4000107")]
		Normal,
		[Token(Token = "0x4000108")]
		Prioritized,
		[Token(Token = "0x4000109")]
		Imminent
	}
}
namespace Cortopia.BE.Runtime.Nodes
{
	[Token(Token = "0x2000033")]
	public class State : Node
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<BehaviourTree> m_behaviourTrees;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC670CC", Offset = "0xC670CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC670CC", Offset = "0xC670CC")]
		private Branch <CurrentBranch>k__BackingField;

		[Token(Token = "0x17000029")]
		public List<BehaviourTree> BehaviourTrees
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0x11D4BA4", Offset = "0x11D4BA4", VA = "0x11D4BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public Branch CurrentBranch
		{
			[Token(Token = "0x60001D8")]
			[Address(RVA = "0x11D4BAC", Offset = "0x11D4BAC", VA = "0x11D4BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67108", Offset = "0xC67108")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0x11D4BB4", Offset = "0x11D4BB4", VA = "0x11D4BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67118", Offset = "0xC67118")]
			private set
			{
			}
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x11D4B34", Offset = "0x11D4B34", VA = "0x11D4B34")]
		public State()
		{
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x11D4BBC", Offset = "0x11D4BBC", VA = "0x11D4BBC", Slot = "4")]
		public override void SetOwner(BehaviourSystem system, MonoBehaviour owner)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x11D4D5C", Offset = "0x11D4D5C", VA = "0x11D4D5C", Slot = "5")]
		public override void UpdateReferences()
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x11D4E6C", Offset = "0x11D4E6C", VA = "0x11D4E6C")]
		public void AddBehaviourTreeInstance(BehaviourTree behaviourTree)
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x11D4EE4", Offset = "0x11D4EE4", VA = "0x11D4EE4")]
		public void RemoveActionInstance(BehaviourTree behaviourTree)
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x11D4F88", Offset = "0x11D4F88", VA = "0x11D4F88", Slot = "6")]
		public override void UpdateNode()
		{
		}
	}
}
namespace Cortopia.BE.Runtime
{
	[Token(Token = "0x2000034")]
	public class BE_Objective
	{
		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Func<bool>> m_objectiveConditions;

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x11C7A6C", Offset = "0x11C7A6C", VA = "0x11C7A6C")]
		public BE_Objective([Optional] Func<bool> condition)
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x11C7B0C", Offset = "0x11C7B0C", VA = "0x11C7B0C")]
		public void AddCondition(Func<bool> condition)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x11C7B78", Offset = "0x11C7B78", VA = "0x11C7B78")]
		public bool AreAllConditionsMet()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000035")]
	public class StateMachine : BehaviourSystem
	{
		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool m_isLooping;

		[Token(Token = "0x1700002B")]
		public override bool IsLooping
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0x11D50B0", Offset = "0x11D50B0", VA = "0x11D50B0", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0x11D50B8", Offset = "0x11D50B8", VA = "0x11D50B8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x11D50AC", Offset = "0x11D50AC", VA = "0x11D50AC")]
		public StateMachine()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Transition
{
	[Serializable]
	[Token(Token = "0x2000036")]
	public class BE_Transition
	{
		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Node From;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Node To;

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x11D50C4", Offset = "0x11D50C4", VA = "0x11D50C4")]
		public BE_Transition(Node from, Node to)
		{
		}
	}
}
namespace Cortopia.DebugUtilities.DebugCamera
{
	[Token(Token = "0x2000037")]
	public class EditorFlyMode : MonoBehaviour
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x11D50FC", Offset = "0x11D50FC", VA = "0x11D50FC")]
		public EditorFlyMode()
		{
		}
	}
}
namespace Cortopia.DebugUtilities
{
	[Token(Token = "0x2000038")]
	public static class DebugUtility
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x11D5104", Offset = "0x11D5104", VA = "0x11D5104")]
		public static void DrawDebugCoordinate(Vector3 position, float size, Color color, float duration)
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x11D545C", Offset = "0x11D545C", VA = "0x11D545C")]
		public static void DrawDebugAxis(Vector3 position, Quaternion rotation, float size)
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x11D5700", Offset = "0x11D5700", VA = "0x11D5700")]
		public static DebugBillboardText CreateDebugText(GameObject gameObject, [Optional] string text)
		{
			return null;
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x11D5A60", Offset = "0x11D5A60", VA = "0x11D5A60")]
		public static DebugBillboardText CreateDebugText(GameObject gameObject, Vector3 offset, [Optional] string text)
		{
			return null;
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x11D5820", Offset = "0x11D5820", VA = "0x11D5820")]
		public static DebugBillboardText CreateDebugText(GameObject gameObject, Vector3 offset, TextProperties properties, [Optional] string text)
		{
			return null;
		}
	}
}
namespace Cortopia.DebugUtilities.Text
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC67138", Offset = "0xC67138")]
	public class DebugBillboardText : MonoBehaviour
	{
		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMesh;

		[Token(Token = "0x4000111")]
		private const float TextHeight = 2f;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_camera;

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x11D5BFC", Offset = "0x11D5BFC", VA = "0x11D5BFC")]
		public DebugBillboardText()
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x11D5AE0", Offset = "0x11D5AE0", VA = "0x11D5AE0")]
		public void Initialize(TextProperties textProperties)
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x11D5BC8", Offset = "0x11D5BC8", VA = "0x11D5BC8")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x11D5C04", Offset = "0x11D5C04", VA = "0x11D5C04")]
		public void AppendText(string text)
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x11D5C64", Offset = "0x11D5C64", VA = "0x11D5C64")]
		public void SetTextColor(Color color)
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x11D5CC8", Offset = "0x11D5CC8", VA = "0x11D5CC8")]
		public void SetProperties(TextProperties properties)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x11D5DA0", Offset = "0x11D5DA0", VA = "0x11D5DA0")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public struct TextProperties
	{
		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6719C", Offset = "0xC6719C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6719C", Offset = "0xC6719C")]
		private Color <FontColor>k__BackingField;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC671D8", Offset = "0xC671D8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC671D8", Offset = "0xC671D8")]
		private bool <AutoSizeTextContainer>k__BackingField;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67214", Offset = "0xC67214")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC67214", Offset = "0xC67214")]
		private float <FontSize>k__BackingField;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67250", Offset = "0xC67250")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC67250", Offset = "0xC67250")]
		private TextAlignmentOptions <Alignment>k__BackingField;

		[Token(Token = "0x1700002C")]
		public Color FontColor
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0x11D60D8", Offset = "0x11D60D8", VA = "0x11D60D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6728C", Offset = "0xC6728C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0x11D60E4", Offset = "0x11D60E4", VA = "0x11D60E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6729C", Offset = "0xC6729C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002D")]
		public bool AutoSizeTextContainer
		{
			[Token(Token = "0x60001F6")]
			[Address(RVA = "0x11D60F0", Offset = "0x11D60F0", VA = "0x11D60F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672AC", Offset = "0xC672AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0x11D60F8", Offset = "0x11D60F8", VA = "0x11D60F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672BC", Offset = "0xC672BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		public float FontSize
		{
			[Token(Token = "0x60001F8")]
			[Address(RVA = "0x11D6104", Offset = "0x11D6104", VA = "0x11D6104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672CC", Offset = "0xC672CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60001F9")]
			[Address(RVA = "0x11D610C", Offset = "0x11D610C", VA = "0x11D610C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672DC", Offset = "0xC672DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		public TextAlignmentOptions Alignment
		{
			[Token(Token = "0x60001FA")]
			[Address(RVA = "0x11D6114", Offset = "0x11D6114", VA = "0x11D6114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672EC", Offset = "0xC672EC")]
			get
			{
				return default(TextAlignmentOptions);
			}
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0x11D611C", Offset = "0x11D611C", VA = "0x11D611C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC672FC", Offset = "0xC672FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public static TextProperties Default
		{
			[Token(Token = "0x60001FC")]
			[Address(RVA = "0x11D57DC", Offset = "0x11D57DC", VA = "0x11D57DC")]
			get
			{
				return default(TextProperties);
			}
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x11D6098", Offset = "0x11D6098", VA = "0x11D6098")]
		public TextProperties(bool autoSizeTextContainer = false, float fontSize = 2f, TextAlignmentOptions alignment = TextAlignmentOptions.Center)
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x200003B")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6740C", Offset = "0xC6740C")]
		private sealed class <DOFade>c__AnonStorey0
		{
			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AudioSource target;

			[Token(Token = "0x6001304")]
			[Address(RVA = "0x11D663C", Offset = "0x11D663C", VA = "0x11D663C")]
			public <DOFade>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001305")]
			[Address(RVA = "0x11D6E74", Offset = "0x11D6E74", VA = "0x11D6E74")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001306")]
			[Address(RVA = "0x11D6EA0", Offset = "0x11D6EA0", VA = "0x11D6EA0")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6741C", Offset = "0xC6741C")]
		private sealed class <DOPitch>c__AnonStorey1
		{
			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AudioSource target;

			[Token(Token = "0x6001307")]
			[Address(RVA = "0x11D6794", Offset = "0x11D6794", VA = "0x11D6794")]
			public <DOPitch>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x11D6EDC", Offset = "0x11D6EDC", VA = "0x11D6EDC")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x11D6F08", Offset = "0x11D6F08", VA = "0x11D6F08")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6742C", Offset = "0xC6742C")]
		private sealed class <DOSetFloat>c__AnonStorey2
		{
			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AudioMixer target;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string floatName;

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x11D6910", Offset = "0x11D6910", VA = "0x11D6910")]
			public <DOSetFloat>c__AnonStorey2()
			{
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x11D6F44", Offset = "0x11D6F44", VA = "0x11D6F44")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x11D6F8C", Offset = "0x11D6F8C", VA = "0x11D6F8C")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x11D64C4", Offset = "0x11D64C4", VA = "0x11D64C4")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x11D6644", Offset = "0x11D6644", VA = "0x11D6644")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x11D679C", Offset = "0x11D679C", VA = "0x11D679C")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x11D6918", Offset = "0x11D6918", VA = "0x11D6918")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x11D6994", Offset = "0x11D6994", VA = "0x11D6994")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x11D6A10", Offset = "0x11D6A10", VA = "0x11D6A10")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x11D6A7C", Offset = "0x11D6A7C", VA = "0x11D6A7C")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x11D6B08", Offset = "0x11D6B08", VA = "0x11D6B08")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x11D6B74", Offset = "0x11D6B74", VA = "0x11D6B74")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x11D6BE0", Offset = "0x11D6BE0", VA = "0x11D6BE0")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x11D6C4C", Offset = "0x11D6C4C", VA = "0x11D6C4C")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x11D6CB8", Offset = "0x11D6CB8", VA = "0x11D6CB8")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x11D6D2C", Offset = "0x11D6D2C", VA = "0x11D6D2C")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x11D6D9C", Offset = "0x11D6D9C", VA = "0x11D6D9C")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x11D6E08", Offset = "0x11D6E08", VA = "0x11D6E08")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200003C")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC674FC", Offset = "0xC674FC")]
		private sealed class <DOMove>c__AnonStorey0
		{
			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x600130D")]
			[Address(RVA = "0x11D7160", Offset = "0x11D7160", VA = "0x11D7160")]
			public <DOMove>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x11D8D0C", Offset = "0x11D8D0C", VA = "0x11D8D0C")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6750C", Offset = "0xC6750C")]
		private sealed class <DOMoveX>c__AnonStorey1
		{
			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x11D7314", Offset = "0x11D7314", VA = "0x11D7314")]
			public <DOMoveX>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x11D8D38", Offset = "0x11D8D38", VA = "0x11D8D38")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6751C", Offset = "0xC6751C")]
		private sealed class <DOMoveY>c__AnonStorey2
		{
			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x11D74C8", Offset = "0x11D74C8", VA = "0x11D74C8")]
			public <DOMoveY>c__AnonStorey2()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x11D8D64", Offset = "0x11D8D64", VA = "0x11D8D64")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6752C", Offset = "0xC6752C")]
		private sealed class <DOMoveZ>c__AnonStorey3
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x11D767C", Offset = "0x11D767C", VA = "0x11D767C")]
			public <DOMoveZ>c__AnonStorey3()
			{
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x11D8D90", Offset = "0x11D8D90", VA = "0x11D8D90")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6753C", Offset = "0xC6753C")]
		private sealed class <DORotate>c__AnonStorey4
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x11D7810", Offset = "0x11D7810", VA = "0x11D7810")]
			public <DORotate>c__AnonStorey4()
			{
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x11D8E14", Offset = "0x11D8E14", VA = "0x11D8E14")]
			internal Quaternion <>m__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6754C", Offset = "0xC6754C")]
		private sealed class <DOLookAt>c__AnonStorey5
		{
			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x11D7A48", Offset = "0x11D7A48", VA = "0x11D7A48")]
			public <DOLookAt>c__AnonStorey5()
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x11D8CE0", Offset = "0x11D8CE0", VA = "0x11D8CE0")]
			internal Quaternion <>m__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6755C", Offset = "0xC6755C")]
		private sealed class <DOJump>c__AnonStorey6
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float startPosY;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool offsetYSet;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Sequence s;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endValue;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float offsetY;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Tween yTween;

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x11D7FBC", Offset = "0x11D7FBC", VA = "0x11D7FBC")]
			public <DOJump>c__AnonStorey6()
			{
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x11D887C", Offset = "0x11D887C", VA = "0x11D887C")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x11D88A8", Offset = "0x11D88A8", VA = "0x11D88A8")]
			internal void <>m__1()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x11D88E0", Offset = "0x11D88E0", VA = "0x11D88E0")]
			internal Vector3 <>m__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x11D890C", Offset = "0x11D890C", VA = "0x11D890C")]
			internal Vector3 <>m__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x11D8938", Offset = "0x11D8938", VA = "0x11D8938")]
			internal void <>m__4()
			{
			}
		}

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6756C", Offset = "0xC6756C")]
		private sealed class <DOPath>c__AnonStorey7
		{
			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x11D8208", Offset = "0x11D8208", VA = "0x11D8208")]
			public <DOPath>c__AnonStorey7()
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x11D8DBC", Offset = "0x11D8DBC", VA = "0x11D8DBC")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6757C", Offset = "0xC6757C")]
		private sealed class <DOLocalPath>c__AnonStorey8
		{
			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform trans;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Rigidbody target;

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x11D84A4", Offset = "0x11D84A4", VA = "0x11D84A4")]
			public <DOLocalPath>c__AnonStorey8()
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x11D8A20", Offset = "0x11D8A20", VA = "0x11D8A20")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001323")]
			[Address(RVA = "0x11D8A4C", Offset = "0x11D8A4C", VA = "0x11D8A4C")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6758C", Offset = "0xC6758C")]
		private sealed class <DOPath>c__AnonStorey9
		{
			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody target;

			[Token(Token = "0x6001324")]
			[Address(RVA = "0x11D866C", Offset = "0x11D866C", VA = "0x11D866C")]
			public <DOPath>c__AnonStorey9()
			{
			}

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x11D8DE8", Offset = "0x11D8DE8", VA = "0x11D8DE8")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6759C", Offset = "0xC6759C")]
		private sealed class <DOLocalPath>c__AnonStoreyA
		{
			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Transform trans;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Rigidbody target;

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x11D8874", Offset = "0x11D8874", VA = "0x11D8874")]
			public <DOLocalPath>c__AnonStoreyA()
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x11D8B80", Offset = "0x11D8B80", VA = "0x11D8B80")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x11D8BAC", Offset = "0x11D8BAC", VA = "0x11D8BAC")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x11D6FCC", Offset = "0x11D6FCC", VA = "0x11D6FCC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x11D7168", Offset = "0x11D7168", VA = "0x11D7168")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x11D731C", Offset = "0x11D731C", VA = "0x11D731C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x11D74D0", Offset = "0x11D74D0", VA = "0x11D74D0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x11D7684", Offset = "0x11D7684", VA = "0x11D7684")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x11D7818", Offset = "0x11D7818", VA = "0x11D7818")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x11D7A50", Offset = "0x11D7A50", VA = "0x11D7A50")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x11D7FC4", Offset = "0x11D7FC4", VA = "0x11D7FC4")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x11D8210", Offset = "0x11D8210", VA = "0x11D8210")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x11D84AC", Offset = "0x11D84AC", VA = "0x11D84AC")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x11D8674", Offset = "0x11D8674", VA = "0x11D8674")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200003D")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6760C", Offset = "0xC6760C")]
		private sealed class <DOMove>c__AnonStorey0
		{
			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody2D target;

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x11D8FCC", Offset = "0x11D8FCC", VA = "0x11D8FCC")]
			public <DOMove>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600132A")]
			[Address(RVA = "0x11D9B4C", Offset = "0x11D9B4C", VA = "0x11D9B4C")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6761C", Offset = "0xC6761C")]
		private sealed class <DOMoveX>c__AnonStorey1
		{
			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody2D target;

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x11D9174", Offset = "0x11D9174", VA = "0x11D9174")]
			public <DOMoveX>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x11D9B78", Offset = "0x11D9B78", VA = "0x11D9B78")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6762C", Offset = "0xC6762C")]
		private sealed class <DOMoveY>c__AnonStorey2
		{
			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody2D target;

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x11D931C", Offset = "0x11D931C", VA = "0x11D931C")]
			public <DOMoveY>c__AnonStorey2()
			{
			}

			[Token(Token = "0x600132E")]
			[Address(RVA = "0x11D9BA4", Offset = "0x11D9BA4", VA = "0x11D9BA4")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6763C", Offset = "0xC6763C")]
		private sealed class <DORotate>c__AnonStorey3
		{
			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody2D target;

			[Token(Token = "0x600132F")]
			[Address(RVA = "0x11D9488", Offset = "0x11D9488", VA = "0x11D9488")]
			public <DORotate>c__AnonStorey3()
			{
			}

			[Token(Token = "0x6001330")]
			[Address(RVA = "0x11D9BD0", Offset = "0x11D9BD0", VA = "0x11D9BD0")]
			internal float <>m__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6764C", Offset = "0xC6764C")]
		private sealed class <DOJump>c__AnonStorey4
		{
			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Rigidbody2D target;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float startPosY;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool offsetYSet;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Sequence s;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector2 endValue;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float offsetY;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Tween yTween;

			[Token(Token = "0x6001331")]
			[Address(RVA = "0x11D98CC", Offset = "0x11D98CC", VA = "0x11D98CC")]
			public <DOJump>c__AnonStorey4()
			{
			}

			[Token(Token = "0x6001332")]
			[Address(RVA = "0x11D98D4", Offset = "0x11D98D4", VA = "0x11D98D4")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001333")]
			[Address(RVA = "0x11D9900", Offset = "0x11D9900", VA = "0x11D9900")]
			internal void <>m__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001334")]
			[Address(RVA = "0x11D9944", Offset = "0x11D9944", VA = "0x11D9944")]
			internal void <>m__2()
			{
			}

			[Token(Token = "0x6001335")]
			[Address(RVA = "0x11D997C", Offset = "0x11D997C", VA = "0x11D997C")]
			internal Vector2 <>m__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001336")]
			[Address(RVA = "0x11D99A8", Offset = "0x11D99A8", VA = "0x11D99A8")]
			internal void <>m__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001337")]
			[Address(RVA = "0x11D99EC", Offset = "0x11D99EC", VA = "0x11D99EC")]
			internal void <>m__5()
			{
			}
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x11D8E40", Offset = "0x11D8E40", VA = "0x11D8E40")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x11D8FD4", Offset = "0x11D8FD4", VA = "0x11D8FD4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x11D917C", Offset = "0x11D917C", VA = "0x11D917C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x11D9324", Offset = "0x11D9324", VA = "0x11D9324")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x11D9490", Offset = "0x11D9490", VA = "0x11D9490")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200003E")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC676AC", Offset = "0xC676AC")]
		private sealed class <DOColor>c__AnonStorey0
		{
			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SpriteRenderer target;

			[Token(Token = "0x6001338")]
			[Address(RVA = "0x11D9D74", Offset = "0x11D9D74", VA = "0x11D9D74")]
			public <DOColor>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001339")]
			[Address(RVA = "0x11DA400", Offset = "0x11DA400", VA = "0x11DA400")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600133A")]
			[Address(RVA = "0x11DA42C", Offset = "0x11DA42C", VA = "0x11DA42C")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC676BC", Offset = "0xC676BC")]
		private sealed class <DOFade>c__AnonStorey1
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SpriteRenderer target;

			[Token(Token = "0x600133B")]
			[Address(RVA = "0x11D9ECC", Offset = "0x11D9ECC", VA = "0x11D9ECC")]
			public <DOFade>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600133C")]
			[Address(RVA = "0x11DA488", Offset = "0x11DA488", VA = "0x11DA488")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600133D")]
			[Address(RVA = "0x11DA4B4", Offset = "0x11DA4B4", VA = "0x11DA4B4")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC676CC", Offset = "0xC676CC")]
		private sealed class <DOBlendableColor>c__AnonStorey2
		{
			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Color to;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal SpriteRenderer target;

			[Token(Token = "0x600133E")]
			[Address(RVA = "0x11DA310", Offset = "0x11DA310", VA = "0x11DA310")]
			public <DOBlendableColor>c__AnonStorey2()
			{
			}

			[Token(Token = "0x600133F")]
			[Address(RVA = "0x11DA318", Offset = "0x11DA318", VA = "0x11DA318")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001340")]
			[Address(RVA = "0x11DA324", Offset = "0x11DA324", VA = "0x11DA324")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x11D9BFC", Offset = "0x11D9BFC", VA = "0x11D9BFC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x11D9D7C", Offset = "0x11D9D7C", VA = "0x11D9D7C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x11D9ED4", Offset = "0x11D9ED4", VA = "0x11D9ED4")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x11DA0E0", Offset = "0x11DA0E0", VA = "0x11DA0E0")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200003F")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000040")]
		public static class Utils
		{
			[Token(Token = "0x6000248")]
			[Address(RVA = "0x10CAB18", Offset = "0x10CAB18", VA = "0x10CAB18")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6796C", Offset = "0xC6796C")]
		private sealed class <DOFade>c__AnonStorey0
		{
			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal CanvasGroup target;

			[Token(Token = "0x6001341")]
			[Address(RVA = "0x11DA660", Offset = "0x11DA660", VA = "0x11DA660")]
			public <DOFade>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x11DF114", Offset = "0x11DF114", VA = "0x11DF114")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x11DF140", Offset = "0x11DF140", VA = "0x11DF140")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6797C", Offset = "0xC6797C")]
		private sealed class <DOColor>c__AnonStorey1
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Graphic target;

			[Token(Token = "0x6001344")]
			[Address(RVA = "0x11DA7E0", Offset = "0x11DA7E0", VA = "0x11DA7E0")]
			public <DOColor>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6001345")]
			[Address(RVA = "0x11DEEC4", Offset = "0x11DEEC4", VA = "0x11DEEC4")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001346")]
			[Address(RVA = "0x11DEEF8", Offset = "0x11DEEF8", VA = "0x11DEEF8")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6798C", Offset = "0xC6798C")]
		private sealed class <DOFade>c__AnonStorey2
		{
			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Graphic target;

			[Token(Token = "0x6001347")]
			[Address(RVA = "0x11DA938", Offset = "0x11DA938", VA = "0x11DA938")]
			public <DOFade>c__AnonStorey2()
			{
			}

			[Token(Token = "0x6001348")]
			[Address(RVA = "0x11DF17C", Offset = "0x11DF17C", VA = "0x11DF17C")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001349")]
			[Address(RVA = "0x11DF1B0", Offset = "0x11DF1B0", VA = "0x11DF1B0")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6799C", Offset = "0xC6799C")]
		private sealed class <DOColor>c__AnonStorey3
		{
			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Image target;

			[Token(Token = "0x600134A")]
			[Address(RVA = "0x11DAAB8", Offset = "0x11DAAB8", VA = "0x11DAAB8")]
			public <DOColor>c__AnonStorey3()
			{
			}

			[Token(Token = "0x600134B")]
			[Address(RVA = "0x11DEFF4", Offset = "0x11DEFF4", VA = "0x11DEFF4")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600134C")]
			[Address(RVA = "0x11DF028", Offset = "0x11DF028", VA = "0x11DF028")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679AC", Offset = "0xC679AC")]
		private sealed class <DOFade>c__AnonStorey4
		{
			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Image target;

			[Token(Token = "0x600134D")]
			[Address(RVA = "0x11DAC10", Offset = "0x11DAC10", VA = "0x11DAC10")]
			public <DOFade>c__AnonStorey4()
			{
			}

			[Token(Token = "0x600134E")]
			[Address(RVA = "0x11DF2AC", Offset = "0x11DF2AC", VA = "0x11DF2AC")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600134F")]
			[Address(RVA = "0x11DF2E0", Offset = "0x11DF2E0", VA = "0x11DF2E0")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679BC", Offset = "0xC679BC")]
		private sealed class <DOFillAmount>c__AnonStorey5
		{
			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Image target;

			[Token(Token = "0x6001350")]
			[Address(RVA = "0x11DAD94", Offset = "0x11DAD94", VA = "0x11DAD94")]
			public <DOFillAmount>c__AnonStorey5()
			{
			}

			[Token(Token = "0x6001351")]
			[Address(RVA = "0x11DF3CC", Offset = "0x11DF3CC", VA = "0x11DF3CC")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001352")]
			[Address(RVA = "0x11DF3F8", Offset = "0x11DF3F8", VA = "0x11DF3F8")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679CC", Offset = "0xC679CC")]
		private sealed class <DOFlexibleSize>c__AnonStorey6
		{
			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LayoutElement target;

			[Token(Token = "0x6001353")]
			[Address(RVA = "0x11DB130", Offset = "0x11DB130", VA = "0x11DB130")]
			public <DOFlexibleSize>c__AnonStorey6()
			{
			}

			[Token(Token = "0x6001354")]
			[Address(RVA = "0x11DF434", Offset = "0x11DF434", VA = "0x11DF434")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001355")]
			[Address(RVA = "0x11DF4C0", Offset = "0x11DF4C0", VA = "0x11DF4C0")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679DC", Offset = "0xC679DC")]
		private sealed class <DOMinSize>c__AnonStorey7
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LayoutElement target;

			[Token(Token = "0x6001356")]
			[Address(RVA = "0x11DB2B8", Offset = "0x11DB2B8", VA = "0x11DB2B8")]
			public <DOMinSize>c__AnonStorey7()
			{
			}

			[Token(Token = "0x6001357")]
			[Address(RVA = "0x11DF78C", Offset = "0x11DF78C", VA = "0x11DF78C")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001358")]
			[Address(RVA = "0x11DF818", Offset = "0x11DF818", VA = "0x11DF818")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679EC", Offset = "0xC679EC")]
		private sealed class <DOPreferredSize>c__AnonStorey8
		{
			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal LayoutElement target;

			[Token(Token = "0x6001359")]
			[Address(RVA = "0x11DB440", Offset = "0x11DB440", VA = "0x11DB440")]
			public <DOPreferredSize>c__AnonStorey8()
			{
			}

			[Token(Token = "0x600135A")]
			[Address(RVA = "0x11DFAB4", Offset = "0x11DFAB4", VA = "0x11DFAB4")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x11DFB40", Offset = "0x11DFB40", VA = "0x11DFB40")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC679FC", Offset = "0xC679FC")]
		private sealed class <DOColor>c__AnonStorey9
		{
			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Outline target;

			[Token(Token = "0x600135C")]
			[Address(RVA = "0x11DB5C0", Offset = "0x11DB5C0", VA = "0x11DB5C0")]
			public <DOColor>c__AnonStorey9()
			{
			}

			[Token(Token = "0x600135D")]
			[Address(RVA = "0x11DF08C", Offset = "0x11DF08C", VA = "0x11DF08C")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600135E")]
			[Address(RVA = "0x11DF0B8", Offset = "0x11DF0B8", VA = "0x11DF0B8")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A0C", Offset = "0xC67A0C")]
		private sealed class <DOFade>c__AnonStoreyA
		{
			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Outline target;

			[Token(Token = "0x600135F")]
			[Address(RVA = "0x11DB718", Offset = "0x11DB718", VA = "0x11DB718")]
			public <DOFade>c__AnonStoreyA()
			{
			}

			[Token(Token = "0x6001360")]
			[Address(RVA = "0x11DF344", Offset = "0x11DF344", VA = "0x11DF344")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001361")]
			[Address(RVA = "0x11DF370", Offset = "0x11DF370", VA = "0x11DF370")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A1C", Offset = "0xC67A1C")]
		private sealed class <DOScale>c__AnonStoreyB
		{
			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Outline target;

			[Token(Token = "0x6001362")]
			[Address(RVA = "0x11DB880", Offset = "0x11DB880", VA = "0x11DB880")]
			public <DOScale>c__AnonStoreyB()
			{
			}

			[Token(Token = "0x6001363")]
			[Address(RVA = "0x11DFD00", Offset = "0x11DFD00", VA = "0x11DFD00")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001364")]
			[Address(RVA = "0x11DFD2C", Offset = "0x11DFD2C", VA = "0x11DFD2C")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A2C", Offset = "0xC67A2C")]
		private sealed class <DOAnchorPos>c__AnonStoreyC
		{
			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001365")]
			[Address(RVA = "0x11DBA08", Offset = "0x11DBA08", VA = "0x11DBA08")]
			public <DOAnchorPos>c__AnonStoreyC()
			{
			}

			[Token(Token = "0x6001366")]
			[Address(RVA = "0x11DE88C", Offset = "0x11DE88C", VA = "0x11DE88C")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001367")]
			[Address(RVA = "0x11DE8B8", Offset = "0x11DE8B8", VA = "0x11DE8B8")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A3C", Offset = "0xC67A3C")]
		private sealed class <DOAnchorPosX>c__AnonStoreyD
		{
			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001368")]
			[Address(RVA = "0x11DBBA4", Offset = "0x11DBBA4", VA = "0x11DBBA4")]
			public <DOAnchorPosX>c__AnonStoreyD()
			{
			}

			[Token(Token = "0x6001369")]
			[Address(RVA = "0x11DEAFC", Offset = "0x11DEAFC", VA = "0x11DEAFC")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600136A")]
			[Address(RVA = "0x11DEB28", Offset = "0x11DEB28", VA = "0x11DEB28")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A4C", Offset = "0xC67A4C")]
		private sealed class <DOAnchorPosY>c__AnonStoreyE
		{
			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600136B")]
			[Address(RVA = "0x11DBD40", Offset = "0x11DBD40", VA = "0x11DBD40")]
			public <DOAnchorPosY>c__AnonStoreyE()
			{
			}

			[Token(Token = "0x600136C")]
			[Address(RVA = "0x11DEB6C", Offset = "0x11DEB6C", VA = "0x11DEB6C")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600136D")]
			[Address(RVA = "0x11DEB98", Offset = "0x11DEB98", VA = "0x11DEB98")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A5C", Offset = "0xC67A5C")]
		private sealed class <DOAnchorPos3D>c__AnonStoreyF
		{
			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600136E")]
			[Address(RVA = "0x11DBED0", Offset = "0x11DBED0", VA = "0x11DBED0")]
			public <DOAnchorPos3D>c__AnonStoreyF()
			{
			}

			[Token(Token = "0x600136F")]
			[Address(RVA = "0x11DE8FC", Offset = "0x11DE8FC", VA = "0x11DE8FC")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001370")]
			[Address(RVA = "0x11DE928", Offset = "0x11DE928", VA = "0x11DE928")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A6C", Offset = "0xC67A6C")]
		private sealed class <DOAnchorPos3DX>c__AnonStorey10
		{
			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001371")]
			[Address(RVA = "0x11DC078", Offset = "0x11DC078", VA = "0x11DC078")]
			public <DOAnchorPos3DX>c__AnonStorey10()
			{
			}

			[Token(Token = "0x6001372")]
			[Address(RVA = "0x11DE97C", Offset = "0x11DE97C", VA = "0x11DE97C")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001373")]
			[Address(RVA = "0x11DE9A8", Offset = "0x11DE9A8", VA = "0x11DE9A8")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A7C", Offset = "0xC67A7C")]
		private sealed class <DOAnchorPos3DY>c__AnonStorey11
		{
			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001374")]
			[Address(RVA = "0x11DC220", Offset = "0x11DC220", VA = "0x11DC220")]
			public <DOAnchorPos3DY>c__AnonStorey11()
			{
			}

			[Token(Token = "0x6001375")]
			[Address(RVA = "0x11DE9FC", Offset = "0x11DE9FC", VA = "0x11DE9FC")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001376")]
			[Address(RVA = "0x11DEA28", Offset = "0x11DEA28", VA = "0x11DEA28")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A8C", Offset = "0xC67A8C")]
		private sealed class <DOAnchorPos3DZ>c__AnonStorey12
		{
			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001377")]
			[Address(RVA = "0x11DC3C8", Offset = "0x11DC3C8", VA = "0x11DC3C8")]
			public <DOAnchorPos3DZ>c__AnonStorey12()
			{
			}

			[Token(Token = "0x6001378")]
			[Address(RVA = "0x11DEA7C", Offset = "0x11DEA7C", VA = "0x11DEA7C")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001379")]
			[Address(RVA = "0x11DEAA8", Offset = "0x11DEAA8", VA = "0x11DEAA8")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67A9C", Offset = "0xC67A9C")]
		private sealed class <DOAnchorMax>c__AnonStorey13
		{
			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600137A")]
			[Address(RVA = "0x11DC550", Offset = "0x11DC550", VA = "0x11DC550")]
			public <DOAnchorMax>c__AnonStorey13()
			{
			}

			[Token(Token = "0x600137B")]
			[Address(RVA = "0x11DE7AC", Offset = "0x11DE7AC", VA = "0x11DE7AC")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600137C")]
			[Address(RVA = "0x11DE7D8", Offset = "0x11DE7D8", VA = "0x11DE7D8")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67AAC", Offset = "0xC67AAC")]
		private sealed class <DOAnchorMin>c__AnonStorey14
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600137D")]
			[Address(RVA = "0x11DC6D8", Offset = "0x11DC6D8", VA = "0x11DC6D8")]
			public <DOAnchorMin>c__AnonStorey14()
			{
			}

			[Token(Token = "0x600137E")]
			[Address(RVA = "0x11DE81C", Offset = "0x11DE81C", VA = "0x11DE81C")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600137F")]
			[Address(RVA = "0x11DE848", Offset = "0x11DE848", VA = "0x11DE848")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67ABC", Offset = "0xC67ABC")]
		private sealed class <DOPivot>c__AnonStorey15
		{
			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001380")]
			[Address(RVA = "0x11DC840", Offset = "0x11DC840", VA = "0x11DC840")]
			public <DOPivot>c__AnonStorey15()
			{
			}

			[Token(Token = "0x6001381")]
			[Address(RVA = "0x11DF964", Offset = "0x11DF964", VA = "0x11DF964")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001382")]
			[Address(RVA = "0x11DF990", Offset = "0x11DF990", VA = "0x11DF990")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67ACC", Offset = "0xC67ACC")]
		private sealed class <DOPivotX>c__AnonStorey16
		{
			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001383")]
			[Address(RVA = "0x11DC9D0", Offset = "0x11DC9D0", VA = "0x11DC9D0")]
			public <DOPivotX>c__AnonStorey16()
			{
			}

			[Token(Token = "0x6001384")]
			[Address(RVA = "0x11DF9D4", Offset = "0x11DF9D4", VA = "0x11DF9D4")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001385")]
			[Address(RVA = "0x11DFA00", Offset = "0x11DFA00", VA = "0x11DFA00")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67ADC", Offset = "0xC67ADC")]
		private sealed class <DOPivotY>c__AnonStorey17
		{
			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001386")]
			[Address(RVA = "0x11DCB60", Offset = "0x11DCB60", VA = "0x11DCB60")]
			public <DOPivotY>c__AnonStorey17()
			{
			}

			[Token(Token = "0x6001387")]
			[Address(RVA = "0x11DFA44", Offset = "0x11DFA44", VA = "0x11DFA44")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001388")]
			[Address(RVA = "0x11DFA70", Offset = "0x11DFA70", VA = "0x11DFA70")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67AEC", Offset = "0xC67AEC")]
		private sealed class <DOSizeDelta>c__AnonStorey18
		{
			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001389")]
			[Address(RVA = "0x10CA938", Offset = "0x10CA938", VA = "0x10CA938")]
			public <DOSizeDelta>c__AnonStorey18()
			{
			}

			[Token(Token = "0x600138A")]
			[Address(RVA = "0x10CA940", Offset = "0x10CA940", VA = "0x10CA940")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600138B")]
			[Address(RVA = "0x10CA96C", Offset = "0x10CA96C", VA = "0x10CA96C")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67AFC", Offset = "0xC67AFC")]
		private sealed class <DOPunchAnchorPos>c__AnonStorey19
		{
			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600138C")]
			[Address(RVA = "0x11DCEC4", Offset = "0x11DCEC4", VA = "0x11DCEC4")]
			public <DOPunchAnchorPos>c__AnonStorey19()
			{
			}

			[Token(Token = "0x600138D")]
			[Address(RVA = "0x11DFBB0", Offset = "0x11DFBB0", VA = "0x11DFBB0")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600138E")]
			[Address(RVA = "0x11DFC48", Offset = "0x11DFC48", VA = "0x11DFC48")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B0C", Offset = "0xC67B0C")]
		private sealed class <DOShakeAnchorPos>c__AnonStorey1A
		{
			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x600138F")]
			[Address(RVA = "0x11DD078", Offset = "0x11DD078", VA = "0x11DD078")]
			public <DOShakeAnchorPos>c__AnonStorey1A()
			{
			}

			[Token(Token = "0x6001390")]
			[Address(RVA = "0x11DFD70", Offset = "0x11DFD70", VA = "0x11DFD70")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001391")]
			[Address(RVA = "0x11DFE08", Offset = "0x11DFE08", VA = "0x11DFE08")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B1C", Offset = "0xC67B1C")]
		private sealed class <DOShakeAnchorPos>c__AnonStorey1B
		{
			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x6001392")]
			[Address(RVA = "0x10CA7E0", Offset = "0x10CA7E0", VA = "0x10CA7E0")]
			public <DOShakeAnchorPos>c__AnonStorey1B()
			{
			}

			[Token(Token = "0x6001393")]
			[Address(RVA = "0x10CA7E8", Offset = "0x10CA7E8", VA = "0x10CA7E8")]
			internal Vector3 <>m__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001394")]
			[Address(RVA = "0x10CA880", Offset = "0x10CA880", VA = "0x10CA880")]
			internal void <>m__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B2C", Offset = "0xC67B2C")]
		private sealed class <DOJumpAnchorPos>c__AnonStorey1C
		{
			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RectTransform target;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float startPosY;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool offsetYSet;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Sequence s;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector2 endValue;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float offsetY;

			[Token(Token = "0x6001395")]
			[Address(RVA = "0x11DD6C8", Offset = "0x11DD6C8", VA = "0x11DD6C8")]
			public <DOJumpAnchorPos>c__AnonStorey1C()
			{
			}

			[Token(Token = "0x6001396")]
			[Address(RVA = "0x11DF598", Offset = "0x11DF598", VA = "0x11DF598")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001397")]
			[Address(RVA = "0x11DF5C4", Offset = "0x11DF5C4", VA = "0x11DF5C4")]
			internal void <>m__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001398")]
			[Address(RVA = "0x11DF608", Offset = "0x11DF608", VA = "0x11DF608")]
			internal void <>m__2()
			{
			}

			[Token(Token = "0x6001399")]
			[Address(RVA = "0x11DF640", Offset = "0x11DF640", VA = "0x11DF640")]
			internal Vector2 <>m__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600139A")]
			[Address(RVA = "0x11DF66C", Offset = "0x11DF66C", VA = "0x11DF66C")]
			internal void <>m__4(Vector2 x)
			{
			}

			[Token(Token = "0x600139B")]
			[Address(RVA = "0x11DF6B0", Offset = "0x11DF6B0", VA = "0x11DF6B0")]
			internal void <>m__5()
			{
			}
		}

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B3C", Offset = "0xC67B3C")]
		private sealed class <DONormalizedPos>c__AnonStorey1D
		{
			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ScrollRect target;

			[Token(Token = "0x600139C")]
			[Address(RVA = "0x11DD844", Offset = "0x11DD844", VA = "0x11DD844")]
			public <DONormalizedPos>c__AnonStorey1D()
			{
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0x11DF888", Offset = "0x11DF888", VA = "0x11DF888")]
			internal Vector2 <>m__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600139E")]
			[Address(RVA = "0x11DF904", Offset = "0x11DF904", VA = "0x11DF904")]
			internal void <>m__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B4C", Offset = "0xC67B4C")]
		private sealed class <DOHorizontalNormalizedPos>c__AnonStorey1E
		{
			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ScrollRect target;

			[Token(Token = "0x600139F")]
			[Address(RVA = "0x11DD9B0", Offset = "0x11DD9B0", VA = "0x11DD9B0")]
			public <DOHorizontalNormalizedPos>c__AnonStorey1E()
			{
			}

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x11DF530", Offset = "0x11DF530", VA = "0x11DF530")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x11DF55C", Offset = "0x11DF55C", VA = "0x11DF55C")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B5C", Offset = "0xC67B5C")]
		private sealed class <DOVerticalNormalizedPos>c__AnonStorey1F
		{
			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ScrollRect target;

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x10CAAA8", Offset = "0x10CAAA8", VA = "0x10CAAA8")]
			public <DOVerticalNormalizedPos>c__AnonStorey1F()
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x10CAAB0", Offset = "0x10CAAB0", VA = "0x10CAAB0")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x10CAADC", Offset = "0x10CAADC", VA = "0x10CAADC")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B6C", Offset = "0xC67B6C")]
		private sealed class <DOValue>c__AnonStorey20
		{
			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Slider target;

			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x10CAA28", Offset = "0x10CAA28", VA = "0x10CAA28")]
			public <DOValue>c__AnonStorey20()
			{
			}

			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x10CAA30", Offset = "0x10CAA30", VA = "0x10CAA30")]
			internal float <>m__0()
			{
				return default(float);
			}

			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x10CAA64", Offset = "0x10CAA64", VA = "0x10CAA64")]
			internal void <>m__1(float x)
			{
			}
		}

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B7C", Offset = "0xC67B7C")]
		private sealed class <DOColor>c__AnonStorey21
		{
			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Text target;

			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x11DDE04", Offset = "0x11DDE04", VA = "0x11DDE04")]
			public <DOColor>c__AnonStorey21()
			{
			}

			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x11DEF5C", Offset = "0x11DEF5C", VA = "0x11DEF5C")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x11DEF90", Offset = "0x11DEF90", VA = "0x11DEF90")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B8C", Offset = "0xC67B8C")]
		private sealed class <DOFade>c__AnonStorey22
		{
			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Text target;

			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x11DDF5C", Offset = "0x11DDF5C", VA = "0x11DDF5C")]
			public <DOFade>c__AnonStorey22()
			{
			}

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x11DF214", Offset = "0x11DF214", VA = "0x11DF214")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x11DF248", Offset = "0x11DF248", VA = "0x11DF248")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67B9C", Offset = "0xC67B9C")]
		private sealed class <DOText>c__AnonStorey23
		{
			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Text target;

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x10CA9B0", Offset = "0x10CA9B0", VA = "0x10CA9B0")]
			public <DOText>c__AnonStorey23()
			{
			}

			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x10CA9B8", Offset = "0x10CA9B8", VA = "0x10CA9B8")]
			internal string <>m__0()
			{
				return null;
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x10CA9EC", Offset = "0x10CA9EC", VA = "0x10CA9EC")]
			internal void <>m__1(string x)
			{
			}
		}

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67BAC", Offset = "0xC67BAC")]
		private sealed class <DOBlendableColor>c__AnonStorey24
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Color to;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Graphic target;

			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x11DE324", Offset = "0x11DE324", VA = "0x11DE324")]
			public <DOBlendableColor>c__AnonStorey24()
			{
			}

			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x11DEBDC", Offset = "0x11DEBDC", VA = "0x11DEBDC")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x11DEBE8", Offset = "0x11DEBE8", VA = "0x11DEBE8")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67BBC", Offset = "0xC67BBC")]
		private sealed class <DOBlendableColor>c__AnonStorey25
		{
			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Color to;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Image target;

			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x11DE564", Offset = "0x11DE564", VA = "0x11DE564")]
			public <DOBlendableColor>c__AnonStorey25()
			{
			}

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x11DECD4", Offset = "0x11DECD4", VA = "0x11DECD4")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x11DECE0", Offset = "0x11DECE0", VA = "0x11DECE0")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67BCC", Offset = "0xC67BCC")]
		private sealed class <DOBlendableColor>c__AnonStorey26
		{
			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Color to;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Text target;

			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x11DE7A4", Offset = "0x11DE7A4", VA = "0x11DE7A4")]
			public <DOBlendableColor>c__AnonStorey26()
			{
			}

			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x11DEDCC", Offset = "0x11DEDCC", VA = "0x11DEDCC")]
			internal Color <>m__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x11DEDD8", Offset = "0x11DEDD8", VA = "0x11DEDD8")]
			internal void <>m__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x11DA510", Offset = "0x11DA510", VA = "0x11DA510")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x11DA668", Offset = "0x11DA668", VA = "0x11DA668")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x11DA7E8", Offset = "0x11DA7E8", VA = "0x11DA7E8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x11DA940", Offset = "0x11DA940", VA = "0x11DA940")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x11DAAC0", Offset = "0x11DAAC0", VA = "0x11DAAC0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x11DAC18", Offset = "0x11DAC18", VA = "0x11DAC18")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x11DAD9C", Offset = "0x11DAD9C", VA = "0x11DAD9C")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x11DAFB0", Offset = "0x11DAFB0", VA = "0x11DAFB0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x11DB138", Offset = "0x11DB138", VA = "0x11DB138")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x11DB2C0", Offset = "0x11DB2C0", VA = "0x11DB2C0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x11DB448", Offset = "0x11DB448", VA = "0x11DB448")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x11DB5C8", Offset = "0x11DB5C8", VA = "0x11DB5C8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x11DB720", Offset = "0x11DB720", VA = "0x11DB720")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x11DB888", Offset = "0x11DB888", VA = "0x11DB888")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x11DBA10", Offset = "0x11DBA10", VA = "0x11DBA10")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x11DBBAC", Offset = "0x11DBBAC", VA = "0x11DBBAC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x11DBD48", Offset = "0x11DBD48", VA = "0x11DBD48")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x11DBED8", Offset = "0x11DBED8", VA = "0x11DBED8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x11DC080", Offset = "0x11DC080", VA = "0x11DC080")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x11DC228", Offset = "0x11DC228", VA = "0x11DC228")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x11DC3D0", Offset = "0x11DC3D0", VA = "0x11DC3D0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x11DC558", Offset = "0x11DC558", VA = "0x11DC558")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x11DC6E0", Offset = "0x11DC6E0", VA = "0x11DC6E0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x11DC848", Offset = "0x11DC848", VA = "0x11DC848")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x11DC9D8", Offset = "0x11DC9D8", VA = "0x11DC9D8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x11DCB68", Offset = "0x11DCB68", VA = "0x11DCB68")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x11DCCE8", Offset = "0x11DCCE8", VA = "0x11DCCE8")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x11DCECC", Offset = "0x11DCECC", VA = "0x11DCECC")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x11DD080", Offset = "0x11DD080", VA = "0x11DD080")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x11DD288", Offset = "0x11DD288", VA = "0x11DD288")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x11DD6D0", Offset = "0x11DD6D0", VA = "0x11DD6D0")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x11DD84C", Offset = "0x11DD84C", VA = "0x11DD84C")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x11DD9B8", Offset = "0x11DD9B8", VA = "0x11DD9B8")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x11DDB1C", Offset = "0x11DDB1C", VA = "0x11DDB1C")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x11DDC8C", Offset = "0x11DDC8C", VA = "0x11DDC8C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x11DDE0C", Offset = "0x11DDE0C", VA = "0x11DDE0C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x11DDF64", Offset = "0x11DDF64", VA = "0x11DDF64")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x11DE0EC", Offset = "0x11DE0EC", VA = "0x11DE0EC")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x11DE32C", Offset = "0x11DE32C", VA = "0x11DE32C")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x11DE56C", Offset = "0x11DE56C", VA = "0x11DE56C")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000041")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x10CAE38", Offset = "0x10CAE38", VA = "0x10CAE38")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x10CB04C", Offset = "0x10CB04C", VA = "0x10CB04C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x10CB274", Offset = "0x10CB274", VA = "0x10CB274")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x10CB328", Offset = "0x10CB328", VA = "0x10CB328")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x10CB3DC", Offset = "0x10CB3DC", VA = "0x10CB3DC")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x10CB490", Offset = "0x10CB490", VA = "0x10CB490")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x10CB554", Offset = "0x10CB554", VA = "0x10CB554")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x10CB618", Offset = "0x10CB618", VA = "0x10CB618")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}
	}
	[Token(Token = "0x2000042")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000043")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4000117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000031")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000252")]
				[Address(RVA = "0x11D6150", Offset = "0x11D6150", VA = "0x11D6150", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000251")]
			[Address(RVA = "0x11D6124", Offset = "0x11D6124", VA = "0x11D6124")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000044")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4000118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000032")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000254")]
				[Address(RVA = "0x11D638C", Offset = "0x11D638C", VA = "0x11D638C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000253")]
			[Address(RVA = "0x11D6360", Offset = "0x11D6360", VA = "0x11D6360")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000045")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4000119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000033")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000256")]
				[Address(RVA = "0x11D626C", Offset = "0x11D626C", VA = "0x11D626C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000255")]
			[Address(RVA = "0x11D6240", Offset = "0x11D6240", VA = "0x11D6240")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000046")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x400011A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x400011B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x17000034")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000258")]
				[Address(RVA = "0x11D61E4", Offset = "0x11D61E4", VA = "0x11D61E4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000257")]
			[Address(RVA = "0x11D61A8", Offset = "0x11D61A8", VA = "0x11D61A8")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000047")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x400011C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x400011D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x17000035")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600025A")]
				[Address(RVA = "0x11D62D4", Offset = "0x11D62D4", VA = "0x11D62D4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000259")]
			[Address(RVA = "0x11D6298", Offset = "0x11D6298", VA = "0x11D6298")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000048")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x400011E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000036")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600025C")]
				[Address(RVA = "0x11D6464", Offset = "0x11D6464", VA = "0x11D6464", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600025B")]
			[Address(RVA = "0x11D6438", Offset = "0x11D6438", VA = "0x11D6438")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000049")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200004A")]
		public static class Physics
		{
			[Token(Token = "0x600025E")]
			[Address(RVA = "0x10CB7A8", Offset = "0x10CB7A8", VA = "0x10CB7A8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x600025F")]
			[Address(RVA = "0x10CB930", Offset = "0x10CB930", VA = "0x10CB930")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6000260")]
			[Address(RVA = "0x10CB9C4", Offset = "0x10CB9C4", VA = "0x10CB9C4")]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6000261")]
			[Address(RVA = "0x10CBA58", Offset = "0x10CBA58", VA = "0x10CBA58")]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC67C6C", Offset = "0xC67C6C")]
		private static Action<PathOptions, Tween, Quaternion, Transform> <>f__mg$cache0;

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x10CB6CC", Offset = "0x10CB6CC", VA = "0x10CB6CC")]
		public static void Init()
		{
		}
	}
}
[Token(Token = "0x200004B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC67C7C", Offset = "0xC67C7C")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x200004C")]
	public enum UpdateMode
	{
		[Token(Token = "0x4000142")]
		Normal,
		[Token(Token = "0x4000143")]
		AnimatePhysics,
		[Token(Token = "0x4000144")]
		UnscaledTime
	}

	[Token(Token = "0x200004D")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000146")]
		None,
		[Token(Token = "0x4000147")]
		X,
		[Token(Token = "0x4000148")]
		Y,
		[Token(Token = "0x4000149")]
		Z
	}

	[Token(Token = "0x200004E")]
	private class Particle
	{
		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x10CF024", Offset = "0x10CF024", VA = "0x10CF024")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67CB4", Offset = "0xC67CB4")]
	public Transform m_Root;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67CEC", Offset = "0xC67CEC")]
	public float m_UpdateRate;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67D24", Offset = "0xC67D24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC67D24", Offset = "0xC67D24")]
	public float m_Damping;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67D78", Offset = "0xC67D78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC67D78", Offset = "0xC67D78")]
	public float m_Elasticity;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67DCC", Offset = "0xC67DCC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC67DCC", Offset = "0xC67DCC")]
	public float m_Stiffness;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67E20", Offset = "0xC67E20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC67E20", Offset = "0xC67E20")]
	public float m_Inert;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67E74", Offset = "0xC67E74")]
	public float m_Radius;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67EAC", Offset = "0xC67EAC")]
	public float m_EndLength;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67EE4", Offset = "0xC67EE4")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67F1C", Offset = "0xC67F1C")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67F54", Offset = "0xC67F54")]
	public Vector3 m_Force;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67F8C", Offset = "0xC67F8C")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67FC4", Offset = "0xC67FC4")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC67FFC", Offset = "0xC67FFC")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC68034", Offset = "0xC68034")]
	public bool m_DistantDisable;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_ObjectScale;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_Time;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Weight;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x10CBBE0", Offset = "0x10CBBE0", VA = "0x10CBBE0")]
	public DynamicBone()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x10CBD18", Offset = "0x10CBD18", VA = "0x10CBD18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x10CBEE0", Offset = "0x10CBEE0", VA = "0x10CBEE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x10CBF34", Offset = "0x10CBF34", VA = "0x10CBF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x10CBF10", Offset = "0x10CBF10", VA = "0x10CBF10")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x10CBFE4", Offset = "0x10CBFE4", VA = "0x10CBFE4")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x10CC7E8", Offset = "0x10CC7E8", VA = "0x10CC7E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x10CC7EC", Offset = "0x10CC7EC", VA = "0x10CC7EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x10CC92C", Offset = "0x10CC92C", VA = "0x10CC92C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x10CCB48", Offset = "0x10CCB48", VA = "0x10CCB48")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x10CCBA4", Offset = "0x10CCBA4", VA = "0x10CCBA4")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x10CC218", Offset = "0x10CC218", VA = "0x10CC218")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x10CBD1C", Offset = "0x10CBD1C", VA = "0x10CBD1C")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x10CE31C", Offset = "0x10CE31C", VA = "0x10CE31C")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x10CEB28", Offset = "0x10CEB28", VA = "0x10CEB28")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x10CC490", Offset = "0x10CC490", VA = "0x10CC490")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x10CC60C", Offset = "0x10CC60C", VA = "0x10CC60C")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x10CCBAC", Offset = "0x10CCBAC", VA = "0x10CCBAC")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x10CCF5C", Offset = "0x10CCF5C", VA = "0x10CCF5C")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x10CD844", Offset = "0x10CD844", VA = "0x10CD844")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x10CF118", Offset = "0x10CF118", VA = "0x10CF118")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x10CDF64", Offset = "0x10CDF64", VA = "0x10CDF64")]
	private void ApplyParticlesToTransforms()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6806C", Offset = "0xC6806C")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Radius;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Height;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x10CF204", Offset = "0x10CF204", VA = "0x10CF204")]
	public DynamicBoneCollider()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x10CF294", Offset = "0x10CF294", VA = "0x10CF294")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x10CF338", Offset = "0x10CF338", VA = "0x10CF338", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x10CF5C8", Offset = "0x10CF5C8", VA = "0x10CF5C8")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x10CF75C", Offset = "0x10CF75C", VA = "0x10CF75C")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x10CF8E8", Offset = "0x10CF8E8", VA = "0x10CF8E8")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x10CFD54", Offset = "0x10CFD54", VA = "0x10CFD54")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x10D0194", Offset = "0x10D0194", VA = "0x10D0194")]
	private void OnDrawGizmosSelected()
	{
	}
}
[Token(Token = "0x2000050")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	public enum Direction
	{
		[Token(Token = "0x400015D")]
		X,
		[Token(Token = "0x400015E")]
		Y,
		[Token(Token = "0x400015F")]
		Z
	}

	[Token(Token = "0x2000052")]
	public enum Bound
	{
		[Token(Token = "0x4000161")]
		Outside,
		[Token(Token = "0x4000162")]
		Inside
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direction m_Direction;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_Center;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bound m_Bound;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x10CF210", Offset = "0x10CF210", VA = "0x10CF210")]
	public DynamicBoneColliderBase()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x10D03CC", Offset = "0x10D03CC", VA = "0x10D03CC", Slot = "4")]
	public virtual void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}
}
[Token(Token = "0x2000053")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC680A4", Offset = "0xC680A4")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000283")]
	[Address(RVA = "0x10D03D0", Offset = "0x10D03D0", VA = "0x10D03D0")]
	public DynamicBonePlaneCollider()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x10D03D4", Offset = "0x10D03D4", VA = "0x10D03D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x10D03D8", Offset = "0x10D03D8", VA = "0x10D03D8", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x10D0610", Offset = "0x10D0610", VA = "0x10D0610")]
	private void OnDrawGizmosSelected()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC680DC", Offset = "0xC680DC")]
public class OrbAnimator : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC68140", Offset = "0xC68140")]
	public float Multiplier;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 Smoke1Speed;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 Smoke2Speed;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 Particles1Speed;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 Particles2Speed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SurfaceSpeed;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 smoke1Offset;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 smoke2Offset;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 particles1Offset;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 particles2Offset;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float surfaceOffset;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1175820", Offset = "0x1175820", VA = "0x1175820")]
	public OrbAnimator()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1175914", Offset = "0x1175914", VA = "0x1175914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1175AF4", Offset = "0x1175AF4", VA = "0x1175AF4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000055")]
public class OrbColor : MonoBehaviour
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnimationSpeed;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color SurfaceColor;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color AccentColor;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color BaseColor;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color startSurfaceColor;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color startAccentColor;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color startBaseColor;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material material;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1175E48", Offset = "0x1175E48", VA = "0x1175E48")]
	public OrbColor()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1175EB0", Offset = "0x1175EB0", VA = "0x1175EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1175FA4", Offset = "0x1175FA4", VA = "0x1175FA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1176118", Offset = "0x1176118", VA = "0x1176118")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1175FE0", Offset = "0x1175FE0", VA = "0x1175FE0")]
	private void SetColors(Color surfaceColor, Color accentColor, Color baseColor)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x11762E8", Offset = "0x11762E8", VA = "0x11762E8")]
	public void GetFromMaterial()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x117642C", Offset = "0x117642C", VA = "0x117642C")]
	public void ApplyToMaterial()
	{
	}
}
[Token(Token = "0x2000056")]
public class OrbFill : MonoBehaviour
{
	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnimationSpeed;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC68158", Offset = "0xC68158")]
	public float Fill;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startFill;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1176520", Offset = "0x1176520", VA = "0x1176520")]
	public OrbFill()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1176534", Offset = "0x1176534", VA = "0x1176534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x11765CC", Offset = "0x11765CC", VA = "0x11765CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x117663C", Offset = "0x117663C", VA = "0x117663C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000057")]
public class SampleOrbAnimator : MonoBehaviour
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Delay;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OrbColor[] orbColors;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentIndex;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x138AEDC", Offset = "0x138AEDC", VA = "0x138AEDC")]
	public SampleOrbAnimator()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x138AEF4", Offset = "0x138AEF4", VA = "0x138AEF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x138AF64", Offset = "0x138AF64", VA = "0x138AF64")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000058")]
public class OrbVariable
{
	[Token(Token = "0x400017F")]
	public const string SURFACE_COLOR = "_SurfaceColor";

	[Token(Token = "0x4000180")]
	public const string ACCENT_COLOR = "_Color";

	[Token(Token = "0x4000181")]
	public const string BASE_COLOR = "_BaseColor";

	[Token(Token = "0x4000182")]
	public const string FILL = "_Fill";

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x117672C", Offset = "0x117672C", VA = "0x117672C")]
	public OrbVariable()
	{
	}
}
namespace HighlightingSystem
{
	[Token(Token = "0x2000059")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x200005D")]
		private class RendererCache
		{
			[Token(Token = "0x200005E")]
			private struct Data
			{
				[Token(Token = "0x40001DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Material material;

				[Token(Token = "0x40001DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public int submeshIndex;

				[Token(Token = "0x40001DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public bool transparent;
			}

			[Token(Token = "0x40001D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly string sRenderType;

			[Token(Token = "0x40001D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly string sOpaque;

			[Token(Token = "0x40001D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static readonly string sTransparent;

			[Token(Token = "0x40001D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static readonly string sTransparentCutout;

			[Token(Token = "0x40001D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private static readonly string sMainTex;

			[Token(Token = "0x40001D6")]
			private const int opaquePassID = 0;

			[Token(Token = "0x40001D7")]
			private const int transparentPassID = 1;

			[Token(Token = "0x40001D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC681CC", Offset = "0xC681CC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC681CC", Offset = "0xC681CC")]
			private bool <visible>k__BackingField;

			[Token(Token = "0x40001D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GameObject go;

			[Token(Token = "0x40001DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Renderer renderer;

			[Token(Token = "0x40001DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Data> data;

			[Token(Token = "0x17000044")]
			public bool visible
			{
				[Token(Token = "0x60002F2")]
				[Address(RVA = "0x10DAFB8", Offset = "0x10DAFB8", VA = "0x10DAFB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68208", Offset = "0xC68208")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60002F3")]
				[Address(RVA = "0x10DBCA4", Offset = "0x10DBCA4", VA = "0x10DBCA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68218", Offset = "0xC68218")]
				private set
				{
				}
			}

			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x10DA868", Offset = "0x10DA868", VA = "0x10DA868")]
			public RendererCache(Renderer r, Material sharedOpaqueMaterial, float zTest, float stencilRef)
			{
			}

			[Token(Token = "0x60002F4")]
			[Address(RVA = "0x10DAF60", Offset = "0x10DAF60", VA = "0x10DAF60")]
			public bool UpdateVisibility()
			{
				return default(bool);
			}

			[Token(Token = "0x60002F5")]
			[Address(RVA = "0x10DA28C", Offset = "0x10DA28C", VA = "0x10DA28C")]
			public bool FillBuffer(CommandBuffer buffer)
			{
				return default(bool);
			}

			[Token(Token = "0x60002F6")]
			[Address(RVA = "0x10DB3E4", Offset = "0x10DB3E4", VA = "0x10DB3E4")]
			public void SetColorForTransparent(Color clr)
			{
			}

			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x10DAFC0", Offset = "0x10DAFC0", VA = "0x10DAFC0")]
			public void SetZTestForTransparent(float zTest)
			{
			}

			[Token(Token = "0x60002F8")]
			[Address(RVA = "0x10DB0D4", Offset = "0x10DB0D4", VA = "0x10DB0D4")]
			public void SetStencilRefForTransparent(float stencilRef)
			{
			}

			[Token(Token = "0x60002F9")]
			[Address(RVA = "0x10DBC48", Offset = "0x10DBC48", VA = "0x10DBC48")]
			private bool IsVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x60002FA")]
			[Address(RVA = "0x10DAE98", Offset = "0x10DAE98", VA = "0x10DAE98")]
			public bool IsDestroyed()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float constantOnSpeed;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float constantOffSpeed;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float transparentCutoff;

		[Token(Token = "0x4000186")]
		public const int highlightingLayer = 7;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly List<Type> types;

		[Token(Token = "0x4000188")]
		private const float doublePI = (float)Math.PI * 2f;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color occluderColor;

		[Token(Token = "0x400018A")]
		private const float zTestLessEqual = 4f;

		[Token(Token = "0x400018B")]
		private const float zTestAlways = 8f;

		[Token(Token = "0x400018C")]
		private const float cullOff = 0f;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float zWrite;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float offsetFactor;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float offsetUnits;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68170", Offset = "0xC68170")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68170", Offset = "0xC68170")]
		private bool <highlighted>k__BackingField;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform tr;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<RendererCache> highlightableRenderers;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int visibilityCheckFrame;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool visibilityChanged;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool visible;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool renderersDirty;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color currentColor;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool transitionActive;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float transitionValue;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float flashingFreq;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _once;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color onceColor;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool flashing;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color flashingColorMin;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color flashingColorMax;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool constantly;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color constantColor;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool occluder;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool seeThrough;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int renderQueue;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool zTest;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool stencilRef;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Shader _opaqueShader;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Shader _transparentShader;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material _opaqueMaterial;

		[Token(Token = "0x17000037")]
		public bool highlighted
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0x10D8B38", Offset = "0x10D8B38", VA = "0x10D8B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC681AC", Offset = "0xC681AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0x10D8B40", Offset = "0x10D8B40", VA = "0x10D8B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC681BC", Offset = "0xC681BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		private bool once
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x10D8B4C", Offset = "0x10D8B4C", VA = "0x10D8B4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0x10D8844", Offset = "0x10D8844", VA = "0x10D8844")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		private float zTestFloat
		{
			[Token(Token = "0x60002BA")]
			[Address(RVA = "0x10D8B7C", Offset = "0x10D8B7C", VA = "0x10D8B7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003A")]
		private float stencilRefFloat
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0x10D8B94", Offset = "0x10D8B94", VA = "0x10D8B94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003B")]
		public static Shader opaqueShader
		{
			[Token(Token = "0x60002BC")]
			[Address(RVA = "0x10D8BAC", Offset = "0x10D8BAC", VA = "0x10D8BAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		public static Shader transparentShader
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x10D8CB4", Offset = "0x10D8CB4", VA = "0x10D8CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private Material opaqueMaterial
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x10D8DBC", Offset = "0x10D8DBC", VA = "0x10D8DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x10D86DC", Offset = "0x10D86DC", VA = "0x10D86DC")]
		public Highlighter()
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x10D87F4", Offset = "0x10D87F4", VA = "0x10D87F4")]
		public void ReinitMaterials()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x10D8800", Offset = "0x10D8800", VA = "0x10D8800")]
		public void OnParams(Color color)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x10D880C", Offset = "0x10D880C", VA = "0x10D880C")]
		public void On()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x10D8888", Offset = "0x10D8888", VA = "0x10D8888")]
		public void On(Color color)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x10D88C8", Offset = "0x10D88C8", VA = "0x10D88C8")]
		public void FlashingParams(Color color1, Color color2, float freq)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x10D88E4", Offset = "0x10D88E4", VA = "0x10D88E4")]
		public void FlashingOn()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x10D88F0", Offset = "0x10D88F0", VA = "0x10D88F0")]
		public void FlashingOn(Color color1, Color color2)
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x10D890C", Offset = "0x10D890C", VA = "0x10D890C")]
		public void FlashingOn(Color color1, Color color2, float freq)
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x10D8930", Offset = "0x10D8930", VA = "0x10D8930")]
		public void FlashingOn(float freq)
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x10D8940", Offset = "0x10D8940", VA = "0x10D8940")]
		public void FlashingOff()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x10D8948", Offset = "0x10D8948", VA = "0x10D8948")]
		public void FlashingSwitch()
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x10D8958", Offset = "0x10D8958", VA = "0x10D8958")]
		public void ConstantParams(Color color)
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x10D8964", Offset = "0x10D8964", VA = "0x10D8964")]
		public void ConstantOn()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x10D8974", Offset = "0x10D8974", VA = "0x10D8974")]
		public void ConstantOn(Color color)
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x10D898C", Offset = "0x10D898C", VA = "0x10D898C")]
		public void ConstantOff()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x10D899C", Offset = "0x10D899C", VA = "0x10D899C")]
		public void ConstantSwitch()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x10D89B4", Offset = "0x10D89B4", VA = "0x10D89B4")]
		public void ConstantOnImmediate()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x10D89CC", Offset = "0x10D89CC", VA = "0x10D89CC")]
		public void ConstantOnImmediate(Color color)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x10D89EC", Offset = "0x10D89EC", VA = "0x10D89EC")]
		public void ConstantOffImmediate()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x10D89FC", Offset = "0x10D89FC", VA = "0x10D89FC")]
		public void ConstantSwitchImmediate()
		{
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x10D8A4C", Offset = "0x10D8A4C", VA = "0x10D8A4C")]
		public void SeeThroughOn()
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x10D8A58", Offset = "0x10D8A58", VA = "0x10D8A58")]
		public void SeeThroughOff()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x10D8A60", Offset = "0x10D8A60", VA = "0x10D8A60")]
		public void SeeThroughSwitch()
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x10D8A70", Offset = "0x10D8A70", VA = "0x10D8A70")]
		public void OccluderOn()
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x10D8A7C", Offset = "0x10D8A7C", VA = "0x10D8A7C")]
		public void OccluderOff()
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x10D8A84", Offset = "0x10D8A84", VA = "0x10D8A84")]
		public void OccluderSwitch()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x10D8A94", Offset = "0x10D8A94", VA = "0x10D8A94")]
		public void Off()
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x10D8ACC", Offset = "0x10D8ACC", VA = "0x10D8ACC")]
		public void Die()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x10D92A4", Offset = "0x10D92A4", VA = "0x10D92A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x10D931C", Offset = "0x10D931C", VA = "0x10D931C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x10D9568", Offset = "0x10D9568", VA = "0x10D9568")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x10D96F8", Offset = "0x10D96F8", VA = "0x10D96F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x10D988C", Offset = "0x10D988C", VA = "0x10D988C")]
		public bool UpdateHighlighting(bool isDepthAvailable)
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x10DA18C", Offset = "0x10DA18C", VA = "0x10DA18C")]
		public void FillBuffer(CommandBuffer buffer, int renderQueue)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x10D9398", Offset = "0x10D9398", VA = "0x10D9398")]
		private bool CheckInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x10D99D4", Offset = "0x10D99D4", VA = "0x10D99D4")]
		private bool UpdateRenderers()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x10D9EB8", Offset = "0x10D9EB8", VA = "0x10D9EB8")]
		private bool UpdateVisibility()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x10DA39C", Offset = "0x10DA39C", VA = "0x10DA39C")]
		private void GrabRenderers(Transform t, ref List<Renderer> renderers)
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x10D9C64", Offset = "0x10D9C64", VA = "0x10D9C64")]
		private void UpdateShaderParams(bool zt, bool sr)
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x10D9FF0", Offset = "0x10D9FF0", VA = "0x10D9FF0")]
		private void UpdateColors()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x10DB1E8", Offset = "0x10DB1E8", VA = "0x10DB1E8")]
		private void SetColor(Color value)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x10D96FC", Offset = "0x10D96FC", VA = "0x10D96FC")]
		private void PerformTransition()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x10DB518", Offset = "0x10DB518", VA = "0x10DB518")]
		public static void SetZWrite(float value)
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x10DB668", Offset = "0x10DB668", VA = "0x10DB668")]
		public static void SetOffsetFactor(float value)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x10DB7B8", Offset = "0x10DB7B8", VA = "0x10DB7B8")]
		public static void SetOffsetUnits(float value)
		{
		}
	}
	[Token(Token = "0x200005A")]
	public class HighlightingRenderer : HighlightingBase
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x10DE8A0", Offset = "0x10DE8A0", VA = "0x10DE8A0")]
		public HighlightingRenderer()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public static class HighlighterManager
	{
		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int dirtyFrame;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<Highlighter> highlighters;

		[Token(Token = "0x1700003E")]
		public static bool isDirty
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0x10DBDB0", Offset = "0x10DBDB0", VA = "0x10DBDB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0x10DBE2C", Offset = "0x10DBE2C", VA = "0x10DBE2C")]
			private set
			{
			}
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x10D94E0", Offset = "0x10D94E0", VA = "0x10D94E0")]
		public static void Add(Highlighter highlighter)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x10D9624", Offset = "0x10D9624", VA = "0x10D9624")]
		public static void Remove(Highlighter instance)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x10DBEB4", Offset = "0x10DBEB4", VA = "0x10DBEB4")]
		public static HashSet<Highlighter>.Enumerator GetEnumerator()
		{
			return default(HashSet<Highlighter>.Enumerator);
		}
	}
	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC68228", Offset = "0xC68228")]
	public class HighlightingBase : MonoBehaviour
	{
		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Color colorClear;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly string renderBufferName;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly Matrix4x4 identityMatrix;

		[Token(Token = "0x40001AF")]
		protected const CameraEvent queue = CameraEvent.BeforeImageEffectsOpaque;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static RenderTargetIdentifier cameraTargetID;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected static Mesh quad;

		[Token(Token = "0x40001B2")]
		protected const int OGL = 0;

		[Token(Token = "0x40001B3")]
		protected const int D3D9 = 1;

		[Token(Token = "0x40001B4")]
		protected const int D3D11 = 2;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected static int graphicsDeviceVersion;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float offsetFactor;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float offsetUnits;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected CommandBuffer renderBuffer;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool isDirty;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int cachedWidth;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int cachedHeight;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int cachedAA;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC6828C", Offset = "0xC6828C")]
		[SerializeField]
		protected int _downsampleFactor;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC682D8", Offset = "0xC682D8")]
		[SerializeField]
		protected int _iterations;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC68324", Offset = "0xC68324")]
		[SerializeField]
		protected float _blurMinSpread;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC68370", Offset = "0xC68370")]
		[SerializeField]
		protected float _blurSpread;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float _blurIntensity;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected RenderTargetIdentifier highlightingBufferID;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected RenderTexture highlightingBuffer;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Camera cam;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool isSupported;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		protected bool isDepthAvailable;

		[Token(Token = "0x40001C7")]
		protected const int BLUR = 0;

		[Token(Token = "0x40001C8")]
		protected const int CUT = 1;

		[Token(Token = "0x40001C9")]
		protected const int COMP = 2;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected static readonly string[] shaderPaths;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected static Shader[] shaders;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected static Material[] materials;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected static Material cutMaterial;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected static Material compMaterial;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Material blurMaterial;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected static bool initialized;

		[Token(Token = "0x1700003F")]
		public int downsampleFactor
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0x10DC00C", Offset = "0x10DC00C", VA = "0x10DC00C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0x10DC014", Offset = "0x10DC014", VA = "0x10DC014")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public int iterations
		{
			[Token(Token = "0x60002DB")]
			[Address(RVA = "0x10DC0CC", Offset = "0x10DC0CC", VA = "0x10DC0CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60002DC")]
			[Address(RVA = "0x10DC0D4", Offset = "0x10DC0D4", VA = "0x10DC0D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public float blurMinSpread
		{
			[Token(Token = "0x60002DD")]
			[Address(RVA = "0x10DC0F0", Offset = "0x10DC0F0", VA = "0x10DC0F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002DE")]
			[Address(RVA = "0x10DC0F8", Offset = "0x10DC0F8", VA = "0x10DC0F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public float blurSpread
		{
			[Token(Token = "0x60002DF")]
			[Address(RVA = "0x10DC114", Offset = "0x10DC114", VA = "0x10DC114")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002E0")]
			[Address(RVA = "0x10DC11C", Offset = "0x10DC11C", VA = "0x10DC11C")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public float blurIntensity
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x10DC138", Offset = "0x10DC138", VA = "0x10DC138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0x10DC140", Offset = "0x10DC140", VA = "0x10DC140")]
			set
			{
			}
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x10DBFC4", Offset = "0x10DBFC4", VA = "0x10DBFC4")]
		public HighlightingBase()
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x10DC26C", Offset = "0x10DC26C", VA = "0x10DC26C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x10DC958", Offset = "0x10DC958", VA = "0x10DC958", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x10DCA40", Offset = "0x10DCA40", VA = "0x10DCA40", Slot = "6")]
		protected virtual void OnPreRender()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x10DCC84", Offset = "0x10DCC84", VA = "0x10DCC84", Slot = "7")]
		protected virtual void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x10DC4C0", Offset = "0x10DC4C0", VA = "0x10DC4C0")]
		protected static void Initialize()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x10DCD30", Offset = "0x10DCD30", VA = "0x10DCD30")]
		protected static void CreateQuad()
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x10DD2C0", Offset = "0x10DD2C0", VA = "0x10DD2C0", Slot = "8")]
		protected virtual int GetAA()
		{
			return default(int);
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x10DD344", Offset = "0x10DD344", VA = "0x10DD344", Slot = "9")]
		protected virtual void UpdateHighlightingBuffer()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x10DD7C4", Offset = "0x10DD7C4", VA = "0x10DD7C4", Slot = "10")]
		public virtual bool CheckInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x10DD918", Offset = "0x10DD918", VA = "0x10DD918", Slot = "11")]
		protected virtual bool CheckSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x10DDBF8", Offset = "0x10DDBF8", VA = "0x10DDBF8", Slot = "12")]
		protected virtual bool HighlightersChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x10DDCFC", Offset = "0x10DDCFC", VA = "0x10DDCFC", Slot = "13")]
		protected virtual void RebuildCommandBuffer()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x10DE584", Offset = "0x10DE584", VA = "0x10DE584", Slot = "14")]
		protected virtual void FillBuffer(CommandBuffer buffer, int renderQueue)
		{
		}
	}
	[Token(Token = "0x200005F")]
	public static class ShaderPropertyID
	{
		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC683CC", Offset = "0xC683CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC683CC", Offset = "0xC683CC")]
		private static int <_MainTex>k__BackingField;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68408", Offset = "0xC68408")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68408", Offset = "0xC68408")]
		private static int <_Outline>k__BackingField;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68444", Offset = "0xC68444")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68444", Offset = "0xC68444")]
		private static int <_Cutoff>k__BackingField;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68480", Offset = "0xC68480")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68480", Offset = "0xC68480")]
		private static int <_Intensity>k__BackingField;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC684BC", Offset = "0xC684BC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC684BC", Offset = "0xC684BC")]
		private static int <_ZTest>k__BackingField;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC684F8", Offset = "0xC684F8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC684F8", Offset = "0xC684F8")]
		private static int <_StencilRef>k__BackingField;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68534", Offset = "0xC68534")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68534", Offset = "0xC68534")]
		private static int <_Cull>k__BackingField;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68570", Offset = "0xC68570")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68570", Offset = "0xC68570")]
		private static int <_HighlightingBlur1>k__BackingField;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC685AC", Offset = "0xC685AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC685AC", Offset = "0xC685AC")]
		private static int <_HighlightingBlur2>k__BackingField;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC685E8", Offset = "0xC685E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC685E8", Offset = "0xC685E8")]
		private static int <_HighlightingBuffer>k__BackingField;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68624", Offset = "0xC68624")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68624", Offset = "0xC68624")]
		private static int <_HighlightingBlurred>k__BackingField;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68660", Offset = "0xC68660")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68660", Offset = "0xC68660")]
		private static int <_HighlightingBlurOffset>k__BackingField;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6869C", Offset = "0xC6869C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6869C", Offset = "0xC6869C")]
		private static int <_HighlightingZWrite>k__BackingField;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC686D8", Offset = "0xC686D8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC686D8", Offset = "0xC686D8")]
		private static int <_HighlightingOffsetFactor>k__BackingField;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68714", Offset = "0xC68714")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68714", Offset = "0xC68714")]
		private static int <_HighlightingOffsetUnits>k__BackingField;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68750", Offset = "0xC68750")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC68750", Offset = "0xC68750")]
		private static int <_HighlightingBufferTexelSize>k__BackingField;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static bool initialized;

		[Token(Token = "0x17000045")]
		public static int _MainTex
		{
			[Token(Token = "0x60002FC")]
			[Address(RVA = "0x10DBB78", Offset = "0x10DBB78", VA = "0x10DBB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6878C", Offset = "0xC6878C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60002FD")]
			[Address(RVA = "0x10DE948", Offset = "0x10DE948", VA = "0x10DE948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6879C", Offset = "0xC6879C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public static int _Outline
		{
			[Token(Token = "0x60002FE")]
			[Address(RVA = "0x10DB37C", Offset = "0x10DB37C", VA = "0x10DB37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687AC", Offset = "0xC687AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60002FF")]
			[Address(RVA = "0x10DE9B4", Offset = "0x10DE9B4", VA = "0x10DE9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687BC", Offset = "0xC687BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public static int _Cutoff
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x10DBBE0", Offset = "0x10DBBE0", VA = "0x10DBBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687CC", Offset = "0xC687CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000301")]
			[Address(RVA = "0x10DEA20", Offset = "0x10DEA20", VA = "0x10DEA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687DC", Offset = "0xC687DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public static int _Intensity
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x10DC204", Offset = "0x10DC204", VA = "0x10DC204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687EC", Offset = "0xC687EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x10DEA8C", Offset = "0x10DEA8C", VA = "0x10DEA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC687FC", Offset = "0xC687FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public static int _ZTest
		{
			[Token(Token = "0x6000304")]
			[Address(RVA = "0x10D91D4", Offset = "0x10D91D4", VA = "0x10D91D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6880C", Offset = "0xC6880C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x10DEAF8", Offset = "0x10DEAF8", VA = "0x10DEAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6881C", Offset = "0xC6881C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public static int _StencilRef
		{
			[Token(Token = "0x6000306")]
			[Address(RVA = "0x10D923C", Offset = "0x10D923C", VA = "0x10D923C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6882C", Offset = "0xC6882C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000307")]
			[Address(RVA = "0x10DEB64", Offset = "0x10DEB64", VA = "0x10DEB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6883C", Offset = "0xC6883C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public static int _Cull
		{
			[Token(Token = "0x6000308")]
			[Address(RVA = "0x10DBB10", Offset = "0x10DBB10", VA = "0x10DBB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6884C", Offset = "0xC6884C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000309")]
			[Address(RVA = "0x10DEBD0", Offset = "0x10DEBD0", VA = "0x10DEBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6885C", Offset = "0xC6885C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public static int _HighlightingBlur1
		{
			[Token(Token = "0x600030A")]
			[Address(RVA = "0x10DE3E4", Offset = "0x10DE3E4", VA = "0x10DE3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6886C", Offset = "0xC6886C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600030B")]
			[Address(RVA = "0x10DEC3C", Offset = "0x10DEC3C", VA = "0x10DEC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6887C", Offset = "0xC6887C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public static int _HighlightingBlur2
		{
			[Token(Token = "0x600030C")]
			[Address(RVA = "0x10DE44C", Offset = "0x10DE44C", VA = "0x10DE44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6888C", Offset = "0xC6888C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600030D")]
			[Address(RVA = "0x10DECA8", Offset = "0x10DECA8", VA = "0x10DECA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6889C", Offset = "0xC6889C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public static int _HighlightingBuffer
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0x10DD6F4", Offset = "0x10DD6F4", VA = "0x10DD6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688AC", Offset = "0xC688AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600030F")]
			[Address(RVA = "0x10DED14", Offset = "0x10DED14", VA = "0x10DED14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688BC", Offset = "0xC688BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public static int _HighlightingBlurred
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0x10DE51C", Offset = "0x10DE51C", VA = "0x10DE51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688CC", Offset = "0xC688CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000311")]
			[Address(RVA = "0x10DED80", Offset = "0x10DED80", VA = "0x10DED80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688DC", Offset = "0xC688DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public static int _HighlightingBlurOffset
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0x10DE4B4", Offset = "0x10DE4B4", VA = "0x10DE4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688EC", Offset = "0xC688EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000313")]
			[Address(RVA = "0x10DEDEC", Offset = "0x10DEDEC", VA = "0x10DEDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC688FC", Offset = "0xC688FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public static int _HighlightingZWrite
		{
			[Token(Token = "0x6000314")]
			[Address(RVA = "0x10DB600", Offset = "0x10DB600", VA = "0x10DB600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6890C", Offset = "0xC6890C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000315")]
			[Address(RVA = "0x10DEE58", Offset = "0x10DEE58", VA = "0x10DEE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6891C", Offset = "0xC6891C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public static int _HighlightingOffsetFactor
		{
			[Token(Token = "0x6000316")]
			[Address(RVA = "0x10DB750", Offset = "0x10DB750", VA = "0x10DB750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6892C", Offset = "0xC6892C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000317")]
			[Address(RVA = "0x10DEEC4", Offset = "0x10DEEC4", VA = "0x10DEEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6893C", Offset = "0xC6893C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public static int _HighlightingOffsetUnits
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0x10DB8A0", Offset = "0x10DB8A0", VA = "0x10DB8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6894C", Offset = "0xC6894C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000319")]
			[Address(RVA = "0x10DEF30", Offset = "0x10DEF30", VA = "0x10DEF30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6895C", Offset = "0xC6895C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public static int _HighlightingBufferTexelSize
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0x10DD75C", Offset = "0x10DD75C", VA = "0x10DD75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6896C", Offset = "0xC6896C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x10DEF9C", Offset = "0x10DEF9C", VA = "0x10DEF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6897C", Offset = "0xC6897C")]
			private set
			{
			}
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x10D8F38", Offset = "0x10D8F38", VA = "0x10D8F38")]
		public static void Initialize()
		{
		}
	}
}
namespace I2.Loc
{
	[Serializable]
	[Token(Token = "0x2000060")]
	public class EventCallback
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x10E00A0", Offset = "0x10E00A0", VA = "0x10E00A0")]
		public EventCallback()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x10E0100", Offset = "0x10E0100", VA = "0x10E0100")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x10E01D4", Offset = "0x10E01D4", VA = "0x10E01D4")]
		public bool HasCallback()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000061")]
	public enum ePluralType
	{
		[Token(Token = "0x40001F3")]
		Zero,
		[Token(Token = "0x40001F4")]
		One,
		[Token(Token = "0x40001F5")]
		Two,
		[Token(Token = "0x40001F6")]
		Few,
		[Token(Token = "0x40001F7")]
		Many,
		[Token(Token = "0x40001F8")]
		Plural
	}
	[Token(Token = "0x2000062")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000063")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x40001FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x40001FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x40001FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x40001FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x10E027C", Offset = "0x10E027C", VA = "0x10E027C")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x10E0700", Offset = "0x10E0700", VA = "0x10E0700")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x10E0C20", Offset = "0x10E0C20", VA = "0x10E0C20")]
		public static string GetClosestLanguage(string Filter)
		{
			return null;
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x10E0528", Offset = "0x10E0528", VA = "0x10E0528")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x10E0E5C", Offset = "0x10E0E5C", VA = "0x10E0E5C")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x10E0FC4", Offset = "0x10E0FC4", VA = "0x10E0FC4")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x10E1094", Offset = "0x10E1094", VA = "0x10E1094")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x10E122C", Offset = "0x10E122C", VA = "0x10E122C")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x10E1428", Offset = "0x10E1428", VA = "0x10E1428")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x10E15F4", Offset = "0x10E15F4", VA = "0x10E15F4")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x10E17CC", Offset = "0x10E17CC", VA = "0x10E17CC")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x10E19D8", Offset = "0x10E19D8", VA = "0x10E19D8")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x10E1BB8", Offset = "0x10E1BB8", VA = "0x10E1BB8")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x10E2308", Offset = "0x10E2308", VA = "0x10E2308")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x10E22F0", Offset = "0x10E22F0", VA = "0x10E22F0")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000064")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6899C", Offset = "0xC6899C")]
		private sealed class <Translate>c__AnonStorey1
		{
			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Action<string, string> OnTranslationReady;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string text;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal string LanguageCodeTo;

			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x10E5C58", Offset = "0x10E5C58", VA = "0x10E5C58")]
			public <Translate>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x10E78A8", Offset = "0x10E78A8", VA = "0x10E78A8")]
			internal void <>m__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC689AC", Offset = "0xC689AC")]
		private sealed class <WaitForTranslation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WWW www;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int <numWWW>__0;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string <errorMsg>__0;

			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Dictionary<string, TranslationQuery> requests;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x170002A2")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60013BE")]
				[Address(RVA = "0x10E7D14", Offset = "0x10E7D14", VA = "0x10E7D14", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013BF")]
				[Address(RVA = "0x10E7D1C", Offset = "0x10E7D1C", VA = "0x10E7D1C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x10E7294", Offset = "0x10E7294", VA = "0x10E7294")]
			[DebuggerHidden]
			public <WaitForTranslation>c__Iterator0()
			{
			}

			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x10E79B4", Offset = "0x10E79B4", VA = "0x10E79B4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x10E7D24", Offset = "0x10E7D24", VA = "0x10E7D24", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x10E7D38", Offset = "0x10E7D38", VA = "0x10E7D38", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<WWW> mCurrentTranslations;

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x10E56D0", Offset = "0x10E56D0", VA = "0x10E56D0")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x10E59F8", Offset = "0x10E59F8", VA = "0x10E59F8")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, Action<string, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x10E5FE8", Offset = "0x10E5FE8", VA = "0x10E5FE8")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x10E5C60", Offset = "0x10E5C60", VA = "0x10E5C60")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x10E61A4", Offset = "0x10E61A4", VA = "0x10E61A4")]
		private static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x10E6970", Offset = "0x10E6970", VA = "0x10E6970")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x10E6EF4", Offset = "0x10E6EF4", VA = "0x10E6EF4")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x10E6FFC", Offset = "0x10E6FFC", VA = "0x10E6FFC")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x10E711C", Offset = "0x10E711C", VA = "0x10E711C")]
		public static string TitleCase(string s)
		{
			return null;
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x10E5F58", Offset = "0x10E5F58", VA = "0x10E5F58")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x10E641C", Offset = "0x10E641C", VA = "0x10E641C")]
		public static WWW GetTranslationWWW(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return null;
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x10E71F4", Offset = "0x10E71F4", VA = "0x10E71F4")]
		[DebuggerHidden]
		private static IEnumerator WaitForTranslation(WWW www, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x10E729C", Offset = "0x10E729C", VA = "0x10E729C")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x10E7728", Offset = "0x10E7728", VA = "0x10E7728")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x10E77B4", Offset = "0x10E77B4", VA = "0x10E77B4")]
		public static void CancelCurrentGoogleTranslations()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public struct TranslationQuery
	{
		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Text;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string LanguageCode;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Results;
	}
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC68A0C", Offset = "0xC68A0C")]
	public class LanguageSource : MonoBehaviour
	{
		[Token(Token = "0x2000068")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x400021D")]
			Always,
			[Token(Token = "0x400021E")]
			Never,
			[Token(Token = "0x400021F")]
			Daily,
			[Token(Token = "0x4000220")]
			Weekly,
			[Token(Token = "0x4000221")]
			Monthly,
			[Token(Token = "0x4000222")]
			OnlyOnce
		}

		[Token(Token = "0x2000070")]
		public enum eInputSpecialization
		{
			[Token(Token = "0x4000231")]
			PC,
			[Token(Token = "0x4000232")]
			Touch,
			[Token(Token = "0x4000233")]
			Controller
		}

		[Token(Token = "0x2000077")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x400025A")]
			Empty,
			[Token(Token = "0x400025B")]
			Fallback,
			[Token(Token = "0x400025C")]
			ShowWarning
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68AA0", Offset = "0xC68AA0")]
		private sealed class <Import_Google_Coroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal WWW <www>__0;

			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool <notError>__0;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal string <wwwText>__0;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal LanguageSource $this;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x170002A4")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60013C4")]
				[Address(RVA = "0x10EFB00", Offset = "0x10EFB00", VA = "0x10EFB00", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C5")]
				[Address(RVA = "0x10EFB08", Offset = "0x10EFB08", VA = "0x10EFB08", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x10EC530", Offset = "0x10EC530", VA = "0x10EC530")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>c__Iterator0()
			{
			}

			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x10EF5EC", Offset = "0x10EF5EC", VA = "0x10EF5EC", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x10EFB10", Offset = "0x10EFB10", VA = "0x10EFB10", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x10EFB24", Offset = "0x10EFB24", VA = "0x10EFB24", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<TermData> mTerms;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool NeverDestroy;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string mTerm_AppName;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x14000034")]
		public event Action<LanguageSource, bool, string> Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x600034F")]
			[Address(RVA = "0x10EB408", Offset = "0x10EB408", VA = "0x10EB408")]
			add
			{
			}
			[Token(Token = "0x6000350")]
			[Address(RVA = "0x10EB4F0", Offset = "0x10EB4F0", VA = "0x10EB4F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x10E7E08", Offset = "0x10E7E08", VA = "0x10E7E08")]
		public LanguageSource()
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x10E7F20", Offset = "0x10E7F20", VA = "0x10E7F20")]
		public string Export_I2CSV(string Category, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x10E84D4", Offset = "0x10E84D4", VA = "0x10E84D4")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, string postfix, string[] aLanguages, string[] aSecLanguages, char Separator, byte FlagBitMask, byte SecFlagBitMask)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x10E8754", Offset = "0x10E8754", VA = "0x10E8754")]
		public string Export_CSV(string Category, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x10E9034", Offset = "0x10E9034", VA = "0x10E9034")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string prefix, string[] aLanguages, string[] aSecLanguages, char Separator, byte FlagBitMask, byte SecFlagBitMask)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x10E8EB4", Offset = "0x10E8EB4", VA = "0x10E8EB4")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x10E932C", Offset = "0x10E932C", VA = "0x10E932C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x10E94E4", Offset = "0x10E94E4", VA = "0x10E94E4")]
		public WWW Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x10E96E0", Offset = "0x10E96E0", VA = "0x10E96E0")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x10E9A9C", Offset = "0x10E9A9C", VA = "0x10E9A9C")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x10EA970", Offset = "0x10EA970", VA = "0x10EA970")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x10E9AEC", Offset = "0x10E9AEC", VA = "0x10E9AEC")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x10EA9C0", Offset = "0x10EA9C0", VA = "0x10EA9C0")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x10EB31C", Offset = "0x10EB31C", VA = "0x10EB31C")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x10EB5D8", Offset = "0x10EB5D8", VA = "0x10EB5D8")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x10EB82C", Offset = "0x10EB82C", VA = "0x10EB82C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x10EBBD4", Offset = "0x10EBBD4", VA = "0x10EBBD4")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x10EC224", Offset = "0x10EC224", VA = "0x10EC224")]
		public void Import_Google(bool ForceUpdate = false)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x10EBAD4", Offset = "0x10EBAD4", VA = "0x10EBAD4")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x10EC4C4", Offset = "0x10EC4C4", VA = "0x10EC4C4")]
		[DebuggerHidden]
		private IEnumerator Import_Google_Coroutine()
		{
			return null;
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x10EC538", Offset = "0x10EC538", VA = "0x10EC538")]
		public WWW Import_Google_CreateWWWcall(bool ForceUpdate = false)
		{
			return null;
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x10EC6A4", Offset = "0x10EC6A4", VA = "0x10EC6A4")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x10EBC78", Offset = "0x10EBC78", VA = "0x10EBC78")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x10E98BC", Offset = "0x10E98BC", VA = "0x10E98BC")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x10EC890", Offset = "0x10EC890", VA = "0x10EC890")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x10EC764", Offset = "0x10EC764", VA = "0x10EC764")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x10EC998", Offset = "0x10EC998", VA = "0x10EC998")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x10ECB0C", Offset = "0x10ECB0C", VA = "0x10ECB0C")]
		public static eInputSpecialization GetCurrentInputType()
		{
			return default(eInputSpecialization);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x10ECB14", Offset = "0x10ECB14", VA = "0x10ECB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x10ECF6C", Offset = "0x10ECF6C", VA = "0x10ECF6C")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x10ED364", Offset = "0x10ED364", VA = "0x10ED364")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x10EAC8C", Offset = "0x10EAC8C", VA = "0x10EAC8C")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x10EAB08", Offset = "0x10EAB08", VA = "0x10EAB08")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x10ED490", Offset = "0x10ED490", VA = "0x10ED490")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x10ED678", Offset = "0x10ED678", VA = "0x10ED678")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x10ED718", Offset = "0x10ED718", VA = "0x10ED718")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x10ED7DC", Offset = "0x10ED7DC", VA = "0x10ED7DC")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x10ED9E0", Offset = "0x10ED9E0", VA = "0x10ED9E0")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x10EDE24", Offset = "0x10EDE24", VA = "0x10EDE24")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x10EDF70", Offset = "0x10EDF70", VA = "0x10EDF70")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x10EE140", Offset = "0x10EE140", VA = "0x10EE140")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x10EE1E8", Offset = "0x10EE1E8", VA = "0x10EE1E8")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x10EE6D8", Offset = "0x10EE6D8", VA = "0x10EE6D8")]
		public string GetTranslation(string term)
		{
			return null;
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x10EE764", Offset = "0x10EE764", VA = "0x10EE764")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x10EE9AC", Offset = "0x10EE9AC", VA = "0x10EE9AC")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x10EB0D4", Offset = "0x10EB0D4", VA = "0x10EB0D4")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x10EEC08", Offset = "0x10EEC08", VA = "0x10EEC08")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x10EEC28", Offset = "0x10EEC28", VA = "0x10EEC28")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x10EE9B8", Offset = "0x10EE9B8", VA = "0x10EE9B8")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x10EEE48", Offset = "0x10EEE48", VA = "0x10EEE48")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x10EAEA8", Offset = "0x10EAEA8", VA = "0x10EAEA8")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x10EF094", Offset = "0x10EF094", VA = "0x10EF094")]
		public bool IsEqualTo(LanguageSource Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x10ECC24", Offset = "0x10ECC24", VA = "0x10ECC24")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x10EAA6C", Offset = "0x10EAA6C", VA = "0x10EAA6C")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x10EF2A0", Offset = "0x10EF2A0", VA = "0x10EF2A0")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x10EF41C", Offset = "0x10EF41C", VA = "0x10EF41C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x10EF48C", Offset = "0x10EF48C", VA = "0x10EF48C")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}
	}
	[Token(Token = "0x2000067")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4000218")]
		None,
		[Token(Token = "0x4000219")]
		Replace,
		[Token(Token = "0x400021A")]
		Merge,
		[Token(Token = "0x400021B")]
		AddNewTerms
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x2000069")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4000224")]
		Array = 1,
		[Token(Token = "0x4000225")]
		Class,
		[Token(Token = "0x4000226")]
		Value,
		[Token(Token = "0x4000227")]
		IntValue,
		[Token(Token = "0x4000228")]
		DoubleValue,
		[Token(Token = "0x4000229")]
		BoolValue,
		[Token(Token = "0x400022A")]
		FloatValue
	}
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC68B00", Offset = "0xC68B00")]
	public class JSONNode
	{
		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68B38", Offset = "0xC68B38")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal JSONNode $current;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x170002A6")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60013CA")]
				[Address(RVA = "0x1173C08", Offset = "0x1173C08", VA = "0x1173C08", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013CB")]
				[Address(RVA = "0x1173C10", Offset = "0x1173C10", VA = "0x1173C10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x11728DC", Offset = "0x11728DC", VA = "0x11728DC")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x1173BF8", Offset = "0x1173BF8", VA = "0x1173BF8", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1173C18", Offset = "0x1173C18", VA = "0x1173C18", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x1173C1C", Offset = "0x1173C1C", VA = "0x1173C1C", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x1173C80", Offset = "0x1173C80", VA = "0x1173C80", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x1173C84", Offset = "0x1173C84", VA = "0x1173C84", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68BB8", Offset = "0xC68BB8")]
		private sealed class <>c__Iterator1 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IEnumerator<JSONNode> $locvar0;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal JSONNode <C>__1;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal IEnumerator<JSONNode> $locvar1;

			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal JSONNode <D>__2;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal JSONNode $this;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal JSONNode $current;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x170002A8")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60013D2")]
				[Address(RVA = "0x1174268", Offset = "0x1174268", VA = "0x1174268", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D3")]
				[Address(RVA = "0x1174270", Offset = "0x1174270", VA = "0x1174270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x1172968", Offset = "0x1172968", VA = "0x1172968")]
			[DebuggerHidden]
			public <>c__Iterator1()
			{
			}

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x1173D04", Offset = "0x1173D04", VA = "0x1173D04", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x1174278", Offset = "0x1174278", VA = "0x1174278", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x11743FC", Offset = "0x11743FC", VA = "0x11743FC", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x1174460", Offset = "0x1174460", VA = "0x1174460", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x1174464", Offset = "0x1174464", VA = "0x1174464", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x1172774", Offset = "0x1172774", VA = "0x1172774", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x117277C", Offset = "0x117277C", VA = "0x117277C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0x1172780", Offset = "0x1172780", VA = "0x1172780", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x1172788", Offset = "0x1172788", VA = "0x1172788", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public virtual string Value
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x117278C", Offset = "0x117278C", VA = "0x117278C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x11727DC", Offset = "0x11727DC", VA = "0x11727DC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public virtual int Count
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x11727E0", Offset = "0x11727E0", VA = "0x11727E0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000059")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0x1172870", Offset = "0x1172870", VA = "0x1172870", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x600038B")]
			[Address(RVA = "0x11728E4", Offset = "0x11728E4", VA = "0x11728E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public virtual int AsInt
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x1172A00", Offset = "0x1172A00", VA = "0x1172A00", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x1172A48", Offset = "0x1172A48", VA = "0x1172A48", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0x1172A90", Offset = "0x1172A90", VA = "0x1172A90", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x1172ADC", Offset = "0x1172ADC", VA = "0x1172ADC", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0x1172B24", Offset = "0x1172B24", VA = "0x1172B24", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000393")]
			[Address(RVA = "0x1172BCC", Offset = "0x1172BCC", VA = "0x1172BCC", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0x1172C14", Offset = "0x1172C14", VA = "0x1172C14", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x1172CE8", Offset = "0x1172CE8", VA = "0x1172CE8", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0x1172D68", Offset = "0x1172D68", VA = "0x1172D68", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x1172DE8", Offset = "0x1172DE8", VA = "0x1172DE8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x116EC38", Offset = "0x116EC38", VA = "0x116EC38")]
		public JSONNode()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1172770", Offset = "0x1172770", VA = "0x1172770", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x11727E8", Offset = "0x11727E8", VA = "0x11727E8", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1172858", Offset = "0x1172858", VA = "0x1172858", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1172860", Offset = "0x1172860", VA = "0x1172860", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1172868", Offset = "0x1172868", VA = "0x1172868", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1172970", Offset = "0x1172970", VA = "0x1172970", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x11729B8", Offset = "0x11729B8", VA = "0x11729B8", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1172E68", Offset = "0x1172E68", VA = "0x1172E68")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1172ECC", Offset = "0x1172ECC", VA = "0x1172ECC")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x11717D8", Offset = "0x11717D8", VA = "0x11717D8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x1172F1C", Offset = "0x1172F1C", VA = "0x1172F1C")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1172F38", Offset = "0x1172F38", VA = "0x1172F38", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x11721B0", Offset = "0x11721B0", VA = "0x11721B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1170A2C", Offset = "0x1170A2C", VA = "0x1170A2C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x116E358", Offset = "0x116E358", VA = "0x116E358")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1172F54", Offset = "0x1172F54", VA = "0x1172F54", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1172F58", Offset = "0x1172F58", VA = "0x1172F58")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1172FD8", Offset = "0x1172FD8", VA = "0x1172FD8")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1173048", Offset = "0x1173048", VA = "0x1173048")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x11730B8", Offset = "0x11730B8", VA = "0x11730B8")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1173128", Offset = "0x1173128", VA = "0x1173128")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x11732A0", Offset = "0x11732A0", VA = "0x11732A0")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1173420", Offset = "0x1173420", VA = "0x1173420")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x11737C4", Offset = "0x11737C4", VA = "0x11737C4")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1173834", Offset = "0x1173834", VA = "0x1173834")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x11738A4", Offset = "0x11738A4", VA = "0x11738A4")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1173914", Offset = "0x1173914", VA = "0x1173914")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1173A30", Offset = "0x1173A30", VA = "0x1173A30")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1173B40", Offset = "0x1173B40", VA = "0x1173B40")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}
	}
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC68C38", Offset = "0xC68C38")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68C80", Offset = "0xC68C80")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal JSONNode <N>__1;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal JSONArray $this;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal JSONNode $current;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x170002AA")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60013DA")]
				[Address(RVA = "0x116F84C", Offset = "0x116F84C", VA = "0x116F84C", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DB")]
				[Address(RVA = "0x116F854", Offset = "0x116F854", VA = "0x116F854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x116F16C", Offset = "0x116F16C", VA = "0x116F16C")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x116F6D8", Offset = "0x116F6D8", VA = "0x116F6D8", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x116F85C", Offset = "0x116F85C", VA = "0x116F85C", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x116F8D4", Offset = "0x116F8D4", VA = "0x116F8D4", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x116F938", Offset = "0x116F938", VA = "0x116F938", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x116F93C", Offset = "0x116F93C", VA = "0x116F93C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68D00", Offset = "0xC68D00")]
		private sealed class <GetEnumerator>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal JSONNode <N>__1;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal JSONArray $this;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal object $current;

			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x170002AC")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60013E2")]
				[Address(RVA = "0x116FB48", Offset = "0x116FB48", VA = "0x116FB48", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E3")]
				[Address(RVA = "0x116FB50", Offset = "0x116FB50", VA = "0x116FB50", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x116F1E0", Offset = "0x116F1E0", VA = "0x116F1E0")]
			[DebuggerHidden]
			public <GetEnumerator>c__Iterator1()
			{
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x116F9D4", Offset = "0x116F9D4", VA = "0x116F9D4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x116FB58", Offset = "0x116FB58", VA = "0x116FB58", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x116FBD0", Offset = "0x116FBD0", VA = "0x116FBD0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000061")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x116EC40", Offset = "0x116EC40", VA = "0x116EC40", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x116ED38", Offset = "0x116ED38", VA = "0x116ED38", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x116EE08", Offset = "0x116EE08", VA = "0x116EE08", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x116EE6C", Offset = "0x116EE6C", VA = "0x116EE6C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public override int Count
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0x116EED8", Offset = "0x116EED8", VA = "0x116EED8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000064")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0x116F0E8", Offset = "0x116F0E8", VA = "0x116F0E8", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x116EBC8", Offset = "0x116EBC8", VA = "0x116EBC8")]
		public JSONArray()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x116EF34", Offset = "0x116EF34", VA = "0x116EF34", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x116EFA0", Offset = "0x116EFA0", VA = "0x116EFA0", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x116F074", Offset = "0x116F074", VA = "0x116F074", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x116F174", Offset = "0x116F174", VA = "0x116F174", Slot = "29")]
		[DebuggerHidden]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x116F1E8", Offset = "0x116F1E8", VA = "0x116F1E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x116F39C", Offset = "0x116F39C", VA = "0x116F39C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x116F5B8", Offset = "0x116F5B8", VA = "0x116F5B8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC68D60", Offset = "0xC68D60")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68DA8", Offset = "0xC68DA8")]
		private sealed class <Remove>c__AnonStorey2
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal JSONNode aNode;

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x1170584", Offset = "0x1170584", VA = "0x1170584")]
			public <Remove>c__AnonStorey2()
			{
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x117176C", Offset = "0x117176C", VA = "0x117176C")]
			internal bool <>m__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68DB8", Offset = "0xC68DB8")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Dictionary<string, JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal KeyValuePair<string, JSONNode> <N>__1;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal JSONClass $this;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal JSONNode $current;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool $disposing;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal int $PC;

			[Token(Token = "0x170002AE")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60013EA")]
				[Address(RVA = "0x1171360", Offset = "0x1171360", VA = "0x1171360", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013EB")]
				[Address(RVA = "0x1171368", Offset = "0x1171368", VA = "0x1171368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x1170610", Offset = "0x1170610", VA = "0x1170610")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x11711C8", Offset = "0x11711C8", VA = "0x11711C8", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x1171370", Offset = "0x1171370", VA = "0x1171370", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x11713E8", Offset = "0x11713E8", VA = "0x11713E8", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x117144C", Offset = "0x117144C", VA = "0x117144C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x1171450", Offset = "0x1171450", VA = "0x1171450", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68E38", Offset = "0xC68E38")]
		private sealed class <GetEnumerator>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Dictionary<string, JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal KeyValuePair<string, JSONNode> <N>__1;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal JSONClass $this;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal object $current;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool $disposing;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal int $PC;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60013F2")]
				[Address(RVA = "0x1171680", Offset = "0x1171680", VA = "0x1171680", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F3")]
				[Address(RVA = "0x1171688", Offset = "0x1171688", VA = "0x1171688", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x1170684", Offset = "0x1170684", VA = "0x1170684")]
			[DebuggerHidden]
			public <GetEnumerator>c__Iterator1()
			{
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x11714E8", Offset = "0x11714E8", VA = "0x11714E8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x1171690", Offset = "0x1171690", VA = "0x1171690", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x1171708", Offset = "0x1171708", VA = "0x1171708", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000065")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0x116FCE4", Offset = "0x116FCE4", VA = "0x116FCE4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x116FDE4", Offset = "0x116FDE4", VA = "0x116FDE4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0x116FEAC", Offset = "0x116FEAC", VA = "0x116FEAC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0x116FF78", Offset = "0x116FF78", VA = "0x116FF78", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public override int Count
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x1170068", Offset = "0x1170068", VA = "0x1170068", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000068")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60003C6")]
			[Address(RVA = "0x117058C", Offset = "0x117058C", VA = "0x117058C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x116FC34", Offset = "0x116FC34", VA = "0x116FC34")]
		public JSONClass()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x11700C4", Offset = "0x11700C4", VA = "0x11700C4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x11701F8", Offset = "0x11701F8", VA = "0x11701F8", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x11702C4", Offset = "0x11702C4", VA = "0x11702C4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x11703C8", Offset = "0x11703C8", VA = "0x11703C8", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1170618", Offset = "0x1170618", VA = "0x1170618", Slot = "29")]
		[DebuggerHidden]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x117068C", Offset = "0x117068C", VA = "0x117068C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1170BE4", Offset = "0x1170BE4", VA = "0x1170BE4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1170FE0", Offset = "0x1170FE0", VA = "0x1170FE0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200006D")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000069")]
		public override string Value
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x11719B0", Offset = "0x11719B0", VA = "0x11719B0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x11719B8", Offset = "0x11719B8", VA = "0x11719B8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1171884", Offset = "0x1171884", VA = "0x1171884")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x11718B0", Offset = "0x11718B0", VA = "0x11718B0")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x11718F4", Offset = "0x11718F4", VA = "0x11718F4")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1171938", Offset = "0x1171938", VA = "0x1171938")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1171974", Offset = "0x1171974", VA = "0x1171974")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x11719C0", Offset = "0x11719C0", VA = "0x11719C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1171A24", Offset = "0x1171A24", VA = "0x1171A24", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1171A88", Offset = "0x1171A88", VA = "0x1171A88", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xC68E98", Offset = "0xC68E98")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700006A")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x1171E34", Offset = "0x1171E34", VA = "0x1171E34", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x1171E98", Offset = "0x1171E98", VA = "0x1171E98", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public override JSONNode Item
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x1171F20", Offset = "0x1171F20", VA = "0x1171F20", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x1171F90", Offset = "0x1171F90", VA = "0x1171F90", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public override int AsInt
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0x1172258", Offset = "0x1172258", VA = "0x1172258", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x11722DC", Offset = "0x11722DC", VA = "0x11722DC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public override float AsFloat
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x1172364", Offset = "0x1172364", VA = "0x1172364", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x11723F4", Offset = "0x11723F4", VA = "0x11723F4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public override double AsDouble
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x117247C", Offset = "0x117247C", VA = "0x117247C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x117250C", Offset = "0x117250C", VA = "0x117250C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public override bool AsBool
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x1172594", Offset = "0x1172594", VA = "0x1172594", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x1172618", Offset = "0x1172618", VA = "0x1172618", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x11726A0", Offset = "0x11726A0", VA = "0x11726A0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x1172708", Offset = "0x1172708", VA = "0x1172708", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x116ED0C", Offset = "0x116ED0C", VA = "0x116ED0C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x116FDAC", Offset = "0x116FDAC", VA = "0x116FDAC")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1171DC0", Offset = "0x1171DC0", VA = "0x1171DC0")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1172020", Offset = "0x1172020", VA = "0x1172020", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x11720A8", Offset = "0x11720A8", VA = "0x11720A8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1172138", Offset = "0x1172138", VA = "0x1172138")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1172150", Offset = "0x1172150", VA = "0x1172150")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1172180", Offset = "0x1172180", VA = "0x1172180", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x11721A8", Offset = "0x11721A8", VA = "0x11721A8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x11721B8", Offset = "0x11721B8", VA = "0x11721B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1172208", Offset = "0x1172208", VA = "0x1172208", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x200006F")]
	public static class JSON
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x116E354", Offset = "0x116E354", VA = "0x116E354")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000071")]
	public enum eTermType
	{
		[Token(Token = "0x4000235")]
		Text,
		[Token(Token = "0x4000236")]
		Font,
		[Token(Token = "0x4000237")]
		Texture,
		[Token(Token = "0x4000238")]
		AudioClip,
		[Token(Token = "0x4000239")]
		GameObject,
		[Token(Token = "0x400023A")]
		Sprite,
		[Token(Token = "0x400023B")]
		Material,
		[Token(Token = "0x400023C")]
		Child,
		[Token(Token = "0x400023D")]
		TextMeshPFont,
		[Token(Token = "0x400023E")]
		Object
	}
	[Token(Token = "0x2000072")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4000240")]
		AutoTranslated_Normal = 1,
		[Token(Token = "0x4000241")]
		AutoTranslated_Touch = 2,
		[Token(Token = "0x4000242")]
		AutoTranslated_All = byte.MaxValue
	}
	[Token(Token = "0x2000073")]
	public enum eTransTag_Input
	{
		[Token(Token = "0x4000244")]
		Any,
		[Token(Token = "0x4000245")]
		PC,
		[Token(Token = "0x4000246")]
		Touch,
		[Token(Token = "0x4000247")]
		VR,
		[Token(Token = "0x4000248")]
		XBox,
		[Token(Token = "0x4000249")]
		PS4,
		[Token(Token = "0x400024A")]
		Controller
	}
	[Serializable]
	[Token(Token = "0x2000074")]
	public class TermData
	{
		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Languages_Touch;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] Flags;

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1174A7C", Offset = "0x1174A7C", VA = "0x1174A7C")]
		public TermData()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1174B58", Offset = "0x1174B58", VA = "0x1174B58")]
		public string GetTranslation(int idx, eTransTag_Input input = eTransTag_Input.Any)
		{
			return null;
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1174C04", Offset = "0x1174C04", VA = "0x1174C04")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1174C70", Offset = "0x1174C70", VA = "0x1174C70")]
		public bool HasTouchTranslations()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1174DC4", Offset = "0x1174DC4", VA = "0x1174DC4")]
		public void Validate()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1174BFC", Offset = "0x1174BFC", VA = "0x1174BFC")]
		public static bool IsTouchType()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1174F38", Offset = "0x1174F38", VA = "0x1174F38")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000075")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4000252")]
		DISABLED = 1,
		[Token(Token = "0x4000253")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4000254")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000076")]
	public class LanguageData
	{
		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x10E7DB0", Offset = "0x10E7DB0", VA = "0x10E7DB0")]
		public LanguageData()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x10E7DB8", Offset = "0x10E7DB8", VA = "0x10E7DB8")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x10E7DC8", Offset = "0x10E7DC8", VA = "0x10E7DC8")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x10E7DD8", Offset = "0x10E7DD8", VA = "0x10E7DD8")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x10E7DE8", Offset = "0x10E7DE8", VA = "0x10E7DE8")]
		public void SetLoaded(bool loaded)
		{
		}
	}
	[Token(Token = "0x2000078")]
	public enum CacheType
	{
		[Token(Token = "0x400025E")]
		Normal,
		[Token(Token = "0x400025F")]
		Persistant
	}
	[Token(Token = "0x2000079")]
	public static class LocalizationManager
	{
		[Token(Token = "0x200007A")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x200007B")]
		private delegate object _GetParam(string param);

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F8C", Offset = "0xC68F8C")]
		private sealed class <RemoveNonASCII>c__AnonStorey2
		{
			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool allowCategory;

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x1160724", Offset = "0x1160724", VA = "0x1160724")]
			public <RemoveNonASCII>c__AnonStorey2()
			{
			}

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x116072C", Offset = "0x116072C", VA = "0x116072C")]
			internal char <>m__0(char c)
			{
				return default(char);
			}
		}

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F9C", Offset = "0xC68F9C")]
		private sealed class <Coroutine_LocalizeAll>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool <force>__0;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60013FA")]
				[Address(RVA = "0x1160428", Offset = "0x1160428", VA = "0x1160428", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FB")]
				[Address(RVA = "0x1160430", Offset = "0x1160430", VA = "0x1160430", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x1160300", Offset = "0x1160300", VA = "0x1160300")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>c__Iterator0()
			{
			}

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1160308", Offset = "0x1160308", VA = "0x1160308", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x1160438", Offset = "0x1160438", VA = "0x1160438", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x116044C", Offset = "0x116044C", VA = "0x116044C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68FFC", Offset = "0xC68FFC")]
		private sealed class <ApplyLocalizationParams>c__AnonStorey3
		{
			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GameObject root;

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x11601E4", Offset = "0x11601E4", VA = "0x11601E4")]
			public <ApplyLocalizationParams>c__AnonStorey3()
			{
			}

			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x11601EC", Offset = "0x11601EC", VA = "0x11601EC")]
			internal object <>m__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6900C", Offset = "0xC6900C")]
		private sealed class <ApplyLocalizationParams>c__AnonStorey4
		{
			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Dictionary<string, object> parameters;

			[Token(Token = "0x6001400")]
			[Address(RVA = "0x116026C", Offset = "0x116026C", VA = "0x116026C")]
			public <ApplyLocalizationParams>c__AnonStorey4()
			{
			}

			[Token(Token = "0x6001401")]
			[Address(RVA = "0x1160274", Offset = "0x1160274", VA = "0x1160274")]
			internal object <>m__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6901C", Offset = "0xC6901C")]
		private sealed class <Delayed_Import_Google>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal LanguageSource source;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002B4")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001404")]
				[Address(RVA = "0x116059C", Offset = "0x116059C", VA = "0x116059C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001405")]
				[Address(RVA = "0x11605A4", Offset = "0x11605A4", VA = "0x11605A4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0x11604B0", Offset = "0x11604B0", VA = "0x11604B0")]
			[DebuggerHidden]
			public <Delayed_Import_Google>c__Iterator1()
			{
			}

			[Token(Token = "0x6001403")]
			[Address(RVA = "0x11604B8", Offset = "0x11604B8", VA = "0x11604B8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0x11605AC", Offset = "0x11605AC", VA = "0x11605AC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0x11605C0", Offset = "0x11605C0", VA = "0x11605C0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6907C", Offset = "0xC6907C")]
		private sealed class <GetAllLanguages>c__AnonStorey5
		{
			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<string> Languages;

			[Token(Token = "0x6001408")]
			[Address(RVA = "0x1160624", Offset = "0x1160624", VA = "0x1160624")]
			public <GetAllLanguages>c__AnonStorey5()
			{
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0x116062C", Offset = "0x116062C", VA = "0x116062C")]
			internal bool <>m__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6908C", Offset = "0xC6908C")]
		private sealed class <GetAllLanguagesCode>c__AnonStorey6
		{
			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal List<string> Languages;

			[Token(Token = "0x600140A")]
			[Address(RVA = "0x11606A4", Offset = "0x11606A4", VA = "0x11606A4")]
			public <GetAllLanguagesCode>c__AnonStorey6()
			{
			}

			[Token(Token = "0x600140B")]
			[Address(RVA = "0x11606AC", Offset = "0x11606AC", VA = "0x11606AC")]
			internal bool <>m__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CacheType CacheType;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string mLanguageCode;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<LanguageSource> Sources;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] GlobalSources;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static ILocalizeTarget[] mLocalizeTargets;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Regex sm_Regex;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F0C", Offset = "0xC68F0C")]
		private static MatchEvaluator <>f__am$cache0;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F1C", Offset = "0xC68F1C")]
		private static MatchEvaluator <>f__am$cache1;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F2C", Offset = "0xC68F2C")]
		private static _GetParam <>f__am$cache2;

		[Token(Token = "0x17000072")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x10EB7C0", Offset = "0x10EB7C0", VA = "0x10EB7C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x10EFC70", Offset = "0x10EFC70", VA = "0x10EFC70")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x10F0454", Offset = "0x10F0454", VA = "0x10F0454")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x10F04C0", Offset = "0x10F04C0", VA = "0x10F04C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public static string CurrentRegion
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x10F07DC", Offset = "0x10F07DC", VA = "0x10F07DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000400")]
			[Address(RVA = "0x10F098C", Offset = "0x10F098C", VA = "0x10F098C")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x10F0B7C", Offset = "0x10F0B7C", VA = "0x10F0B7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000402")]
			[Address(RVA = "0x10F0C5C", Offset = "0x10F0C5C", VA = "0x10F0C5C")]
			set
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6000409")]
			[Address(RVA = "0x10F18B8", Offset = "0x10F18B8", VA = "0x10F18B8")]
			add
			{
			}
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x10F19F4", Offset = "0x10F19F4", VA = "0x10F19F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x10EFB88", Offset = "0x10EFB88", VA = "0x10EFB88")]
		private static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x10F0244", Offset = "0x10F0244", VA = "0x10F0244")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x10F1578", Offset = "0x10F1578", VA = "0x10F1578")]
		private static CultureInfo GetCulture(string code)
		{
			return null;
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x10DFDE0", Offset = "0x10DFDE0", VA = "0x10DFDE0")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x10F1394", Offset = "0x10F1394", VA = "0x10F1394")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x10F0E14", Offset = "0x10F0E14", VA = "0x10F0E14")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x10F1B30", Offset = "0x10F1B30", VA = "0x10F1B30")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x10F1E08", Offset = "0x10F1E08", VA = "0x10F1E08")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x10F1BF4", Offset = "0x10F1BF4", VA = "0x10F1BF4")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x10F2700", Offset = "0x10F2700", VA = "0x10F2700")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x10F2970", Offset = "0x10F2970", VA = "0x10F2970")]
		private static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x10F2B54", Offset = "0x10F2B54", VA = "0x10F2B54")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x10F1F80", Offset = "0x10F1F80", VA = "0x10F1F80")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x10F2BC0", Offset = "0x10F2BC0", VA = "0x10F2BC0")]
		public static string ApplyRTLfix1(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x10F3068", Offset = "0x10F3068", VA = "0x10F3068")]
		internal static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x10EEF78", Offset = "0x10EEF78", VA = "0x10EEF78")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x10F3070", Offset = "0x10F3070", VA = "0x10F3070")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x10EF9EC", Offset = "0x10EF9EC", VA = "0x10EF9EC")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x10F3368", Offset = "0x10F3368", VA = "0x10F3368")]
		[DebuggerHidden]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x10F3124", Offset = "0x10F3124", VA = "0x10F3124")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x10F33C4", Offset = "0x10F33C4", VA = "0x10F33C4")]
		public static void ApplyLocalizationParams(ref string translation)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x10F1EB4", Offset = "0x10F1EB4", VA = "0x10F1EB4")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x10F3810", Offset = "0x10F3810", VA = "0x10F3810")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x10F34B8", Offset = "0x10F34B8", VA = "0x10F34B8")]
		private static void ApplyLocalizationParamsInternal(ref string translation, _GetParam getParam)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x10F38DC", Offset = "0x10F38DC", VA = "0x10F38DC")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x10F3B40", Offset = "0x10F3B40", VA = "0x10F3B40")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x10F0D7C", Offset = "0x10F0D7C", VA = "0x10F0D7C")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x10F3DE8", Offset = "0x10F3DE8", VA = "0x10F3DE8")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x10F414C", Offset = "0x10F414C", VA = "0x10F414C")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x10F3F58", Offset = "0x10F3F58", VA = "0x10F3F58")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x10ECDBC", Offset = "0x10ECDBC", VA = "0x10ECDBC")]
		internal static void AddSource(LanguageSource Source)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x10F43E0", Offset = "0x10F43E0", VA = "0x10F43E0")]
		[DebuggerHidden]
		private static IEnumerator Delayed_Import_Google(LanguageSource source, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x10F4358", Offset = "0x10F4358", VA = "0x10F4358")]
		internal static void RemoveSource(LanguageSource Source)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x10F446C", Offset = "0x10F446C", VA = "0x10F446C")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x10F1680", Offset = "0x10F1680", VA = "0x10F1680")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x10EFD6C", Offset = "0x10EFD6C", VA = "0x10EFD6C")]
		public static string GetSupportedLanguage(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x10F0038", Offset = "0x10F0038", VA = "0x10F0038")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x10F05C4", Offset = "0x10F05C4", VA = "0x10F05C4")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x10F44F8", Offset = "0x10F44F8", VA = "0x10F44F8")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x10F4780", Offset = "0x10F4780", VA = "0x10F4780")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x10F49A4", Offset = "0x10F49A4", VA = "0x10F49A4")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x10F4AC4", Offset = "0x10F4AC4", VA = "0x10F4AC4")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x10F4BFC", Offset = "0x10F4BFC", VA = "0x10F4BFC")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x10F4E90", Offset = "0x10F4E90", VA = "0x10F4E90")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x10F4FB0", Offset = "0x10F4FB0", VA = "0x10F4FB0")]
		public static LanguageSource GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x10F51C8", Offset = "0x10F51C8", VA = "0x10F51C8")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x10F5328", Offset = "0x10F5328", VA = "0x10F5328")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x10EC75C", Offset = "0x10EC75C", VA = "0x10EC75C")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x10E579C", Offset = "0x10E579C", VA = "0x10E579C")]
		public static string GetWebServiceURL([Optional] LanguageSource source)
		{
			return null;
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x10F5370", Offset = "0x10F5370", VA = "0x10F5370")]
		public static void RegisterTarget(ILocalizeTarget obj)
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x10F14EC", Offset = "0x10F14EC", VA = "0x10F14EC")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x10E0270", Offset = "0x10E0270", VA = "0x10E0270")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x10F5D50", Offset = "0x10F5D50", VA = "0x10F5D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F5C", Offset = "0xC68F5C")]
		private static string <ApplyRTLfix1>m__0(Match m)
		{
			return null;
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x10F5DE0", Offset = "0x10F5DE0", VA = "0x10F5DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F6C", Offset = "0xC68F6C")]
		private static string <ApplyRTLfix1>m__1(Match m)
		{
			return null;
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x10F5E70", Offset = "0x10F5E70", VA = "0x10F5E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC68F7C", Offset = "0xC68F7C")]
		private static object <ApplyLocalizationParams>m__2(string p)
		{
			return null;
		}
	}
	[Token(Token = "0x200007C")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6909C", Offset = "0xC6909C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6909C", Offset = "0xC6909C")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x17000076")]
		public string Filter
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x1175020", Offset = "0x1175020", VA = "0x1175020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC690D8", Offset = "0xC690D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000447")]
			[Address(RVA = "0x1175018", Offset = "0x1175018", VA = "0x1175018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC690E8", Offset = "0xC690E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1174FEC", Offset = "0x1174FEC", VA = "0x1174FEC")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x200007D")]
	public class LocalizationReader
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1161C74", Offset = "0x1161C74", VA = "0x1161C74")]
		public LocalizationReader()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1161C7C", Offset = "0x1161C7C", VA = "0x1161C7C")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1161EE8", Offset = "0x1161EE8", VA = "0x1161EE8")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1162358", Offset = "0x1162358", VA = "0x1162358")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x11624E8", Offset = "0x11624E8", VA = "0x11624E8")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x11625D4", Offset = "0x11625D4", VA = "0x11625D4")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x11627F4", Offset = "0x11627F4", VA = "0x11627F4")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x11629A0", Offset = "0x11629A0", VA = "0x11629A0")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1162294", Offset = "0x1162294", VA = "0x1162294")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1162B9C", Offset = "0x1162B9C", VA = "0x1162B9C")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x11621F4", Offset = "0x11621F4", VA = "0x11621F4")]
		public static string DecodeString(string str)
		{
			return null;
		}
	}
	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC690F8", Offset = "0xC690F8")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x200007F")]
		public enum TermModification
		{
			[Token(Token = "0x4000290")]
			DontModify,
			[Token(Token = "0x4000291")]
			ToUpper,
			[Token(Token = "0x4000292")]
			ToLower,
			[Token(Token = "0x4000293")]
			ToUpperFirst,
			[Token(Token = "0x4000294")]
			ToTitle
		}

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEngine.Object mTarget;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreRTL;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Object[] TranslatedObjects;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool mGUI_ShowCallback;

		[NonSerialized]
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x17000077")]
		public string Term
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x1162D38", Offset = "0x1162D38", VA = "0x1162D38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000455")]
			[Address(RVA = "0x1162D40", Offset = "0x1162D40", VA = "0x1162D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x1162D88", Offset = "0x1162D88", VA = "0x1162D88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000457")]
			[Address(RVA = "0x1162D90", Offset = "0x1162D90", VA = "0x1162D90")]
			set
			{
			}
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1162C8C", Offset = "0x1162C8C", VA = "0x1162C8C")]
		public Localize()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x1162DF8", Offset = "0x1162DF8", VA = "0x1162DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x1162F94", Offset = "0x1162F94", VA = "0x1162F94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x1160FB8", Offset = "0x1160FB8", VA = "0x1160FB8")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x1162E34", Offset = "0x1162E34", VA = "0x1162E34")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x1163194", Offset = "0x1163194", VA = "0x1163194")]
		public void ReleaseTarget()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x1162F9C", Offset = "0x1162F9C", VA = "0x1162F9C")]
		private bool HasTargetCache()
		{
			return default(bool);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x1162FC0", Offset = "0x1162FC0", VA = "0x1162FC0")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x116319C", Offset = "0x116319C", VA = "0x116319C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1163210", Offset = "0x1163210", VA = "0x1163210")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1162D44", Offset = "0x1162D44", VA = "0x1162D44")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1162DA0", Offset = "0x1162DA0", VA = "0x1162DA0")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6000463")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000464")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000465")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x11632B4", Offset = "0x11632B4", VA = "0x11632B4")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6000467")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x11633FC", Offset = "0x11633FC", VA = "0x11633FC")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1163920", Offset = "0x1163920", VA = "0x1163920")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x11639F8", Offset = "0x11639F8", VA = "0x11639F8")]
		public void SetGlobalLanguage(string Language)
		{
		}
	}
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC69130", Offset = "0xC69130")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1163A64", Offset = "0x1163A64", VA = "0x1163A64")]
		public LocalizeDropdown()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x1163AD4", Offset = "0x1163AD4", VA = "0x1163AD4")]
		public void Start()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1163C98", Offset = "0x1163C98", VA = "0x1163C98")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1163D38", Offset = "0x1163D38", VA = "0x1163D38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1163B7C", Offset = "0x1163B7C", VA = "0x1163B7C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1163DA8", Offset = "0x1163DA8", VA = "0x1163DA8")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x1163F88", Offset = "0x1163F88", VA = "0x1163F88")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x1164390", Offset = "0x1164390", VA = "0x1164390")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x11641E8", Offset = "0x11641E8", VA = "0x11641E8")]
		private void FillValuesTMPro()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public abstract class ILocalizeTarget
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x10E7DA8", Offset = "0x10E7DA8", VA = "0x10E7DA8")]
		protected ILocalizeTarget()
		{
		}

		[Token(Token = "0x6000475")]
		public abstract bool FindTarget(Localize cmp);

		[Token(Token = "0x6000476")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6000477")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6000478")]
		public abstract ILocalizeTarget Clone(Localize cmp);

		[Token(Token = "0x6000479")]
		public abstract string GetName();

		[Token(Token = "0x600047A")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x600047B")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x600047C")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x600047D")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x600047E")]
		public abstract bool HasTarget(Localize cmp);

		[Token(Token = "0x600047F")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6000480")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);
	}
	[Token(Token = "0x2000082")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x6000481")]
		protected LocalizeTarget()
		{
		}

		[Token(Token = "0x6000482")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000483")]
		public override bool FindTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000484")]
		public T GetTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		public override bool HasTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		public override ILocalizeTarget Clone(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000487")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xC69168", Offset = "0xC69168")]
	public class I2RuntimeInitialize : RuntimeInitializeOnLoadMethodAttribute
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x10E7D9C", Offset = "0x10E7D9C", VA = "0x10E7D9C")]
		public I2RuntimeInitialize()
		{
		}
	}
	[Token(Token = "0x2000084")]
	public class LocalizeTarget_TextMeshPro_TMPLabel : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x1164798", Offset = "0x1164798", VA = "0x1164798")]
		static LocalizeTarget_TextMeshPro_TMPLabel()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x116481C", Offset = "0x116481C", VA = "0x116481C")]
		public LocalizeTarget_TextMeshPro_TMPLabel()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x116479C", Offset = "0x116479C", VA = "0x116479C")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1164880", Offset = "0x1164880", VA = "0x1164880", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x11648C8", Offset = "0x11648C8", VA = "0x11648C8", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x11648D0", Offset = "0x11648D0", VA = "0x11648D0", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x11648D8", Offset = "0x11648D8", VA = "0x11648D8", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x11648E0", Offset = "0x11648E0", VA = "0x11648E0", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x11648E8", Offset = "0x11648E8", VA = "0x11648E8", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x11648F0", Offset = "0x11648F0", VA = "0x11648F0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x1164A34", Offset = "0x1164A34", VA = "0x1164A34", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1165044", Offset = "0x1165044", VA = "0x1165044")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1165200", Offset = "0x1165200", VA = "0x1165200")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1165360", Offset = "0x1165360", VA = "0x1165360")]
		internal static string ReverseText(string source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000085")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x116545C", Offset = "0x116545C", VA = "0x116545C")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x11654E0", Offset = "0x11654E0", VA = "0x11654E0")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x1165460", Offset = "0x1165460", VA = "0x1165460")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x1165544", Offset = "0x1165544", VA = "0x1165544", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x116558C", Offset = "0x116558C", VA = "0x116558C", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1165594", Offset = "0x1165594", VA = "0x1165594", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x116559C", Offset = "0x116559C", VA = "0x116559C", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x11655A4", Offset = "0x11655A4", VA = "0x11655A4", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x11655AC", Offset = "0x11655AC", VA = "0x11655AC", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x11655B4", Offset = "0x11655B4", VA = "0x11655B4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x11656F8", Offset = "0x11656F8", VA = "0x11656F8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class LocalizeTarget_UnityStd_Texture : LocalizeTarget<GUITexture>
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x1167BFC", Offset = "0x1167BFC", VA = "0x1167BFC")]
		static LocalizeTarget_UnityStd_Texture()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x1167C80", Offset = "0x1167C80", VA = "0x1167C80")]
		public LocalizeTarget_UnityStd_Texture()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1167C00", Offset = "0x1167C00", VA = "0x1167C00")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1167CD0", Offset = "0x1167CD0", VA = "0x1167CD0", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1167D18", Offset = "0x1167D18", VA = "0x1167D18", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1167D20", Offset = "0x1167D20", VA = "0x1167D20", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1167D28", Offset = "0x1167D28", VA = "0x1167D28", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1167D30", Offset = "0x1167D30", VA = "0x1167D30", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x1167D38", Offset = "0x1167D38", VA = "0x1167D38", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1167D40", Offset = "0x1167D40", VA = "0x1167D40", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1167E54", Offset = "0x1167E54", VA = "0x1167E54", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x2000087")]
	public class LocalizeTarget_UnityStd_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x1165D0C", Offset = "0x1165D0C", VA = "0x1165D0C")]
		static LocalizeTarget_UnityStd_AudioSource()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1165D90", Offset = "0x1165D90", VA = "0x1165D90")]
		public LocalizeTarget_UnityStd_AudioSource()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1165D10", Offset = "0x1165D10", VA = "0x1165D10")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1165DE0", Offset = "0x1165DE0", VA = "0x1165DE0", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x1165E28", Offset = "0x1165E28", VA = "0x1165E28", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1165E30", Offset = "0x1165E30", VA = "0x1165E30", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1165E38", Offset = "0x1165E38", VA = "0x1165E38", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1165E40", Offset = "0x1165E40", VA = "0x1165E40", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1165E48", Offset = "0x1165E48", VA = "0x1165E48", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1165E50", Offset = "0x1165E50", VA = "0x1165E50", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1165F64", Offset = "0x1165F64", VA = "0x1165F64", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x2000088")]
	public class LocalizeTarget_UnityStd_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x11672F4", Offset = "0x11672F4", VA = "0x11672F4")]
		static LocalizeTarget_UnityStd_SpriteRenderer()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1167378", Offset = "0x1167378", VA = "0x1167378")]
		public LocalizeTarget_UnityStd_SpriteRenderer()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x11672F8", Offset = "0x11672F8", VA = "0x11672F8")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x11673C8", Offset = "0x11673C8", VA = "0x11673C8", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x1167410", Offset = "0x1167410", VA = "0x1167410", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1167418", Offset = "0x1167418", VA = "0x1167418", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1167420", Offset = "0x1167420", VA = "0x1167420", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1167428", Offset = "0x1167428", VA = "0x1167428", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1167430", Offset = "0x1167430", VA = "0x1167430", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1167438", Offset = "0x1167438", VA = "0x1167438", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1167550", Offset = "0x1167550", VA = "0x1167550", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x2000089")]
	public class LocalizeTarget_UnityStd_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1166A90", Offset = "0x1166A90", VA = "0x1166A90")]
		static LocalizeTarget_UnityStd_Prefab()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1166B14", Offset = "0x1166B14", VA = "0x1166B14")]
		public LocalizeTarget_UnityStd_Prefab()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1166A94", Offset = "0x1166A94", VA = "0x1166A94")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1166B64", Offset = "0x1166B64", VA = "0x1166B64", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1166BAC", Offset = "0x1166BAC", VA = "0x1166BAC", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1166BB4", Offset = "0x1166BB4", VA = "0x1166BB4", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1166BBC", Offset = "0x1166BBC", VA = "0x1166BBC", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1166BC4", Offset = "0x1166BC4", VA = "0x1166BC4", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1166BCC", Offset = "0x1166BCC", VA = "0x1166BCC", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1166BD4", Offset = "0x1166BD4", VA = "0x1166BD4", Slot = "4")]
		public override bool FindTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1166CD8", Offset = "0x1166CD8", VA = "0x1166CD8", Slot = "13")]
		public override bool HasTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1166CE0", Offset = "0x1166CE0", VA = "0x1166CE0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1166D74", Offset = "0x1166D74", VA = "0x1166D74", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1166FF4", Offset = "0x1166FF4", VA = "0x1166FF4")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x11672A4", Offset = "0x11672A4", VA = "0x11672A4", Slot = "9")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008A")]
	public class LocalizeTarget_UnityStd_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1166100", Offset = "0x1166100", VA = "0x1166100")]
		static LocalizeTarget_UnityStd_Child()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1166184", Offset = "0x1166184", VA = "0x1166184")]
		public LocalizeTarget_UnityStd_Child()
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1166104", Offset = "0x1166104", VA = "0x1166104")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x11661D4", Offset = "0x11661D4", VA = "0x11661D4", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x116621C", Offset = "0x116621C", VA = "0x116621C", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1166224", Offset = "0x1166224", VA = "0x1166224", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x116622C", Offset = "0x116622C", VA = "0x116622C", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1166234", Offset = "0x1166234", VA = "0x1166234", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x116623C", Offset = "0x116623C", VA = "0x116623C", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1166244", Offset = "0x1166244", VA = "0x1166244", Slot = "4")]
		public override bool FindTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x11662D8", Offset = "0x11662D8", VA = "0x11662D8", Slot = "13")]
		public override bool HasTarget(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x11662E0", Offset = "0x11662E0", VA = "0x11662E0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1166374", Offset = "0x1166374", VA = "0x1166374", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1166500", Offset = "0x1166500", VA = "0x1166500", Slot = "9")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008B")]
	public class LocalizeTarget_UnityStd_GUIText : LocalizeTarget<GUIText>
	{
		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignment mAlignment_RTL;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignment mAlignment_LTR;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x1166550", Offset = "0x1166550", VA = "0x1166550")]
		static LocalizeTarget_UnityStd_GUIText()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x11665D4", Offset = "0x11665D4", VA = "0x11665D4")]
		public LocalizeTarget_UnityStd_GUIText()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1166554", Offset = "0x1166554", VA = "0x1166554")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1166634", Offset = "0x1166634", VA = "0x1166634", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x116667C", Offset = "0x116667C", VA = "0x116667C", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1166684", Offset = "0x1166684", VA = "0x1166684", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x116668C", Offset = "0x116668C", VA = "0x116668C", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1166694", Offset = "0x1166694", VA = "0x1166694", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x116669C", Offset = "0x116669C", VA = "0x116669C", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x11666A4", Offset = "0x11666A4", VA = "0x11666A4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x11667E0", Offset = "0x11667E0", VA = "0x11667E0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x200008C")]
	public class LocalizeTarget_UnityStd_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignment mAlignment_RTL;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignment mAlignment_LTR;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1167688", Offset = "0x1167688", VA = "0x1167688")]
		static LocalizeTarget_UnityStd_TextMesh()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x116770C", Offset = "0x116770C", VA = "0x116770C")]
		public LocalizeTarget_UnityStd_TextMesh()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x116768C", Offset = "0x116768C", VA = "0x116768C")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x116776C", Offset = "0x116776C", VA = "0x116776C", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x11677B4", Offset = "0x11677B4", VA = "0x11677B4", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x11677BC", Offset = "0x11677BC", VA = "0x11677BC", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x11677C4", Offset = "0x11677C4", VA = "0x11677C4", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x11677CC", Offset = "0x11677CC", VA = "0x11677CC", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x11677D4", Offset = "0x11677D4", VA = "0x11677D4", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x11677DC", Offset = "0x11677DC", VA = "0x11677DC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1167918", Offset = "0x1167918", VA = "0x1167918", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1167F88", Offset = "0x1167F88", VA = "0x1167F88")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x116800C", Offset = "0x116800C", VA = "0x116800C")]
		public LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1167F8C", Offset = "0x1167F8C", VA = "0x1167F8C")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x116805C", Offset = "0x116805C", VA = "0x116805C", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x11680A4", Offset = "0x11680A4", VA = "0x11680A4", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x11680AC", Offset = "0x11680AC", VA = "0x11680AC", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x11680B4", Offset = "0x11680B4", VA = "0x11680B4", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x11680BC", Offset = "0x11680BC", VA = "0x11680BC", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1168184", Offset = "0x1168184", VA = "0x1168184", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x116818C", Offset = "0x116818C", VA = "0x116818C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x1168394", Offset = "0x1168394", VA = "0x1168394", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x11684CC", Offset = "0x11684CC", VA = "0x11684CC")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x1168550", Offset = "0x1168550", VA = "0x1168550")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x11684D0", Offset = "0x11684D0", VA = "0x11684D0")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x11685A0", Offset = "0x11685A0", VA = "0x11685A0", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x11685E8", Offset = "0x11685E8", VA = "0x11685E8", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x11685F0", Offset = "0x11685F0", VA = "0x11685F0", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x11685F8", Offset = "0x11685F8", VA = "0x11685F8", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1168600", Offset = "0x1168600", VA = "0x1168600", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1168608", Offset = "0x1168608", VA = "0x1168608", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1168610", Offset = "0x1168610", VA = "0x1168610", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1168734", Offset = "0x1168734", VA = "0x1168734", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}
	}
	[Token(Token = "0x200008F")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x116886C", Offset = "0x116886C", VA = "0x116886C")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x11688F0", Offset = "0x11688F0", VA = "0x11688F0")]
		public LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1168870", Offset = "0x1168870", VA = "0x1168870")]
		[I2RuntimeInitialize]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1168950", Offset = "0x1168950", VA = "0x1168950", Slot = "8")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1168998", Offset = "0x1168998", VA = "0x1168998", Slot = "14")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x11689A0", Offset = "0x11689A0", VA = "0x11689A0", Slot = "15")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x11689A8", Offset = "0x11689A8", VA = "0x11689A8", Slot = "10")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x11689B0", Offset = "0x11689B0", VA = "0x11689B0", Slot = "11")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x11689B8", Offset = "0x11689B8", VA = "0x11689B8", Slot = "12")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x11689C0", Offset = "0x11689C0", VA = "0x11689C0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1168B00", Offset = "0x1168B00", VA = "0x1168B00", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1168E64", Offset = "0x1168E64", VA = "0x1168E64")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x10DFD78", Offset = "0x10DFD78", VA = "0x10DFD78")]
		public AutoChangeCultureInfo()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x10DFD80", Offset = "0x10DFD80", VA = "0x10DFD80")]
		public void Start()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000079")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x10DFEA4", Offset = "0x10DFEA4", VA = "0x10DFEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x10DFE9C", Offset = "0x10DFE9C", VA = "0x10DFE9C")]
		public CoroutineManager()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x10DFFE8", Offset = "0x10DFFE8", VA = "0x10DFFE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10E0068", Offset = "0x10E0068", VA = "0x10E0068")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}
	}
	[Token(Token = "0x2000092")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x600051E")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x2000093")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000094")]
		public struct ParamValue
		{
			[Token(Token = "0x40002AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40002AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _AutoRegister;

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1160C38", Offset = "0x1160C38", VA = "0x1160C38")]
		public LocalizationParamsManager()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x1160CA8", Offset = "0x1160CA8", VA = "0x1160CA8", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1160D94", Offset = "0x1160D94", VA = "0x1160D94")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1160F08", Offset = "0x1160F08", VA = "0x1160F08")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1161A2C", Offset = "0x1161A2C", VA = "0x1161A2C", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1161B38", Offset = "0x1161B38", VA = "0x1161B38")]
		[I2RuntimeInitialize]
		public void AutoStart()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1161A3C", Offset = "0x1161A3C", VA = "0x1161A3C")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1161B48", Offset = "0x1161B48", VA = "0x1161B48")]
		public void OnDisable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000095")]
	public struct LocalizedString
	{
		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x11646A8", Offset = "0x11646A8", VA = "0x11646A8")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1164778", Offset = "0x1164778", VA = "0x1164778")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x1164790", Offset = "0x1164790", VA = "0x1164790", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000096")]
	public static class PersistentStorage
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1168F4C", Offset = "0x1168F4C", VA = "0x1168F4C")]
		public static bool Save(string fileName, string data)
		{
			return default(bool);
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x11690C4", Offset = "0x11690C4", VA = "0x11690C4")]
		public static string Load(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x11691D4", Offset = "0x11691D4", VA = "0x11691D4")]
		public static void Delete(string fileName)
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x11692D0", Offset = "0x11692D0", VA = "0x11692D0")]
		public RegisterGlobalParameters()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x11692D8", Offset = "0x11692D8", VA = "0x11692D8", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x11693D4", Offset = "0x11693D4", VA = "0x11693D4", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x116945C", Offset = "0x116945C", VA = "0x116945C", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000098")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6000531")]
		T LoadFromBundle<T>(string path) where T : UnityEngine.Object;
	}
	[Token(Token = "0x2000099")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69284", Offset = "0xC69284")]
		private static UnityAction<Scene, LoadSceneMode> <>f__mg$cache0;

		[Token(Token = "0x1700007A")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0x1163494", Offset = "0x1163494", VA = "0x1163494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1169464", Offset = "0x1169464", VA = "0x1169464")]
		public ResourceManager()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x116953C", Offset = "0x116953C", VA = "0x116953C")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000535")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x116962C", Offset = "0x116962C", VA = "0x116962C")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x11638A4", Offset = "0x11638A4", VA = "0x11638A4")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000538")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000539")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x11695B8", Offset = "0x11695B8", VA = "0x11695B8")]
		public void CleanResourceCache()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class RTLFixer
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x116979C", Offset = "0x116979C", VA = "0x116979C")]
		public RTLFixer()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x11697A4", Offset = "0x11697A4", VA = "0x11697A4")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1169A74", Offset = "0x1169A74", VA = "0x1169A74")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x11697B0", Offset = "0x11697B0", VA = "0x11697B0")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}
	}
	[Token(Token = "0x200009B")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x40002B9")]
		Hamza = 65152,
		[Token(Token = "0x40002BA")]
		Alef = 65165,
		[Token(Token = "0x40002BB")]
		AlefHamza = 65155,
		[Token(Token = "0x40002BC")]
		WawHamza = 65157,
		[Token(Token = "0x40002BD")]
		AlefMaksoor = 65159,
		[Token(Token = "0x40002BE")]
		AlefMaksora = 64508,
		[Token(Token = "0x40002BF")]
		HamzaNabera = 65161,
		[Token(Token = "0x40002C0")]
		Ba = 65167,
		[Token(Token = "0x40002C1")]
		Ta = 65173,
		[Token(Token = "0x40002C2")]
		Tha2 = 65177,
		[Token(Token = "0x40002C3")]
		Jeem = 65181,
		[Token(Token = "0x40002C4")]
		H7aa = 65185,
		[Token(Token = "0x40002C5")]
		Khaa2 = 65189,
		[Token(Token = "0x40002C6")]
		Dal = 65193,
		[Token(Token = "0x40002C7")]
		Thal = 65195,
		[Token(Token = "0x40002C8")]
		Ra2 = 65197,
		[Token(Token = "0x40002C9")]
		Zeen = 65199,
		[Token(Token = "0x40002CA")]
		Seen = 65201,
		[Token(Token = "0x40002CB")]
		Sheen = 65205,
		[Token(Token = "0x40002CC")]
		S9a = 65209,
		[Token(Token = "0x40002CD")]
		Dha = 65213,
		[Token(Token = "0x40002CE")]
		T6a = 65217,
		[Token(Token = "0x40002CF")]
		T6ha = 65221,
		[Token(Token = "0x40002D0")]
		Ain = 65225,
		[Token(Token = "0x40002D1")]
		Gain = 65229,
		[Token(Token = "0x40002D2")]
		Fa = 65233,
		[Token(Token = "0x40002D3")]
		Gaf = 65237,
		[Token(Token = "0x40002D4")]
		Kaf = 65241,
		[Token(Token = "0x40002D5")]
		Lam = 65245,
		[Token(Token = "0x40002D6")]
		Meem = 65249,
		[Token(Token = "0x40002D7")]
		Noon = 65253,
		[Token(Token = "0x40002D8")]
		Ha = 65257,
		[Token(Token = "0x40002D9")]
		Waw = 65261,
		[Token(Token = "0x40002DA")]
		Ya = 65265,
		[Token(Token = "0x40002DB")]
		AlefMad = 65153,
		[Token(Token = "0x40002DC")]
		TaMarboota = 65171,
		[Token(Token = "0x40002DD")]
		PersianPe = 64342,
		[Token(Token = "0x40002DE")]
		PersianChe = 64378,
		[Token(Token = "0x40002DF")]
		PersianZe = 64394,
		[Token(Token = "0x40002E0")]
		PersianGaf = 64402,
		[Token(Token = "0x40002E1")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x200009C")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40002E3")]
		Hamza = 1569,
		[Token(Token = "0x40002E4")]
		Alef = 1575,
		[Token(Token = "0x40002E5")]
		AlefHamza = 1571,
		[Token(Token = "0x40002E6")]
		WawHamza = 1572,
		[Token(Token = "0x40002E7")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40002E8")]
		AlefMagsora = 1609,
		[Token(Token = "0x40002E9")]
		HamzaNabera = 1574,
		[Token(Token = "0x40002EA")]
		Ba = 1576,
		[Token(Token = "0x40002EB")]
		Ta = 1578,
		[Token(Token = "0x40002EC")]
		Tha2 = 1579,
		[Token(Token = "0x40002ED")]
		Jeem = 1580,
		[Token(Token = "0x40002EE")]
		H7aa = 1581,
		[Token(Token = "0x40002EF")]
		Khaa2 = 1582,
		[Token(Token = "0x40002F0")]
		Dal = 1583,
		[Token(Token = "0x40002F1")]
		Thal = 1584,
		[Token(Token = "0x40002F2")]
		Ra2 = 1585,
		[Token(Token = "0x40002F3")]
		Zeen = 1586,
		[Token(Token = "0x40002F4")]
		Seen = 1587,
		[Token(Token = "0x40002F5")]
		Sheen = 1588,
		[Token(Token = "0x40002F6")]
		S9a = 1589,
		[Token(Token = "0x40002F7")]
		Dha = 1590,
		[Token(Token = "0x40002F8")]
		T6a = 1591,
		[Token(Token = "0x40002F9")]
		T6ha = 1592,
		[Token(Token = "0x40002FA")]
		Ain = 1593,
		[Token(Token = "0x40002FB")]
		Gain = 1594,
		[Token(Token = "0x40002FC")]
		Fa = 1601,
		[Token(Token = "0x40002FD")]
		Gaf = 1602,
		[Token(Token = "0x40002FE")]
		Kaf = 1603,
		[Token(Token = "0x40002FF")]
		Lam = 1604,
		[Token(Token = "0x4000300")]
		Meem = 1605,
		[Token(Token = "0x4000301")]
		Noon = 1606,
		[Token(Token = "0x4000302")]
		Ha = 1607,
		[Token(Token = "0x4000303")]
		Waw = 1608,
		[Token(Token = "0x4000304")]
		Ya = 1610,
		[Token(Token = "0x4000305")]
		AlefMad = 1570,
		[Token(Token = "0x4000306")]
		TaMarboota = 1577,
		[Token(Token = "0x4000307")]
		PersianPe = 1662,
		[Token(Token = "0x4000308")]
		PersianChe = 1670,
		[Token(Token = "0x4000309")]
		PersianZe = 1688,
		[Token(Token = "0x400030A")]
		PersianGaf = 1711,
		[Token(Token = "0x400030B")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x200009D")]
	internal class ArabicMapping
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x10DF00C", Offset = "0x10DF00C", VA = "0x10DF00C")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x200009E")]
	internal class ArabicTable
	{
		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x1700007B")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x10DFBC8", Offset = "0x10DFBC8", VA = "0x10DFBC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x10DF044", Offset = "0x10DF044", VA = "0x10DF044")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x10DFC44", Offset = "0x10DFC44", VA = "0x10DFC44")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200009F")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x116B960", Offset = "0x116B960", VA = "0x116B960")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20000A0")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x116B2A0", Offset = "0x116B2A0", VA = "0x116B2A0")]
		public RTLFixerTool()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x116B2A8", Offset = "0x116B2A8", VA = "0x116B2A8")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x116B99C", Offset = "0x116B99C", VA = "0x116B99C")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1169D24", Offset = "0x1169D24", VA = "0x1169D24")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x116BBD0", Offset = "0x116BBD0", VA = "0x116BBD0")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x116C8A8", Offset = "0x116C8A8", VA = "0x116C8A8")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x116C518", Offset = "0x116C518", VA = "0x116C518")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x116BD4C", Offset = "0x116BD4C", VA = "0x116BD4C")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC69294", Offset = "0xC69294")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x116DEB0", Offset = "0x116DEB0", VA = "0x116DEB0")]
		public SetLanguage()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x116DEB8", Offset = "0x116DEB8", VA = "0x116DEB8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x116DEBC", Offset = "0x116DEBC", VA = "0x116DEBC")]
		public void ApplyLanguage()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC692CC", Offset = "0xC692CC")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x116DF80", Offset = "0x116DF80", VA = "0x116DF80")]
		public SetLanguageDropdown()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x116DF88", Offset = "0x116DF88", VA = "0x116DF88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x116E24C", Offset = "0x116E24C", VA = "0x116E24C")]
		private void OnValueChanged(int index)
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class StringObfucator
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x11744FC", Offset = "0x11744FC", VA = "0x11744FC")]
		public StringObfucator()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1174504", Offset = "0x1174504", VA = "0x1174504")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1174888", Offset = "0x1174888", VA = "0x1174888")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x11747E4", Offset = "0x11747E4", VA = "0x11747E4")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x117496C", Offset = "0x117496C", VA = "0x117496C")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x11745E8", Offset = "0x11745E8", VA = "0x11745E8")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A4")]
	public static class ScriptLocalization
	{
		[Token(Token = "0x20000A5")]
		public static class HUD_EndState
		{
			[Token(Token = "0x1700007C")]
			public static string DrawMsg
			{
				[Token(Token = "0x600055E")]
				[Address(RVA = "0x116D448", Offset = "0x116D448", VA = "0x116D448")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007D")]
			public static string WinLoseMsg
			{
				[Token(Token = "0x600055F")]
				[Address(RVA = "0x116D490", Offset = "0x116D490", VA = "0x116D490")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007E")]
			public static string OpponentLeftMsg
			{
				[Token(Token = "0x6000560")]
				[Address(RVA = "0x116D4D8", Offset = "0x116D4D8", VA = "0x116D4D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007F")]
			public static string ConnectionClientMsg
			{
				[Token(Token = "0x6000561")]
				[Address(RVA = "0x116D520", Offset = "0x116D520", VA = "0x116D520")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000080")]
			public static string ConnectionServerMsg
			{
				[Token(Token = "0x6000562")]
				[Address(RVA = "0x116D568", Offset = "0x116D568", VA = "0x116D568")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000A6")]
		public static class HUD_Notification_Status
		{
			[Token(Token = "0x17000081")]
			public static string Leaving
			{
				[Token(Token = "0x6000563")]
				[Address(RVA = "0x116D5B0", Offset = "0x116D5B0", VA = "0x116D5B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000082")]
			public static string OpponentDisconnected
			{
				[Token(Token = "0x6000564")]
				[Address(RVA = "0x116D5F8", Offset = "0x116D5F8", VA = "0x116D5F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000083")]
			public static string OpponentLeft
			{
				[Token(Token = "0x6000565")]
				[Address(RVA = "0x116D640", Offset = "0x116D640", VA = "0x116D640")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000084")]
			public static string Waiting
			{
				[Token(Token = "0x6000566")]
				[Address(RVA = "0x116D688", Offset = "0x116D688", VA = "0x116D688")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000A7")]
		public static class Options
		{
			[Token(Token = "0x17000085")]
			public static string Leave
			{
				[Token(Token = "0x6000567")]
				[Address(RVA = "0x116D6D0", Offset = "0x116D6D0", VA = "0x116D6D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000086")]
			public static string Rematch
			{
				[Token(Token = "0x6000568")]
				[Address(RVA = "0x116D718", Offset = "0x116D718", VA = "0x116D718")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000087")]
			public static string Disabled
			{
				[Token(Token = "0x6000569")]
				[Address(RVA = "0x116D760", Offset = "0x116D760", VA = "0x116D760")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000088")]
			public static string Forfeit
			{
				[Token(Token = "0x600056A")]
				[Address(RVA = "0x116D7A8", Offset = "0x116D7A8", VA = "0x116D7A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000089")]
			public static string Leaderboards
			{
				[Token(Token = "0x600056B")]
				[Address(RVA = "0x116D7F0", Offset = "0x116D7F0", VA = "0x116D7F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008A")]
			public static string HowToPlay
			{
				[Token(Token = "0x600056C")]
				[Address(RVA = "0x116D838", Offset = "0x116D838", VA = "0x116D838")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008B")]
			public static string Aim
			{
				[Token(Token = "0x600056D")]
				[Address(RVA = "0x116D880", Offset = "0x116D880", VA = "0x116D880")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008C")]
			public static string Back
			{
				[Token(Token = "0x600056E")]
				[Address(RVA = "0x116D8C8", Offset = "0x116D8C8", VA = "0x116D8C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008D")]
			public static string Controls
			{
				[Token(Token = "0x600056F")]
				[Address(RVA = "0x116D910", Offset = "0x116D910", VA = "0x116D910")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008E")]
			public static string Credits
			{
				[Token(Token = "0x6000570")]
				[Address(RVA = "0x116D958", Offset = "0x116D958", VA = "0x116D958")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008F")]
			public static string Enabled
			{
				[Token(Token = "0x6000571")]
				[Address(RVA = "0x116D9A0", Offset = "0x116D9A0", VA = "0x116D9A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000090")]
			public static string Hand
			{
				[Token(Token = "0x6000572")]
				[Address(RVA = "0x116D9E8", Offset = "0x116D9E8", VA = "0x116D9E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000091")]
			public static string Head
			{
				[Token(Token = "0x6000573")]
				[Address(RVA = "0x116DA30", Offset = "0x116DA30", VA = "0x116DA30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000092")]
			public static string Loadout
			{
				[Token(Token = "0x6000574")]
				[Address(RVA = "0x116DA78", Offset = "0x116DA78", VA = "0x116DA78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000093")]
			public static string MusicToggle
			{
				[Token(Token = "0x6000575")]
				[Address(RVA = "0x116DAC0", Offset = "0x116DAC0", VA = "0x116DAC0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000094")]
			public static string Music
			{
				[Token(Token = "0x6000576")]
				[Address(RVA = "0x116DB08", Offset = "0x116DB08", VA = "0x116DB08")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000095")]
			public static string VoIP
			{
				[Token(Token = "0x6000577")]
				[Address(RVA = "0x116DB50", Offset = "0x116DB50", VA = "0x116DB50")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000A8")]
		public static class Workshop_Blackboard
		{
			[Token(Token = "0x17000096")]
			public static string Rating
			{
				[Token(Token = "0x6000578")]
				[Address(RVA = "0x116DB98", Offset = "0x116DB98", VA = "0x116DB98")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000A9")]
		public static class Workshop_Mirus
		{
			[Token(Token = "0x17000097")]
			public static string PlayPrivateGoogle
			{
				[Token(Token = "0x6000579")]
				[Address(RVA = "0x116DBE0", Offset = "0x116DBE0", VA = "0x116DBE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000098")]
			public static string Equip
			{
				[Token(Token = "0x600057A")]
				[Address(RVA = "0x116DC28", Offset = "0x116DC28", VA = "0x116DC28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000099")]
			public static string PlayPrivateOculus
			{
				[Token(Token = "0x600057B")]
				[Address(RVA = "0x116DC70", Offset = "0x116DC70", VA = "0x116DC70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009A")]
			public static string Equipped
			{
				[Token(Token = "0x600057C")]
				[Address(RVA = "0x116DCB8", Offset = "0x116DCB8", VA = "0x116DCB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009B")]
			public static string NoLootCaches
			{
				[Token(Token = "0x600057D")]
				[Address(RVA = "0x116DD00", Offset = "0x116DD00", VA = "0x116DD00")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000AA")]
		public static class Workshop_Projector
		{
			[Token(Token = "0x1700009C")]
			public static string Buy
			{
				[Token(Token = "0x600057E")]
				[Address(RVA = "0x116DD48", Offset = "0x116DD48", VA = "0x116DD48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009D")]
			public static string Damage
			{
				[Token(Token = "0x600057F")]
				[Address(RVA = "0x116DD90", Offset = "0x116DD90", VA = "0x116DD90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009E")]
			public static string Owned
			{
				[Token(Token = "0x6000580")]
				[Address(RVA = "0x116DDD8", Offset = "0x116DDD8", VA = "0x116DDD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009F")]
			public static string RelicDust
			{
				[Token(Token = "0x6000581")]
				[Address(RVA = "0x116DE20", Offset = "0x116DE20", VA = "0x116DE20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A0")]
			public static string WandUnlockMessage
			{
				[Token(Token = "0x6000582")]
				[Address(RVA = "0x116DE68", Offset = "0x116DE68", VA = "0x116DE68")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000AB")]
		public static class FreeToPlay
		{
			[Token(Token = "0x170000A1")]
			public static string ActivatePortal
			{
				[Token(Token = "0x6000583")]
				[Address(RVA = "0x116D328", Offset = "0x116D328", VA = "0x116D328")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A2")]
			public static string Disclaimer
			{
				[Token(Token = "0x6000584")]
				[Address(RVA = "0x116D370", Offset = "0x116D370", VA = "0x116D370")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A3")]
			public static string RequiresFullGame
			{
				[Token(Token = "0x6000585")]
				[Address(RVA = "0x116D3B8", Offset = "0x116D3B8", VA = "0x116D3B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A4")]
			public static string Buy
			{
				[Token(Token = "0x6000586")]
				[Address(RVA = "0x116D400", Offset = "0x116D400", VA = "0x116D400")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x116D0A8", Offset = "0x116D0A8", VA = "0x116D0A8")]
		public static string Get(string Term)
		{
			return null;
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x116D140", Offset = "0x116D140", VA = "0x116D140")]
		public static string Get(string Term, bool FixForRTL)
		{
			return null;
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x116D1DC", Offset = "0x116D1DC", VA = "0x116D1DC")]
		public static string Get(string Term, bool FixForRTL, int maxLineLengthForRTL)
		{
			return null;
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x116D27C", Offset = "0x116D27C", VA = "0x116D27C")]
		public static string Get(string Term, bool FixForRTL, int maxLineLengthForRTL, bool ignoreNumbers)
		{
			return null;
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20000AC")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x128D73C", Offset = "0x128D73C", VA = "0x128D73C")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x128E5C4", Offset = "0x128E5C4", VA = "0x128E5C4")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x12973E0", Offset = "0x12973E0", VA = "0x12973E0")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x129740C", Offset = "0x129740C", VA = "0x129740C")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x20000B1")]
		private static class Uniforms
		{
			[Token(Token = "0x400031D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x400031E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x400031F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4000320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4000321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4000322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4000323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4000324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4000325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x20000B2")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4000328")]
			DepthTexture,
			[Token(Token = "0x4000329")]
			DepthNormalsTexture,
			[Token(Token = "0x400032A")]
			GBuffer
		}

		[Token(Token = "0x400031A")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x400031B")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x170000A5")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0x1281C50", Offset = "0x1281C50", VA = "0x1281C50")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x170000A6")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0x1281D98", Offset = "0x1281D98", VA = "0x1281D98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public override bool active
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0x1281EA0", Offset = "0x1281EA0", VA = "0x1281EA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1281B40", Offset = "0x1281B40", VA = "0x1281B40")]
		public AmbientOcclusionComponent()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1281F64", Offset = "0x1281F64", VA = "0x1281F64", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1281FA0", Offset = "0x1281FA0", VA = "0x1281FA0", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1281FE8", Offset = "0x1281FE8", VA = "0x1281FE8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1282058", Offset = "0x1282058", VA = "0x1282058", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x20000B4")]
		private static class Uniforms
		{
			[Token(Token = "0x400032E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x400032F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4000330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4000331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4000332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4000333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4000334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4000335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4000336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4000337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x400032B")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x170000A8")]
		public override bool active
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0x1283A50", Offset = "0x1283A50", VA = "0x1283A50", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x12839B8", Offset = "0x12839B8", VA = "0x12839B8")]
		public BloomComponent()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1283B20", Offset = "0x1283B20", VA = "0x1283B20")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x20000B6")]
		private static class Uniforms
		{
			[Token(Token = "0x400033A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x400033B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x400033C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x400033D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x400033E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x400033F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4000340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x20000B7")]
		private enum Pass
		{
			[Token(Token = "0x4000342")]
			Depth,
			[Token(Token = "0x4000343")]
			Normals,
			[Token(Token = "0x4000344")]
			MovecOpacity,
			[Token(Token = "0x4000345")]
			MovecImaging,
			[Token(Token = "0x4000346")]
			MovecArrows
		}

		[Token(Token = "0x20000B8")]
		private class ArrowArray
		{
			[Token(Token = "0x4000347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69304", Offset = "0xC69304")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC69304", Offset = "0xC69304")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4000348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69340", Offset = "0xC69340")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC69340", Offset = "0xC69340")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4000349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6937C", Offset = "0xC6937C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6937C", Offset = "0xC6937C")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x170000AA")]
			public Mesh mesh
			{
				[Token(Token = "0x60005A5")]
				[Address(RVA = "0x1285D38", Offset = "0x1285D38", VA = "0x1285D38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC693B8", Offset = "0xC693B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60005A6")]
				[Address(RVA = "0x12862DC", Offset = "0x12862DC", VA = "0x12862DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC693C8", Offset = "0xC693C8")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AB")]
			public int columnCount
			{
				[Token(Token = "0x60005A7")]
				[Address(RVA = "0x1285D48", Offset = "0x1285D48", VA = "0x1285D48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC693D8", Offset = "0xC693D8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60005A8")]
				[Address(RVA = "0x12862E4", Offset = "0x12862E4", VA = "0x12862E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC693E8", Offset = "0xC693E8")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AC")]
			public int rowCount
			{
				[Token(Token = "0x60005A9")]
				[Address(RVA = "0x1285D50", Offset = "0x1285D50", VA = "0x1285D50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC693F8", Offset = "0xC693F8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60005AA")]
				[Address(RVA = "0x12862EC", Offset = "0x12862EC", VA = "0x12862EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69408", Offset = "0xC69408")]
				private set
				{
				}
			}

			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x1285D40", Offset = "0x1285D40", VA = "0x1285D40")]
			public ArrowArray()
			{
			}

			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x1285D80", Offset = "0x1285D80", VA = "0x1285D80")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x1285D58", Offset = "0x1285D58", VA = "0x1285D58")]
			public void Release()
			{
			}
		}

		[Token(Token = "0x4000338")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x170000A9")]
		public override bool active
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0x1284EFC", Offset = "0x1284EFC", VA = "0x1284EFC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1284EAC", Offset = "0x1284EAC", VA = "0x1284EAC")]
		public BuiltinDebugViewsComponent()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1284FC0", Offset = "0x1284FC0", VA = "0x1284FC0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1285060", Offset = "0x1285060", VA = "0x1285060", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x12850D4", Offset = "0x12850D4", VA = "0x12850D4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x128511C", Offset = "0x128511C", VA = "0x128511C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x128526C", Offset = "0x128526C", VA = "0x128526C")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x12853B4", Offset = "0x12853B4", VA = "0x12853B4")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1285484", Offset = "0x1285484", VA = "0x1285484")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1285C04", Offset = "0x1285C04", VA = "0x1285C04")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x12862A8", Offset = "0x12862A8", VA = "0x12862A8", Slot = "7")]
		public override void OnDisable()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x20000BA")]
		private static class Uniforms
		{
			[Token(Token = "0x400034B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x400034C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x170000AD")]
		public override bool active
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x128660C", Offset = "0x128660C", VA = "0x128660C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x12865BC", Offset = "0x12865BC", VA = "0x12865BC")]
		public ChromaticAberrationComponent()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x12866CC", Offset = "0x12866CC", VA = "0x12866CC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x12866F4", Offset = "0x12866F4", VA = "0x12866F4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x20000BC")]
		private static class Uniforms
		{
			[Token(Token = "0x4000352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4000353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4000354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4000355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4000356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4000357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4000358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4000359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x400035A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x400035B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x400035C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x400035D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x400035E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x400035F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4000360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4000361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4000362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4000363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4000364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4000365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x400034D")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x400034E")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x400034F")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x170000AE")]
		public override bool active
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x1286C08", Offset = "0x1286C08", VA = "0x1286C08", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1286B94", Offset = "0x1286B94", VA = "0x1286B94")]
		public ColorGradingComponent()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1286C90", Offset = "0x1286C90", VA = "0x1286C90")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x1286CBC", Offset = "0x1286CBC", VA = "0x1286CBC")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1286D7C", Offset = "0x1286D7C", VA = "0x1286D7C")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1286E70", Offset = "0x1286E70", VA = "0x1286E70")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1286F68", Offset = "0x1286F68", VA = "0x1286F68")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1287070", Offset = "0x1287070", VA = "0x1287070")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x12870FC", Offset = "0x12870FC", VA = "0x12870FC")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1287288", Offset = "0x1287288", VA = "0x1287288")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x12873B8", Offset = "0x12873B8", VA = "0x12873B8")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1287460", Offset = "0x1287460", VA = "0x1287460")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1287504", Offset = "0x1287504", VA = "0x1287504")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x1287678", Offset = "0x1287678", VA = "0x1287678")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1287714", Offset = "0x1287714", VA = "0x1287714")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x12877BC", Offset = "0x12877BC", VA = "0x12877BC")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1287E40", Offset = "0x1287E40", VA = "0x1287E40")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1287EF8", Offset = "0x1287EF8", VA = "0x1287EF8")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1288A98", Offset = "0x1288A98", VA = "0x1288A98", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1288DC8", Offset = "0x1288DC8", VA = "0x1288DC8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1288F70", Offset = "0x1288F70", VA = "0x1288F70", Slot = "7")]
		public override void OnDisable()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x20000BE")]
		private static class Uniforms
		{
			[Token(Token = "0x4000369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x400036A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x400036B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x400036C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x400036D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x400036E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x400036F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4000370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4000372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4000366")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4000368")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x170000AF")]
		public override bool active
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x1289FC4", Offset = "0x1289FC4", VA = "0x1289FC4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1289F74", Offset = "0x1289F74", VA = "0x1289F74")]
		public DepthOfFieldComponent()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x128A060", Offset = "0x128A060", VA = "0x128A060", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x128A068", Offset = "0x128A068", VA = "0x128A068")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x128A168", Offset = "0x128A168", VA = "0x128A168")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x128A22C", Offset = "0x128A22C", VA = "0x128A22C")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x128A324", Offset = "0x128A324", VA = "0x128A324")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x128A37C", Offset = "0x128A37C", VA = "0x128A37C")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x128AD78", Offset = "0x128AD78", VA = "0x128AD78", Slot = "7")]
		public override void OnDisable()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x20000C0")]
		private static class Uniforms
		{
			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4000378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4000376")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x170000B0")]
		public override bool active
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x128B188", Offset = "0x128B188", VA = "0x128B188", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x128B138", Offset = "0x128B138", VA = "0x128B138")]
		public DitheringComponent()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x128B210", Offset = "0x128B210", VA = "0x128B210", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x128B218", Offset = "0x128B218", VA = "0x128B218")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x128B354", Offset = "0x128B354", VA = "0x128B354", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x20000C2")]
		private static class Uniforms
		{
			[Token(Token = "0x4000384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4000385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4000386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4000387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4000388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000381")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4000382")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4000383")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x170000B1")]
		public override bool active
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x128B6A8", Offset = "0x128B6A8", VA = "0x128B6A8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x128B62C", Offset = "0x128B62C", VA = "0x128B62C")]
		public EyeAdaptationComponent()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x128B740", Offset = "0x128B740", VA = "0x128B740")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x128B74C", Offset = "0x128B74C", VA = "0x128B74C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x128B758", Offset = "0x128B758", VA = "0x128B758", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x128B858", Offset = "0x128B858", VA = "0x128B858")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x128B9CC", Offset = "0x128B9CC", VA = "0x128B9CC")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x128C5AC", Offset = "0x128C5AC", VA = "0x128C5AC")]
		public void OnGUI()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x20000C4")]
		private static class Uniforms
		{
			[Token(Token = "0x400038B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x400038C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x400038D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x400038E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x400038F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x400038A")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x170000B2")]
		public override bool active
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x128CAE0", Offset = "0x128CAE0", VA = "0x128CAE0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x128CA90", Offset = "0x128CA90", VA = "0x128CA90")]
		public FogComponent()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x128CB90", Offset = "0x128CB90", VA = "0x128CB90", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x128CBD8", Offset = "0x128CBD8", VA = "0x128CBD8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x128CBE0", Offset = "0x128CBE0", VA = "0x128CBE0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x128CBE8", Offset = "0x128CBE8", VA = "0x128CBE8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20000C6")]
		private static class Uniforms
		{
			[Token(Token = "0x4000390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4000391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x170000B3")]
		public override bool active
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0x128D334", Offset = "0x128D334", VA = "0x128D334", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x128D2E4", Offset = "0x128D2E4", VA = "0x128D2E4")]
		public FxaaComponent()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x128D3E4", Offset = "0x128D3E4", VA = "0x128D3E4")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x20000C8")]
		private static class Uniforms
		{
			[Token(Token = "0x4000393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4000394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4000395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4000396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x170000B4")]
		public override bool active
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x128D7B8", Offset = "0x128D7B8", VA = "0x128D7B8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x128D768", Offset = "0x128D768", VA = "0x128D768")]
		public GrainComponent()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x128D890", Offset = "0x128D890", VA = "0x128D890", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x128D8B8", Offset = "0x128D8B8", VA = "0x128D8B8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x20000CA")]
		private static class Uniforms
		{
			[Token(Token = "0x400039A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x400039B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x400039C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x400039D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x400039E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x400039F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x40003A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x40003A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x40003A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x40003A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x40003A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x40003A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x40003A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x40003A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40003A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x40003A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x40003AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x40003AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x40003AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x40003AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x40003AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x40003AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x40003B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x40003B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x40003B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x40003B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x20000CB")]
		private enum Pass
		{
			[Token(Token = "0x40003B5")]
			VelocitySetup,
			[Token(Token = "0x40003B6")]
			TileMax1,
			[Token(Token = "0x40003B7")]
			TileMax2,
			[Token(Token = "0x40003B8")]
			TileMaxV,
			[Token(Token = "0x40003B9")]
			NeighborMax,
			[Token(Token = "0x40003BA")]
			Reconstruction,
			[Token(Token = "0x40003BB")]
			FrameCompression,
			[Token(Token = "0x40003BC")]
			FrameBlendingChroma,
			[Token(Token = "0x40003BD")]
			FrameBlendingRaw
		}

		[Token(Token = "0x20000CC")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x40003BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x40003BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x128E6B8", Offset = "0x128E6B8", VA = "0x128E6B8")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x1291004", Offset = "0x1291004", VA = "0x1291004")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x128E91C", Offset = "0x128E91C", VA = "0x128E91C")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6000600")]
			[Address(RVA = "0x128F194", Offset = "0x128F194", VA = "0x128F194")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x20000CD")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20000CE")]
			private struct Frame
			{
				[Token(Token = "0x40003C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40003C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40003C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40003C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6000608")]
				[Address(RVA = "0x1290F7C", Offset = "0x1290F7C", VA = "0x1290F7C")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6000609")]
				[Address(RVA = "0x1290F84", Offset = "0x1290F84", VA = "0x1290F84")]
				public void Release()
				{
				}

				[Token(Token = "0x600060A")]
				[Address(RVA = "0x1290F8C", Offset = "0x1290F8C", VA = "0x1290F8C")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x600060B")]
				[Address(RVA = "0x1290FC8", Offset = "0x1290FC8", VA = "0x1290FC8")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x40003C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x40003C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x40003C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x40003C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6000601")]
			[Address(RVA = "0x128E76C", Offset = "0x128E76C", VA = "0x128E76C")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6000602")]
			[Address(RVA = "0x128E99C", Offset = "0x128E99C", VA = "0x128E99C")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000603")]
			[Address(RVA = "0x1290564", Offset = "0x1290564", VA = "0x1290564")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6000604")]
			[Address(RVA = "0x128FED8", Offset = "0x128FED8", VA = "0x128FED8")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6000605")]
			[Address(RVA = "0x12906F0", Offset = "0x12906F0", VA = "0x12906F0")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6000606")]
			[Address(RVA = "0x1290730", Offset = "0x1290730", VA = "0x1290730")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6000607")]
			[Address(RVA = "0x1290D98", Offset = "0x1290D98", VA = "0x1290D98")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x170000B5")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x128E650", Offset = "0x128E650", VA = "0x128E650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x128E704", Offset = "0x128E704", VA = "0x128E704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public override bool active
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x128E7F0", Offset = "0x128E7F0", VA = "0x128E7F0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x128E5F8", Offset = "0x128E5F8", VA = "0x128E5F8")]
		public MotionBlurComponent()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x128E928", Offset = "0x128E928", VA = "0x128E928", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x128E970", Offset = "0x128E970", VA = "0x128E970")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x128EA28", Offset = "0x128EA28", VA = "0x128EA28", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x128EA30", Offset = "0x128EA30", VA = "0x128EA30", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x128EA38", Offset = "0x128EA38", VA = "0x128EA38", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x128EA44", Offset = "0x128EA44", VA = "0x128EA44", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x12906E0", Offset = "0x12906E0", VA = "0x12906E0", Slot = "7")]
		public override void OnDisable()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x20000D0")]
		private static class Uniforms
		{
			[Token(Token = "0x40003CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x40003CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x40003CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x40003D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x40003D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x40003D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x40003D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x40003D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x40003D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x40003D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x40003D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x40003D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x40003D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x40003DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x40003DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x40003DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x40003DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x40003DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x40003DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x40003E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x40003E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x40003E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x40003E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x40003E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x40003E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x40003E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x40003E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x40003E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x40003E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x40003EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x40003EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x40003EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x40003ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x40003EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x40003EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x20000D1")]
		private enum PassIndex
		{
			[Token(Token = "0x40003F1")]
			RayTraceStep,
			[Token(Token = "0x40003F2")]
			CompositeFinal,
			[Token(Token = "0x40003F3")]
			Blur,
			[Token(Token = "0x40003F4")]
			CompositeSSR,
			[Token(Token = "0x40003F5")]
			MinMipGeneration,
			[Token(Token = "0x40003F6")]
			HitPointToReflections,
			[Token(Token = "0x40003F7")]
			BilateralKeyPack,
			[Token(Token = "0x40003F8")]
			BlitDepthAsCSZ,
			[Token(Token = "0x40003F9")]
			PoissonBlur
		}

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x170000B8")]
		public override bool active
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0x1294670", Offset = "0x1294670", VA = "0x1294670", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1291AC4", Offset = "0x1291AC4", VA = "0x1291AC4")]
		public ScreenSpaceReflectionComponent()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1294668", Offset = "0x1294668", VA = "0x1294668", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1294710", Offset = "0x1294710", VA = "0x1294710", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x12948A8", Offset = "0x12948A8", VA = "0x12948A8", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x12948F0", Offset = "0x12948F0", VA = "0x12948F0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x12948F8", Offset = "0x12948F8", VA = "0x12948F8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20000D3")]
		private static class Uniforms
		{
			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4000402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4000403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4000404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4000405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x40003FA")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x40003FB")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69418", Offset = "0xC69418")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC69418", Offset = "0xC69418")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x170000B9")]
		public override bool active
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x12968A8", Offset = "0x12968A8", VA = "0x12968A8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0x12939C4", Offset = "0x12939C4", VA = "0x12939C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69454", Offset = "0xC69454")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000618")]
			[Address(RVA = "0x1296988", Offset = "0x1296988", VA = "0x1296988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69464", Offset = "0xC69464")]
			private set
			{
			}
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1291B44", Offset = "0x1291B44", VA = "0x1291B44")]
		public TaaComponent()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x1296980", Offset = "0x1296980", VA = "0x1296980", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1294158", Offset = "0x1294158", VA = "0x1294158")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x1292688", Offset = "0x1292688", VA = "0x1292688")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x1293444", Offset = "0x1293444", VA = "0x1293444")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x1297210", Offset = "0x1297210", VA = "0x1297210")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x1296990", Offset = "0x1296990", VA = "0x1296990")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x1296C58", Offset = "0x1296C58", VA = "0x1296C58")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x1296A7C", Offset = "0x1296A7C", VA = "0x1296A7C")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x129724C", Offset = "0x129724C", VA = "0x129724C", Slot = "7")]
		public override void OnDisable()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x20000D5")]
		private static class Uniforms
		{
			[Token(Token = "0x4000406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4000407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x170000BB")]
		public override bool active
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0x1297414", Offset = "0x1297414", VA = "0x1297414", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1291BC0", Offset = "0x1291BC0", VA = "0x1291BC0")]
		public UserLutComponent()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x12975A0", Offset = "0x12975A0", VA = "0x12975A0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1293CD0", Offset = "0x1293CD0", VA = "0x1293CD0")]
		public void OnGUI()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x20000D7")]
		private static class Uniforms
		{
			[Token(Token = "0x4000408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4000409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x400040A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x400040B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x400040C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x170000BC")]
		public override bool active
		{
			[Token(Token = "0x6000628")]
			[Address(RVA = "0x1297834", Offset = "0x1297834", VA = "0x1297834", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1291C10", Offset = "0x1291C10", VA = "0x1291C10")]
		public VignetteComponent()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x12978BC", Offset = "0x12978BC", VA = "0x12978BC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D8")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x20000D9")]
		public enum SampleCount
		{
			[Token(Token = "0x400040F")]
			Lowest = 3,
			[Token(Token = "0x4000410")]
			Low = 6,
			[Token(Token = "0x4000411")]
			Medium = 10,
			[Token(Token = "0x4000412")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x20000DA")]
		public struct Settings
		{
			[Token(Token = "0x4000413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69484", Offset = "0xC69484")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69484", Offset = "0xC69484")]
			public float intensity;

			[Token(Token = "0x4000414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC694D8", Offset = "0xC694D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC694D8", Offset = "0xC694D8")]
			public float radius;

			[Token(Token = "0x4000415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6952C", Offset = "0xC6952C")]
			public SampleCount sampleCount;

			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69564", Offset = "0xC69564")]
			public bool downsampling;

			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6959C", Offset = "0xC6959C")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC695D4", Offset = "0xC695D4")]
			public bool ambientOnly;

			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6960C", Offset = "0xC6960C")]
			public bool highPrecision;

			[Token(Token = "0x170000BE")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600062F")]
				[Address(RVA = "0x12835AC", Offset = "0x12835AC", VA = "0x12835AC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BD")]
		public Settings settings
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0x1281D88", Offset = "0x1281D88", VA = "0x1281D88")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600062D")]
			[Address(RVA = "0x12835CC", Offset = "0x12835CC", VA = "0x12835CC")]
			set
			{
			}
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x1283588", Offset = "0x1283588", VA = "0x1283588")]
		public AmbientOcclusionModel()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x12835D8", Offset = "0x12835D8", VA = "0x12835D8", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DB")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x20000DC")]
		public enum Method
		{
			[Token(Token = "0x400041C")]
			Fxaa,
			[Token(Token = "0x400041D")]
			Taa
		}

		[Token(Token = "0x20000DD")]
		public enum FxaaPreset
		{
			[Token(Token = "0x400041F")]
			ExtremePerformance,
			[Token(Token = "0x4000420")]
			Performance,
			[Token(Token = "0x4000421")]
			Default,
			[Token(Token = "0x4000422")]
			Quality,
			[Token(Token = "0x4000423")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x20000DE")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4000424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69654", Offset = "0xC69654")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69654", Offset = "0xC69654")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4000425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC696A8", Offset = "0xC696A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC696A8", Offset = "0xC696A8")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4000426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69704", Offset = "0xC69704")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69704", Offset = "0xC69704")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4000427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20000DF")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4000428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6975C", Offset = "0xC6975C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6975C", Offset = "0xC6975C")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4000429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC697B4", Offset = "0xC697B4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC697B4", Offset = "0xC697B4")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69808", Offset = "0xC69808")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69808", Offset = "0xC69808")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6985C", Offset = "0xC6985C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6985C", Offset = "0xC6985C")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x400042C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20000E0")]
		public struct FxaaSettings
		{
			[Token(Token = "0x400042D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x170000C0")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6000636")]
				[Address(RVA = "0x1283990", Offset = "0x1283990", VA = "0x1283990")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000E1")]
		public struct TaaSettings
		{
			[Token(Token = "0x400042E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC698B8", Offset = "0xC698B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC698B8", Offset = "0xC698B8")]
			public float jitterSpread;

			[Token(Token = "0x400042F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69910", Offset = "0xC69910")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69910", Offset = "0xC69910")]
			public float sharpen;

			[Token(Token = "0x4000430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69964", Offset = "0xC69964")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69964", Offset = "0xC69964")]
			public float stationaryBlending;

			[Token(Token = "0x4000431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC699BC", Offset = "0xC699BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC699BC", Offset = "0xC699BC")]
			public float motionBlending;

			[Token(Token = "0x170000C1")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6000637")]
				[Address(RVA = "0x1283998", Offset = "0x1283998", VA = "0x1283998")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000E2")]
		public struct Settings
		{
			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x170000C2")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000638")]
				[Address(RVA = "0x12836B0", Offset = "0x12836B0", VA = "0x12836B0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BF")]
		public Settings settings
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0x12836C8", Offset = "0x12836C8", VA = "0x12836C8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x12836DC", Offset = "0x12836DC", VA = "0x12836DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1283694", Offset = "0x1283694", VA = "0x1283694")]
		public AntialiasingModel()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x12836F0", Offset = "0x12836F0", VA = "0x12836F0", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E3")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20000E4")]
		public struct BloomSettings
		{
			[Token(Token = "0x4000436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC69A24", Offset = "0xC69A24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69A24", Offset = "0xC69A24")]
			public float intensity;

			[Token(Token = "0x4000437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC69A74", Offset = "0xC69A74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69A74", Offset = "0xC69A74")]
			public float threshold;

			[Token(Token = "0x4000438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69AC4", Offset = "0xC69AC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69AC4", Offset = "0xC69AC4")]
			public float softKnee;

			[Token(Token = "0x4000439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69B18", Offset = "0xC69B18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69B18", Offset = "0xC69B18")]
			public float radius;

			[Token(Token = "0x400043A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69B6C", Offset = "0xC69B6C")]
			public bool antiFlicker;

			[Token(Token = "0x170000C4")]
			public float thresholdLinear
			{
				[Token(Token = "0x600063E")]
				[Address(RVA = "0x1284DDC", Offset = "0x1284DDC", VA = "0x1284DDC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600063D")]
				[Address(RVA = "0x1284DD4", Offset = "0x1284DD4", VA = "0x1284DD4")]
				set
				{
				}
			}

			[Token(Token = "0x170000C5")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x600063F")]
				[Address(RVA = "0x1284DE4", Offset = "0x1284DE4", VA = "0x1284DE4")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000E5")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x400043B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69BA4", Offset = "0xC69BA4")]
			public Texture texture;

			[Token(Token = "0x400043C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC69BDC", Offset = "0xC69BDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69BDC", Offset = "0xC69BDC")]
			public float intensity;

			[Token(Token = "0x170000C6")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6000640")]
				[Address(RVA = "0x1284E5C", Offset = "0x1284E5C", VA = "0x1284E5C")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000E6")]
		public struct Settings
		{
			[Token(Token = "0x400043D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x400043E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x170000C7")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000641")]
				[Address(RVA = "0x1284C58", Offset = "0x1284C58", VA = "0x1284C58")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000C3")]
		public Settings settings
		{
			[Token(Token = "0x600063A")]
			[Address(RVA = "0x1283B04", Offset = "0x1283B04", VA = "0x1283B04")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600063B")]
			[Address(RVA = "0x1284C98", Offset = "0x1284C98", VA = "0x1284C98")]
			set
			{
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1284C14", Offset = "0x1284C14", VA = "0x1284C14")]
		public BloomModel()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1284CB0", Offset = "0x1284CB0", VA = "0x1284CB0", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E7")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20000E8")]
		public struct DepthSettings
		{
			[Token(Token = "0x4000440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69C3C", Offset = "0xC69C3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69C3C", Offset = "0xC69C3C")]
			public float scale;

			[Token(Token = "0x170000CA")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6000648")]
				[Address(RVA = "0x1286598", Offset = "0x1286598", VA = "0x1286598")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000E9")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69C90", Offset = "0xC69C90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69C90", Offset = "0xC69C90")]
			public float sourceOpacity;

			[Token(Token = "0x4000442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69CE4", Offset = "0xC69CE4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69CE4", Offset = "0xC69CE4")]
			public float motionImageOpacity;

			[Token(Token = "0x4000443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC69D38", Offset = "0xC69D38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69D38", Offset = "0xC69D38")]
			public float motionImageAmplitude;

			[Token(Token = "0x4000444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69D88", Offset = "0xC69D88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69D88", Offset = "0xC69D88")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4000445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69DDC", Offset = "0xC69DDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69DDC", Offset = "0xC69DDC")]
			public int motionVectorsResolution;

			[Token(Token = "0x4000446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC69E34", Offset = "0xC69E34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69E34", Offset = "0xC69E34")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x170000CB")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6000649")]
				[Address(RVA = "0x12865A0", Offset = "0x12865A0", VA = "0x12865A0")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x20000EA")]
		public enum Mode
		{
			[Token(Token = "0x4000448")]
			None,
			[Token(Token = "0x4000449")]
			Depth,
			[Token(Token = "0x400044A")]
			Normals,
			[Token(Token = "0x400044B")]
			MotionVectors,
			[Token(Token = "0x400044C")]
			AmbientOcclusion,
			[Token(Token = "0x400044D")]
			EyeAdaptation,
			[Token(Token = "0x400044E")]
			FocusPlane,
			[Token(Token = "0x400044F")]
			PreGradingLog,
			[Token(Token = "0x4000450")]
			LogLut,
			[Token(Token = "0x4000451")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x20000EB")]
		public struct Settings
		{
			[Token(Token = "0x4000452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4000453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4000454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x170000CC")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600064A")]
				[Address(RVA = "0x1286508", Offset = "0x1286508", VA = "0x1286508")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000C8")]
		public Settings settings
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0x128504C", Offset = "0x128504C", VA = "0x128504C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000644")]
			[Address(RVA = "0x1286530", Offset = "0x1286530", VA = "0x1286530")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool willInterrupt
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0x1286540", Offset = "0x1286540", VA = "0x1286540")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x12864DC", Offset = "0x12864DC", VA = "0x12864DC")]
		public BuiltinDebugViewsModel()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1286570", Offset = "0x1286570", VA = "0x1286570", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1282048", Offset = "0x1282048", VA = "0x1282048")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000EC")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20000ED")]
		public struct Settings
		{
			[Token(Token = "0x4000456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69E94", Offset = "0xC69E94")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4000457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC69ECC", Offset = "0xC69ECC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69ECC", Offset = "0xC69ECC")]
			public float intensity;

			[Token(Token = "0x170000CE")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600064F")]
				[Address(RVA = "0x1286B28", Offset = "0x1286B28", VA = "0x1286B28")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000CD")]
		public Settings settings
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0x12866C0", Offset = "0x12866C0", VA = "0x12866C0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x1286B38", Offset = "0x1286B38", VA = "0x1286B38")]
			set
			{
			}
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1286B14", Offset = "0x1286B14", VA = "0x1286B14")]
		public ChromaticAberrationModel()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1286B40", Offset = "0x1286B40", VA = "0x1286B40", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x20000EF")]
		public enum Tonemapper
		{
			[Token(Token = "0x400045C")]
			None,
			[Token(Token = "0x400045D")]
			ACES,
			[Token(Token = "0x400045E")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x20000F0")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x400045F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC69FE8", Offset = "0xC69FE8")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4000460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A020", Offset = "0xC6A020")]
			public float neutralBlackIn;

			[Token(Token = "0x4000461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A040", Offset = "0xC6A040")]
			public float neutralWhiteIn;

			[Token(Token = "0x4000462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A058", Offset = "0xC6A058")]
			public float neutralBlackOut;

			[Token(Token = "0x4000463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A078", Offset = "0xC6A078")]
			public float neutralWhiteOut;

			[Token(Token = "0x4000464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A090", Offset = "0xC6A090")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4000465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A0AC", Offset = "0xC6A0AC")]
			public float neutralWhiteClip;

			[Token(Token = "0x170000D2")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6000659")]
				[Address(RVA = "0x1289F4C", Offset = "0x1289F4C", VA = "0x1289F4C")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F1")]
		public struct BasicSettings
		{
			[Token(Token = "0x4000466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A0C4", Offset = "0xC6A0C4")]
			public float postExposure;

			[Token(Token = "0x4000467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A0FC", Offset = "0xC6A0FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A0FC", Offset = "0xC6A0FC")]
			public float temperature;

			[Token(Token = "0x4000468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A158", Offset = "0xC6A158")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A158", Offset = "0xC6A158")]
			public float tint;

			[Token(Token = "0x4000469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A1B4", Offset = "0xC6A1B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A1B4", Offset = "0xC6A1B4")]
			public float hueShift;

			[Token(Token = "0x400046A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A210", Offset = "0xC6A210")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A210", Offset = "0xC6A210")]
			public float saturation;

			[Token(Token = "0x400046B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A264", Offset = "0xC6A264")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A264", Offset = "0xC6A264")]
			public float contrast;

			[Token(Token = "0x170000D3")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x600065A")]
				[Address(RVA = "0x1289598", Offset = "0x1289598", VA = "0x1289598")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F2")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x400046C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x400046D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x400046E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x400046F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x170000D4")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x600065B")]
				[Address(RVA = "0x12895A8", Offset = "0x12895A8", VA = "0x12895A8")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F3")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4000470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A2C8", Offset = "0xC6A2C8")]
			public Color slope;

			[Token(Token = "0x4000471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A300", Offset = "0xC6A300")]
			public Color power;

			[Token(Token = "0x4000472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A338", Offset = "0xC6A338")]
			public Color offset;

			[Token(Token = "0x170000D5")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x600065C")]
				[Address(RVA = "0x12896F8", Offset = "0x12896F8", VA = "0x12896F8")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F4")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4000473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A370", Offset = "0xC6A370")]
			public Color lift;

			[Token(Token = "0x4000474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A3A8", Offset = "0xC6A3A8")]
			public Color gamma;

			[Token(Token = "0x4000475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xC6A3E0", Offset = "0xC6A3E0")]
			public Color gain;

			[Token(Token = "0x170000D6")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x600065D")]
				[Address(RVA = "0x1289790", Offset = "0x1289790", VA = "0x1289790")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x20000F5")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4000477")]
			Linear,
			[Token(Token = "0x4000478")]
			Log
		}

		[Serializable]
		[Token(Token = "0x20000F6")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4000479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x400047A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x400047B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x170000D7")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x600065E")]
				[Address(RVA = "0x1289680", Offset = "0x1289680", VA = "0x1289680")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F7")]
		public struct CurvesSettings
		{
			[Token(Token = "0x400047C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x400047D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x400047E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x400047F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4000480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4000481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4000482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4000483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4000484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4000485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4000486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4000487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4000488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x170000D8")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x600065F")]
				[Address(RVA = "0x128986C", Offset = "0x128986C", VA = "0x128986C")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000F8")]
		public struct Settings
		{
			[Token(Token = "0x4000489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x170000D9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000660")]
				[Address(RVA = "0x12893CC", Offset = "0x12893CC", VA = "0x12893CC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69F30", Offset = "0xC69F30")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC69F30", Offset = "0xC69F30")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69F6C", Offset = "0xC69F6C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC69F6C", Offset = "0xC69F6C")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x170000CF")]
		public Settings settings
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x1287BB0", Offset = "0x1287BB0", VA = "0x1287BB0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x1289510", Offset = "0x1289510", VA = "0x1289510")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool isDirty
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x1288DB4", Offset = "0x1288DB4", VA = "0x1288DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69FA8", Offset = "0xC69FA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x1288DBC", Offset = "0x1288DBC", VA = "0x1288DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69FB8", Offset = "0xC69FB8")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6000655")]
			[Address(RVA = "0x1288A88", Offset = "0x1288A88", VA = "0x1288A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69FC8", Offset = "0xC69FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000656")]
			[Address(RVA = "0x1288A90", Offset = "0x1288A90", VA = "0x1288A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC69FD8", Offset = "0xC69FD8")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1289388", Offset = "0x1289388", VA = "0x1289388")]
		public ColorGradingModel()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1289544", Offset = "0x1289544", VA = "0x1289544", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x128958C", Offset = "0x128958C", VA = "0x128958C", Slot = "5")]
		public override void OnValidate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20000FA")]
		public enum KernelSize
		{
			[Token(Token = "0x4000490")]
			Small,
			[Token(Token = "0x4000491")]
			Medium,
			[Token(Token = "0x4000492")]
			Large,
			[Token(Token = "0x4000493")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20000FB")]
		public struct Settings
		{
			[Token(Token = "0x4000494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC6A498", Offset = "0xC6A498")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A498", Offset = "0xC6A498")]
			public float focusDistance;

			[Token(Token = "0x4000495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A4EC", Offset = "0xC6A4EC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A4EC", Offset = "0xC6A4EC")]
			public float aperture;

			[Token(Token = "0x4000496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A548", Offset = "0xC6A548")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A548", Offset = "0xC6A548")]
			public float focalLength;

			[Token(Token = "0x4000497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A5A0", Offset = "0xC6A5A0")]
			public bool useCameraFov;

			[Token(Token = "0x4000498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A5D8", Offset = "0xC6A5D8")]
			public KernelSize kernelSize;

			[Token(Token = "0x170000DB")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000665")]
				[Address(RVA = "0x128B028", Offset = "0x128B028", VA = "0x128B028")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000DA")]
		public Settings settings
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x128A154", Offset = "0x128A154", VA = "0x128A154")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x128B074", Offset = "0x128B074", VA = "0x128B074")]
			set
			{
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x128AFD8", Offset = "0x128AFD8", VA = "0x128AFD8")]
		public DepthOfFieldModel()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x128B088", Offset = "0x128B088", VA = "0x128B088", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20000FD")]
		public struct Settings
		{
			[Token(Token = "0x170000DD")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600066A")]
				[Address(RVA = "0x128B60C", Offset = "0x128B60C", VA = "0x128B60C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000DC")]
		public Settings settings
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x128B614", Offset = "0x128B614", VA = "0x128B614")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x128B61C", Offset = "0x128B61C", VA = "0x128B61C")]
			set
			{
			}
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x128B600", Offset = "0x128B600", VA = "0x128B600")]
		public DitheringModel()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x128B624", Offset = "0x128B624", VA = "0x128B624", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x20000FF")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x400049C")]
			Progressive,
			[Token(Token = "0x400049D")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000100")]
		public struct Settings
		{
			[Token(Token = "0x400049E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A630", Offset = "0xC6A630")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A630", Offset = "0xC6A630")]
			public float lowPercent;

			[Token(Token = "0x400049F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A688", Offset = "0xC6A688")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A688", Offset = "0xC6A688")]
			public float highPercent;

			[Token(Token = "0x40004A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A6E0", Offset = "0xC6A6E0")]
			public float minLuminance;

			[Token(Token = "0x40004A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A718", Offset = "0xC6A718")]
			public float maxLuminance;

			[Token(Token = "0x40004A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC6A750", Offset = "0xC6A750")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A750", Offset = "0xC6A750")]
			public float keyValue;

			[Token(Token = "0x40004A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A7A0", Offset = "0xC6A7A0")]
			public bool dynamicKeyValue;

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A7D8", Offset = "0xC6A7D8")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC6A810", Offset = "0xC6A810")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A810", Offset = "0xC6A810")]
			public float speedUp;

			[Token(Token = "0x40004A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xC6A860", Offset = "0xC6A860")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A860", Offset = "0xC6A860")]
			public float speedDown;

			[Token(Token = "0x40004A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A8B0", Offset = "0xC6A8B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A8B0", Offset = "0xC6A8B0")]
			public int logMin;

			[Token(Token = "0x40004A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A904", Offset = "0xC6A904")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A904", Offset = "0xC6A904")]
			public int logMax;

			[Token(Token = "0x170000DF")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600066F")]
				[Address(RVA = "0x128C8E8", Offset = "0x128C8E8", VA = "0x128C8E8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000DE")]
		public Settings settings
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0x128B9B0", Offset = "0x128B9B0", VA = "0x128B9B0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x128C94C", Offset = "0x128C94C", VA = "0x128C94C")]
			set
			{
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x128C884", Offset = "0x128C884", VA = "0x128C884")]
		public EyeAdaptationModel()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x128C96C", Offset = "0x128C96C", VA = "0x128C96C", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000101")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000102")]
		public struct Settings
		{
			[Token(Token = "0x40004AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A968", Offset = "0xC6A968")]
			public bool excludeSkybox;

			[Token(Token = "0x170000E1")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000674")]
				[Address(RVA = "0x128D2A4", Offset = "0x128D2A4", VA = "0x128D2A4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000E0")]
		public Settings settings
		{
			[Token(Token = "0x6000671")]
			[Address(RVA = "0x128D170", Offset = "0x128D170", VA = "0x128D170")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000672")]
			[Address(RVA = "0x128D2AC", Offset = "0x128D2AC", VA = "0x128D2AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x128D294", Offset = "0x128D294", VA = "0x128D294")]
		public FogModel()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x128D2B4", Offset = "0x128D2B4", VA = "0x128D2B4", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000104")]
		public struct Settings
		{
			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A9B0", Offset = "0xC6A9B0")]
			public bool colored;

			[Token(Token = "0x40004AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6A9E8", Offset = "0xC6A9E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6A9E8", Offset = "0xC6A9E8")]
			public float intensity;

			[Token(Token = "0x40004AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AA3C", Offset = "0xC6AA3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AA3C", Offset = "0xC6AA3C")]
			public float size;

			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AA94", Offset = "0xC6AA94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AA94", Offset = "0xC6AA94")]
			public float luminanceContribution;

			[Token(Token = "0x170000E3")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000679")]
				[Address(RVA = "0x128DE8C", Offset = "0x128DE8C", VA = "0x128DE8C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000E2")]
		public Settings settings
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x128D880", Offset = "0x128D880", VA = "0x128D880")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x128DEA4", Offset = "0x128DEA4", VA = "0x128DEA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x128DE68", Offset = "0x128DE68", VA = "0x128DE68")]
		public GrainModel()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x128DEB0", Offset = "0x128DEB0", VA = "0x128DEB0", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000105")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000106")]
		public struct Settings
		{
			[Token(Token = "0x40004B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AAF8", Offset = "0xC6AAF8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AAF8", Offset = "0xC6AAF8")]
			public float shutterAngle;

			[Token(Token = "0x40004B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AB50", Offset = "0xC6AB50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AB50", Offset = "0xC6AB50")]
			public int sampleCount;

			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6ABA8", Offset = "0xC6ABA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ABA8", Offset = "0xC6ABA8")]
			public float frameBlending;

			[Token(Token = "0x170000E5")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600067E")]
				[Address(RVA = "0x1291440", Offset = "0x1291440", VA = "0x1291440")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000E4")]
		public Settings settings
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x128E90C", Offset = "0x128E90C", VA = "0x128E90C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x1291450", Offset = "0x1291450", VA = "0x1291450")]
			set
			{
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1291428", Offset = "0x1291428", VA = "0x1291428")]
		public MotionBlurModel()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x129145C", Offset = "0x129145C", VA = "0x129145C", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000107")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000108")]
		public enum SSRResolution
		{
			[Token(Token = "0x40004B6")]
			High = 0,
			[Token(Token = "0x40004B7")]
			Low = 2
		}

		[Token(Token = "0x2000109")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x40004B9")]
			PhysicallyBased,
			[Token(Token = "0x40004BA")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x200010A")]
		public struct IntensitySettings
		{
			[Token(Token = "0x40004BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AC0C", Offset = "0xC6AC0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AC0C", Offset = "0xC6AC0C")]
			public float reflectionMultiplier;

			[Token(Token = "0x40004BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AC60", Offset = "0xC6AC60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AC60", Offset = "0xC6AC60")]
			public float fadeDistance;

			[Token(Token = "0x40004BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ACB8", Offset = "0xC6ACB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6ACB8", Offset = "0xC6ACB8")]
			public float fresnelFade;

			[Token(Token = "0x40004BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AD0C", Offset = "0xC6AD0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AD0C", Offset = "0xC6AD0C")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x200010B")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x40004BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AD64", Offset = "0xC6AD64")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x40004C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AD9C", Offset = "0xC6AD9C")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x40004C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ADD4", Offset = "0xC6ADD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6ADD4", Offset = "0xC6ADD4")]
			public float maxDistance;

			[Token(Token = "0x40004C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AE30", Offset = "0xC6AE30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AE30", Offset = "0xC6AE30")]
			public int iterationCount;

			[Token(Token = "0x40004C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AE88", Offset = "0xC6AE88")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AE88", Offset = "0xC6AE88")]
			public int stepSize;

			[Token(Token = "0x40004C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AEDC", Offset = "0xC6AEDC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AEDC", Offset = "0xC6AEDC")]
			public float widthModifier;

			[Token(Token = "0x40004C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AF34", Offset = "0xC6AF34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AF34", Offset = "0xC6AF34")]
			public float reflectionBlur;

			[Token(Token = "0x40004C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AF8C", Offset = "0xC6AF8C")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200010C")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x40004C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6AFC4", Offset = "0xC6AFC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6AFC4", Offset = "0xC6AFC4")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x200010D")]
		public struct Settings
		{
			[Token(Token = "0x40004C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x40004C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x40004CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x170000E7")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000683")]
				[Address(RVA = "0x1296690", Offset = "0x1296690", VA = "0x1296690")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000E6")]
		public Settings settings
		{
			[Token(Token = "0x6000680")]
			[Address(RVA = "0x129613C", Offset = "0x129613C", VA = "0x129613C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x12966F8", Offset = "0x12966F8", VA = "0x12966F8")]
			set
			{
			}
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1294598", Offset = "0x1294598", VA = "0x1294598")]
		public ScreenSpaceReflectionModel()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1296718", Offset = "0x1296718", VA = "0x1296718", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010E")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200010F")]
		public struct Settings
		{
			[Token(Token = "0x40004CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B028", Offset = "0xC6B028")]
			public Texture2D lut;

			[Token(Token = "0x40004CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6B060", Offset = "0xC6B060")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B060", Offset = "0xC6B060")]
			public float contribution;

			[Token(Token = "0x170000E9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000688")]
				[Address(RVA = "0x12977D0", Offset = "0x12977D0", VA = "0x12977D0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000E8")]
		public Settings settings
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x1297594", Offset = "0x1297594", VA = "0x1297594")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x12977DC", Offset = "0x12977DC", VA = "0x12977DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1294604", Offset = "0x1294604", VA = "0x1294604")]
		public UserLutModel()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x12977E4", Offset = "0x12977E4", VA = "0x12977E4", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000110")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000111")]
		public enum Mode
		{
			[Token(Token = "0x40004D0")]
			Classic,
			[Token(Token = "0x40004D1")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000112")]
		public struct Settings
		{
			[Token(Token = "0x40004D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B0C4", Offset = "0xC6B0C4")]
			public Mode mode;

			[Token(Token = "0x40004D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xC6B0FC", Offset = "0xC6B0FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B0FC", Offset = "0xC6B0FC")]
			public Color color;

			[Token(Token = "0x40004D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B14C", Offset = "0xC6B14C")]
			public Vector2 center;

			[Token(Token = "0x40004D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6B184", Offset = "0xC6B184")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B184", Offset = "0xC6B184")]
			public float intensity;

			[Token(Token = "0x40004D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6B1D8", Offset = "0xC6B1D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B1D8", Offset = "0xC6B1D8")]
			public float smoothness;

			[Token(Token = "0x40004D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6B230", Offset = "0xC6B230")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B230", Offset = "0xC6B230")]
			public float roundness;

			[Token(Token = "0x40004D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B284", Offset = "0xC6B284")]
			public Texture mask;

			[Token(Token = "0x40004D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6B2BC", Offset = "0xC6B2BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B2BC", Offset = "0xC6B2BC")]
			public float opacity;

			[Token(Token = "0x40004DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6B310", Offset = "0xC6B310")]
			public bool rounded;

			[Token(Token = "0x170000EB")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600068D")]
				[Address(RVA = "0x1297D30", Offset = "0x1297D30", VA = "0x1297D30")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000EA")]
		public Settings settings
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0x1297C14", Offset = "0x1297C14", VA = "0x1297C14")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x1297E00", Offset = "0x1297E00", VA = "0x1297E00")]
			set
			{
			}
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1294614", Offset = "0x1294614", VA = "0x1294614")]
		public VignetteModel()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1297E20", Offset = "0x1297E20", VA = "0x1297E20", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000113")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B348", Offset = "0xC6B348")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6B348", Offset = "0xC6B348")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1291470", Offset = "0x1291470", VA = "0x1291470")]
		public PostProcessingBehaviour()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1291500", Offset = "0x1291500", VA = "0x1291500")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1291C60", Offset = "0x1291C60", VA = "0x1291C60")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1292A24", Offset = "0x1292A24", VA = "0x1292A24")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1292B2C", Offset = "0x1292B2C", VA = "0x1292B2C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1292C84", Offset = "0x1292C84", VA = "0x1292C84")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1293AB8", Offset = "0x1293AB8", VA = "0x1293AB8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1293E4C", Offset = "0x1293E4C", VA = "0x1293E4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x12940F8", Offset = "0x12940F8", VA = "0x12940F8")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x129233C", Offset = "0x129233C", VA = "0x129233C")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1292210", Offset = "0x1292210", VA = "0x1292210")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6000699")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600069A")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600069B")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600069D")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x170000EC")]
		public abstract bool active
		{
			[Token(Token = "0x60006A1")]
			get;
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1294164", Offset = "0x1294164", VA = "0x1294164")]
		protected PostProcessingComponentBase()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x129416C", Offset = "0x129416C", VA = "0x129416C", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1294174", Offset = "0x1294174", VA = "0x1294174", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1294178", Offset = "0x1294178", VA = "0x1294178", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60006A4")]
		public abstract PostProcessingModel GetModel();
	}
	[Token(Token = "0x2000115")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B414", Offset = "0xC6B414")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6B414", Offset = "0xC6B414")]
		private T <model>k__BackingField;

		[Token(Token = "0x170000ED")]
		public T model
		{
			[Token(Token = "0x60006A6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B450", Offset = "0xC6B450")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006A7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B460", Offset = "0xC6B460")]
			internal set
			{
			}
		}

		[Token(Token = "0x60006A5")]
		protected PostProcessingComponent()
		{
		}

		[Token(Token = "0x60006A8")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x60006A9")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60006AA")]
		protected PostProcessingComponentCommandBuffer()
		{
		}

		[Token(Token = "0x60006AB")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x60006AC")]
		public abstract string GetName();

		[Token(Token = "0x60006AD")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);
	}
	[Token(Token = "0x2000117")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60006AE")]
		protected PostProcessingComponentRenderTexture()
		{
		}

		[Token(Token = "0x60006AF")]
		public virtual void Prepare(Material material)
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class PostProcessingContext
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B470", Offset = "0xC6B470")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6B470", Offset = "0xC6B470")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x170000EE")]
		public bool interrupted
		{
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x1281F5C", Offset = "0x1281F5C", VA = "0x1281F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B4AC", Offset = "0xC6B4AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x129417C", Offset = "0x129417C", VA = "0x129417C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B4BC", Offset = "0xC6B4BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x1281D50", Offset = "0x1281D50", VA = "0x1281D50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		public bool isHdr
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x1281E74", Offset = "0x1281E74", VA = "0x1281E74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public int width
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x1282F70", Offset = "0x1282F70", VA = "0x1282F70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F2")]
		public int height
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x1282F9C", Offset = "0x1282F9C", VA = "0x1282F9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F3")]
		public Rect viewport
		{
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x1288F44", Offset = "0x1288F44", VA = "0x1288F44")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1291ABC", Offset = "0x1291ABC", VA = "0x1291ABC")]
		public PostProcessingContext()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1282FC8", Offset = "0x1282FC8", VA = "0x1282FC8")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1292200", Offset = "0x1292200", VA = "0x1292200")]
		public PostProcessingContext Reset()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000119")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0xC6B4CC", Offset = "0xC6B4CC")]
		private bool m_Enabled;

		[Token(Token = "0x170000F4")]
		public bool enabled
		{
			[Token(Token = "0x60006BB")]
			[Address(RVA = "0x1281F54", Offset = "0x1281F54", VA = "0x1281F54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x1294188", Offset = "0x1294188", VA = "0x1294188")]
			set
			{
			}
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x12835C4", Offset = "0x12835C4", VA = "0x12835C4")]
		protected PostProcessingModel()
		{
		}

		[Token(Token = "0x60006BD")]
		public abstract void Reset();

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x12941A4", Offset = "0x12941A4", VA = "0x12941A4", Slot = "5")]
		public virtual void OnValidate()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x12941A8", Offset = "0x12941A8", VA = "0x12941A8")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011B")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x128931C", Offset = "0x128931C", VA = "0x128931C")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1287BC0", Offset = "0x1287BC0", VA = "0x1287BC0")]
		public void Cache()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1287D9C", Offset = "0x1287D9C", VA = "0x1287D9C")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200011C")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170000F5")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x128D178", Offset = "0x128D178", VA = "0x128D178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F6")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x128DF24", Offset = "0x128DF24", VA = "0x128DF24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x128DF5C", Offset = "0x128DF5C", VA = "0x128DF5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public static Mesh quad
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x1282FD4", Offset = "0x1282FD4", VA = "0x1282FD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x128E0A0", Offset = "0x128E0A0", VA = "0x128E0A0")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x128E1E4", Offset = "0x128E1E4", VA = "0x128E1E4")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x12862F4", Offset = "0x12862F4", VA = "0x12862F4")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x128E3F8", Offset = "0x128E3F8", VA = "0x128E3F8")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x128E448", Offset = "0x128E448", VA = "0x128E448")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1282D30", Offset = "0x1282D30", VA = "0x1282D30")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x128E4BC", Offset = "0x128E4BC", VA = "0x128E4BC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1291A48", Offset = "0x1291A48", VA = "0x1291A48")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x12932C8", Offset = "0x12932C8", VA = "0x12932C8")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x12847F0", Offset = "0x12847F0", VA = "0x12847F0")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1284918", Offset = "0x1284918", VA = "0x1284918")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x12939CC", Offset = "0x12939CC", VA = "0x12939CC")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x12940F4", Offset = "0x12940F4", VA = "0x12940F4", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
[Token(Token = "0x200011F")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	private static class Uniforms
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x10D083C", Offset = "0x10D083C", VA = "0x10D083C")]
	public ExampleWheelController()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x10D0844", Offset = "0x10D0844", VA = "0x10D0844")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x10D08B8", Offset = "0x10D08B8", VA = "0x10D08B8")]
	private void Update()
	{
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000121")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1176734", Offset = "0x1176734", VA = "0x1176734")]
		public EventSystemSpawner()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x117673C", Offset = "0x117673C", VA = "0x117673C")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1176840", Offset = "0x1176840", VA = "0x1176840")]
		public OnStartDelete()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1176848", Offset = "0x1176848", VA = "0x1176848")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B548", Offset = "0xC6B548")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x11768C8", Offset = "0x11768C8", VA = "0x11768C8")]
		public TextButtonTransition()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1176914", Offset = "0x1176914", VA = "0x1176914")]
		public void Awake()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x117696C", Offset = "0x117696C", VA = "0x117696C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x11769C8", Offset = "0x11769C8", VA = "0x11769C8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1176A24", Offset = "0x1176A24", VA = "0x1176A24", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1176B20", Offset = "0x1176B20", VA = "0x1176B20", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}
	}
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B5AC", Offset = "0xC6B5AC")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1176C1C", Offset = "0x1176C1C", VA = "0x1176C1C")]
		public TextToggleIsOnTransition()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1176C90", Offset = "0x1176C90", VA = "0x1176C90")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1176E04", Offset = "0x1176E04", VA = "0x1176E04")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1176D78", Offset = "0x1176D78", VA = "0x1176D78")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1176EB0", Offset = "0x1176EB0", VA = "0x1176EB0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1176F44", Offset = "0x1176F44", VA = "0x1176F44", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}
	}
}
[Token(Token = "0x2000125")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x11BFFC0", Offset = "0x11BFFC0", VA = "0x11BFFC0")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x2000126")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x11C05F8", Offset = "0x11C05F8", VA = "0x11C05F8")]
	public ChannelSelector()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x11C0600", Offset = "0x11C0600", VA = "0x11C0600")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x11C0688", Offset = "0x11C0688", VA = "0x11C0688", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}
}
[Token(Token = "0x2000127")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x11C09BC", Offset = "0x11C09BC", VA = "0x11C09BC")]
	public ChatAppIdCheckerUI()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x11C09C4", Offset = "0x11C09C4", VA = "0x11C09C4")]
	public void Update()
	{
	}
}
[Token(Token = "0x2000128")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B640", Offset = "0xC6B640")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6B640", Offset = "0xC6B640")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x170000F9")]
	public string UserName
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x11C0C0C", Offset = "0x11C0C0C", VA = "0x11C0C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B67C", Offset = "0xC6B67C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x11C0C14", Offset = "0x11C0C14", VA = "0x11C0C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6B68C", Offset = "0xC6B68C")]
		set
		{
		}
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x11C0B40", Offset = "0x11C0B40", VA = "0x11C0B40")]
	public ChatGui()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x11C0C1C", Offset = "0x11C0C1C", VA = "0x11C0C1C")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x11C0F64", Offset = "0x11C0F64", VA = "0x11C0F64")]
	public void Connect()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x11C111C", Offset = "0x11C111C", VA = "0x11C111C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x11C1134", Offset = "0x11C1134", VA = "0x11C1134")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x11C114C", Offset = "0x11C114C", VA = "0x11C114C")]
	public void Update()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x11C1260", Offset = "0x11C1260", VA = "0x11C1260")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x11C20E8", Offset = "0x11C20E8", VA = "0x11C20E8")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x11C1360", Offset = "0x11C1360", VA = "0x11C1360")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x11C21C0", Offset = "0x11C21C0", VA = "0x11C21C0")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x11C2280", Offset = "0x11C2280", VA = "0x11C2280", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x11C2384", Offset = "0x11C2384", VA = "0x11C2384", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x11C2770", Offset = "0x11C2770", VA = "0x11C2770", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x11C27A0", Offset = "0x11C27A0", VA = "0x11C27A0", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x11C2864", Offset = "0x11C2864", VA = "0x11C2864", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x11C2BF8", Offset = "0x11C2BF8", VA = "0x11C2BF8")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11C2A04", Offset = "0x11C2A04", VA = "0x11C2A04")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x11C25E8", Offset = "0x11C25E8", VA = "0x11C25E8")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x11C2DD0", Offset = "0x11C2DD0", VA = "0x11C2DD0", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11C3244", Offset = "0x11C3244", VA = "0x11C3244", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x11C32A4", Offset = "0x11C32A4", VA = "0x11C32A4", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11C33BC", Offset = "0x11C33BC", VA = "0x11C33BC", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x11C3560", Offset = "0x11C3560", VA = "0x11C3560", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x11C368C", Offset = "0x11C368C", VA = "0x11C368C", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x11C37B8", Offset = "0x11C37B8", VA = "0x11C37B8")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x11C395C", Offset = "0x11C395C", VA = "0x11C395C")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x11C3B4C", Offset = "0x11C3B4C", VA = "0x11C3B4C")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x11C3CBC", Offset = "0x11C3CBC", VA = "0x11C3CBC")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x11C0714", Offset = "0x11C0714", VA = "0x11C0714")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x11C3DB8", Offset = "0x11C3DB8", VA = "0x11C3DB8")]
	public void OpenDashboard()
	{
	}
}
[Token(Token = "0x2000129")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x170000FA")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x10D84E8", Offset = "0x10D84E8", VA = "0x10D84E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x10D84AC", Offset = "0x10D84AC", VA = "0x10D84AC")]
		set
		{
		}
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x10D84A4", Offset = "0x10D84A4", VA = "0x10D84A4")]
	public FriendItem()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x10D851C", Offset = "0x10D851C", VA = "0x10D851C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x10D8590", Offset = "0x10D8590", VA = "0x10D8590")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}
}
[Token(Token = "0x200012A")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000714")]
	[Address(RVA = "0x117506C", Offset = "0x117506C", VA = "0x117506C")]
	public IgnoreUiRaycastWhenInactive()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1175074", Offset = "0x1175074", VA = "0x1175074", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B6AC", Offset = "0xC6B6AC")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1175568", Offset = "0x1175568", VA = "0x1175568")]
	public NamePickGui()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1175570", Offset = "0x1175570", VA = "0x1175570")]
	public void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1175640", Offset = "0x1175640", VA = "0x1175640")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x11756F4", Offset = "0x11756F4", VA = "0x11756F4")]
	public void StartChat()
	{
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x200012C")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1176FD4", Offset = "0x1176FD4", VA = "0x1176FD4")]
		public ConnectAndJoinRandomLb()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x117703C", Offset = "0x117703C", VA = "0x117703C")]
		public void Start()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x11771E8", Offset = "0x11771E8", VA = "0x11771E8")]
		public void Update()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x117736C", Offset = "0x117736C", VA = "0x117736C", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1177370", Offset = "0x1177370", VA = "0x1177370", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1177400", Offset = "0x1177400", VA = "0x1177400", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x11774C0", Offset = "0x11774C0", VA = "0x11774C0", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x11774C4", Offset = "0x11774C4", VA = "0x11774C4", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x11774C8", Offset = "0x11774C8", VA = "0x11774C8", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x117759C", Offset = "0x117759C", VA = "0x117759C", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x11775A0", Offset = "0x11775A0", VA = "0x11775A0", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x11775A4", Offset = "0x11775A4", VA = "0x11775A4", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x11775A8", Offset = "0x11775A8", VA = "0x11775A8", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x11775AC", Offset = "0x11775AC", VA = "0x11775AC", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x11775B0", Offset = "0x11775B0", VA = "0x11775B0", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x11775B4", Offset = "0x11775B4", VA = "0x11775B4", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x11775B8", Offset = "0x11775B8", VA = "0x11775B8", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1177628", Offset = "0x1177628", VA = "0x1177628", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x117762C", Offset = "0x117762C", VA = "0x117762C", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x11776D8", Offset = "0x11776D8", VA = "0x11776D8", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x11776DC", Offset = "0x11776DC", VA = "0x11776DC")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}
	}
}
[Token(Token = "0x200012D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B720", Offset = "0xC6B720")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B720", Offset = "0xC6B720")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x11C02E8", Offset = "0x11C02E8", VA = "0x11C02E8")]
	public ChangeColor()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x11C02F0", Offset = "0x11C02F0", VA = "0x11C02F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x11C045C", Offset = "0x11C045C", VA = "0x11C045C")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}
}
[Token(Token = "0x200012E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B7BC", Offset = "0xC6B7BC")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000732")]
	[Address(RVA = "0x11C0534", Offset = "0x11C0534", VA = "0x11C0534")]
	public ChangeName()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x11C053C", Offset = "0x11C053C", VA = "0x11C053C")]
	private void Start()
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B820", Offset = "0xC6B820")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x117A2AC", Offset = "0x117A2AC", VA = "0x117A2AC")]
	public PointersController()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x117A2B4", Offset = "0x117A2B4", VA = "0x117A2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x117A30C", Offset = "0x117A30C", VA = "0x117A30C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x117A378", Offset = "0x117A378", VA = "0x117A378")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B8A4", Offset = "0xC6B8A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B8A4", Offset = "0xC6B8A4")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x170000FB")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x117A4CC", Offset = "0x117A4CC", VA = "0x117A4CC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x117A43C", Offset = "0x117A43C", VA = "0x117A43C")]
	public ProximityVoiceTrigger()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x117A568", Offset = "0x117A568", VA = "0x117A568", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x117A604", Offset = "0x117A604", VA = "0x117A604")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x117A984", Offset = "0x117A984", VA = "0x117A984")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x117AB9C", Offset = "0x117AB9C", VA = "0x117AB9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x117ADF8", Offset = "0x117ADF8", VA = "0x117ADF8")]
	private void Update()
	{
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B940", Offset = "0xC6B940")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B940", Offset = "0xC6B940")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6B940", Offset = "0xC6B940")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x10D0B44", Offset = "0x10D0B44", VA = "0x10D0B44")]
		protected BaseController()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x10D0B54", Offset = "0x10D0B54", VA = "0x10D0B54", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x10D0CD8", Offset = "0x10D0CD8", VA = "0x10D0CD8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x10D0E4C", Offset = "0x10D0E4C", VA = "0x10D0E4C", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x10D0F08", Offset = "0x10D0F08", VA = "0x10D0F08", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x10D0FAC", Offset = "0x10D0FAC", VA = "0x10D0FAC", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x10D101C", Offset = "0x10D101C", VA = "0x10D101C", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x10D1178", Offset = "0x10D1178", VA = "0x10D1178", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x10D1200", Offset = "0x10D1200", VA = "0x10D1200", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x10D1394", Offset = "0x10D1394", VA = "0x10D1394", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x10D1444", Offset = "0x10D1444", VA = "0x10D1444", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x600074A")]
		protected abstract void Move(float h, float v);
	}
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6BA14", Offset = "0xC6BA14")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000133")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000036")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x10D14FC", Offset = "0x10D14FC", VA = "0x10D14FC")]
			add
			{
			}
			[Token(Token = "0x600074D")]
			[Address(RVA = "0x10D1600", Offset = "0x10D1600", VA = "0x10D1600")]
			remove
			{
			}
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x10D14F4", Offset = "0x10D14F4", VA = "0x10D14F4")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x10D1704", Offset = "0x10D1704", VA = "0x10D1704")]
		private void Start()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x10D17C8", Offset = "0x10D17C8", VA = "0x10D17C8")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x10D1F8C", Offset = "0x10D1F8C", VA = "0x10D1F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BAC4", Offset = "0xC6BAC4")]
		private void <Start>m__0(bool P_0)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000135")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000037")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x10D0BD4", Offset = "0x10D0BD4", VA = "0x10D0BD4")]
			add
			{
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x10D0D48", Offset = "0x10D0D48", VA = "0x10D0D48")]
			remove
			{
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x10D1FD4", Offset = "0x10D1FD4", VA = "0x10D1FD4")]
		public ChangePOV()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x10D1FDC", Offset = "0x10D1FDC", VA = "0x10D1FDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x10D218C", Offset = "0x10D218C", VA = "0x10D218C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x10D232C", Offset = "0x10D232C", VA = "0x10D232C")]
		private void Start()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x10D2654", Offset = "0x10D2654", VA = "0x10D2654")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x10D2750", Offset = "0x10D2750", VA = "0x10D2750")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x10D2954", Offset = "0x10D2954", VA = "0x10D2954")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x10D295C", Offset = "0x10D295C", VA = "0x10D295C")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x10D2758", Offset = "0x10D2758", VA = "0x10D2758")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x10D2964", Offset = "0x10D2964", VA = "0x10D2964")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x10D3164", Offset = "0x10D3164", VA = "0x10D3164", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x10D3168", Offset = "0x10D3168", VA = "0x10D3168", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x10D316C", Offset = "0x10D316C", VA = "0x10D316C", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x10D3170", Offset = "0x10D3170", VA = "0x10D3170", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x10D3174", Offset = "0x10D3174", VA = "0x10D3174", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x10D3178", Offset = "0x10D3178", VA = "0x10D3178", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x10D317C", Offset = "0x10D317C", VA = "0x10D317C", Slot = "10")]
		public void OnLeftRoom()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x2000137")]
		public enum SpawnSequence
		{
			[Token(Token = "0x4000578")]
			Connection,
			[Token(Token = "0x4000579")]
			Random,
			[Token(Token = "0x400057A")]
			RoundRobin
		}

		[Token(Token = "0x2000138")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000038")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x10D2088", Offset = "0x10D2088", VA = "0x10D2088")]
			add
			{
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x10D2228", Offset = "0x10D2228", VA = "0x10D2228")]
			remove
			{
			}
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x10D3358", Offset = "0x10D3358", VA = "0x10D3358")]
		public CharacterInstantiation()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x10D3380", Offset = "0x10D3380", VA = "0x10D3380", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x10D3650", Offset = "0x10D3650", VA = "0x10D3650")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x10D4360", Offset = "0x10D4360", VA = "0x10D4360", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x10D4814", Offset = "0x10D4814", VA = "0x10D4814", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x10D4A38", Offset = "0x10D4A38", VA = "0x10D4A38", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x170000FC")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x10D4C8C", Offset = "0x10D4C8C", VA = "0x10D4C8C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x10D4C1C", Offset = "0x10D4C1C", VA = "0x10D4C1C")]
		public FirstPersonController()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x10D4CB8", Offset = "0x10D4CB8", VA = "0x10D4CB8", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x10D4D10", Offset = "0x10D4D10", VA = "0x10D4D10", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x10D4E54", Offset = "0x10D4E54", VA = "0x10D4E54")]
		private void Update()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x10D4E58", Offset = "0x10D4E58", VA = "0x10D4E58")]
		private void RotateView()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6BBEC", Offset = "0xC6BBEC")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x10D5034", Offset = "0x10D5034", VA = "0x10D5034")]
		public Highlighter()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x10D503C", Offset = "0x10D503C", VA = "0x10D503C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x10D51EC", Offset = "0x10D51EC", VA = "0x10D51EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x10D538C", Offset = "0x10D538C", VA = "0x10D538C")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x10D5398", Offset = "0x10D5398", VA = "0x10D5398")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x10D53CC", Offset = "0x10D53CC", VA = "0x10D53CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x10D54FC", Offset = "0x10D54FC", VA = "0x10D54FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x10D56AC", Offset = "0x10D56AC", VA = "0x10D56AC")]
		private void LateUpdate()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x200013B")]
public class MouseLookHelper
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x11750A8", Offset = "0x11750A8", VA = "0x11750A8")]
	public MouseLookHelper()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x11750D4", Offset = "0x11750D4", VA = "0x11750D4")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1175138", Offset = "0x1175138", VA = "0x1175138")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x117549C", Offset = "0x117549C", VA = "0x117549C")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x200013C")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x10D5874", Offset = "0x10D5874", VA = "0x10D5874")]
		public OrthographicController()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x10D58A4", Offset = "0x10D58A4", VA = "0x10D58A4", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x10D58D4", Offset = "0x10D58D4", VA = "0x10D58D4", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x10D59D4", Offset = "0x10D59D4", VA = "0x10D59D4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x10D5C10", Offset = "0x10D5C10", VA = "0x10D5C10")]
		private void CameraFollow()
		{
		}
	}
}
[Token(Token = "0x200013D")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x138B094", Offset = "0x138B094", VA = "0x138B094")]
	public SoundsForJoinAndLeave()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x138B09C", Offset = "0x138B09C", VA = "0x138B09C", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x138B1BC", Offset = "0x138B1BC", VA = "0x138B1BC", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x200013E")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x10D588C", Offset = "0x10D588C", VA = "0x10D588C")]
		public ThirdPersonController()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x10D59F8", Offset = "0x10D59F8", VA = "0x10D59F8", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x2000140")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BD6C", Offset = "0xC6BD6C")]
		private static Dictionary<string, int> <>f__switch$map0;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BD7C", Offset = "0xC6BD7C")]
		private static Dictionary<string, int> <>f__switch$map1;

		[Token(Token = "0x170000FD")]
		public bool DebugMode
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x10D5D8C", Offset = "0x10D5D8C", VA = "0x10D5D8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000796")]
			[Address(RVA = "0x10D5D94", Offset = "0x10D5D94", VA = "0x10D5D94")]
			set
			{
			}
		}

		[Token(Token = "0x14000039")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x10D50E8", Offset = "0x10D50E8", VA = "0x10D50E8")]
			add
			{
			}
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x10D5288", Offset = "0x10D5288", VA = "0x10D5288")]
			remove
			{
			}
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x10D5D7C", Offset = "0x10D5D7C", VA = "0x10D5D7C")]
		public VoiceDemoUI()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x10D634C", Offset = "0x10D634C", VA = "0x10D634C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x10D63BC", Offset = "0x10D63BC", VA = "0x10D63BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x10D6574", Offset = "0x10D6574", VA = "0x10D6574")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x10D672C", Offset = "0x10D672C", VA = "0x10D672C")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x10D6804", Offset = "0x10D6804", VA = "0x10D6804")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x10D6CC4", Offset = "0x10D6CC4", VA = "0x10D6CC4")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x10D71BC", Offset = "0x10D71BC", VA = "0x10D71BC")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x10D71F0", Offset = "0x10D71F0", VA = "0x10D71F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x10D790C", Offset = "0x10D790C", VA = "0x10D790C")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x10D7A34", Offset = "0x10D7A34", VA = "0x10D7A34")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x10D7AF4", Offset = "0x10D7AF4", VA = "0x10D7AF4")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x10D7BB8", Offset = "0x10D7BB8", VA = "0x10D7BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x10D7DEC", Offset = "0x10D7DEC", VA = "0x10D7DEC")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x10D83EC", Offset = "0x10D83EC", VA = "0x10D83EC")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x10D7F8C", Offset = "0x10D7F8C", VA = "0x10D7F8C")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000141")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x129ACF8", Offset = "0x129ACF8", VA = "0x129ACF8")]
		public AxisTouchButton()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x129AD60", Offset = "0x129AD60", VA = "0x129AD60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x129B00C", Offset = "0x129B00C", VA = "0x129B00C")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x129B1B4", Offset = "0x129B1B4", VA = "0x129B1B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x129B244", Offset = "0x129B244", VA = "0x129B244", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x129B348", Offset = "0x129B348", VA = "0x129B348", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x129B3F8", Offset = "0x129B3F8", VA = "0x129B3F8")]
		public ButtonHandler()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x129B400", Offset = "0x129B400", VA = "0x129B400")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x129B404", Offset = "0x129B404", VA = "0x129B404")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x129B4F0", Offset = "0x129B4F0", VA = "0x129B4F0")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x129B5DC", Offset = "0x129B5DC", VA = "0x129B5DC")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x129B6C8", Offset = "0x129B6C8", VA = "0x129B6C8")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x129B7B4", Offset = "0x129B7B4", VA = "0x129B7B4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x129B8A0", Offset = "0x129B8A0", VA = "0x129B8A0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000144")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x40005B5")]
			Hardware,
			[Token(Token = "0x40005B6")]
			Touch
		}

		[Token(Token = "0x2000145")]
		public class VirtualAxis
		{
			[Token(Token = "0x40005B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BD8C", Offset = "0xC6BD8C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6BD8C", Offset = "0xC6BD8C")]
			private string <name>k__BackingField;

			[Token(Token = "0x40005B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x40005B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BDC8", Offset = "0xC6BDC8")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6BDC8", Offset = "0xC6BDC8")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170000FF")]
			public string name
			{
				[Token(Token = "0x60007D5")]
				[Address(RVA = "0x129C224", Offset = "0x129C224", VA = "0x129C224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE04", Offset = "0xC6BE04")]
				get
				{
					return null;
				}
				[Token(Token = "0x60007D6")]
				[Address(RVA = "0x129C210", Offset = "0x129C210", VA = "0x129C210")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE14", Offset = "0xC6BE14")]
				private set
				{
				}
			}

			[Token(Token = "0x17000100")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60007D7")]
				[Address(RVA = "0x129C22C", Offset = "0x129C22C", VA = "0x129C22C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE24", Offset = "0xC6BE24")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60007D8")]
				[Address(RVA = "0x129C218", Offset = "0x129C218", VA = "0x129C218")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE34", Offset = "0xC6BE34")]
				private set
				{
				}
			}

			[Token(Token = "0x17000101")]
			public float GetValue
			{
				[Token(Token = "0x60007DB")]
				[Address(RVA = "0x129B338", Offset = "0x129B338", VA = "0x129B338")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000102")]
			public float GetValueRaw
			{
				[Token(Token = "0x60007DC")]
				[Address(RVA = "0x129C234", Offset = "0x129C234", VA = "0x129C234")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x129AED8", Offset = "0x129AED8", VA = "0x129AED8")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x129C1D0", Offset = "0x129C1D0", VA = "0x129C1D0")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x129B1DC", Offset = "0x129B1DC", VA = "0x129B1DC")]
			public void Remove()
			{
			}

			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x129B340", Offset = "0x129B340", VA = "0x129B340")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000146")]
		public class VirtualButton
		{
			[Token(Token = "0x40005BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE44", Offset = "0xC6BE44")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6BE44", Offset = "0xC6BE44")]
			private string <name>k__BackingField;

			[Token(Token = "0x40005BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BE80", Offset = "0xC6BE80")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6BE80", Offset = "0xC6BE80")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x40005BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x40005BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x40005BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000103")]
			public string name
			{
				[Token(Token = "0x60007DF")]
				[Address(RVA = "0x129C2D4", Offset = "0x129C2D4", VA = "0x129C2D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BEBC", Offset = "0xC6BEBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60007E0")]
				[Address(RVA = "0x129C2C0", Offset = "0x129C2C0", VA = "0x129C2C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BECC", Offset = "0xC6BECC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000104")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60007E1")]
				[Address(RVA = "0x129C2DC", Offset = "0x129C2DC", VA = "0x129C2DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BEDC", Offset = "0xC6BEDC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60007E2")]
				[Address(RVA = "0x129C2C8", Offset = "0x129C2C8", VA = "0x129C2C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BEEC", Offset = "0xC6BEEC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000105")]
			public bool GetButton
			{
				[Token(Token = "0x60007E6")]
				[Address(RVA = "0x129C3B8", Offset = "0x129C3B8", VA = "0x129C3B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000106")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60007E7")]
				[Address(RVA = "0x129C3C0", Offset = "0x129C3C0", VA = "0x129C3C0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000107")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60007E8")]
				[Address(RVA = "0x129C3F4", Offset = "0x129C3F4", VA = "0x129C3F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x129C23C", Offset = "0x129C23C", VA = "0x129C23C")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x129C278", Offset = "0x129C278", VA = "0x129C278")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x129C2E4", Offset = "0x129C2E4", VA = "0x129C2E4")]
			public void Pressed()
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x129C320", Offset = "0x129C320", VA = "0x129C320")]
			public void Released()
			{
			}

			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x129C350", Offset = "0x129C350", VA = "0x129C350")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170000FE")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x129BFBC", Offset = "0x129BFBC", VA = "0x129BFBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x129B8A4", Offset = "0x129B8A4", VA = "0x129B8A4")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x129B948", Offset = "0x129B948", VA = "0x129B948")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x129AE58", Offset = "0x129AE58", VA = "0x129AE58")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x129B9F4", Offset = "0x129B9F4", VA = "0x129B9F4")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x129AF0C", Offset = "0x129AF0C", VA = "0x129AF0C")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x129BA74", Offset = "0x129BA74", VA = "0x129BA74")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x129BAF4", Offset = "0x129BAF4", VA = "0x129BAF4")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x129BBB8", Offset = "0x129BBB8", VA = "0x129BBB8")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x129AF8C", Offset = "0x129AF8C", VA = "0x129AF8C")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x129BC38", Offset = "0x129BC38", VA = "0x129BC38")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x129BD34", Offset = "0x129BD34", VA = "0x129BD34")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x129BCA0", Offset = "0x129BCA0", VA = "0x129BCA0")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x129BD9C", Offset = "0x129BD9C", VA = "0x129BD9C")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x129BE20", Offset = "0x129BE20", VA = "0x129BE20")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x129BEA4", Offset = "0x129BEA4", VA = "0x129BEA4")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x129B46C", Offset = "0x129B46C", VA = "0x129B46C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x129B558", Offset = "0x129B558", VA = "0x129B558")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x129B644", Offset = "0x129B644", VA = "0x129B644")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x129B81C", Offset = "0x129B81C", VA = "0x129B81C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x129B730", Offset = "0x129B730", VA = "0x129B730")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x129BF28", Offset = "0x129BF28", VA = "0x129BF28")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x129C038", Offset = "0x129C038", VA = "0x129C038")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x129C0C0", Offset = "0x129C0C0", VA = "0x129C0C0")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x129C148", Offset = "0x129C148", VA = "0x129C148")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x29444E4", Offset = "0x29444E4", VA = "0x29444E4")]
		public InputAxisScrollbar()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x29444EC", Offset = "0x29444EC", VA = "0x29444EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x29444F0", Offset = "0x29444F0", VA = "0x29444F0")]
		public void HandleInput(float value)
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IPointerUpHandler, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000149")]
		public enum AxisOption
		{
			[Token(Token = "0x40005CA")]
			Both,
			[Token(Token = "0x40005CB")]
			OnlyHorizontal,
			[Token(Token = "0x40005CC")]
			OnlyVertical
		}

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x2944578", Offset = "0x2944578", VA = "0x2944578")]
		public Joystick()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x29445E8", Offset = "0x29445E8", VA = "0x29445E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x294474C", Offset = "0x294474C", VA = "0x294474C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x2944790", Offset = "0x2944790", VA = "0x2944790")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x29445EC", Offset = "0x29445EC", VA = "0x29445EC")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x29448C8", Offset = "0x29448C8", VA = "0x29448C8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x2944AC0", Offset = "0x2944AC0", VA = "0x2944AC0", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x2944B2C", Offset = "0x2944B2C", VA = "0x2944B2C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x2944B30", Offset = "0x2944B30", VA = "0x2944B30")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x2944BA0", Offset = "0x2944BA0", VA = "0x2944BA0")]
		public MobileControlRig()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x2944BA8", Offset = "0x2944BA8", VA = "0x2944BA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x2944BB8", Offset = "0x2944BB8", VA = "0x2944BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x2944BB0", Offset = "0x2944BB0", VA = "0x2944BB0")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x2944CBC", Offset = "0x2944CBC", VA = "0x2944CBC")]
		private void EnableControlRig(bool enabled)
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x200014B")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x2944F90", Offset = "0x2944F90", VA = "0x2944F90")]
		public MobileInput()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x2945054", Offset = "0x2945054", VA = "0x2945054")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x29450E0", Offset = "0x29450E0", VA = "0x29450E0")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x294516C", Offset = "0x294516C", VA = "0x294516C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x2945224", Offset = "0x2945224", VA = "0x2945224", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x29452DC", Offset = "0x29452DC", VA = "0x29452DC", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x2945394", Offset = "0x2945394", VA = "0x2945394", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x2945450", Offset = "0x2945450", VA = "0x2945450", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x294550C", Offset = "0x294550C", VA = "0x294550C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x29455C8", Offset = "0x29455C8", VA = "0x29455C8", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x2945690", Offset = "0x2945690", VA = "0x2945690", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x2945744", Offset = "0x2945744", VA = "0x2945744", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x29457F8", Offset = "0x29457F8", VA = "0x29457F8", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x29458AC", Offset = "0x29458AC", VA = "0x29458AC", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200014C")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x29458C4", Offset = "0x29458C4", VA = "0x29458C4")]
		public StandaloneInput()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x29458C8", Offset = "0x29458C8", VA = "0x29458C8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x294597C", Offset = "0x294597C", VA = "0x294597C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x29459E8", Offset = "0x29459E8", VA = "0x29459E8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x2945A54", Offset = "0x2945A54", VA = "0x2945A54", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x2945AC0", Offset = "0x2945AC0", VA = "0x2945AC0", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x2945B30", Offset = "0x2945B30", VA = "0x2945B30", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x2945BA0", Offset = "0x2945BA0", VA = "0x2945BA0", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x2945C10", Offset = "0x2945C10", VA = "0x2945C10", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x2945C80", Offset = "0x2945C80", VA = "0x2945C80", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x2945CF0", Offset = "0x2945CF0", VA = "0x2945CF0", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x2945D60", Offset = "0x2945D60", VA = "0x2945D60", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6BF0C", Offset = "0xC6BF0C")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x200014E")]
		public enum AxisOption
		{
			[Token(Token = "0x40005E0")]
			Both,
			[Token(Token = "0x40005E1")]
			OnlyHorizontal,
			[Token(Token = "0x40005E2")]
			OnlyVertical
		}

		[Token(Token = "0x200014F")]
		public enum ControlStyle
		{
			[Token(Token = "0x40005E4")]
			Absolute,
			[Token(Token = "0x40005E5")]
			Relative,
			[Token(Token = "0x40005E6")]
			Swipe
		}

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x2945DC4", Offset = "0x2945DC4", VA = "0x2945DC4")]
		public TouchPad()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x2945E3C", Offset = "0x2945E3C", VA = "0x2945E3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x2945FA0", Offset = "0x2945FA0", VA = "0x2945FA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x2945E40", Offset = "0x2945E40", VA = "0x2945E40")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x2946030", Offset = "0x2946030", VA = "0x2946030")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x29460D0", Offset = "0x29460D0", VA = "0x29460D0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x29461A4", Offset = "0x29461A4", VA = "0x29461A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x2946404", Offset = "0x2946404", VA = "0x2946404", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x2946480", Offset = "0x2946480", VA = "0x2946480")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BF70", Offset = "0xC6BF70")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6BF70", Offset = "0xC6BF70")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000108")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x29458B8", Offset = "0x29458B8", VA = "0x29458B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BFAC", Offset = "0xC6BFAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x2946594", Offset = "0x2946594", VA = "0x2946594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6BFBC", Offset = "0xC6BFBC")]
			private set
			{
			}
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x2944F94", Offset = "0x2944F94", VA = "0x2944F94")]
		protected VirtualInput()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x29465A0", Offset = "0x29465A0", VA = "0x29465A0")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x294660C", Offset = "0x294660C", VA = "0x294660C")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x2946678", Offset = "0x2946678", VA = "0x2946678")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x2946828", Offset = "0x2946828", VA = "0x2946828")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x29469D8", Offset = "0x29469D8", VA = "0x29469D8")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x2946A7C", Offset = "0x2946A7C", VA = "0x2946A7C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x2946B20", Offset = "0x2946B20", VA = "0x2946B20")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x2946BC0", Offset = "0x2946BC0", VA = "0x2946BC0")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x2946C0C", Offset = "0x2946C0C", VA = "0x2946C0C")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x2946C68", Offset = "0x2946C68", VA = "0x2946C68")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600082A")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600082B")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x600082C")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600082D")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x600082E")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x600082F")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6000830")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6000831")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6000832")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6000833")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6000834")]
		public abstract Vector3 MousePosition();
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6BFCC", Offset = "0xC6BFCC")]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4000600")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color warningColor;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color okColor;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1177818", Offset = "0x1177818", VA = "0x1177818")]
		public DemoVoiceUI()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x11778B4", Offset = "0x11778B4", VA = "0x11778B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1177EFC", Offset = "0x1177EFC", VA = "0x1177EFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1178064", Offset = "0x1178064", VA = "0x1178064")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x11780FC", Offset = "0x11780FC", VA = "0x11780FC")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x117827C", Offset = "0x117827C", VA = "0x117827C")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1178340", Offset = "0x1178340", VA = "0x1178340")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x11784C4", Offset = "0x11784C4", VA = "0x11784C4")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x117852C", Offset = "0x117852C", VA = "0x117852C")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1178594", Offset = "0x1178594", VA = "0x1178594")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x11785E0", Offset = "0x11785E0", VA = "0x11785E0")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x117862C", Offset = "0x117862C", VA = "0x117862C")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1178678", Offset = "0x1178678", VA = "0x1178678")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x11786C4", Offset = "0x11786C4", VA = "0x11786C4")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1178790", Offset = "0x1178790", VA = "0x1178790")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x11788C4", Offset = "0x11788C4", VA = "0x11788C4")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x117892C", Offset = "0x117892C", VA = "0x117892C")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1178A1C", Offset = "0x1178A1C", VA = "0x1178A1C")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1178C00", Offset = "0x1178C00", VA = "0x1178C00")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1177910", Offset = "0x1177910", VA = "0x1177910")]
		private void InitToggles()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public struct MicRef
	{
		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x11793C4", Offset = "0x11793C4", VA = "0x11793C4")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x11793D8", Offset = "0x11793D8", VA = "0x11793D8")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1179444", Offset = "0x1179444", VA = "0x1179444", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC6C180", Offset = "0xC6C180")]
		private GameObject refreshButton;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC6C1CC", Offset = "0xC6C1CC")]
		private GameObject toggleButton;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x117944C", Offset = "0x117944C", VA = "0x117944C")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1179454", Offset = "0x1179454", VA = "0x1179454")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x11794E8", Offset = "0x11794E8", VA = "0x11794E8")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x117975C", Offset = "0x117975C", VA = "0x117975C")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x117983C", Offset = "0x117983C", VA = "0x117983C")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1179D30", Offset = "0x1179D30", VA = "0x1179D30")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x11794C4", Offset = "0x11794C4", VA = "0x11794C4")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1179E20", Offset = "0x1179E20", VA = "0x1179E20")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1179E44", Offset = "0x1179E44", VA = "0x1179E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C218", Offset = "0xC6C218")]
		private void <SetupMicDropdown>m__0(int P_0)
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC6C228", Offset = "0xC6C228")]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1179EF0", Offset = "0x1179EF0", VA = "0x1179EF0")]
		public RemoteSpeakerUI()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1179EF8", Offset = "0x1179EF8", VA = "0x1179EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1179F50", Offset = "0x1179F50", VA = "0x1179F50")]
		private void Update()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6C2BC", Offset = "0xC6C2BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6C2BC", Offset = "0xC6C2BC")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1DB156C", Offset = "0x1DB156C", VA = "0x1DB156C")]
		public BipedIK()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1DB1738", Offset = "0x1DB1738", VA = "0x1DB1738")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C31C", Offset = "0xC6C31C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1DB1788", Offset = "0x1DB1788", VA = "0x1DB1788")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C354", Offset = "0xC6C354")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1DB17D8", Offset = "0x1DB17D8", VA = "0x1DB17D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C38C", Offset = "0xC6C38C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1DB1828", Offset = "0x1DB1828", VA = "0x1DB1828")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C3C4", Offset = "0xC6C3C4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1DB1878", Offset = "0x1DB1878", VA = "0x1DB1878")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1DB1940", Offset = "0x1DB1940", VA = "0x1DB1940")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1DB1970", Offset = "0x1DB1970", VA = "0x1DB1970")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1DB19B0", Offset = "0x1DB19B0", VA = "0x1DB19B0")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1DB19F0", Offset = "0x1DB19F0", VA = "0x1DB19F0")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1DB1A48", Offset = "0x1DB1A48", VA = "0x1DB1A48")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1DB1AA8", Offset = "0x1DB1AA8", VA = "0x1DB1AA8")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1DB1ADC", Offset = "0x1DB1ADC", VA = "0x1DB1ADC")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1DB1B0C", Offset = "0x1DB1B0C", VA = "0x1DB1B0C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1DB1B9C", Offset = "0x1DB1B9C", VA = "0x1DB1B9C")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1DB1BFC", Offset = "0x1DB1BFC", VA = "0x1DB1BFC")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1DB1C5C", Offset = "0x1DB1C5C", VA = "0x1DB1C5C")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1DB18A8", Offset = "0x1DB18A8", VA = "0x1DB18A8")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1DB1CA4", Offset = "0x1DB1CA4", VA = "0x1DB1CA4")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1DB1CB0", Offset = "0x1DB1CB0", VA = "0x1DB1CB0")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1DB1CBC", Offset = "0x1DB1CBC", VA = "0x1DB1CBC")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1DB2098", Offset = "0x1DB2098", VA = "0x1DB2098", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1DB217C", Offset = "0x1DB217C", VA = "0x1DB217C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1DB2654", Offset = "0x1DB2654", VA = "0x1DB2654", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1DB2CD0", Offset = "0x1DB2CD0", VA = "0x1DB2CD0")]
		public void LogWarning(string message)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x17000109")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x1DB1EFC", Offset = "0x1DB1EFC", VA = "0x1DB1EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x1DB2D10", Offset = "0x1DB2D10", VA = "0x1DB2D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1DB15F0", Offset = "0x1DB15F0", VA = "0x1DB15F0")]
		public BipedIKSolvers()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1DB23DC", Offset = "0x1DB23DC", VA = "0x1DB23DC")]
		public void AssignReferences(BipedReferences references)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000157")]
	public abstract class Constraint
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x1700010B")]
		public bool isValid
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x1DB3400", Offset = "0x1DB3400", VA = "0x1DB3400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1DB33F8", Offset = "0x1DB33F8", VA = "0x1DB33F8")]
		protected Constraint()
		{
		}

		[Token(Token = "0x6000877")]
		public abstract void UpdateConstraint();
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1DB3474", Offset = "0x1DB3474", VA = "0x1DB3474")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1DB347C", Offset = "0x1DB347C", VA = "0x1DB347C")]
		public ConstraintPosition(Transform transform)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1DB34A8", Offset = "0x1DB34A8", VA = "0x1DB34A8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000159")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x1700010C")]
		private bool positionChanged
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x1DB3828", Offset = "0x1DB3828", VA = "0x1DB3828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1DB35D8", Offset = "0x1DB35D8", VA = "0x1DB35D8")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1DB35E0", Offset = "0x1DB35E0", VA = "0x1DB35E0")]
		public ConstraintPositionOffset(Transform transform)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1DB360C", Offset = "0x1DB360C", VA = "0x1DB360C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1DB38EC", Offset = "0x1DB38EC", VA = "0x1DB38EC")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1DB38F4", Offset = "0x1DB38F4", VA = "0x1DB38F4")]
		public ConstraintRotation(Transform transform)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1DB3920", Offset = "0x1DB3920", VA = "0x1DB3920", Slot = "4")]
		public override void UpdateConstraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x1700010D")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x1DB3CDC", Offset = "0x1DB3CDC", VA = "0x1DB3CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1DB3A78", Offset = "0x1DB3A78", VA = "0x1DB3A78")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1DB3A80", Offset = "0x1DB3A80", VA = "0x1DB3A80")]
		public ConstraintRotationOffset(Transform transform)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1DB3AAC", Offset = "0x1DB3AAC", VA = "0x1DB3AAC", Slot = "4")]
		public override void UpdateConstraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class Constraints
	{
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C3FC", Offset = "0xC6C3FC")]
		public float positionWeight;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C414", Offset = "0xC6C414")]
		public float rotationWeight;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1DB2D08", Offset = "0x1DB2D08", VA = "0x1DB2D08")]
		public Constraints()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1DB3DB4", Offset = "0x1DB3DB4", VA = "0x1DB3DB4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1DB25E4", Offset = "0x1DB25E4", VA = "0x1DB25E4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1DB28A4", Offset = "0x1DB28A4", VA = "0x1DB28A4")]
		public void Update()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x200015E")]
		public enum DOF
		{
			[Token(Token = "0x4000641")]
			One,
			[Token(Token = "0x4000642")]
			Three
		}

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C42C", Offset = "0xC6C42C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C42C", Offset = "0xC6C42C")]
		public float weight;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C480", Offset = "0xC6C480")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C480", Offset = "0xC6C480")]
		public float rotationWeight;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C4D4", Offset = "0xC6C4D4")]
		public DOF rotationDOF;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C50C", Offset = "0xC6C50C")]
		public Transform bone1;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C544", Offset = "0xC6C544")]
		public Transform bone2;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C57C", Offset = "0xC6C57C")]
		public Transform bone3;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C5B4", Offset = "0xC6C5B4")]
		public Transform tip;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C5EC", Offset = "0xC6C5EC")]
		public Transform target;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C624", Offset = "0xC6C624")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6C624", Offset = "0xC6C624")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x1700010E")]
		public bool initiated
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x1DBE50C", Offset = "0x1DBE50C", VA = "0x1DBE50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C660", Offset = "0xC6C660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x1DBE514", Offset = "0x1DBE514", VA = "0x1DBE514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C670", Offset = "0xC6C670")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x1DBE520", Offset = "0x1DBE520", VA = "0x1DBE520")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x1DBE54C", Offset = "0x1DBE54C", VA = "0x1DBE54C")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x1DBE594", Offset = "0x1DBE594", VA = "0x1DBE594")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x1DBE5C0", Offset = "0x1DBE5C0", VA = "0x1DBE5C0")]
			set
			{
			}
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1DBE4FC", Offset = "0x1DBE4FC", VA = "0x1DBE4FC")]
		public Finger()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1DBE60C", Offset = "0x1DBE60C", VA = "0x1DBE60C")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1DBE720", Offset = "0x1DBE720", VA = "0x1DBE720")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1DBEC18", Offset = "0x1DBEC18", VA = "0x1DBEC18")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1DBED40", Offset = "0x1DBED40", VA = "0x1DBED40")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1DBEE20", Offset = "0x1DBEE20", VA = "0x1DBEE20")]
		public void Update(float masterWeight)
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C680", Offset = "0xC6C680")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C680", Offset = "0xC6C680")]
		public float weight;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C6D4", Offset = "0xC6C6D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6C6D4", Offset = "0xC6C6D4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000111")]
		public bool initiated
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x1DBF328", Offset = "0x1DBF328", VA = "0x1DBF328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C710", Offset = "0xC6C710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x1DBF330", Offset = "0x1DBF330", VA = "0x1DBF330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C720", Offset = "0xC6C720")]
			private set
			{
			}
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1DBF2B4", Offset = "0x1DBF2B4", VA = "0x1DBF2B4")]
		public FingerRig()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1DBF33C", Offset = "0x1DBF33C", VA = "0x1DBF33C")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1DBF3C4", Offset = "0x1DBF3C4", VA = "0x1DBF3C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C730", Offset = "0xC6C730")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1DBF7F4", Offset = "0x1DBF7F4", VA = "0x1DBF7F4")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1DBF9E4", Offset = "0x1DBF9E4", VA = "0x1DBF9E4")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1DBF6C0", Offset = "0x1DBF6C0", VA = "0x1DBF6C0")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1DBFBD0", Offset = "0x1DBFBD0", VA = "0x1DBFBD0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1DBFCC0", Offset = "0x1DBFCC0", VA = "0x1DBFCC0")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1DBFD4C", Offset = "0x1DBFD4C", VA = "0x1DBFD4C")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1DBFDD0", Offset = "0x1DBFDD0", VA = "0x1DBFDD0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1DBFE48", Offset = "0x1DBFE48", VA = "0x1DBFE48", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1DBFE4C", Offset = "0x1DBFE4C", VA = "0x1DBFE4C", Slot = "6")]
		protected override void FixTransforms()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000161")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C768", Offset = "0xC6C768")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6C768", Offset = "0xC6C768")]
		public float weight;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C7BC", Offset = "0xC6C7BC")]
		public Grounding solver;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C7F4", Offset = "0xC6C7F4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6C7F4", Offset = "0xC6C7F4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000112")]
		public bool initiated
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x1DC1240", Offset = "0x1DC1240", VA = "0x1DC1240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C830", Offset = "0xC6C830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x1DC1248", Offset = "0x1DC1248", VA = "0x1DC1248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6C840", Offset = "0xC6C840")]
			protected set
			{
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1DC1120", Offset = "0x1DC1120", VA = "0x1DC1120")]
		protected Grounder()
		{
		}

		[Token(Token = "0x60008A5")]
		public abstract void ResetPosition();

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1DC1254", Offset = "0x1DC1254", VA = "0x1DC1254")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1DC159C", Offset = "0x1DC159C", VA = "0x1DC159C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1DC13D4", Offset = "0x1DC13D4", VA = "0x1DC13D4")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1DC15D4", Offset = "0x1DC15D4", VA = "0x1DC15D4")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008AC")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60008AD")]
		protected abstract void OpenScriptReference();
	}
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6C850", Offset = "0xC6C850")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6C850", Offset = "0xC6C850")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C8B0", Offset = "0xC6C8B0")]
		public BipedIK ik;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C8E8", Offset = "0xC6C8E8")]
		public float spineBend;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6C920", Offset = "0xC6C920")]
		public float spineSpeed;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1DC1CAC", Offset = "0x1DC1CAC", VA = "0x1DC1CAC")]
		public GrounderBipedIK()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1DC1D44", Offset = "0x1DC1D44", VA = "0x1DC1D44", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C958", Offset = "0xC6C958")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1DC1D94", Offset = "0x1DC1D94", VA = "0x1DC1D94", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6C990", Offset = "0xC6C990")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1DC1DE4", Offset = "0x1DC1DE4", VA = "0x1DC1DE4", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1DC1F0C", Offset = "0x1DC1F0C", VA = "0x1DC1F0C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1DC1FFC", Offset = "0x1DC1FFC", VA = "0x1DC1FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1DC20B4", Offset = "0x1DC20B4", VA = "0x1DC20B4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1DC2808", Offset = "0x1DC2808", VA = "0x1DC2808")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1DC287C", Offset = "0x1DC287C", VA = "0x1DC287C")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1DC3208", Offset = "0x1DC3208", VA = "0x1DC3208")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1DC33CC", Offset = "0x1DC33CC", VA = "0x1DC33CC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1DC3618", Offset = "0x1DC3618", VA = "0x1DC3618")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6C9C8", Offset = "0xC6C9C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6C9C8", Offset = "0xC6C9C8")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x2000164")]
		public class SpineEffector
		{
			[Token(Token = "0x400065B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CB78", Offset = "0xC6CB78")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400065C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CBB0", Offset = "0xC6CBB0")]
			public float horizontalWeight;

			[Token(Token = "0x400065D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CBE8", Offset = "0xC6CBE8")]
			public float verticalWeight;

			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x1DC49AC", Offset = "0x1DC49AC", VA = "0x1DC49AC")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x1DC49BC", Offset = "0x1DC49BC", VA = "0x1DC49BC")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CA28", Offset = "0xC6CA28")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CA60", Offset = "0xC6CA60")]
		public float spineBend;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CA98", Offset = "0xC6CA98")]
		public float spineSpeed;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1DC383C", Offset = "0x1DC383C", VA = "0x1DC383C")]
		public GrounderFBBIK()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1DC38D4", Offset = "0x1DC38D4", VA = "0x1DC38D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6CAD0", Offset = "0xC6CAD0")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1DC3924", Offset = "0x1DC3924", VA = "0x1DC3924", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6CB08", Offset = "0xC6CB08")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1DC3974", Offset = "0x1DC3974", VA = "0x1DC3974", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6CB40", Offset = "0xC6CB40")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1DC39C4", Offset = "0x1DC39C4", VA = "0x1DC39C4", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1DC3A4C", Offset = "0x1DC3A4C", VA = "0x1DC3A4C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1DC3AFC", Offset = "0x1DC3AFC", VA = "0x1DC3AFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1DC3EA8", Offset = "0x1DC3EA8", VA = "0x1DC3EA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1DC3EB4", Offset = "0x1DC3EB4", VA = "0x1DC3EB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1DC3BBC", Offset = "0x1DC3BBC", VA = "0x1DC3BBC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1DC3EC0", Offset = "0x1DC3EC0", VA = "0x1DC3EC0")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1DC44A0", Offset = "0x1DC44A0", VA = "0x1DC44A0")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1DC4704", Offset = "0x1DC4704", VA = "0x1DC4704")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1DC4850", Offset = "0x1DC4850", VA = "0x1DC4850")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6CC20", Offset = "0xC6CC20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6CC20", Offset = "0xC6CC20")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CC80", Offset = "0xC6CC80")]
		public Transform pelvis;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CCB8", Offset = "0xC6CCB8")]
		public Transform characterRoot;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CCF0", Offset = "0xC6CCF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6CCF0", Offset = "0xC6CCF0")]
		public float rootRotationWeight;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CD44", Offset = "0xC6CD44")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CD7C", Offset = "0xC6CD7C")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1DC4A04", Offset = "0x1DC4A04", VA = "0x1DC4A04")]
		public GrounderIK()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1DC4A9C", Offset = "0x1DC4A9C", VA = "0x1DC4A9C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6CDB4", Offset = "0xC6CDB4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1DC4AEC", Offset = "0x1DC4AEC", VA = "0x1DC4AEC", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6CDEC", Offset = "0xC6CDEC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1DC4B3C", Offset = "0x1DC4B3C", VA = "0x1DC4B3C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1DC4B64", Offset = "0x1DC4B64", VA = "0x1DC4B64")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1DC4D6C", Offset = "0x1DC4D6C", VA = "0x1DC4D6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1DC4EA8", Offset = "0x1DC4EA8", VA = "0x1DC4EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1DC5728", Offset = "0x1DC5728", VA = "0x1DC5728")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1DC5CF8", Offset = "0x1DC5CF8", VA = "0x1DC5CF8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1DC5FC0", Offset = "0x1DC5FC0", VA = "0x1DC5FC0")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1DC6494", Offset = "0x1DC6494", VA = "0x1DC6494")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1DC66EC", Offset = "0x1DC66EC", VA = "0x1DC66EC")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6CE24", Offset = "0xC6CE24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6CE24", Offset = "0xC6CE24")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x2000167")]
		public struct Foot
		{
			[Token(Token = "0x4000689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x1DC9500", Offset = "0x1DC9500", VA = "0x1DC9500")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CE84", Offset = "0xC6CE84")]
		public Grounding forelegSolver;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CEBC", Offset = "0xC6CEBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6CEBC", Offset = "0xC6CEBC")]
		public float rootRotationWeight;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CF10", Offset = "0xC6CF10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6CF10", Offset = "0xC6CF10")]
		public float minRootRotation;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CF68", Offset = "0xC6CF68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6CF68", Offset = "0xC6CF68")]
		public float maxRootRotation;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CFC0", Offset = "0xC6CFC0")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6CFF8", Offset = "0xC6CFF8")]
		public float maxLegOffset;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D030", Offset = "0xC6D030")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D068", Offset = "0xC6D068")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6D068", Offset = "0xC6D068")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D0BC", Offset = "0xC6D0BC")]
		public Transform characterRoot;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D0F4", Offset = "0xC6D0F4")]
		public Transform pelvis;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D12C", Offset = "0xC6D12C")]
		public Transform lastSpineBone;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D164", Offset = "0xC6D164")]
		public Transform head;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1DC6964", Offset = "0x1DC6964", VA = "0x1DC6964")]
		public GrounderQuadruped()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1DC6A94", Offset = "0x1DC6A94", VA = "0x1DC6A94", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6D1AC", Offset = "0xC6D1AC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1DC6AE4", Offset = "0x1DC6AE4", VA = "0x1DC6AE4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6D1E4", Offset = "0xC6D1E4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1DC6B34", Offset = "0x1DC6B34", VA = "0x1DC6B34", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1DC6B74", Offset = "0x1DC6B74", VA = "0x1DC6B74")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1DC6CC0", Offset = "0x1DC6CC0", VA = "0x1DC6CC0")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1DC6E7C", Offset = "0x1DC6E7C", VA = "0x1DC6E7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1DC6F48", Offset = "0x1DC6F48", VA = "0x1DC6F48")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1DC7004", Offset = "0x1DC7004", VA = "0x1DC7004")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1DC73BC", Offset = "0x1DC73BC", VA = "0x1DC73BC")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1DC784C", Offset = "0x1DC784C", VA = "0x1DC784C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1DC79C4", Offset = "0x1DC79C4", VA = "0x1DC79C4")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1DC7F50", Offset = "0x1DC7F50", VA = "0x1DC7F50")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1DC8944", Offset = "0x1DC8944", VA = "0x1DC8944")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1DC8CA4", Offset = "0x1DC8CA4", VA = "0x1DC8CA4")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1DC8E30", Offset = "0x1DC8E30", VA = "0x1DC8E30")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1DC9208", Offset = "0x1DC9208", VA = "0x1DC9208")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1DC924C", Offset = "0x1DC924C", VA = "0x1DC924C")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}
	}
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6D21C", Offset = "0xC6D21C")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D254", Offset = "0xC6D254")]
		public VRIK ik;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1DC9508", Offset = "0x1DC9508", VA = "0x1DC9508")]
		public GrounderVRIK()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1DC9570", Offset = "0x1DC9570", VA = "0x1DC9570")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6D28C", Offset = "0xC6D28C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1DC9574", Offset = "0x1DC9574", VA = "0x1DC9574", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6D2C4", Offset = "0xC6D2C4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1DC9578", Offset = "0x1DC9578", VA = "0x1DC9578", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6D2FC", Offset = "0xC6D2FC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1DC957C", Offset = "0x1DC957C", VA = "0x1DC957C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1DC95A4", Offset = "0x1DC95A4", VA = "0x1DC95A4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1DC9654", Offset = "0x1DC9654", VA = "0x1DC9654")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1DC970C", Offset = "0x1DC970C", VA = "0x1DC970C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1DC9A04", Offset = "0x1DC9A04", VA = "0x1DC9A04")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1DC9D88", Offset = "0x1DC9D88", VA = "0x1DC9D88")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1DC9EBC", Offset = "0x1DC9EBC", VA = "0x1DC9EBC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1DCA1B4", Offset = "0x1DCA1B4", VA = "0x1DCA1B4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1DCA300", Offset = "0x1DCA300", VA = "0x1DCA300")]
		private void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x200016A")]
		public enum Quality
		{
			[Token(Token = "0x40006A8")]
			Fastest,
			[Token(Token = "0x40006A9")]
			Simple,
			[Token(Token = "0x40006AA")]
			Best
		}

		[Token(Token = "0x200016B")]
		public class Leg
		{
			[Token(Token = "0x40006AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D95C", Offset = "0xC6D95C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D95C", Offset = "0xC6D95C")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x40006AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D998", Offset = "0xC6D998")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D998", Offset = "0xC6D998")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x40006AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x40006AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D9D4", Offset = "0xC6D9D4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D9D4", Offset = "0xC6D9D4")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x40006AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DA10", Offset = "0xC6DA10")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DA10", Offset = "0xC6DA10")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x40006B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DA4C", Offset = "0xC6DA4C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DA4C", Offset = "0xC6DA4C")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x40006B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DA88", Offset = "0xC6DA88")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DA88", Offset = "0xC6DA88")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40006B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DAC4", Offset = "0xC6DAC4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DAC4", Offset = "0xC6DAC4")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x40006B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x40006B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Grounding grounding;

			[Token(Token = "0x40006B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float lastTime;

			[Token(Token = "0x40006B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float deltaTime;

			[Token(Token = "0x40006B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 lastPosition;

			[Token(Token = "0x40006B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion toHitNormal;

			[Token(Token = "0x40006B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Quaternion r;

			[Token(Token = "0x40006BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private RaycastHit heelHit;

			[Token(Token = "0x40006BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private Vector3 up;

			[Token(Token = "0x1700011B")]
			public bool isGrounded
			{
				[Token(Token = "0x6000913")]
				[Address(RVA = "0x1DCB700", Offset = "0x1DCB700", VA = "0x1DCB700")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB00", Offset = "0xC6DB00")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000914")]
				[Address(RVA = "0x1DCBFF0", Offset = "0x1DCBFF0", VA = "0x1DCBFF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB10", Offset = "0xC6DB10")]
				private set
				{
				}
			}

			[Token(Token = "0x1700011C")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6000915")]
				[Address(RVA = "0x1DC182C", Offset = "0x1DC182C", VA = "0x1DC182C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB20", Offset = "0xC6DB20")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000916")]
				[Address(RVA = "0x1DCBFFC", Offset = "0x1DCBFFC", VA = "0x1DCBFFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB30", Offset = "0xC6DB30")]
				private set
				{
				}
			}

			[Token(Token = "0x1700011D")]
			public bool initiated
			{
				[Token(Token = "0x6000917")]
				[Address(RVA = "0x1DCC008", Offset = "0x1DCC008", VA = "0x1DCC008")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB40", Offset = "0xC6DB40")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000918")]
				[Address(RVA = "0x1DCC010", Offset = "0x1DCC010", VA = "0x1DCC010")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB50", Offset = "0xC6DB50")]
				private set
				{
				}
			}

			[Token(Token = "0x1700011E")]
			public float heightFromGround
			{
				[Token(Token = "0x6000919")]
				[Address(RVA = "0x1DCC01C", Offset = "0x1DCC01C", VA = "0x1DCC01C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB60", Offset = "0xC6DB60")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600091A")]
				[Address(RVA = "0x1DCC024", Offset = "0x1DCC024", VA = "0x1DCC024")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB70", Offset = "0xC6DB70")]
				private set
				{
				}
			}

			[Token(Token = "0x1700011F")]
			public Vector3 velocity
			{
				[Token(Token = "0x600091B")]
				[Address(RVA = "0x1DCC02C", Offset = "0x1DCC02C", VA = "0x1DCC02C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB80", Offset = "0xC6DB80")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600091C")]
				[Address(RVA = "0x1DCC038", Offset = "0x1DCC038", VA = "0x1DCC038")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DB90", Offset = "0xC6DB90")]
				private set
				{
				}
			}

			[Token(Token = "0x17000120")]
			public Transform transform
			{
				[Token(Token = "0x600091D")]
				[Address(RVA = "0x1DC1838", Offset = "0x1DC1838", VA = "0x1DC1838")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DBA0", Offset = "0xC6DBA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600091E")]
				[Address(RVA = "0x1DCC044", Offset = "0x1DCC044", VA = "0x1DCC044")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DBB0", Offset = "0xC6DBB0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000121")]
			public float IKOffset
			{
				[Token(Token = "0x600091F")]
				[Address(RVA = "0x1DCB6F8", Offset = "0x1DCB6F8", VA = "0x1DCB6F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DBC0", Offset = "0xC6DBC0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000920")]
				[Address(RVA = "0x1DCC04C", Offset = "0x1DCC04C", VA = "0x1DCC04C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DBD0", Offset = "0xC6DBD0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000122")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6000925")]
				[Address(RVA = "0x1DCCCD8", Offset = "0x1DCCCD8", VA = "0x1DCCCD8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000123")]
			private float rootYOffset
			{
				[Token(Token = "0x600092E")]
				[Address(RVA = "0x1DCD040", Offset = "0x1DCD040", VA = "0x1DCD040")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000912")]
			[Address(RVA = "0x1DCAAD0", Offset = "0x1DCAAD0", VA = "0x1DCAAD0")]
			public Leg()
			{
			}

			[Token(Token = "0x6000921")]
			[Address(RVA = "0x1DCAB88", Offset = "0x1DCAB88", VA = "0x1DCAB88")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6000922")]
			[Address(RVA = "0x1DCC054", Offset = "0x1DCC054", VA = "0x1DCC054")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000923")]
			[Address(RVA = "0x1DCBAB8", Offset = "0x1DCBAB8", VA = "0x1DCBAB8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000924")]
			[Address(RVA = "0x1DCAC98", Offset = "0x1DCAC98", VA = "0x1DCAC98")]
			public void Process()
			{
			}

			[Token(Token = "0x6000926")]
			[Address(RVA = "0x1DCC7DC", Offset = "0x1DCC7DC", VA = "0x1DCC7DC")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0x1DCC0A8", Offset = "0x1DCC0A8", VA = "0x1DCC0A8")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000928")]
			[Address(RVA = "0x1DCCE8C", Offset = "0x1DCCE8C", VA = "0x1DCCE8C")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000929")]
			[Address(RVA = "0x1DCC454", Offset = "0x1DCC454", VA = "0x1DCC454")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x600092A")]
			[Address(RVA = "0x1DCC560", Offset = "0x1DCC560", VA = "0x1DCC560")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x600092B")]
			[Address(RVA = "0x1DCCF98", Offset = "0x1DCCF98", VA = "0x1DCCF98")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x600092C")]
			[Address(RVA = "0x1DCCD84", Offset = "0x1DCCD84", VA = "0x1DCCD84")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x600092D")]
			[Address(RVA = "0x1DCD1A8", Offset = "0x1DCD1A8", VA = "0x1DCD1A8")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x200016C")]
		public class Pelvis
		{
			[Token(Token = "0x40006BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DBE0", Offset = "0xC6DBE0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DBE0", Offset = "0xC6DBE0")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x40006BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DC1C", Offset = "0xC6DC1C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6DC1C", Offset = "0xC6DC1C")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x40006BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x40006BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x40006C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x40006C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x40006C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000124")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6000930")]
				[Address(RVA = "0x1DC31FC", Offset = "0x1DC31FC", VA = "0x1DC31FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DC58", Offset = "0xC6DC58")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000931")]
				[Address(RVA = "0x1DCD308", Offset = "0x1DCD308", VA = "0x1DCD308")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DC68", Offset = "0xC6DC68")]
				private set
				{
				}
			}

			[Token(Token = "0x17000125")]
			public float heightOffset
			{
				[Token(Token = "0x6000932")]
				[Address(RVA = "0x1DC8C9C", Offset = "0x1DC8C9C", VA = "0x1DC8C9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DC78", Offset = "0xC6DC78")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000933")]
				[Address(RVA = "0x1DCD314", Offset = "0x1DCD314", VA = "0x1DCD314")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6DC88", Offset = "0xC6DC88")]
				private set
				{
				}
			}

			[Token(Token = "0x600092F")]
			[Address(RVA = "0x1DCAB80", Offset = "0x1DCAB80", VA = "0x1DCAB80")]
			public Pelvis()
			{
			}

			[Token(Token = "0x6000934")]
			[Address(RVA = "0x1DCAC74", Offset = "0x1DCAC74", VA = "0x1DCAC74")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6000935")]
			[Address(RVA = "0x1DCB9EC", Offset = "0x1DCB9EC", VA = "0x1DCB9EC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000936")]
			[Address(RVA = "0x1DCD31C", Offset = "0x1DCD31C", VA = "0x1DCD31C")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000937")]
			[Address(RVA = "0x1DCB708", Offset = "0x1DCB708", VA = "0x1DCB708")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}
		}

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D334", Offset = "0xC6D334")]
		public LayerMask layers;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D36C", Offset = "0xC6D36C")]
		public float maxStep;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D3A4", Offset = "0xC6D3A4")]
		public float heightOffset;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D3DC", Offset = "0xC6D3DC")]
		public float footSpeed;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D414", Offset = "0xC6D414")]
		public float footRadius;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D44C", Offset = "0xC6D44C")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D498", Offset = "0xC6D498")]
		public float prediction;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D4D0", Offset = "0xC6D4D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6D4D0", Offset = "0xC6D4D0")]
		public float footRotationWeight;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D524", Offset = "0xC6D524")]
		public float footRotationSpeed;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D55C", Offset = "0xC6D55C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6D55C", Offset = "0xC6D55C")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D5B4", Offset = "0xC6D5B4")]
		public bool rotateSolver;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D5EC", Offset = "0xC6D5EC")]
		public float pelvisSpeed;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D624", Offset = "0xC6D624")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6D624", Offset = "0xC6D624")]
		public float pelvisDamper;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D678", Offset = "0xC6D678")]
		public float lowerPelvisWeight;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D6B0", Offset = "0xC6D6B0")]
		public float liftPelvisWeight;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D6E8", Offset = "0xC6D6E8")]
		public float rootSphereCastRadius;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D720", Offset = "0xC6D720")]
		public bool overstepFallsDown;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6D758", Offset = "0xC6D758")]
		public Quality quality;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D790", Offset = "0xC6D790")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D790", Offset = "0xC6D790")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D7CC", Offset = "0xC6D7CC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D7CC", Offset = "0xC6D7CC")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D808", Offset = "0xC6D808")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D808", Offset = "0xC6D808")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D844", Offset = "0xC6D844")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D844", Offset = "0xC6D844")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D880", Offset = "0xC6D880")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6D880", Offset = "0xC6D880")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool initiated;

		[Token(Token = "0x17000113")]
		public Leg[] legs
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x1DC13CC", Offset = "0x1DC13CC", VA = "0x1DC13CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D8BC", Offset = "0xC6D8BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x1DCA50C", Offset = "0x1DCA50C", VA = "0x1DCA50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D8CC", Offset = "0xC6D8CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public Pelvis pelvis
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x1DC31F4", Offset = "0x1DC31F4", VA = "0x1DC31F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D8DC", Offset = "0xC6D8DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x1DCA514", Offset = "0x1DCA514", VA = "0x1DCA514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D8EC", Offset = "0xC6D8EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool isGrounded
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x1DCA51C", Offset = "0x1DCA51C", VA = "0x1DCA51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D8FC", Offset = "0xC6D8FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x1DCA524", Offset = "0x1DCA524", VA = "0x1DCA524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D90C", Offset = "0xC6D90C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public Transform root
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x1DC1824", Offset = "0x1DC1824", VA = "0x1DC1824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D91C", Offset = "0xC6D91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x1DCA530", Offset = "0x1DCA530", VA = "0x1DCA530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D92C", Offset = "0xC6D92C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x1DC7F34", Offset = "0x1DC7F34", VA = "0x1DC7F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D93C", Offset = "0xC6D93C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x1DCA538", Offset = "0x1DCA538", VA = "0x1DCA538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6D94C", Offset = "0xC6D94C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x1DCA550", Offset = "0x1DCA550", VA = "0x1DCA550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public Vector3 up
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x1DC3338", Offset = "0x1DC3338", VA = "0x1DC3338")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011A")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x1DCBB80", Offset = "0x1DCBB80", VA = "0x1DCBB80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1DC11E4", Offset = "0x1DC11E4", VA = "0x1DC11E4")]
		public Grounding()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1DCA5A8", Offset = "0x1DCA5A8", VA = "0x1DCA5A8")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1DCA9F0", Offset = "0x1DCA9F0", VA = "0x1DCA9F0")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1DC24E0", Offset = "0x1DC24E0", VA = "0x1DC24E0")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1DC2F3C", Offset = "0x1DC2F3C", VA = "0x1DC2F3C")]
		public void Update()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1DC54B4", Offset = "0x1DC54B4", VA = "0x1DC54B4")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1DC1E6C", Offset = "0x1DC1E6C", VA = "0x1DC1E6C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1DCAC84", Offset = "0x1DCAC84", VA = "0x1DCAC84")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1DCBC5C", Offset = "0x1DCBC5C", VA = "0x1DCBC5C")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1DCBDD4", Offset = "0x1DCBDD4", VA = "0x1DCBDD4")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1DCBEE8", Offset = "0x1DCBEE8", VA = "0x1DCBEE8")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6DC98", Offset = "0xC6DC98")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6DC98", Offset = "0xC6DC98")]
	public class AimIK : IK
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1DB04C0", Offset = "0x1DB04C0", VA = "0x1DB04C0")]
		public AimIK()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1DB0530", Offset = "0x1DB0530", VA = "0x1DB0530", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DCF8", Offset = "0xC6DCF8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1DB0580", Offset = "0x1DB0580", VA = "0x1DB0580", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DD30", Offset = "0xC6DD30")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1DB05D0", Offset = "0x1DB05D0", VA = "0x1DB05D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DD68", Offset = "0xC6DD68")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1DB0620", Offset = "0x1DB0620", VA = "0x1DB0620")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DDA0", Offset = "0xC6DDA0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1DB0670", Offset = "0x1DB0670", VA = "0x1DB0670")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DDD8", Offset = "0xC6DDD8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1DB06C0", Offset = "0x1DB06C0", VA = "0x1DB06C0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6DE10", Offset = "0xC6DE10")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x1DB137C", Offset = "0x1DB137C", VA = "0x1DB137C")]
		public ArmIK()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1DB13E4", Offset = "0x1DB13E4", VA = "0x1DB13E4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DE48", Offset = "0xC6DE48")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1DB1454", Offset = "0x1DB1454", VA = "0x1DB1454", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DE80", Offset = "0xC6DE80")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1DB14C4", Offset = "0x1DB14C4", VA = "0x1DB14C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DEB8", Offset = "0xC6DEB8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1DB1514", Offset = "0x1DB1514", VA = "0x1DB1514")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DEF0", Offset = "0xC6DEF0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1DB1564", Offset = "0x1DB1564", VA = "0x1DB1564", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6DF28", Offset = "0xC6DF28")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6DF28", Offset = "0xC6DF28")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1DB3248", Offset = "0x1DB3248", VA = "0x1DB3248")]
		public CCDIK()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1DB32B0", Offset = "0x1DB32B0", VA = "0x1DB32B0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DF88", Offset = "0xC6DF88")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1DB3300", Offset = "0x1DB3300", VA = "0x1DB3300", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DFC0", Offset = "0xC6DFC0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1DB3350", Offset = "0x1DB3350", VA = "0x1DB3350")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6DFF8", Offset = "0xC6DFF8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1DB33A0", Offset = "0x1DB33A0", VA = "0x1DB33A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E030", Offset = "0xC6E030")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1DB33F0", Offset = "0x1DB33F0", VA = "0x1DB33F0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E068", Offset = "0xC6E068")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E068", Offset = "0xC6E068")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1DB3E28", Offset = "0x1DB3E28", VA = "0x1DB3E28")]
		public FABRIK()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1DB3E90", Offset = "0x1DB3E90", VA = "0x1DB3E90", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E0C8", Offset = "0xC6E0C8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1DB3EE0", Offset = "0x1DB3EE0", VA = "0x1DB3EE0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E100", Offset = "0xC6E100")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1DB3F30", Offset = "0x1DB3F30", VA = "0x1DB3F30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E138", Offset = "0xC6E138")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1DB3F80", Offset = "0x1DB3F80", VA = "0x1DB3F80")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E170", Offset = "0xC6E170")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1DB3FD0", Offset = "0x1DB3FD0", VA = "0x1DB3FD0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E1A8", Offset = "0xC6E1A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E1A8", Offset = "0xC6E1A8")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1DB4844", Offset = "0x1DB4844", VA = "0x1DB4844")]
		public FABRIKRoot()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1DB48AC", Offset = "0x1DB48AC", VA = "0x1DB48AC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E208", Offset = "0xC6E208")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1DB48FC", Offset = "0x1DB48FC", VA = "0x1DB48FC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E240", Offset = "0xC6E240")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1DB494C", Offset = "0x1DB494C", VA = "0x1DB494C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E278", Offset = "0xC6E278")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1DB499C", Offset = "0x1DB499C", VA = "0x1DB499C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E2B0", Offset = "0xC6E2B0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1DB49EC", Offset = "0x1DB49EC", VA = "0x1DB49EC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E2E8", Offset = "0xC6E2E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E2E8", Offset = "0xC6E2E8")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1DBFE60", Offset = "0x1DBFE60", VA = "0x1DBFE60")]
		public FullBodyBipedIK()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1DBFEE8", Offset = "0x1DBFEE8", VA = "0x1DBFEE8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E348", Offset = "0xC6E348")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1DBFF38", Offset = "0x1DBFF38", VA = "0x1DBFF38", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E380", Offset = "0xC6E380")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1DBFF88", Offset = "0x1DBFF88", VA = "0x1DBFF88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E3B8", Offset = "0xC6E3B8")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1DBFFD8", Offset = "0x1DBFFD8", VA = "0x1DBFFD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E3F0", Offset = "0xC6E3F0")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1DC0028", Offset = "0x1DC0028", VA = "0x1DC0028")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E428", Offset = "0xC6E428")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1DC0078", Offset = "0x1DC0078", VA = "0x1DC0078")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E460", Offset = "0xC6E460")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1DC00C8", Offset = "0x1DC00C8", VA = "0x1DC00C8")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1DC0110", Offset = "0x1DC0110", VA = "0x1DC0110", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1DC0118", Offset = "0x1DC0118", VA = "0x1DC0118")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1DC0334", Offset = "0x1DC0334", VA = "0x1DC0334")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1DC0704", Offset = "0x1DC0704", VA = "0x1DC0704")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E498", Offset = "0xC6E498")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1DC0740", Offset = "0x1DC0740", VA = "0x1DC0740")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E4D0", Offset = "0xC6E4D0")]
		private void AutoDetectReferences()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1DB0528", Offset = "0x1DB0528", VA = "0x1DB0528")]
		protected IK()
		{
		}

		[Token(Token = "0x6000965")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1DD05F8", Offset = "0x1DD05F8", VA = "0x1DD05F8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1DD06AC", Offset = "0x1DD06AC", VA = "0x1DD06AC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1DD0738", Offset = "0x1DD0738", VA = "0x1DD0738", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000969")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x600096A")]
		protected abstract void OpenScriptReference();
	}
	[Token(Token = "0x2000174")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6E508", Offset = "0xC6E508")]
		public IK[] IKComponents;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6E540", Offset = "0xC6E540")]
		public Animator animator;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000126")]
		private bool animatePhysics
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x1DD3520", Offset = "0x1DD3520", VA = "0x1DD3520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1DD3518", Offset = "0x1DD3518", VA = "0x1DD3518")]
		public IKExecutionOrder()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1DD35C8", Offset = "0x1DD35C8", VA = "0x1DD35C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1DD365C", Offset = "0x1DD365C", VA = "0x1DD365C")]
		private void Update()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1DD3780", Offset = "0x1DD3780", VA = "0x1DD3780")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1DD37BC", Offset = "0x1DD37BC", VA = "0x1DD37BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1DD3694", Offset = "0x1DD3694", VA = "0x1DD3694")]
		private void FixTransforms()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E578", Offset = "0xC6E578")]
	public class LegIK : IK
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1C15CD0", Offset = "0x1C15CD0", VA = "0x1C15CD0")]
		public LegIK()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1C15D38", Offset = "0x1C15D38", VA = "0x1C15D38", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E5B0", Offset = "0xC6E5B0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1C15DA8", Offset = "0x1C15DA8", VA = "0x1C15DA8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E5E8", Offset = "0xC6E5E8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1C15E18", Offset = "0x1C15E18", VA = "0x1C15E18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E620", Offset = "0xC6E620")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1C15E68", Offset = "0x1C15E68", VA = "0x1C15E68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E658", Offset = "0xC6E658")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1C15EB8", Offset = "0x1C15EB8", VA = "0x1C15EB8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E690", Offset = "0xC6E690")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E690", Offset = "0xC6E690")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1C15EC0", Offset = "0x1C15EC0", VA = "0x1C15EC0")]
		public LimbIK()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1C15F28", Offset = "0x1C15F28", VA = "0x1C15F28", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E6F0", Offset = "0xC6E6F0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1C15F78", Offset = "0x1C15F78", VA = "0x1C15F78", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E728", Offset = "0xC6E728")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1C15FC8", Offset = "0x1C15FC8", VA = "0x1C15FC8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E760", Offset = "0xC6E760")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x1C16018", Offset = "0x1C16018", VA = "0x1C16018")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E798", Offset = "0xC6E798")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x1C16068", Offset = "0x1C16068", VA = "0x1C16068", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E7D0", Offset = "0xC6E7D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E7D0", Offset = "0xC6E7D0")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1C170F8", Offset = "0x1C170F8", VA = "0x1C170F8")]
		public LookAtIK()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1C17160", Offset = "0x1C17160", VA = "0x1C17160", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E830", Offset = "0xC6E830")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1C171B0", Offset = "0x1C171B0", VA = "0x1C171B0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E868", Offset = "0xC6E868")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1C17200", Offset = "0x1C17200", VA = "0x1C17200")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E8A0", Offset = "0xC6E8A0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1C17250", Offset = "0x1C17250", VA = "0x1C17250")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E8D8", Offset = "0xC6E8D8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1C172A0", Offset = "0x1C172A0", VA = "0x1C172A0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC6E910", Offset = "0xC6E910")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6E910", Offset = "0xC6E910")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1C21304", Offset = "0x1C21304", VA = "0x1C21304")]
		public TrigonometricIK()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1C2136C", Offset = "0x1C2136C", VA = "0x1C2136C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E970", Offset = "0xC6E970")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1C213BC", Offset = "0x1C213BC", VA = "0x1C213BC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E9A8", Offset = "0xC6E9A8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1C2140C", Offset = "0x1C2140C", VA = "0x1C2140C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6E9E0", Offset = "0xC6E9E0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1C2145C", Offset = "0x1C2145C", VA = "0x1C2145C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EA18", Offset = "0xC6EA18")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1C214AC", Offset = "0x1C214AC", VA = "0x1C214AC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC6EA50", Offset = "0xC6EA50")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x200017A")]
		public class References
		{
			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x40006D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x40006D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EC54", Offset = "0xC6EC54")]
			public Transform chest;

			[Token(Token = "0x40006D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EC8C", Offset = "0xC6EC8C")]
			public Transform neck;

			[Token(Token = "0x40006D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x40006D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ECC4", Offset = "0xC6ECC4")]
			public Transform leftShoulder;

			[Token(Token = "0x40006DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x40006DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x40006DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x40006DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ECFC", Offset = "0xC6ECFC")]
			public Transform rightShoulder;

			[Token(Token = "0x40006DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x40006DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x40006E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ED34", Offset = "0xC6ED34")]
			public Transform leftThigh;

			[Token(Token = "0x40006E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6ED6C", Offset = "0xC6ED6C")]
			public Transform leftCalf;

			[Token(Token = "0x40006E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EDA4", Offset = "0xC6EDA4")]
			public Transform leftFoot;

			[Token(Token = "0x40006E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EDDC", Offset = "0xC6EDDC")]
			public Transform leftToes;

			[Token(Token = "0x40006E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EE14", Offset = "0xC6EE14")]
			public Transform rightThigh;

			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EE4C", Offset = "0xC6EE4C")]
			public Transform rightCalf;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EE84", Offset = "0xC6EE84")]
			public Transform rightFoot;

			[Token(Token = "0x40006E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EEBC", Offset = "0xC6EEBC")]
			public Transform rightToes;

			[Token(Token = "0x17000127")]
			public bool isFilled
			{
				[Token(Token = "0x6000995")]
				[Address(RVA = "0x1C22E64", Offset = "0x1C22E64", VA = "0x1C22E64")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000128")]
			public bool isEmpty
			{
				[Token(Token = "0x6000996")]
				[Address(RVA = "0x1C2293C", Offset = "0x1C2293C", VA = "0x1C2293C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000993")]
			[Address(RVA = "0x1C22230", Offset = "0x1C22230", VA = "0x1C22230")]
			public References()
			{
			}

			[Token(Token = "0x6000994")]
			[Address(RVA = "0x1C23514", Offset = "0x1C23514", VA = "0x1C23514")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6000997")]
			[Address(RVA = "0x1C22394", Offset = "0x1C22394", VA = "0x1C22394")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xC6EA88", Offset = "0xC6EA88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EA88", Offset = "0xC6EA88")]
		public References references;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EB04", Offset = "0xC6EB04")]
		public IKSolverVR solver;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1C221A8", Offset = "0x1C221A8", VA = "0x1C221A8")]
		public VRIK()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1C22238", Offset = "0x1C22238", VA = "0x1C22238", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EB3C", Offset = "0xC6EB3C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1C222A8", Offset = "0x1C222A8", VA = "0x1C222A8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EB74", Offset = "0xC6EB74")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x1C22318", Offset = "0x1C22318", VA = "0x1C22318")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EBAC", Offset = "0xC6EBAC")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1C22368", Offset = "0x1C22368", VA = "0x1C22368")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EBE4", Offset = "0xC6EBE4")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1C2286C", Offset = "0x1C2286C", VA = "0x1C2286C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC6EC1C", Offset = "0xC6EC1C")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1C228A0", Offset = "0x1C228A0", VA = "0x1C228A0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1C228A8", Offset = "0x1C228A8", VA = "0x1C228A8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1C23380", Offset = "0x1C23380", VA = "0x1C23380", Slot = "5")]
		protected override void UpdateSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class FABRIKChain
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6EEF4", Offset = "0xC6EEF4")]
		public float pull;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6EF0C", Offset = "0xC6EF0C")]
		public float pin;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1DB3FD8", Offset = "0x1DB3FD8", VA = "0x1DB3FD8")]
		public FABRIKChain()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1DB404C", Offset = "0x1DB404C", VA = "0x1DB404C")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1DB4120", Offset = "0x1DB4120", VA = "0x1DB4120")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1DB4150", Offset = "0x1DB4150", VA = "0x1DB4150")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1DB467C", Offset = "0x1DB467C", VA = "0x1DB467C")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x1DB42B8", Offset = "0x1DB42B8", VA = "0x1DB42B8")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200017C")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1DB49F4", Offset = "0x1DB49F4", VA = "0x1DB49F4")]
		public FBBIKArmBending()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x1DB49FC", Offset = "0x1DB49FC", VA = "0x1DB49FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x1DB512C", Offset = "0x1DB512C", VA = "0x1DB512C")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1DB53D0", Offset = "0x1DB53D0", VA = "0x1DB53D0")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200017E")]
		public class BendBone
		{
			[Token(Token = "0x4000723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F564", Offset = "0xC6F564")]
			public Transform transform;

			[Token(Token = "0x4000724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F59C", Offset = "0xC6F59C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F59C", Offset = "0xC6F59C")]
			public float weight;

			[Token(Token = "0x4000725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x1DB95C8", Offset = "0x1DB95C8", VA = "0x1DB95C8")]
			public BendBone()
			{
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x1DB964C", Offset = "0x1DB964C", VA = "0x1DB964C")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1DB6298", Offset = "0x1DB6298", VA = "0x1DB6298")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1DB680C", Offset = "0x1DB680C", VA = "0x1DB680C")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EF24", Offset = "0xC6EF24")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xC6EF5C", Offset = "0xC6EF5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EF5C", Offset = "0xC6EF5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6EF5C", Offset = "0xC6EF5C")]
		public float positionWeight;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6EFD4", Offset = "0xC6EFD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6EFD4", Offset = "0xC6EFD4")]
		public float bodyWeight;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F028", Offset = "0xC6F028")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F028", Offset = "0xC6F028")]
		public float thighWeight;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F07C", Offset = "0xC6F07C")]
		public bool handsPullBody;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xC6F0B4", Offset = "0xC6F0B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F0B4", Offset = "0xC6F0B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F0B4", Offset = "0xC6F0B4")]
		public float rotationWeight;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F12C", Offset = "0xC6F12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F12C", Offset = "0xC6F12C")]
		public float bodyClampWeight;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F180", Offset = "0xC6F180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F180", Offset = "0xC6F180")]
		public float headClampWeight;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F1D4", Offset = "0xC6F1D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F1D4", Offset = "0xC6F1D4")]
		public float bendWeight;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F228", Offset = "0xC6F228")]
		public BendBone[] bendBones;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xC6F260", Offset = "0xC6F260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F260", Offset = "0xC6F260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F260", Offset = "0xC6F260")]
		public float CCDWeight;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F2D8", Offset = "0xC6F2D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F2D8", Offset = "0xC6F2D8")]
		public float roll;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F32C", Offset = "0xC6F32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F32C", Offset = "0xC6F32C")]
		public float damper;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F384", Offset = "0xC6F384")]
		public Transform[] CCDBones;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xC6F3BC", Offset = "0xC6F3BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F3BC", Offset = "0xC6F3BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F3BC", Offset = "0xC6F3BC")]
		public float postStretchWeight;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F434", Offset = "0xC6F434")]
		public float maxStretch;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F46C", Offset = "0xC6F46C")]
		public float stretchDamper;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F4A4", Offset = "0xC6F4A4")]
		public bool fixHead;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F4DC", Offset = "0xC6F4DC")]
		public Transform[] stretchBones;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xC6F514", Offset = "0xC6F514")]
		public Vector3 chestDirection;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F54C", Offset = "0xC6F54C")]
		public float chestDirectionWeight;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1DB5524", Offset = "0x1DB5524", VA = "0x1DB5524")]
		public FBBIKHeadEffector()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1DB5708", Offset = "0x1DB5708", VA = "0x1DB5708")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1DB5C00", Offset = "0x1DB5C00", VA = "0x1DB5C00")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1DB62D4", Offset = "0x1DB62D4", VA = "0x1DB62D4")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1DB6860", Offset = "0x1DB6860", VA = "0x1DB6860")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1DB7438", Offset = "0x1DB7438", VA = "0x1DB7438")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1DB7868", Offset = "0x1DB7868", VA = "0x1DB7868")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1DB7D14", Offset = "0x1DB7D14", VA = "0x1DB7D14")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1DB89FC", Offset = "0x1DB89FC", VA = "0x1DB89FC")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1DB70BC", Offset = "0x1DB70BC", VA = "0x1DB70BC")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1DB8CCC", Offset = "0x1DB8CCC", VA = "0x1DB8CCC")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1DB8884", Offset = "0x1DB8884", VA = "0x1DB8884")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1DB86FC", Offset = "0x1DB86FC", VA = "0x1DB86FC")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1DB91A4", Offset = "0x1DB91A4", VA = "0x1DB91A4")]
		private void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000180")]
		public class ChildConstraint
		{
			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x400073E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4000741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F6A8", Offset = "0xC6F6A8")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6F6A8", Offset = "0xC6F6A8")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4000742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F6E4", Offset = "0xC6F6E4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6F6E4", Offset = "0xC6F6E4")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4000743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4000744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4000745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4000746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x17000129")]
			public float nominalDistance
			{
				[Token(Token = "0x60009C9")]
				[Address(RVA = "0x1DBE4D8", Offset = "0x1DBE4D8", VA = "0x1DBE4D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F720", Offset = "0xC6F720")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60009CA")]
				[Address(RVA = "0x1DBE4E0", Offset = "0x1DBE4E0", VA = "0x1DBE4E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F730", Offset = "0xC6F730")]
				private set
				{
				}
			}

			[Token(Token = "0x1700012A")]
			public bool isRigid
			{
				[Token(Token = "0x60009CB")]
				[Address(RVA = "0x1DBE4E8", Offset = "0x1DBE4E8", VA = "0x1DBE4E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F740", Offset = "0xC6F740")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60009CC")]
				[Address(RVA = "0x1DBE4F0", Offset = "0x1DBE4F0", VA = "0x1DBE4F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F750", Offset = "0xC6F750")]
				private set
				{
				}
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x1DBE48C", Offset = "0x1DBE48C", VA = "0x1DBE48C")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x1DBA7CC", Offset = "0x1DBA7CC", VA = "0x1DBA7CC")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x1DBB3AC", Offset = "0x1DBB3AC", VA = "0x1DBB3AC")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x1DBE07C", Offset = "0x1DBE07C", VA = "0x1DBE07C")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000181")]
		public enum Smoothing
		{
			[Token(Token = "0x4000748")]
			None,
			[Token(Token = "0x4000749")]
			Exponential,
			[Token(Token = "0x400074A")]
			Cubic
		}

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F5F0", Offset = "0xC6F5F0")]
		public float pin;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F608", Offset = "0xC6F608")]
		public float pull;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F620", Offset = "0xC6F620")]
		public float push;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F638", Offset = "0xC6F638")]
		public float pushParent;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F650", Offset = "0xC6F650")]
		public float reach;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x400073C")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1DB96F4", Offset = "0x1DB96F4", VA = "0x1DB96F4")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1DB9868", Offset = "0x1DB9868", VA = "0x1DB9868")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1DB99A0", Offset = "0x1DB99A0", VA = "0x1DB99A0")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1DB9AE0", Offset = "0x1DB9AE0", VA = "0x1DB9AE0")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1DB9BDC", Offset = "0x1DB9BDC", VA = "0x1DB9BDC")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1DB9CF0", Offset = "0x1DB9CF0", VA = "0x1DB9CF0")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1DBAB80", Offset = "0x1DBAB80", VA = "0x1DBAB80")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1DB9F38", Offset = "0x1DB9F38", VA = "0x1DB9F38")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1DBB660", Offset = "0x1DBB660", VA = "0x1DBB660")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1DBBB28", Offset = "0x1DBBB28", VA = "0x1DBBB28")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1DBC028", Offset = "0x1DBC028", VA = "0x1DBC028")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1DBCE14", Offset = "0x1DBCE14", VA = "0x1DBCE14")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1DBD820", Offset = "0x1DBD820", VA = "0x1DBD820")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1DBDC5C", Offset = "0x1DBDC5C", VA = "0x1DBDC5C")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1DBD70C", Offset = "0x1DBD70C", VA = "0x1DBD70C")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1DBCBE4", Offset = "0x1DBCBE4", VA = "0x1DBCBE4")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x1DBD670", Offset = "0x1DBD670", VA = "0x1DBD670")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1DBDE44", Offset = "0x1DBDE44", VA = "0x1DBDE44")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1DBD468", Offset = "0x1DBD468", VA = "0x1DBD468")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1DBDA20", Offset = "0x1DBDA20", VA = "0x1DBDA20")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class IKConstraintBend
	{
		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F760", Offset = "0xC6F760")]
		public float weight;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F778", Offset = "0xC6F778")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6F778", Offset = "0xC6F778")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x1700012B")]
		public bool initiated
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x1DBC4D0", Offset = "0x1DBC4D0", VA = "0x1DBC4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F7B4", Offset = "0xC6F7B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x1DD0A4C", Offset = "0x1DD0A4C", VA = "0x1DD0A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F7C4", Offset = "0xC6F7C4")]
			private set
			{
			}
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1DB97E0", Offset = "0x1DB97E0", VA = "0x1DB97E0")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x1DD07B0", Offset = "0x1DD07B0", VA = "0x1DD07B0")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x1DD0860", Offset = "0x1DD0860", VA = "0x1DD0860")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1DBA83C", Offset = "0x1DBA83C", VA = "0x1DBA83C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1DBA848", Offset = "0x1DBA848", VA = "0x1DBA848")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1DD0CF0", Offset = "0x1DD0CF0", VA = "0x1DD0CF0")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1DD0F4C", Offset = "0x1DD0F4C", VA = "0x1DD0F4C")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1DBC4D8", Offset = "0x1DBC4D8", VA = "0x1DBC4D8")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1DD0A58", Offset = "0x1DD0A58", VA = "0x1DD0A58")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1DD0BA4", Offset = "0x1DD0BA4", VA = "0x1DD0BA4")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class IKEffector
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F7D4", Offset = "0xC6F7D4")]
		public float positionWeight;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F7EC", Offset = "0xC6F7EC")]
		public float rotationWeight;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F804", Offset = "0xC6F804")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6F804", Offset = "0xC6F804")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F840", Offset = "0xC6F840")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x1700012C")]
		public bool isEndEffector
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x1DD17E4", Offset = "0x1DD17E4", VA = "0x1DD17E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F858", Offset = "0xC6F858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x1DD17EC", Offset = "0x1DD17EC", VA = "0x1DD17EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F868", Offset = "0xC6F868")]
			private set
			{
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1DD14C0", Offset = "0x1DD14C0", VA = "0x1DD14C0")]
		public IKEffector()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1DD1644", Offset = "0x1DD1644", VA = "0x1DD1644")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1DB910C", Offset = "0x1DB910C", VA = "0x1DB910C")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1DD17F8", Offset = "0x1DD17F8", VA = "0x1DD17F8")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1DD18E0", Offset = "0x1DD18E0", VA = "0x1DD18E0")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1DD1C20", Offset = "0x1DD1C20", VA = "0x1DD1C20")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1DD1FC8", Offset = "0x1DD1FC8", VA = "0x1DD1FC8")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1DD218C", Offset = "0x1DD218C", VA = "0x1DD218C")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1DD224C", Offset = "0x1DD224C", VA = "0x1DD224C")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1DD2AA4", Offset = "0x1DD2AA4", VA = "0x1DD2AA4")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1DD2B18", Offset = "0x1DD2B18", VA = "0x1DD2B18")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1DD2D94", Offset = "0x1DD2D94", VA = "0x1DD2D94")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1DD31B8", Offset = "0x1DD31B8", VA = "0x1DD31B8")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000184")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000185")]
		public class BoneMap
		{
			[Token(Token = "0x400077D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400077E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x400077F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4000780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4000782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4000783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4000784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4000785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4000786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4000788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4000789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x400078A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x400078B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x400078C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x400078D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x400078E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x400078F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4000790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4000791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700012D")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x60009F2")]
				[Address(RVA = "0x1DD3B44", Offset = "0x1DD3B44", VA = "0x1DD3B44")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700012E")]
			public bool isNodeBone
			{
				[Token(Token = "0x60009F5")]
				[Address(RVA = "0x1DD3CFC", Offset = "0x1DD3CFC", VA = "0x1DD3CFC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700012F")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6000A09")]
				[Address(RVA = "0x1DD43A4", Offset = "0x1DD43A4", VA = "0x1DD43A4")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x1DD3ADC", Offset = "0x1DD3ADC", VA = "0x1DD3ADC")]
			public BoneMap()
			{
			}

			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x1DD3AF4", Offset = "0x1DD3AF4", VA = "0x1DD3AF4")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1DD3C18", Offset = "0x1DD3C18", VA = "0x1DD3C18")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x1DD3C74", Offset = "0x1DD3C74", VA = "0x1DD3C74")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x1DD3D0C", Offset = "0x1DD3D0C", VA = "0x1DD3D0C")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x1DD3E08", Offset = "0x1DD3E08", VA = "0x1DD3E08")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x1DD3E10", Offset = "0x1DD3E10", VA = "0x1DD3E10")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x1DD3FC0", Offset = "0x1DD3FC0", VA = "0x1DD3FC0")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x1DD40DC", Offset = "0x1DD40DC", VA = "0x1DD40DC")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x1DD41D0", Offset = "0x1DD41D0", VA = "0x1DD41D0")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x1DD4614", Offset = "0x1DD4614", VA = "0x1DD4614")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1DD4650", Offset = "0x1DD4650", VA = "0x1DD4650")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1DD468C", Offset = "0x1DD468C", VA = "0x1DD468C")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x1DD46DC", Offset = "0x1DD46DC", VA = "0x1DD46DC")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x1DD4840", Offset = "0x1DD4840", VA = "0x1DD4840")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x1DD4C08", Offset = "0x1DD4C08", VA = "0x1DD4C08")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x1DD4C60", Offset = "0x1DD4C60", VA = "0x1DD4C60")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x1DD4E2C", Offset = "0x1DD4E2C", VA = "0x1DD4E2C")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x1DD4EA0", Offset = "0x1DD4EA0", VA = "0x1DD4EA0")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x1DD513C", Offset = "0x1DD513C", VA = "0x1DD513C")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x1DD53BC", Offset = "0x1DD53BC", VA = "0x1DD53BC")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x1DD5500", Offset = "0x1DD5500", VA = "0x1DD5500")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x1DD49A8", Offset = "0x1DD49A8", VA = "0x1DD49A8")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1DD387C", Offset = "0x1DD387C", VA = "0x1DD387C")]
		public IKMapping()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1DD3884", Offset = "0x1DD3884", VA = "0x1DD3884", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1DD388C", Offset = "0x1DD388C", VA = "0x1DD388C", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1DD3890", Offset = "0x1DD3890", VA = "0x1DD3890")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1DD39C8", Offset = "0x1DD39C8", VA = "0x1DD39C8")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F878", Offset = "0xC6F878")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1DD5708", Offset = "0x1DD5708", VA = "0x1DD5708")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1DD578C", Offset = "0x1DD578C", VA = "0x1DD578C")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1DD5824", Offset = "0x1DD5824", VA = "0x1DD5824", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1DD58C8", Offset = "0x1DD58C8", VA = "0x1DD58C8")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1DD58F0", Offset = "0x1DD58F0", VA = "0x1DD58F0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1DD591C", Offset = "0x1DD591C", VA = "0x1DD591C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1DD59C8", Offset = "0x1DD59C8", VA = "0x1DD59C8")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1DD59F0", Offset = "0x1DD59F0", VA = "0x1DD59F0")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000188")]
		public enum BoneMapType
		{
			[Token(Token = "0x40007A1")]
			Parent,
			[Token(Token = "0x40007A2")]
			Bone1,
			[Token(Token = "0x40007A3")]
			Bone2,
			[Token(Token = "0x40007A4")]
			Bone3
		}

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F890", Offset = "0xC6F890")]
		public float maintainRotationWeight;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F8A8", Offset = "0xC6F8A8")]
		public float weight;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoneMap boneMapParent;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMap1;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap2;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1DD5A2C", Offset = "0x1DD5A2C", VA = "0x1DD5A2C")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1DD5B2C", Offset = "0x1DD5B2C", VA = "0x1DD5B2C")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1DD5C6C", Offset = "0x1DD5C6C", VA = "0x1DD5C6C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1DD5CF0", Offset = "0x1DD5CF0", VA = "0x1DD5CF0")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1DD5DDC", Offset = "0x1DD5DDC", VA = "0x1DD5DDC")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1DD5C5C", Offset = "0x1DD5C5C", VA = "0x1DD5C5C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1DD61BC", Offset = "0x1DD61BC", VA = "0x1DD61BC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1DD6284", Offset = "0x1DD6284", VA = "0x1DD6284")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1DD635C", Offset = "0x1DD635C", VA = "0x1DD635C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1DD6668", Offset = "0x1DD6668", VA = "0x1DD6668")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1DD6738", Offset = "0x1DD6738", VA = "0x1DD6738")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F8C0", Offset = "0xC6F8C0")]
		public int iterations;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F8D8", Offset = "0xC6F8D8")]
		public float twistWeight;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1DD694C", Offset = "0x1DD694C", VA = "0x1DD694C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1DD6A74", Offset = "0x1DD6A74", VA = "0x1DD6A74")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1DD6BE0", Offset = "0x1DD6BE0", VA = "0x1DD6BE0", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1DD6BD0", Offset = "0x1DD6BD0", VA = "0x1DD6BD0")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1DD6F00", Offset = "0x1DD6F00", VA = "0x1DD6F00")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1DD6F8C", Offset = "0x1DD6F8C", VA = "0x1DD6F8C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1DD7044", Offset = "0x1DD7044", VA = "0x1DD7044", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1DD7970", Offset = "0x1DD7970", VA = "0x1DD7970")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1DD79B8", Offset = "0x1DD79B8", VA = "0x1DD79B8")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1DD7E0C", Offset = "0x1DD7E0C", VA = "0x1DD7E0C")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1DD83AC", Offset = "0x1DD83AC", VA = "0x1DD83AC")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1DD85C0", Offset = "0x1DD85C0", VA = "0x1DD85C0")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1DD8790", Offset = "0x1DD8790", VA = "0x1DD8790")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018A")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x200018B")]
		public class Point
		{
			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F9E8", Offset = "0xC6F9E8")]
			public float weight;

			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x2158D5C", Offset = "0x2158D5C", VA = "0x2158D5C")]
			public Point()
			{
			}

			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x215A014", Offset = "0x215A014", VA = "0x215A014")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x215A070", Offset = "0x215A070", VA = "0x215A070")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x215A238", Offset = "0x215A238", VA = "0x215A238")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x215A274", Offset = "0x215A274", VA = "0x215A274")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x215A2B0", Offset = "0x215A2B0", VA = "0x215A2B0")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x215A30C", Offset = "0x215A30C", VA = "0x215A30C")]
			public void UpdateSolverLocalState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018C")]
		public class Bone : Point
		{
			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x40007C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x17000131")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6000A4A")]
				[Address(RVA = "0x2158F30", Offset = "0x2158F30", VA = "0x2158F30")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A4B")]
				[Address(RVA = "0x2159034", Offset = "0x2159034", VA = "0x2159034")]
				set
				{
				}
			}

			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x2158CD0", Offset = "0x2158CD0", VA = "0x2158CD0")]
			public Bone()
			{
			}

			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x2158DE0", Offset = "0x2158DE0", VA = "0x2158DE0")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x2158E80", Offset = "0x2158E80", VA = "0x2158E80")]
			public Bone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x21590C0", Offset = "0x21590C0", VA = "0x21590C0")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x21593D4", Offset = "0x21593D4", VA = "0x21593D4")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x21597B8", Offset = "0x21597B8", VA = "0x21597B8")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x2159A70", Offset = "0x2159A70", VA = "0x2159A70")]
			public void SetToSolverPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018D")]
		public class Node : Point
		{
			[Token(Token = "0x40007C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x2159FB0", Offset = "0x2159FB0", VA = "0x2159FB0")]
			public Node()
			{
			}

			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x2159FB4", Offset = "0x2159FB4", VA = "0x2159FB4")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x2159FDC", Offset = "0x2159FDC", VA = "0x2159FDC")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x200018E")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x200018F")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6F900", Offset = "0xC6F900")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6F900", Offset = "0xC6F900")]
		public float IKPositionWeight;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F954", Offset = "0xC6F954")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6F954", Offset = "0xC6F954")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x17000130")]
		public bool initiated
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x21583B4", Offset = "0x21583B4", VA = "0x21583B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F9C8", Offset = "0xC6F9C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x2158340", Offset = "0x2158340", VA = "0x2158340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6F9D8", Offset = "0xC6F9D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x2157D3C", Offset = "0x2157D3C", VA = "0x2157D3C")]
		protected IKSolver()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x2157D54", Offset = "0x2157D54", VA = "0x2157D54")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2C")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x2157DD0", Offset = "0x2157DD0", VA = "0x2157DD0")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x215834C", Offset = "0x215834C", VA = "0x215834C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x21583BC", Offset = "0x21583BC", VA = "0x21583BC", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x21583C8", Offset = "0x21583C8", VA = "0x21583C8")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x21583D4", Offset = "0x21583D4", VA = "0x21583D4")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x21583DC", Offset = "0x21583DC", VA = "0x21583DC")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x2158464", Offset = "0x2158464", VA = "0x2158464")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000A36")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000A37")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000A38")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000A39")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000A3A")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000A3B")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x215846C", Offset = "0x215846C", VA = "0x215846C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x2158484", Offset = "0x2158484", VA = "0x2158484")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x21585F0", Offset = "0x21585F0", VA = "0x21585F0")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x21586BC", Offset = "0x21586BC", VA = "0x21586BC")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA00", Offset = "0xC6FA00")]
		public float poleWeight;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA18", Offset = "0xC6FA18")]
		public float clampWeight;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA30", Offset = "0xC6FA30")]
		public int clampSmoothing;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000132")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x215A600", Offset = "0x215A600", VA = "0x215A600")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000133")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x215A6D4", Offset = "0x215A6D4", VA = "0x215A6D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000134")]
		protected override int minBones
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x215B6D8", Offset = "0x215B6D8", VA = "0x215B6D8", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000135")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x215BDAC", Offset = "0x215BDAC", VA = "0x215BDAC", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x215A3C8", Offset = "0x215A3C8", VA = "0x215A3C8")]
		public IKSolverAim()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x215A4F4", Offset = "0x215A4F4", VA = "0x215A4F4")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x215A7A8", Offset = "0x215A7A8", VA = "0x215A7A8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x215AAB8", Offset = "0x215AAB8", VA = "0x215AAB8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x215B528", Offset = "0x215B528", VA = "0x215B528")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x215B0E0", Offset = "0x215B0E0", VA = "0x215B0E0")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x215B6E0", Offset = "0x215B6E0", VA = "0x215B6E0")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA48", Offset = "0xC6FA48")]
		public float IKRotationWeight;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x215BE94", Offset = "0x215BE94", VA = "0x215BE94")]
		public IKSolverArm()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x215C13C", Offset = "0x215C13C", VA = "0x215C13C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x215C5B8", Offset = "0x215C5B8", VA = "0x215C5B8")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x215C664", Offset = "0x215C664", VA = "0x215C664", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x215C82C", Offset = "0x215C82C", VA = "0x215C82C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x215C9EC", Offset = "0x215C9EC", VA = "0x215C9EC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x215CA54", Offset = "0x215CA54", VA = "0x215CA54", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x215CAD0", Offset = "0x215CAD0", VA = "0x215CAD0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x215D078", Offset = "0x215D078", VA = "0x215D078", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x215D0A4", Offset = "0x215D0A4", VA = "0x215D0A4")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x215CB48", Offset = "0x215CB48", VA = "0x215CB48")]
		private void Read()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x215D138", Offset = "0x215D138", VA = "0x215D138")]
		private void Write()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000192")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x215EC28", Offset = "0x215EC28", VA = "0x215EC28")]
		public IKSolverCCD()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x215EC2C", Offset = "0x215EC2C", VA = "0x215EC2C")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x215ED54", Offset = "0x215ED54", VA = "0x215ED54", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x215F588", Offset = "0x215F588", VA = "0x215F588", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x215FE88", Offset = "0x215FE88", VA = "0x215FE88")]
		private void Solve(Vector3 targetPosition)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x17000136")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x21621F4", Offset = "0x21621F4", VA = "0x21621F4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x216088C", Offset = "0x216088C", VA = "0x216088C")]
		public IKSolverFABRIK()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x2160918", Offset = "0x2160918", VA = "0x2160918")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x2161440", Offset = "0x2161440", VA = "0x2161440")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x216157C", Offset = "0x216157C", VA = "0x216157C", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x2161620", Offset = "0x2161620", VA = "0x2161620", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x2161DE8", Offset = "0x2161DE8", VA = "0x2161DE8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x21621FC", Offset = "0x21621FC", VA = "0x21621FC")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x21609F0", Offset = "0x21609F0", VA = "0x21609F0")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x2161528", Offset = "0x2161528", VA = "0x2161528")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x216218C", Offset = "0x216218C", VA = "0x216218C")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x21610DC", Offset = "0x21610DC", VA = "0x21610DC")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x2162DC4", Offset = "0x2162DC4", VA = "0x2162DC4")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x2162EE4", Offset = "0x2162EE4", VA = "0x2162EE4")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x2163064", Offset = "0x2163064", VA = "0x2163064")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x21631E8", Offset = "0x21631E8", VA = "0x21631E8")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x2161AB0", Offset = "0x2161AB0", VA = "0x2161AB0")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x2161C4C", Offset = "0x2161C4C", VA = "0x2161C4C")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x216345C", Offset = "0x216345C", VA = "0x216345C")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x2162660", Offset = "0x2162660", VA = "0x2162660")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x2161518", Offset = "0x2161518", VA = "0x2161518")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x2163EC0", Offset = "0x2163EC0", VA = "0x2163EC0")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x216365C", Offset = "0x216365C", VA = "0x216365C")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x2162320", Offset = "0x2162320", VA = "0x2162320")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x21624C0", Offset = "0x21624C0", VA = "0x21624C0")]
		private void MapToSolverPositionsLimited()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000194")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA60", Offset = "0xC6FA60")]
		public float rootPin;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x2164094", Offset = "0x2164094", VA = "0x2164094")]
		public IKSolverFABRIKRoot()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x2164118", Offset = "0x2164118", VA = "0x2164118", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x2164F04", Offset = "0x2164F04", VA = "0x2164F04", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2164FD0", Offset = "0x2164FD0", VA = "0x2164FD0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x21650C0", Offset = "0x21650C0", VA = "0x21650C0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x216522C", Offset = "0x216522C", VA = "0x216522C")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x2165358", Offset = "0x2165358", VA = "0x2165358", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x2165A34", Offset = "0x2165A34", VA = "0x2165A34", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x2165C98", Offset = "0x2165C98", VA = "0x2165C98", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x2165B0C", Offset = "0x2165B0C", VA = "0x2165B0C")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x2165650", Offset = "0x2165650", VA = "0x2165650")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000195")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA78", Offset = "0xC6FA78")]
		public int iterations;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x2165D58", Offset = "0x2165D58", VA = "0x2165D58")]
		public IKSolverFullBody()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x2165E6C", Offset = "0x2165E6C", VA = "0x2165E6C")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x2165F8C", Offset = "0x2165F8C", VA = "0x2165F8C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x2165FF8", Offset = "0x2165FF8", VA = "0x2165FF8")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x2166188", Offset = "0x2166188", VA = "0x2166188")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x2166218", Offset = "0x2166218", VA = "0x2166218")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x21662B0", Offset = "0x21662B0", VA = "0x21662B0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x21664D4", Offset = "0x21664D4", VA = "0x21664D4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x21666C0", Offset = "0x21666C0", VA = "0x21666C0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x2166934", Offset = "0x2166934", VA = "0x2166934", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x2166A60", Offset = "0x2166A60", VA = "0x2166A60", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x2166BA0", Offset = "0x2166BA0", VA = "0x2166BA0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x2166D7C", Offset = "0x2166D7C", VA = "0x2166D7C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x2166FA0", Offset = "0x2166FA0", VA = "0x2166FA0", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x2167380", Offset = "0x2167380", VA = "0x2167380", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x21678B8", Offset = "0x21678B8", VA = "0x21678B8", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x2167910", Offset = "0x2167910", VA = "0x2167910", Slot = "15")]
		protected virtual void WritePose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40007FD")]
		Body,
		[Token(Token = "0x40007FE")]
		LeftShoulder,
		[Token(Token = "0x40007FF")]
		RightShoulder,
		[Token(Token = "0x4000800")]
		LeftThigh,
		[Token(Token = "0x4000801")]
		RightThigh,
		[Token(Token = "0x4000802")]
		LeftHand,
		[Token(Token = "0x4000803")]
		RightHand,
		[Token(Token = "0x4000804")]
		LeftFoot,
		[Token(Token = "0x4000805")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000807")]
		LeftArm,
		[Token(Token = "0x4000808")]
		RightArm,
		[Token(Token = "0x4000809")]
		LeftLeg,
		[Token(Token = "0x400080A")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FA90", Offset = "0xC6FA90")]
		public float spineStiffness;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FAA8", Offset = "0xC6FAA8")]
		public float pullBodyVertical;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FAC0", Offset = "0xC6FAC0")]
		public float pullBodyHorizontal;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FAD8", Offset = "0xC6FAD8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6FAD8", Offset = "0xC6FAD8")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x17000137")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x2167A6C", Offset = "0x2167A6C", VA = "0x2167A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x2167C44", Offset = "0x2167C44", VA = "0x2167C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x2167C4C", Offset = "0x2167C4C", VA = "0x2167C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x2167C54", Offset = "0x2167C54", VA = "0x2167C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x2167C5C", Offset = "0x2167C5C", VA = "0x2167C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x2167C64", Offset = "0x2167C64", VA = "0x2167C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x2167C6C", Offset = "0x2167C6C", VA = "0x2167C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x2167C74", Offset = "0x2167C74", VA = "0x2167C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x2167C7C", Offset = "0x2167C7C", VA = "0x2167C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x2167C84", Offset = "0x2167C84", VA = "0x2167C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x2167CC4", Offset = "0x2167CC4", VA = "0x2167CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x2167D04", Offset = "0x2167D04", VA = "0x2167D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x2167D44", Offset = "0x2167D44", VA = "0x2167D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x2167D84", Offset = "0x2167D84", VA = "0x2167D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x2167DC0", Offset = "0x2167DC0", VA = "0x2167DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x2167E00", Offset = "0x2167E00", VA = "0x2167E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x2167E40", Offset = "0x2167E40", VA = "0x2167E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x2167E80", Offset = "0x2167E80", VA = "0x2167E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x216ACD4", Offset = "0x216ACD4", VA = "0x216ACD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FB14", Offset = "0xC6FB14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x216ACE0", Offset = "0x216ACE0", VA = "0x216ACE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FB24", Offset = "0xC6FB24")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x2167A60", Offset = "0x2167A60", VA = "0x2167A60")]
		public IKSolverFullBodyBiped()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x2167EBC", Offset = "0x2167EBC", VA = "0x2167EBC")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x216801C", Offset = "0x216801C", VA = "0x216801C")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x2167F24", Offset = "0x2167F24", VA = "0x2167F24")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x216810C", Offset = "0x216810C", VA = "0x216810C")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x2167A74", Offset = "0x2167A74", VA = "0x2167A74")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x216822C", Offset = "0x216822C", VA = "0x216822C")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x2168324", Offset = "0x2168324", VA = "0x2168324")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x2168418", Offset = "0x2168418", VA = "0x2168418")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x2168510", Offset = "0x2168510", VA = "0x2168510")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x2168518", Offset = "0x2168518", VA = "0x2168518")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x2168554", Offset = "0x2168554", VA = "0x2168554")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x2168664", Offset = "0x2168664", VA = "0x2168664", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x21688D8", Offset = "0x21688D8", VA = "0x21688D8")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x216A3F8", Offset = "0x216A3F8", VA = "0x216A3F8")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x216A9D4", Offset = "0x216A9D4", VA = "0x216A9D4")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x216AA84", Offset = "0x216AA84", VA = "0x216AA84")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x216A7C4", Offset = "0x216A7C4", VA = "0x216A7C4")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x216A8CC", Offset = "0x216A8CC", VA = "0x216A8CC")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x216ACEC", Offset = "0x216ACEC", VA = "0x216ACEC")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x216ADC4", Offset = "0x216ADC4", VA = "0x216ADC4", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x216AF88", Offset = "0x216AF88", VA = "0x216AF88")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x216B14C", Offset = "0x216B14C", VA = "0x216B14C")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x216B374", Offset = "0x216B374", VA = "0x216B374")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x216B5DC", Offset = "0x216B5DC", VA = "0x216B5DC", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x216BA70", Offset = "0x216BA70", VA = "0x216BA70", Slot = "15")]
		protected override void WritePose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x1700014A")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x216C574", Offset = "0x216C574", VA = "0x216C574", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014B")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x216C57C", Offset = "0x216C57C", VA = "0x216C57C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x216C584", Offset = "0x216C584", VA = "0x216C584", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014D")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x216C594", Offset = "0x216C594", VA = "0x216C594", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014E")]
		protected float positionOffset
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x215FDBC", Offset = "0x215FDBC", VA = "0x215FDBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x215A464", Offset = "0x215A464", VA = "0x215A464")]
		public IKSolverHeuristic()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x216BB9C", Offset = "0x216BB9C", VA = "0x216BB9C")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x216BD84", Offset = "0x216BD84", VA = "0x216BD84")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x216BF28", Offset = "0x216BF28", VA = "0x216BF28", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x216BFB4", Offset = "0x216BFB4", VA = "0x216BFB4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x216C054", Offset = "0x216C054", VA = "0x216C054", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x216C44C", Offset = "0x216C44C", VA = "0x216C44C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x216C454", Offset = "0x216C454", VA = "0x216C454", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x216C58C", Offset = "0x216C58C", VA = "0x216C58C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x216C590", Offset = "0x216C590", VA = "0x216C590", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x215EDFC", Offset = "0x215EDFC", VA = "0x215EDFC")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x215F93C", Offset = "0x215F93C", VA = "0x215F93C")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x216C748", Offset = "0x216C748", VA = "0x216C748")]
		private bool SingularityDetected()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FB34", Offset = "0xC6FB34")]
		public float IKRotationWeight;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x216CA88", Offset = "0x216CA88", VA = "0x216CA88")]
		public IKSolverLeg()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x216CCF8", Offset = "0x216CCF8", VA = "0x216CCF8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x216D174", Offset = "0x216D174", VA = "0x216D174")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x216D220", Offset = "0x216D220", VA = "0x216D220", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x216D3E8", Offset = "0x216D3E8", VA = "0x216D3E8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x216D5A8", Offset = "0x216D5A8", VA = "0x216D5A8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x216D610", Offset = "0x216D610", VA = "0x216D610", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x216D68C", Offset = "0x216D68C", VA = "0x216D68C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x216DC34", Offset = "0x216DC34", VA = "0x216DC34", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x216DC60", Offset = "0x216DC60", VA = "0x216DC60")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x216D704", Offset = "0x216D704", VA = "0x216D704")]
		private void Read()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x216DD88", Offset = "0x216DD88", VA = "0x216DD88")]
		private void Write()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x200019C")]
		public enum BendModifier
		{
			[Token(Token = "0x4000835")]
			Animation,
			[Token(Token = "0x4000836")]
			Target,
			[Token(Token = "0x4000837")]
			Parent,
			[Token(Token = "0x4000838")]
			Arm,
			[Token(Token = "0x4000839")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x200019D")]
		public struct AxisDirection
		{
			[Token(Token = "0x400083A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x400083B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x400083C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x2170148", Offset = "0x2170148", VA = "0x2170148")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FB4C", Offset = "0xC6FB4C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FB64", Offset = "0xC6FB64")]
		public float bendModifierWeight;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x1700014F")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x21700CC", Offset = "0x21700CC", VA = "0x21700CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x216E654", Offset = "0x216E654", VA = "0x216E654")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x216E800", Offset = "0x216E800", VA = "0x216E800")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x216E8A0", Offset = "0x216E8A0", VA = "0x216E8A0")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x216E8F8", Offset = "0x216E8F8", VA = "0x216E8F8")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x216EA18", Offset = "0x216EA18", VA = "0x216EA18", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x216F11C", Offset = "0x216F11C", VA = "0x216F11C", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x216FF34", Offset = "0x216FF34", VA = "0x216FF34", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x216EE34", Offset = "0x216EE34", VA = "0x216EE34")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x216F294", Offset = "0x216F294", VA = "0x216F294")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200019F")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x17000156")]
			public Vector3 forward
			{
				[Token(Token = "0x6000B21")]
				[Address(RVA = "0x21727E0", Offset = "0x21727E0", VA = "0x21727E0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x2170354", Offset = "0x2170354", VA = "0x2170354")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x21718D8", Offset = "0x21718D8", VA = "0x21718D8")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x2171D14", Offset = "0x2171D14", VA = "0x2171D14")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x2172C98", Offset = "0x2172C98", VA = "0x2172C98")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FB7C", Offset = "0xC6FB7C")]
		public float bodyWeight;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FB94", Offset = "0xC6FB94")]
		public float headWeight;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FBAC", Offset = "0xC6FBAC")]
		public float eyesWeight;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FBC4", Offset = "0xC6FBC4")]
		public float clampWeight;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FBDC", Offset = "0xC6FBDC")]
		public float clampWeightHead;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FBF4", Offset = "0xC6FBF4")]
		public float clampWeightEyes;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FC0C", Offset = "0xC6FC0C")]
		public int clampSmoothing;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] spineForwards;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] headForwards;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] eyeForward;

		[Token(Token = "0x17000150")]
		private bool spineIsValid
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x2170DD0", Offset = "0x2170DD0", VA = "0x2170DD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		private bool spineIsEmpty
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x2171050", Offset = "0x2171050", VA = "0x2171050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		private bool headIsValid
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x2170F08", Offset = "0x2170F08", VA = "0x2170F08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		private bool headIsEmpty
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x2171080", Offset = "0x2171080", VA = "0x2171080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000154")]
		private bool eyesIsValid
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x2170F18", Offset = "0x2170F18", VA = "0x2170F18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000155")]
		private bool eyesIsEmpty
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x2171100", Offset = "0x2171100", VA = "0x2171100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x2170150", Offset = "0x2170150", VA = "0x2170150")]
		public IKSolverLookAt()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x2170358", Offset = "0x2170358", VA = "0x2170358")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x21703E0", Offset = "0x21703E0", VA = "0x21703E0")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x2170498", Offset = "0x2170498", VA = "0x2170498")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x2170578", Offset = "0x2170578", VA = "0x2170578")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x2170678", Offset = "0x2170678", VA = "0x2170678")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x21707A4", Offset = "0x21707A4", VA = "0x21707A4")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x2170914", Offset = "0x2170914", VA = "0x2170914", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x2170A90", Offset = "0x2170A90", VA = "0x2170A90", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x2170C20", Offset = "0x2170C20", VA = "0x2170C20", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x2171130", Offset = "0x2171130", VA = "0x2171130", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x2171434", Offset = "0x2171434", VA = "0x2171434", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x21715EC", Offset = "0x21715EC", VA = "0x21715EC")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x2171900", Offset = "0x2171900", VA = "0x2171900", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x2171E68", Offset = "0x2171E68", VA = "0x2171E68", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x2171F78", Offset = "0x2171F78", VA = "0x2171F78")]
		private void SolveSpine()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x2172238", Offset = "0x2172238", VA = "0x2172238")]
		private void SolveHead()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2172518", Offset = "0x2172518", VA = "0x2172518")]
		private void SolveEyes()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x21728B4", Offset = "0x21728B4", VA = "0x21728B4")]
		private Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2171694", Offset = "0x2171694", VA = "0x2171694")]
		private void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20001A1")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x2172E34", Offset = "0x2172E34", VA = "0x2172E34")]
			public TrigonometricBone()
			{
			}

			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x21747C0", Offset = "0x21747C0", VA = "0x21747C0")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x2175638", Offset = "0x2175638", VA = "0x2175638")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x216E944", Offset = "0x216E944", VA = "0x216E944")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FC24", Offset = "0xC6FC24")]
		public float IKRotationWeight;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x216E6E8", Offset = "0x216E6E8", VA = "0x216E6E8")]
		public IKSolverTrigonometric()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2172E38", Offset = "0x2172E38", VA = "0x2172E38")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x217305C", Offset = "0x217305C", VA = "0x217305C")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x2173250", Offset = "0x2173250", VA = "0x2173250")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x217325C", Offset = "0x217325C", VA = "0x217325C")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x21732E4", Offset = "0x21732E4", VA = "0x21732E4")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x21732F0", Offset = "0x21732F0", VA = "0x21732F0")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x21732F8", Offset = "0x21732F8", VA = "0x21732F8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x2173438", Offset = "0x2173438", VA = "0x2173438", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x2173568", Offset = "0x2173568", VA = "0x2173568", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x21735BC", Offset = "0x21735BC", VA = "0x21735BC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x2173624", Offset = "0x2173624", VA = "0x2173624", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x2173AF0", Offset = "0x2173AF0", VA = "0x2173AF0")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x2173B6C", Offset = "0x2173B6C", VA = "0x2173B6C")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x2174208", Offset = "0x2174208", VA = "0x2174208")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x2174438", Offset = "0x2174438", VA = "0x2174438", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x2174690", Offset = "0x2174690", VA = "0x2174690")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x2174590", Offset = "0x2174590", VA = "0x2174590")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x2174988", Offset = "0x2174988", VA = "0x2174988", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x21756FC", Offset = "0x21756FC", VA = "0x21756FC", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x2175700", Offset = "0x2175700", VA = "0x2175700", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x2175704", Offset = "0x2175704", VA = "0x2175704", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x21752F4", Offset = "0x21752F4", VA = "0x21752F4")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20001A3")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x20001A4")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4000897")]
				YawPitch,
				[Token(Token = "0x4000898")]
				FromTo
			}

			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FE30", Offset = "0xC6FE30")]
			public Transform target;

			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FE68", Offset = "0xC6FE68")]
			public Transform bendGoal;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FEA0", Offset = "0xC6FEA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FEA0", Offset = "0xC6FEA0")]
			public float positionWeight;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FEF4", Offset = "0xC6FEF4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FEF4", Offset = "0xC6FEF4")]
			public float rotationWeight;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FF48", Offset = "0xC6FF48")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FF80", Offset = "0xC6FF80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FF80", Offset = "0xC6FF80")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FFD4", Offset = "0xC6FFD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC6FFD4", Offset = "0xC6FFD4")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70028", Offset = "0xC70028")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70028", Offset = "0xC70028")]
			public float bendGoalWeight;

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7007C", Offset = "0xC7007C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7007C", Offset = "0xC7007C")]
			public float swivelOffset;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC700D8", Offset = "0xC700D8")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70110", Offset = "0xC70110")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70148", Offset = "0xC70148")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70148", Offset = "0xC70148")]
			public float armLengthMlp;

			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC701A0", Offset = "0xC701A0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70218", Offset = "0xC70218")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70218", Offset = "0xC70218")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70254", Offset = "0xC70254")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70254", Offset = "0xC70254")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x400088D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4000892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000894")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000895")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x17000158")]
			public Vector3 position
			{
				[Token(Token = "0x6000B5C")]
				[Address(RVA = "0x217D89C", Offset = "0x217D89C", VA = "0x217D89C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70290", Offset = "0xC70290")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B5D")]
				[Address(RVA = "0x217D8A8", Offset = "0x217D8A8", VA = "0x217D8A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC702A0", Offset = "0xC702A0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000159")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000B5E")]
				[Address(RVA = "0x217D8B4", Offset = "0x217D8B4", VA = "0x217D8B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC702B0", Offset = "0xC702B0")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000B5F")]
				[Address(RVA = "0x217D8C0", Offset = "0x217D8C0", VA = "0x217D8C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC702C0", Offset = "0xC702C0")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015A")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6000B60")]
				[Address(RVA = "0x217D8CC", Offset = "0x217D8CC", VA = "0x217D8CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6000B61")]
				[Address(RVA = "0x217D908", Offset = "0x217D908", VA = "0x217D908")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6000B62")]
				[Address(RVA = "0x217D950", Offset = "0x217D950", VA = "0x217D950")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015D")]
			private VirtualBone hand
			{
				[Token(Token = "0x6000B63")]
				[Address(RVA = "0x217D9A4", Offset = "0x217D9A4", VA = "0x217D9A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x215BFFC", Offset = "0x215BFFC", VA = "0x215BFFC")]
			public Arm()
			{
			}

			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x217D9F8", Offset = "0x217D9F8", VA = "0x217D9F8", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x217E3C0", Offset = "0x217E3C0", VA = "0x217E3C0", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x217E610", Offset = "0x217E610", VA = "0x217E610", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x217E6C0", Offset = "0x217E6C0", VA = "0x217E6C0")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x215D36C", Offset = "0x215D36C", VA = "0x215D36C")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x217F548", Offset = "0x217F548", VA = "0x217F548", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x217F5BC", Offset = "0x217F5BC", VA = "0x217F5BC", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x217EBC8", Offset = "0x217EBC8", VA = "0x217EBC8")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x217ECBC", Offset = "0x217ECBC", VA = "0x217ECBC")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x217F8DC", Offset = "0x217F8DC", VA = "0x217F8DC")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A5")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC702D0", Offset = "0xC702D0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC702D0", Offset = "0xC702D0")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7030C", Offset = "0xC7030C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7030C", Offset = "0xC7030C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x1700015E")]
			public float sqrMag
			{
				[Token(Token = "0x6000B74")]
				[Address(RVA = "0x217FA34", Offset = "0x217FA34", VA = "0x217FA34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70358", Offset = "0xC70358")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000B75")]
				[Address(RVA = "0x217FA3C", Offset = "0x217FA3C", VA = "0x217FA3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70368", Offset = "0xC70368")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015F")]
			public float mag
			{
				[Token(Token = "0x6000B76")]
				[Address(RVA = "0x217ECB4", Offset = "0x217ECB4", VA = "0x217ECB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70378", Offset = "0xC70378")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000B77")]
				[Address(RVA = "0x217FA44", Offset = "0x217FA44", VA = "0x217FA44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70388", Offset = "0xC70388")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x217D7F4", Offset = "0x217D7F4", VA = "0x217D7F4")]
			protected BodyPart()
			{
			}

			[Token(Token = "0x6000B6F")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6000B70")]
			public abstract void PreSolve();

			[Token(Token = "0x6000B71")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6000B72")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x6000B73")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x215EAF4", Offset = "0x215EAF4", VA = "0x215EAF4")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x217FA4C", Offset = "0x217FA4C", VA = "0x217FA4C")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x217FBD8", Offset = "0x217FBD8", VA = "0x217FBD8")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x217FCC8", Offset = "0x217FCC8", VA = "0x217FCC8")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x217CEAC", Offset = "0x217CEAC", VA = "0x217CEAC")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x217F338", Offset = "0x217F338", VA = "0x217F338")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x217FD1C", Offset = "0x217FD1C", VA = "0x217FD1C")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x217FEA4", Offset = "0x217FEA4", VA = "0x217FEA4")]
			public void Visualize()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A6")]
		public class Footstep
		{
			[Token(Token = "0x40008A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x40008A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x40008A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70398", Offset = "0xC70398")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70398", Offset = "0xC70398")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x17000160")]
			public bool isStepping
			{
				[Token(Token = "0x6000B81")]
				[Address(RVA = "0x21800C4", Offset = "0x21800C4", VA = "0x21800C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000161")]
			public float stepProgress
			{
				[Token(Token = "0x6000B82")]
				[Address(RVA = "0x21800D8", Offset = "0x21800D8", VA = "0x21800D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC703D4", Offset = "0xC703D4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000B83")]
				[Address(RVA = "0x21800E0", Offset = "0x21800E0", VA = "0x21800E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC703E4", Offset = "0xC703E4")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x217FED0", Offset = "0x217FED0", VA = "0x217FED0")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x218007C", Offset = "0x218007C", VA = "0x218007C")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x21800E8", Offset = "0x21800E8", VA = "0x21800E8")]
			public void StepTo(Vector3 p, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x21801F0", Offset = "0x21801F0", VA = "0x21801F0")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x21803EC", Offset = "0x21803EC", VA = "0x21803EC")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x21805E8", Offset = "0x21805E8", VA = "0x21805E8")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A7")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC703F4", Offset = "0xC703F4")]
			public Transform target;

			[Token(Token = "0x40008AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7042C", Offset = "0xC7042C")]
			public Transform bendGoal;

			[Token(Token = "0x40008B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70464", Offset = "0xC70464")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70464", Offset = "0xC70464")]
			public float positionWeight;

			[Token(Token = "0x40008B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC704B8", Offset = "0xC704B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC704B8", Offset = "0xC704B8")]
			public float rotationWeight;

			[Token(Token = "0x40008B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7050C", Offset = "0xC7050C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7050C", Offset = "0xC7050C")]
			public float bendGoalWeight;

			[Token(Token = "0x40008B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70560", Offset = "0xC70560")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70560", Offset = "0xC70560")]
			public float swivelOffset;

			[Token(Token = "0x40008B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC705BC", Offset = "0xC705BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC705BC", Offset = "0xC705BC")]
			public float bendToTargetWeight;

			[Token(Token = "0x40008B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70610", Offset = "0xC70610")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70610", Offset = "0xC70610")]
			public float legLengthMlp;

			[Token(Token = "0x40008B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70668", Offset = "0xC70668")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40008B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40008B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40008BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70700", Offset = "0xC70700")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70700", Offset = "0xC70700")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7073C", Offset = "0xC7073C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7073C", Offset = "0xC7073C")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70778", Offset = "0xC70778")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70778", Offset = "0xC70778")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC707B4", Offset = "0xC707B4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC707B4", Offset = "0xC707B4")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 footPosition;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Quaternion footRotation;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 bendNormal;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x17000162")]
			public Vector3 position
			{
				[Token(Token = "0x6000B8A")]
				[Address(RVA = "0x217CEA0", Offset = "0x217CEA0", VA = "0x217CEA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC707F0", Offset = "0xC707F0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B8B")]
				[Address(RVA = "0x2180820", Offset = "0x2180820", VA = "0x2180820")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70800", Offset = "0xC70800")]
				private set
				{
				}
			}

			[Token(Token = "0x17000163")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000B8C")]
				[Address(RVA = "0x218082C", Offset = "0x218082C", VA = "0x218082C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70810", Offset = "0xC70810")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000B8D")]
				[Address(RVA = "0x2180838", Offset = "0x2180838", VA = "0x2180838")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70820", Offset = "0xC70820")]
				private set
				{
				}
			}

			[Token(Token = "0x17000164")]
			public bool hasToes
			{
				[Token(Token = "0x6000B8E")]
				[Address(RVA = "0x2180844", Offset = "0x2180844", VA = "0x2180844")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70830", Offset = "0xC70830")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000B8F")]
				[Address(RVA = "0x218084C", Offset = "0x218084C", VA = "0x218084C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70840", Offset = "0xC70840")]
				private set
				{
				}
			}

			[Token(Token = "0x17000165")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6000B90")]
				[Address(RVA = "0x2180858", Offset = "0x2180858", VA = "0x2180858")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private VirtualBone calf
			{
				[Token(Token = "0x6000B91")]
				[Address(RVA = "0x2180894", Offset = "0x2180894", VA = "0x2180894")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private VirtualBone foot
			{
				[Token(Token = "0x6000B92")]
				[Address(RVA = "0x21808D4", Offset = "0x21808D4", VA = "0x21808D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000168")]
			private VirtualBone toes
			{
				[Token(Token = "0x6000B93")]
				[Address(RVA = "0x2180914", Offset = "0x2180914", VA = "0x2180914")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6000B94")]
				[Address(RVA = "0x217CE4C", Offset = "0x217CE4C", VA = "0x217CE4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000B95")]
				[Address(RVA = "0x2180954", Offset = "0x2180954", VA = "0x2180954")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70850", Offset = "0xC70850")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B96")]
				[Address(RVA = "0x2180960", Offset = "0x2180960", VA = "0x2180960")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70860", Offset = "0xC70860")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x216CBF0", Offset = "0x216CBF0", VA = "0x216CBF0")]
			public Leg()
			{
			}

			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x218096C", Offset = "0x218096C", VA = "0x218096C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x2181168", Offset = "0x2181168", VA = "0x2181168", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x2181A3C", Offset = "0x2181A3C", VA = "0x2181A3C", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x2181930", Offset = "0x2181930", VA = "0x2181930")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x21816D8", Offset = "0x21816D8", VA = "0x21816D8")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x216DFBC", Offset = "0x216DFBC", VA = "0x216DFBC")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x21820A4", Offset = "0x21820A4", VA = "0x21820A4")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x21826C8", Offset = "0x21826C8", VA = "0x21826C8", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x21829DC", Offset = "0x21829DC", VA = "0x21829DC", Slot = "8")]
			public override void ResetOffsets()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A8")]
		public class Locomotion
		{
			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70870", Offset = "0xC70870")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70870", Offset = "0xC70870")]
			public float weight;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC708C4", Offset = "0xC708C4")]
			public float footDistance;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC708FC", Offset = "0xC708FC")]
			public float stepThreshold;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70934", Offset = "0xC70934")]
			public float angleThreshold;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7096C", Offset = "0xC7096C")]
			public float comAngleMlp;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC709A4", Offset = "0xC709A4")]
			public float maxVelocity;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC709DC", Offset = "0xC709DC")]
			public float velocityFactor;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70A14", Offset = "0xC70A14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70A14", Offset = "0xC70A14")]
			public float maxLegStretch;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70A6C", Offset = "0xC70A6C")]
			public float rootSpeed;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70AA4", Offset = "0xC70AA4")]
			public float stepSpeed;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70ADC", Offset = "0xC70ADC")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70B14", Offset = "0xC70B14")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70B4C", Offset = "0xC70B4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70B4C", Offset = "0xC70B4C")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70BA4", Offset = "0xC70BA4")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70BDC", Offset = "0xC70BDC")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70C14", Offset = "0xC70C14")]
			public Vector3 offset;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70C8C", Offset = "0xC70C8C")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70CC4", Offset = "0xC70CC4")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70CFC", Offset = "0xC70CFC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC70CFC", Offset = "0xC70CFC")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x1700016B")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6000BA1")]
				[Address(RVA = "0x2182A98", Offset = "0x2182A98", VA = "0x2182A98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70D38", Offset = "0xC70D38")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000BA2")]
				[Address(RVA = "0x2182AA4", Offset = "0x2182AA4", VA = "0x2182AA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC70D48", Offset = "0xC70D48")]
				private set
				{
				}
			}

			[Token(Token = "0x1700016C")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6000BA8")]
				[Address(RVA = "0x2182ED0", Offset = "0x2182ED0", VA = "0x2182ED0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700016D")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6000BA9")]
				[Address(RVA = "0x2182F1C", Offset = "0x2182F1C", VA = "0x2182F1C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700016E")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6000BAA")]
				[Address(RVA = "0x2182F6C", Offset = "0x2182F6C", VA = "0x2182F6C")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700016F")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6000BAB")]
				[Address(RVA = "0x2182FB8", Offset = "0x2182FB8", VA = "0x2182FB8")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x217592C", Offset = "0x217592C", VA = "0x217592C")]
			public Locomotion()
			{
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x217AF40", Offset = "0x217AF40", VA = "0x217AF40")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x2178338", Offset = "0x2178338", VA = "0x2178338")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x21774D8", Offset = "0x21774D8", VA = "0x21774D8")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x217731C", Offset = "0x217731C", VA = "0x217731C")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x217B32C", Offset = "0x217B32C", VA = "0x217B32C")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x2182AB0", Offset = "0x2182AB0", VA = "0x2182AB0")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x2182C54", Offset = "0x2182C54", VA = "0x2182C54")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x2182CF0", Offset = "0x2182CF0", VA = "0x2182CF0")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001A9")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70D58", Offset = "0xC70D58")]
			public Transform headTarget;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70D90", Offset = "0xC70D90")]
			public Transform pelvisTarget;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70DC8", Offset = "0xC70DC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70DC8", Offset = "0xC70DC8")]
			public float positionWeight;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70E1C", Offset = "0xC70E1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70E1C", Offset = "0xC70E1C")]
			public float rotationWeight;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70E70", Offset = "0xC70E70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70E70", Offset = "0xC70E70")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70EC4", Offset = "0xC70EC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70EC4", Offset = "0xC70EC4")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70F18", Offset = "0xC70F18")]
			public Transform chestGoal;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70F50", Offset = "0xC70F50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70F50", Offset = "0xC70F50")]
			public float chestGoalWeight;

			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70FA4", Offset = "0xC70FA4")]
			public float minHeadHeight;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC70FDC", Offset = "0xC70FDC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC70FDC", Offset = "0xC70FDC")]
			public float bodyPosStiffness;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71030", Offset = "0xC71030")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71030", Offset = "0xC71030")]
			public float bodyRotStiffness;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71084", Offset = "0xC71084")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC71084", Offset = "0xC71084")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71084", Offset = "0xC71084")]
			public float neckStiffness;

			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC710FC", Offset = "0xC710FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC710FC", Offset = "0xC710FC")]
			public float rotateChestByHands;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71150", Offset = "0xC71150")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71150", Offset = "0xC71150")]
			public float chestClampWeight;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC711A4", Offset = "0xC711A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC711A4", Offset = "0xC711A4")]
			public float headClampWeight;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC711F8", Offset = "0xC711F8")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71230", Offset = "0xC71230")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71230", Offset = "0xC71230")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71284", Offset = "0xC71284")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71284", Offset = "0xC71284")]
			public float maxRootAngle;

			[NonSerialized]
			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC713BC", Offset = "0xC713BC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC713BC", Offset = "0xC713BC")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			private Quaternion headRotation;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4000907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private Quaternion anchorRelativeToHead;

			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
			private int pelvisIndex;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int spineIndex;

			[Token(Token = "0x4000910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int chestIndex;

			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int neckIndex;

			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int headIndex;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private float length;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private bool hasChest;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
			private bool hasNeck;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
			private bool hasLegs;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private float headHeight;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float sizeMlp;

			[Token(Token = "0x4000919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private Vector3 chestForward;

			[Token(Token = "0x17000170")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6000BB0")]
				[Address(RVA = "0x1C02364", Offset = "0x1C02364", VA = "0x1C02364")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6000BB1")]
				[Address(RVA = "0x1C023AC", Offset = "0x1C023AC", VA = "0x1C023AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			public VirtualBone chest
			{
				[Token(Token = "0x6000BB2")]
				[Address(RVA = "0x1C023F4", Offset = "0x1C023F4", VA = "0x1C023F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private VirtualBone neck
			{
				[Token(Token = "0x6000BB3")]
				[Address(RVA = "0x1C02450", Offset = "0x1C02450", VA = "0x1C02450")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			public VirtualBone head
			{
				[Token(Token = "0x6000BB4")]
				[Address(RVA = "0x1C02498", Offset = "0x1C02498", VA = "0x1C02498")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6000BB5")]
				[Address(RVA = "0x1C024E0", Offset = "0x1C024E0", VA = "0x1C024E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC713F8", Offset = "0xC713F8")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000BB6")]
				[Address(RVA = "0x1C024F4", Offset = "0x1C024F4", VA = "0x1C024F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71408", Offset = "0xC71408")]
				private set
				{
				}
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x1C0215C", Offset = "0x1C0215C", VA = "0x1C0215C")]
			public Spine()
			{
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x1C02508", Offset = "0x1C02508", VA = "0x1C02508", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x1C03404", Offset = "0x1C03404", VA = "0x1C03404", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1C037A8", Offset = "0x1C037A8", VA = "0x1C037A8", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x1C03F8C", Offset = "0x1C03F8C", VA = "0x1C03F8C")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1C045E4", Offset = "0x1C045E4", VA = "0x1C045E4")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x1C05068", Offset = "0x1C05068", VA = "0x1C05068")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp)
			{
			}

			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x1C059C0", Offset = "0x1C059C0", VA = "0x1C059C0")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x1C06AB8", Offset = "0x1C06AB8", VA = "0x1C06AB8", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x1C06DD0", Offset = "0x1C06DD0", VA = "0x1C06DD0", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x1C041E0", Offset = "0x1C041E0", VA = "0x1C041E0")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x1C05578", Offset = "0x1C05578", VA = "0x1C05578")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x1C04C1C", Offset = "0x1C04C1C", VA = "0x1C04C1C")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1C06EE0", Offset = "0x1C06EE0", VA = "0x1C06EE0")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1C0573C", Offset = "0x1C0573C", VA = "0x1C0573C")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x1C05288", Offset = "0x1C05288", VA = "0x1C05288")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AA")]
		public enum PositionOffset
		{
			[Token(Token = "0x400091B")]
			Pelvis,
			[Token(Token = "0x400091C")]
			Chest,
			[Token(Token = "0x400091D")]
			Head,
			[Token(Token = "0x400091E")]
			LeftHand,
			[Token(Token = "0x400091F")]
			RightHand,
			[Token(Token = "0x4000920")]
			LeftFoot,
			[Token(Token = "0x4000921")]
			RightFoot,
			[Token(Token = "0x4000922")]
			LeftHeel,
			[Token(Token = "0x4000923")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x20001AB")]
		public enum RotationOffset
		{
			[Token(Token = "0x4000925")]
			Pelvis,
			[Token(Token = "0x4000926")]
			Chest,
			[Token(Token = "0x4000927")]
			Head
		}

		[Serializable]
		[Token(Token = "0x20001AC")]
		public class VirtualBone
		{
			[Token(Token = "0x4000928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x1C03368", Offset = "0x1C03368", VA = "0x1C03368")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x1C033E4", Offset = "0x1C033E4", VA = "0x1C033E4")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x1C07798", Offset = "0x1C07798", VA = "0x1C07798")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x1C07ACC", Offset = "0x1C07ACC", VA = "0x1C07ACC")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x1C07510", Offset = "0x1C07510", VA = "0x1C07510")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x1C07F88", Offset = "0x1C07F88", VA = "0x1C07F88")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x1C08278", Offset = "0x1C08278", VA = "0x1C08278")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x1C0857C", Offset = "0x1C0857C", VA = "0x1C0857C")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x1C06390", Offset = "0x1C06390", VA = "0x1C06390")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x1C08668", Offset = "0x1C08668", VA = "0x1C08668")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x1C05D68", Offset = "0x1C05D68", VA = "0x1C05D68")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x1C08898", Offset = "0x1C08898", VA = "0x1C08898")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x1C089AC", Offset = "0x1C089AC", VA = "0x1C089AC")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FC3C", Offset = "0xC6FC3C")]
		public bool plantFeet;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FC74", Offset = "0xC6FC74")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC6FC74", Offset = "0xC6FC74")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FCB0", Offset = "0xC6FCB0")]
		public Spine spine;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FCE8", Offset = "0xC6FCE8")]
		public Arm leftArm;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FD20", Offset = "0xC6FD20")]
		public Arm rightArm;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FD58", Offset = "0xC6FD58")]
		public Leg leftLeg;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FD90", Offset = "0xC6FD90")]
		public Leg rightLeg;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC6FDC8", Offset = "0xC6FDC8")]
		public Locomotion locomotion;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Leg[] legs;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Arm[] arms;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 headPosition;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 debugPos4;

		[Token(Token = "0x17000157")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x2178330", Offset = "0x2178330", VA = "0x2178330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FE00", Offset = "0xC6FE00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x217AF38", Offset = "0x217AF38", VA = "0x217AF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC6FE10", Offset = "0xC6FE10")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x2175708", Offset = "0x2175708", VA = "0x2175708")]
		public IKSolverVR()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2175A20", Offset = "0x2175A20", VA = "0x2175A20")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2175F8C", Offset = "0x2175F8C", VA = "0x2175F8C")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2175DD8", Offset = "0x2175DD8", VA = "0x2175DD8")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2176B98", Offset = "0x2176B98", VA = "0x2176B98")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x2176EC4", Offset = "0x2176EC4", VA = "0x2176EC4")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2176F6C", Offset = "0x2176F6C", VA = "0x2176F6C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x217716C", Offset = "0x217716C", VA = "0x217716C")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x21778EC", Offset = "0x21778EC", VA = "0x21778EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x21786D4", Offset = "0x21786D4", VA = "0x21786D4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x21788DC", Offset = "0x21788DC", VA = "0x21788DC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x2178AE4", Offset = "0x2178AE4", VA = "0x2178AE4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x2178B5C", Offset = "0x2178B5C", VA = "0x2178B5C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x2178BD4", Offset = "0x2178BD4", VA = "0x2178BD4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x2178E14", Offset = "0x2178E14", VA = "0x2178E14")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x2176330", Offset = "0x2176330", VA = "0x2176330")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x2176538", Offset = "0x2176538", VA = "0x2176538")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x2176A2C", Offset = "0x2176A2C", VA = "0x2176A2C")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x2177AC0", Offset = "0x2177AC0", VA = "0x2177AC0")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x2179160", Offset = "0x2179160", VA = "0x2179160", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x21791C8", Offset = "0x21791C8", VA = "0x21791C8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x217AAC8", Offset = "0x217AAC8", VA = "0x217AAC8")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x2177CB8", Offset = "0x2177CB8", VA = "0x2177CB8")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x2179264", Offset = "0x2179264", VA = "0x2179264")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x217AE84", Offset = "0x217AE84", VA = "0x217AE84")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x217AEE0", Offset = "0x217AEE0", VA = "0x217AEE0")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x217A918", Offset = "0x217A918", VA = "0x217A918")]
		private void Write()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x217D0B0", Offset = "0x217D0B0", VA = "0x217D0B0")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001AD")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71418", Offset = "0xC71418")]
		public Transform parent;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71450", Offset = "0xC71450")]
		public Transform child;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71488", Offset = "0xC71488")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71488", Offset = "0xC71488")]
		public float weight;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC714DC", Offset = "0xC714DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC714DC", Offset = "0xC714DC")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71530", Offset = "0xC71530")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC71530", Offset = "0xC71530")]
		public float twistAngleOffset;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1C214B4", Offset = "0x1C214B4", VA = "0x1C214B4")]
		public TwistRelaxer()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1C21550", Offset = "0x1C21550", VA = "0x1C21550")]
		public void Relax()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1C219C0", Offset = "0x1C219C0", VA = "0x1C219C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1C21F2C", Offset = "0x1C21F2C", VA = "0x1C21F2C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1C21FB8", Offset = "0x1C21FB8", VA = "0x1C21FB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1C22044", Offset = "0x1C22044", VA = "0x1C22044")]
		private void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7158C", Offset = "0xC7158C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7158C", Offset = "0xC7158C")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC715C8", Offset = "0xC715C8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC715C8", Offset = "0xC715C8")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71604", Offset = "0xC71604")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC71604", Offset = "0xC71604")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float resetTimer;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool positionWeightUsed;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool rotationWeightUsed;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool pullUsed;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		private bool reachUsed;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool pushUsed;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool pushParentUsed;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pickedUp;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool defaults;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform target;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<bool> triggered;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool started;

		[Token(Token = "0x17000176")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1C094E8", Offset = "0x1C094E8", VA = "0x1C094E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71640", Offset = "0xC71640")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x1C094E0", Offset = "0x1C094E0", VA = "0x1C094E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71650", Offset = "0xC71650")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool isPaused
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x1C094F0", Offset = "0x1C094F0", VA = "0x1C094F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71660", Offset = "0xC71660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x1C094F8", Offset = "0x1C094F8", VA = "0x1C094F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71670", Offset = "0xC71670")]
			private set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x1C09504", Offset = "0x1C09504", VA = "0x1C09504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71680", Offset = "0xC71680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x1C0950C", Offset = "0x1C0950C", VA = "0x1C0950C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71690", Offset = "0xC71690")]
			private set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public bool inInteraction
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x1C09514", Offset = "0x1C09514", VA = "0x1C09514")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017A")]
		public float progress
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x1C0CCAC", Offset = "0x1C0CCAC", VA = "0x1C0CCAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1C0945C", Offset = "0x1C0945C", VA = "0x1C0945C")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1C09588", Offset = "0x1C09588", VA = "0x1C09588")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1C09654", Offset = "0x1C09654", VA = "0x1C09654")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1C09840", Offset = "0x1C09840", VA = "0x1C09840")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1C09D74", Offset = "0x1C09D74", VA = "0x1C09D74")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1C0A388", Offset = "0x1C0A388", VA = "0x1C0A388")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1C0A408", Offset = "0x1C0A408", VA = "0x1C0A408")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1C0B264", Offset = "0x1C0B264", VA = "0x1C0B264")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1C0C15C", Offset = "0x1C0C15C", VA = "0x1C0C15C")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1C0C578", Offset = "0x1C0C578", VA = "0x1C0C578")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1C0CB18", Offset = "0x1C0CB18", VA = "0x1C0CB18")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1C0D3E8", Offset = "0x1C0D3E8", VA = "0x1C0D3E8")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AF")]
	public class InteractionLookAt
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC716A0", Offset = "0xC716A0")]
		public LookAtIK ik;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC716D8", Offset = "0xC716D8")]
		public float lerpSpeed;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71710", Offset = "0xC71710")]
		public float weightSpeed;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1C0D704", Offset = "0x1C0D704", VA = "0x1C0D704")]
		public InteractionLookAt()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1C0D718", Offset = "0x1C0D718", VA = "0x1C0D718")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1C0D914", Offset = "0x1C0D914", VA = "0x1C0D914")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1C0D9D8", Offset = "0x1C0D9D8", VA = "0x1C0D9D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1C0E010", Offset = "0x1C0E010", VA = "0x1C0E010")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1C0E16C", Offset = "0x1C0E16C", VA = "0x1C0E16C")]
		public void SolveHead()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC71758", Offset = "0xC71758")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC71758", Offset = "0xC71758")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B1")]
		public class InteractionEvent
		{
			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71AD8", Offset = "0xC71AD8")]
			public float time;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71B10", Offset = "0xC71B10")]
			public bool pause;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71B48", Offset = "0xC71B48")]
			public bool pickUp;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71B80", Offset = "0xC71B80")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71BB8", Offset = "0xC71BB8")]
			public Message[] messages;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71BF0", Offset = "0xC71BF0")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x1C0F9D4", Offset = "0x1C0F9D4", VA = "0x1C0F9D4")]
			public InteractionEvent()
			{
			}

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x1C0CCE8", Offset = "0x1C0CCE8", VA = "0x1C0CCE8")]
			public void Activate(Transform t)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B2")]
		public class Message
		{
			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71C28", Offset = "0xC71C28")]
			public string function;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71C60", Offset = "0xC71C60")]
			public GameObject recipient;

			[Token(Token = "0x4000974")]
			private const string empty = "";

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x1C0FAE8", Offset = "0x1C0FAE8", VA = "0x1C0FAE8")]
			public Message()
			{
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x1C0F9DC", Offset = "0x1C0F9DC", VA = "0x1C0F9DC")]
			public void Send(Transform t)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B3")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71C98", Offset = "0xC71C98")]
			public Animator animator;

			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71CD0", Offset = "0xC71CD0")]
			public Animation animation;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71D08", Offset = "0xC71D08")]
			public string animationState;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71D40", Offset = "0xC71D40")]
			public float crossfadeTime;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71D78", Offset = "0xC71D78")]
			public int layer;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71DB0", Offset = "0xC71DB0")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400097B")]
			private const string empty = "";

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x1C0F6A0", Offset = "0x1C0F6A0", VA = "0x1C0F6A0")]
			public AnimatorEvent()
			{
			}

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x1C0F6B4", Offset = "0x1C0F6B4", VA = "0x1C0F6B4")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x1C0F7B4", Offset = "0x1C0F7B4", VA = "0x1C0F7B4")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x1C0F8A4", Offset = "0x1C0F8A4", VA = "0x1C0F8A4")]
			private void Activate(Animation animation)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B4")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x20001B5")]
			public enum Type
			{
				[Token(Token = "0x400097F")]
				PositionWeight,
				[Token(Token = "0x4000980")]
				RotationWeight,
				[Token(Token = "0x4000981")]
				PositionOffsetX,
				[Token(Token = "0x4000982")]
				PositionOffsetY,
				[Token(Token = "0x4000983")]
				PositionOffsetZ,
				[Token(Token = "0x4000984")]
				Pull,
				[Token(Token = "0x4000985")]
				Reach,
				[Token(Token = "0x4000986")]
				RotateBoneWeight,
				[Token(Token = "0x4000987")]
				Push,
				[Token(Token = "0x4000988")]
				PushParent,
				[Token(Token = "0x4000989")]
				PoserWeight
			}

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71DE8", Offset = "0xC71DE8")]
			public Type type;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71E20", Offset = "0xC71E20")]
			public AnimationCurve curve;

			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x1C0FB00", Offset = "0x1C0FB00", VA = "0x1C0FB00")]
			public WeightCurve()
			{
			}

			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x1C0EBC0", Offset = "0x1C0EBC0", VA = "0x1C0EBC0")]
			public float GetValue(float timer)
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x20001B6")]
		public class Multiplier
		{
			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71E58", Offset = "0xC71E58")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71E90", Offset = "0xC71E90")]
			public float multiplier;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71EC8", Offset = "0xC71EC8")]
			public WeightCurve.Type result;

			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x1C0FAF0", Offset = "0x1C0FAF0", VA = "0x1C0FAF0")]
			public Multiplier()
			{
			}

			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x1C0F500", Offset = "0x1C0F500", VA = "0x1C0F500")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC717B8", Offset = "0xC717B8")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC717F0", Offset = "0xC717F0")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71828", Offset = "0xC71828")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71860", Offset = "0xC71860")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC71860", Offset = "0xC71860")]
		private float <length>k__BackingField;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7189C", Offset = "0xC7189C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7189C", Offset = "0xC7189C")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x1700017B")]
		public float length
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x1C0AC30", Offset = "0x1C0AC30", VA = "0x1C0AC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71A28", Offset = "0xC71A28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x1C0E4C4", Offset = "0x1C0E4C4", VA = "0x1C0E4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71A38", Offset = "0xC71A38")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x1C0E4CC", Offset = "0x1C0E4CC", VA = "0x1C0E4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71A48", Offset = "0xC71A48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x1C0E4D4", Offset = "0x1C0E4D4", VA = "0x1C0E4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC71A58", Offset = "0xC71A58")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x1C0E7A4", Offset = "0x1C0E7A4", VA = "0x1C0E7A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x1C0D284", Offset = "0x1C0D284", VA = "0x1C0D284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1C0E278", Offset = "0x1C0E278", VA = "0x1C0E278")]
		public InteractionObject()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1C0E2E4", Offset = "0x1C0E2E4", VA = "0x1C0E2E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC718D8", Offset = "0xC718D8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1C0E334", Offset = "0x1C0E334", VA = "0x1C0E334")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC71910", Offset = "0xC71910")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1C0E384", Offset = "0x1C0E384", VA = "0x1C0E384")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC71948", Offset = "0xC71948")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1C0E3D4", Offset = "0x1C0E3D4", VA = "0x1C0E3D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC71980", Offset = "0xC71980")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1C0E424", Offset = "0x1C0E424", VA = "0x1C0E424")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC719B8", Offset = "0xC719B8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1C0E474", Offset = "0x1C0E474", VA = "0x1C0E474")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC719F0", Offset = "0xC719F0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1C0E4DC", Offset = "0x1C0E4DC", VA = "0x1C0E4DC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1C0E83C", Offset = "0x1C0E83C", VA = "0x1C0E83C")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1C0AB48", Offset = "0x1C0AB48", VA = "0x1C0AB48")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1C0EA04", Offset = "0x1C0EA04", VA = "0x1C0EA04")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1C0A974", Offset = "0x1C0A974", VA = "0x1C0A974")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1C0AB40", Offset = "0x1C0AB40", VA = "0x1C0AB40")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1C0BB44", Offset = "0x1C0BB44", VA = "0x1C0BB44")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1C0C81C", Offset = "0x1C0C81C", VA = "0x1C0C81C")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1C0F558", Offset = "0x1C0F558", VA = "0x1C0F558")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1C0EBFC", Offset = "0x1C0EBFC", VA = "0x1C0EBFC")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1C0EA0C", Offset = "0x1C0EA0C", VA = "0x1C0EA0C")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1C0F45C", Offset = "0x1C0F45C", VA = "0x1C0F45C")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1C0F55C", Offset = "0x1C0F55C", VA = "0x1C0F55C")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1C0F600", Offset = "0x1C0F600", VA = "0x1C0F600")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC71A68", Offset = "0xC71A68")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1C0F650", Offset = "0x1C0F650", VA = "0x1C0F650")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC71AA0", Offset = "0xC71AA0")]
		private void OpenScriptReference()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC71F00", Offset = "0xC71F00")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC71F00", Offset = "0xC71F00")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x20001B8")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x20001B9")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71F60", Offset = "0xC71F60")]
		public string targetTag;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71F98", Offset = "0xC71F98")]
		public float fadeInTime;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC71FD0", Offset = "0xC71FD0")]
		public float speed;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72008", Offset = "0xC72008")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC72040", Offset = "0xC72040")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72040", Offset = "0xC72040")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC72040", Offset = "0xC72040")]
		public Collider characterCollider;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC720C4", Offset = "0xC720C4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC720C4", Offset = "0xC720C4")]
		public Transform FPSCamera;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72124", Offset = "0xC72124")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7215C", Offset = "0xC7215C")]
		public float camRaycastDistance;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC72194", Offset = "0xC72194")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC72194", Offset = "0xC72194")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC721D0", Offset = "0xC721D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC721D0", Offset = "0xC721D0")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72230", Offset = "0xC72230")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x1700017F")]
		public bool inInteraction
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x1C1010C", Offset = "0x1C1010C", VA = "0x1C1010C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x1C0964C", Offset = "0x1C0964C", VA = "0x1C0964C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x1C1279C", Offset = "0x1C1279C", VA = "0x1C1279C")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x1C11438", Offset = "0x1C11438", VA = "0x1C11438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC723B8", Offset = "0xC723B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x1C127A4", Offset = "0x1C127A4", VA = "0x1C127A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC723C8", Offset = "0xC723C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1C0FB08", Offset = "0x1C0FB08", VA = "0x1C0FB08")]
		public InteractionSystem()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1C0FF2C", Offset = "0x1C0FF2C", VA = "0x1C0FF2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72268", Offset = "0xC72268")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1C0FF7C", Offset = "0x1C0FF7C", VA = "0x1C0FF7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC722A0", Offset = "0xC722A0")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1C0FFCC", Offset = "0x1C0FFCC", VA = "0x1C0FFCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC722D8", Offset = "0xC722D8")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1C1001C", Offset = "0x1C1001C", VA = "0x1C1001C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72310", Offset = "0xC72310")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1C1006C", Offset = "0x1C1006C", VA = "0x1C1006C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72348", Offset = "0xC72348")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1C100BC", Offset = "0x1C100BC", VA = "0x1C100BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72380", Offset = "0xC72380")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1C102DC", Offset = "0x1C102DC", VA = "0x1C102DC")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1C10408", Offset = "0x1C10408", VA = "0x1C10408")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1C10534", Offset = "0x1C10534", VA = "0x1C10534")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1C10614", Offset = "0x1C10614", VA = "0x1C10614")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1C10768", Offset = "0x1C10768", VA = "0x1C10768")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1C108F8", Offset = "0x1C108F8", VA = "0x1C108F8")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1C109EC", Offset = "0x1C109EC", VA = "0x1C109EC")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1C10AE0", Offset = "0x1C10AE0", VA = "0x1C10AE0")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1C10BD4", Offset = "0x1C10BD4", VA = "0x1C10BD4")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1C10C6C", Offset = "0x1C10C6C", VA = "0x1C10C6C")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1C10D04", Offset = "0x1C10D04", VA = "0x1C10D04")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1C10D90", Offset = "0x1C10D90", VA = "0x1C10D90")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1C10E74", Offset = "0x1C10E74", VA = "0x1C10E74")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1C10F7C", Offset = "0x1C10F7C", VA = "0x1C10F7C")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1C11098", Offset = "0x1C11098", VA = "0x1C11098")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1C11440", Offset = "0x1C11440", VA = "0x1C11440")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1C116C0", Offset = "0x1C116C0", VA = "0x1C116C0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1C11A40", Offset = "0x1C11A40", VA = "0x1C11A40")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1C11DD0", Offset = "0x1C11DD0", VA = "0x1C11DD0")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1C11E28", Offset = "0x1C11E28", VA = "0x1C11E28")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1C11F00", Offset = "0x1C11F00", VA = "0x1C11F00")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1C1206C", Offset = "0x1C1206C", VA = "0x1C1206C")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1C1221C", Offset = "0x1C1221C", VA = "0x1C1221C")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1C12658", Offset = "0x1C12658", VA = "0x1C12658")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1C11B68", Offset = "0x1C11B68", VA = "0x1C11B68")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1C127AC", Offset = "0x1C127AC", VA = "0x1C127AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1C130D4", Offset = "0x1C130D4", VA = "0x1C130D4")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1C13100", Offset = "0x1C13100", VA = "0x1C13100")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1C13128", Offset = "0x1C13128", VA = "0x1C13128")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1C13150", Offset = "0x1C13150", VA = "0x1C13150")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1C131CC", Offset = "0x1C131CC", VA = "0x1C131CC")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1C1330C", Offset = "0x1C1330C", VA = "0x1C1330C")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1C13420", Offset = "0x1C13420", VA = "0x1C13420")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1C137E0", Offset = "0x1C137E0", VA = "0x1C137E0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1C138DC", Offset = "0x1C138DC", VA = "0x1C138DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1C13B8C", Offset = "0x1C13B8C", VA = "0x1C13B8C")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1C12DFC", Offset = "0x1C12DFC", VA = "0x1C12DFC")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1C13CEC", Offset = "0x1C13CEC", VA = "0x1C13CEC")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1C13E70", Offset = "0x1C13E70", VA = "0x1C13E70")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1C13F24", Offset = "0x1C13F24", VA = "0x1C13F24")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1C14044", Offset = "0x1C14044", VA = "0x1C14044")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1C1406C", Offset = "0x1C1406C", VA = "0x1C1406C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1C101EC", Offset = "0x1C101EC", VA = "0x1C101EC")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1C1130C", Offset = "0x1C1130C", VA = "0x1C1130C")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1C1456C", Offset = "0x1C1456C", VA = "0x1C1456C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC723D8", Offset = "0xC723D8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1C145BC", Offset = "0x1C145BC", VA = "0x1C145BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72410", Offset = "0xC72410")]
		private void OpenScriptReference()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC72448", Offset = "0xC72448")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC72448", Offset = "0xC72448")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001BB")]
		public class Multiplier
		{
			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72828", Offset = "0xC72828")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72860", Offset = "0xC72860")]
			public float multiplier;

			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x1C14C28", Offset = "0x1C14C28", VA = "0x1C14C28")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC724A8", Offset = "0xC724A8")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC724E0", Offset = "0xC724E0")]
		public Multiplier[] multipliers;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72518", Offset = "0xC72518")]
		public float interactionSpeedMlp;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72550", Offset = "0xC72550")]
		public Transform pivot;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72588", Offset = "0xC72588")]
		public Vector3 twistAxis;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC725C0", Offset = "0xC725C0")]
		public float twistWeight;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC725F8", Offset = "0xC725F8")]
		public float swingWeight;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72630", Offset = "0xC72630")]
		public bool rotateOnce;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1C14780", Offset = "0x1C14780", VA = "0x1C14780")]
		public InteractionTarget()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1C14810", Offset = "0x1C14810", VA = "0x1C14810")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72668", Offset = "0xC72668")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1C14860", Offset = "0x1C14860", VA = "0x1C14860")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC726A0", Offset = "0xC726A0")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1C148B0", Offset = "0x1C148B0", VA = "0x1C148B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC726D8", Offset = "0xC726D8")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1C14900", Offset = "0x1C14900", VA = "0x1C14900")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72710", Offset = "0xC72710")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1C14950", Offset = "0x1C14950", VA = "0x1C14950")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72748", Offset = "0xC72748")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1C149A0", Offset = "0x1C149A0", VA = "0x1C149A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72780", Offset = "0xC72780")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1C0EAE0", Offset = "0x1C0EAE0", VA = "0x1C0EAE0")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1C0D31C", Offset = "0x1C0D31C", VA = "0x1C0D31C")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1C0AC38", Offset = "0x1C0AC38", VA = "0x1C0AC38")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1C14B88", Offset = "0x1C14B88", VA = "0x1C14B88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC727B8", Offset = "0xC727B8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1C14BD8", Offset = "0x1C14BD8", VA = "0x1C14BD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC727F0", Offset = "0xC727F0")]
		private void OpenScriptReference()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC72898", Offset = "0xC72898")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC72898", Offset = "0xC72898")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001BD")]
		public class CharacterPosition
		{
			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC729D8", Offset = "0xC729D8")]
			public bool use;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72A10", Offset = "0xC72A10")]
			public Vector2 offset;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72A48", Offset = "0xC72A48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72A48", Offset = "0xC72A48")]
			public float angleOffset;

			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72AA4", Offset = "0xC72AA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72AA4", Offset = "0xC72AA4")]
			public float maxAngle;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72AFC", Offset = "0xC72AFC")]
			public float radius;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72B34", Offset = "0xC72B34")]
			public bool orbit;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72B6C", Offset = "0xC72B6C")]
			public bool fixYAxis;

			[Token(Token = "0x17000182")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000C71")]
				[Address(RVA = "0x1C15460", Offset = "0x1C15460", VA = "0x1C15460")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000183")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000C72")]
				[Address(RVA = "0x1C1549C", Offset = "0x1C1549C", VA = "0x1C1549C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x1C1544C", Offset = "0x1C1544C", VA = "0x1C1544C")]
			public CharacterPosition()
			{
			}

			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x1C155A4", Offset = "0x1C155A4", VA = "0x1C155A4")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001BE")]
		public class CameraPosition
		{
			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72BA4", Offset = "0xC72BA4")]
			public Collider lookAtTarget;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72BDC", Offset = "0xC72BDC")]
			public Vector3 direction;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72C14", Offset = "0xC72C14")]
			public float maxDistance;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72C4C", Offset = "0xC72C4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72C4C", Offset = "0xC72C4C")]
			public float maxAngle;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72CA4", Offset = "0xC72CA4")]
			public bool fixYAxis;

			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x1C14ECC", Offset = "0x1C14ECC", VA = "0x1C14ECC")]
			public CameraPosition()
			{
			}

			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x1C14F60", Offset = "0x1C14F60", VA = "0x1C14F60")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x1C15140", Offset = "0x1C15140", VA = "0x1C15140")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001BF")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x20001C0")]
			public class Interaction
			{
				[Token(Token = "0x40009C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72DF4", Offset = "0xC72DF4")]
				public InteractionObject interactionObject;

				[Token(Token = "0x40009C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72E2C", Offset = "0xC72E2C")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6000C79")]
				[Address(RVA = "0x1C15CC8", Offset = "0x1C15CC8", VA = "0x1C15CC8")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72D4C", Offset = "0xC72D4C")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72D84", Offset = "0xC72D84")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72DBC", Offset = "0xC72DBC")]
			public Interaction[] interactions;

			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x1C15CB8", Offset = "0x1C15CB8", VA = "0x1C15CB8")]
			public Range()
			{
			}

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x1C14D90", Offset = "0x1C14D90", VA = "0x1C14D90")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC728F8", Offset = "0xC728F8")]
		public Range[] ranges;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1C14C30", Offset = "0x1C14C30", VA = "0x1C14C30")]
		public InteractionTrigger()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1C14C9C", Offset = "0x1C14C9C", VA = "0x1C14C9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72930", Offset = "0xC72930")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1C14CEC", Offset = "0x1C14CEC", VA = "0x1C14CEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72968", Offset = "0xC72968")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1C14D3C", Offset = "0x1C14D3C", VA = "0x1C14D3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC729A0", Offset = "0xC729A0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1C14D8C", Offset = "0x1C14D8C", VA = "0x1C14D8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1C135FC", Offset = "0x1C135FC", VA = "0x1C135FC")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001C1")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20001C2")]
		public class Map
		{
			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x1DC0BB0", Offset = "0x1DC0BB0", VA = "0x1DC0BB0")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x1DC10C4", Offset = "0x1DC10C4", VA = "0x1DC10C4")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x1DC1040", Offset = "0x1DC1040", VA = "0x1DC1040")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x1DC0DB0", Offset = "0x1DC0DB0", VA = "0x1DC0DB0")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1DC0824", Offset = "0x1DC0824", VA = "0x1DC0824")]
		public GenericPoser()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1DC082C", Offset = "0x1DC082C", VA = "0x1DC082C", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC72E64", Offset = "0xC72E64")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1DC0C78", Offset = "0x1DC0C78", VA = "0x1DC0C78", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1DC0C7C", Offset = "0x1DC0C7C", VA = "0x1DC0C7C", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1DC0FB4", Offset = "0x1DC0FB4", VA = "0x1DC0FB4", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1DC0BEC", Offset = "0x1DC0BEC", VA = "0x1DC0BEC")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1DC0AE8", Offset = "0x1DC0AE8", VA = "0x1DC0AE8")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1DCD394", Offset = "0x1DCD394", VA = "0x1DCD394")]
		public HandPoser()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1DCD39C", Offset = "0x1DCD39C", VA = "0x1DCD39C", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1DCD468", Offset = "0x1DCD468", VA = "0x1DCD468", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1DCD6B8", Offset = "0x1DCD6B8", VA = "0x1DCD6B8", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1DCD7F4", Offset = "0x1DCD7F4", VA = "0x1DCD7F4", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1DCD4C4", Offset = "0x1DCD4C4", VA = "0x1DCD4C4")]
		protected void StoreDefaultState()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72E9C", Offset = "0xC72E9C")]
		public float weight;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72EB4", Offset = "0xC72EB4")]
		public float localRotationWeight;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC72ECC", Offset = "0xC72ECC")]
		public float localPositionWeight;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1C18FEC", Offset = "0x1C18FEC", VA = "0x1C18FEC")]
		protected Poser()
		{
		}

		[Token(Token = "0x6000C8C")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1C18FFC", Offset = "0x1C18FFC", VA = "0x1C18FFC")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000C8E")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000C8F")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000C90")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1C19008", Offset = "0x1C19008", VA = "0x1C19008", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1C1905C", Offset = "0x1C1905C", VA = "0x1C1905C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1C19098", Offset = "0x1C19098", VA = "0x1C19098", Slot = "6")]
		protected override void FixTransforms()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC72EE4", Offset = "0xC72EE4")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20001C6")]
		public class Rigidbone
		{
			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x1C19884", Offset = "0x1C19884", VA = "0x1C19884")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x1C1A770", Offset = "0x1C1A770", VA = "0x1C1A770")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x1C1A4C0", Offset = "0x1C1A4C0", VA = "0x1C1A4C0")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20001C7")]
		public class Child
		{
			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x1C19A10", Offset = "0x1C19A10", VA = "0x1C19A10")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x1C1A938", Offset = "0x1C1A938", VA = "0x1C1A938")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x1C1A8DC", Offset = "0x1C1A8DC", VA = "0x1C1A8DC")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC73070", Offset = "0xC73070")]
		private sealed class <DisableRagdollSmooth>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal RagdollUtility $this;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600140E")]
				[Address(RVA = "0x1C1B0AC", Offset = "0x1C1B0AC", VA = "0x1C1B0AC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140F")]
				[Address(RVA = "0x1C1B0B4", Offset = "0x1C1B0B4", VA = "0x1C1B0B4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600140C")]
			[Address(RVA = "0x1C19A78", Offset = "0x1C19A78", VA = "0x1C19A78")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>c__Iterator0()
			{
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0x1C1ACC8", Offset = "0x1C1ACC8", VA = "0x1C1ACC8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1C1B0BC", Offset = "0x1C1B0BC", VA = "0x1C1B0BC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001411")]
			[Address(RVA = "0x1C1B0D0", Offset = "0x1C1B0D0", VA = "0x1C1B0D0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72F48", Offset = "0xC72F48")]
		public IK ik;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72F80", Offset = "0xC72F80")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72FB8", Offset = "0xC72FB8")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC72FF0", Offset = "0xC72FF0")]
		public float applyVelocity;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73028", Offset = "0xC73028")]
		public float applyAngularVelocity;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x17000184")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x1C191FC", Offset = "0x1C191FC", VA = "0x1C191FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000185")]
		private bool ikUsed
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x1C19F48", Offset = "0x1C19F48", VA = "0x1C19F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1C190B0", Offset = "0x1C190B0", VA = "0x1C190B0")]
		public RagdollUtility()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1C191C0", Offset = "0x1C191C0", VA = "0x1C191C0")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1C1928C", Offset = "0x1C1928C", VA = "0x1C1928C")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1C193C8", Offset = "0x1C193C8", VA = "0x1C193C8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1C1935C", Offset = "0x1C1935C", VA = "0x1C1935C")]
		[DebuggerHidden]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1C19A80", Offset = "0x1C19A80", VA = "0x1C19A80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1C19DB4", Offset = "0x1C19DB4", VA = "0x1C19DB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1C19E7C", Offset = "0x1C19E7C", VA = "0x1C19E7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1C1A100", Offset = "0x1C1A100", VA = "0x1C1A100")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1C19F0C", Offset = "0x1C19F0C", VA = "0x1C19F0C")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1C1A0B8", Offset = "0x1C1A0B8", VA = "0x1C1A0B8")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1C1A1AC", Offset = "0x1C1A1AC", VA = "0x1C1A1AC")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1C1A134", Offset = "0x1C1A134", VA = "0x1C1A134")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1C192E4", Offset = "0x1C192E4", VA = "0x1C192E4")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1C19DF4", Offset = "0x1C19DF4", VA = "0x1C19DF4")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1C1AB64", Offset = "0x1C1AB64", VA = "0x1C1AB64")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool initiated;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool applicationQuit;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x17000186")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x1C1CEFC", Offset = "0x1C1CEFC", VA = "0x1C1CEFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000187")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x1C1CF38", Offset = "0x1C1CF38", VA = "0x1C1CF38")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1C1CAA0", Offset = "0x1C1CAA0", VA = "0x1C1CAA0")]
		protected RotationLimit()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1C1CB1C", Offset = "0x1C1CB1C", VA = "0x1C1CB1C")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1C1CB68", Offset = "0x1C1CB68", VA = "0x1C1CB68")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1C1CE10", Offset = "0x1C1CE10", VA = "0x1C1CE10")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1C1CEC4", Offset = "0x1C1CEC4", VA = "0x1C1CEC4")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000CB3")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1C1CD14", Offset = "0x1C1CD14", VA = "0x1C1CD14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1C1D00C", Offset = "0x1C1D00C", VA = "0x1C1D00C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1C1D010", Offset = "0x1C1D010", VA = "0x1C1D010")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1C1D048", Offset = "0x1C1D048", VA = "0x1C1D048")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1C1D138", Offset = "0x1C1D138", VA = "0x1C1D138")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1C1D3D8", Offset = "0x1C1D3D8", VA = "0x1C1D3D8")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC730E0", Offset = "0xC730E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC730E0", Offset = "0xC730E0")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73140", Offset = "0xC73140")]
		public float limit;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7315C", Offset = "0xC7315C")]
		public float twistLimit;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1C1D4A0", Offset = "0x1C1D4A0", VA = "0x1C1D4A0")]
		public RotationLimitAngle()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1C1D4B0", Offset = "0x1C1D4B0", VA = "0x1C1D4B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73178", Offset = "0xC73178")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1C1D500", Offset = "0x1C1D500", VA = "0x1C1D500")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC731B0", Offset = "0xC731B0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1C1D550", Offset = "0x1C1D550", VA = "0x1C1D550")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC731E8", Offset = "0xC731E8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1C1D5A0", Offset = "0x1C1D5A0", VA = "0x1C1D5A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73220", Offset = "0xC73220")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1C1D5F0", Offset = "0x1C1D5F0", VA = "0x1C1D5F0", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1C1D6A8", Offset = "0x1C1D6A8", VA = "0x1C1D6A8")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC73258", Offset = "0xC73258")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC73258", Offset = "0xC73258")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool useLimits;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float min;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float max;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastAngle;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1C1D924", Offset = "0x1C1D924", VA = "0x1C1D924")]
		public RotationLimitHinge()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1C1D9B0", Offset = "0x1C1D9B0", VA = "0x1C1D9B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC732C8", Offset = "0xC732C8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1C1DA00", Offset = "0x1C1DA00", VA = "0x1C1DA00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73300", Offset = "0xC73300")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1C1DA50", Offset = "0x1C1DA50", VA = "0x1C1DA50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73338", Offset = "0xC73338")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1C1DAA0", Offset = "0x1C1DAA0", VA = "0x1C1DAA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73370", Offset = "0xC73370")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1C1DAF0", Offset = "0x1C1DAF0", VA = "0x1C1DAF0", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1C1DB18", Offset = "0x1C1DB18", VA = "0x1C1DB18")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC733A8", Offset = "0xC733A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC733A8", Offset = "0xC733A8")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20001CC")]
		public class ReachCone
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000188")]
			public Vector3 o
			{
				[Token(Token = "0x6000CD9")]
				[Address(RVA = "0x1C20304", Offset = "0x1C20304", VA = "0x1C20304")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000189")]
			public Vector3 a
			{
				[Token(Token = "0x6000CDA")]
				[Address(RVA = "0x1C20344", Offset = "0x1C20344", VA = "0x1C20344")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700018A")]
			public Vector3 b
			{
				[Token(Token = "0x6000CDB")]
				[Address(RVA = "0x1C20388", Offset = "0x1C20388", VA = "0x1C20388")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700018B")]
			public Vector3 c
			{
				[Token(Token = "0x6000CDC")]
				[Address(RVA = "0x1C203CC", Offset = "0x1C203CC", VA = "0x1C203CC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700018C")]
			public bool isValid
			{
				[Token(Token = "0x6000CDD")]
				[Address(RVA = "0x1C1F234", Offset = "0x1C1F234", VA = "0x1C1F234")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x1C1FA08", Offset = "0x1C1FA08", VA = "0x1C1FA08")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x1C1FBB0", Offset = "0x1C1FBB0", VA = "0x1C1FBB0")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001CD")]
		public class LimitPoint
		{
			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x1C1F244", Offset = "0x1C1F244", VA = "0x1C1F244")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73408", Offset = "0xC73408")]
		public float twistLimit;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73424", Offset = "0xC73424")]
		public int smoothIterations;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1C1DE44", Offset = "0x1C1DE44", VA = "0x1C1DE44")]
		public RotationLimitPolygonal()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1C1DEB4", Offset = "0x1C1DEB4", VA = "0x1C1DEB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC734E4", Offset = "0xC734E4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1C1DF04", Offset = "0x1C1DF04", VA = "0x1C1DF04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC7351C", Offset = "0xC7351C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1C1DF54", Offset = "0x1C1DF54", VA = "0x1C1DF54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73554", Offset = "0xC73554")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1C1DFA4", Offset = "0x1C1DFA4", VA = "0x1C1DFA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC7358C", Offset = "0xC7358C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1C1DFF4", Offset = "0x1C1DFF4", VA = "0x1C1DFF4")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1C1E610", Offset = "0x1C1E610", VA = "0x1C1E610", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1C1E708", Offset = "0x1C1E708", VA = "0x1C1E708")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1C1EDC0", Offset = "0x1C1EDC0", VA = "0x1C1EDC0")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1C1E098", Offset = "0x1C1E098", VA = "0x1C1E098")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1C1F2CC", Offset = "0x1C1F2CC", VA = "0x1C1F2CC")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1C1FD88", Offset = "0x1C1FD88", VA = "0x1C1FD88")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1C1FDEC", Offset = "0x1C1FDEC", VA = "0x1C1FDEC")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1C1FF48", Offset = "0x1C1FF48", VA = "0x1C1FF48")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1C1EA3C", Offset = "0x1C1EA3C", VA = "0x1C1EA3C")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1C200F4", Offset = "0x1C200F4", VA = "0x1C200F4")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC735C4", Offset = "0xC735C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC735C4", Offset = "0xC735C4")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73624", Offset = "0xC73624")]
		public float twistLimit;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1C20410", Offset = "0x1C20410", VA = "0x1C20410")]
		public RotationLimitSpline()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1C2041C", Offset = "0x1C2041C", VA = "0x1C2041C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73678", Offset = "0xC73678")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1C2046C", Offset = "0x1C2046C", VA = "0x1C2046C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC736B0", Offset = "0xC736B0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1C204BC", Offset = "0x1C204BC", VA = "0x1C204BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC736E8", Offset = "0xC736E8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1C2050C", Offset = "0x1C2050C", VA = "0x1C2050C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC73720", Offset = "0xC73720")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1C2055C", Offset = "0x1C2055C", VA = "0x1C2055C")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1C20590", Offset = "0x1C20590", VA = "0x1C20590", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1C20648", Offset = "0x1C20648", VA = "0x1C20648")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20001CF")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC73BF8", Offset = "0xC73BF8")]
		private sealed class <TurnToTarget>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AimController $this;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002B8")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001414")]
				[Address(RVA = "0x1DB0438", Offset = "0x1DB0438", VA = "0x1DB0438", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001415")]
				[Address(RVA = "0x1DB0440", Offset = "0x1DB0440", VA = "0x1DB0440", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1DB0254", Offset = "0x1DB0254", VA = "0x1DB0254")]
			[DebuggerHidden]
			public <TurnToTarget>c__Iterator0()
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x1DB025C", Offset = "0x1DB025C", VA = "0x1DB025C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x1DB0448", Offset = "0x1DB0448", VA = "0x1DB0448", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001417")]
			[Address(RVA = "0x1DB045C", Offset = "0x1DB045C", VA = "0x1DB045C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73758", Offset = "0xC73758")]
		public AimIK ik;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73790", Offset = "0xC73790")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73790", Offset = "0xC73790")]
		public float weight;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC737E4", Offset = "0xC737E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC737E4", Offset = "0xC737E4")]
		public Transform target;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73844", Offset = "0xC73844")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7387C", Offset = "0xC7387C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC738B4", Offset = "0xC738B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC738B4", Offset = "0xC738B4")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73914", Offset = "0xC73914")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7394C", Offset = "0xC7394C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73984", Offset = "0xC73984")]
		public float slerpSpeed;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC739BC", Offset = "0xC739BC")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC739F4", Offset = "0xC739F4")]
		public float minDistance;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73A2C", Offset = "0xC73A2C")]
		public Vector3 offset;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC73A64", Offset = "0xC73A64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73A64", Offset = "0xC73A64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC73A64", Offset = "0xC73A64")]
		public float maxRootAngle;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73AE0", Offset = "0xC73AE0")]
		public bool turnToTarget;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73B18", Offset = "0xC73B18")]
		public float turnToTargetTime;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC73B50", Offset = "0xC73B50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73B50", Offset = "0xC73B50")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73BB0", Offset = "0xC73BB0")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x1700018D")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x1DAF1DC", Offset = "0x1DAF1DC", VA = "0x1DAF1DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1DAEFE0", Offset = "0x1DAEFE0", VA = "0x1DAEFE0")]
		public AimController()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1DAF0C0", Offset = "0x1DAF0C0", VA = "0x1DAF0C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1DAF354", Offset = "0x1DAF354", VA = "0x1DAF354")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1DAFC20", Offset = "0x1DAFC20", VA = "0x1DAFC20")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1DAFDEC", Offset = "0x1DAFDEC", VA = "0x1DAFDEC")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1DB01E8", Offset = "0x1DB01E8", VA = "0x1DB01E8")]
		[DebuggerHidden]
		private IEnumerator TurnToTarget()
		{
			return null;
		}
	}
	[Token(Token = "0x20001D0")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001D1")]
		public class Pose
		{
			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x1DB0C3C", Offset = "0x1DB0C3C", VA = "0x1DB0C3C")]
			public Pose()
			{
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x1DB0878", Offset = "0x1DB0878", VA = "0x1DB0878")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x1DB0C34", Offset = "0x1DB0C34", VA = "0x1DB0C34")]
			public void SetAngleBuffer(float value)
			{
			}
		}

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1DB06C8", Offset = "0x1DB06C8", VA = "0x1DB06C8")]
		public AimPoser()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1DB073C", Offset = "0x1DB073C", VA = "0x1DB073C")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1DB0B58", Offset = "0x1DB0B58", VA = "0x1DB0B58")]
		public void SetPoseActive(Pose pose)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001D3")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20001D4")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A39")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73DE0", Offset = "0xC73DE0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73E18", Offset = "0xC73E18")]
				public float weight;

				[Token(Token = "0x6000CFA")]
				[Address(RVA = "0x1DB1374", Offset = "0x1DB1374", VA = "0x1DB1374")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73C90", Offset = "0xC73C90")]
			public Transform transform;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73CC8", Offset = "0xC73CC8")]
			public Transform relativeTo;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73D00", Offset = "0xC73D00")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73D38", Offset = "0xC73D38")]
			public float verticalWeight;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73D70", Offset = "0xC73D70")]
			public float horizontalWeight;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73DA8", Offset = "0xC73DA8")]
			public float speed;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x1DB134C", Offset = "0x1DB134C", VA = "0x1DB134C")]
			public Body()
			{
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1DB0DAC", Offset = "0x1DB0DAC", VA = "0x1DB0DAC")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x1DB1364", Offset = "0x1DB1364", VA = "0x1DB1364")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73C58", Offset = "0xC73C58")]
		public Body[] bodies;

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1DB0C58", Offset = "0x1DB0C58", VA = "0x1DB0C58")]
		public Amplifier()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1DB0C60", Offset = "0x1DB0C60", VA = "0x1DB0C60", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73E50", Offset = "0xC73E50")]
		public float tiltSpeed;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73E88", Offset = "0xC73E88")]
		public float tiltSensitivity;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73EC0", Offset = "0xC73EC0")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73EF8", Offset = "0xC73EF8")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1DB2F78", Offset = "0x1DB2F78", VA = "0x1DB2F78")]
		public BodyTilt()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1DB2F90", Offset = "0x1DB2F90", VA = "0x1DB2F90", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1DB2FE0", Offset = "0x1DB2FE0", VA = "0x1DB2FE0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001D7")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73FA0", Offset = "0xC73FA0")]
			public string name;

			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73FD8", Offset = "0xC73FD8")]
			public Collider collider;

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74010", Offset = "0xC74010")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7405C", Offset = "0xC7405C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7405C", Offset = "0xC7405C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC74098", Offset = "0xC74098")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC74098", Offset = "0xC74098")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC740D4", Offset = "0xC740D4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC740D4", Offset = "0xC740D4")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC74110", Offset = "0xC74110")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC74110", Offset = "0xC74110")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700018F")]
			public bool inProgress
			{
				[Token(Token = "0x6000D03")]
				[Address(RVA = "0x1DCDDC4", Offset = "0x1DCDDC4", VA = "0x1DCDDC4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000190")]
			protected float crossFader
			{
				[Token(Token = "0x6000D04")]
				[Address(RVA = "0x1DCE414", Offset = "0x1DCE414", VA = "0x1DCE414")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7414C", Offset = "0xC7414C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D05")]
				[Address(RVA = "0x1DCE41C", Offset = "0x1DCE41C", VA = "0x1DCE41C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7415C", Offset = "0xC7415C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000191")]
			protected float timer
			{
				[Token(Token = "0x6000D06")]
				[Address(RVA = "0x1DCE40C", Offset = "0x1DCE40C", VA = "0x1DCE40C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7416C", Offset = "0xC7416C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D07")]
				[Address(RVA = "0x1DCE424", Offset = "0x1DCE424", VA = "0x1DCE424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7417C", Offset = "0xC7417C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000192")]
			protected Vector3 force
			{
				[Token(Token = "0x6000D08")]
				[Address(RVA = "0x1DCE42C", Offset = "0x1DCE42C", VA = "0x1DCE42C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7418C", Offset = "0xC7418C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D09")]
				[Address(RVA = "0x1DCE438", Offset = "0x1DCE438", VA = "0x1DCE438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7419C", Offset = "0xC7419C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000193")]
			protected Vector3 point
			{
				[Token(Token = "0x6000D0A")]
				[Address(RVA = "0x1DCE444", Offset = "0x1DCE444", VA = "0x1DCE444")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC741AC", Offset = "0xC741AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D0B")]
				[Address(RVA = "0x1DCE450", Offset = "0x1DCE450", VA = "0x1DCE450")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC741BC", Offset = "0xC741BC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x1DCE3F8", Offset = "0x1DCE3F8", VA = "0x1DCE3F8")]
			protected HitPoint()
			{
			}

			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x1DCE2C8", Offset = "0x1DCE2C8", VA = "0x1DCE2C8")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x1DCDEF4", Offset = "0x1DCDEF4", VA = "0x1DCDEF4")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000D0E")]
			protected abstract float GetLength();

			[Token(Token = "0x6000D0F")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000D10")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20001D9")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74274", Offset = "0xC74274")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC742AC", Offset = "0xC742AC")]
				public float weight;

				[Token(Token = "0x4000A52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000D15")]
				[Address(RVA = "0x1DCF0AC", Offset = "0x1DCF0AC", VA = "0x1DCF0AC")]
				public EffectorLink()
				{
				}

				[Token(Token = "0x6000D16")]
				[Address(RVA = "0x1DCEF5C", Offset = "0x1DCEF5C", VA = "0x1DCEF5C")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000D17")]
				[Address(RVA = "0x1DCECF8", Offset = "0x1DCECF8", VA = "0x1DCECF8")]
				public void CrossFadeStart()
				{
				}
			}

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC741CC", Offset = "0xC741CC")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74204", Offset = "0xC74204")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7423C", Offset = "0xC7423C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x1DCEA88", Offset = "0x1DCEA88", VA = "0x1DCEA88")]
			public HitPointEffector()
			{
			}

			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x1DCEA9C", Offset = "0x1DCEA9C", VA = "0x1DCEA9C", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x1DCEC78", Offset = "0x1DCEC78", VA = "0x1DCEC78", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x1DCED0C", Offset = "0x1DCED0C", VA = "0x1DCED0C", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DA")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20001DB")]
			public class BoneLink
			{
				[Token(Token = "0x4000A57")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74354", Offset = "0xC74354")]
				public Transform bone;

				[Token(Token = "0x4000A58")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7438C", Offset = "0xC7438C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7438C", Offset = "0xC7438C")]
				public float weight;

				[Token(Token = "0x4000A59")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A5A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6000D1C")]
				[Address(RVA = "0x1DCE9F8", Offset = "0x1DCE9F8", VA = "0x1DCE9F8")]
				public BoneLink()
				{
				}

				[Token(Token = "0x6000D1D")]
				[Address(RVA = "0x1DCE864", Offset = "0x1DCE864", VA = "0x1DCE864")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000D1E")]
				[Address(RVA = "0x1DCE5B0", Offset = "0x1DCE5B0", VA = "0x1DCE5B0")]
				public void CrossFadeStart()
				{
				}
			}

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC742E4", Offset = "0xC742E4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7431C", Offset = "0xC7431C")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x1DCE45C", Offset = "0x1DCE45C", VA = "0x1DCE45C")]
			public HitPointBone()
			{
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x1DCE470", Offset = "0x1DCE470", VA = "0x1DCE470", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x1DCE538", Offset = "0x1DCE538", VA = "0x1DCE538", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1DCE5BC", Offset = "0x1DCE5BC", VA = "0x1DCE5BC", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}
		}

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73F30", Offset = "0xC73F30")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC73F68", Offset = "0xC73F68")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x1700018E")]
		public bool inProgress
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x1DCDCE0", Offset = "0x1DCDCE0", VA = "0x1DCDCE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1DCDCD8", Offset = "0x1DCDCD8", VA = "0x1DCDCD8")]
		public HitReaction()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1DCDDD8", Offset = "0x1DCDDD8", VA = "0x1DCDDD8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1DCE050", Offset = "0x1DCE050", VA = "0x1DCE050")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20001DD")]
		public abstract class Offset
		{
			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74450", Offset = "0xC74450")]
			public string name;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74488", Offset = "0xC74488")]
			public Collider collider;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC744C0", Offset = "0xC744C0")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7450C", Offset = "0xC7450C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7450C", Offset = "0xC7450C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC74548", Offset = "0xC74548")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC74548", Offset = "0xC74548")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC74584", Offset = "0xC74584")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC74584", Offset = "0xC74584")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC745C0", Offset = "0xC745C0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC745C0", Offset = "0xC745C0")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000194")]
			protected float crossFader
			{
				[Token(Token = "0x6000D23")]
				[Address(RVA = "0x1DCF714", Offset = "0x1DCF714", VA = "0x1DCF714")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC745FC", Offset = "0xC745FC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D24")]
				[Address(RVA = "0x1DCF71C", Offset = "0x1DCF71C", VA = "0x1DCF71C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7460C", Offset = "0xC7460C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000195")]
			protected float timer
			{
				[Token(Token = "0x6000D25")]
				[Address(RVA = "0x1DCF724", Offset = "0x1DCF724", VA = "0x1DCF724")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7461C", Offset = "0xC7461C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D26")]
				[Address(RVA = "0x1DCF72C", Offset = "0x1DCF72C", VA = "0x1DCF72C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7462C", Offset = "0xC7462C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000196")]
			protected Vector3 force
			{
				[Token(Token = "0x6000D27")]
				[Address(RVA = "0x1DCF734", Offset = "0x1DCF734", VA = "0x1DCF734")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7463C", Offset = "0xC7463C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D28")]
				[Address(RVA = "0x1DCF740", Offset = "0x1DCF740", VA = "0x1DCF740")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7464C", Offset = "0xC7464C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000197")]
			protected Vector3 point
			{
				[Token(Token = "0x6000D29")]
				[Address(RVA = "0x1DCF74C", Offset = "0x1DCF74C", VA = "0x1DCF74C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7465C", Offset = "0xC7465C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D2A")]
				[Address(RVA = "0x1DCF758", Offset = "0x1DCF758", VA = "0x1DCF758")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7466C", Offset = "0xC7466C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x1DCF700", Offset = "0x1DCF700", VA = "0x1DCF700")]
			protected Offset()
			{
			}

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1DCF5BC", Offset = "0x1DCF5BC", VA = "0x1DCF5BC")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x1DCF1D0", Offset = "0x1DCF1D0", VA = "0x1DCF1D0")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000D2D")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6000D2E")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000D2F")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);
		}

		[Serializable]
		[Token(Token = "0x20001DE")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001DF")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4000A6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74724", Offset = "0xC74724")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4000A6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7475C", Offset = "0xC7475C")]
				public float weight;

				[Token(Token = "0x4000A6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000D34")]
				[Address(RVA = "0x1DCFEA4", Offset = "0x1DCFEA4", VA = "0x1DCFEA4")]
				public PositionOffsetLink()
				{
				}

				[Token(Token = "0x6000D35")]
				[Address(RVA = "0x1DCFD70", Offset = "0x1DCFD70", VA = "0x1DCFD70")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000D36")]
				[Address(RVA = "0x1DCFAC0", Offset = "0x1DCFAC0", VA = "0x1DCFAC0")]
				public void CrossFadeStart()
				{
				}
			}

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7467C", Offset = "0xC7467C")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC746B4", Offset = "0xC746B4")]
			public int upDirCurveIndex;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC746EC", Offset = "0xC746EC")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x1DCF764", Offset = "0x1DCF764", VA = "0x1DCF764")]
			public PositionOffset()
			{
			}

			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1DCF780", Offset = "0x1DCF780", VA = "0x1DCF780", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x1DCFA40", Offset = "0x1DCFA40", VA = "0x1DCFA40", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x1DCFAD4", Offset = "0x1DCFAD4", VA = "0x1DCFAD4", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E0")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001E1")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4000A72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74804", Offset = "0xC74804")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4000A73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7483C", Offset = "0xC7483C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7483C", Offset = "0xC7483C")]
				public float weight;

				[Token(Token = "0x4000A74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6000D3B")]
				[Address(RVA = "0x1DD0568", Offset = "0x1DD0568", VA = "0x1DD0568")]
				public RotationOffsetLink()
				{
				}

				[Token(Token = "0x6000D3C")]
				[Address(RVA = "0x1DD0400", Offset = "0x1DD0400", VA = "0x1DD0400")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000D3D")]
				[Address(RVA = "0x1DD0080", Offset = "0x1DD0080", VA = "0x1DD0080")]
				public void CrossFadeStart()
				{
				}
			}

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74794", Offset = "0xC74794")]
			public int curveIndex;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC747CC", Offset = "0xC747CC")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x1DCFEAC", Offset = "0x1DCFEAC", VA = "0x1DCFEAC")]
			public RotationOffset()
			{
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x1DCFEC0", Offset = "0x1DCFEC0", VA = "0x1DCFEC0", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x1DD0008", Offset = "0x1DD0008", VA = "0x1DD0008", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x1DD008C", Offset = "0x1DD008C", VA = "0x1DD008C", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}
		}

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC743E0", Offset = "0xC743E0")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74418", Offset = "0xC74418")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1DCF0B4", Offset = "0x1DCF0B4", VA = "0x1DCF0B4")]
		public HitReactionVRIK()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1DCF0BC", Offset = "0x1DCF0BC", VA = "0x1DCF0BC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1DCF334", Offset = "0x1DCF334", VA = "0x1DCF334")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001E3")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20001E4")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A83")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74A6C", Offset = "0xC74A6C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74AA4", Offset = "0xC74AA4")]
				public float weight;

				[Token(Token = "0x6000D44")]
				[Address(RVA = "0x1C09454", Offset = "0x1C09454", VA = "0x1C09454")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74900", Offset = "0xC74900")]
			public Transform transform;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74938", Offset = "0xC74938")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74970", Offset = "0xC74970")]
			public float speed;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC749A8", Offset = "0xC749A8")]
			public float acceleration;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC749E0", Offset = "0xC749E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC749E0", Offset = "0xC749E0")]
			public float matchVelocity;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74A34", Offset = "0xC74A34")]
			public float gravity;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x1C09438", Offset = "0x1C09438", VA = "0x1C09438")]
			public Body()
			{
			}

			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x1C08D18", Offset = "0x1C08D18", VA = "0x1C08D18")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1C08F04", Offset = "0x1C08F04", VA = "0x1C08F04")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}
		}

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74890", Offset = "0xC74890")]
		public Body[] bodies;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC748C8", Offset = "0xC748C8")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1C08C6C", Offset = "0x1C08C6C", VA = "0x1C08C6C")]
		public Inertia()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1C08C8C", Offset = "0x1C08C8C", VA = "0x1C08C8C")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1C08E0C", Offset = "0x1C08E0C", VA = "0x1C08E0C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC74ADC", Offset = "0xC74ADC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74ADC", Offset = "0xC74ADC")]
		public Transform target;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC74B3C", Offset = "0xC74B3C")]
		public float weight;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74B54", Offset = "0xC74B54")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74B8C", Offset = "0xC74B8C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC74BC4", Offset = "0xC74BC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74BC4", Offset = "0xC74BC4")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74C24", Offset = "0xC74C24")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74C5C", Offset = "0xC74C5C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74C94", Offset = "0xC74C94")]
		public float slerpSpeed;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74CCC", Offset = "0xC74CCC")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74D04", Offset = "0xC74D04")]
		public float minDistance;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC74D3C", Offset = "0xC74D3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74D3C", Offset = "0xC74D3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC74D3C", Offset = "0xC74D3C")]
		public float maxRootAngle;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000198")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x1C1622C", Offset = "0x1C1622C", VA = "0x1C1622C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1C16070", Offset = "0x1C16070", VA = "0x1C16070")]
		public LookAtController()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1C1612C", Offset = "0x1C1612C", VA = "0x1C1612C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1C163A4", Offset = "0x1C163A4", VA = "0x1C163A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1C16B88", Offset = "0x1C16B88", VA = "0x1C16B88")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1C16D54", Offset = "0x1C16D54", VA = "0x1C16D54")]
		private void RootRotation()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E7")]
		public class OffsetLimits
		{
			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74E38", Offset = "0xC74E38")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74E70", Offset = "0xC74E70")]
			public float spring;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74EA8", Offset = "0xC74EA8")]
			public bool x;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74EE0", Offset = "0xC74EE0")]
			public bool y;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74F18", Offset = "0xC74F18")]
			public bool z;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74F50", Offset = "0xC74F50")]
			public float minX;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74F88", Offset = "0xC74F88")]
			public float maxX;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74FC0", Offset = "0xC74FC0")]
			public float minY;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74FF8", Offset = "0xC74FF8")]
			public float maxY;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75030", Offset = "0xC75030")]
			public float minZ;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75068", Offset = "0xC75068")]
			public float maxZ;

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x1C17AFC", Offset = "0x1C17AFC", VA = "0x1C17AFC")]
			public OffsetLimits()
			{
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x1C17468", Offset = "0x1C17468", VA = "0x1C17468")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x1C17B04", Offset = "0x1C17B04", VA = "0x1C17B04")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x1C17B34", Offset = "0x1C17B34", VA = "0x1C17B34")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC750A0", Offset = "0xC750A0")]
		private sealed class <Initiate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal OffsetModifier $this;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600141A")]
				[Address(RVA = "0x1C17A74", Offset = "0x1C17A74", VA = "0x1C17A74", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600141B")]
				[Address(RVA = "0x1C17A7C", Offset = "0x1C17A7C", VA = "0x1C17A7C", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0x1C17340", Offset = "0x1C17340", VA = "0x1C17340")]
			[DebuggerHidden]
			public <Initiate>c__Iterator0()
			{
			}

			[Token(Token = "0x6001419")]
			[Address(RVA = "0x1C1788C", Offset = "0x1C1788C", VA = "0x1C1788C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x1C17A84", Offset = "0x1C17A84", VA = "0x1C17A84", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600141D")]
			[Address(RVA = "0x1C17A98", Offset = "0x1C17A98", VA = "0x1C17A98", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74DB8", Offset = "0xC74DB8")]
		public float weight;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC74DF0", Offset = "0xC74DF0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000199")]
		protected float deltaTime
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x1C08ED4", Offset = "0x1C08ED4", VA = "0x1C08ED4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1C08C7C", Offset = "0x1C08C7C", VA = "0x1C08C7C")]
		protected OffsetModifier()
		{
		}

		[Token(Token = "0x6000D4D")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1C172A8", Offset = "0x1C172A8", VA = "0x1C172A8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1C172D4", Offset = "0x1C172D4", VA = "0x1C172D4")]
		[DebuggerHidden]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1C17348", Offset = "0x1C17348", VA = "0x1C17348")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1C09324", Offset = "0x1C09324", VA = "0x1C09324")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1C17738", Offset = "0x1C17738", VA = "0x1C17738", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x2000305")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75180", Offset = "0xC75180")]
		private sealed class <Initiate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal OffsetModifierVRIK $this;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002BC")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001420")]
				[Address(RVA = "0x1C1815C", Offset = "0x1C1815C", VA = "0x1C1815C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001421")]
				[Address(RVA = "0x1C18164", Offset = "0x1C18164", VA = "0x1C18164", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1C17CF8", Offset = "0x1C17CF8", VA = "0x1C17CF8")]
			[DebuggerHidden]
			public <Initiate>c__Iterator0()
			{
			}

			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1C17F74", Offset = "0x1C17F74", VA = "0x1C17F74", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1C1816C", Offset = "0x1C1816C", VA = "0x1C1816C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001423")]
			[Address(RVA = "0x1C18180", Offset = "0x1C18180", VA = "0x1C18180", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75100", Offset = "0xC75100")]
		public float weight;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75138", Offset = "0xC75138")]
		public VRIK ik;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x1700019A")]
		protected float deltaTime
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1C17C30", Offset = "0x1C17C30", VA = "0x1C17C30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1C17C20", Offset = "0x1C17C20", VA = "0x1C17C20")]
		protected OffsetModifierVRIK()
		{
		}

		[Token(Token = "0x6000D59")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1C17C60", Offset = "0x1C17C60", VA = "0x1C17C60", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1C17C8C", Offset = "0x1C17C8C", VA = "0x1C17C8C")]
		[DebuggerHidden]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1C17D00", Offset = "0x1C17D00", VA = "0x1C17D00")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1C17E20", Offset = "0x1C17E20", VA = "0x1C17E20", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001EA")]
		public class EffectorLink
		{
			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x1C18840", Offset = "0x1C18840", VA = "0x1C18840")]
			public EffectorLink()
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x1C18358", Offset = "0x1C18358", VA = "0x1C18358")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}
		}

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1C181E4", Offset = "0x1C181E4", VA = "0x1C181E4")]
		public OffsetPose()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1C18250", Offset = "0x1C18250", VA = "0x1C18250")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1C18764", Offset = "0x1C18764", VA = "0x1C18764")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001EC")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x20001ED")]
			public class EffectorLink
			{
				[Token(Token = "0x4000ABA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC753BC", Offset = "0xC753BC")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000ABB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC753F4", Offset = "0xC753F4")]
				public float weight;

				[Token(Token = "0x6000D69")]
				[Address(RVA = "0x1C18FE4", Offset = "0x1C18FE4", VA = "0x1C18FE4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75218", Offset = "0xC75218")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75250", Offset = "0xC75250")]
			public Transform raycastTo;

			[Token(Token = "0x4000AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75288", Offset = "0xC75288")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC75288", Offset = "0xC75288")]
			public float raycastRadius;

			[Token(Token = "0x4000AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC752DC", Offset = "0xC752DC")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75314", Offset = "0xC75314")]
			public float smoothTimeIn;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7534C", Offset = "0xC7534C")]
			public float smoothTimeOut;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75384", Offset = "0xC75384")]
			public LayerMask layers;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x1C18B50", Offset = "0x1C18B50", VA = "0x1C18B50")]
			public Avoider()
			{
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x1C18900", Offset = "0x1C18900", VA = "0x1C18900")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x1C18B6C", Offset = "0x1C18B6C", VA = "0x1C18B6C")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x1C18D58", Offset = "0x1C18D58", VA = "0x1C18D58")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC751E0", Offset = "0xC751E0")]
		public Avoider[] avoiders;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1C18848", Offset = "0x1C18848", VA = "0x1C18848")]
		public PenetrationAvoidance()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1C18858", Offset = "0x1C18858", VA = "0x1C18858", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001EF")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x20001F0")]
			public class EffectorLink
			{
				[Token(Token = "0x4000AD9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75780", Offset = "0xC75780")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000ADA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC757B8", Offset = "0xC757B8")]
				public float weight;

				[Token(Token = "0x6000D79")]
				[Address(RVA = "0x1C1CA98", Offset = "0x1C1CA98", VA = "0x1C1CA98")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75684", Offset = "0xC75684")]
			public Vector3 offset;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC756BC", Offset = "0xC756BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC756BC", Offset = "0xC756BC")]
			public float additivity;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75710", Offset = "0xC75710")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75748", Offset = "0xC75748")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x1C1CA80", Offset = "0x1C1CA80", VA = "0x1C1CA80")]
			public RecoilOffset()
			{
			}

			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x1C1B45C", Offset = "0x1C1B45C", VA = "0x1C1B45C")]
			public void Start()
			{
			}

			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x1C1C25C", Offset = "0x1C1C25C", VA = "0x1C1C25C")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F1")]
		public enum Handedness
		{
			[Token(Token = "0x4000ADC")]
			Right,
			[Token(Token = "0x4000ADD")]
			Left
		}

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7542C", Offset = "0xC7542C")]
		public AimIK aimIK;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75464", Offset = "0xC75464")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7549C", Offset = "0xC7549C")]
		public Handedness handedness;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC754D4", Offset = "0xC754D4")]
		public bool twoHanded;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7550C", Offset = "0xC7550C")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75544", Offset = "0xC75544")]
		public float magnitudeRandom;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7557C", Offset = "0xC7557C")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC755B4", Offset = "0xC755B4")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC755EC", Offset = "0xC755EC")]
		public float blendTime;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC75624", Offset = "0xC75624")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75624", Offset = "0xC75624")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x1700019B")]
		public bool isFinished
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x1C1B1F0", Offset = "0x1C1B1F0", VA = "0x1C1B1F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x1C1C570", Offset = "0x1C1C570", VA = "0x1C1C570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x1C1C5C4", Offset = "0x1C1C5C4", VA = "0x1C1C5C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private Transform primaryHand
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x1C1C518", Offset = "0x1C1C518", VA = "0x1C1C518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x1C1C544", Offset = "0x1C1C544", VA = "0x1C1C544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1C1B134", Offset = "0x1C1B134", VA = "0x1C1B134")]
		public Recoil()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1C1B224", Offset = "0x1C1B224", VA = "0x1C1B224")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1C1B250", Offset = "0x1C1B250", VA = "0x1C1B250")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1C1B514", Offset = "0x1C1B514", VA = "0x1C1B514", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1C1C618", Offset = "0x1C1C618", VA = "0x1C1C618")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1C1C7DC", Offset = "0x1C1C7DC", VA = "0x1C1C7DC")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1C1C830", Offset = "0x1C1C830", VA = "0x1C1C830", Slot = "6")]
		protected override void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC757F0", Offset = "0xC757F0")]
		public float weight;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75828", Offset = "0xC75828")]
		public float offset;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1C209B8", Offset = "0x1C209B8", VA = "0x1C209B8")]
		public ShoulderRotator()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1C209D0", Offset = "0x1C209D0", VA = "0x1C209D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1C20B00", Offset = "0x1C20B00", VA = "0x1C20B00")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1C20C10", Offset = "0x1C20C10", VA = "0x1C20C10")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1C21154", Offset = "0x1C21154", VA = "0x1C21154")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1C211B0", Offset = "0x1C211B0", VA = "0x1C211B0")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x20001F4")]
		public class Settings
		{
			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75860", Offset = "0xC75860")]
			public float scaleMlp;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75898", Offset = "0xC75898")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC758D0", Offset = "0xC758D0")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75908", Offset = "0xC75908")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75940", Offset = "0xC75940")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75978", Offset = "0xC75978")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC759B0", Offset = "0xC759B0")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC759E8", Offset = "0xC759E8")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75A20", Offset = "0xC75A20")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC75A58", Offset = "0xC75A58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75A58", Offset = "0xC75A58")]
			public Vector3 headOffset;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75AA8", Offset = "0xC75AA8")]
			public Vector3 handOffset;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75AE0", Offset = "0xC75AE0")]
			public float footForwardOffset;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75B18", Offset = "0xC75B18")]
			public float footInwardOffset;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75B50", Offset = "0xC75B50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC75B50", Offset = "0xC75B50")]
			public float footHeadingOffset;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC75BAC", Offset = "0xC75BAC")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC75BC4", Offset = "0xC75BC4")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x1C27C58", Offset = "0x1C27C58", VA = "0x1C27C58")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F5")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x20001F6")]
			public class Target
			{
				[Token(Token = "0x4000AFE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4000AFF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4000B00")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6000D87")]
				[Address(RVA = "0x1C268B0", Offset = "0x1C268B0", VA = "0x1C268B0")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6000D88")]
				[Address(RVA = "0x1C2774C", Offset = "0x1C2774C", VA = "0x1C2774C")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x1C25AA4", Offset = "0x1C25AA4", VA = "0x1C25AA4")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1C23B60", Offset = "0x1C23B60", VA = "0x1C23B60")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1C23D44", Offset = "0x1C23D44", VA = "0x1C23D44")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1C25C30", Offset = "0x1C25C30", VA = "0x1C25C30")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1C269A0", Offset = "0x1C269A0", VA = "0x1C269A0")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1C277E8", Offset = "0x1C277E8", VA = "0x1C277E8")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75BDC", Offset = "0xC75BDC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC75BDC", Offset = "0xC75BDC")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x170001A0")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x1C26994", Offset = "0x1C26994", VA = "0x1C26994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75C18", Offset = "0xC75C18")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x1C27D78", Offset = "0x1C27D78", VA = "0x1C27D78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75C28", Offset = "0xC75C28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1C27D70", Offset = "0x1C27D70", VA = "0x1C27D70")]
		public VRIKRootController()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1C27D84", Offset = "0x1C27D84", VA = "0x1C27D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1C2662C", Offset = "0x1C2662C", VA = "0x1C2662C")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1C27AA4", Offset = "0x1C27AA4", VA = "0x1C27AA4")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1C27EBC", Offset = "0x1C27EBC", VA = "0x1C27EBC")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1C28510", Offset = "0x1C28510", VA = "0x1C28510")]
		private void OnDestroy()
		{
		}
	}
}
namespace RootMotion
{
	[Serializable]
	[Token(Token = "0x20001F8")]
	public enum Axis
	{
		[Token(Token = "0x4000B07")]
		X,
		[Token(Token = "0x4000B08")]
		Y,
		[Token(Token = "0x4000B09")]
		Z
	}
	[Token(Token = "0x20001F9")]
	public class AxisTools
	{
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x117B460", Offset = "0x117B460", VA = "0x117B460")]
		public AxisTools()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x117B468", Offset = "0x117B468", VA = "0x117B468")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x117B53C", Offset = "0x117B53C", VA = "0x117B53C")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x117B5E8", Offset = "0x117B5E8", VA = "0x117B5E8")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x117B7E4", Offset = "0x117B7E4", VA = "0x117B7E4")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x117B718", Offset = "0x117B718", VA = "0x117B718")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x117B914", Offset = "0x117B914", VA = "0x117B914")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20001FA")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x20001FB")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x117BE50", Offset = "0x117BE50", VA = "0x117BE50")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x170001A1")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x117BBBC", Offset = "0x117BBBC", VA = "0x117BBBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x117BED4", Offset = "0x117BED4", VA = "0x117BED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x117BB70", Offset = "0x117BB70", VA = "0x117BB70")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x20001FD")]
		public enum BoneType
		{
			[Token(Token = "0x4000B24")]
			Unassigned,
			[Token(Token = "0x4000B25")]
			Spine,
			[Token(Token = "0x4000B26")]
			Head,
			[Token(Token = "0x4000B27")]
			Arm,
			[Token(Token = "0x4000B28")]
			Leg,
			[Token(Token = "0x4000B29")]
			Tail,
			[Token(Token = "0x4000B2A")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x20001FE")]
		public enum BoneSide
		{
			[Token(Token = "0x4000B2C")]
			Center,
			[Token(Token = "0x4000B2D")]
			Left,
			[Token(Token = "0x4000B2E")]
			Right
		}

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x117C168", Offset = "0x117C168", VA = "0x117C168")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x117C4B4", Offset = "0x117C4B4", VA = "0x117C4B4")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x117C740", Offset = "0x117C740", VA = "0x117C740")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x117C7C4", Offset = "0x117C7C4", VA = "0x117C7C4")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x117C864", Offset = "0x117C864", VA = "0x117C864")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x117C350", Offset = "0x117C350", VA = "0x117C350")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x117C69C", Offset = "0x117C69C", VA = "0x117C69C")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x117D0D4", Offset = "0x117D0D4", VA = "0x117D0D4")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x117CEBC", Offset = "0x117CEBC", VA = "0x117CEBC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x117CFC8", Offset = "0x117CFC8", VA = "0x117CFC8")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x117CA84", Offset = "0x117CA84", VA = "0x117CA84")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x117CB38", Offset = "0x117CB38", VA = "0x117CB38")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x117CBEC", Offset = "0x117CBEC", VA = "0x117CBEC")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x117CCA0", Offset = "0x117CCA0", VA = "0x117CCA0")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x117CD54", Offset = "0x117CD54", VA = "0x117CD54")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x117CE08", Offset = "0x117CE08", VA = "0x117CE08")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x117D348", Offset = "0x117D348", VA = "0x117D348")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x117C994", Offset = "0x117C994", VA = "0x117C994")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x117D2B8", Offset = "0x117D2B8", VA = "0x117D2B8")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x117D3B8", Offset = "0x117D3B8", VA = "0x117D3B8")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x117D488", Offset = "0x117D488", VA = "0x117D488")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x117D224", Offset = "0x117D224", VA = "0x117D224")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x117D168", Offset = "0x117D168", VA = "0x117D168")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class BipedReferences
	{
		[Token(Token = "0x2000200")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170001A5")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0x1DAE314", Offset = "0x1DAE314", VA = "0x1DAE314")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x1DAE300", Offset = "0x1DAE300", VA = "0x1DAE300")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x170001A3")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x117FD04", Offset = "0x117FD04", VA = "0x117FD04", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool isEmpty
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x1180178", Offset = "0x1180178", VA = "0x1180178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x117FC74", Offset = "0x117FC74", VA = "0x117FC74")]
		public BipedReferences()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1180188", Offset = "0x1180188", VA = "0x1180188", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1180644", Offset = "0x1180644", VA = "0x1180644", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1180B00", Offset = "0x1180B00", VA = "0x1180B00")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1181250", Offset = "0x1181250", VA = "0x1181250")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1180D1C", Offset = "0x1180D1C", VA = "0x1180D1C")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1181CB4", Offset = "0x1181CB4", VA = "0x1181CB4")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1181DC0", Offset = "0x1181DC0", VA = "0x1181DC0")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1182400", Offset = "0x1182400", VA = "0x1182400")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x11821D4", Offset = "0x11821D4", VA = "0x11821D4")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1182008", Offset = "0x1182008", VA = "0x1182008")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1181EA4", Offset = "0x1181EA4", VA = "0x1181EA4")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x11822EC", Offset = "0x11822EC", VA = "0x11822EC")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1182514", Offset = "0x1182514", VA = "0x1182514")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x11833B0", Offset = "0x11833B0", VA = "0x11833B0")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1182C78", Offset = "0x1182C78", VA = "0x1182C78")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x118374C", Offset = "0x118374C", VA = "0x118374C")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x118315C", Offset = "0x118315C", VA = "0x118315C")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1183754", Offset = "0x1183754", VA = "0x1183754")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x118375C", Offset = "0x118375C", VA = "0x118375C")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x118395C", Offset = "0x118395C", VA = "0x118395C")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1183BB8", Offset = "0x1183BB8", VA = "0x1183BB8")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000201")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1DAE31C", Offset = "0x1DAE31C", VA = "0x1DAE31C")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1DAE324", Offset = "0x1DAE324", VA = "0x1DAE324")]
		public DemoGUIMessage()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1DAE35C", Offset = "0x1DAE35C", VA = "0x1DAE35C")]
		private void OnGUI()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class Hierarchy
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1C28664", Offset = "0x1C28664", VA = "0x1C28664")]
		public Hierarchy()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1C2866C", Offset = "0x1C2866C", VA = "0x1C2866C")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1C288B4", Offset = "0x1C288B4", VA = "0x1C288B4")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1C28718", Offset = "0x1C28718", VA = "0x1C28718")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1C289FC", Offset = "0x1C289FC", VA = "0x1C289FC")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1C28B28", Offset = "0x1C28B28", VA = "0x1C28B28")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1C28E50", Offset = "0x1C28E50", VA = "0x1C28E50")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1C28F98", Offset = "0x1C28F98", VA = "0x1C28F98")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1C29168", Offset = "0x1C29168", VA = "0x1C29168")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1C29570", Offset = "0x1C29570", VA = "0x1C29570")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1C29320", Offset = "0x1C29320", VA = "0x1C29320")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000204")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1C2973C", Offset = "0x1C2973C", VA = "0x1C2973C")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1C297B0", Offset = "0x1C297B0", VA = "0x1C297B0")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000B48")]
		None,
		[Token(Token = "0x4000B49")]
		InOutCubic,
		[Token(Token = "0x4000B4A")]
		InOutQuintic,
		[Token(Token = "0x4000B4B")]
		InOutSine,
		[Token(Token = "0x4000B4C")]
		InQuintic,
		[Token(Token = "0x4000B4D")]
		InQuartic,
		[Token(Token = "0x4000B4E")]
		InCubic,
		[Token(Token = "0x4000B4F")]
		InQuadratic,
		[Token(Token = "0x4000B50")]
		InElastic,
		[Token(Token = "0x4000B51")]
		InElasticSmall,
		[Token(Token = "0x4000B52")]
		InElasticBig,
		[Token(Token = "0x4000B53")]
		InSine,
		[Token(Token = "0x4000B54")]
		InBack,
		[Token(Token = "0x4000B55")]
		OutQuintic,
		[Token(Token = "0x4000B56")]
		OutQuartic,
		[Token(Token = "0x4000B57")]
		OutCubic,
		[Token(Token = "0x4000B58")]
		OutInCubic,
		[Token(Token = "0x4000B59")]
		OutInQuartic,
		[Token(Token = "0x4000B5A")]
		OutElastic,
		[Token(Token = "0x4000B5B")]
		OutElasticSmall,
		[Token(Token = "0x4000B5C")]
		OutElasticBig,
		[Token(Token = "0x4000B5D")]
		OutSine,
		[Token(Token = "0x4000B5E")]
		OutBack,
		[Token(Token = "0x4000B5F")]
		OutBackCubic,
		[Token(Token = "0x4000B60")]
		OutBackQuartic,
		[Token(Token = "0x4000B61")]
		BackInCubic,
		[Token(Token = "0x4000B62")]
		BackInQuartic
	}
	[Token(Token = "0x2000206")]
	public class Interp
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1C29820", Offset = "0x1C29820", VA = "0x1C29820")]
		public Interp()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1C0DC94", Offset = "0x1C0DC94", VA = "0x1C0DC94")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1C29F28", Offset = "0x1C29F28", VA = "0x1C29F28")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1C2A03C", Offset = "0x1C2A03C", VA = "0x1C2A03C")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1C29828", Offset = "0x1C29828", VA = "0x1C29828")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1C29834", Offset = "0x1C29834", VA = "0x1C29834")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1C2985C", Offset = "0x1C2985C", VA = "0x1C2985C")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1C29898", Offset = "0x1C29898", VA = "0x1C29898")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1C298B0", Offset = "0x1C298B0", VA = "0x1C298B0")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1C298C4", Offset = "0x1C298C4", VA = "0x1C298C4")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1C298D8", Offset = "0x1C298D8", VA = "0x1C298D8")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1C298E8", Offset = "0x1C298E8", VA = "0x1C298E8")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1C29930", Offset = "0x1C29930", VA = "0x1C29930")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1C29968", Offset = "0x1C29968", VA = "0x1C29968")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1C29990", Offset = "0x1C29990", VA = "0x1C29990")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1C2A154", Offset = "0x1C2A154", VA = "0x1C2A154")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1C299C4", Offset = "0x1C299C4", VA = "0x1C299C4")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1C299EC", Offset = "0x1C299EC", VA = "0x1C299EC")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1C29A1C", Offset = "0x1C29A1C", VA = "0x1C29A1C")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1C29A50", Offset = "0x1C29A50", VA = "0x1C29A50")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1C29A94", Offset = "0x1C29A94", VA = "0x1C29A94")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1C29AF8", Offset = "0x1C29AF8", VA = "0x1C29AF8")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1C29B5C", Offset = "0x1C29B5C", VA = "0x1C29B5C")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1C29BB0", Offset = "0x1C29BB0", VA = "0x1C29BB0")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x1C29C04", Offset = "0x1C29C04", VA = "0x1C29C04")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1C29C9C", Offset = "0x1C29C9C", VA = "0x1C29C9C")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x1C29D30", Offset = "0x1C29D30", VA = "0x1C29D30")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1C2A188", Offset = "0x1C2A188", VA = "0x1C2A188")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1C29DD4", Offset = "0x1C29DD4", VA = "0x1C29DD4")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1C29EB8", Offset = "0x1C29EB8", VA = "0x1C29EB8")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1C29EE8", Offset = "0x1C29EE8", VA = "0x1C29EE8")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000207")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1C2A270", Offset = "0x1C2A270", VA = "0x1C2A270")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1C2A2E4", Offset = "0x1C2A2E4", VA = "0x1C2A2E4")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000208")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1C2A354", Offset = "0x1C2A354", VA = "0x1C2A354")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1C2A3B8", Offset = "0x1C2A3B8", VA = "0x1C2A3B8")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1C2A49C", Offset = "0x1C2A49C", VA = "0x1C2A49C")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1C2A3D0", Offset = "0x1C2A3D0", VA = "0x1C2A3D0")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1C2A4B4", Offset = "0x1C2A4B4", VA = "0x1C2A4B4")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1C2A56C", Offset = "0x1C2A56C", VA = "0x1C2A56C")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1C2A5A0", Offset = "0x1C2A5A0", VA = "0x1C2A5A0")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1C2A5FC", Offset = "0x1C2A5FC", VA = "0x1C2A5FC")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1C2A67C", Offset = "0x1C2A67C", VA = "0x1C2A67C")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1C2A788", Offset = "0x1C2A788", VA = "0x1C2A788")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1C2A868", Offset = "0x1C2A868", VA = "0x1C2A868")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1C2A8CC", Offset = "0x1C2A8CC", VA = "0x1C2A8CC")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
}
namespace RootMotion.Demos
{
	[Serializable]
	[Token(Token = "0x2000209")]
	public class Navigator
	{
		[Token(Token = "0x200020A")]
		public enum State
		{
			[Token(Token = "0x4000B74")]
			Idle,
			[Token(Token = "0x4000B75")]
			Seeking,
			[Token(Token = "0x4000B76")]
			OnPath
		}

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75D48", Offset = "0xC75D48")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75D80", Offset = "0xC75D80")]
		public float cornerRadius;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75DB8", Offset = "0xC75DB8")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75DF0", Offset = "0xC75DF0")]
		public float maxSampleDistance;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75E28", Offset = "0xC75E28")]
		public float nextPathInterval;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75E60", Offset = "0xC75E60")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC75E60", Offset = "0xC75E60")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75E9C", Offset = "0xC75E9C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC75E9C", Offset = "0xC75E9C")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170001A6")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x1DAE4A8", Offset = "0x1DAE4A8", VA = "0x1DAE4A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75ED8", Offset = "0xC75ED8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x1DAE4B4", Offset = "0x1DAE4B4", VA = "0x1DAE4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75EE8", Offset = "0xC75EE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public State state
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x1DAE4C0", Offset = "0x1DAE4C0", VA = "0x1DAE4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75EF8", Offset = "0xC75EF8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x1DAE4C8", Offset = "0x1DAE4C8", VA = "0x1DAE4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75F08", Offset = "0xC75F08")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1DAE430", Offset = "0x1DAE430", VA = "0x1DAE430")]
		public Navigator()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x1DAE4D0", Offset = "0x1DAE4D0", VA = "0x1DAE4D0")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1DAE5B0", Offset = "0x1DAE5B0", VA = "0x1DAE5B0")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1DAEB70", Offset = "0x1DAEB70", VA = "0x1DAEB70")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1DAEBE4", Offset = "0x1DAEBE4", VA = "0x1DAEBE4")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1DAEA30", Offset = "0x1DAEA30", VA = "0x1DAEA30")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1DAEAA8", Offset = "0x1DAEAA8", VA = "0x1DAEAA8")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1DAED4C", Offset = "0x1DAED4C", VA = "0x1DAED4C")]
		public void Visualize()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x200020B")]
	public static class QuaTools
	{
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1C03658", Offset = "0x1C03658", VA = "0x1C03658")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1C2A900", Offset = "0x1C2A900", VA = "0x1C2A900")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1C2AA50", Offset = "0x1C2AA50", VA = "0x1C2AA50")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x1C2AB70", Offset = "0x1C2AB70", VA = "0x1C2AB70")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1C149F0", Offset = "0x1C149F0", VA = "0x1C149F0")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x1C2AC90", Offset = "0x1C2AC90", VA = "0x1C2AC90")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1C03E1C", Offset = "0x1C03E1C", VA = "0x1C03E1C")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1C2AD6C", Offset = "0x1C2AD6C", VA = "0x1C2AD6C")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1C072CC", Offset = "0x1C072CC", VA = "0x1C072CC")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1C2B018", Offset = "0x1C2B018", VA = "0x1C2B018")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1C25AAC", Offset = "0x1C25AAC", VA = "0x1C25AAC")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200020C")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x170001A8")]
		public static T instance
		{
			[Token(Token = "0x6000E23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E22")]
		protected Singleton()
		{
		}

		[Token(Token = "0x6000E24")]
		protected virtual void Awake()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC75F18", Offset = "0xC75F18")]
		public bool fixTransforms;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x170001A9")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x1389158", Offset = "0x1389158", VA = "0x1389158")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		private bool isAnimated
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x13894B4", Offset = "0x13894B4", VA = "0x13894B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1389008", Offset = "0x1389008", VA = "0x1389008")]
		public SolverManager()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1389018", Offset = "0x1389018", VA = "0x1389018")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x13890B4", Offset = "0x13890B4", VA = "0x13890B4", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x13890B8", Offset = "0x13890B8", VA = "0x13890B8", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x13890BC", Offset = "0x13890BC", VA = "0x13890BC", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x13890C0", Offset = "0x13890C0", VA = "0x13890C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1389154", Offset = "0x1389154", VA = "0x1389154")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x13890FC", Offset = "0x13890FC", VA = "0x13890FC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1389460", Offset = "0x1389460", VA = "0x1389460")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x138925C", Offset = "0x138925C", VA = "0x138925C")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x138957C", Offset = "0x138957C", VA = "0x138957C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x13895D8", Offset = "0x13895D8", VA = "0x13895D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1389638", Offset = "0x1389638", VA = "0x1389638")]
		public void UpdateSolverExternal()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1389680", Offset = "0x1389680", VA = "0x1389680")]
		public TriggerEventBroadcaster()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1389688", Offset = "0x1389688", VA = "0x1389688")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1389748", Offset = "0x1389748", VA = "0x1389748")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1389808", Offset = "0x1389808", VA = "0x1389808")]
		private void OnTriggerExit(Collider collider)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public static class V3Tools
	{
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x13898C8", Offset = "0x13898C8", VA = "0x13898C8")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x13899C4", Offset = "0x13899C4", VA = "0x13899C4")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1389AC0", Offset = "0x1389AC0", VA = "0x1389AC0")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1389BD0", Offset = "0x1389BD0", VA = "0x1389BD0")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x1389CE0", Offset = "0x1389CE0", VA = "0x1389CE0")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1389F38", Offset = "0x1389F38", VA = "0x1389F38")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x138A194", Offset = "0x138A194", VA = "0x138A194")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x138A3B4", Offset = "0x138A3B4", VA = "0x138A3B4")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000210")]
	public static class Warning
	{
		[Token(Token = "0x2000211")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x138A5A4", Offset = "0x138A5A4", VA = "0x138A5A4")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x138ADA0", Offset = "0x138ADA0", VA = "0x138ADA0")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace TMPro
{
	[Token(Token = "0x2000212")]
	public class FastAction
	{
		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LinkedList<Action> delegates;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Action, LinkedListNode<Action>> lookup;

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x138BE94", Offset = "0x138BE94", VA = "0x138BE94")]
		public FastAction()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x138BF2C", Offset = "0x138BF2C", VA = "0x138BF2C")]
		public void Add(Action rhs)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x138BFFC", Offset = "0x138BFFC", VA = "0x138BFFC")]
		public void Remove(Action rhs)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x138C0CC", Offset = "0x138C0CC", VA = "0x138C0CC")]
		public void Call()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class FastAction<A>
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<Action<A>> delegates;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Action<A>, LinkedListNode<Action<A>>> lookup;

		[Token(Token = "0x6000E4B")]
		public FastAction()
		{
		}

		[Token(Token = "0x6000E4C")]
		public void Add(Action<A> rhs)
		{
		}

		[Token(Token = "0x6000E4D")]
		public void Remove(Action<A> rhs)
		{
		}

		[Token(Token = "0x6000E4E")]
		public void Call(A a)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class FastAction<A, B>
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<Action<A, B>> delegates;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Action<A, B>, LinkedListNode<Action<A, B>>> lookup;

		[Token(Token = "0x6000E4F")]
		public FastAction()
		{
		}

		[Token(Token = "0x6000E50")]
		public void Add(Action<A, B> rhs)
		{
		}

		[Token(Token = "0x6000E51")]
		public void Remove(Action<A, B> rhs)
		{
		}

		[Token(Token = "0x6000E52")]
		public void Call(A a, B b)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class FastAction<A, B, C>
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<Action<A, B, C>> delegates;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Action<A, B, C>, LinkedListNode<Action<A, B, C>>> lookup;

		[Token(Token = "0x6000E53")]
		public FastAction()
		{
		}

		[Token(Token = "0x6000E54")]
		public void Add(Action<A, B, C> rhs)
		{
		}

		[Token(Token = "0x6000E55")]
		public void Remove(Action<A, B, C> rhs)
		{
		}

		[Token(Token = "0x6000E56")]
		public void Call(A a, B b, C c)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class InlineGraphic : MaskableGraphic
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture texture;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InlineGraphicManager m_manager;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform m_RectTransform;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RectTransform m_ParentRectTransform;

		[Token(Token = "0x170001AB")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x138C578", Offset = "0x138C578", VA = "0x138C578", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x138C570", Offset = "0x138C570", VA = "0x138C570")]
		public InlineGraphic()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x138C628", Offset = "0x138C628", VA = "0x138C628", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x138C680", Offset = "0x138C680", VA = "0x138C680", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x138C7D0", Offset = "0x138C7D0", VA = "0x138C7D0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x138C7D8", Offset = "0x138C7D8", VA = "0x138C7D8", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x138C7DC", Offset = "0x138C7DC", VA = "0x138C7DC", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x138C9E0", Offset = "0x138C9E0", VA = "0x138C9E0")]
		public new void UpdateMaterial()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x138C9E8", Offset = "0x138C9E8", VA = "0x138C9E8", Slot = "41")]
		protected override void UpdateGeometry()
		{
		}
	}
	[Token(Token = "0x2000217")]
	[ExecuteInEditMode]
	public class InlineGraphicManager : MonoBehaviour
	{
		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75FE0", Offset = "0xC75FE0")]
		private sealed class <GetSpriteIndexByHashCode>c__AnonStorey0
		{
			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int hashCode;

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x138D760", Offset = "0x138D760", VA = "0x138D760")]
			public <GetSpriteIndexByHashCode>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x138D8F4", Offset = "0x138D8F4", VA = "0x138D8F4")]
			internal bool <>m__0(TMP_Sprite item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC75FF0", Offset = "0xC75FF0")]
		private sealed class <GetSpriteIndexByIndex>c__AnonStorey1
		{
			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int index;

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x138D8E4", Offset = "0x138D8E4", VA = "0x138D8E4")]
			public <GetSpriteIndexByIndex>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0x138D92C", Offset = "0x138D92C", VA = "0x138D92C")]
			internal bool <>m__0(TMP_Sprite item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_SpriteAsset m_spriteAsset;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private InlineGraphic m_inlineGraphic;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private CanvasRenderer m_inlineGraphicCanvasRenderer;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIVertex[] m_uiVertex;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_inlineGraphicRectTransform;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_textComponent;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isInitialized;

		[Token(Token = "0x170001AC")]
		public TMP_SpriteAsset spriteAsset
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x138C7C8", Offset = "0x138C7C8", VA = "0x138C7C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x138C9F4", Offset = "0x138C9F4", VA = "0x138C9F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public InlineGraphic inlineGraphic
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x138CBD0", Offset = "0x138CBD0", VA = "0x138CBD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x138CBD8", Offset = "0x138CBD8", VA = "0x138CBD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public CanvasRenderer canvasRenderer
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x138CC64", Offset = "0x138CC64", VA = "0x138CC64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public UIVertex[] uiVertex
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x138CC6C", Offset = "0x138CC6C", VA = "0x138CC6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x138C9EC", Offset = "0x138C9EC", VA = "0x138C9EC")]
		public InlineGraphicManager()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x138CC74", Offset = "0x138CC74", VA = "0x138CC74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x138CE28", Offset = "0x138CE28", VA = "0x138CE28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x138CE34", Offset = "0x138CE34", VA = "0x138CE34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x138CE38", Offset = "0x138CE38", VA = "0x138CE38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x138C9F8", Offset = "0x138C9F8", VA = "0x138C9F8")]
		private void LoadSpriteAsset(TMP_SpriteAsset spriteAsset)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x138CE3C", Offset = "0x138CE3C", VA = "0x138CE3C")]
		public void AddInlineGraphicsChild()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x138D110", Offset = "0x138D110", VA = "0x138D110")]
		public void AllocatedVertexBuffers(int size)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x138D248", Offset = "0x138D248", VA = "0x138D248")]
		public void UpdatePivot(Vector2 pivot)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x138D320", Offset = "0x138D320", VA = "0x138D320")]
		public void ClearUIVertex()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x138D380", Offset = "0x138D380", VA = "0x138D380")]
		public void DrawSprite(UIVertex[] uiVertices, int spriteCount)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x138D470", Offset = "0x138D470", VA = "0x138D470")]
		public TMP_Sprite GetSprite(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x138D5E4", Offset = "0x138D5E4", VA = "0x138D5E4")]
		public int GetSpriteIndexByHashCode(int hashCode)
		{
			return default(int);
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x138D768", Offset = "0x138D768", VA = "0x138D768")]
		public int GetSpriteIndexByIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x138D8EC", Offset = "0x138D8EC", VA = "0x138D8EC")]
		public void SetUIVertex(UIVertex[] uiVertex)
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class MaterialReferenceManager
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialReferenceManager s_Instance;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, Material> m_FontMaterialReferenceLookup;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, TMP_FontAsset> m_FontAssetReferenceLookup;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, TMP_SpriteAsset> m_SpriteAssetReferenceLookup;

		[Token(Token = "0x170001B0")]
		public static MaterialReferenceManager instance
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x138E91C", Offset = "0x138E91C", VA = "0x138E91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x138E85C", Offset = "0x138E85C", VA = "0x138E85C")]
		public MaterialReferenceManager()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x138E998", Offset = "0x138E998", VA = "0x138E998")]
		public static void AddFontAsset(TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x138E9CC", Offset = "0x138E9CC", VA = "0x138E9CC")]
		private void AddFontAssetInternal(TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x138EAC0", Offset = "0x138EAC0", VA = "0x138EAC0")]
		public static void AddSpriteAsset(TMP_SpriteAsset spriteAsset)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x138EAF4", Offset = "0x138EAF4", VA = "0x138EAF4")]
		private void AddSpriteAssetInternal(TMP_SpriteAsset spriteAsset)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x138EBE8", Offset = "0x138EBE8", VA = "0x138EBE8")]
		public static void AddSpriteAsset(int hashCode, TMP_SpriteAsset spriteAsset)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x138EC2C", Offset = "0x138EC2C", VA = "0x138EC2C")]
		private void AddSpriteAssetInternal(int hashCode, TMP_SpriteAsset spriteAsset)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x138ED10", Offset = "0x138ED10", VA = "0x138ED10")]
		public static void AddFontMaterial(int hashCode, Material material)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x138ED54", Offset = "0x138ED54", VA = "0x138ED54")]
		private void AddFontMaterialInternal(int hashCode, Material material)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x138EDC8", Offset = "0x138EDC8", VA = "0x138EDC8")]
		public bool Contains(TMP_FontAsset font)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x138EE40", Offset = "0x138EE40", VA = "0x138EE40")]
		public bool Contains(TMP_SpriteAsset sprite)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x138EEB8", Offset = "0x138EEB8", VA = "0x138EEB8")]
		public static bool TryGetFontAsset(int hashCode, out TMP_FontAsset fontAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x138EEFC", Offset = "0x138EEFC", VA = "0x138EEFC")]
		private bool TryGetFontAssetInternal(int hashCode, out TMP_FontAsset fontAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x138EF74", Offset = "0x138EF74", VA = "0x138EF74")]
		public static bool TryGetSpriteAsset(int hashCode, out TMP_SpriteAsset spriteAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x138EFB8", Offset = "0x138EFB8", VA = "0x138EFB8")]
		private bool TryGetSpriteAssetInternal(int hashCode, out TMP_SpriteAsset spriteAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x138F030", Offset = "0x138F030", VA = "0x138F030")]
		public static bool TryGetMaterial(int hashCode, out Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x138F074", Offset = "0x138F074", VA = "0x138F074")]
		private bool TryGetMaterialInternal(int hashCode, out Material material)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000219")]
	public struct MaterialReference
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TMP_FontAsset fontAsset;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_SpriteAsset spriteAsset;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isDefaultMaterial;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isFallbackMaterial;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material fallbackMaterial;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float padding;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int referenceCount;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x138E238", Offset = "0x138E238", VA = "0x138E238")]
		public MaterialReference(int index, TMP_FontAsset fontAsset, TMP_SpriteAsset spriteAsset, Material material, float padding)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x138E240", Offset = "0x138E240", VA = "0x138E240")]
		public static bool Contains(MaterialReference[] materialReferences, TMP_FontAsset fontAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x138E37C", Offset = "0x138E37C", VA = "0x138E37C")]
		public static int AddMaterialReference(Material material, TMP_FontAsset fontAsset, MaterialReference[] materialReferences, Dictionary<int, int> materialReferenceIndexLookup)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x138E60C", Offset = "0x138E60C", VA = "0x138E60C")]
		public static int AddMaterialReference(Material material, TMP_SpriteAsset spriteAsset, MaterialReference[] materialReferences, Dictionary<int, int> materialReferenceIndexLookup)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200021A")]
	public enum TextContainerAnchors
	{
		[Token(Token = "0x4000BA1")]
		TopLeft,
		[Token(Token = "0x4000BA2")]
		Top,
		[Token(Token = "0x4000BA3")]
		TopRight,
		[Token(Token = "0x4000BA4")]
		Left,
		[Token(Token = "0x4000BA5")]
		Middle,
		[Token(Token = "0x4000BA6")]
		Right,
		[Token(Token = "0x4000BA7")]
		BottomLeft,
		[Token(Token = "0x4000BA8")]
		Bottom,
		[Token(Token = "0x4000BA9")]
		BottomRight,
		[Token(Token = "0x4000BAA")]
		Custom
	}
	[Token(Token = "0x200021B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC76000", Offset = "0xC76000")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC76000", Offset = "0xC76000")]
	public class TextContainer : UIBehaviour
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_hasChanged;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector2 m_pivot;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TextContainerAnchors m_anchorPosition;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rect m_rect;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isDefaultWidth;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isDefaultHeight;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_isAutoFitting;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] m_corners;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] m_worldCorners;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector4 m_margins;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 k_defaultSize;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x170001B1")]
		public bool hasChanged
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x1391CF0", Offset = "0x1391CF0", VA = "0x1391CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x1391CF8", Offset = "0x1391CF8", VA = "0x1391CF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public Vector2 pivot
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x1391D04", Offset = "0x1391D04", VA = "0x1391D04")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x1391D0C", Offset = "0x1391D0C", VA = "0x1391D0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public TextContainerAnchors anchorPosition
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x13922E0", Offset = "0x13922E0", VA = "0x13922E0")]
			get
			{
				return default(TextContainerAnchors);
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x13922E8", Offset = "0x13922E8", VA = "0x13922E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public Rect rect
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x1392460", Offset = "0x1392460", VA = "0x1392460")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x139246C", Offset = "0x139246C", VA = "0x139246C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Vector2 size
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x1392508", Offset = "0x1392508", VA = "0x1392508")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x139256C", Offset = "0x139256C", VA = "0x139256C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float width
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x13926EC", Offset = "0x13926EC", VA = "0x13926EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x13926F8", Offset = "0x13926F8", VA = "0x13926F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float height
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x139276C", Offset = "0x139276C", VA = "0x139276C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1392778", Offset = "0x1392778", VA = "0x1392778")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public bool isDefaultWidth
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x13927E8", Offset = "0x13927E8", VA = "0x13927E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public bool isDefaultHeight
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x13927F0", Offset = "0x13927F0", VA = "0x13927F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool isAutoFitting
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x13927F8", Offset = "0x13927F8", VA = "0x13927F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x1392800", Offset = "0x1392800", VA = "0x1392800")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public Vector3[] corners
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x139280C", Offset = "0x139280C", VA = "0x139280C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public Vector3[] worldCorners
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1392814", Offset = "0x1392814", VA = "0x1392814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public Vector4 margins
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x139281C", Offset = "0x139281C", VA = "0x139281C")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1392828", Offset = "0x1392828", VA = "0x1392828")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public RectTransform rectTransform
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1392920", Offset = "0x1392920", VA = "0x1392920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public TextMeshPro textMeshPro
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x13929C0", Offset = "0x13929C0", VA = "0x13929C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1391C58", Offset = "0x1391C58", VA = "0x1391C58")]
		public TextContainer()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1392A60", Offset = "0x1392A60", VA = "0x1392A60", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x13931BC", Offset = "0x13931BC", VA = "0x13931BC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x13931C0", Offset = "0x13931C0", VA = "0x13931C0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x139214C", Offset = "0x139214C", VA = "0x139214C")]
		private void OnContainerChanged()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x13931C4", Offset = "0x13931C4", VA = "0x13931C4", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1392668", Offset = "0x1392668", VA = "0x1392668")]
		private void SetRect(Vector2 size)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1392F08", Offset = "0x1392F08", VA = "0x1392F08")]
		private void UpdateCorners()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1392334", Offset = "0x1392334", VA = "0x1392334")]
		private Vector2 GetPivot(TextContainerAnchors anchor)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1391DDC", Offset = "0x1391DDC", VA = "0x1391DDC")]
		private TextContainerAnchors GetAnchorPosition(Vector2 pivot)
		{
			return default(TextContainerAnchors);
		}
	}
	[Token(Token = "0x200021C")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC760D8", Offset = "0xC760D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC760D8", Offset = "0xC760D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC760D8", Offset = "0xC760D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC760D8", Offset = "0xC760D8")]
	[SelectionBase]
	public class TextMeshPro : TMP_Text, ILayoutElement
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		[SerializeField]
		private float m_lineLength;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		[SerializeField]
		private TMP_Compatibility.AnchorPositions m_anchor;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private bool m_autoSizeTextContainer;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x471")]
		private bool m_currentAutoSizeMode;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		[SerializeField]
		private Vector2 m_uvOffset;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		[SerializeField]
		private float m_uvLineOffset;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		[SerializeField]
		private bool m_hasFontAssetChanged;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private float m_previousLossyScaleY;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private bool m_isFirstAllocation;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		private int m_max_characters;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private int m_max_numberOfLines;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private WordWrapState m_SavedWordWrapState;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		private WordWrapState m_SavedLineState;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
		private Bounds m_default_bounds;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		[SerializeField]
		protected TMP_SubMesh[] m_subTextObjects;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		private bool m_isMaskingEnabled;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x799")]
		private bool isMaskUpdateRequired;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79C")]
		[SerializeField]
		private MaskingTypes m_maskType;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
		private Matrix4x4 m_EnvMapMatrix;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
		private TextContainer m_textContainer;

		[NonSerialized]
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
		private bool m_isRegisteredForEvents;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7EC")]
		private int m_recursiveCount;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
		private int loopCountA;

		[Token(Token = "0x170001C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC76260", Offset = "0xC76260")]
		public float lineLength
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x1392F00", Offset = "0x1392F00", VA = "0x1392F00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x1393608", Offset = "0x1393608", VA = "0x1393608")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC76298", Offset = "0xC76298")]
		public TMP_Compatibility.AnchorPositions anchor
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x1392EF0", Offset = "0x1392EF0", VA = "0x1392EF0")]
			get
			{
				return default(TMP_Compatibility.AnchorPositions);
			}
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x1392EF8", Offset = "0x1392EF8", VA = "0x1392EF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public override Vector4 margin
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x1393678", Offset = "0x1393678", VA = "0x1393678", Slot = "69")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x139368C", Offset = "0x139368C", VA = "0x139368C", Slot = "70")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public int sortingLayerID
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x1393894", Offset = "0x1393894", VA = "0x1393894")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x13938C0", Offset = "0x13938C0", VA = "0x13938C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public int sortingOrder
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x13938F4", Offset = "0x13938F4", VA = "0x13938F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x1393920", Offset = "0x1393920", VA = "0x1393920")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public override bool autoSizeTextContainer
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x1393954", Offset = "0x1393954", VA = "0x1393954", Slot = "71")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x139395C", Offset = "0x139395C", VA = "0x139395C", Slot = "72")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public TextContainer textContainer
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x13937F4", Offset = "0x13937F4", VA = "0x13937F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public new Transform transform
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x13939C4", Offset = "0x13939C4", VA = "0x13939C4", Slot = "131")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public Renderer renderer
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x1393A64", Offset = "0x1393A64", VA = "0x1393A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public override Mesh mesh
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x1393B04", Offset = "0x1393B04", VA = "0x1393B04", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x1393BEC", Offset = "0x1393BEC", VA = "0x1393BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public MaskingTypes maskType
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x1393C8C", Offset = "0x1393C8C", VA = "0x1393C8C")]
			get
			{
				return default(MaskingTypes);
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x1393C94", Offset = "0x1393C94", VA = "0x1393C94")]
			set
			{
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x13933FC", Offset = "0x13933FC", VA = "0x13933FC")]
		public TextMeshPro()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1393E4C", Offset = "0x1393E4C", VA = "0x1393E4C")]
		public void SetMask(MaskingTypes type, Vector4 maskCoords)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1393F54", Offset = "0x1393F54", VA = "0x1393F54")]
		public void SetMask(MaskingTypes type, Vector4 maskCoords, float softnessX, float softnessY)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x13940E4", Offset = "0x13940E4", VA = "0x13940E4", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1394194", Offset = "0x1394194", VA = "0x1394194", Slot = "27")]
		public override void SetLayoutDirty()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1394238", Offset = "0x1394238", VA = "0x1394238", Slot = "29")]
		public override void SetMaterialDirty()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1394248", Offset = "0x1394248", VA = "0x1394248", Slot = "26")]
		public override void SetAllDirty()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1394298", Offset = "0x1394298", VA = "0x1394298", Slot = "37")]
		public override void Rebuild(CanvasUpdate update)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1394894", Offset = "0x1394894", VA = "0x1394894", Slot = "40")]
		protected override void UpdateMaterial()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1394944", Offset = "0x1394944", VA = "0x1394944", Slot = "105")]
		public override void UpdateMeshPadding()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1394A78", Offset = "0x1394A78", VA = "0x1394A78", Slot = "99")]
		public override void ForceMeshUpdate()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1394A84", Offset = "0x1394A84", VA = "0x1394A84", Slot = "100")]
		public override void ForceMeshUpdate(bool ignoreInactive)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1394A94", Offset = "0x1394A94", VA = "0x1394A94", Slot = "113")]
		public override TMP_TextInfo GetTextInfo(string text)
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1394B10", Offset = "0x1394B10", VA = "0x1394B10", Slot = "101")]
		public override void UpdateGeometry(Mesh mesh, int index)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1394B3C", Offset = "0x1394B3C", VA = "0x1394B3C", Slot = "102")]
		public override void UpdateVertexData(TMP_VertexDataUpdateFlags flags)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1394D70", Offset = "0x1394D70", VA = "0x1394D70", Slot = "103")]
		public override void UpdateVertexData()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1394F80", Offset = "0x1394F80", VA = "0x1394F80")]
		public void UpdateFontAsset()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x13943E8", Offset = "0x13943E8", VA = "0x13943E8", Slot = "122")]
		public void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1394528", Offset = "0x1394528", VA = "0x1394528", Slot = "123")]
		public void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1394F90", Offset = "0x1394F90", VA = "0x1394F90", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x13955F4", Offset = "0x13955F4", VA = "0x13955F4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x13956B0", Offset = "0x13956B0", VA = "0x13956B0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x139570C", Offset = "0x139570C", VA = "0x139570C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x13957CC", Offset = "0x13957CC", VA = "0x13957CC", Slot = "83")]
		protected override void LoadFontAsset()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1395E24", Offset = "0x1395E24", VA = "0x1395E24")]
		private void UpdateEnvMapMatrix()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1393C9C", Offset = "0x1393C9C", VA = "0x1393C9C")]
		private void SetMask(MaskingTypes maskType)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1393EA0", Offset = "0x1393EA0", VA = "0x1393EA0")]
		private void SetMaskCoordinates(Vector4 coords)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1393FC0", Offset = "0x1393FC0", VA = "0x1393FC0")]
		private void SetMaskCoordinates(Vector4 coords, float softX, float softY)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1396164", Offset = "0x1396164", VA = "0x1396164")]
		private void EnableMasking()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x13967E4", Offset = "0x13967E4", VA = "0x13967E4")]
		private void DisableMasking()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x13962A4", Offset = "0x13962A4", VA = "0x13962A4")]
		private void UpdateMask()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1396A20", Offset = "0x1396A20", VA = "0x1396A20", Slot = "85")]
		protected override Material GetMaterial(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1396B50", Offset = "0x1396B50", VA = "0x1396B50", Slot = "89")]
		protected override Material[] GetMaterials(Material[] mats)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1396D40", Offset = "0x1396D40", VA = "0x1396D40", Slot = "84")]
		protected override void SetSharedMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1396D84", Offset = "0x1396D84", VA = "0x1396D84", Slot = "87")]
		protected override Material[] GetSharedMaterials()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1396F64", Offset = "0x1396F64", VA = "0x1396F64", Slot = "88")]
		protected override void SetSharedMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x139740C", Offset = "0x139740C", VA = "0x139740C", Slot = "93")]
		protected override void SetOutlineThickness(float thickness)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x139758C", Offset = "0x139758C", VA = "0x139758C", Slot = "91")]
		protected override void SetFaceColor(Color32 color)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x13976E4", Offset = "0x13976E4", VA = "0x13976E4", Slot = "92")]
		protected override void SetOutlineColor(Color32 color)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1396920", Offset = "0x1396920", VA = "0x1396920")]
		private void CreateMaterialInstance()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x139783C", Offset = "0x139783C", VA = "0x139783C", Slot = "94")]
		protected override void SetShaderDepth()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x139799C", Offset = "0x139799C", VA = "0x139799C", Slot = "95")]
		protected override void SetCulling()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1397A28", Offset = "0x1397A28", VA = "0x1397A28")]
		private void SetPerspectiveCorrection()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1397AF4", Offset = "0x1397AF4", VA = "0x1397AF4", Slot = "97")]
		protected override float GetPaddingForMaterial(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1397BCC", Offset = "0x1397BCC", VA = "0x1397BCC", Slot = "96")]
		protected override float GetPaddingForMaterial()
		{
			return default(float);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1397D0C", Offset = "0x1397D0C", VA = "0x1397D0C", Slot = "108")]
		protected override int SetArraySizes(int[] chars)
		{
			return default(int);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1399EDC", Offset = "0x1399EDC", VA = "0x1399EDC", Slot = "114")]
		protected override void ComputeMarginSize()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1399FF0", Offset = "0x1399FF0", VA = "0x1399FF0", Slot = "13")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x139A00C", Offset = "0x139A00C", VA = "0x139A00C", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x139A048", Offset = "0x139A048", VA = "0x139A048", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x139A098", Offset = "0x139A098", VA = "0x139A098")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1394644", Offset = "0x1394644", VA = "0x1394644")]
		private void OnPreRenderObject()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x139A668", Offset = "0x139A668", VA = "0x139A668", Slot = "109")]
		protected override void GenerateTextMesh()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x13A393C", Offset = "0x13A393C", VA = "0x13A393C", Slot = "98")]
		protected override Vector3[] GetTextContainerLocalCorners()
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x13A383C", Offset = "0x13A383C", VA = "0x13A383C")]
		private void ClearMesh(bool updateMesh)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x13A3968", Offset = "0x13A3968", VA = "0x13A3968")]
		private void SetMeshFilters(bool state)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x13A3BFC", Offset = "0x13A3BFC", VA = "0x13A3BFC", Slot = "121")]
		protected override void SetActiveSubMeshes(bool state)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x13A3D70", Offset = "0x13A3D70", VA = "0x13A3D70", Slot = "111")]
		protected override Bounds GetCompoundBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x139A190", Offset = "0x139A190", VA = "0x139A190")]
		private void UpdateSDFScale(float lossyScale)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x13A4100", Offset = "0x13A4100", VA = "0x13A4100", Slot = "112")]
		protected override void AdjustLineOffset(int startIndex, int endIndex, float offset)
		{
		}
	}
	[Token(Token = "0x200021D")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC762D0", Offset = "0xC762D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC762D0", Offset = "0xC762D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC762D0", Offset = "0xC762D0")]
	[SelectionBase]
	public class TextMeshProUGUI : TMP_Text, ILayoutElement
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private bool m_isRebuildingLayout;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		[SerializeField]
		private Vector2 m_uvOffset;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		[SerializeField]
		private float m_uvLineOffset;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		[SerializeField]
		private bool m_hasFontAssetChanged;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		[SerializeField]
		protected TMP_SubMeshUI[] m_subTextObjects;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private float m_previousLossyScaleY;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private Vector3[] m_RectTransformCorners;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private CanvasRenderer m_canvasRenderer;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private Canvas m_canvas;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private bool m_isFirstAllocation;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		private int m_max_characters;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private WordWrapState m_SavedWordWrapState;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
		private WordWrapState m_SavedLineState;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
		private bool m_isMaskingEnabled;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
		[SerializeField]
		private Material m_baseMaterial;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		private bool m_isScrollRegionSet;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x794")]
		private int m_stencilID;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		[SerializeField]
		private Vector4 m_maskOffset;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
		private Matrix4x4 m_EnvMapMatrix;

		[NonSerialized]
		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
		private bool m_isRegisteredForEvents;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7EC")]
		private int m_recursiveCount;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
		private int m_recursiveCountA;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F4")]
		private int loopCountA;

		[Token(Token = "0x170001CC")]
		public override Material materialForRendering
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x13A47BC", Offset = "0x13A47BC", VA = "0x13A47BC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public override Mesh mesh
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x13A4860", Offset = "0x13A4860", VA = "0x13A4860", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public new CanvasRenderer canvasRenderer
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x13A4868", Offset = "0x13A4868", VA = "0x13A4868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public InlineGraphicManager inlineGraphicManager
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x13A4908", Offset = "0x13A4908", VA = "0x13A4908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public Vector4 maskOffset
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x13A53CC", Offset = "0x13A53CC", VA = "0x13A53CC")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x13A53E0", Offset = "0x13A53E0", VA = "0x13A53E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x13A4638", Offset = "0x13A4638", VA = "0x13A4638")]
		public TextMeshProUGUI()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x13A4910", Offset = "0x13A4910", VA = "0x13A4910", Slot = "122")]
		public void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x13A49A0", Offset = "0x13A49A0", VA = "0x13A49A0", Slot = "123")]
		public void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x13A4A34", Offset = "0x13A4A34", VA = "0x13A4A34", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x13A4B38", Offset = "0x13A4B38", VA = "0x13A4B38", Slot = "27")]
		public override void SetLayoutDirty()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x13A4C28", Offset = "0x13A4C28", VA = "0x13A4C28", Slot = "29")]
		public override void SetMaterialDirty()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x13A4D24", Offset = "0x13A4D24", VA = "0x13A4D24", Slot = "26")]
		public override void SetAllDirty()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x13A4D74", Offset = "0x13A4D74", VA = "0x13A4D74", Slot = "37")]
		public override void Rebuild(CanvasUpdate update)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x13A5038", Offset = "0x13A5038", VA = "0x13A5038")]
		private void UpdateSubObjectPivot()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x13A5164", Offset = "0x13A5164", VA = "0x13A5164", Slot = "57")]
		public override Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x13A52C4", Offset = "0x13A52C4", VA = "0x13A52C4", Slot = "40")]
		protected override void UpdateMaterial()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x13A59B4", Offset = "0x13A59B4", VA = "0x13A59B4", Slot = "61")]
		public override void RecalculateClipping()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x13A59BC", Offset = "0x13A59BC", VA = "0x13A59BC", Slot = "62")]
		public override void RecalculateMasking()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x13A59D4", Offset = "0x13A59D4", VA = "0x13A59D4", Slot = "105")]
		public override void UpdateMeshPadding()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x13A5B08", Offset = "0x13A5B08", VA = "0x13A5B08", Slot = "106")]
		protected override void InternalCrossFadeColor(Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x13A5C0C", Offset = "0x13A5C0C", VA = "0x13A5C0C", Slot = "107")]
		protected override void InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x13A5CD4", Offset = "0x13A5CD4", VA = "0x13A5CD4", Slot = "99")]
		public override void ForceMeshUpdate()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x13A5CE0", Offset = "0x13A5CE0", VA = "0x13A5CE0", Slot = "100")]
		public override void ForceMeshUpdate(bool ignoreInactive)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x13A5CF0", Offset = "0x13A5CF0", VA = "0x13A5CF0", Slot = "113")]
		public override TMP_TextInfo GetTextInfo(string text)
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x13A5DF0", Offset = "0x13A5DF0", VA = "0x13A5DF0", Slot = "101")]
		public override void UpdateGeometry(Mesh mesh, int index)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x13A5E9C", Offset = "0x13A5E9C", VA = "0x13A5E9C", Slot = "102")]
		public override void UpdateVertexData(TMP_VertexDataUpdateFlags flags)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x13A6140", Offset = "0x13A6140", VA = "0x13A6140", Slot = "103")]
		public override void UpdateVertexData()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x13A63C0", Offset = "0x13A63C0", VA = "0x13A63C0")]
		public void UpdateFontAsset()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x13A63D0", Offset = "0x13A63D0", VA = "0x13A63D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x13A67CC", Offset = "0x13A67CC", VA = "0x13A67CC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x13A6A68", Offset = "0x13A6A68", VA = "0x13A6A68", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x13A6C34", Offset = "0x13A6C34", VA = "0x13A6C34", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x13A6D8C", Offset = "0x13A6D8C", VA = "0x13A6D8C", Slot = "83")]
		protected override void LoadFontAsset()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x13A68CC", Offset = "0x13A68CC", VA = "0x13A68CC")]
		private Canvas GetCanvas()
		{
			return null;
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x13A7484", Offset = "0x13A7484", VA = "0x13A7484")]
		private void UpdateEnvMapMatrix()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x13A77D4", Offset = "0x13A77D4", VA = "0x13A77D4")]
		private void EnableMasking()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x13A79A4", Offset = "0x13A79A4", VA = "0x13A79A4")]
		private void DisableMasking()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x13A5418", Offset = "0x13A5418", VA = "0x13A5418")]
		private void UpdateMask()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x13A7AB4", Offset = "0x13A7AB4", VA = "0x13A7AB4", Slot = "85")]
		protected override Material GetMaterial(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x13A7C10", Offset = "0x13A7C10", VA = "0x13A7C10", Slot = "89")]
		protected override Material[] GetMaterials(Material[] mats)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x13A7E08", Offset = "0x13A7E08", VA = "0x13A7E08", Slot = "84")]
		protected override void SetSharedMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x13A7E4C", Offset = "0x13A7E4C", VA = "0x13A7E4C", Slot = "87")]
		protected override Material[] GetSharedMaterials()
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x13A802C", Offset = "0x13A802C", VA = "0x13A802C", Slot = "88")]
		protected override void SetSharedMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x13A84D4", Offset = "0x13A84D4", VA = "0x13A84D4", Slot = "93")]
		protected override void SetOutlineThickness(float thickness)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x13A86D4", Offset = "0x13A86D4", VA = "0x13A86D4", Slot = "91")]
		protected override void SetFaceColor(Color32 color)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x13A882C", Offset = "0x13A882C", VA = "0x13A882C", Slot = "92")]
		protected override void SetOutlineColor(Color32 color)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x13A8984", Offset = "0x13A8984", VA = "0x13A8984", Slot = "94")]
		protected override void SetShaderDepth()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x13A8B04", Offset = "0x13A8B04", VA = "0x13A8B04", Slot = "95")]
		protected override void SetCulling()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x13A8B90", Offset = "0x13A8B90", VA = "0x13A8B90")]
		private void SetPerspectiveCorrection()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x13A8C5C", Offset = "0x13A8C5C", VA = "0x13A8C5C", Slot = "97")]
		protected override float GetPaddingForMaterial(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x13A8D34", Offset = "0x13A8D34", VA = "0x13A8D34", Slot = "96")]
		protected override float GetPaddingForMaterial()
		{
			return default(float);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x13A8DF8", Offset = "0x13A8DF8", VA = "0x13A8DF8")]
		private void SetMeshArrays(int size)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x13A8EA4", Offset = "0x13A8EA4", VA = "0x13A8EA4", Slot = "108")]
		protected override int SetArraySizes(int[] chars)
		{
			return default(int);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x13AB170", Offset = "0x13AB170", VA = "0x13AB170", Slot = "114")]
		protected override void ComputeMarginSize()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x13AB2A4", Offset = "0x13AB2A4", VA = "0x13AB2A4", Slot = "13")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x13AB2E8", Offset = "0x13AB2E8", VA = "0x13AB2E8", Slot = "15")]
		protected override void OnCanvasHierarchyChanged()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x13AB31C", Offset = "0x13AB31C", VA = "0x13AB31C", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x13AB36C", Offset = "0x13AB36C", VA = "0x13AB36C", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x13AB3F8", Offset = "0x13AB3F8", VA = "0x13AB3F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x13A4E30", Offset = "0x13A4E30", VA = "0x13A4E30")]
		private void OnPreRenderCanvas()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x13ABB80", Offset = "0x13ABB80", VA = "0x13ABB80", Slot = "109")]
		protected override void GenerateTextMesh()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x13B54F4", Offset = "0x13B54F4", VA = "0x13B54F4", Slot = "98")]
		protected override Vector3[] GetTextContainerLocalCorners()
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x13B5398", Offset = "0x13B5398", VA = "0x13B5398")]
		private void ClearMesh()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x13B55B8", Offset = "0x13B55B8", VA = "0x13B55B8", Slot = "121")]
		protected override void SetActiveSubMeshes(bool state)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x13B572C", Offset = "0x13B572C", VA = "0x13B572C", Slot = "111")]
		protected override Bounds GetCompoundBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x13AB50C", Offset = "0x13AB50C", VA = "0x13AB50C")]
		private void UpdateSDFScale(float lossyScale)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x13B5ABC", Offset = "0x13B5ABC", VA = "0x13B5ABC", Slot = "112")]
		protected override void AdjustLineOffset(int startIndex, int endIndex, float offset)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class TMP_Asset : ScriptableObject
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int hashCode;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int materialHashCode;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1130DD0", Offset = "0x1130DD0", VA = "0x1130DD0")]
		public TMP_Asset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class TMP_ColorGradient : ScriptableObject
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color topLeft;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color topRight;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color bottomLeft;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color bottomRight;

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1130E1C", Offset = "0x1130E1C", VA = "0x1130E1C")]
		public TMP_ColorGradient()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1130E6C", Offset = "0x1130E6C", VA = "0x1130E6C")]
		public TMP_ColorGradient(Color color)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1130ED0", Offset = "0x1130ED0", VA = "0x1130ED0")]
		public TMP_ColorGradient(Color color0, Color color1, Color color2, Color color3)
		{
		}
	}
	[Token(Token = "0x2000220")]
	public static class TMP_Compatibility
	{
		[Token(Token = "0x2000221")]
		public enum AnchorPositions
		{
			[Token(Token = "0x4000BF0")]
			TopLeft,
			[Token(Token = "0x4000BF1")]
			Top,
			[Token(Token = "0x4000BF2")]
			TopRight,
			[Token(Token = "0x4000BF3")]
			Left,
			[Token(Token = "0x4000BF4")]
			Center,
			[Token(Token = "0x4000BF5")]
			Right,
			[Token(Token = "0x4000BF6")]
			BottomLeft,
			[Token(Token = "0x4000BF7")]
			Bottom,
			[Token(Token = "0x4000BF8")]
			BottomRight,
			[Token(Token = "0x4000BF9")]
			BaseLine,
			[Token(Token = "0x4000BFA")]
			None
		}
	}
	[Token(Token = "0x2000222")]
	internal interface ITweenValue
	{
		[Token(Token = "0x170001D1")]
		bool ignoreTimeScale
		{
			[Token(Token = "0x6000F46")]
			get;
		}

		[Token(Token = "0x170001D2")]
		float duration
		{
			[Token(Token = "0x6000F47")]
			get;
		}

		[Token(Token = "0x6000F45")]
		void TweenValue(float floatPercentage);

		[Token(Token = "0x6000F48")]
		bool ValidTarget();
	}
	[Token(Token = "0x2000223")]
	internal struct ColorTween : ITweenValue
	{
		[Token(Token = "0x2000224")]
		public enum ColorTweenMode
		{
			[Token(Token = "0x4000C02")]
			All,
			[Token(Token = "0x4000C03")]
			RGB,
			[Token(Token = "0x4000C04")]
			Alpha
		}

		[Token(Token = "0x2000225")]
		public class ColorTweenCallback : UnityEvent<Color>
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x138BA2C", Offset = "0x138BA2C", VA = "0x138BA2C")]
			public ColorTweenCallback()
			{
			}
		}

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ColorTweenCallback m_Target;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Color m_StartColor;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_TargetColor;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ColorTweenMode m_TweenMode;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_Duration;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IgnoreTimeScale;

		[Token(Token = "0x170001D3")]
		public Color startColor
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x138B834", Offset = "0x138B834", VA = "0x138B834")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x138B840", Offset = "0x138B840", VA = "0x138B840")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Color targetColor
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x138B84C", Offset = "0x138B84C", VA = "0x138B84C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x138B858", Offset = "0x138B858", VA = "0x138B858")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public ColorTweenMode tweenMode
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x138B864", Offset = "0x138B864", VA = "0x138B864")]
			get
			{
				return default(ColorTweenMode);
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x138B86C", Offset = "0x138B86C", VA = "0x138B86C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public float duration
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x138B874", Offset = "0x138B874", VA = "0x138B874", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x138B87C", Offset = "0x138B87C", VA = "0x138B87C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public bool ignoreTimeScale
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x138B884", Offset = "0x138B884", VA = "0x138B884", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x138B88C", Offset = "0x138B88C", VA = "0x138B88C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x138B994", Offset = "0x138B994", VA = "0x138B994", Slot = "4")]
		public void TweenValue(float floatPercentage)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x138BA7C", Offset = "0x138BA7C", VA = "0x138BA7C")]
		public void AddOnChangedCallback(UnityAction<Color> callback)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x138BA84", Offset = "0x138BA84", VA = "0x138BA84")]
		public bool GetIgnoreTimescale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x138BA8C", Offset = "0x138BA8C", VA = "0x138BA8C")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x138BA94", Offset = "0x138BA94", VA = "0x138BA94", Slot = "7")]
		public bool ValidTarget()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000226")]
	internal struct FloatTween : ITweenValue
	{
		[Token(Token = "0x2000227")]
		public class FloatTweenCallback : UnityEvent<float>
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x138C3B8", Offset = "0x138C3B8", VA = "0x138C3B8")]
			public FloatTweenCallback()
			{
			}
		}

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FloatTweenCallback m_Target;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float m_StartValue;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_TargetValue;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_Duration;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_IgnoreTimeScale;

		[Token(Token = "0x170001D8")]
		public float startValue
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x138C1C8", Offset = "0x138C1C8", VA = "0x138C1C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x138C1D8", Offset = "0x138C1D8", VA = "0x138C1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public float targetValue
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x138C1E0", Offset = "0x138C1E0", VA = "0x138C1E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x138C1F0", Offset = "0x138C1F0", VA = "0x138C1F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public float duration
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x138C200", Offset = "0x138C200", VA = "0x138C200", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x138C210", Offset = "0x138C210", VA = "0x138C210")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public bool ignoreTimeScale
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x138C220", Offset = "0x138C220", VA = "0x138C220", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x138C234", Offset = "0x138C234", VA = "0x138C234")]
			set
			{
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x138C320", Offset = "0x138C320", VA = "0x138C320", Slot = "4")]
		public void TweenValue(float floatPercentage)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x138C408", Offset = "0x138C408", VA = "0x138C408")]
		public void AddOnChangedCallback(UnityAction<float> callback)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x138C410", Offset = "0x138C410", VA = "0x138C410")]
		public bool GetIgnoreTimescale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x138C418", Offset = "0x138C418", VA = "0x138C418")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x138C420", Offset = "0x138C420", VA = "0x138C420", Slot = "7")]
		public bool ValidTarget()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000228")]
	internal class TweenRunner<T> where T : struct, ITweenValue
	{
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76424", Offset = "0xC76424")]
		private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal T tweenInfo;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float <elapsedTime>__0;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float <percentage>__1;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object $current;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool $disposing;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int $PC;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600142A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600142B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001428")]
			[DebuggerHidden]
			public <Start>c__Iterator0()
			{
			}

			[Token(Token = "0x6001429")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142C")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600142D")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MonoBehaviour m_CoroutineContainer;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IEnumerator m_Tween;

		[Token(Token = "0x6000F67")]
		public TweenRunner()
		{
		}

		[Token(Token = "0x6000F68")]
		[DebuggerHidden]
		private static IEnumerator Start(T tweenInfo)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		public void Init(MonoBehaviour coroutineContainer)
		{
		}

		[Token(Token = "0x6000F6A")]
		public void StartTween(T info)
		{
		}

		[Token(Token = "0x6000F6B")]
		public void StopTween()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public static class TMP_DefaultControls
	{
		[Token(Token = "0x200022A")]
		public struct Resources
		{
			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sprite standard;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite background;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite inputField;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite knob;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite checkmark;

			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sprite dropdown;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Sprite mask;
		}

		[Token(Token = "0x4000C0C")]
		private const float kWidth = 160f;

		[Token(Token = "0x4000C0D")]
		private const float kThickHeight = 30f;

		[Token(Token = "0x4000C0E")]
		private const float kThinHeight = 20f;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 s_ThickElementSize;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2 s_ThinElementSize;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Color s_DefaultSelectableColor;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Color s_TextColor;

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1130FB4", Offset = "0x1130FB4", VA = "0x1130FB4")]
		private static GameObject CreateUIElementRoot(string name, Vector2 size)
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1131064", Offset = "0x1131064", VA = "0x1131064")]
		private static GameObject CreateUIObject(string name, GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1131244", Offset = "0x1131244", VA = "0x1131244")]
		private static void SetDefaultTextValues(TMP_Text lbl)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1131378", Offset = "0x1131378", VA = "0x1131378")]
		private static void SetDefaultColorTransitionValues(Selectable slider)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x113111C", Offset = "0x113111C", VA = "0x113111C")]
		private static void SetParentAndAlign(GameObject child, GameObject parent)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1131470", Offset = "0x1131470", VA = "0x1131470")]
		private static void SetLayerRecursively(GameObject go, int layer)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1131594", Offset = "0x1131594", VA = "0x1131594")]
		public static GameObject CreateScrollbar(Resources resources)
		{
			return null;
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1131930", Offset = "0x1131930", VA = "0x1131930")]
		public static GameObject CreateInputField(Resources resources)
		{
			return null;
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x113248C", Offset = "0x113248C", VA = "0x113248C")]
		public static GameObject CreateDropdown(Resources resources)
		{
			return null;
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC76484", Offset = "0xC76484")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC76484", Offset = "0xC76484")]
	public class TMP_Dropdown : Selectable, IPointerClickHandler, ISubmitHandler, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x200022C")]
		protected internal class DropdownItem : MonoBehaviour, IPointerEnterHandler, ICancelHandler, IEventSystemHandler
		{
			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private TMP_Text m_Text;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Image m_Image;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private RectTransform m_RectTransform;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Toggle m_Toggle;

			[Token(Token = "0x170001E4")]
			public TMP_Text text
			{
				[Token(Token = "0x6000FA2")]
				[Address(RVA = "0x113673C", Offset = "0x113673C", VA = "0x113673C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA3")]
				[Address(RVA = "0x1134B44", Offset = "0x1134B44", VA = "0x1134B44")]
				set
				{
				}
			}

			[Token(Token = "0x170001E5")]
			public Image image
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0x1136744", Offset = "0x1136744", VA = "0x1136744")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA5")]
				[Address(RVA = "0x1134B4C", Offset = "0x1134B4C", VA = "0x1134B4C")]
				set
				{
				}
			}

			[Token(Token = "0x170001E6")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0x1135C8C", Offset = "0x1135C8C", VA = "0x1135C8C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0x1134B5C", Offset = "0x1134B5C", VA = "0x1134B5C")]
				set
				{
				}
			}

			[Token(Token = "0x170001E7")]
			public Toggle toggle
			{
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0x1136048", Offset = "0x1136048", VA = "0x1136048")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0x1134B54", Offset = "0x1134B54", VA = "0x1134B54")]
				set
				{
				}
			}

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1136E58", Offset = "0x1136E58", VA = "0x1136E58")]
			public DropdownItem()
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1136E60", Offset = "0x1136E60", VA = "0x1136E60", Slot = "6")]
			public virtual void OnPointerEnter(PointerEventData eventData)
			{
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1136EF4", Offset = "0x1136EF4", VA = "0x1136EF4", Slot = "7")]
			public virtual void OnCancel(BaseEventData eventData)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022D")]
		public class OptionData
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string m_Text;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Sprite m_Image;

			[Token(Token = "0x170001E8")]
			public string text
			{
				[Token(Token = "0x6000FB0")]
				[Address(RVA = "0x113413C", Offset = "0x113413C", VA = "0x113413C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x1133808", Offset = "0x1133808", VA = "0x1133808")]
				set
				{
				}
			}

			[Token(Token = "0x170001E9")]
			public Sprite image
			{
				[Token(Token = "0x6000FB2")]
				[Address(RVA = "0x1134144", Offset = "0x1134144", VA = "0x1134144")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FB3")]
				[Address(RVA = "0x1136F9C", Offset = "0x1136F9C", VA = "0x1136F9C")]
				set
				{
				}
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1133800", Offset = "0x1133800", VA = "0x1133800")]
			public OptionData()
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x11342E0", Offset = "0x11342E0", VA = "0x11342E0")]
			public OptionData(string text)
			{
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x1134420", Offset = "0x1134420", VA = "0x1134420")]
			public OptionData(Sprite image)
			{
			}

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x1136FA4", Offset = "0x1136FA4", VA = "0x1136FA4")]
			public OptionData(string text, Sprite image)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022E")]
		public class OptionDataList
		{
			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private List<OptionData> m_Options;

			[Token(Token = "0x170001EA")]
			public List<OptionData> options
			{
				[Token(Token = "0x6000FB5")]
				[Address(RVA = "0x1133DE8", Offset = "0x1133DE8", VA = "0x1133DE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FB6")]
				[Address(RVA = "0x1133E2C", Offset = "0x1133E2C", VA = "0x1133E2C")]
				set
				{
				}
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1133CEC", Offset = "0x1133CEC", VA = "0x1133CEC")]
			public OptionDataList()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022F")]
		public class DropdownEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x1133D60", Offset = "0x1133D60", VA = "0x1133D60")]
			public DropdownEvent()
			{
			}
		}

		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC766B0", Offset = "0xC766B0")]
		private sealed class <Show>c__AnonStorey1
		{
			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal DropdownItem item;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TMP_Dropdown $this;

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x1135C94", Offset = "0x1135C94", VA = "0x1135C94")]
			public <Show>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x1136E20", Offset = "0x1136E20", VA = "0x1136E20")]
			internal void <>m__0(bool x)
			{
			}
		}

		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC766C0", Offset = "0xC766C0")]
		private sealed class <DelayedDestroyDropdownList>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TMP_Dropdown $this;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001432")]
				[Address(RVA = "0x1136D98", Offset = "0x1136D98", VA = "0x1136D98", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001433")]
				[Address(RVA = "0x1136DA0", Offset = "0x1136DA0", VA = "0x1136DA0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x113693C", Offset = "0x113693C", VA = "0x113693C")]
			[DebuggerHidden]
			public <DelayedDestroyDropdownList>c__Iterator0()
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x1136B18", Offset = "0x1136B18", VA = "0x1136B18", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x1136DA8", Offset = "0x1136DA8", VA = "0x1136DA8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0x1136DBC", Offset = "0x1136DBC", VA = "0x1136DBC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private RectTransform m_Template;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TMP_Text m_CaptionText;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Image m_CaptionImage;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC76540", Offset = "0xC76540")]
		[SerializeField]
		private TMP_Text m_ItemText;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Image m_ItemImage;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC76588", Offset = "0xC76588")]
		[SerializeField]
		private int m_Value;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC765C0", Offset = "0xC765C0")]
		[SerializeField]
		private OptionDataList m_Options;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xC765F8", Offset = "0xC765F8")]
		[SerializeField]
		private DropdownEvent m_OnValueChanged;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private GameObject m_Dropdown;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject m_Blocker;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<DropdownItem> m_Items;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private TweenRunner<FloatTween> m_AlphaTweenRunner;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool validTemplate;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OptionData s_NoOptionData;

		[Token(Token = "0x170001DC")]
		public RectTransform template
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x1133DB0", Offset = "0x1133DB0", VA = "0x1133DB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x11337C0", Offset = "0x11337C0", VA = "0x11337C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public TMP_Text captionText
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x1133DB8", Offset = "0x1133DB8", VA = "0x1133DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x11337C8", Offset = "0x11337C8", VA = "0x11337C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Image captionImage
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x1133DC0", Offset = "0x1133DC0", VA = "0x1133DC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x1133DC8", Offset = "0x1133DC8", VA = "0x1133DC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public TMP_Text itemText
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x1133DD0", Offset = "0x1133DD0", VA = "0x1133DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x11337D0", Offset = "0x11337D0", VA = "0x11337D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public Image itemImage
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x1133DD8", Offset = "0x1133DD8", VA = "0x1133DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x1133DE0", Offset = "0x1133DE0", VA = "0x1133DE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public List<OptionData> options
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x11337D8", Offset = "0x11337D8", VA = "0x11337D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x1133DF0", Offset = "0x1133DF0", VA = "0x1133DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public DropdownEvent onValueChanged
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x1133E34", Offset = "0x1133E34", VA = "0x1133E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x1133E3C", Offset = "0x1133E3C", VA = "0x1133E3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public int value
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x1133E44", Offset = "0x1133E44", VA = "0x1133E44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x1133E4C", Offset = "0x1133E4C", VA = "0x1133E4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1133C24", Offset = "0x1133C24", VA = "0x1133C24")]
		protected TMP_Dropdown()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1133F9C", Offset = "0x1133F9C", VA = "0x1133F9C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1133810", Offset = "0x1133810", VA = "0x1133810")]
		public void RefreshShownValue()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x113414C", Offset = "0x113414C", VA = "0x113414C")]
		public void AddOptions(List<OptionData> options)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x11341CC", Offset = "0x11341CC", VA = "0x11341CC")]
		public void AddOptions(List<string> options)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x113430C", Offset = "0x113430C", VA = "0x113430C")]
		public void AddOptions(List<Sprite> options)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x113444C", Offset = "0x113444C", VA = "0x113444C")]
		public void ClearOptions()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x11344BC", Offset = "0x11344BC", VA = "0x11344BC")]
		private void SetupTemplate()
		{
		}

		[Token(Token = "0x6000F8E")]
		private static T GetOrAddComponent<T>(GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1134B64", Offset = "0x1134B64", VA = "0x1134B64", Slot = "42")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1135B4C", Offset = "0x1135B4C", VA = "0x1135B4C", Slot = "43")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1135B50", Offset = "0x1135B50", VA = "0x1135B50", Slot = "44")]
		public virtual void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1134B68", Offset = "0x1134B68", VA = "0x1134B68")]
		public void Show()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x11361BC", Offset = "0x11361BC", VA = "0x11361BC", Slot = "45")]
		protected virtual GameObject CreateBlocker(Canvas rootCanvas)
		{
			return null;
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1136578", Offset = "0x1136578", VA = "0x1136578", Slot = "46")]
		protected virtual void DestroyBlocker(GameObject blocker)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x11365E4", Offset = "0x11365E4", VA = "0x11365E4", Slot = "47")]
		protected virtual GameObject CreateDropdownList(GameObject template)
		{
			return null;
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1136658", Offset = "0x1136658", VA = "0x1136658", Slot = "48")]
		protected virtual void DestroyDropdownList(GameObject dropdownList)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x11366C4", Offset = "0x11366C4", VA = "0x11366C4", Slot = "49")]
		protected virtual DropdownItem CreateItem(DropdownItem itemTemplate)
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1136738", Offset = "0x1136738", VA = "0x1136738", Slot = "50")]
		protected virtual void DestroyItem(DropdownItem item)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x1135C9C", Offset = "0x1135C9C", VA = "0x1135C9C")]
		private DropdownItem AddItem(OptionData data, bool selected, DropdownItem itemTemplate, List<DropdownItem> items)
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x113674C", Offset = "0x113674C", VA = "0x113674C")]
		private void AlphaFadeList(float duration, float alpha)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1136050", Offset = "0x1136050", VA = "0x1136050")]
		private void AlphaFadeList(float duration, float start, float end)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x11367E4", Offset = "0x11367E4", VA = "0x11367E4")]
		private void SetAlpha(float alpha)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x1135B54", Offset = "0x1135B54", VA = "0x1135B54")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x11368B0", Offset = "0x11368B0", VA = "0x11368B0")]
		[DebuggerHidden]
		private IEnumerator DelayedDestroyDropdownList(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x1136944", Offset = "0x1136944", VA = "0x1136944")]
		private void OnSelectItem(Toggle toggle)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000230")]
	public struct TMP_FontWeights
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TMP_FontAsset regularTypeface;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TMP_FontAsset italicTypeface;
	}
	[Serializable]
	[Token(Token = "0x2000231")]
	public class TMP_FontAsset : TMP_Asset
	{
		[Token(Token = "0x2000232")]
		public enum FontAssetTypes
		{
			[Token(Token = "0x4000C47")]
			None,
			[Token(Token = "0x4000C48")]
			SDF,
			[Token(Token = "0x4000C49")]
			Bitmap
		}

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TMP_FontAsset s_defaultFontAsset;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FontAssetTypes fontAssetType;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FaceInfo m_fontInfo;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture2D atlas;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<TMP_Glyph> m_glyphInfoList;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, TMP_Glyph> m_characterDictionary;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, KerningPair> m_kerningDictionary;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private KerningTable m_kerningInfo;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private KerningPair m_kerningPair;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<TMP_FontAsset> fallbackFontAssets;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public FontCreationSetting fontCreationSettings;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public TMP_FontWeights[] fontWeights;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] m_characterSet;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float normalStyle;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float normalSpacingOffset;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float boldStyle;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float boldSpacing;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public byte italicStyle;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public byte tabSize;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private byte m_oldTabSize;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC767A0", Offset = "0xC767A0")]
		private static Func<TMP_Glyph, int> <>f__am$cache0;

		[Token(Token = "0x170001EB")]
		public static TMP_FontAsset defaultFontAsset
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x113705C", Offset = "0x113705C", VA = "0x113705C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public FaceInfo fontInfo
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x113711C", Offset = "0x113711C", VA = "0x113711C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public Dictionary<int, TMP_Glyph> characterDictionary
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1137124", Offset = "0x1137124", VA = "0x1137124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public Dictionary<int, KerningPair> kerningDictionary
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1137FF4", Offset = "0x1137FF4", VA = "0x1137FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public KerningTable kerningInfo
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1137FFC", Offset = "0x1137FFC", VA = "0x1137FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1136FDC", Offset = "0x1136FDC", VA = "0x1136FDC")]
		public TMP_FontAsset()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1138004", Offset = "0x1138004", VA = "0x1138004")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1138008", Offset = "0x1138008", VA = "0x1138008")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x113800C", Offset = "0x113800C", VA = "0x113800C")]
		public void AddFaceInfo(FaceInfo faceInfo)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1138014", Offset = "0x1138014", VA = "0x1138014")]
		public void AddGlyphInfo(TMP_Glyph[] glyphInfo)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1138408", Offset = "0x1138408", VA = "0x1138408")]
		public void AddKerningInfo(KerningTable kerningTable)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1137154", Offset = "0x1137154", VA = "0x1137154")]
		public void ReadFontDefinition()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1138574", Offset = "0x1138574", VA = "0x1138574")]
		public bool HasCharacter(int character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x11385EC", Offset = "0x11385EC", VA = "0x11385EC")]
		public bool HasCharacter(char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1138664", Offset = "0x1138664", VA = "0x1138664")]
		public bool HasCharacter(char character, bool searchFallbacks)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1138980", Offset = "0x1138980", VA = "0x1138980")]
		public bool HasCharacters(string text, out List<char> missingCharacters)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1138AF8", Offset = "0x1138AF8", VA = "0x1138AF8")]
		public static string GetCharacters(TMP_FontAsset fontAsset)
		{
			return null;
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1138C1C", Offset = "0x1138C1C", VA = "0x1138C1C")]
		public static int[] GetCharactersArray(TMP_FontAsset fontAsset)
		{
			return null;
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1138D68", Offset = "0x1138D68", VA = "0x1138D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC767B0", Offset = "0xC767B0")]
		private static int <AddGlyphInfo>m__0(TMP_Glyph s)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC767C0", Offset = "0xC767C0")]
	public class TMP_InputField : Selectable, IUpdateSelectedHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IPointerClickHandler, ISubmitHandler, ICanvasElement, IEventSystemHandler
	{
		[Token(Token = "0x2000234")]
		public enum ContentType
		{
			[Token(Token = "0x4000C82")]
			Standard,
			[Token(Token = "0x4000C83")]
			Autocorrected,
			[Token(Token = "0x4000C84")]
			IntegerNumber,
			[Token(Token = "0x4000C85")]
			DecimalNumber,
			[Token(Token = "0x4000C86")]
			Alphanumeric,
			[Token(Token = "0x4000C87")]
			Name,
			[Token(Token = "0x4000C88")]
			EmailAddress,
			[Token(Token = "0x4000C89")]
			Password,
			[Token(Token = "0x4000C8A")]
			Pin,
			[Token(Token = "0x4000C8B")]
			Custom
		}

		[Token(Token = "0x2000235")]
		public enum InputType
		{
			[Token(Token = "0x4000C8D")]
			Standard,
			[Token(Token = "0x4000C8E")]
			AutoCorrect,
			[Token(Token = "0x4000C8F")]
			Password
		}

		[Token(Token = "0x2000236")]
		public enum CharacterValidation
		{
			[Token(Token = "0x4000C91")]
			None,
			[Token(Token = "0x4000C92")]
			Integer,
			[Token(Token = "0x4000C93")]
			Decimal,
			[Token(Token = "0x4000C94")]
			Alphanumeric,
			[Token(Token = "0x4000C95")]
			Name,
			[Token(Token = "0x4000C96")]
			EmailAddress
		}

		[Token(Token = "0x2000237")]
		public enum LineType
		{
			[Token(Token = "0x4000C98")]
			SingleLine,
			[Token(Token = "0x4000C99")]
			MultiLineSubmit,
			[Token(Token = "0x4000C9A")]
			MultiLineNewline
		}

		[Token(Token = "0x2000238")]
		public delegate char OnValidateInput(string text, int charIndex, char addedChar);

		[Serializable]
		[Token(Token = "0x2000239")]
		public class SubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x1138F8C", Offset = "0x1138F8C", VA = "0x1138F8C")]
			public SubmitEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200023A")]
		public class OnChangeEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x1138FDC", Offset = "0x1138FDC", VA = "0x1138FDC")]
			public OnChangeEvent()
			{
			}
		}

		[Token(Token = "0x200023B")]
		protected enum EditState
		{
			[Token(Token = "0x4000C9C")]
			Continue,
			[Token(Token = "0x4000C9D")]
			Finish
		}

		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76A0C", Offset = "0xC76A0C")]
		private sealed class <CaretBlink>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <blinkPeriod>__1;

			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool <blinkState>__1;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal TMP_InputField $this;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001438")]
				[Address(RVA = "0x1142038", Offset = "0x1142038", VA = "0x1142038", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001439")]
				[Address(RVA = "0x1142040", Offset = "0x1142040", VA = "0x1142040", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x113B11C", Offset = "0x113B11C", VA = "0x113B11C")]
			[DebuggerHidden]
			public <CaretBlink>c__Iterator0()
			{
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0x1141E78", Offset = "0x1141E78", VA = "0x1141E78", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x1142048", Offset = "0x1142048", VA = "0x1142048", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600143B")]
			[Address(RVA = "0x114205C", Offset = "0x114205C", VA = "0x114205C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76A6C", Offset = "0xC76A6C")]
		private sealed class <MouseDragOutsideRect>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PointerEventData eventData;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 <localMousePos>__1;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Rect <rect>__1;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float <delay>__1;

			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal TMP_InputField $this;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600143E")]
				[Address(RVA = "0x11423AC", Offset = "0x11423AC", VA = "0x11423AC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600143F")]
				[Address(RVA = "0x11423B4", Offset = "0x11423B4", VA = "0x11423B4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0x113D6A0", Offset = "0x113D6A0", VA = "0x113D6A0")]
			[DebuggerHidden]
			public <MouseDragOutsideRect>c__Iterator1()
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0x11420C0", Offset = "0x11420C0", VA = "0x11420C0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0x11423BC", Offset = "0x11423BC", VA = "0x11423BC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001441")]
			[Address(RVA = "0x11423D0", Offset = "0x11423D0", VA = "0x11423D0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected TouchScreenKeyboard m_Keyboard;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] kSeparators;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected RectTransform m_TextViewport;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected TMP_Text m_TextComponent;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected RectTransform m_TextComponentRectTransform;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected Graphic m_Placeholder;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ContentType m_ContentType;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private InputType m_InputType;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private char m_AsteriskChar;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private TouchScreenKeyboardType m_KeyboardType;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private LineType m_LineType;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool m_HideMobileInput;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private CharacterValidation m_CharacterValidation;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int m_CharacterLimit;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SubmitEvent m_OnEndEdit;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private SubmitEvent m_OnSubmit;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private SubmitEvent m_OnFocusLost;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OnChangeEvent m_OnValueChanged;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OnValidateInput m_OnValidateInput;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Color m_CaretColor;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private bool m_CustomCaretColor;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private Color m_SelectionColor;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		protected string m_Text;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7693C", Offset = "0xC7693C")]
		private float m_CaretBlinkRate;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC7697C", Offset = "0xC7697C")]
		private int m_CaretWidth;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool m_ReadOnly;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool m_RichText;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected int m_StringPosition;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected int m_StringSelectPosition;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected int m_CaretPosition;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected int m_CaretSelectPosition;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private RectTransform caretRectTrans;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected UIVertex[] m_CursorVerts;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private CanvasRenderer m_CachedInputRenderer;

		[NonSerialized]
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected Mesh m_Mesh;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool m_AllowInput;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool m_HasLostFocus;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		private bool m_ShouldActivateNextUpdate;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
		private bool m_UpdateDrag;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool m_DragPositionOutOfBounds;

		[Token(Token = "0x4000C72")]
		private const float kHScrollSpeed = 0.05f;

		[Token(Token = "0x4000C73")]
		private const float kVScrollSpeed = 0.1f;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		protected bool m_CaretVisible;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Coroutine m_BlinkCoroutine;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float m_BlinkStartTime;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected int m_DrawStart;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected int m_DrawEnd;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Coroutine m_DragCoroutine;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string m_OriginalText;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool m_WasCanceled;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		private bool m_HasDoneFocusTransition;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		private bool m_isLastKeyBackspace;

		[Token(Token = "0x4000C7E")]
		private const string kEmailSpecialCharacters = "!#$%&'*+-/=?^_`{|}~";

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		private bool isCaretInsideTag;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Event m_ProcessingEvent;

		[Token(Token = "0x170001F0")]
		protected Mesh mesh
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x113902C", Offset = "0x113902C", VA = "0x113902C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public bool shouldHideMobileInput
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x113913C", Offset = "0x113913C", VA = "0x113913C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x11390D8", Offset = "0x11390D8", VA = "0x11390D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public string text
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x1139194", Offset = "0x1139194", VA = "0x1139194")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x113919C", Offset = "0x113919C", VA = "0x113919C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public bool isFocused
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1139280", Offset = "0x1139280", VA = "0x1139280")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		public float caretBlinkRate
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1139288", Offset = "0x1139288", VA = "0x1139288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1139290", Offset = "0x1139290", VA = "0x1139290")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public int caretWidth
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1139378", Offset = "0x1139378", VA = "0x1139378")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x1139380", Offset = "0x1139380", VA = "0x1139380")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public RectTransform textViewport
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x113946C", Offset = "0x113946C", VA = "0x113946C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x1132360", Offset = "0x1132360", VA = "0x1132360")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public TMP_Text textComponent
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x1139474", Offset = "0x1139474", VA = "0x1139474")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x11323C4", Offset = "0x11323C4", VA = "0x11323C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public Graphic placeholder
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x113947C", Offset = "0x113947C", VA = "0x113947C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x1132428", Offset = "0x1132428", VA = "0x1132428")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public Color caretColor
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x1139484", Offset = "0x1139484", VA = "0x1139484")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x11394DC", Offset = "0x11394DC", VA = "0x11394DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public bool customCaretColor
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x11394D4", Offset = "0x11394D4", VA = "0x11394D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x113951C", Offset = "0x113951C", VA = "0x113951C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public Color selectionColor
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x1139540", Offset = "0x1139540", VA = "0x1139540")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x1139554", Offset = "0x1139554", VA = "0x1139554")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public SubmitEvent onEndEdit
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x1139594", Offset = "0x1139594", VA = "0x1139594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x113959C", Offset = "0x113959C", VA = "0x113959C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public SubmitEvent onSubmit
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x1139600", Offset = "0x1139600", VA = "0x1139600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x1139608", Offset = "0x1139608", VA = "0x1139608")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public SubmitEvent onFocusLost
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x113966C", Offset = "0x113966C", VA = "0x113966C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x1139674", Offset = "0x1139674", VA = "0x1139674")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public OnChangeEvent onValueChanged
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x11396D8", Offset = "0x11396D8", VA = "0x11396D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x11396E0", Offset = "0x11396E0", VA = "0x11396E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public OnValidateInput onValidateInput
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x1139744", Offset = "0x1139744", VA = "0x1139744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x113974C", Offset = "0x113974C", VA = "0x113974C")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public int characterLimit
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x11397B0", Offset = "0x11397B0", VA = "0x11397B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x11397B8", Offset = "0x11397B8", VA = "0x11397B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public ContentType contentType
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x1139B48", Offset = "0x1139B48", VA = "0x1139B48")]
			get
			{
				return default(ContentType);
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x1139B50", Offset = "0x1139B50", VA = "0x1139B50")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public LineType lineType
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x1139D84", Offset = "0x1139D84", VA = "0x1139D84")]
			get
			{
				return default(LineType);
			}
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x1139D8C", Offset = "0x1139D8C", VA = "0x1139D8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public InputType inputType
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x1139FA4", Offset = "0x1139FA4", VA = "0x1139FA4")]
			get
			{
				return default(InputType);
			}
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x1139FAC", Offset = "0x1139FAC", VA = "0x1139FAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public TouchScreenKeyboardType keyboardType
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x113A054", Offset = "0x113A054", VA = "0x113A054")]
			get
			{
				return default(TouchScreenKeyboardType);
			}
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x113A05C", Offset = "0x113A05C", VA = "0x113A05C")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public CharacterValidation characterValidation
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x113A0EC", Offset = "0x113A0EC", VA = "0x113A0EC")]
			get
			{
				return default(CharacterValidation);
			}
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x113A0F4", Offset = "0x113A0F4", VA = "0x113A0F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public bool readOnly
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x113A184", Offset = "0x113A184", VA = "0x113A184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x113A18C", Offset = "0x113A18C", VA = "0x113A18C")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public bool richText
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x113A198", Offset = "0x113A198", VA = "0x113A198")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x113A1A0", Offset = "0x113A1A0", VA = "0x113A1A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public bool multiLine
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x113A254", Offset = "0x113A254", VA = "0x113A254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public char asteriskChar
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x113A268", Offset = "0x113A268", VA = "0x113A268")]
			get
			{
				return default(char);
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x113A270", Offset = "0x113A270", VA = "0x113A270")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool wasCanceled
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x113A2F0", Offset = "0x113A2F0", VA = "0x113A2F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		protected int caretPositionInternal
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x113A370", Offset = "0x113A370", VA = "0x113A370")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x113A3FC", Offset = "0x113A3FC", VA = "0x113A3FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		protected int stringPositionInternal
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x113A40C", Offset = "0x113A40C", VA = "0x113A40C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x113A498", Offset = "0x113A498", VA = "0x113A498")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		protected int caretSelectPositionInternal
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x113A4A8", Offset = "0x113A4A8", VA = "0x113A4A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x113A534", Offset = "0x113A534", VA = "0x113A534")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		protected int stringSelectPositionInternal
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x113A544", Offset = "0x113A544", VA = "0x113A544")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x113A5D0", Offset = "0x113A5D0", VA = "0x113A5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		private bool hasSelection
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x113A5E0", Offset = "0x113A5E0", VA = "0x113A5E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000211")]
		public int caretPosition
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x113A614", Offset = "0x113A614", VA = "0x113A614")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x113A6A0", Offset = "0x113A6A0", VA = "0x113A6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public int selectionAnchorPosition
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x113A82C", Offset = "0x113A82C", VA = "0x113A82C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x113A6CC", Offset = "0x113A6CC", VA = "0x113A6CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public int selectionFocusPosition
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x113A938", Offset = "0x113A938", VA = "0x113A938")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x113A77C", Offset = "0x113A77C", VA = "0x113A77C")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		private static string clipboard
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x113B28C", Offset = "0x113B28C", VA = "0x113B28C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x113B2F0", Offset = "0x113B2F0", VA = "0x113B2F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1138DD4", Offset = "0x1138DD4", VA = "0x1138DD4")]
		protected TMP_InputField()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x113A2F8", Offset = "0x113A2F8", VA = "0x113A2F8")]
		protected void ClampPos(ref int pos)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x113A9D4", Offset = "0x113A9D4", VA = "0x113A9D4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x113ABEC", Offset = "0x113ABEC", VA = "0x113ABEC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x113B0B0", Offset = "0x113B0B0", VA = "0x113B0B0")]
		[DebuggerHidden]
		private IEnumerator CaretBlink()
		{
			return null;
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x113B124", Offset = "0x113B124", VA = "0x113B124")]
		private void SetCaretVisible()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1139318", Offset = "0x1139318", VA = "0x1139318")]
		private void SetCaretActive()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x113B170", Offset = "0x113B170", VA = "0x113B170")]
		protected void OnFocus()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x113B174", Offset = "0x113B174", VA = "0x113B174")]
		protected void SelectAll()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x113B1C4", Offset = "0x113B1C4", VA = "0x113B1C4")]
		public void MoveTextEnd(bool shift)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x113B234", Offset = "0x113B234", VA = "0x113B234")]
		public void MoveTextStart(bool shift)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x113B35C", Offset = "0x113B35C", VA = "0x113B35C")]
		private bool InPlaceEditing()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x113B380", Offset = "0x113B380", VA = "0x113B380", Slot = "50")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x113D1A8", Offset = "0x113D1A8", VA = "0x113D1A8")]
		protected int GetCharacterIndexFromPosition(Vector2 pos)
		{
			return default(int);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x113D1B0", Offset = "0x113D1B0", VA = "0x113D1B0")]
		private bool MayDrag(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x113D290", Offset = "0x113D290", VA = "0x113D290", Slot = "51")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x113D2BC", Offset = "0x113D2BC", VA = "0x113D2BC", Slot = "52")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x113D614", Offset = "0x113D614", VA = "0x113D614")]
		[DebuggerHidden]
		private IEnumerator MouseDragOutsideRect(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x113D6A8", Offset = "0x113D6A8", VA = "0x113D6A8", Slot = "53")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x113D6D0", Offset = "0x113D6D0", VA = "0x113D6D0", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x113D96C", Offset = "0x113D96C", VA = "0x113D96C")]
		protected EditState KeyPressed(Event evt)
		{
			return default(EditState);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x113E714", Offset = "0x113E714", VA = "0x113E714")]
		private bool IsValidChar(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x113E790", Offset = "0x113E790", VA = "0x113E790")]
		public void ProcessEvent(Event e)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x113E794", Offset = "0x113E794", VA = "0x113E794", Slot = "54")]
		public virtual void OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x113DFAC", Offset = "0x113DFAC", VA = "0x113DFAC")]
		private string GetSelectedString()
		{
			return null;
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x113E908", Offset = "0x113E908", VA = "0x113E908")]
		private int FindtNextWordBegin()
		{
			return default(int);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x113E4A4", Offset = "0x113E4A4", VA = "0x113E4A4")]
		private void MoveRight(bool shift, bool ctrl)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x113EA1C", Offset = "0x113EA1C", VA = "0x113EA1C")]
		private int FindtPrevWordBegin()
		{
			return default(int);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x113E24C", Offset = "0x113E24C", VA = "0x113E24C")]
		private void MoveLeft(bool shift, bool ctrl)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x113EAD8", Offset = "0x113EAD8", VA = "0x113EAD8")]
		private int LineUpCharacterPosition(int originalPos, bool goToFirstChar)
		{
			return default(int);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x113ECE4", Offset = "0x113ECE4", VA = "0x113ECE4")]
		private int LineDownCharacterPosition(int originalPos, bool goToLastChar)
		{
			return default(int);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x113E708", Offset = "0x113E708", VA = "0x113E708")]
		private void MoveDown(bool shift)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x113EF44", Offset = "0x113EF44", VA = "0x113EF44")]
		private void MoveDown(bool shift, bool goToLastChar)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x113E6FC", Offset = "0x113E6FC", VA = "0x113E6FC")]
		private void MoveUp(bool shift)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x113F104", Offset = "0x113F104", VA = "0x113F104")]
		private void MoveUp(bool shift, bool goToFirstChar)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x113E070", Offset = "0x113E070", VA = "0x113E070")]
		private void Delete()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x113DEE0", Offset = "0x113DEE0", VA = "0x113DEE0")]
		private void ForwardSpace()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x113DDFC", Offset = "0x113DDFC", VA = "0x113DDFC")]
		private void Backspace()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x113F2B0", Offset = "0x113F2B0", VA = "0x113F2B0")]
		private void Insert(char c)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x113925C", Offset = "0x113925C", VA = "0x113925C")]
		private void SendOnValueChangedAndUpdateLabel()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x113F3B0", Offset = "0x113F3B0", VA = "0x113F3B0")]
		private void SendOnValueChanged()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x113F414", Offset = "0x113F414", VA = "0x113F414")]
		protected void SendOnSubmit()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x113F478", Offset = "0x113F478", VA = "0x113F478")]
		protected void SendOnFocusLost()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x113F4DC", Offset = "0x113F4DC", VA = "0x113F4DC", Slot = "55")]
		protected virtual void Append(string input)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x113F5B4", Offset = "0x113F5B4", VA = "0x113F5B4", Slot = "56")]
		protected virtual void Append(char input)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1139870", Offset = "0x1139870", VA = "0x1139870")]
		protected void UpdateLabel()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x113D548", Offset = "0x113D548", VA = "0x113D548")]
		private int GetCaretPositionFromStringIndex(int stringIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x113A8C8", Offset = "0x113A8C8", VA = "0x113A8C8")]
		private int GetStringIndexFromCaretPosition(int caretPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x113F670", Offset = "0x113F670", VA = "0x113F670")]
		public void ForceLabelUpdate()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1139400", Offset = "0x1139400", VA = "0x1139400")]
		private void MarkGeometryAsDirty()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x113F674", Offset = "0x113F674", VA = "0x113F674", Slot = "57")]
		public virtual void Rebuild(CanvasUpdate update)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x113FA50", Offset = "0x113FA50", VA = "0x113FA50", Slot = "58")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x113FA54", Offset = "0x113FA54", VA = "0x113FA54", Slot = "59")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x113F684", Offset = "0x113F684", VA = "0x113F684")]
		private void UpdateGeometry()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x113BA9C", Offset = "0x113BA9C", VA = "0x113BA9C")]
		private void AssignPositioningIfNeeded()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x113FA58", Offset = "0x113FA58", VA = "0x113FA58")]
		private void OnFillVBO(Mesh vbo)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x113FCDC", Offset = "0x113FCDC", VA = "0x113FCDC")]
		private void GenerateCaret(VertexHelper vbo, Vector2 roundingOffset)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1141014", Offset = "0x1141014", VA = "0x1141014")]
		private void CreateCursorVerts()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1140260", Offset = "0x1140260", VA = "0x1140260")]
		private void GenerateHightlight(VertexHelper vbo, Vector2 roundingOffset)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x11411A4", Offset = "0x11411A4", VA = "0x11411A4")]
		private void AdjustRectTransformRelativeToViewport(Vector2 startPosition, float height, bool isCharVisible)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x113CB10", Offset = "0x113CB10", VA = "0x113CB10")]
		protected char Validate(string text, int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1141A14", Offset = "0x1141A14", VA = "0x1141A14")]
		public void ActivateInputField()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x113B7AC", Offset = "0x113B7AC", VA = "0x113B7AC")]
		private void ActivateInputFieldInternal()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1141B74", Offset = "0x1141B74", VA = "0x1141B74", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1141C0C", Offset = "0x1141C0C", VA = "0x1141C0C", Slot = "60")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x113ADFC", Offset = "0x113ADFC", VA = "0x113ADFC")]
		public void DeactivateInputField()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1141C54", Offset = "0x1141C54", VA = "0x1141C54", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1141CF4", Offset = "0x1141CF4", VA = "0x1141CF4", Slot = "61")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1139BD0", Offset = "0x1139BD0", VA = "0x1139BD0")]
		private void EnforceContentType()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1139E54", Offset = "0x1139E54", VA = "0x1139E54")]
		private void SetTextComponentWrapMode()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x113A1AC", Offset = "0x113A1AC", VA = "0x113A1AC")]
		private void SetTextComponentRichTextMode()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1139F04", Offset = "0x1139F04", VA = "0x1139F04")]
		private void SetToCustomIfContentTypeIsNot(params ContentType[] allowedContentTypes)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x113A03C", Offset = "0x113A03C", VA = "0x113A03C")]
		private void SetToCustom()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1141DA8", Offset = "0x1141DA8", VA = "0x1141DA8", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1141E68", Offset = "0x1141E68", VA = "0x1141E68", Slot = "46")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1141E70", Offset = "0x1141E70", VA = "0x1141E70", Slot = "49")]
		private bool UnityEngine.UI.ICanvasElement.IsDestroyed()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023C")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x138F450", Offset = "0x138F450", VA = "0x138F450")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		public static bool SetEquatableStruct<T>(ref T currentValue, T newValue) where T : IEquatable<T>
		{
			return default(bool);
		}

		[Token(Token = "0x6001065")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023D")]
	public struct TMP_LineInfo
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int characterCount;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int visibleCharacterCount;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int spaceCount;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int wordCount;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstCharacterIndex;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int firstVisibleCharacterIndex;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lastCharacterIndex;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int lastVisibleCharacterIndex;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lineHeight;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ascender;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float baseline;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float descender;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxAdvance;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float width;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float marginLeft;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float marginRight;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public TextAlignmentOptions alignment;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Extents lineExtents;
	}
	[Token(Token = "0x200023E")]
	internal static class TMP_ListPool<T>
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TMP_ObjectPool<List<T>> s_ListPool;

		[Token(Token = "0x6001067")]
		public static List<T> Get()
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		public static void Release(List<T> toRelease)
		{
		}

		[Token(Token = "0x600106A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76ACC", Offset = "0xC76ACC")]
		private static void <s_ListPool>m__0(List<T> l)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public static class TMP_MaterialManager
	{
		[Token(Token = "0x2000240")]
		private class FallbackMaterial
		{
			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int baseID;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material baseMaterial;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material fallbackMaterial;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int count;

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x1144594", Offset = "0x1144594", VA = "0x1144594")]
			public FallbackMaterial()
			{
			}
		}

		[Token(Token = "0x2000241")]
		private class MaskingMaterial
		{
			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material baseMaterial;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material stencilMaterial;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int count;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int stencilID;

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x1142D20", Offset = "0x1142D20", VA = "0x1142D20")]
			public MaskingMaterial()
			{
			}
		}

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76ADC", Offset = "0xC76ADC")]
		private sealed class <GetBaseMaterial>c__AnonStorey0
		{
			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Material stencilMaterial;

			[Token(Token = "0x6001442")]
			[Address(RVA = "0x1143134", Offset = "0x1143134", VA = "0x1143134")]
			public <GetBaseMaterial>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0x11451B8", Offset = "0x11451B8", VA = "0x11451B8")]
			internal bool <>m__0(MaskingMaterial item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76AEC", Offset = "0xC76AEC")]
		private sealed class <AddMaskingMaterial>c__AnonStorey1
		{
			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Material stencilMaterial;

			[Token(Token = "0x6001444")]
			[Address(RVA = "0x11434B0", Offset = "0x11434B0", VA = "0x11434B0")]
			public <AddMaskingMaterial>c__AnonStorey1()
			{
			}

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x114512C", Offset = "0x114512C", VA = "0x114512C")]
			internal bool <>m__0(MaskingMaterial item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76AFC", Offset = "0xC76AFC")]
		private sealed class <RemoveStencilMaterial>c__AnonStorey2
		{
			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Material stencilMaterial;

			[Token(Token = "0x6001446")]
			[Address(RVA = "0x1143614", Offset = "0x1143614", VA = "0x1143614")]
			public <RemoveStencilMaterial>c__AnonStorey2()
			{
			}

			[Token(Token = "0x6001447")]
			[Address(RVA = "0x11452D0", Offset = "0x11452D0", VA = "0x11452D0")]
			internal bool <>m__0(MaskingMaterial item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76B0C", Offset = "0xC76B0C")]
		private sealed class <ReleaseBaseMaterial>c__AnonStorey3
		{
			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Material baseMaterial;

			[Token(Token = "0x6001448")]
			[Address(RVA = "0x1143DEC", Offset = "0x1143DEC", VA = "0x1143DEC")]
			public <ReleaseBaseMaterial>c__AnonStorey3()
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0x1145244", Offset = "0x1145244", VA = "0x1145244")]
			internal bool <>m__0(MaskingMaterial item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MaskingMaterial> m_materialList;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<long, FallbackMaterial> m_fallbackMaterials;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<int, long> m_fallbackMaterialLookup;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<long> m_fallbackCleanupList;

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x11428E0", Offset = "0x11428E0", VA = "0x11428E0")]
		public static Material GetStencilMaterial(Material baseMaterial, int stencilID)
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1142D28", Offset = "0x1142D28", VA = "0x1142D28")]
		public static void ReleaseStencilMaterial(Material stencilMaterial)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1142FD0", Offset = "0x1142FD0", VA = "0x1142FD0")]
		public static Material GetBaseMaterial(Material stencilMaterial)
		{
			return null;
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x114313C", Offset = "0x114313C", VA = "0x114313C")]
		public static Material SetStencil(Material material, int stencilID)
		{
			return null;
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1143254", Offset = "0x1143254", VA = "0x1143254")]
		public static void AddMaskingMaterial(Material baseMaterial, Material stencilMaterial, int stencilID)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x11434B8", Offset = "0x11434B8", VA = "0x11434B8")]
		public static void RemoveStencilMaterial(Material stencilMaterial)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x114361C", Offset = "0x114361C", VA = "0x114361C")]
		public static void ReleaseBaseMaterial(Material baseMaterial)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1143DF4", Offset = "0x1143DF4", VA = "0x1143DF4")]
		public static void ClearMaterials()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1143FD0", Offset = "0x1143FD0", VA = "0x1143FD0")]
		public static int GetStencilID(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1144170", Offset = "0x1144170", VA = "0x1144170")]
		public static Material GetFallbackMaterial(Material sourceMaterial, Material targetMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x114459C", Offset = "0x114459C", VA = "0x114459C")]
		public static void AddFallbackMaterialReference(Material targetMaterial)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1144714", Offset = "0x1144714", VA = "0x1144714")]
		public static void RemoveFallbackMaterialReference(Material targetMaterial)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x11448EC", Offset = "0x11448EC", VA = "0x11448EC")]
		public static void CleanupFallbackMaterials()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1144B10", Offset = "0x1144B10", VA = "0x1144B10")]
		public static void ReleaseFallbackMaterial(Material fallackMaterial)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1144D64", Offset = "0x1144D64", VA = "0x1144D64")]
		public static void CopyMaterialPresetProperties(Material source, Material destination)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public enum VertexSortingOrder
	{
		[Token(Token = "0x4000CBF")]
		Normal,
		[Token(Token = "0x4000CC0")]
		Reverse,
		[Token(Token = "0x4000CC1")]
		Depth
	}
	[Token(Token = "0x2000243")]
	public struct TMP_MeshInfo
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color32 s_DefaultColor;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector3 s_DefaultNormal;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector4 s_DefaultTangent;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int vertexCount;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uvs0;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uvs2;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] triangles;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1145B00", Offset = "0x1145B00", VA = "0x1145B00")]
		public TMP_MeshInfo(Mesh mesh, int size)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x11468A0", Offset = "0x11468A0", VA = "0x11468A0")]
		public TMP_MeshInfo(Mesh mesh, int size, bool isVolumetric)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1146F8C", Offset = "0x1146F8C", VA = "0x1146F8C")]
		public void ResizeMeshInfo(int size)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1147FA8", Offset = "0x1147FA8", VA = "0x1147FA8")]
		public void ResizeMeshInfo(int size, bool isVolumetric)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1148078", Offset = "0x1148078", VA = "0x1148078")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1148158", Offset = "0x1148158", VA = "0x1148158")]
		public void Clear(bool uploadChanges)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x11481B8", Offset = "0x11481B8", VA = "0x11481B8")]
		public void ClearUnusedVertices()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1148224", Offset = "0x1148224", VA = "0x1148224")]
		public void ClearUnusedVertices(int startIndex)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1148318", Offset = "0x1148318", VA = "0x1148318")]
		public void ClearUnusedVertices(int startIndex, bool updateMesh)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1148324", Offset = "0x1148324", VA = "0x1148324")]
		public void SortGeometry(VertexSortingOrder order)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x11492F4", Offset = "0x11492F4", VA = "0x11492F4")]
		public void SortGeometry(IList<int> sortingOrder)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x11492FC", Offset = "0x11492FC", VA = "0x11492FC")]
		public void SwapVertexData(int src, int dst)
		{
		}
	}
	[Token(Token = "0x2000244")]
	internal class TMP_ObjectPool<T> where T : new()
	{
		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Stack<T> m_Stack;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityAction<T> m_ActionOnGet;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityAction<T> m_ActionOnRelease;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76B1C", Offset = "0xC76B1C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC76B1C", Offset = "0xC76B1C")]
		private int <countAll>k__BackingField;

		[Token(Token = "0x17000215")]
		public int countAll
		{
			[Token(Token = "0x600108B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76B58", Offset = "0xC76B58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600108C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC76B68", Offset = "0xC76B68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public int countActive
		{
			[Token(Token = "0x600108D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000217")]
		public int countInactive
		{
			[Token(Token = "0x600108E")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600108A")]
		public TMP_ObjectPool(UnityAction<T> actionOnGet, UnityAction<T> actionOnRelease)
		{
		}

		[Token(Token = "0x600108F")]
		public T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x6001090")]
		public void Release(T element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	[ExecuteInEditMode]
	public class TMP_Settings : ScriptableObject
	{
		[Token(Token = "0x2000246")]
		public class LineBreakingTable
		{
			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<int, char> leadingCharacters;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<int, char> followingCharacters;

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x1149D34", Offset = "0x1149D34", VA = "0x1149D34")]
			public LineBreakingTable()
			{
			}
		}

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TMP_Settings s_Instance;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableWordWrapping;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_enableKerning;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_enableExtraPadding;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool m_enableTintAllSprites;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_enableParseEscapeCharacters;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_missingGlyphCharacter;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_warningsDisabled;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_FontAsset m_defaultFontAsset;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_defaultFontAssetPath;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_defaultFontSize;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_defaultTextContainerWidth;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_defaultTextContainerHeight;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<TMP_FontAsset> m_fallbackFontAssets;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_matchMaterialPreset;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_SpriteAsset m_defaultSpriteAsset;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_defaultSpriteAssetPath;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_StyleSheet m_defaultStyleSheet;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextAsset m_leadingCharacters;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextAsset m_followingCharacters;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LineBreakingTable m_linebreakingRules;

		[Token(Token = "0x17000218")]
		public static bool enableWordWrapping
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x1149400", Offset = "0x1149400", VA = "0x1149400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000219")]
		public static bool enableKerning
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x114951C", Offset = "0x114951C", VA = "0x114951C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public static bool enableExtraPadding
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x1149548", Offset = "0x1149548", VA = "0x1149548")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public static bool enableTintAllSprites
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x1149574", Offset = "0x1149574", VA = "0x1149574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public static bool enableParseEscapeCharacters
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x11495A0", Offset = "0x11495A0", VA = "0x11495A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021D")]
		public static int missingGlyphCharacter
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x11495CC", Offset = "0x11495CC", VA = "0x11495CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021E")]
		public static bool warningsDisabled
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x1138548", Offset = "0x1138548", VA = "0x1138548")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public static TMP_FontAsset defaultFontAsset
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x11495F8", Offset = "0x11495F8", VA = "0x11495F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public static string defaultFontAssetPath
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x1149624", Offset = "0x1149624", VA = "0x1149624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public static float defaultFontSize
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x1149650", Offset = "0x1149650", VA = "0x1149650")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000222")]
		public static float defaultTextContainerWidth
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x114967C", Offset = "0x114967C", VA = "0x114967C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000223")]
		public static float defaultTextContainerHeight
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x11496A8", Offset = "0x11496A8", VA = "0x11496A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000224")]
		public static List<TMP_FontAsset> fallbackFontAssets
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x1138954", Offset = "0x1138954", VA = "0x1138954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public static bool matchMaterialPreset
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x11496D4", Offset = "0x11496D4", VA = "0x11496D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public static TMP_SpriteAsset defaultSpriteAsset
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x1149700", Offset = "0x1149700", VA = "0x1149700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public static string defaultSpriteAssetPath
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x114972C", Offset = "0x114972C", VA = "0x114972C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public static TMP_StyleSheet defaultStyleSheet
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x1149758", Offset = "0x1149758", VA = "0x1149758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public static TextAsset leadingCharacters
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x1149784", Offset = "0x1149784", VA = "0x1149784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public static TextAsset followingCharacters
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x11497B0", Offset = "0x11497B0", VA = "0x11497B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public static LineBreakingTable linebreakingRules
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x11497DC", Offset = "0x11497DC", VA = "0x11497DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public static TMP_Settings instance
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x114942C", Offset = "0x114942C", VA = "0x114942C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x11493F8", Offset = "0x11493F8", VA = "0x11493F8")]
		public TMP_Settings()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1149994", Offset = "0x1149994", VA = "0x1149994")]
		public static TMP_Settings LoadDefaultSettings()
		{
			return null;
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1149AC0", Offset = "0x1149AC0", VA = "0x1149AC0")]
		public static TMP_Settings GetSettings()
		{
			return null;
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1149B54", Offset = "0x1149B54", VA = "0x1149B54")]
		public static TMP_FontAsset GetFontAsset()
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1149BF4", Offset = "0x1149BF4", VA = "0x1149BF4")]
		public static TMP_SpriteAsset GetSpriteAsset()
		{
			return null;
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1149C94", Offset = "0x1149C94", VA = "0x1149C94")]
		public static TMP_StyleSheet GetStyleSheet()
		{
			return null;
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1149824", Offset = "0x1149824", VA = "0x1149824")]
		public static void LoadLinebreakingRules()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1149D3C", Offset = "0x1149D3C", VA = "0x1149D3C")]
		private static Dictionary<int, char> GetCharacters(TextAsset file)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000247")]
	public class TMP_Sprite : TMP_TextElement
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int hashCode;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 pivot;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite sprite;

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x1149E6C", Offset = "0x1149E6C", VA = "0x1149E6C")]
		public TMP_Sprite()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class TMP_SpriteAsset : TMP_Asset
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TMP_SpriteAsset m_defaultSpriteAsset;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture spriteSheet;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<TMP_Sprite> spriteInfoList;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Sprite> m_sprites;

		[Token(Token = "0x1700022D")]
		public static TMP_SpriteAsset defaultSpriteAsset
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x1149E7C", Offset = "0x1149E7C", VA = "0x1149E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1149E74", Offset = "0x1149E74", VA = "0x1149E74")]
		public TMP_SpriteAsset()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1149F3C", Offset = "0x1149F3C", VA = "0x1149F3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1149F40", Offset = "0x1149F40", VA = "0x1149F40")]
		private Material GetDefaultSpriteMaterial()
		{
			return null;
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x114A050", Offset = "0x114A050", VA = "0x114A050")]
		public int GetSpriteIndex(int hashCode)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000249")]
	public class TMP_Style
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_Name;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_HashCode;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_OpeningDefinition;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_ClosingDefinition;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] m_OpeningTagArray;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int[] m_ClosingTagArray;

		[Token(Token = "0x1700022E")]
		public string name
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x114A128", Offset = "0x114A128", VA = "0x114A128")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x114A130", Offset = "0x114A130", VA = "0x114A130")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public int hashCode
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x114A168", Offset = "0x114A168", VA = "0x114A168")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x114A170", Offset = "0x114A170", VA = "0x114A170")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public string styleOpeningDefinition
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x114A184", Offset = "0x114A184", VA = "0x114A184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public string styleClosingDefinition
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x114A18C", Offset = "0x114A18C", VA = "0x114A18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public int[] styleOpeningTagArray
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x114A194", Offset = "0x114A194", VA = "0x114A194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public int[] styleClosingTagArray
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x114A19C", Offset = "0x114A19C", VA = "0x114A19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x114A120", Offset = "0x114A120", VA = "0x114A120")]
		public TMP_Style()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x114A1A4", Offset = "0x114A1A4", VA = "0x114A1A4")]
		public void RefreshStyle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024A")]
	public class TMP_StyleSheet : ScriptableObject
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TMP_StyleSheet s_Instance;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<TMP_Style> m_StyleList;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, TMP_Style> m_StyleDictionary;

		[Token(Token = "0x17000234")]
		public static TMP_StyleSheet instance
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x114A448", Offset = "0x114A448", VA = "0x114A448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x114A3AC", Offset = "0x114A3AC", VA = "0x114A3AC")]
		public TMP_StyleSheet()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x114A7B4", Offset = "0x114A7B4", VA = "0x114A7B4")]
		public static TMP_StyleSheet LoadDefaultStyleSheet()
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x114A7B8", Offset = "0x114A7B8", VA = "0x114A7B8")]
		public static TMP_Style GetStyle(int hashCode)
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x114A7EC", Offset = "0x114A7EC", VA = "0x114A7EC")]
		private TMP_Style GetStyleInternal(int hashCode)
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x114A878", Offset = "0x114A878", VA = "0x114A878")]
		public void UpdateStyleDictionaryKey(int old_key, int new_key)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x114A97C", Offset = "0x114A97C", VA = "0x114A97C")]
		public static void RefreshStyles()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x114A600", Offset = "0x114A600", VA = "0x114A600")]
		private void LoadStyleDictionaryInternal()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC76D38", Offset = "0xC76D38")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC76D38", Offset = "0xC76D38")]
	public class TMP_SubMesh : MonoBehaviour
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_FontAsset m_fontAsset;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_SpriteAsset m_spriteAsset;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_material;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material m_sharedMaterial;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_fallbackMaterial;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_fallbackSourceMaterial;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_isDefaultMaterial;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_padding;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh m_mesh;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro m_TextComponent;

		[NonSerialized]
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_isRegisteredForEvents;

		[Token(Token = "0x17000235")]
		public TMP_FontAsset fontAsset
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x114A9E0", Offset = "0x114A9E0", VA = "0x114A9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x114A9E8", Offset = "0x114A9E8", VA = "0x114A9E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public TMP_SpriteAsset spriteAsset
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x114A9F0", Offset = "0x114A9F0", VA = "0x114A9F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x114A9F8", Offset = "0x114A9F8", VA = "0x114A9F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public Material material
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x114AA00", Offset = "0x114AA00", VA = "0x114AA00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x114AB50", Offset = "0x114AB50", VA = "0x114AB50")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public Material sharedMaterial
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x114AD74", Offset = "0x114AD74", VA = "0x114AD74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x114AD7C", Offset = "0x114AD7C", VA = "0x114AD7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public Material fallbackMaterial
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x114ADD4", Offset = "0x114ADD4", VA = "0x114ADD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x114ADDC", Offset = "0x114ADDC", VA = "0x114ADDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public Material fallbackSourceMaterial
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x114AF50", Offset = "0x114AF50", VA = "0x114AF50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x114AF58", Offset = "0x114AF58", VA = "0x114AF58")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public bool isDefaultMaterial
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x114AF60", Offset = "0x114AF60", VA = "0x114AF60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x114AF68", Offset = "0x114AF68", VA = "0x114AF68")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float padding
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x114AF74", Offset = "0x114AF74", VA = "0x114AF74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x114AF7C", Offset = "0x114AF7C", VA = "0x114AF7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public Renderer renderer
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x114AF84", Offset = "0x114AF84", VA = "0x114AF84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x114B024", Offset = "0x114B024", VA = "0x114B024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public Mesh mesh
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x114B0C4", Offset = "0x114B0C4", VA = "0x114B0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x114B1AC", Offset = "0x114B1AC", VA = "0x114B1AC")]
			set
			{
			}
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x114A9D8", Offset = "0x114A9D8", VA = "0x114A9D8")]
		public TMP_SubMesh()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x114B1B4", Offset = "0x114B1B4", VA = "0x114B1B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x114B2F8", Offset = "0x114B2F8", VA = "0x114B2F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x114B3C0", Offset = "0x114B3C0", VA = "0x114B3C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x114B4D8", Offset = "0x114B4D8", VA = "0x114B4D8")]
		public static TMP_SubMesh AddSubTextObject(TextMeshPro textComponent, MaterialReference materialReference)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x114B930", Offset = "0x114B930", VA = "0x114B930")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x114AA08", Offset = "0x114AA08", VA = "0x114AA08")]
		private Material GetMaterial(Material mat)
		{
			return null;
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x114B9B4", Offset = "0x114B9B4", VA = "0x114B9B4")]
		private Material CreateMaterialInstance(Material source)
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x114BAA4", Offset = "0x114BAA4", VA = "0x114BAA4")]
		private Material GetSharedMaterial()
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x114ADA8", Offset = "0x114ADA8", VA = "0x114ADA8")]
		private void SetSharedMaterial(Material mat)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x114ABDC", Offset = "0x114ABDC", VA = "0x114ABDC")]
		public float GetPaddingForMaterial()
		{
			return default(float);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x114BB68", Offset = "0x114BB68", VA = "0x114BB68")]
		public void UpdateMeshPadding(bool isExtraPadding, bool isUsingBold)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x114AC88", Offset = "0x114AC88", VA = "0x114AC88")]
		public void SetVerticesDirty()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x114AD70", Offset = "0x114AD70", VA = "0x114AD70")]
		public void SetMaterialDirty()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x114BC30", Offset = "0x114BC30", VA = "0x114BC30")]
		protected void UpdateMaterial()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[ExecuteInEditMode]
	public class TMP_SubMeshUI : MaskableGraphic, ITextElement, IClippable, IMaskable, IMaterialModifier
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_FontAsset m_fontAsset;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TMP_SpriteAsset m_spriteAsset;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Material m_material;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material m_sharedMaterial;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material m_fallbackMaterial;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material m_fallbackSourceMaterial;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool m_isDefaultMaterial;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_padding;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private CanvasRenderer m_canvasRenderer;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Mesh m_mesh;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TextMeshProUGUI m_TextComponent;

		[NonSerialized]
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_isRegisteredForEvents;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_materialDirty;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private int m_materialReferenceIndex;

		[Token(Token = "0x17000240")]
		public TMP_FontAsset fontAsset
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x114BCE8", Offset = "0x114BCE8", VA = "0x114BCE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x114BCF0", Offset = "0x114BCF0", VA = "0x114BCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public TMP_SpriteAsset spriteAsset
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x114BCF8", Offset = "0x114BCF8", VA = "0x114BCF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x114BD00", Offset = "0x114BD00", VA = "0x114BD00")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public override Texture mainTexture
		{
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x114BD08", Offset = "0x114BD08", VA = "0x114BD08", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public override Material material
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x114BDB0", Offset = "0x114BDB0", VA = "0x114BDB0", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x114BECC", Offset = "0x114BECC", VA = "0x114BECC", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public Material sharedMaterial
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x114BDA8", Offset = "0x114BDA8", VA = "0x114BDA8", Slot = "63")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x114C07C", Offset = "0x114C07C", VA = "0x114C07C")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public Material fallbackMaterial
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x114C0F4", Offset = "0x114C0F4", VA = "0x114C0F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x114C0FC", Offset = "0x114C0FC", VA = "0x114C0FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public Material fallbackSourceMaterial
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x114C280", Offset = "0x114C280", VA = "0x114C280")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x114C288", Offset = "0x114C288", VA = "0x114C288")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public override Material materialForRendering
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x114C290", Offset = "0x114C290", VA = "0x114C290", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public bool isDefaultMaterial
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x114C334", Offset = "0x114C334", VA = "0x114C334")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x114C33C", Offset = "0x114C33C", VA = "0x114C33C")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public float padding
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x114C348", Offset = "0x114C348", VA = "0x114C348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x114C350", Offset = "0x114C350", VA = "0x114C350")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public new CanvasRenderer canvasRenderer
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x114C358", Offset = "0x114C358", VA = "0x114C358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public Mesh mesh
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x114C3F8", Offset = "0x114C3F8", VA = "0x114C3F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x114C4B0", Offset = "0x114C4B0", VA = "0x114C4B0")]
			set
			{
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x114BCE0", Offset = "0x114BCE0", VA = "0x114BCE0")]
		public TMP_SubMeshUI()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x114C4B8", Offset = "0x114C4B8", VA = "0x114C4B8")]
		public static TMP_SubMeshUI AddSubTextObject(TextMeshProUGUI textComponent, MaterialReference materialReference)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x114C830", Offset = "0x114C830", VA = "0x114C830", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x114C888", Offset = "0x114C888", VA = "0x114C888", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x114C9B8", Offset = "0x114C9B8", VA = "0x114C9B8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x114CB40", Offset = "0x114CB40", VA = "0x114CB40", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x114CBA4", Offset = "0x114CBA4", VA = "0x114CBA4", Slot = "57")]
		public override Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x114BFD0", Offset = "0x114BFD0", VA = "0x114BFD0")]
		public float GetPaddingForMaterial()
		{
			return default(float);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x114CCEC", Offset = "0x114CCEC", VA = "0x114CCEC")]
		public float GetPaddingForMaterial(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x114CD98", Offset = "0x114CD98", VA = "0x114CD98")]
		public void UpdateMeshPadding(bool isExtraPadding, bool isUsingBold)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x114CE28", Offset = "0x114CE28", VA = "0x114CE28", Slot = "26")]
		public override void SetAllDirty()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x114CE2C", Offset = "0x114CE2C", VA = "0x114CE2C", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x114CF18", Offset = "0x114CF18", VA = "0x114CF18", Slot = "27")]
		public override void SetLayoutDirty()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x114CF1C", Offset = "0x114CF1C", VA = "0x114CF1C", Slot = "29")]
		public override void SetMaterialDirty()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x114CF34", Offset = "0x114CF34", VA = "0x114CF34")]
		public void SetPivotDirty()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x114CFD4", Offset = "0x114CFD4", VA = "0x114CFD4", Slot = "41")]
		protected override void UpdateGeometry()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x114CFD8", Offset = "0x114CFD8", VA = "0x114CFD8", Slot = "37")]
		public override void Rebuild(CanvasUpdate update)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x114D01C", Offset = "0x114D01C", VA = "0x114D01C")]
		public void RefreshMaterial()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x114D02C", Offset = "0x114D02C", VA = "0x114D02C", Slot = "40")]
		protected override void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x114D14C", Offset = "0x114D14C", VA = "0x114D14C", Slot = "61")]
		public override void RecalculateClipping()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x114D154", Offset = "0x114D154", VA = "0x114D154", Slot = "62")]
		public override void RecalculateMasking()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x114D16C", Offset = "0x114D16C", VA = "0x114D16C")]
		private Material GetMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x114BDB8", Offset = "0x114BDB8", VA = "0x114BDB8")]
		private Material GetMaterial(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x114D174", Offset = "0x114D174", VA = "0x114D174")]
		private Material CreateMaterialInstance(Material source)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x114D264", Offset = "0x114D264", VA = "0x114D264")]
		private Material GetSharedMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x114C0B8", Offset = "0x114C0B8", VA = "0x114C0B8")]
		private void SetSharedMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x114D318", Offset = "0x114D318", VA = "0x114D318", Slot = "65")]
		private int TMPro.ITextElement.GetInstanceID()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200024D")]
	public interface ITextElement
	{
		[Token(Token = "0x1700024C")]
		Material sharedMaterial
		{
			[Token(Token = "0x600111A")]
			get;
		}

		[Token(Token = "0x600111B")]
		void Rebuild(CanvasUpdate update);

		[Token(Token = "0x600111C")]
		int GetInstanceID();
	}
	[Token(Token = "0x200024E")]
	public enum TextAlignmentOptions
	{
		[Token(Token = "0x4000D16")]
		TopLeft,
		[Token(Token = "0x4000D17")]
		Top,
		[Token(Token = "0x4000D18")]
		TopRight,
		[Token(Token = "0x4000D19")]
		TopJustified,
		[Token(Token = "0x4000D1A")]
		Left,
		[Token(Token = "0x4000D1B")]
		Center,
		[Token(Token = "0x4000D1C")]
		Right,
		[Token(Token = "0x4000D1D")]
		Justified,
		[Token(Token = "0x4000D1E")]
		BottomLeft,
		[Token(Token = "0x4000D1F")]
		Bottom,
		[Token(Token = "0x4000D20")]
		BottomRight,
		[Token(Token = "0x4000D21")]
		BottomJustified,
		[Token(Token = "0x4000D22")]
		BaselineLeft,
		[Token(Token = "0x4000D23")]
		Baseline,
		[Token(Token = "0x4000D24")]
		BaselineRight,
		[Token(Token = "0x4000D25")]
		BaselineJustified,
		[Token(Token = "0x4000D26")]
		MidlineLeft,
		[Token(Token = "0x4000D27")]
		Midline,
		[Token(Token = "0x4000D28")]
		MidlineRight,
		[Token(Token = "0x4000D29")]
		MidlineJustified,
		[Token(Token = "0x4000D2A")]
		CaplineLeft,
		[Token(Token = "0x4000D2B")]
		Capline,
		[Token(Token = "0x4000D2C")]
		CaplineRight,
		[Token(Token = "0x4000D2D")]
		CaplineJustified
	}
	[Token(Token = "0x200024F")]
	public enum TextRenderFlags
	{
		[Token(Token = "0x4000D2F")]
		DontRender = 0,
		[Token(Token = "0x4000D30")]
		Render = 255
	}
	[Token(Token = "0x2000250")]
	public enum TMP_TextElementType
	{
		[Token(Token = "0x4000D32")]
		Character,
		[Token(Token = "0x4000D33")]
		Sprite
	}
	[Token(Token = "0x2000251")]
	public enum MaskingTypes
	{
		[Token(Token = "0x4000D35")]
		MaskOff,
		[Token(Token = "0x4000D36")]
		MaskHard,
		[Token(Token = "0x4000D37")]
		MaskSoft
	}
	[Token(Token = "0x2000252")]
	public enum TextOverflowModes
	{
		[Token(Token = "0x4000D39")]
		Overflow,
		[Token(Token = "0x4000D3A")]
		Ellipsis,
		[Token(Token = "0x4000D3B")]
		Masking,
		[Token(Token = "0x4000D3C")]
		Truncate,
		[Token(Token = "0x4000D3D")]
		ScrollRect,
		[Token(Token = "0x4000D3E")]
		Page
	}
	[Token(Token = "0x2000253")]
	public enum MaskingOffsetMode
	{
		[Token(Token = "0x4000D40")]
		Percentage,
		[Token(Token = "0x4000D41")]
		Pixel
	}
	[Token(Token = "0x2000254")]
	public enum TextureMappingOptions
	{
		[Token(Token = "0x4000D43")]
		Character,
		[Token(Token = "0x4000D44")]
		Line,
		[Token(Token = "0x4000D45")]
		Paragraph,
		[Token(Token = "0x4000D46")]
		MatchAspect
	}
	[Token(Token = "0x2000255")]
	public enum FontStyles
	{
		[Token(Token = "0x4000D48")]
		Normal = 0,
		[Token(Token = "0x4000D49")]
		Bold = 1,
		[Token(Token = "0x4000D4A")]
		Italic = 2,
		[Token(Token = "0x4000D4B")]
		Underline = 4,
		[Token(Token = "0x4000D4C")]
		LowerCase = 8,
		[Token(Token = "0x4000D4D")]
		UpperCase = 0x10,
		[Token(Token = "0x4000D4E")]
		SmallCaps = 0x20,
		[Token(Token = "0x4000D4F")]
		Strikethrough = 0x40,
		[Token(Token = "0x4000D50")]
		Superscript = 0x80,
		[Token(Token = "0x4000D51")]
		Subscript = 0x100
	}
	[Token(Token = "0x2000256")]
	public enum FontWeights
	{
		[Token(Token = "0x4000D53")]
		Thin = 100,
		[Token(Token = "0x4000D54")]
		ExtraLight = 200,
		[Token(Token = "0x4000D55")]
		Light = 300,
		[Token(Token = "0x4000D56")]
		Normal = 400,
		[Token(Token = "0x4000D57")]
		Medium = 500,
		[Token(Token = "0x4000D58")]
		SemiBold = 600,
		[Token(Token = "0x4000D59")]
		Bold = 700,
		[Token(Token = "0x4000D5A")]
		Heavy = 800,
		[Token(Token = "0x4000D5B")]
		Black = 900
	}
	[Token(Token = "0x2000257")]
	public enum TagUnits
	{
		[Token(Token = "0x4000D5D")]
		Pixels,
		[Token(Token = "0x4000D5E")]
		FontUnits,
		[Token(Token = "0x4000D5F")]
		Percentage
	}
	[Token(Token = "0x2000258")]
	public enum TagType
	{
		[Token(Token = "0x4000D61")]
		None = 0,
		[Token(Token = "0x4000D62")]
		NumericalValue = 1,
		[Token(Token = "0x4000D63")]
		StringValue = 2,
		[Token(Token = "0x4000D64")]
		ColorValue = 4
	}
	[Token(Token = "0x2000259")]
	public class TMP_Text : MaskableGraphic
	{
		[Token(Token = "0x200025A")]
		protected enum TextInputSources
		{
			[Token(Token = "0x4000E17")]
			Text,
			[Token(Token = "0x4000E18")]
			SetText,
			[Token(Token = "0x4000E19")]
			SetCharArray,
			[Token(Token = "0x4000E1A")]
			String
		}

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected string m_text;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected bool m_isRightToLeft;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected TMP_FontAsset m_fontAsset;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected TMP_FontAsset m_currentFontAsset;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool m_isSDFShader;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected Material m_sharedMaterial;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Material m_currentMaterial;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected MaterialReference[] m_materialReferences;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<int, int> m_materialReferenceIndexLookup;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected TMP_XmlTagStack<MaterialReference> m_materialReferenceStack;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected int m_currentMaterialIndex;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected Material[] m_fontSharedMaterials;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected Material m_fontMaterial;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected Material[] m_fontMaterials;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected bool m_isMaterialDirty;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC76F74", Offset = "0xC76F74")]
		[SerializeField]
		protected Color32 m_fontColor32;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		protected Color m_fontColor;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color32 s_colorWhite;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		protected bool m_enableVertexGradient;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		protected VertexGradient m_fontColorGradient;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		protected TMP_ColorGradient m_fontColorGradientPreset;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected TMP_SpriteAsset m_spriteAsset;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		protected bool m_tintAllSprites;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		protected bool m_tintSprite;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Color32 m_spriteColor;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		protected bool m_overrideHtmlColors;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		protected Color32 m_faceColor;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		protected Color32 m_outlineColor;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected float m_outlineWidth;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		protected float m_fontSize;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		protected float m_currentFontSize;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		protected float m_fontSizeBase;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected TMP_XmlTagStack<float> m_sizeStack;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		protected int m_fontWeight;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected int m_fontWeightInternal;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected TMP_XmlTagStack<int> m_fontWeightStack;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected bool m_enableAutoSizing;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		protected float m_maxFontSize;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected float m_minFontSize;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		protected float m_fontSizeMin;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		protected float m_fontSizeMax;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		protected FontStyles m_fontStyle;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected FontStyles m_style;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		protected bool m_isUsingBold;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xC770B0", Offset = "0xC770B0")]
		protected TextAlignmentOptions m_textAlignment;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected TextAlignmentOptions m_lineJustification;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Vector3[] m_textContainerLocalCorners;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		protected float m_characterSpacing;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		protected float m_cSpacing;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		protected float m_monoSpacing;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		protected float m_lineSpacing;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected float m_lineSpacingDelta;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		protected float m_lineHeight;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		protected float m_lineSpacingMax;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		protected float m_paragraphSpacing;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		protected float m_charWidthMaxAdj;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		protected float m_charWidthAdjDelta;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		protected bool m_enableWordWrapping;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
		protected bool m_isCharacterWrappingEnabled;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x242")]
		protected bool m_isNonBreakingSpace;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x243")]
		protected bool m_isIgnoringAlignment;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		protected float m_wordWrappingRatios;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		protected bool m_enableAdaptiveJustification;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		protected float m_adaptiveJustificationThreshold;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		protected TextOverflowModes m_overflowMode;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		protected bool m_isTextTruncated;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x255")]
		[SerializeField]
		protected bool m_enableKerning;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x256")]
		[SerializeField]
		protected bool m_enableExtraPadding;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x257")]
		[SerializeField]
		protected bool checkPaddingRequired;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		protected bool m_isRichText;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		[SerializeField]
		protected bool m_parseCtrlCharacters;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25A")]
		protected bool m_isOverlay;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25B")]
		[SerializeField]
		protected bool m_isOrthographic;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		protected bool m_isCullingEnabled;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25D")]
		[SerializeField]
		protected bool m_ignoreCulling;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		protected TextureMappingOptions m_horizontalMapping;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		protected TextureMappingOptions m_verticalMapping;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		protected TextRenderFlags m_renderMode;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		protected int m_maxVisibleCharacters;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		protected int m_maxVisibleWords;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		protected int m_maxVisibleLines;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		protected bool m_useMaxVisibleDescender;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		protected int m_pageToDisplay;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		protected bool m_isNewPage;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		protected Vector4 m_margin;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		protected float m_marginLeft;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		protected float m_marginRight;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		protected float m_marginWidth;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		protected float m_marginHeight;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		protected float m_width;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		protected TMP_TextInfo m_textInfo;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		protected bool m_havePropertiesChanged;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
		[SerializeField]
		protected bool m_isUsingLegacyAnimationComponent;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		protected Transform m_transform;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		protected RectTransform m_rectTransform;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7728C", Offset = "0xC7728C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC7728C", Offset = "0xC7728C")]
		private bool <autoSizeTextContainer>k__BackingField;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		protected Mesh m_mesh;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		protected bool m_isVolumetricText;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		protected float m_flexibleHeight;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		protected float m_flexibleWidth;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		protected float m_minHeight;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		protected float m_minWidth;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		protected float m_preferredWidth;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		protected float m_renderedWidth;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		protected bool m_isPreferredWidthDirty;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		protected float m_preferredHeight;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		protected float m_renderedHeight;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		protected bool m_isPreferredHeightDirty;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
		protected bool m_isCalculatingPreferredValues;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		protected int m_layoutPriority;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		protected bool m_isCalculateSizeRequired;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
		protected bool m_isLayoutDirty;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
		protected bool m_verticesAlreadyDirty;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
		protected bool m_layoutAlreadyDirty;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		protected bool m_isAwake;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30D")]
		[SerializeField]
		protected bool m_isInputParsingRequired;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		protected TextInputSources m_inputSource;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		protected string old_text;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		protected float old_arg0;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		protected float old_arg1;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		protected float old_arg2;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		protected float m_fontScale;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		protected float m_fontScaleMultiplier;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		protected char[] m_htmlTag;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		protected XML_TagAttribute[] m_xmlAttribute;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		protected float tag_LineIndent;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		protected float tag_Indent;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		protected TMP_XmlTagStack<float> m_indentStack;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		protected bool tag_NoParsing;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x361")]
		protected bool m_isParsingText;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		protected int[] m_char_buffer;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private TMP_CharacterInfo[] m_internalCharacterInfo;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		protected char[] m_input_CharArray;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private int m_charArray_Length;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		protected int m_totalCharacterCount;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		protected int m_characterCount;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		protected int m_firstCharacterOfLine;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		protected int m_firstVisibleCharacterOfLine;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		protected int m_lastCharacterOfLine;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		protected int m_lastVisibleCharacterOfLine;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		protected int m_lineNumber;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		protected int m_lineVisibleCharacterCount;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		protected int m_pageNumber;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		protected float m_maxAscender;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		protected float m_maxCapHeight;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		protected float m_maxDescender;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		protected float m_maxLineAscender;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		protected float m_maxLineDescender;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		protected float m_startOfLineAscender;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		protected float m_lineOffset;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		protected Extents m_meshExtents;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		protected Color32 m_htmlColor;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		protected TMP_XmlTagStack<Color32> m_colorStack;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		protected float m_tabSpacing;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		protected float m_spacing;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		protected TMP_XmlTagStack<int> m_styleStack;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		protected TMP_XmlTagStack<int> m_actionStack;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		protected float m_padding;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		protected float m_baselineOffset;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		protected float m_xAdvance;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		protected TMP_TextElementType m_textElementType;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		protected TMP_TextElement m_cached_TextElement;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		protected TMP_Glyph m_cached_Underline_GlyphInfo;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		protected TMP_Glyph m_cached_Ellipsis_GlyphInfo;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		protected TMP_SpriteAsset m_defaultSpriteAsset;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		protected TMP_SpriteAsset m_currentSpriteAsset;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		protected int m_spriteCount;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		protected int m_spriteIndex;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		protected InlineGraphicManager m_inlineGraphics;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		protected bool m_ignoreActiveState;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private readonly float[] k_Power;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static Vector2 k_LargePositiveVector2;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static Vector2 k_LargeNegativeVector2;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static float k_LargePositiveFloat;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static float k_LargeNegativeFloat;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static int k_LargePositiveInt;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static int k_LargeNegativeInt;

		[Token(Token = "0x1700024D")]
		public string text
		{
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x114D7F8", Offset = "0x114D7F8", VA = "0x114D7F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x1132114", Offset = "0x1132114", VA = "0x1132114")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public bool isRightToLeftText
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x114D800", Offset = "0x114D800", VA = "0x114D800")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x114D808", Offset = "0x114D808", VA = "0x114D808")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public TMP_FontAsset font
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x113E788", Offset = "0x113E788", VA = "0x113E788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x114D880", Offset = "0x114D880", VA = "0x114D880")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public virtual Material fontSharedMaterial
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x114D968", Offset = "0x114D968", VA = "0x114D968", Slot = "63")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x114D970", Offset = "0x114D970", VA = "0x114D970", Slot = "64")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public virtual Material[] fontSharedMaterials
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x114DA54", Offset = "0x114DA54", VA = "0x114DA54", Slot = "65")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x114DA64", Offset = "0x114DA64", VA = "0x114DA64", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Material fontMaterial
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x114DAC0", Offset = "0x114DAC0", VA = "0x114DAC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x114DAD4", Offset = "0x114DAD4", VA = "0x114DAD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public virtual Material[] fontMaterials
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x114DBF0", Offset = "0x114DBF0", VA = "0x114DBF0", Slot = "67")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x114DC04", Offset = "0x114DC04", VA = "0x114DC04", Slot = "68")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public override Color color
		{
			[Token(Token = "0x600112C")]
			[Address(RVA = "0x114DC60", Offset = "0x114DC60", VA = "0x114DC60", Slot = "22")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x114DC74", Offset = "0x114DC74", VA = "0x114DC74", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float alpha
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x114DD30", Offset = "0x114DD30", VA = "0x114DD30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x114DD38", Offset = "0x114DD38", VA = "0x114DD38")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public bool enableVertexGradient
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x114DD64", Offset = "0x114DD64", VA = "0x114DD64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x114DD6C", Offset = "0x114DD6C", VA = "0x114DD6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public VertexGradient colorGradient
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x114DDA4", Offset = "0x114DDA4", VA = "0x114DDA4")]
			get
			{
				return default(VertexGradient);
			}
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x114DDD8", Offset = "0x114DDD8", VA = "0x114DDD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public TMP_ColorGradient colorGradientPreset
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x114DE18", Offset = "0x114DE18", VA = "0x114DE18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x114DE20", Offset = "0x114DE20", VA = "0x114DE20")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public TMP_SpriteAsset spriteAsset
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x114DE3C", Offset = "0x114DE3C", VA = "0x114DE3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x114DE44", Offset = "0x114DE44", VA = "0x114DE44")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool tintAllSprites
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x114DE4C", Offset = "0x114DE4C", VA = "0x114DE4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x114DE54", Offset = "0x114DE54", VA = "0x114DE54")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool overrideColorTags
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x114DE8C", Offset = "0x114DE8C", VA = "0x114DE8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x114DE94", Offset = "0x114DE94", VA = "0x114DE94")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Color32 faceColor
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x114DECC", Offset = "0x114DECC", VA = "0x114DECC")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x114DFB4", Offset = "0x114DFB4", VA = "0x114DFB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Color32 outlineColor
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x114E058", Offset = "0x114E058", VA = "0x114E058")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x114E140", Offset = "0x114E140", VA = "0x114E140")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public float outlineWidth
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x114E1D0", Offset = "0x114E1D0", VA = "0x114E1D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x114E2A8", Offset = "0x114E2A8", VA = "0x114E2A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public float fontSize
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x114E320", Offset = "0x114E320", VA = "0x114E320")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x1131300", Offset = "0x1131300", VA = "0x1131300")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public float fontScale
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x114E328", Offset = "0x114E328", VA = "0x114E328")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000261")]
		public int fontWeight
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x114E330", Offset = "0x114E330", VA = "0x114E330")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x114E338", Offset = "0x114E338", VA = "0x114E338")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float pixelsPerUnit
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x114E39C", Offset = "0x114E39C", VA = "0x114E39C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000263")]
		public bool enableAutoSizing
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x114E51C", Offset = "0x114E51C", VA = "0x114E51C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x114E524", Offset = "0x114E524", VA = "0x114E524")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float fontSizeMin
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x114E58C", Offset = "0x114E58C", VA = "0x114E58C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x114E594", Offset = "0x114E594", VA = "0x114E594")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float fontSizeMax
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x114E5F0", Offset = "0x114E5F0", VA = "0x114E5F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x114E5F8", Offset = "0x114E5F8", VA = "0x114E5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public FontStyles fontStyle
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x114E654", Offset = "0x114E654", VA = "0x114E654")]
			get
			{
				return default(FontStyles);
			}
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x11322F8", Offset = "0x11322F8", VA = "0x11322F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public bool isUsingBold
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x114BB60", Offset = "0x114BB60", VA = "0x114BB60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		public TextAlignmentOptions alignment
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x114E65C", Offset = "0x114E65C", VA = "0x114E65C")]
			get
			{
				return default(TextAlignmentOptions);
			}
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x1133794", Offset = "0x1133794", VA = "0x1133794")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public float characterSpacing
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x114E664", Offset = "0x114E664", VA = "0x114E664")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x114E66C", Offset = "0x114E66C", VA = "0x114E66C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float lineSpacing
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x114E6D8", Offset = "0x114E6D8", VA = "0x114E6D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x114E6E0", Offset = "0x114E6E0", VA = "0x114E6E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float paragraphSpacing
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x114E74C", Offset = "0x114E74C", VA = "0x114E74C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x114E754", Offset = "0x114E754", VA = "0x114E754")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public float characterWidthAdjustment
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x114E7C0", Offset = "0x114E7C0", VA = "0x114E7C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x114E7C8", Offset = "0x114E7C8", VA = "0x114E7C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public bool enableWordWrapping
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x114E834", Offset = "0x114E834", VA = "0x114E834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x11321A0", Offset = "0x11321A0", VA = "0x11321A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public float wordWrappingRatios
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x114E83C", Offset = "0x114E83C", VA = "0x114E83C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x114E844", Offset = "0x114E844", VA = "0x114E844")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public bool enableAdaptiveJustification
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x114E8AC", Offset = "0x114E8AC", VA = "0x114E8AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x114E8B4", Offset = "0x114E8B4", VA = "0x114E8B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public TextOverflowModes OverflowMode
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x114E928", Offset = "0x114E928", VA = "0x114E928")]
			get
			{
				return default(TextOverflowModes);
			}
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x114E930", Offset = "0x114E930", VA = "0x114E930")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public bool enableKerning
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x114E998", Offset = "0x114E998", VA = "0x114E998")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x114E9A0", Offset = "0x114E9A0", VA = "0x114E9A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public bool extraPadding
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x114BB58", Offset = "0x114BB58", VA = "0x114BB58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x1132218", Offset = "0x1132218", VA = "0x1132218")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public bool richText
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x114EA10", Offset = "0x114EA10", VA = "0x114EA10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1132288", Offset = "0x1132288", VA = "0x1132288")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public bool parseCtrlCharacters
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x114EA18", Offset = "0x114EA18", VA = "0x114EA18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x114EA20", Offset = "0x114EA20", VA = "0x114EA20")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public bool isOverlay
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x114EA90", Offset = "0x114EA90", VA = "0x114EA90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x114EA98", Offset = "0x114EA98", VA = "0x114EA98")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool isOrthographic
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x114EB08", Offset = "0x114EB08", VA = "0x114EB08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x114EB10", Offset = "0x114EB10", VA = "0x114EB10")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool enableCulling
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x114EB48", Offset = "0x114EB48", VA = "0x114EB48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x114EB50", Offset = "0x114EB50", VA = "0x114EB50")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool ignoreVisibility
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x114EBA4", Offset = "0x114EBA4", VA = "0x114EBA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x114EBAC", Offset = "0x114EBAC", VA = "0x114EBAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public TextureMappingOptions horizontalMapping
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x114EBD4", Offset = "0x114EBD4", VA = "0x114EBD4")]
			get
			{
				return default(TextureMappingOptions);
			}
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x114EBDC", Offset = "0x114EBDC", VA = "0x114EBDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public TextureMappingOptions verticalMapping
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x114EC08", Offset = "0x114EC08", VA = "0x114EC08")]
			get
			{
				return default(TextureMappingOptions);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x114EC10", Offset = "0x114EC10", VA = "0x114EC10")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public TextRenderFlags renderMode
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x114EC3C", Offset = "0x114EC3C", VA = "0x114EC3C")]
			get
			{
				return default(TextRenderFlags);
			}
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x114EC44", Offset = "0x114EC44", VA = "0x114EC44")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public int maxVisibleCharacters
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x114EC60", Offset = "0x114EC60", VA = "0x114EC60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x114EC68", Offset = "0x114EC68", VA = "0x114EC68")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public int maxVisibleWords
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x114EC94", Offset = "0x114EC94", VA = "0x114EC94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x114EC9C", Offset = "0x114EC9C", VA = "0x114EC9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public int maxVisibleLines
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x114ECC8", Offset = "0x114ECC8", VA = "0x114ECC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x114ECD0", Offset = "0x114ECD0", VA = "0x114ECD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public bool useMaxVisibleDescender
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x114ED00", Offset = "0x114ED00", VA = "0x114ED00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x114ED08", Offset = "0x114ED08", VA = "0x114ED08")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public int pageToDisplay
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x114ED3C", Offset = "0x114ED3C", VA = "0x114ED3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x114ED44", Offset = "0x114ED44", VA = "0x114ED44")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public virtual Vector4 margin
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x114ED70", Offset = "0x114ED70", VA = "0x114ED70", Slot = "69")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x114ED84", Offset = "0x114ED84", VA = "0x114ED84", Slot = "70")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public TMP_TextInfo textInfo
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x113ECDC", Offset = "0x113ECDC", VA = "0x113ECDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public bool havePropertiesChanged
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x114EEB0", Offset = "0x114EEB0", VA = "0x114EEB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x114BBF8", Offset = "0x114BBF8", VA = "0x114BBF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool isUsingLegacyAnimationComponent
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x114EEB8", Offset = "0x114EEB8", VA = "0x114EEB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x114EEC0", Offset = "0x114EEC0", VA = "0x114EEC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public new Transform transform
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x1134AA4", Offset = "0x1134AA4", VA = "0x1134AA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		public new RectTransform rectTransform
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x113FC3C", Offset = "0x113FC3C", VA = "0x113FC3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public virtual bool autoSizeTextContainer
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x114EECC", Offset = "0x114EECC", VA = "0x114EECC", Slot = "71")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC772F8", Offset = "0xC772F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x114EED4", Offset = "0x114EED4", VA = "0x114EED4", Slot = "72")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77308", Offset = "0xC77308")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public virtual Mesh mesh
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x114EEE0", Offset = "0x114EEE0", VA = "0x114EEE0", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public bool isVolumetricText
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x114EEE8", Offset = "0x114EEE8", VA = "0x114EEE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x114EEF0", Offset = "0x114EEF0", VA = "0x114EEF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public Bounds bounds
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x114EF88", Offset = "0x114EF88", VA = "0x114EF88")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700028B")]
		public Bounds textBounds
		{
			[Token(Token = "0x6001192")]
			[Address(RVA = "0x114F040", Offset = "0x114F040", VA = "0x114F040")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700028C")]
		public float flexibleHeight
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x114F3B0", Offset = "0x114F3B0", VA = "0x114F3B0", Slot = "74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028D")]
		public float flexibleWidth
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x114F3B8", Offset = "0x114F3B8", VA = "0x114F3B8", Slot = "75")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028E")]
		public float minHeight
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x114F3C0", Offset = "0x114F3C0", VA = "0x114F3C0", Slot = "76")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028F")]
		public float minWidth
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x114F3C8", Offset = "0x114F3C8", VA = "0x114F3C8", Slot = "77")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000290")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x114F3D0", Offset = "0x114F3D0", VA = "0x114F3D0", Slot = "78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000291")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x114F4E0", Offset = "0x114F4E0", VA = "0x114F4E0", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000292")]
		public virtual float renderedWidth
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x114F648", Offset = "0x114F648", VA = "0x114F648", Slot = "80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000293")]
		public virtual float renderedHeight
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x114F650", Offset = "0x114F650", VA = "0x114F650", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000294")]
		public int layoutPriority
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x114F680", Offset = "0x114F680", VA = "0x114F680", Slot = "82")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x114D320", Offset = "0x114D320", VA = "0x114D320")]
		public TMP_Text()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x114F688", Offset = "0x114F688", VA = "0x114F688", Slot = "83")]
		protected virtual void LoadFontAsset()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x114F68C", Offset = "0x114F68C", VA = "0x114F68C", Slot = "84")]
		protected virtual void SetSharedMaterial(Material mat)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x114F690", Offset = "0x114F690", VA = "0x114F690", Slot = "85")]
		protected virtual Material GetMaterial(Material mat)
		{
			return null;
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x114F698", Offset = "0x114F698", VA = "0x114F698", Slot = "86")]
		protected virtual void SetFontBaseMaterial(Material mat)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x114F69C", Offset = "0x114F69C", VA = "0x114F69C", Slot = "87")]
		protected virtual Material[] GetSharedMaterials()
		{
			return null;
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x114F6A4", Offset = "0x114F6A4", VA = "0x114F6A4", Slot = "88")]
		protected virtual void SetSharedMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x114F6A8", Offset = "0x114F6A8", VA = "0x114F6A8", Slot = "89")]
		protected virtual Material[] GetMaterials(Material[] mats)
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x114F6B0", Offset = "0x114F6B0", VA = "0x114F6B0", Slot = "90")]
		protected virtual Material CreateMaterialInstance(Material source)
		{
			return null;
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x114F7A0", Offset = "0x114F7A0", VA = "0x114F7A0")]
		protected void SetVertexColorGradient(TMP_ColorGradient gradient)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x114F8B0", Offset = "0x114F8B0", VA = "0x114F8B0", Slot = "91")]
		protected virtual void SetFaceColor(Color32 color)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x114F8B4", Offset = "0x114F8B4", VA = "0x114F8B4", Slot = "92")]
		protected virtual void SetOutlineColor(Color32 color)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x114F8B8", Offset = "0x114F8B8", VA = "0x114F8B8", Slot = "93")]
		protected virtual void SetOutlineThickness(float thickness)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x114F8BC", Offset = "0x114F8BC", VA = "0x114F8BC", Slot = "94")]
		protected virtual void SetShaderDepth()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x114F8C0", Offset = "0x114F8C0", VA = "0x114F8C0", Slot = "95")]
		protected virtual void SetCulling()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x114F8C4", Offset = "0x114F8C4", VA = "0x114F8C4", Slot = "96")]
		protected virtual float GetPaddingForMaterial()
		{
			return default(float);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x114F8CC", Offset = "0x114F8CC", VA = "0x114F8CC", Slot = "97")]
		protected virtual float GetPaddingForMaterial(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x114F8D4", Offset = "0x114F8D4", VA = "0x114F8D4", Slot = "98")]
		protected virtual Vector3[] GetTextContainerLocalCorners()
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x114F8DC", Offset = "0x114F8DC", VA = "0x114F8DC", Slot = "99")]
		public virtual void ForceMeshUpdate()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x114F8E0", Offset = "0x114F8E0", VA = "0x114F8E0", Slot = "100")]
		public virtual void ForceMeshUpdate(bool ignoreActiveState)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x114F8E4", Offset = "0x114F8E4", VA = "0x114F8E4")]
		internal void SetTextInternal(string text)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x114F928", Offset = "0x114F928", VA = "0x114F928", Slot = "101")]
		public virtual void UpdateGeometry(Mesh mesh, int index)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x114F92C", Offset = "0x114F92C", VA = "0x114F92C", Slot = "102")]
		public virtual void UpdateVertexData(TMP_VertexDataUpdateFlags flags)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x114F930", Offset = "0x114F930", VA = "0x114F930", Slot = "103")]
		public virtual void UpdateVertexData()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x114F934", Offset = "0x114F934", VA = "0x114F934", Slot = "104")]
		public virtual void SetVertices(Vector3[] vertices)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x114F938", Offset = "0x114F938", VA = "0x114F938", Slot = "105")]
		public virtual void UpdateMeshPadding()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x114F93C", Offset = "0x114F93C", VA = "0x114F93C")]
		public new void CrossFadeColor(Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x114F9D0", Offset = "0x114F9D0", VA = "0x114F9D0")]
		public new void CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x114FA28", Offset = "0x114FA28", VA = "0x114FA28", Slot = "106")]
		protected virtual void InternalCrossFadeColor(Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x114FA2C", Offset = "0x114FA2C", VA = "0x114FA2C", Slot = "107")]
		protected virtual void InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x114FA30", Offset = "0x114FA30", VA = "0x114FA30")]
		protected void ParseInputText()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x11503D4", Offset = "0x11503D4", VA = "0x11503D4")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1150434", Offset = "0x1150434", VA = "0x1150434")]
		public void SetText(string text, float arg0)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x11506DC", Offset = "0x11506DC", VA = "0x11506DC")]
		public void SetText(string text, float arg0, float arg1)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1150444", Offset = "0x1150444", VA = "0x1150444")]
		public void SetText(string text, float arg0, float arg1, float arg2)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x11508C0", Offset = "0x11508C0", VA = "0x11508C0")]
		public void SetText(StringBuilder text)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1150EE8", Offset = "0x1150EE8", VA = "0x1150EE8")]
		public void SetCharArray(char[] charArray)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x11500B0", Offset = "0x11500B0", VA = "0x11500B0")]
		protected void SetTextArrayToCharArray(char[] charArray, ref int[] charBuffer)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x114FAC8", Offset = "0x114FAC8", VA = "0x114FAC8")]
		protected void StringToCharArray(string text, ref int[] chars)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1150920", Offset = "0x1150920", VA = "0x1150920")]
		protected void StringBuilderToIntArray(StringBuilder text, ref int[] chars)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x11506E8", Offset = "0x11506E8", VA = "0x11506E8")]
		protected void AddFloatToCharArray(float number, ref int index, int precision)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x11513DC", Offset = "0x11513DC", VA = "0x11513DC")]
		protected void AddIntToCharArray(int number, ref int index, int precision)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x11515D8", Offset = "0x11515D8", VA = "0x11515D8", Slot = "108")]
		protected virtual int SetArraySizes(int[] chars)
		{
			return default(int);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x11515E0", Offset = "0x11515E0", VA = "0x11515E0", Slot = "109")]
		protected virtual void GenerateTextMesh()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x11515E4", Offset = "0x11515E4", VA = "0x11515E4")]
		public Vector2 GetPreferredValues()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1151660", Offset = "0x1151660", VA = "0x1151660")]
		public Vector2 GetPreferredValues(float width, float height)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x11517CC", Offset = "0x11517CC", VA = "0x11517CC")]
		public Vector2 GetPreferredValues(string text)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x115190C", Offset = "0x115190C", VA = "0x115190C")]
		public Vector2 GetPreferredValues(string text, float width, float height)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x114F408", Offset = "0x114F408", VA = "0x114F408")]
		protected float GetPreferredWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1151748", Offset = "0x1151748", VA = "0x1151748")]
		protected float GetPreferredWidth(Vector2 margin)
		{
			return default(float);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x114F518", Offset = "0x114F518", VA = "0x114F518")]
		protected float GetPreferredHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1151780", Offset = "0x1151780", VA = "0x1151780")]
		protected float GetPreferredHeight(Vector2 margin)
		{
			return default(float);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x11519FC", Offset = "0x11519FC", VA = "0x11519FC")]
		public Vector2 GetRenderedValues()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x114F64C", Offset = "0x114F64C", VA = "0x114F64C")]
		protected float GetRenderedWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x114F668", Offset = "0x114F668", VA = "0x114F668")]
		protected float GetRenderedHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1151AC8", Offset = "0x1151AC8", VA = "0x1151AC8", Slot = "110")]
		protected virtual Vector2 CalculatePreferredValues(float defaultFontSize, Vector2 marginSize)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1158CB8", Offset = "0x1158CB8", VA = "0x1158CB8", Slot = "111")]
		protected virtual Bounds GetCompoundBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x114F058", Offset = "0x114F058", VA = "0x114F058")]
		protected Bounds GetTextBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1158CC4", Offset = "0x1158CC4", VA = "0x1158CC4", Slot = "112")]
		protected virtual void AdjustLineOffset(int startIndex, int endIndex, float offset)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1158CC8", Offset = "0x1158CC8", VA = "0x1158CC8")]
		protected void ResizeLineExtents(int size)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1158F44", Offset = "0x1158F44", VA = "0x1158F44", Slot = "113")]
		public virtual TMP_TextInfo GetTextInfo(string text)
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1158F4C", Offset = "0x1158F4C", VA = "0x1158F4C", Slot = "114")]
		protected virtual void ComputeMarginSize()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1158F50", Offset = "0x1158F50", VA = "0x1158F50")]
		protected int GetArraySizes(int[] chars)
		{
			return default(int);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1153464", Offset = "0x1153464", VA = "0x1153464")]
		protected void SaveWordWrappingState(ref WordWrapState state, int index, int count)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1158ABC", Offset = "0x1158ABC", VA = "0x1158ABC")]
		protected int RestoreWordWrappingState(ref WordWrapState state)
		{
			return default(int);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x11590A0", Offset = "0x11590A0", VA = "0x11590A0", Slot = "115")]
		protected virtual void SaveGlyphVertexInfo(float padding, float style_padding, Color32 vertexColor)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1159B8C", Offset = "0x1159B8C", VA = "0x1159B8C", Slot = "116")]
		protected virtual void SaveSpriteVertexInfo(Color32 vertexColor)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x115A678", Offset = "0x115A678", VA = "0x115A678", Slot = "117")]
		protected virtual void FillCharacterVertexBuffers(int i, int index_X4)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x115B194", Offset = "0x115B194", VA = "0x115B194", Slot = "118")]
		protected virtual void FillCharacterVertexBuffers(int i, int index_X4, bool isVolumetric)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x115C944", Offset = "0x115C944", VA = "0x115C944", Slot = "119")]
		protected virtual void FillSpriteVertexBuffers(int i, int index_X4)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x115D460", Offset = "0x115D460", VA = "0x115D460", Slot = "120")]
		protected virtual void DrawUnderlineMesh(Vector3 start, Vector3 end, ref int index, float startScale, float endScale, float maxScale, float sdfScale, Color32 underlineColor)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x115EA34", Offset = "0x115EA34", VA = "0x115EA34")]
		protected void GetSpecialCharacters(TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x115EB04", Offset = "0x115EB04", VA = "0x115EB04")]
		protected TMP_FontAsset GetFontAssetForWeight(int fontWeight)
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x115EBA8", Offset = "0x115EBA8", VA = "0x115EBA8", Slot = "121")]
		protected virtual void SetActiveSubMeshes(bool state)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x115E990", Offset = "0x115E990", VA = "0x115E990")]
		protected Vector2 PackUV(float x, float y, float scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x115EBAC", Offset = "0x115EBAC", VA = "0x115EBAC")]
		protected float PackUV(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x115EC4C", Offset = "0x115EC4C", VA = "0x115EC4C")]
		protected int HexToInt(char hex)
		{
			return default(int);
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1151314", Offset = "0x1151314", VA = "0x1151314")]
		protected int GetUTF16(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x11511AC", Offset = "0x11511AC", VA = "0x11511AC")]
		protected int GetUTF32(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x115ED38", Offset = "0x115ED38", VA = "0x115ED38")]
		protected Color32 HexCharsToColor(char[] hexChars, int tagCount)
		{
			return default(Color32);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x115F210", Offset = "0x115F210", VA = "0x115F210")]
		protected Color32 HexCharsToColor(char[] hexChars, int startIndex, int length)
		{
			return default(Color32);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x115F580", Offset = "0x115F580", VA = "0x115F580")]
		protected float ConvertToFloat(char[] chars, int startIndex, int length, int decimalPointIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1153634", Offset = "0x1153634", VA = "0x1153634")]
		protected bool ValidateHtmlTag(int[] chars, int startIndex, out int endIndex)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200025B")]
	public class TMP_TextElement
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float x;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float y;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float width;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xOffset;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float yOffset;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float xAdvance;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scale;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x127A73C", Offset = "0x127A73C", VA = "0x127A73C")]
		public TMP_TextElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025C")]
	public class TMP_TextInfo
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 k_InfinityVectorPositive;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2 k_InfinityVectorNegative;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_Text textComponent;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int characterCount;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int spriteCount;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spaceCount;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int wordCount;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int linkCount;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lineCount;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int pageCount;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int materialCount;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TMP_CharacterInfo[] characterInfo;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_WordInfo[] wordInfo;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_LinkInfo[] linkInfo;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_LineInfo[] lineInfo;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_PageInfo[] pageInfo;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TMP_MeshInfo[] meshInfo;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TMP_MeshInfo[] m_CachedMeshInfo;

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x127A744", Offset = "0x127A744", VA = "0x127A744")]
		public TMP_TextInfo()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x127A868", Offset = "0x127A868", VA = "0x127A868")]
		public TMP_TextInfo(TMP_Text textComponent)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x127A9E8", Offset = "0x127A9E8", VA = "0x127A9E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x127AA7C", Offset = "0x127AA7C", VA = "0x127AA7C")]
		public void ClearMeshInfo(bool updateMesh)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x127AB14", Offset = "0x127AB14", VA = "0x127AB14")]
		public void ClearAllMeshInfo()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x127ABA8", Offset = "0x127ABA8", VA = "0x127ABA8")]
		public void ResetVertexLayout(bool isVolumetric)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x127AC44", Offset = "0x127AC44", VA = "0x127AC44")]
		public void ClearUnusedVertices(MaterialReference[] materials)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x127ACD8", Offset = "0x127ACD8", VA = "0x127ACD8")]
		public void ClearLineInfo()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x127AF5C", Offset = "0x127AF5C", VA = "0x127AF5C")]
		public TMP_MeshInfo[] CopyMeshInfoVertexData()
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		public static void Resize<T>(ref T[] array, int size)
		{
		}

		[Token(Token = "0x60011FA")]
		public static void Resize<T>(ref T[] array, int size, bool isBlockAllocated)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public enum CaretPosition
	{
		[Token(Token = "0x4000E37")]
		None,
		[Token(Token = "0x4000E38")]
		Left,
		[Token(Token = "0x4000E39")]
		Right
	}
	[Token(Token = "0x200025E")]
	public struct CaretInfo
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public CaretPosition position;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x138B7E8", Offset = "0x138B7E8", VA = "0x138B7E8")]
		public CaretInfo(int index, CaretPosition position)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public static class TMP_TextUtilities
	{
		[Token(Token = "0x2000260")]
		private struct LineSegment
		{
			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Point1;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 Point2;

			[Token(Token = "0x6001212")]
			[Address(RVA = "0x127F1B8", Offset = "0x127F1B8", VA = "0x127F1B8")]
			public LineSegment(Vector3 p1, Vector3 p2)
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] m_rectWorldCorners;

		[Token(Token = "0x4000E3D")]
		private const string k_lookupStringL = "-------------------------------- !-#$%&-()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[-]^_`abcdefghijklmnopqrstuvwxyz{|}~-";

		[Token(Token = "0x4000E3E")]
		private const string k_lookupStringU = "-------------------------------- !-#$%&-()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[-]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~-";

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x127B60C", Offset = "0x127B60C", VA = "0x127B60C")]
		public static CaretInfo GetCursorInsertionIndex(TMP_Text textComponent, Vector3 position, Camera camera)
		{
			return default(CaretInfo);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x127BF24", Offset = "0x127BF24", VA = "0x127BF24")]
		public static int GetCursorIndexFromPosition(TMP_Text textComponent, Vector3 position, Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x127C110", Offset = "0x127C110", VA = "0x127C110")]
		public static int GetCursorIndexFromPosition(TMP_Text textComponent, Vector3 position, Camera camera, out CaretPosition cursor)
		{
			return default(int);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x127C314", Offset = "0x127C314", VA = "0x127C314")]
		public static bool IsIntersectingRectTransform(RectTransform rectTransform, Vector3 position, Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x127C7E8", Offset = "0x127C7E8", VA = "0x127C7E8")]
		public static int FindIntersectingCharacter(TMP_Text text, Vector3 position, Camera camera, bool visibleOnly)
		{
			return default(int);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x127B81C", Offset = "0x127B81C", VA = "0x127B81C")]
		public static int FindNearestCharacter(TMP_Text text, Vector3 position, Camera camera, bool visibleOnly)
		{
			return default(int);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x127CE20", Offset = "0x127CE20", VA = "0x127CE20")]
		public static int FindIntersectingWord(TMP_Text text, Vector3 position, Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x127D690", Offset = "0x127D690", VA = "0x127D690")]
		public static int FindNearestWord(TMP_Text text, Vector3 position, Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x127DF24", Offset = "0x127DF24", VA = "0x127DF24")]
		public static int FindIntersectingLink(TMP_Text text, Vector3 position, Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x127E46C", Offset = "0x127E46C", VA = "0x127E46C")]
		public static int FindNearestLink(TMP_Text text, Vector3 position, Camera camera)
		{
			return default(int);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x127C578", Offset = "0x127C578", VA = "0x127C578")]
		private static bool PointIntersectRectangle(Vector3 m, Vector3 a, Vector3 b, Vector3 c, Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x127BCD4", Offset = "0x127BCD4", VA = "0x127BCD4")]
		public static bool ScreenPointToWorldPointInRectangle(Transform transform, Vector2 screenPoint, Camera cam, out Vector3 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x127EAC4", Offset = "0x127EAC4", VA = "0x127EAC4")]
		private static bool IntersectLinePlane(LineSegment line, Vector3 point, Vector3 normal, out Vector3 intersectingPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x127CB58", Offset = "0x127CB58", VA = "0x127CB58")]
		public static float DistanceToLine(Vector3 a, Vector3 b, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x127ED08", Offset = "0x127ED08", VA = "0x127ED08")]
		public static char ToLowerFast(char c)
		{
			return default(char);
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x127ED68", Offset = "0x127ED68", VA = "0x127ED68")]
		public static char ToUpperFast(char c)
		{
			return default(char);
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x127EDC8", Offset = "0x127EDC8", VA = "0x127EDC8")]
		public static int GetSimpleHashCode(string s)
		{
			return default(int);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x127EE44", Offset = "0x127EE44", VA = "0x127EE44")]
		public static uint GetSimpleHashCodeLowercase(string s)
		{
			return default(uint);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x127EF1C", Offset = "0x127EF1C", VA = "0x127EF1C")]
		public static int HexToInt(char hex)
		{
			return default(int);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x127F008", Offset = "0x127F008", VA = "0x127F008")]
		public static int StringToInt(string s)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000261")]
	public class TMP_UpdateManager
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TMP_UpdateManager s_Instance;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<TMP_Text> m_LayoutRebuildQueue;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, int> m_LayoutQueueLookup;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<TMP_Text> m_GraphicRebuildQueue;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, int> m_GraphicQueueLookup;

		[Token(Token = "0x17000295")]
		public static TMP_UpdateManager instance
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x127F368", Offset = "0x127F368", VA = "0x127F368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x127F1C8", Offset = "0x127F1C8", VA = "0x127F1C8")]
		protected TMP_UpdateManager()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x127F3E4", Offset = "0x127F3E4", VA = "0x127F3E4")]
		public static void RegisterTextElementForLayoutRebuild(TMP_Text element)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x127F418", Offset = "0x127F418", VA = "0x127F418")]
		private bool InternalRegisterTextElementForLayoutRebuild(TMP_Text element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x127F500", Offset = "0x127F500", VA = "0x127F500")]
		public static void RegisterTextElementForGraphicRebuild(TMP_Text element)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x127F534", Offset = "0x127F534", VA = "0x127F534")]
		private bool InternalRegisterTextElementForGraphicRebuild(TMP_Text element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x127F61C", Offset = "0x127F61C", VA = "0x127F61C")]
		private void OnCameraPreRender(Camera cam)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x127F81C", Offset = "0x127F81C", VA = "0x127F81C")]
		public static void UnRegisterTextElementForRebuild(TMP_Text element)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x127F86C", Offset = "0x127F86C", VA = "0x127F86C")]
		private void InternalUnRegisterTextElementForGraphicRebuild(TMP_Text element)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x127F924", Offset = "0x127F924", VA = "0x127F924")]
		private void InternalUnRegisterTextElementForLayoutRebuild(TMP_Text element)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class TMP_UpdateRegistry
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TMP_UpdateRegistry s_Instance;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ICanvasElement> m_LayoutRebuildQueue;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, int> m_LayoutQueueLookup;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ICanvasElement> m_GraphicRebuildQueue;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, int> m_GraphicQueueLookup;

		[Token(Token = "0x17000296")]
		public static TMP_UpdateRegistry instance
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x127FAF4", Offset = "0x127FAF4", VA = "0x127FAF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x127F9DC", Offset = "0x127F9DC", VA = "0x127F9DC")]
		protected TMP_UpdateRegistry()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x127FB70", Offset = "0x127FB70", VA = "0x127FB70")]
		public static void RegisterCanvasElementForLayoutRebuild(ICanvasElement element)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x127FBA4", Offset = "0x127FBA4", VA = "0x127FBA4")]
		private bool InternalRegisterCanvasElementForLayoutRebuild(ICanvasElement element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x127FCF4", Offset = "0x127FCF4", VA = "0x127FCF4")]
		public static void RegisterCanvasElementForGraphicRebuild(ICanvasElement element)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x127FD28", Offset = "0x127FD28", VA = "0x127FD28")]
		private bool InternalRegisterCanvasElementForGraphicRebuild(ICanvasElement element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x127FE78", Offset = "0x127FE78", VA = "0x127FE78")]
		private void PerformUpdateForCanvasRendererObjects()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1280148", Offset = "0x1280148", VA = "0x1280148")]
		private void PerformUpdateForMeshRendererObjects()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x12801B8", Offset = "0x12801B8", VA = "0x12801B8")]
		public static void UnRegisterCanvasElementForRebuild(ICanvasElement element)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1280208", Offset = "0x1280208", VA = "0x1280208")]
		private void InternalUnRegisterCanvasElementForLayoutRebuild(ICanvasElement element)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1280328", Offset = "0x1280328", VA = "0x1280328")]
		private void InternalUnRegisterCanvasElementForGraphicRebuild(ICanvasElement element)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public struct TMP_XmlTagStack<T>
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] itemStack;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x6001228")]
		public TMP_XmlTagStack(T[] tagStack)
		{
		}

		[Token(Token = "0x6001229")]
		public void Clear()
		{
		}

		[Token(Token = "0x600122A")]
		public void SetDefault(T item)
		{
		}

		[Token(Token = "0x600122B")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600122C")]
		public T Remove()
		{
			return (T)null;
		}

		[Token(Token = "0x600122D")]
		public T CurrentItem()
		{
			return (T)null;
		}

		[Token(Token = "0x600122E")]
		public T PreviousItem()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000264")]
	public enum Compute_DistanceTransform_EventTypes
	{
		[Token(Token = "0x4000E4E")]
		Processing,
		[Token(Token = "0x4000E4F")]
		Completed
	}
	[Token(Token = "0x2000265")]
	public static class TMPro_EventManager
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly FastAction<object, Compute_DT_EventArgs> COMPUTE_DT_EVENT;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FastAction<bool, Material> MATERIAL_PROPERTY_EVENT;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly FastAction<bool, TMP_FontAsset> FONT_PROPERTY_EVENT;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly FastAction<bool, UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly FastAction<bool, TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly FastAction<GameObject, Material, Material> DRAG_AND_DROP_MATERIAL_EVENT;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly FastAction<bool> TEXT_STYLE_PROPERTY_EVENT;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly FastAction<TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly FastAction TMP_SETTINGS_PROPERTY_EVENT;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly FastAction<bool, TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly FastAction OnPreRenderObject_Event;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly FastAction<UnityEngine.Object> TEXT_CHANGED_EVENT;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x12805B8", Offset = "0x12805B8", VA = "0x12805B8")]
		public static void ON_PRE_RENDER_OBJECT_CHANGED()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1280630", Offset = "0x1280630", VA = "0x1280630")]
		public static void ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, Material mat)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x12806C8", Offset = "0x12806C8", VA = "0x12806C8")]
		public static void ON_FONT_PROPERTY_CHANGED(bool isChanged, TMP_FontAsset font)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1280760", Offset = "0x1280760", VA = "0x1280760")]
		public static void ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x12807F8", Offset = "0x12807F8", VA = "0x12807F8")]
		public static void ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, TextMeshPro obj)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1280890", Offset = "0x1280890", VA = "0x1280890")]
		public static void ON_DRAG_AND_DROP_MATERIAL_CHANGED(GameObject sender, Material currentMaterial, Material newMaterial)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1280930", Offset = "0x1280930", VA = "0x1280930")]
		public static void ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x12809B8", Offset = "0x12809B8", VA = "0x12809B8")]
		public static void ON_COLOR_GRAIDENT_PROPERTY_CHANGED(TMP_ColorGradient gradient)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1280A40", Offset = "0x1280A40", VA = "0x1280A40")]
		public static void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1280AC8", Offset = "0x1280AC8", VA = "0x1280AC8")]
		public static void ON_TMP_SETTINGS_CHANGED()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1280B40", Offset = "0x1280B40", VA = "0x1280B40")]
		public static void ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, TextMeshProUGUI obj)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1280BD8", Offset = "0x1280BD8", VA = "0x1280BD8")]
		public static void ON_COMPUTE_DT_EVENT(object Sender, Compute_DT_EventArgs e)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class Compute_DT_EventArgs
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Compute_DistanceTransform_EventTypes EventType;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ProgressPercentage;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] Colors;

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x138BAA4", Offset = "0x138BAA4", VA = "0x138BAA4")]
		public Compute_DT_EventArgs(Compute_DistanceTransform_EventTypes type, float progress)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x138BAE0", Offset = "0x138BAE0", VA = "0x138BAE0")]
		public Compute_DT_EventArgs(Compute_DistanceTransform_EventTypes type, Color[] colors)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public static class TMPro_ExtensionMethods
	{
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1280EE4", Offset = "0x1280EE4", VA = "0x1280EE4")]
		public static string ArrayToString(this char[] chars)
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		public static int FindInstanceID<T>(this List<T> list, T target) where T : UnityEngine.Object
		{
			return default(int);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1280FE8", Offset = "0x1280FE8", VA = "0x1280FE8")]
		public static bool Compare(this Color32 a, Color32 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1281030", Offset = "0x1281030", VA = "0x1281030")]
		public static bool CompareRGB(this Color32 a, Color32 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1281068", Offset = "0x1281068", VA = "0x1281068")]
		public static bool Compare(this Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1281098", Offset = "0x1281098", VA = "0x1281098")]
		public static bool CompareRGB(this Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x12810BC", Offset = "0x12810BC", VA = "0x12810BC")]
		public static Color32 Multiply(this Color32 c1, Color32 c2)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1281180", Offset = "0x1281180", VA = "0x1281180")]
		public static Color32 Tint(this Color32 c1, Color32 c2)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1281244", Offset = "0x1281244", VA = "0x1281244")]
		public static Color32 Tint(this Color32 c1, float tint)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x12813A4", Offset = "0x12813A4", VA = "0x12813A4")]
		public static bool Compare(this Vector3 v1, Vector3 v2, int accuracy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x12813FC", Offset = "0x12813FC", VA = "0x12813FC")]
		public static bool Compare(this Quaternion q1, Quaternion q2, int accuracy)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000268")]
	public static class TMP_Math
	{
		[Token(Token = "0x4000E5F")]
		public const float FLOAT_MAX = 32768f;

		[Token(Token = "0x4000E60")]
		public const float FLOAT_MIN = -32768f;

		[Token(Token = "0x4000E61")]
		public const int INT_MAX = int.MaxValue;

		[Token(Token = "0x4000E62")]
		public const int INT_MIN = -2147483647;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x114535C", Offset = "0x114535C", VA = "0x114535C")]
		public static bool Approximately(float a, float b)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public class FaceInfo
	{
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PointSize;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Scale;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CharacterCount;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LineHeight;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Baseline;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Ascender;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CapHeight;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Descender;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CenterLine;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float SuperscriptOffset;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SubscriptOffset;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float SubSize;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Underline;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float UnderlineThickness;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float TabWidth;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Padding;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float AtlasWidth;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float AtlasHeight;

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x138BE8C", Offset = "0x138BE8C", VA = "0x138BE8C")]
		public FaceInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public class TMP_Glyph : TMP_TextElement
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1138400", Offset = "0x1138400", VA = "0x1138400")]
		public TMP_Glyph()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1138410", Offset = "0x1138410", VA = "0x1138410")]
		public static TMP_Glyph Clone(TMP_Glyph source)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public struct FontCreationSetting
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string fontSourcePath;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int fontSizingMode;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int fontSize;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int fontPadding;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int fontPackingMode;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fontAtlasWidth;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int fontAtlasHeight;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int fontCharacterSet;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int fontStyle;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fontStlyeModifier;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int fontRenderMode;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool fontKerning;
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class Glyph2D
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 bottomLeft;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 topLeft;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 bottomRight;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 topRight;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 uv0;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 uv1;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 uv2;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 uv3;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x138C568", Offset = "0x138C568", VA = "0x138C568")]
		public Glyph2D()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public struct KerningPairKey
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ascii_Left;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ascii_Right;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int key;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x138D9BC", Offset = "0x138D9BC", VA = "0x138D9BC")]
		public KerningPairKey(int ascii_left, int ascii_right)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class KerningPair
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int AscII_Left;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int AscII_Right;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XadvanceOffset;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x138D964", Offset = "0x138D964", VA = "0x138D964")]
		public KerningPair(int left, int right, float offset)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026F")]
	public class KerningTable
	{
		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77418", Offset = "0xC77418")]
		private sealed class <AddKerningPair>c__AnonStorey0
		{
			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int left;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int right;

			[Token(Token = "0x600144A")]
			[Address(RVA = "0x138DD20", Offset = "0x138DD20", VA = "0x138DD20")]
			public <AddKerningPair>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0x138E0BC", Offset = "0x138E0BC", VA = "0x138E0BC")]
			internal bool <>m__0(KerningPair item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77428", Offset = "0xC77428")]
		private sealed class <RemoveKerningPair>c__AnonStorey1
		{
			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int left;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int right;

			[Token(Token = "0x600144C")]
			[Address(RVA = "0x138DE58", Offset = "0x138DE58", VA = "0x138DE58")]
			public <RemoveKerningPair>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0x138E10C", Offset = "0x138E10C", VA = "0x138E10C")]
			internal bool <>m__0(KerningPair item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<KerningPair> kerningPairs;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC773D8", Offset = "0xC773D8")]
		private static Func<KerningPair, int> <>f__am$cache0;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC773E8", Offset = "0xC773E8")]
		private static Func<KerningPair, int> <>f__am$cache1;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x138D9CC", Offset = "0x138D9CC", VA = "0x138D9CC")]
		public KerningTable()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x138DA40", Offset = "0x138DA40", VA = "0x138DA40")]
		public void AddKerningPair()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x138DBA8", Offset = "0x138DBA8", VA = "0x138DBA8")]
		public int AddKerningPair(int left, int right, float offset)
		{
			return default(int);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x138DD28", Offset = "0x138DD28", VA = "0x138DD28")]
		public void RemoveKerningPair(int left, int right)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x138DE60", Offset = "0x138DE60", VA = "0x138DE60")]
		public void RemoveKerningPair(int index)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x138DECC", Offset = "0x138DECC", VA = "0x138DECC")]
		public void SortKerningPairs()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x138E06C", Offset = "0x138E06C", VA = "0x138E06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC773F8", Offset = "0xC773F8")]
		private static int <SortKerningPairs>m__0(KerningPair s)
		{
			return default(int);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x138E094", Offset = "0x138E094", VA = "0x138E094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77408", Offset = "0xC77408")]
		private static int <SortKerningPairs>m__1(KerningPair s)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000270")]
	public enum TMP_VertexDataUpdateFlags
	{
		[Token(Token = "0x4000E94")]
		None = 0,
		[Token(Token = "0x4000E95")]
		Vertices = 1,
		[Token(Token = "0x4000E96")]
		Uv0 = 2,
		[Token(Token = "0x4000E97")]
		Uv2 = 4,
		[Token(Token = "0x4000E98")]
		Uv4 = 8,
		[Token(Token = "0x4000E99")]
		Colors32 = 16,
		[Token(Token = "0x4000E9A")]
		All = 255
	}
	[Token(Token = "0x2000271")]
	public struct TMP_CharacterInfo
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char character;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public short index;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public TMP_TextElementType elementType;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TMP_TextElement textElement;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset fontAsset;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_SpriteAsset spriteAsset;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spriteIndex;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int materialReferenceIndex;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isUsingAlternateTypeface;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float pointSize;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public short lineNumber;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public short pageNumber;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int vertexIndex;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public TMP_Vertex vertex_TL;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public TMP_Vertex vertex_BL;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public TMP_Vertex vertex_TR;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public TMP_Vertex vertex_BR;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 topLeft;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Vector3 bottomLeft;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Vector3 topRight;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector3 bottomRight;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float origin;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float ascender;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float baseLine;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float descender;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float xAdvance;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float aspectRatio;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float scale;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Color32 color;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public FontStyles style;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool isVisible;
	}
	[Token(Token = "0x2000272")]
	public struct TMP_Vertex
	{
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 uv;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 uv2;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 uv4;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 color;
	}
	[Serializable]
	[Token(Token = "0x2000273")]
	public struct VertexGradient
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color topLeft;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color topRight;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color bottomLeft;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color bottomRight;

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1281494", Offset = "0x1281494", VA = "0x1281494")]
		public VertexGradient(Color color)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x12814EC", Offset = "0x12814EC", VA = "0x12814EC")]
		public VertexGradient(Color color0, Color color1, Color color2, Color color3)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public struct TMP_PageInfo
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int firstCharacterIndex;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int lastCharacterIndex;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ascender;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float baseLine;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float descender;
	}
	[Token(Token = "0x2000275")]
	public struct TMP_LinkInfo
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TMP_Text textComponent;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int hashCode;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int linkIdFirstCharacterIndex;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int linkIdLength;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int linkTextfirstCharacterIndex;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int linkTextLength;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal char[] linkID;

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x11426FC", Offset = "0x11426FC", VA = "0x11426FC")]
		internal void SetLinkID(char[] text, int startIndex, int length)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x114281C", Offset = "0x114281C", VA = "0x114281C")]
		public string GetLinkText()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x11428D8", Offset = "0x11428D8", VA = "0x11428D8")]
		public string GetLinkID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000276")]
	public struct TMP_WordInfo
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TMP_Text textComponent;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int firstCharacterIndex;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int lastCharacterIndex;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int characterCount;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x12805B0", Offset = "0x12805B0", VA = "0x12805B0")]
		public string GetWord()
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public struct TMP_SpriteInfo
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int spriteIndex;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int characterIndex;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int vertexIndex;
	}
	[Token(Token = "0x2000278")]
	public struct Extents
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 min;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 max;

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x138BB28", Offset = "0x138BB28", VA = "0x138BB28")]
		public Extents(Vector2 min, Vector2 max)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x138BE84", Offset = "0x138BE84", VA = "0x138BE84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public struct Mesh_Extents
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 min;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 max;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x138F0EC", Offset = "0x138F0EC", VA = "0x138F0EC")]
		public Mesh_Extents(Vector2 min, Vector2 max)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x138F448", Offset = "0x138F448", VA = "0x138F448", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public struct WordWrapState
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int previous_WordBreak;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int total_CharacterCount;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int visible_CharacterCount;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int visible_SpriteCount;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int visible_LinkCount;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int firstCharacterIndex;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int firstVisibleCharacterIndex;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int lastCharacterIndex;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lastVisibleCharIndex;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int lineNumber;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxCapHeight;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAscender;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDescender;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxLineAscender;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxLineDescender;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float previousLineAscender;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float xAdvance;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float preferredWidth;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float preferredHeight;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float previousLineScale;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int wordCount;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public FontStyles fontStyle;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float fontScale;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fontScaleMultiplier;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float currentFontSize;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float baselineOffset;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lineOffset;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_TextInfo textInfo;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TMP_LineInfo lineInfo;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color32 vertexColor;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TMP_XmlTagStack<Color32> colorStack;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TMP_XmlTagStack<float> sizeStack;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TMP_XmlTagStack<int> fontWeightStack;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TMP_XmlTagStack<int> styleStack;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TMP_XmlTagStack<int> actionStack;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public TMP_XmlTagStack<MaterialReference> materialReferenceStack;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TMP_FontAsset currentFontAsset;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public TMP_SpriteAsset currentSpriteAsset;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Material currentMaterial;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int currentMaterialIndex;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Extents meshExtents;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public bool tagNoParsing;
	}
	[Token(Token = "0x200027B")]
	public struct TagAttribute
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int startIndex;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int length;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int hashCode;
	}
	[Token(Token = "0x200027C")]
	public struct XML_TagAttribute
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nameHashCode;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public TagType valueType;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int valueStartIndex;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int valueDecimalIndex;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int valueLength;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int valueHashCode;
	}
	[Token(Token = "0x200027D")]
	public static class ShaderUtilities
	{
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ID_MainTex;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ID_FaceTex;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int ID_FaceColor;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int ID_FaceDilate;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int ID_Shininess;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int ID_UnderlayColor;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int ID_UnderlayOffsetX;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int ID_UnderlayOffsetY;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int ID_UnderlayDilate;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int ID_UnderlaySoftness;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int ID_WeightNormal;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int ID_WeightBold;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int ID_OutlineTex;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int ID_OutlineWidth;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int ID_OutlineSoftness;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int ID_OutlineColor;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int ID_GradientScale;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int ID_ScaleX;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int ID_ScaleY;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int ID_PerspectiveFilter;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static int ID_TextureWidth;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static int ID_TextureHeight;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int ID_BevelAmount;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int ID_GlowColor;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static int ID_GlowOffset;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static int ID_GlowPower;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int ID_GlowOuter;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static int ID_LightAngle;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int ID_EnvMap;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int ID_EnvMatrix;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static int ID_EnvMatrixRotation;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static int ID_MaskCoord;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static int ID_ClipRect;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static int ID_MaskSoftnessX;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static int ID_MaskSoftnessY;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public static int ID_VertexOffsetX;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static int ID_VertexOffsetY;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public static int ID_UseClipRect;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static int ID_StencilID;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static int ID_StencilOp;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static int ID_StencilComp;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public static int ID_StencilReadMask;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static int ID_StencilWriteMask;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public static int ID_ShaderFlags;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static int ID_ScaleRatio_A;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static int ID_ScaleRatio_B;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static int ID_ScaleRatio_C;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string Keyword_Bevel;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static string Keyword_Glow;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static string Keyword_Underlay;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static string Keyword_Ratios;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static string Keyword_MASK_SOFT;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static string Keyword_MASK_HARD;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static string Keyword_MASK_TEX;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static string Keyword_Outline;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static string ShaderTag_ZTestMode;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static string ShaderTag_CullMode;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static float m_clamp;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public static bool isInitialized;

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x138F498", Offset = "0x138F498", VA = "0x138F498")]
		public static void GetShaderPropertyIDs()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x138FBC4", Offset = "0x138FBC4", VA = "0x138FBC4")]
		public static void UpdateShaderRatios(Material mat, bool isBold)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1390208", Offset = "0x1390208", VA = "0x1390208")]
		public static Vector4 GetFontExtent(Material material)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x139026C", Offset = "0x139026C", VA = "0x139026C")]
		public static bool IsMaskingEnabled(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1390458", Offset = "0x1390458", VA = "0x1390458")]
		public static float GetPadding(Material material, bool enableExtraPadding, bool isBold)
		{
			return default(float);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1390E4C", Offset = "0x1390E4C", VA = "0x1390E4C")]
		public static float GetPadding(Material[] materials, bool enableExtraPadding, bool isBold)
		{
			return default(float);
		}
	}
}
namespace TinyMessenger
{
	[Token(Token = "0x200027E")]
	public interface IMicroMessage
	{
	}
	[Token(Token = "0x200027F")]
	public struct MicroMessageSubscriptionToken : IEquatable<MicroMessageSubscriptionToken>
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Guid Id;

		[Token(Token = "0x17000297")]
		public static MicroMessageSubscriptionToken Null
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x138B534", Offset = "0x138B534", VA = "0x138B534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77438", Offset = "0xC77438")]
			get
			{
				return default(MicroMessageSubscriptionToken);
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x138B368", Offset = "0x138B368", VA = "0x138B368", Slot = "4")]
		public bool Equals(MicroMessageSubscriptionToken other)
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x138B400", Offset = "0x138B400", VA = "0x138B400", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x138B498", Offset = "0x138B498", VA = "0x138B498", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x138B52C", Offset = "0x138B52C", VA = "0x138B52C")]
		public bool IsValid()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000280")]
	public sealed class MicroMessengerHub
	{
		[Token(Token = "0x2000281")]
		private interface IMicroMessageSubscription
		{
			[Token(Token = "0x17000298")]
			MicroMessageSubscriptionToken SubscriptionToken
			{
				[Token(Token = "0x6001272")]
				get;
			}
		}

		[Token(Token = "0x2000282")]
		private class MicroMessageSubscription<TMessage> : IMicroMessageSubscription where TMessage : struct, IMicroMessage
		{
			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected readonly MicroMessageSubscriptionToken m_subscriptionToken;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected readonly Action<TMessage> m_deliveryAction;

			[Token(Token = "0x17000299")]
			public MicroMessageSubscriptionToken SubscriptionToken
			{
				[Token(Token = "0x6001274")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77448", Offset = "0xC77448")]
				get
				{
					return default(MicroMessageSubscriptionToken);
				}
			}

			[Token(Token = "0x6001273")]
			public MicroMessageSubscription(MicroMessageSubscriptionToken subscriptionToken, Action<TMessage> deliveryAction)
			{
			}

			[Token(Token = "0x6001275")]
			public void Deliver(TMessage message)
			{
			}
		}

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object m_subscriptionsPadlock;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IMicroMessageSubscription> m_subscriptions;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Stack<IMicroMessageSubscription> m_publishStack;

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x138B540", Offset = "0x138B540", VA = "0x138B540")]
		public MicroMessengerHub()
		{
		}

		[Token(Token = "0x600126F")]
		public MicroMessageSubscriptionToken Subscribe<TMessage>(Action<TMessage> deliveryAction) where TMessage : struct, IMicroMessage
		{
			return default(MicroMessageSubscriptionToken);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x138B5F8", Offset = "0x138B5F8", VA = "0x138B5F8")]
		public void Unsubscribe(MicroMessageSubscriptionToken subscriptionToken)
		{
		}

		[Token(Token = "0x6001271")]
		public void Publish<TMessage>(ref TMessage message) where TMessage : struct, IMicroMessage
		{
		}
	}
}
[Token(Token = "0x2000283")]
public class UniAndroidPermission
{
	[Token(Token = "0x4000F4F")]
	private const string PackageName = "net.sanukin.PermissionManager";

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Action onAllowCallback;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Action onDenyCallback;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Action onDenyAndNeverAskAgainCallback;

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1281558", Offset = "0x1281558", VA = "0x1281558")]
	public UniAndroidPermission()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1281560", Offset = "0x1281560", VA = "0x1281560")]
	public static bool IsPermitted(AndroidPermission permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x12817CC", Offset = "0x12817CC", VA = "0x12817CC")]
	public static void RequestPermission(AndroidPermission permission, [Optional] Action onAllow, [Optional] Action onDeny, [Optional] Action onDenyAndNeverAskAgain)
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x128171C", Offset = "0x128171C", VA = "0x128171C")]
	private static string GetPermissionStr(AndroidPermission permission)
	{
		return null;
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x12819C4", Offset = "0x12819C4", VA = "0x12819C4")]
	private void OnAllow()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x1281A88", Offset = "0x1281A88", VA = "0x1281A88")]
	private void OnDeny()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x1281AE4", Offset = "0x1281AE4", VA = "0x1281AE4")]
	private void OnDenyAndNeverAskAgain()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x1281A20", Offset = "0x1281A20", VA = "0x1281A20")]
	private void ResetAllCallBacks()
	{
	}
}
[Token(Token = "0x2000284")]
public enum AndroidPermission
{
	[Token(Token = "0x4000F54")]
	ACCESS_COARSE_LOCATION,
	[Token(Token = "0x4000F55")]
	ACCESS_FINE_LOCATION,
	[Token(Token = "0x4000F56")]
	ADD_VOICEMAIL,
	[Token(Token = "0x4000F57")]
	BODY_SENSORS,
	[Token(Token = "0x4000F58")]
	CALL_PHONE,
	[Token(Token = "0x4000F59")]
	CAMERA,
	[Token(Token = "0x4000F5A")]
	GET_ACCOUNTS,
	[Token(Token = "0x4000F5B")]
	PROCESS_OUTGOING_CALLS,
	[Token(Token = "0x4000F5C")]
	READ_CALENDAR,
	[Token(Token = "0x4000F5D")]
	READ_CALL_LOG,
	[Token(Token = "0x4000F5E")]
	READ_CONTACTS,
	[Token(Token = "0x4000F5F")]
	READ_EXTERNAL_STORAGE,
	[Token(Token = "0x4000F60")]
	READ_PHONE_STATE,
	[Token(Token = "0x4000F61")]
	READ_SMS,
	[Token(Token = "0x4000F62")]
	RECEIVE_MMS,
	[Token(Token = "0x4000F63")]
	RECEIVE_SMS,
	[Token(Token = "0x4000F64")]
	RECEIVE_WAP_PUSH,
	[Token(Token = "0x4000F65")]
	RECORD_AUDIO,
	[Token(Token = "0x4000F66")]
	SEND_SMS,
	[Token(Token = "0x4000F67")]
	USE_SIP,
	[Token(Token = "0x4000F68")]
	WRITE_CALENDAR,
	[Token(Token = "0x4000F69")]
	WRITE_CALL_LOG,
	[Token(Token = "0x4000F6A")]
	WRITE_CONTACTS,
	[Token(Token = "0x4000F6B")]
	WRITE_EXTERNAL_STORAGE
}
namespace AppStoresSupport
{
	[Serializable]
	[Token(Token = "0x2000285")]
	public class AppStoreSetting
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AppID;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppKey;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsTestMode;

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x11C00AC", Offset = "0x11C00AC", VA = "0x11C00AC")]
		public AppStoreSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	public class AppStoreSettings : ScriptableObject
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string UnityClientID;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UnityClientKey;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string UnityClientRSAPublicKey;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AppStoreSetting XiaomiAppStoreSetting;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x11C011C", Offset = "0x11C011C", VA = "0x11C011C")]
		public AppStoreSettings()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x11C01B8", Offset = "0x11C01B8", VA = "0x11C01B8")]
		public AppInfo getAppInfo()
		{
			return null;
		}
	}
}
namespace UnityEngine.Purchasing
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC77458", Offset = "0xC77458")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC77458", Offset = "0xC77458")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC77458", Offset = "0xC77458")]
	public class IAPButton : MonoBehaviour
	{
		[Token(Token = "0x2000288")]
		public enum ButtonType
		{
			[Token(Token = "0x4000F7C")]
			Purchase,
			[Token(Token = "0x4000F7D")]
			Restore
		}

		[Serializable]
		[Token(Token = "0x2000289")]
		public class OnPurchaseCompletedEvent : UnityEvent<Product>
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x129AA6C", Offset = "0x129AA6C", VA = "0x129AA6C")]
			public OnPurchaseCompletedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028A")]
		public class OnPurchaseFailedEvent : UnityEvent<Product, PurchaseFailureReason>
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x129AABC", Offset = "0x129AABC", VA = "0x129AABC")]
			public OnPurchaseFailedEvent()
			{
			}
		}

		[Token(Token = "0x200028B")]
		public class IAPButtonStoreManager : IStoreListener
		{
			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPButtonStoreManager instance;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ProductCatalog catalog;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<IAPButton> activeButtons;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IAPListener m_Listener;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected IStoreController controller;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected IExtensionProvider extensions;

			[Token(Token = "0x1700029A")]
			public static IAPButtonStoreManager Instance
			{
				[Token(Token = "0x600128F")]
				[Address(RVA = "0x129816C", Offset = "0x129816C", VA = "0x129816C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			public IStoreController StoreController
			{
				[Token(Token = "0x6001290")]
				[Address(RVA = "0x1299F44", Offset = "0x1299F44", VA = "0x1299F44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			public IExtensionProvider ExtensionProvider
			{
				[Token(Token = "0x6001291")]
				[Address(RVA = "0x1299318", Offset = "0x1299318", VA = "0x1299318")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x1299798", Offset = "0x1299798", VA = "0x1299798")]
			private IAPButtonStoreManager()
			{
			}

			[Token(Token = "0x6001292")]
			[Address(RVA = "0x12981D4", Offset = "0x12981D4", VA = "0x12981D4")]
			public bool HasProductInCatalog(string productID)
			{
				return default(bool);
			}

			[Token(Token = "0x6001293")]
			[Address(RVA = "0x12995F8", Offset = "0x12995F8", VA = "0x12995F8")]
			public Product GetProduct(string productID)
			{
				return null;
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0x1298524", Offset = "0x1298524", VA = "0x1298524")]
			public void AddButton(IAPButton button)
			{
			}

			[Token(Token = "0x6001295")]
			[Address(RVA = "0x129884C", Offset = "0x129884C", VA = "0x129884C")]
			public void RemoveButton(IAPButton button)
			{
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0x1299F4C", Offset = "0x1299F4C", VA = "0x1299F4C")]
			public void AddListener(IAPListener listener)
			{
			}

			[Token(Token = "0x6001297")]
			[Address(RVA = "0x129A010", Offset = "0x129A010", VA = "0x129A010")]
			public void RemoveListener(IAPListener listener)
			{
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0x129899C", Offset = "0x129899C", VA = "0x129899C")]
			public void InitiatePurchase(string productID)
			{
			}

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x129A09C", Offset = "0x129A09C", VA = "0x129A09C", Slot = "7")]
			public void OnInitialized(IStoreController controller, IExtensionProvider extensions)
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x129A1B0", Offset = "0x129A1B0", VA = "0x129A1B0", Slot = "4")]
			public void OnInitializeFailed(InitializationFailureReason error)
			{
			}

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x129A298", Offset = "0x129A298", VA = "0x129A298", Slot = "5")]
			public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs e)
			{
				return default(PurchaseProcessingResult);
			}

			[Token(Token = "0x600129C")]
			[Address(RVA = "0x129A68C", Offset = "0x129A68C", VA = "0x129A68C", Slot = "6")]
			public void OnPurchaseFailed(Product product, PurchaseFailureReason reason)
			{
			}
		}

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string productId;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC77514", Offset = "0xC77514")]
		public ButtonType buttonType;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7754C", Offset = "0xC7754C")]
		public bool consumePurchase;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC77584", Offset = "0xC77584")]
		public OnPurchaseCompletedEvent onPurchaseComplete;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC775BC", Offset = "0xC775BC")]
		public OnPurchaseFailedEvent onPurchaseFailed;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC775F4", Offset = "0xC775F4")]
		public Text titleText;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7762C", Offset = "0xC7762C")]
		public Text descriptionText;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC77664", Offset = "0xC77664")]
		public Text priceText;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1297EB0", Offset = "0x1297EB0", VA = "0x1297EB0")]
		public IAPButton()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1297EC0", Offset = "0x1297EC0", VA = "0x1297EC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1298490", Offset = "0x1298490", VA = "0x1298490")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x12987C0", Offset = "0x12987C0", VA = "0x12987C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x12988B8", Offset = "0x12988B8", VA = "0x12988B8")]
		private void PurchaseProduct()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1298B80", Offset = "0x1298B80", VA = "0x1298B80")]
		private void Restore()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1299320", Offset = "0x1299320", VA = "0x1299320")]
		private void OnTransactionsRestored(bool success)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x12993D8", Offset = "0x12993D8", VA = "0x12993D8")]
		public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs e)
		{
			return default(PurchaseProcessingResult);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1299508", Offset = "0x1299508", VA = "0x1299508")]
		public void OnPurchaseFailed(Product product, PurchaseFailureReason reason)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1298590", Offset = "0x1298590", VA = "0x1298590")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1299768", Offset = "0x1299768", VA = "0x1299768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7769C", Offset = "0xC7769C")]
		private void <Restore>m__0(RestoreTransactionIDState restoreTransactionIDState)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public static class IAPConfigurationHelper
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x12998C0", Offset = "0x12998C0", VA = "0x12998C0")]
		public static void PopulateConfigurationBuilder(ref ConfigurationBuilder builder, ProductCatalog catalog)
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xC776AC", Offset = "0xC776AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xC776AC", Offset = "0xC776AC")]
	public class IAPListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200028E")]
		public class OnPurchaseCompletedEvent : UnityEvent<Product>
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x129AC58", Offset = "0x129AC58", VA = "0x129AC58")]
			public OnPurchaseCompletedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028F")]
		public class OnPurchaseFailedEvent : UnityEvent<Product, PurchaseFailureReason>
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x129ACA8", Offset = "0x129ACA8", VA = "0x129ACA8")]
			public OnPurchaseFailedEvent()
			{
			}
		}

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7770C", Offset = "0xC7770C")]
		public bool consumePurchase;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC77744", Offset = "0xC77744")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC7777C", Offset = "0xC7777C")]
		public OnPurchaseCompletedEvent onPurchaseComplete;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC777B4", Offset = "0xC777B4")]
		public OnPurchaseFailedEvent onPurchaseFailed;

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x129AB0C", Offset = "0x129AB0C", VA = "0x129AB0C")]
		public IAPListener()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x129AB1C", Offset = "0x129AB1C", VA = "0x129AB1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x129ABE0", Offset = "0x129ABE0", VA = "0x129ABE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x129A55C", Offset = "0x129A55C", VA = "0x129A55C")]
		public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs e)
		{
			return default(PurchaseProcessingResult);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x129A91C", Offset = "0x129A91C", VA = "0x129A91C")]
		public void OnPurchaseFailed(Product product, PurchaseFailureReason reason)
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x2000290")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000291")]
		public enum Mode
		{
			[Token(Token = "0x4000F8E")]
			Trigger,
			[Token(Token = "0x4000F8F")]
			Replace,
			[Token(Token = "0x4000F90")]
			Activate,
			[Token(Token = "0x4000F91")]
			Enable,
			[Token(Token = "0x4000F92")]
			Animate,
			[Token(Token = "0x4000F93")]
			Deactivate
		}

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode action;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject source;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int triggerCount;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool repeatTrigger;

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x2946CC0", Offset = "0x2946CC0", VA = "0x2946CC0")]
		public ActivateTrigger()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2946CD8", Offset = "0x2946CD8", VA = "0x2946CD8")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x29471BC", Offset = "0x29471BC", VA = "0x29471BC")]
		private void OnTriggerEnter(Collider other)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000293")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shader original;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Shader replacement;

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x2947E0C", Offset = "0x2947E0C", VA = "0x2947E0C")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000294")]
		public class ReplacementList
		{
			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x2947E14", Offset = "0x2947E14", VA = "0x2947E14")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReplacementList m_ReplacementList;

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x29471C0", Offset = "0x29471C0", VA = "0x29471C0")]
		public AutoMobileShaderSwitch()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x29471C8", Offset = "0x29471C8", VA = "0x29471C8")]
		private void OnEnable()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000296")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x2948058", Offset = "0x2948058", VA = "0x2948058")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x2947E80", Offset = "0x2947E80", VA = "0x2947E80")]
		public AutoMoveAndRotate()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x2947E88", Offset = "0x2947E88", VA = "0x2947E88")]
		private void Start()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x2947EB4", Offset = "0x2947EB4", VA = "0x2947EB4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class CameraRefocus
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Parent;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Refocus;

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x2948068", Offset = "0x2948068", VA = "0x2948068")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x29480C8", Offset = "0x29480C8", VA = "0x29480C8")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x29480D0", Offset = "0x29480D0", VA = "0x29480D0")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x29480D8", Offset = "0x29480D8", VA = "0x29480D8")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2948260", Offset = "0x2948260", VA = "0x2948260")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class CurveControlledBob
	{
		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x29482E8", Offset = "0x29482E8", VA = "0x29482E8")]
		public CurveControlledBob()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x29484C4", Offset = "0x29484C4", VA = "0x29484C4")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x2948588", Offset = "0x2948588", VA = "0x2948588")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000299")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7780C", Offset = "0xC7780C")]
		private sealed class <DragObject>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <oldDrag>__0;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal float <oldAngularDrag>__0;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Camera <mainCamera>__0;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Ray <ray>__1;

			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float distance;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal DragRigidbody $this;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal object $current;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal bool $disposing;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal int $PC;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001450")]
				[Address(RVA = "0x29490A4", Offset = "0x29490A4", VA = "0x29490A4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001451")]
				[Address(RVA = "0x29490AC", Offset = "0x29490AC", VA = "0x29490AC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0x2948CB0", Offset = "0x2948CB0", VA = "0x2948CB0")]
			[DebuggerHidden]
			public <DragObject>c__Iterator0()
			{
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0x2948CB8", Offset = "0x2948CB8", VA = "0x2948CB8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0x29490B4", Offset = "0x29490B4", VA = "0x29490B4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0x29490C8", Offset = "0x29490C8", VA = "0x29490C8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FAC")]
		private const float k_Spring = 50f;

		[Token(Token = "0x4000FAD")]
		private const float k_Damper = 5f;

		[Token(Token = "0x4000FAE")]
		private const float k_Drag = 10f;

		[Token(Token = "0x4000FAF")]
		private const float k_AngularDrag = 5f;

		[Token(Token = "0x4000FB0")]
		private const float k_Distance = 0.2f;

		[Token(Token = "0x4000FB1")]
		private const bool k_AttachToCenterOfMass = false;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringJoint m_SpringJoint;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x29486C4", Offset = "0x29486C4", VA = "0x29486C4")]
		public DragRigidbody()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x29486CC", Offset = "0x29486CC", VA = "0x29486CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2948C24", Offset = "0x2948C24", VA = "0x2948C24")]
		[DebuggerHidden]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x2948B68", Offset = "0x2948B68", VA = "0x2948B68")]
		private Camera FindCamera()
		{
			return null;
		}
	}
	[Token(Token = "0x200029A")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light sunLight;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minHeight;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minShadowDistance;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minShadowBias;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxHeight;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxShadowDistance;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxShadowBias;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float adaptTime;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_SmoothHeight;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ChangeSpeed;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_OriginalStrength;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x294912C", Offset = "0x294912C", VA = "0x294912C")]
		public DynamicShadowSettings()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x2949160", Offset = "0x2949160", VA = "0x2949160")]
		private void Start()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x2949198", Offset = "0x2949198", VA = "0x2949198")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x294946C", Offset = "0x294946C", VA = "0x294946C")]
		public FollowTarget()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x29494CC", Offset = "0x29494CC", VA = "0x29494CC")]
		private void LateUpdate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class FOVKick
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC7789C", Offset = "0xC7789C")]
		private sealed class <FOVKickUp>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal FOVKick $this;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001456")]
				[Address(RVA = "0x2949CFC", Offset = "0x2949CFC", VA = "0x2949CFC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001457")]
				[Address(RVA = "0x2949D04", Offset = "0x2949D04", VA = "0x2949D04", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0x294978C", Offset = "0x294978C", VA = "0x294978C")]
			[DebuggerHidden]
			public <FOVKickUp>c__Iterator0()
			{
			}

			[Token(Token = "0x6001455")]
			[Address(RVA = "0x2949AC4", Offset = "0x2949AC4", VA = "0x2949AC4", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001458")]
			[Address(RVA = "0x2949D0C", Offset = "0x2949D0C", VA = "0x2949D0C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001459")]
			[Address(RVA = "0x2949D20", Offset = "0x2949D20", VA = "0x2949D20", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC778FC", Offset = "0xC778FC")]
		private sealed class <FOVKickDown>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal FOVKick $this;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600145C")]
				[Address(RVA = "0x2949A3C", Offset = "0x2949A3C", VA = "0x2949A3C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600145D")]
				[Address(RVA = "0x2949A44", Offset = "0x2949A44", VA = "0x2949A44", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145A")]
			[Address(RVA = "0x2949800", Offset = "0x2949800", VA = "0x2949800")]
			[DebuggerHidden]
			public <FOVKickDown>c__Iterator1()
			{
			}

			[Token(Token = "0x600145B")]
			[Address(RVA = "0x2949808", Offset = "0x2949808", VA = "0x2949808", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0x2949A4C", Offset = "0x2949A4C", VA = "0x2949A4C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x2949A60", Offset = "0x2949A60", VA = "0x2949A60", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x29495D4", Offset = "0x29495D4", VA = "0x29495D4")]
		public FOVKick()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x29495F0", Offset = "0x29495F0", VA = "0x29495F0")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x2949630", Offset = "0x2949630", VA = "0x2949630")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2949718", Offset = "0x2949718", VA = "0x2949718")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x2949720", Offset = "0x2949720", VA = "0x2949720")]
		[DebuggerHidden]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2949794", Offset = "0x2949794", VA = "0x2949794")]
		[DebuggerHidden]
		public IEnumerator FOVKickDown()
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xC7795C", Offset = "0xC7795C")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000FC6")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4000FCA")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIText m_GuiText;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2949D84", Offset = "0x2949D84", VA = "0x2949D84")]
		public FPSCounter()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x2949D8C", Offset = "0x2949D8C", VA = "0x2949D8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x2949DFC", Offset = "0x2949DFC", VA = "0x2949DFC")]
		private void Update()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC779D0", Offset = "0xC779D0")]
		private sealed class <DoBobCycle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <t>__0;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal LerpControlledBob $this;

			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object $current;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001462")]
				[Address(RVA = "0x294A1F0", Offset = "0x294A1F0", VA = "0x294A1F0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001463")]
				[Address(RVA = "0x294A1F8", Offset = "0x294A1F8", VA = "0x294A1F8", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x2949F5C", Offset = "0x2949F5C", VA = "0x2949F5C")]
			[DebuggerHidden]
			public <DoBobCycle>c__Iterator0()
			{
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0x2949F64", Offset = "0x2949F64", VA = "0x2949F64", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x294A200", Offset = "0x294A200", VA = "0x294A200", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x294A214", Offset = "0x294A214", VA = "0x294A214", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x2949EE0", Offset = "0x2949EE0", VA = "0x2949EE0")]
		public LerpControlledBob()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x2949EE8", Offset = "0x2949EE8", VA = "0x2949EE8")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x2949EF0", Offset = "0x2949EF0", VA = "0x2949EF0")]
		[DebuggerHidden]
		public IEnumerator DoBobCycle()
		{
			return null;
		}
	}
	[Token(Token = "0x200029F")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77A40", Offset = "0xC77A40")]
		private sealed class <ResetCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float delay;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Transform[] $locvar0;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int $locvar1;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal ObjectResetter $this;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal bool $disposing;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal int $PC;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001468")]
				[Address(RVA = "0x294A7AC", Offset = "0x294A7AC", VA = "0x294A7AC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001469")]
				[Address(RVA = "0x294A7B4", Offset = "0x294A7B4", VA = "0x294A7B4", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x294A438", Offset = "0x294A438", VA = "0x294A438")]
			[DebuggerHidden]
			public <ResetCoroutine>c__Iterator0()
			{
			}

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x294A440", Offset = "0x294A440", VA = "0x294A440", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x294A7BC", Offset = "0x294A7BC", VA = "0x294A7BC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x294A7D0", Offset = "0x294A7D0", VA = "0x294A7D0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 originalPosition;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion originalRotation;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Transform> originalStructure;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x294A278", Offset = "0x294A278", VA = "0x294A278")]
		public ObjectResetter()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x294A280", Offset = "0x294A280", VA = "0x294A280")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x294A380", Offset = "0x294A380", VA = "0x294A380")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x294A3AC", Offset = "0x294A3AC", VA = "0x294A3AC")]
		[DebuggerHidden]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A0")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77AB0", Offset = "0xC77AB0")]
		private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal ParticleSystem[] <systems>__0;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ParticleSystem[] $locvar0;

			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int $locvar1;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float <stopTime>__0;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal ParticleSystem[] $locvar2;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int $locvar3;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal ParticleSystemDestroyer $this;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal object $current;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal bool $disposing;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal int $PC;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600146E")]
				[Address(RVA = "0x294ACB4", Offset = "0x294ACB4", VA = "0x294ACB4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146F")]
				[Address(RVA = "0x294ACBC", Offset = "0x294ACBC", VA = "0x294ACBC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0x294A8B4", Offset = "0x294A8B4", VA = "0x294A8B4")]
			[DebuggerHidden]
			public <Start>c__Iterator0()
			{
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0x294A8C8", Offset = "0x294A8C8", VA = "0x294A8C8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001470")]
			[Address(RVA = "0x294ACC4", Offset = "0x294ACC4", VA = "0x294ACC4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0x294ACD8", Offset = "0x294ACD8", VA = "0x294ACD8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDuration;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDuration;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_MaxLifetime;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_EarlyStop;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x294A834", Offset = "0x294A834", VA = "0x294A834")]
		public ParticleSystemDestroyer()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x294A848", Offset = "0x294A848", VA = "0x294A848")]
		[DebuggerHidden]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x294A8BC", Offset = "0x294A8BC", VA = "0x294A8BC")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x4000FDC")]
			Standalone,
			[Token(Token = "0x4000FDD")]
			Mobile
		}

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BuildTargetGroup m_BuildTargetGroup;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_Content;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour[] m_MonoBehaviours;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_ChildrenOfThisObject;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x294AD3C", Offset = "0x294AD3C", VA = "0x294AD3C")]
		public PlatformSpecificContent()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x294ADCC", Offset = "0x294ADCC", VA = "0x294ADCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x294ADD0", Offset = "0x294ADD0", VA = "0x294ADD0")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x294ADEC", Offset = "0x294ADEC", VA = "0x294ADEC")]
		private void EnableContent(bool enabled)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class SimpleActivatorMenu : MonoBehaviour
	{
		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GUIText camSwitchButton;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] objects;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_CurrentActiveObject;

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x294B1EC", Offset = "0x294B1EC", VA = "0x294B1EC")]
		public SimpleActivatorMenu()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x294B1F4", Offset = "0x294B1F4", VA = "0x294B1F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x294B260", Offset = "0x294B260", VA = "0x294B260")]
		public void NextCamera()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x294B390", Offset = "0x294B390", VA = "0x294B390")]
		public SmoothFollow()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x294B3A4", Offset = "0x294B3A4", VA = "0x294B3A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x294B3A8", Offset = "0x294B3A8", VA = "0x294B3A8")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x20002A6")]
		public enum Action
		{
			[Token(Token = "0x4000FE8")]
			Activate,
			[Token(Token = "0x4000FE9")]
			Deactivate,
			[Token(Token = "0x4000FEA")]
			Destroy,
			[Token(Token = "0x4000FEB")]
			ReloadLevel,
			[Token(Token = "0x4000FEC")]
			Call
		}

		[Serializable]
		[Token(Token = "0x20002A7")]
		public class Entry
		{
			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject target;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float delay;

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x294BF50", Offset = "0x294BF50", VA = "0x294BF50")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002A8")]
		public class Entries
		{
			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry[] entries;

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x294B804", Offset = "0x294B804", VA = "0x294B804")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77BD0", Offset = "0xC77BD0")]
		private sealed class <Activate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Entry entry;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002D2")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001474")]
				[Address(RVA = "0x294BBB4", Offset = "0x294BBB4", VA = "0x294BBB4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001475")]
				[Address(RVA = "0x294BBBC", Offset = "0x294BBBC", VA = "0x294BBBC", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0x294BAA0", Offset = "0x294BAA0", VA = "0x294BAA0")]
			[DebuggerHidden]
			public <Activate>c__Iterator0()
			{
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0x294BAB8", Offset = "0x294BAB8", VA = "0x294BAB8", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0x294BBC4", Offset = "0x294BBC4", VA = "0x294BBC4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0x294BBD8", Offset = "0x294BBD8", VA = "0x294BBD8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77C30", Offset = "0xC77C30")]
		private sealed class <Deactivate>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Entry entry;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600147A")]
				[Address(RVA = "0x294BD38", Offset = "0x294BD38", VA = "0x294BD38", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147B")]
				[Address(RVA = "0x294BD40", Offset = "0x294BD40", VA = "0x294BD40", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x294BAA8", Offset = "0x294BAA8", VA = "0x294BAA8")]
			[DebuggerHidden]
			public <Deactivate>c__Iterator1()
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x294BC3C", Offset = "0x294BC3C", VA = "0x294BC3C", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x294BD48", Offset = "0x294BD48", VA = "0x294BD48", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0x294BD5C", Offset = "0x294BD5C", VA = "0x294BD5C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77C90", Offset = "0xC77C90")]
		private sealed class <ReloadLevel>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Entry entry;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001480")]
				[Address(RVA = "0x294BEC8", Offset = "0x294BEC8", VA = "0x294BEC8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001481")]
				[Address(RVA = "0x294BED0", Offset = "0x294BED0", VA = "0x294BED0", Slot = "5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0x294BAB0", Offset = "0x294BAB0", VA = "0x294BAB0")]
			[DebuggerHidden]
			public <ReloadLevel>c__Iterator2()
			{
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x294BDC0", Offset = "0x294BDC0", VA = "0x294BDC0", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001482")]
			[Address(RVA = "0x294BED8", Offset = "0x294BED8", VA = "0x294BED8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001483")]
			[Address(RVA = "0x294BEEC", Offset = "0x294BEEC", VA = "0x294BEEC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Entries entries;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x294B79C", Offset = "0x294B79C", VA = "0x294B79C")]
		public TimedObjectActivator()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x294B80C", Offset = "0x294B80C", VA = "0x294B80C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x294B95C", Offset = "0x294B95C", VA = "0x294B95C")]
		[DebuggerHidden]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x294B9C8", Offset = "0x294B9C8", VA = "0x294B9C8")]
		[DebuggerHidden]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x294BA34", Offset = "0x294BA34", VA = "0x294BA34")]
		[DebuggerHidden]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A9")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_TimeOut;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_DetachChildren;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x294BF58", Offset = "0x294BF58", VA = "0x294BF58")]
		public TimedObjectDestructor()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x294BF68", Offset = "0x294BF68", VA = "0x294BF68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x294BFC0", Offset = "0x294BFC0", VA = "0x294BFC0")]
		private void DestroyNow()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AB")]
		public class WaypointList
		{
			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] items;

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x294C0E0", Offset = "0x294C0E0", VA = "0x294C0E0")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		public struct RoutePoint
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x294D2A0", Offset = "0x294D2A0", VA = "0x294D2A0")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointList waypointList;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numPoints;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] points;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] distances;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77D20", Offset = "0xC77D20")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC77D20", Offset = "0xC77D20")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int p0n;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int p1n;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int p2n;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int p3n;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float i;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P0;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P1;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 P2;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 P3;

		[Token(Token = "0x1700029D")]
		public float Length
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x294C14C", Offset = "0x294C14C", VA = "0x294C14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77D5C", Offset = "0xC77D5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x294C154", Offset = "0x294C154", VA = "0x294C154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77D6C", Offset = "0xC77D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x294C15C", Offset = "0x294C15C", VA = "0x294C15C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x294C06C", Offset = "0x294C06C", VA = "0x294C06C")]
		public WaypointCircuit()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x294C184", Offset = "0x294C184", VA = "0x294C184")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x294C610", Offset = "0x294C610", VA = "0x294C610")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x294C72C", Offset = "0x294C72C", VA = "0x294C72C")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x294CB78", Offset = "0x294CB78", VA = "0x294CB78")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x294C1EC", Offset = "0x294C1EC", VA = "0x294C1EC")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x294CF34", Offset = "0x294CF34", VA = "0x294CF34")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x294D298", Offset = "0x294D298", VA = "0x294D298")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x294CF3C", Offset = "0x294CF3C", VA = "0x294CF3C")]
		private void DrawGizmos(bool selected)
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4001017")]
			SmoothAlongRoute,
			[Token(Token = "0x4001018")]
			PointToPoint
		}

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77DEC", Offset = "0xC77DEC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC77DEC", Offset = "0xC77DEC")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77E28", Offset = "0xC77E28")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC77E28", Offset = "0xC77E28")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77E64", Offset = "0xC77E64")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xC77E64", Offset = "0xC77E64")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform target;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float progressDistance;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int progressNum;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float speed;

		[Token(Token = "0x1700029F")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x294D2CC", Offset = "0x294D2CC", VA = "0x294D2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77EA0", Offset = "0xC77EA0")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x294D2E0", Offset = "0x294D2E0", VA = "0x294D2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77EB0", Offset = "0xC77EB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x294D2F4", Offset = "0x294D2F4", VA = "0x294D2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77EC0", Offset = "0xC77EC0")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x294D308", Offset = "0x294D308", VA = "0x294D308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77ED0", Offset = "0xC77ED0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x294D31C", Offset = "0x294D31C", VA = "0x294D31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77EE0", Offset = "0xC77EE0")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x294D330", Offset = "0x294D330", VA = "0x294D330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC77EF0", Offset = "0xC77EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x294D2B0", Offset = "0x294D2B0", VA = "0x294D2B0")]
		public WaypointProgressTracker()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x294D344", Offset = "0x294D344", VA = "0x294D344")]
		private void Start()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x294D434", Offset = "0x294D434", VA = "0x294D434")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x294D5AC", Offset = "0x294D5AC", VA = "0x294D5AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x294DC68", Offset = "0x294DC68", VA = "0x294DC68")]
		private void OnDrawGizmos()
		{
		}
	}
}
