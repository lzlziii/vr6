using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using BezierSolution;
using DG.Tweening;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using GameAnalyticsSDK;
using GameAnalyticsSDK.Events;
using GameAnalyticsSDK.Setup;
using GameQuest;
using GoogleSheetsDataStructures;
using GoogleSheetsForUnity;
using Humans;
using Il2CppDummyDll;
using MIConvexHull;
using NWH;
using Oculus.Platform;
using Oculus.Platform.Models;
using SRDebugger;
using Sound;
using Stacked;
using TMPro;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using Water;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000003")]
public class BlinderReference : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer blinderMesh;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9FA130", Offset = "0x9FA130", VA = "0x9FA130")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x9FA1B0", Offset = "0x9FA1B0", VA = "0x9FA1B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x9FA230", Offset = "0x9FA230", VA = "0x9FA230")]
	private void BlinderEvent(bool blinderOn)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x9FA250", Offset = "0x9FA250", VA = "0x9FA250")]
	public BlinderReference()
	{
	}
}
[Token(Token = "0x2000004")]
public class Vertex : IVertex
{
	[Token(Token = "0x17000003")]
	public double[] Position
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x9FA258", Offset = "0x9FA258", VA = "0x9FA258", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600000C")]
		[Address(RVA = "0x9FA260", Offset = "0x9FA260", VA = "0x9FA260")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x9FA268", Offset = "0x9FA268", VA = "0x9FA268")]
	public Vertex(double x, double y, double z)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x9FA318", Offset = "0x9FA318", VA = "0x9FA318")]
	public Vertex(Vector3 ver)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x9FA3D4", Offset = "0x9FA3D4", VA = "0x9FA3D4")]
	public Vector3 ToVec()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000005")]
[ExecuteInEditMode]
public class CenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 centerOfMass;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 centerOfMassOffset;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetCOM;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rb;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool showCOM;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool deactivateOnGrab;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool deactivateInsideWater;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool invertDeactivateInsideWater;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isGrabbed;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool manualRB;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabbable grabbable;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x9FA41C", Offset = "0x9FA41C", VA = "0x9FA41C")]
	[ContextMenu("Reset COM")]
	private void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x9FA438", Offset = "0x9FA438", VA = "0x9FA438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x9FA6A4", Offset = "0x9FA6A4", VA = "0x9FA6A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x9FA7E8", Offset = "0x9FA7E8", VA = "0x9FA7E8")]
	public void SetNewCOM(Vector3 _com)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x9FA868", Offset = "0x9FA868", VA = "0x9FA868")]
	public void OnWaterStatusChange(GameObject _go, bool _which)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x9FA960", Offset = "0x9FA960", VA = "0x9FA960")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x9FA5E4", Offset = "0x9FA5E4", VA = "0x9FA5E4")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x9FAAA4", Offset = "0x9FAAA4", VA = "0x9FAAA4")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x9FAB80", Offset = "0x9FAB80", VA = "0x9FAB80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x9FACA8", Offset = "0x9FACA8", VA = "0x9FACA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x9FAD84", Offset = "0x9FAD84", VA = "0x9FAD84")]
	public CenterOfMass()
	{
	}
}
[Token(Token = "0x2000006")]
public class BuoyTri
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 center;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 normal;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToSurface;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float area;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 velocity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float velocityMagnitude;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 u;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 v;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 crossUV;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float crossMagnitude;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 velocityNormalized;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float dotNormalVelocityNormal;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float velocityMagTimesDot;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 dynamicForce;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 buoyantForce;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 resultantForce;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 p1;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 p2;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 p3;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool atSurface;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 gravityDir;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float resistance;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float upDot;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float fa;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x9FADEC", Offset = "0x9FADEC", VA = "0x9FADEC")]
	public static float Dot(Vector3 lhs, Vector3 rhs)
	{
		return default(float);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x9FAE04", Offset = "0x9FAE04", VA = "0x9FAE04")]
	public void Set(Vector3 p1, Vector3 p2, Vector3 p3, FloatingObject fo, int atSurface)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x9FB1B0", Offset = "0x9FB1B0", VA = "0x9FB1B0")]
	public BuoyTri()
	{
	}
}
[Token(Token = "0x2000007")]
public class MeshUtils
{
	[Token(Token = "0x600001E")]
	[Address(RVA = "0x9FB1B8", Offset = "0x9FB1B8", VA = "0x9FB1B8")]
	public static Mesh RasterizeMesh(Mesh oMesh, int resolution)
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x9FBC84", Offset = "0x9FBC84", VA = "0x9FBC84")]
	public static Mesh GenerateMesh(List<Vert> verts, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x9FB5A4", Offset = "0x9FB5A4", VA = "0x9FB5A4")]
	public static List<Vert> GetVerts(Mesh oMesh)
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x9FB7CC", Offset = "0x9FB7CC", VA = "0x9FB7CC")]
	public static List<Tri> GetTris(Mesh oMesh, List<Vert> verts)
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x9FC44C", Offset = "0x9FC44C", VA = "0x9FC44C")]
	public static List<Vert> CollapseVert(Vert replaceWithVert, Vert replaceVert, List<Tri> tris, List<Vert> verts)
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9FCA4C", Offset = "0x9FCA4C", VA = "0x9FCA4C")]
	public static List<List<int>> TrianglesContainingVert(Vert u, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x9FC740", Offset = "0x9FC740", VA = "0x9FC740")]
	public static List<int> TrianglesContainingVerts(Vert u, Vert v, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x9FBA10", Offset = "0x9FBA10", VA = "0x9FBA10")]
	public static void RemoveDuplicateVerts(List<Tri> tris, List<Vert> verts)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x9FCD40", Offset = "0x9FCD40", VA = "0x9FCD40")]
	public MeshUtils()
	{
	}
}
[Token(Token = "0x2000009")]
public class Vert
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 pos;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 normal;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool deleted;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cost;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int cheapestNeighbor;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vert> neighbors;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x9FC178", Offset = "0x9FC178", VA = "0x9FC178")]
	public Vert(int id, Vector3 pos, Vector3 normal)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x9FCDA0", Offset = "0x9FCDA0", VA = "0x9FCDA0")]
	public static List<Vert> FindNeighbors(Vert v, List<Vert> verts, List<Tri> tris)
	{
		return null;
	}
}
[Token(Token = "0x200000B")]
public class Tri
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Vert> vs;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 normal;

	[Token(Token = "0x17000004")]
	public List<Vert> verts
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x9FD094", Offset = "0x9FD094", VA = "0x9FD094")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x9FD09C", Offset = "0x9FD09C", VA = "0x9FD09C")]
		set
		{
		}
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x9FD254", Offset = "0x9FD254", VA = "0x9FD254")]
	public Tri()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x9FD25C", Offset = "0x9FD25C", VA = "0x9FD25C")]
	public Tri(List<Vert> verts)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x9FC250", Offset = "0x9FC250", VA = "0x9FC250")]
	public Tri(Vert v0, Vert v1, Vert v2)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x9FD2B0", Offset = "0x9FD2B0", VA = "0x9FD2B0")]
	public bool HasVertex(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x9FD0C4", Offset = "0x9FD0C4", VA = "0x9FD0C4")]
	public Vector3 ComputeNormal()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200000C")]
public class WaterLine
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 p0;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 p1;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuoyTri tri;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x9FD36C", Offset = "0x9FD36C", VA = "0x9FD36C")]
	public WaterLine(Vector3 p0, Vector3 p1, BuoyTri tri)
	{
	}
}
[Token(Token = "0x200000D")]
[AddComponentMenu("Rendering/SetRenderQueue")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int queue;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x9FD3D8", Offset = "0x9FD3D8", VA = "0x9FD3D8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x9FD480", Offset = "0x9FD480", VA = "0x9FD480")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x200000E")]
public class WaterParticle
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float initTime;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeToLive;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform t;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer mr;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mat;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 initialVelocity;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 initialScale;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color initialColor;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float initialAlpha;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x9FD488", Offset = "0x9FD488", VA = "0x9FD488")]
	public WaterParticle()
	{
	}
}
[Token(Token = "0x200000F")]
public class FloatingObject : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	public enum FLOATTYPE
	{
		[Token(Token = "0x400009A")]
		regularFloat,
		[Token(Token = "0x400009B")]
		barelyFloat,
		[Token(Token = "0x400009C")]
		slowSink,
		[Token(Token = "0x400009D")]
		quickSink,
		[Token(Token = "0x400009E")]
		prettyFloaty,
		[Token(Token = "0x400009F")]
		superFloaty,
		[Token(Token = "0x40000A0")]
		superSlowSink,
		[Token(Token = "0x40000A1")]
		mediumSink,
		[Token(Token = "0x40000A2")]
		mediumFloat,
		[Token(Token = "0x40000A3")]
		veryFloaty
	}

	[Token(Token = "0x2000011")]
	public delegate float GetWaterHeightAtPoint(float x, float z);

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public FLOATTYPE floatType;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<FLOATTYPE, float> floatTypeFactors;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float secondsToFloat;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float timeToFullSink;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Rigidbody rb;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform t;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh originalMesh;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh dummyMesh;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int[] dummyMeshTris;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3[] dummyMeshVerts;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int dummyMeshTriCount;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int dummyMeshVertCount;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public int skipStep;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BuoyTri[] underwaterTris;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int underwaterTriCount;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool isTouchingWater;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public float dynamicForceFactor;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	public float fluidDensity;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GetWaterHeightAtPoint WaterHeightFunction;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject water;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public float upFactor;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	public bool manualUpfactor;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool simulate;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sleepPositionTreshold;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sleepAngleTreshold;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool sleep;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int sleepMax;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool wakeUpCall;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 rbSleepPosition;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 rbSleepUp;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 meshSize;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float meshVolume;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float materialDensity;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float materialMass;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	public bool sleepEnabled;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3[] objVerticesGlobal;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] distancesToSurface;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VertexData vd0;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private VertexData vd1;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private VertexData vd2;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 H;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 M;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 L;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 I_M;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 I_L;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 J_M;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 J_H;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float h_H;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float h_M;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float h_L;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int M_index;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private VertexData[] sortedData;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float waterY;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 globalPos;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool disable;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int totalRBColliders;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float floatTimer;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool forceSink;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float originalUpfactor;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private FloatRigidbody floatRigidbody;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int simMin;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public bool timerSinking;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float surfaceOffset;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool surfaceOffsetSet;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	public bool waterHeightOptimize;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int sleepStepsCheck;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<GameObject> wgos;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaterInterface generalWaterInterface;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FloatingObject myFloatRef;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float fSink;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float distanceDiff;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float angleDiff;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float thisVolume;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float volumeFactor;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int cnt;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int reg;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool lastTouchingWater;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float distanceToWater;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int inWaterBeforeSkip;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int cntStartStore;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int waterChecks;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool debugThis;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Transform manualWaterSurface;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool useManualSurface;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Vector3 waterforce;

	[Token(Token = "0x17000005")]
	public Rigidbody TargetRigidbody
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x9FD490", Offset = "0x9FD490", VA = "0x9FD490")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x9FD498", Offset = "0x9FD498", VA = "0x9FD498")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Transform TargetTransform
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x9FD4A0", Offset = "0x9FD4A0", VA = "0x9FD4A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x9FD4A8", Offset = "0x9FD4A8", VA = "0x9FD4A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Mesh OriginalMesh
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x9FD4B0", Offset = "0x9FD4B0", VA = "0x9FD4B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x9FD4B8", Offset = "0x9FD4B8", VA = "0x9FD4B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public Mesh DummyMesh
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x9FD4C0", Offset = "0x9FD4C0", VA = "0x9FD4C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x9FD4C8", Offset = "0x9FD4C8", VA = "0x9FD4C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float FluidDensity
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x9FD4D0", Offset = "0x9FD4D0", VA = "0x9FD4D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x9FD4D8", Offset = "0x9FD4D8", VA = "0x9FD4D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool IsTouchingWater
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x9FD4E0", Offset = "0x9FD4E0", VA = "0x9FD4E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x9FD4E8", Offset = "0x9FD4E8", VA = "0x9FD4E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float DynamicForceFactor
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x9FD4F4", Offset = "0x9FD4F4", VA = "0x9FD4F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x9FD4FC", Offset = "0x9FD4FC", VA = "0x9FD4FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float MaterialDensity
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x9FD504", Offset = "0x9FD504", VA = "0x9FD504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x9FD50C", Offset = "0x9FD50C", VA = "0x9FD50C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float MaterialMass
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x9FD514", Offset = "0x9FD514", VA = "0x9FD514")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x9FD51C", Offset = "0x9FD51C", VA = "0x9FD51C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float MeshVolume
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x9FD524", Offset = "0x9FD524", VA = "0x9FD524")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x9FD52C", Offset = "0x9FD52C", VA = "0x9FD52C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public bool ReuseForces
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x9FD534", Offset = "0x9FD534", VA = "0x9FD534")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x9FD53C", Offset = "0x9FD53C", VA = "0x9FD53C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float ReusePositionTreshold
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x9FD548", Offset = "0x9FD548", VA = "0x9FD548")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x9FD550", Offset = "0x9FD550", VA = "0x9FD550")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ReuseAngleTreshold
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x9FD558", Offset = "0x9FD558", VA = "0x9FD558")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x9FD560", Offset = "0x9FD560", VA = "0x9FD560")]
		set
		{
		}
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x9FD568", Offset = "0x9FD568", VA = "0x9FD568")]
	private void MeshCheck()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x9FD668", Offset = "0x9FD668", VA = "0x9FD668")]
	public void SetStartSkipCount(int _which)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9FD674", Offset = "0x9FD674", VA = "0x9FD674")]
	public static void WakeUp()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x9FD6D0", Offset = "0x9FD6D0", VA = "0x9FD6D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x9FD728", Offset = "0x9FD728", VA = "0x9FD728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x9FE21C", Offset = "0x9FE21C", VA = "0x9FE21C")]
	public void FloatRBWaterChange(bool _which)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x9FE23C", Offset = "0x9FE23C", VA = "0x9FE23C")]
	public void SetManualWaterSurface(bool isTrue, Transform _manualSurface)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x9FE270", Offset = "0x9FE270", VA = "0x9FE270")]
	private float WaterHeightOverride(float _x, float _y)
	{
		return default(float);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x9FE378", Offset = "0x9FE378", VA = "0x9FE378")]
	public void AdjustUpfactor(int _totalRBColliders, float _totalVolume)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x9FE418", Offset = "0x9FE418", VA = "0x9FE418")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x9FB178", Offset = "0x9FB178", VA = "0x9FB178")]
	public float GetDistanceToSurface(Vector3 p, GetWaterHeightAtPoint waterHeight)
	{
		return default(float);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x9FF404", Offset = "0x9FF404", VA = "0x9FF404")]
	public bool PointInWater(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x9FEDA0", Offset = "0x9FEDA0", VA = "0x9FEDA0")]
	private BuoyTri[] GenerateSplitMesh()
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x9FF420", Offset = "0x9FF420", VA = "0x9FF420")]
	private void TwoUnderWater(VertexData[] vertexData)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x9FF684", Offset = "0x9FF684", VA = "0x9FF684")]
	private void OneUnderWater(VertexData[] vertexData)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x9FF858", Offset = "0x9FF858", VA = "0x9FF858")]
	public float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(float);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x9FE0A8", Offset = "0x9FE0A8", VA = "0x9FE0A8")]
	public float VolumeOfMesh(Mesh mesh)
	{
		return default(float);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x9FF8B4", Offset = "0x9FF8B4", VA = "0x9FF8B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x9FF93C", Offset = "0x9FF93C", VA = "0x9FF93C")]
	public FloatingObject()
	{
	}
}
[Token(Token = "0x2000012")]
[ExecuteInEditMode]
[RequireComponent(typeof(Rigidbody))]
public class MassFromChildren : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FloatingObject[] fos;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x9FFC78", Offset = "0x9FFC78", VA = "0x9FFC78")]
	public void Calculate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x9FFE00", Offset = "0x9FFE00", VA = "0x9FFE00")]
	public MassFromChildren()
	{
	}
}
[Token(Token = "0x2000013")]
public class WaterInterface : MonoBehaviour
{
	[Token(Token = "0x2000014")]
	public enum WATER
	{
		[Token(Token = "0x40000B9")]
		regular,
		[Token(Token = "0x40000BA")]
		darkWaves,
		[Token(Token = "0x40000BB")]
		night,
		[Token(Token = "0x40000BC")]
		black,
		[Token(Token = "0x40000BD")]
		stormy,
		[Token(Token = "0x40000BE")]
		stormySlower,
		[Token(Token = "0x40000BF")]
		nightLessAmplitude,
		[Token(Token = "0x40000C0")]
		none,
		[Token(Token = "0x40000C1")]
		stormyLessAmplitude,
		[Token(Token = "0x40000C2")]
		nightBlue,
		[Token(Token = "0x40000C3")]
		sunnyFlat,
		[Token(Token = "0x40000C4")]
		stormyViolet
	}

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _Height;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _Length;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _Stretch;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _Speed;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _Scale;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector4 _Direction;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform waterTrigger;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float highestWave;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currentY;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 waterPos;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 origWaterPos;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] LPWSets;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WATER currentWater;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WaterPreset preset;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int waterInt;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float offset;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaterInterface _instance;

	[Token(Token = "0x17000012")]
	public static WaterInterface Instance
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x9FDE6C", Offset = "0x9FDE6C", VA = "0x9FDE6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x9FFE08", Offset = "0x9FFE08", VA = "0x9FFE08")]
	public void SetWater(int _whichWater)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x9FFFFC", Offset = "0x9FFFFC", VA = "0x9FFFFC")]
	public void SetWater(WATER _whichWater)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA00000", Offset = "0xA00000", VA = "0xA00000")]
	public void ToggleWaterRendering()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA00054", Offset = "0xA00054", VA = "0xA00054")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x9FFFAC", Offset = "0x9FFFAC", VA = "0x9FFFAC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x9FE344", Offset = "0x9FE344", VA = "0x9FE344")]
	public float GetWaterHeightAtLocationLPW(float x, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA000D0", Offset = "0xA000D0", VA = "0xA000D0")]
	public void ResetTriggerToWater()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA000D8", Offset = "0xA000D8", VA = "0xA000D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA00120", Offset = "0xA00120", VA = "0xA00120")]
	public WaterInterface()
	{
	}
}
[Token(Token = "0x2000015")]
public class FadeController : MonoBehaviour
{
	[Token(Token = "0x2000016")]
	private static class Uniform
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Fade;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int Color;
	}

	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <AnimateFadeTo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeController <>4__this;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color to;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onFinish;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startFade>5__2;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color <startColor>5__3;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeDelta>5__4;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <lastTime>5__5;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <t>5__6;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0xA0096C", Offset = "0xA0096C", VA = "0xA0096C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0xA009B4", Offset = "0xA009B4", VA = "0xA009B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xA00438", Offset = "0xA00438", VA = "0xA00438")]
		[DebuggerHidden]
		public <AnimateFadeTo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xA00740", Offset = "0xA00740", VA = "0xA00740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xA00744", Offset = "0xA00744", VA = "0xA00744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xA00974", Offset = "0xA00974", VA = "0xA00974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <AnimateFade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeController <>4__this;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float from;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float to;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action onFinish;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0xA00AC0", Offset = "0xA00AC0", VA = "0xA00AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0xA00B08", Offset = "0xA00B08", VA = "0xA00B08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0xA00674", Offset = "0xA00674", VA = "0xA00674")]
		[DebuggerHidden]
		public <AnimateFade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0xA009BC", Offset = "0xA009BC", VA = "0xA009BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0xA009C0", Offset = "0xA009C0", VA = "0xA009C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0xA00AC8", Offset = "0xA00AC8", VA = "0xA00AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color testColor;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine fadeAnimation;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA00128", Offset = "0xA00128", VA = "0xA00128")]
	[ContextMenu("SETFULLFADE")]
	private void SetFadeFull()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA001E4", Offset = "0xA001E4", VA = "0xA001E4")]
	[ContextMenu("FadeOut")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA002AC", Offset = "0xA002AC", VA = "0xA002AC")]
	[ContextMenu("FadTo")]
	private void FadeTo()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA0035C", Offset = "0xA0035C", VA = "0xA0035C")]
	public void StopFade()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA002C0", Offset = "0xA002C0", VA = "0xA002C0")]
	public void FadeTo(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA00370", Offset = "0xA00370", VA = "0xA00370")]
	[IteratorStateMachine(typeof(<AnimateFadeTo>d__8))]
	private IEnumerator AnimateFadeTo(Color to, float duration, Action onFinish)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA00460", Offset = "0xA00460", VA = "0xA00460")]
	public void FadeIn(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA00200", Offset = "0xA00200", VA = "0xA00200")]
	public void FadeOut(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA005C0", Offset = "0xA005C0", VA = "0xA005C0")]
	[IteratorStateMachine(typeof(<AnimateFade>d__11))]
	private IEnumerator AnimateFade(float from, float to, float duration, Action onFinish)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA0050C", Offset = "0xA0050C", VA = "0xA0050C")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA00130", Offset = "0xA00130", VA = "0xA00130")]
	public void SetFade(float fade)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA0069C", Offset = "0xA0069C", VA = "0xA0069C")]
	public FadeController()
	{
	}
}
[Token(Token = "0x2000019")]
public class GAFyberIntegration
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0xA00B10", Offset = "0xA00B10", VA = "0xA00B10")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xA00B14", Offset = "0xA00B14", VA = "0xA00B14")]
	public GAFyberIntegration()
	{
	}
}
[Token(Token = "0x200001A")]
public class GAIronSourceIntegration
{
	[Token(Token = "0x6000091")]
	[Address(RVA = "0xA00B1C", Offset = "0xA00B1C", VA = "0xA00B1C")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xA00B20", Offset = "0xA00B20", VA = "0xA00B20")]
	public GAIronSourceIntegration()
	{
	}
}
[Token(Token = "0x200001B")]
public class GAMaxIntegration
{
	[Token(Token = "0x6000093")]
	[Address(RVA = "0xA00B28", Offset = "0xA00B28", VA = "0xA00B28")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xA00B2C", Offset = "0xA00B2C", VA = "0xA00B2C")]
	public GAMaxIntegration()
	{
	}
}
[Token(Token = "0x200001C")]
public class GAMopubIntegration
{
	[Token(Token = "0x6000095")]
	[Address(RVA = "0xA00B34", Offset = "0xA00B34", VA = "0xA00B34")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xA00B38", Offset = "0xA00B38", VA = "0xA00B38")]
	public GAMopubIntegration()
	{
	}
}
[Token(Token = "0x200001D")]
public class GATopOnIntegration
{
	[Token(Token = "0x6000097")]
	[Address(RVA = "0xA00B40", Offset = "0xA00B40", VA = "0xA00B40")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xA00B44", Offset = "0xA00B44", VA = "0xA00B44")]
	public GATopOnIntegration()
	{
	}
}
[Token(Token = "0x200001E")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0xA00E18", Offset = "0xA00E18", VA = "0xA00E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0xA00E60", Offset = "0xA00E60", VA = "0xA00E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xA00C70", Offset = "0xA00C70", VA = "0xA00C70")]
		[DebuggerHidden]
		public <CheckIfAlive>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xA00CA0", Offset = "0xA00CA0", VA = "0xA00CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xA00CA4", Offset = "0xA00CA4", VA = "0xA00CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xA00E20", Offset = "0xA00E20", VA = "0xA00E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToDeactivate;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xA00B4C", Offset = "0xA00B4C", VA = "0xA00B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xA00BFC", Offset = "0xA00BFC", VA = "0xA00BFC")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__3))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xA00C98", Offset = "0xA00C98", VA = "0xA00C98")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000020")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xA00E68", Offset = "0xA00E68", VA = "0xA00E68")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xA00F00", Offset = "0xA00F00", VA = "0xA00F00")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x2000021")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xA00F08", Offset = "0xA00F08", VA = "0xA00F08")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA00F70", Offset = "0xA00F70", VA = "0xA00F70")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000022")]
public class CFX_InspectorHelp : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Locked;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Title;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HelpText;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MsgType;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA00F80", Offset = "0xA00F80", VA = "0xA00F80")]
	[ContextMenu("Unlock editing")]
	private void Unlock()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA00F88", Offset = "0xA00F88", VA = "0xA00F88")]
	public CFX_InspectorHelp()
	{
	}
}
[Token(Token = "0x2000023")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA00F90", Offset = "0xA00F90", VA = "0xA00F90")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA00FF0", Offset = "0xA00FF0", VA = "0xA00FF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA0106C", Offset = "0xA0106C", VA = "0xA0106C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xA011D0", Offset = "0xA011D0", VA = "0xA011D0")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000024")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B2")]
			[Address(RVA = "0xA01424", Offset = "0xA01424", VA = "0xA01424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B4")]
			[Address(RVA = "0xA0146C", Offset = "0xA0146C", VA = "0xA0146C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xA01340", Offset = "0xA01340", VA = "0xA01340")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xA01370", Offset = "0xA01370", VA = "0xA01370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xA01374", Offset = "0xA01374", VA = "0xA01374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xA0142C", Offset = "0xA0142C", VA = "0xA0142C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA011E0", Offset = "0xA011E0", VA = "0xA011E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA012CC", Offset = "0xA012CC", VA = "0xA012CC")]
	[IteratorStateMachine(typeof(<WaitFrame>d__2))]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA01368", Offset = "0xA01368", VA = "0xA01368")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x2000026")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x1700001B")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xA02404", Offset = "0xA02404", VA = "0xA02404")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA01474", Offset = "0xA01474", VA = "0xA01474")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA01BF4", Offset = "0xA01BF4", VA = "0xA01BF4")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA01FA0", Offset = "0xA01FA0", VA = "0xA01FA0")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA01C5C", Offset = "0xA01C5C", VA = "0xA01C5C")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA01FF8", Offset = "0xA01FF8", VA = "0xA01FF8")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA01A94", Offset = "0xA01A94", VA = "0xA01A94")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA02458", Offset = "0xA02458", VA = "0xA02458")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA02558", Offset = "0xA02558", VA = "0xA02558")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA025D8", Offset = "0xA025D8", VA = "0xA025D8")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000027")]
public class ButtonTrigger : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string ButtonSound;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent ButtonDown;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent ButtonUp;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ButtonPress;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool InitalActive;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool DoInitCallback;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xA02724", Offset = "0xA02724", VA = "0xA02724")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xA0278C", Offset = "0xA0278C", VA = "0xA0278C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA0286C", Offset = "0xA0286C", VA = "0xA0286C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA028E8", Offset = "0xA028E8", VA = "0xA028E8")]
	[ContextMenu("Toggle Button")]
	public void ToggleButton()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA02800", Offset = "0xA02800", VA = "0xA02800")]
	public void SetButton(bool _which)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA028F8", Offset = "0xA028F8", VA = "0xA028F8")]
	public ButtonTrigger()
	{
	}
}
[Token(Token = "0x2000028")]
public class CameraToPNG : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resWidth;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int resHeight;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool takeHiResShot;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA02900", Offset = "0xA02900", VA = "0xA02900")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA02B4C", Offset = "0xA02B4C", VA = "0xA02B4C")]
	public void TakeHiResShot()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA02B58", Offset = "0xA02B58", VA = "0xA02B58")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA02D68", Offset = "0xA02D68", VA = "0xA02D68")]
	public CameraToPNG()
	{
	}
}
[Token(Token = "0x2000029")]
public class LeverBehavior : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 OriginalPos;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA02D7C", Offset = "0xA02D7C", VA = "0xA02D7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA02E74", Offset = "0xA02E74", VA = "0xA02E74")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA02F20", Offset = "0xA02F20", VA = "0xA02F20")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA0302C", Offset = "0xA0302C", VA = "0xA0302C")]
	public LeverBehavior()
	{
	}
}
[Token(Token = "0x200002A")]
[CreateAssetMenu(fileName = "Data", menuName = "Road/RoadData", order = 1)]
public class RoadScriptableObject : ScriptableObject
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] Meshes;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA03034", Offset = "0xA03034", VA = "0xA03034")]
	public RoadScriptableObject()
	{
	}
}
[Token(Token = "0x200002B")]
public class Cloud : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] gameObjects;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] Meshes;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA0303C", Offset = "0xA0303C", VA = "0xA0303C")]
	[ContextMenu("DO the thing")]
	private void DoTheThing()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA03240", Offset = "0xA03240", VA = "0xA03240")]
	[ContextMenu("Randomize")]
	private void Randomize()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA034EC", Offset = "0xA034EC", VA = "0xA034EC")]
	[ContextMenu("Randomize Down")]
	private void RandomizeDown()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA036F4", Offset = "0xA036F4", VA = "0xA036F4")]
	[ContextMenu("Randomize up")]
	private void RandomizeUp()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA038FC", Offset = "0xA038FC", VA = "0xA038FC")]
	[ContextMenu("Thin Out")]
	private void ThinOut()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA03A5C", Offset = "0xA03A5C", VA = "0xA03A5C")]
	public Cloud()
	{
	}
}
[Token(Token = "0x200002C")]
public class RenderCubemapWizard : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubemap cubemap;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA03A64", Offset = "0xA03A64", VA = "0xA03A64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA03B64", Offset = "0xA03B64", VA = "0xA03B64")]
	public RenderCubemapWizard()
	{
	}
}
[Token(Token = "0x200002D")]
public class SaveRenderTextureToFile
{
	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA03B6C", Offset = "0xA03B6C", VA = "0xA03B6C")]
	public SaveRenderTextureToFile()
	{
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorLinear : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA03B74", Offset = "0xA03B74", VA = "0xA03B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA03C4C", Offset = "0xA03C4C", VA = "0xA03C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA03E7C", Offset = "0xA03E7C", VA = "0xA03E7C")]
	public particleAttractorLinear()
	{
	}
}
[Token(Token = "0x200002F")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorMove : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA03E8C", Offset = "0xA03E8C", VA = "0xA03E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA03F64", Offset = "0xA03F64", VA = "0xA03F64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA041CC", Offset = "0xA041CC", VA = "0xA041CC")]
	public particleAttractorMove()
	{
	}
}
[Token(Token = "0x2000030")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorSelf : MonoBehaviour
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numParticlesAlive;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA041DC", Offset = "0xA041DC", VA = "0xA041DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA042B4", Offset = "0xA042B4", VA = "0xA042B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA04460", Offset = "0xA04460", VA = "0xA04460")]
	public particleAttractorSelf()
	{
	}
}
[Token(Token = "0x2000031")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorSpherical : MonoBehaviour
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA04470", Offset = "0xA04470", VA = "0xA04470")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA04548", Offset = "0xA04548", VA = "0xA04548")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA046D8", Offset = "0xA046D8", VA = "0xA046D8")]
	public particleAttractorSpherical()
	{
	}
}
[Token(Token = "0x2000032")]
public class rotation : MonoBehaviour
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA046E8", Offset = "0xA046E8", VA = "0xA046E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA04740", Offset = "0xA04740", VA = "0xA04740")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA04748", Offset = "0xA04748", VA = "0xA04748")]
	public void clickOn()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xA047A0", Offset = "0xA047A0", VA = "0xA047A0")]
	public void clickOff()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xA047A8", Offset = "0xA047A8", VA = "0xA047A8")]
	private void rotate()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xA047F8", Offset = "0xA047F8", VA = "0xA047F8")]
	public rotation()
	{
	}
}
[Token(Token = "0x2000033")]
public class PeanutbutterLevelIndicator : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeanutbutterLevelIndicator <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0xA04EA0", Offset = "0xA04EA0", VA = "0xA04EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0xA04EE8", Offset = "0xA04EE8", VA = "0xA04EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xA04DC0", Offset = "0xA04DC0", VA = "0xA04DC0")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xA04DF0", Offset = "0xA04DF0", VA = "0xA04DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xA04DF4", Offset = "0xA04DF4", VA = "0xA04DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xA04EA8", Offset = "0xA04EA8", VA = "0xA04EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition peanutbutterEntityDef;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lampOn;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lampOff;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xA04800", Offset = "0xA04800", VA = "0xA04800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xA049D8", Offset = "0xA049D8", VA = "0xA049D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xA04B08", Offset = "0xA04B08", VA = "0xA04B08")]
	private void ObjectCollected()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xA04D4C", Offset = "0xA04D4C", VA = "0xA04D4C")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xA04B0C", Offset = "0xA04B0C", VA = "0xA04B0C")]
	private void FindAllPeanutbutter()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xA04DE8", Offset = "0xA04DE8", VA = "0xA04DE8")]
	public PeanutbutterLevelIndicator()
	{
	}
}
[Token(Token = "0x2000035")]
public class PixelArsenalLightFlicker : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string waveFunction;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float phase;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float frequency;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xA04EF0", Offset = "0xA04EF0", VA = "0xA04EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xA04F54", Offset = "0xA04F54", VA = "0xA04F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xA04FE8", Offset = "0xA04FE8", VA = "0xA04FE8")]
	private float EvalWave()
	{
		return default(float);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xA051B4", Offset = "0xA051B4", VA = "0xA051B4")]
	public PixelArsenalLightFlicker()
	{
	}
}
[Token(Token = "0x2000036")]
public class SaveSlotManager : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] percentages;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] activeLamp;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int activeSaveSlot;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int debugSaveSlot;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhysicalSlider slider;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maxSlots;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelDirector_ClearProgress levelDir;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rangeTresh;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool canSwitchReset;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xA0521C", Offset = "0xA0521C", VA = "0xA0521C")]
	[ContextMenu("SaveDebugSlot")]
	public void SaveDebugSlot()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xA05624", Offset = "0xA05624", VA = "0xA05624")]
	[ContextMenu("SetSliderToDebug")]
	public void SetSliderToDebug()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xA056F0", Offset = "0xA056F0", VA = "0xA056F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xA054B0", Offset = "0xA054B0", VA = "0xA054B0")]
	private void SetStatus()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xA05720", Offset = "0xA05720", VA = "0xA05720")]
	public void SwitchPressed()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xA05814", Offset = "0xA05814", VA = "0xA05814")]
	public static void SwitchToSaveAndReload(int saveSlot)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xA058B0", Offset = "0xA058B0", VA = "0xA058B0")]
	public bool ResetAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xA058B8", Offset = "0xA058B8", VA = "0xA058B8")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xA05B04", Offset = "0xA05B04", VA = "0xA05B04")]
	public bool ReloadRequired()
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xA05B34", Offset = "0xA05B34", VA = "0xA05B34")]
	public void ResetSelectedSlot()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xA052A4", Offset = "0xA052A4", VA = "0xA052A4")]
	public static void SavePercentage()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xA05D08", Offset = "0xA05D08", VA = "0xA05D08")]
	public SaveSlotManager()
	{
	}
}
[Token(Token = "0x2000037")]
public class SaveSlotPlate : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] numberMesh;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter meshFilter;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xA05D2C", Offset = "0xA05D2C", VA = "0xA05D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xA05DB8", Offset = "0xA05DB8", VA = "0xA05DB8")]
	public SaveSlotPlate()
	{
	}
}
[Token(Token = "0x2000038")]
public class AchievementCannonCatcher : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	public enum Level
	{
		[Token(Token = "0x400013F")]
		Level1,
		[Token(Token = "0x4000140")]
		Level2
	}

	[Serializable]
	[Token(Token = "0x200003A")]
	public class Persistent
	{
		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cannon_level1;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int cannon_level2;

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xA0604C", Offset = "0xA0604C", VA = "0xA0604C")]
		public Persistent()
		{
		}
	}

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement cannon_catcher;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Cannon cannon;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level level;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xA05DC0", Offset = "0xA05DC0", VA = "0xA05DC0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xA06044", Offset = "0xA06044", VA = "0xA06044")]
	public AchievementCannonCatcher()
	{
	}
}
[Token(Token = "0x200003B")]
public class AchievementsCollectedObjects : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003C")]
	public class SuccessfulLevels
	{
		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xA06470", Offset = "0xA06470", VA = "0xA06470")]
		public SuccessfulLevels()
		{
		}
	}

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Level level;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideIfTriggered;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xA06054", Offset = "0xA06054", VA = "0xA06054")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xA06098", Offset = "0xA06098", VA = "0xA06098")]
	private bool LevelIsAdded()
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xA06198", Offset = "0xA06198", VA = "0xA06198")]
	public void TriggerCondition()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xA06460", Offset = "0xA06460", VA = "0xA06460")]
	public AchievementsCollectedObjects()
	{
	}
}
[Token(Token = "0x200003D")]
public class AchievementsCollectedObjectsID : MonoBehaviour
{
	[Token(Token = "0x200003E")]
	public delegate void ObjectCollectedDelegate();

	[Token(Token = "0x200003F")]
	public delegate void ObjectCollectedStaticDelegate();

	[Serializable]
	[Token(Token = "0x2000040")]
	public class CollectedObjectIDs
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] objectIDs;

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xA06C44", Offset = "0xA06C44", VA = "0xA06C44")]
		public CollectedObjectIDs()
		{
		}
	}

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Entity myEntity;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hideIfTriggered;

	[Token(Token = "0x14000001")]
	public event ObjectCollectedDelegate OnObjectCollected
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xA064D4", Offset = "0xA064D4", VA = "0xA064D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xA06570", Offset = "0xA06570", VA = "0xA06570")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event ObjectCollectedStaticDelegate OnObjectCollectedStatic
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xA04920", Offset = "0xA04920", VA = "0xA04920")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xA04A50", Offset = "0xA04A50", VA = "0xA04A50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xA0660C", Offset = "0xA0660C", VA = "0xA0660C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xA06664", Offset = "0xA06664", VA = "0xA06664")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xA066A8", Offset = "0xA066A8", VA = "0xA066A8")]
	private bool ObjectCollected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xA067FC", Offset = "0xA067FC", VA = "0xA067FC")]
	[ContextMenu("TriggerCondition")]
	public void TriggerCondition()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xA06B0C", Offset = "0xA06B0C", VA = "0xA06B0C")]
	public AchievementsCollectedObjectsID()
	{
	}
}
[Token(Token = "0x2000041")]
[CreateAssetMenu(fileName = "AchievementsPerfectRunsRockets", menuName = "Achievements/AchievementRocketRuns", order = 1)]
public class AchievementsPerfectRunsRockets : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000042")]
	public class AchievementPerfectRunSet
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tries;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Level level;

		[Token(Token = "0x6000123")]
		[Address(RVA = "0xA06FC8", Offset = "0xA06FC8", VA = "0xA06FC8")]
		public AchievementPerfectRunSet()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000043")]
	public class SuccessfulLevels
	{
		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x6000124")]
		[Address(RVA = "0xA06FD0", Offset = "0xA06FD0", VA = "0xA06FD0")]
		public SuccessfulLevels()
		{
		}
	}

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AchievementPerfectRunSet[] runSets;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xA06CA8", Offset = "0xA06CA8", VA = "0xA06CA8")]
	public void CheckAchievement(int tries)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xA06FC0", Offset = "0xA06FC0", VA = "0xA06FC0")]
	public AchievementsPerfectRunsRockets()
	{
	}
}
[Token(Token = "0x2000044")]
public enum AchievmentType
{
	[Token(Token = "0x4000153")]
	NONE,
	[Token(Token = "0x4000154")]
	Achieve,
	[Token(Token = "0x4000155")]
	Increment
}
[Token(Token = "0x2000045")]
[CreateAssetMenu(fileName = "New Achievement", menuName = "Achievements/Achievement", order = 1)]
public class Achievement : ScriptableObject
{
	[Token(Token = "0x2000046")]
	public enum Type
	{
		[Token(Token = "0x400015E")]
		None,
		[Token(Token = "0x400015F")]
		Automatic,
		[Token(Token = "0x4000160")]
		Speedrun
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type type;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string API_ID;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level UnlockLevel;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int MaxCounter;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float finishingTimeInSeconds;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EntityDefinition[] Unlocks;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xA07034", Offset = "0xA07034", VA = "0xA07034")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xA07058", Offset = "0xA07058", VA = "0xA07058")]
	[ContextMenu("Change ID")]
	public void ChangeID()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xA05F18", Offset = "0xA05F18", VA = "0xA05F18")]
	[ContextMenu("Unlock now")]
	public void UnlockNow()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xA07118", Offset = "0xA07118", VA = "0xA07118")]
	[ContextMenu("LogPersistentCounter")]
	private void LogPersistentCounter()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xA06404", Offset = "0xA06404", VA = "0xA06404")]
	public void Increment()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xA07300", Offset = "0xA07300", VA = "0xA07300")]
	[ContextMenu("TestIncrement")]
	private void TestIncrement()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xA0735C", Offset = "0xA0735C", VA = "0xA0735C")]
	public bool AchievementUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xA07380", Offset = "0xA07380", VA = "0xA07380")]
	public Achievement()
	{
	}
}
[Token(Token = "0x2000047")]
public class AchievementSystem : MonoBehaviour
{
	[Token(Token = "0x2000048")]
	public delegate void AchievementUnlockedDelegate(Achievement achievement);

	[Serializable]
	[Token(Token = "0x2000049")]
	public class AchievementBackup
	{
		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xA084B4", Offset = "0xA084B4", VA = "0xA084B4")]
		public AchievementBackup()
		{
		}
	}

	[Token(Token = "0x200004B")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool blocked;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool error;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error_message;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AchievementProgress> progressList;

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xA085B8", Offset = "0xA085B8", VA = "0xA085B8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xA085C0", Offset = "0xA085C0", VA = "0xA085C0")]
		internal void <QueryBackupAchievement>b__0(Message<AchievementProgressList> msg)
		{
		}
	}

	[Token(Token = "0x200004D")]
	[CompilerGenerated]
	private sealed class <QueryBackupAchievement>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass17_0 <>8__1;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementSystem <>4__this;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SaveDataAchievementProgress> <progress>5__2;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Achievement> <unsyncedToUnlock>5__3;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000154")]
			[Address(RVA = "0xA08F04", Offset = "0xA08F04", VA = "0xA08F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000156")]
			[Address(RVA = "0xA08F4C", Offset = "0xA08F4C", VA = "0xA08F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0xA07BE8", Offset = "0xA07BE8", VA = "0xA07BE8")]
		[DebuggerHidden]
		public <QueryBackupAchievement>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xA0869C", Offset = "0xA0869C", VA = "0xA0869C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0xA086A0", Offset = "0xA086A0", VA = "0xA086A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0xA08F0C", Offset = "0xA08F0C", VA = "0xA08F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AchievementSystem _instance;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement100;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDirty;

	[NonSerialized]
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Achievement[] _achievements;

	[Token(Token = "0x1700001E")]
	public static AchievementSystem Instance
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xA07590", Offset = "0xA07590", VA = "0xA07590")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public static Achievement[] Achievements
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xA075D8", Offset = "0xA075D8", VA = "0xA075D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event AchievementUnlockedDelegate OnAchievementUnlocked
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xA07420", Offset = "0xA07420", VA = "0xA07420")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xA074D8", Offset = "0xA074D8", VA = "0xA074D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xA0784C", Offset = "0xA0784C", VA = "0xA0784C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xA07A70", Offset = "0xA07A70", VA = "0xA07A70")]
	public void Start()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xA07B60", Offset = "0xA07B60", VA = "0xA07B60")]
	public void Update()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xA07BDC", Offset = "0xA07BDC", VA = "0xA07BDC")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xA07AEC", Offset = "0xA07AEC", VA = "0xA07AEC")]
	[IteratorStateMachine(typeof(<QueryBackupAchievement>d__17))]
	private IEnumerator QueryBackupAchievement()
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xA07C10", Offset = "0xA07C10", VA = "0xA07C10")]
	public void UnlockAchiementByApiID(Achievement achievement)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xA07C18", Offset = "0xA07C18", VA = "0xA07C18")]
	public void LevelComplete(Level level, float completionTime = float.MaxValue)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xA07A98", Offset = "0xA07A98", VA = "0xA07A98")]
	private void InitializePlatform()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xA05F00", Offset = "0xA05F00", VA = "0xA05F00")]
	public static SaveDataAchievementProgress GetPersistentData(Achievement achievement)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xA07D88", Offset = "0xA07D88", VA = "0xA07D88")]
	private static SaveDataAchievementProgress GetPersistentDataForID(string id)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xA07F70", Offset = "0xA07F70", VA = "0xA07F70")]
	private SaveDataAchievementProgress GetPersistentDataForAPIID(string apiid)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xA07170", Offset = "0xA07170", VA = "0xA07170")]
	public void GetPersistentCounter(Achievement achievement)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xA0806C", Offset = "0xA0806C", VA = "0xA0806C")]
	public int GetIncrementCounter(Achievement achievement)
	{
		return default(int);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xA07234", Offset = "0xA07234", VA = "0xA07234")]
	public void Increment(Achievement achievement, int amount = 1)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA070BC", Offset = "0xA070BC", VA = "0xA070BC")]
	public bool AchievementUnlocked(Achievement achievement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xA070E0", Offset = "0xA070E0", VA = "0xA070E0")]
	public void Unlock(Achievement achievement)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xA080F0", Offset = "0xA080F0", VA = "0xA080F0")]
	public void Unlock(Achievement achievement, SaveDataAchievementProgress persistent)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xA082CC", Offset = "0xA082CC", VA = "0xA082CC")]
	private void OnOculusAchievementCallback(Message<AchievementUpdate> message, Achievement achievement, SaveDataAchievementProgress persistent)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xA0833C", Offset = "0xA0833C", VA = "0xA0833C")]
	private void BackupAchievement(Achievement achievement, SaveDataAchievementProgress persistent)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xA0835C", Offset = "0xA0835C", VA = "0xA0835C")]
	public AchievementSystem()
	{
	}
}
[Token(Token = "0x2000051")]
public class AchievementTrackerHumanPhoto : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000052")]
	public class HumanPhotos
	{
		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x6000160")]
		[Address(RVA = "0xA09774", Offset = "0xA09774", VA = "0xA09774")]
		public HumanPhotos()
		{
		}
	}

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionValidationPhotoCamera validationCamera;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro tmPro;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject progressDisplay;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA08FBC", Offset = "0xA08FBC", VA = "0xA08FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA0907C", Offset = "0xA0907C", VA = "0xA0907C")]
	public void TakePicture()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA09764", Offset = "0xA09764", VA = "0xA09764")]
	public AchievementTrackerHumanPhoto()
	{
	}
}
[Token(Token = "0x2000053")]
public class ActionOnGamestate : MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTargetPlacedEvent;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnTargetsCompleteEvent;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnTargetsIncompleteEvent;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnLevelCompleteEvent;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xA097D8", Offset = "0xA097D8", VA = "0xA097D8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xA098D4", Offset = "0xA098D4", VA = "0xA098D4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xA099D0", Offset = "0xA099D0", VA = "0xA099D0", Slot = "6")]
	public virtual void OnTargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xA09A20", Offset = "0xA09A20", VA = "0xA09A20", Slot = "7")]
	public virtual void OnLevelComplete()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xA09A3C", Offset = "0xA09A3C", VA = "0xA09A3C")]
	public ActionOnGamestate()
	{
	}
}
[Token(Token = "0x2000054")]
public class ActivateFixedJoint : MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody bodyA;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody bodyB;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xA09A44", Offset = "0xA09A44", VA = "0xA09A44")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xA09AB0", Offset = "0xA09AB0", VA = "0xA09AB0")]
	public ActivateFixedJoint()
	{
	}
}
[Token(Token = "0x2000055")]
public class ActivateHumanMovement : MonoBehaviour
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool changeHumanWaypointID;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int changeHumanWaypointIDTo;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float freeFallDistance;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool activateForEveryone;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool doNotActivateForID;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> characterID;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool refreshCollider;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider myCollider;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool noMovementOnGrab;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xA09AB8", Offset = "0xA09AB8", VA = "0xA09AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA09BD8", Offset = "0xA09BD8", VA = "0xA09BD8")]
	private void DoRefreshCollider()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xA09C10", Offset = "0xA09C10", VA = "0xA09C10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA09DF4", Offset = "0xA09DF4", VA = "0xA09DF4")]
	public ActivateHumanMovement()
	{
	}
}
[Token(Token = "0x2000056")]
public class ActivateInWater : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wayPoints;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA09E14", Offset = "0xA09E14", VA = "0xA09E14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA09EA0", Offset = "0xA09EA0", VA = "0xA09EA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA09F2C", Offset = "0xA09F2C", VA = "0xA09F2C")]
	private void WaterStatusChange(bool _inWater)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA09F4C", Offset = "0xA09F4C", VA = "0xA09F4C")]
	public ActivateInWater()
	{
	}
}
[Token(Token = "0x2000057")]
public class AddForce : MonoBehaviour
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 force;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA09F54", Offset = "0xA09F54", VA = "0xA09F54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA09FAC", Offset = "0xA09FAC", VA = "0xA09FAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA0A000", Offset = "0xA0A000", VA = "0xA0A000")]
	public AddForce()
	{
	}
}
[Token(Token = "0x2000058")]
public class AdjustWaypointDirectionTugboat : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VehicleWaypoint waypointToChange;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TargetShippingPerimeter perimeter;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform closest;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA0A008", Offset = "0xA0A008", VA = "0xA0A008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA0A068", Offset = "0xA0A068", VA = "0xA0A068")]
	private void DirectionCheck()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA0A6CC", Offset = "0xA0A6CC", VA = "0xA0A6CC")]
	public AdjustWaypointDirectionTugboat()
	{
	}
}
[Token(Token = "0x2000059")]
public class AlertAntenna : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DOTweenAnimation ani;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA0A6D4", Offset = "0xA0A6D4", VA = "0xA0A6D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA0A76C", Offset = "0xA0A76C", VA = "0xA0A76C")]
	[ContextMenu("ON")]
	private void SetOn()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA0A6DC", Offset = "0xA0A6DC", VA = "0xA0A6DC")]
	public void SetMode(bool _which)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA0A774", Offset = "0xA0A774", VA = "0xA0A774")]
	public AlertAntenna()
	{
	}
}
[Token(Token = "0x200005A")]
public class AlignToBezierCurve : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Bones;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Tip;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BezierSpline Line;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RotationReference[] Points;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float t;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] _originalSizes;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] _currentSizes;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _sizeTotal;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA0A77C", Offset = "0xA0A77C", VA = "0xA0A77C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA0AB50", Offset = "0xA0AB50", VA = "0xA0AB50")]
	private void Update()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA0A8F4", Offset = "0xA0A8F4", VA = "0xA0A8F4")]
	private float[] CalculateSizes()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA0AD68", Offset = "0xA0AD68", VA = "0xA0AD68")]
	public AlignToBezierCurve()
	{
	}
}
[Token(Token = "0x200005B")]
public class AMTanimations : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator[] animators;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA0AD70", Offset = "0xA0AD70", VA = "0xA0AD70")]
	[ContextMenu("On")]
	public void OnAnimation()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA0ADFC", Offset = "0xA0ADFC", VA = "0xA0ADFC")]
	[ContextMenu("Off")]
	public void OffAnimation()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA0AE88", Offset = "0xA0AE88", VA = "0xA0AE88")]
	[ContextMenu("Idle")]
	public void IdleAnimation()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA0AF14", Offset = "0xA0AF14", VA = "0xA0AF14")]
	[ContextMenu("Error")]
	public void ErrorAnimation()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA0AFA0", Offset = "0xA0AFA0", VA = "0xA0AFA0")]
	public AMTanimations()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class Analytics : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string versionNumber;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool useAnalytics;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Analytics _instance;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI versionTM;

	[Token(Token = "0x17000022")]
	public static Analytics Instance
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xA0AFA8", Offset = "0xA0AFA8", VA = "0xA0AFA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA0B124", Offset = "0xA0B124", VA = "0xA0B124")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA0B260", Offset = "0xA0B260", VA = "0xA0B260")]
	public static void NewProgressionEvent(GAProgressionStatus status, string stat, string level, string place)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA0B2F4", Offset = "0xA0B2F4", VA = "0xA0B2F4")]
	public static void NewProgressionEvent(GAProgressionStatus status, string stat, string level, string place, int passed)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA0B390", Offset = "0xA0B390", VA = "0xA0B390")]
	public static void NewDesignEvent(string whichEvent)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA0B3F4", Offset = "0xA0B3F4", VA = "0xA0B3F4")]
	public static void NewDesignEvent(string whichEvent, float value)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA0B46C", Offset = "0xA0B46C", VA = "0xA0B46C")]
	public Analytics()
	{
	}
}
[Token(Token = "0x200005D")]
public class AnchorBreakDistance : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200005E")]
	public class DistanceReachedEvent : UnityEvent
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xA0B718", Offset = "0xA0B718", VA = "0xA0B718")]
		public DistanceReachedEvent()
		{
		}
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DistanceReachedEvent DistanceReached;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joint joint;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startDistance;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BreakDistance;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float dist;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA0B4C4", Offset = "0xA0B4C4", VA = "0xA0B4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA0B4E8", Offset = "0xA0B4E8", VA = "0xA0B4E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA0B4EC", Offset = "0xA0B4EC", VA = "0xA0B4EC")]
	private void CheckJointDiff()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xA0B6FC", Offset = "0xA0B6FC", VA = "0xA0B6FC")]
	public AnchorBreakDistance()
	{
	}
}
[Token(Token = "0x200005F")]
public class AntiGravity : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xA0B720", Offset = "0xA0B720", VA = "0xA0B720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xA0B790", Offset = "0xA0B790", VA = "0xA0B790")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA0B7E8", Offset = "0xA0B7E8", VA = "0xA0B7E8")]
	public AntiGravity()
	{
	}
}
[Token(Token = "0x2000060")]
public class ApplyStartVelocity : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minVel;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA0B7F0", Offset = "0xA0B7F0", VA = "0xA0B7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA0B7F4", Offset = "0xA0B7F4", VA = "0xA0B7F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA0B8B8", Offset = "0xA0B8B8", VA = "0xA0B8B8")]
	public ApplyStartVelocity()
	{
	}
}
[Token(Token = "0x2000061")]
public class AttachAsPayload : MonoBehaviour
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 hingeAxis;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PayloadManager payloadManager;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadObject;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lockAngularLimits;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float angularLimits;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA0B8C8", Offset = "0xA0B8C8", VA = "0xA0B8C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA0B920", Offset = "0xA0B920", VA = "0xA0B920")]
	public AttachAsPayload()
	{
	}
}
[Token(Token = "0x2000062")]
public class AttachToCamera : MonoBehaviour
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA0B948", Offset = "0xA0B948", VA = "0xA0B948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA0B99C", Offset = "0xA0B99C", VA = "0xA0B99C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA0BAE0", Offset = "0xA0BAE0", VA = "0xA0BAE0")]
	public AttachToCamera()
	{
	}
}
[Token(Token = "0x2000063")]
public class AttachToTentacle : MonoBehaviour
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool usePhysics;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform bone;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int boneID;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 localRotationOffset;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 localPositionOffset;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool rightTentacle;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TentacleLogic tentaclelogic;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delay;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool updateOffsets;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[Header("ONLY WORKS WITH NON PHYSICS")]
	public bool deactivateWithTentacle;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject visualToDeativate;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA0BAF0", Offset = "0xA0BAF0", VA = "0xA0BAF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA0BBC4", Offset = "0xA0BBC4", VA = "0xA0BBC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA0BC98", Offset = "0xA0BC98", VA = "0xA0BC98")]
	private void GetController()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA0BCF0", Offset = "0xA0BCF0", VA = "0xA0BCF0")]
	private void OnControllerActive(int _id, bool active)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA0BE00", Offset = "0xA0BE00", VA = "0xA0BE00")]
	private void Load()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xA0BEB0", Offset = "0xA0BEB0", VA = "0xA0BEB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA0BF00", Offset = "0xA0BF00", VA = "0xA0BF00")]
	private void Init()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xA0C080", Offset = "0xA0C080", VA = "0xA0C080")]
	public AttachToTentacle()
	{
	}
}
[Token(Token = "0x2000064")]
public class Ambient : MonoBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsUnderwater;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string CurrentAmbient;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	private float AmbientVolume;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string UnderwaterAmbient;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance ambientInstance;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance UnderwaterInstance;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xA0C09C", Offset = "0xA0C09C", VA = "0xA0C09C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xA0C150", Offset = "0xA0C150", VA = "0xA0C150")]
	public void ToggleUnderwater()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA0C108", Offset = "0xA0C108", VA = "0xA0C108")]
	public void SetStatus(bool undervater)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA0C168", Offset = "0xA0C168", VA = "0xA0C168")]
	public void ChangeAmbient(string EventRef)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA0C188", Offset = "0xA0C188", VA = "0xA0C188")]
	public Ambient()
	{
	}
}
[Token(Token = "0x2000065")]
public static class AudioHelper
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventInstance pauseInstance;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA0C19C", Offset = "0xA0C19C", VA = "0xA0C19C")]
	public static PLAYBACK_STATE PlaybackState(EventInstance instance)
	{
		return default(PLAYBACK_STATE);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA0C1C8", Offset = "0xA0C1C8", VA = "0xA0C1C8")]
	public static void PlayOneShotWithParams3D(string fmodEvent, Vector3 position, params (string name, float value)[] parameters)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA0C2B4", Offset = "0xA0C2B4", VA = "0xA0C2B4")]
	public static EventInstance PlayOneShotWithParamsAttached(string fmodEvent, GameObject _gameObject, params (string name, float value)[] parameters)
	{
		return default(EventInstance);
	}
}
[Token(Token = "0x2000066")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsAboveWater;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string CurrentAmbient;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string UnderwaterAmbient;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance ambientInstance;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance UnderwaterInstance;

	[Token(Token = "0x17000023")]
	public static float MusicVolume
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xA0C81C", Offset = "0xA0C81C", VA = "0xA0C81C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xA0C504", Offset = "0xA0C504", VA = "0xA0C504")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static float SFXVolume
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xA0C878", Offset = "0xA0C878", VA = "0xA0C878")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xA0C648", Offset = "0xA0C648", VA = "0xA0C648")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public static float AmbienceVolume
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xA0C8D8", Offset = "0xA0C8D8", VA = "0xA0C8D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xA0C580", Offset = "0xA0C580", VA = "0xA0C580")]
		set
		{
		}
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA0C3BC", Offset = "0xA0C3BC", VA = "0xA0C3BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA0C710", Offset = "0xA0C710", VA = "0xA0C710")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA0C790", Offset = "0xA0C790", VA = "0xA0C790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA0C810", Offset = "0xA0C810", VA = "0xA0C810")]
	private void PostLoadEvent()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA0C448", Offset = "0xA0C448", VA = "0xA0C448")]
	public void SetAboveWaterStatus(bool aboveWater, bool reset = false)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA0C83C", Offset = "0xA0C83C", VA = "0xA0C83C")]
	public static void ToggleVCA(string vcaPath, float volume)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA0C898", Offset = "0xA0C898", VA = "0xA0C898")]
	public static void ToggleResonanceEvents(string parameter, float volume)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA0C8F8", Offset = "0xA0C8F8", VA = "0xA0C8F8")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class ColliderSFXOneShotTriggerOnExit : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string fmodEvent;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider targetCollider;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool played;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xA0C900", Offset = "0xA0C900", VA = "0xA0C900")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xA0C9D0", Offset = "0xA0C9D0", VA = "0xA0C9D0")]
	public ColliderSFXOneShotTriggerOnExit()
	{
	}
}
[Serializable]
[Token(Token = "0x2000068")]
public class EmoSFXDefiniton
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string emoTriggerSheets;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	public string emoSFX;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xA0C9D8", Offset = "0xA0C9D8", VA = "0xA0C9D8")]
	public EmoSFXDefiniton()
	{
	}
}
[Token(Token = "0x2000069")]
[CreateAssetMenu(fileName = "New HumanEmoSFX", menuName = "HumanEmoSFX", order = 1)]
public class HumanEmoSFX : ScriptableObject
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EmoSFXDefiniton[] emoSFXArray;

	[Token(Token = "0x40001D3")]
	public const string dummySymbols = "¼½¾^_|¢£¤¥¦\u00a8©ª®\u00af°±²³µ¹ºﬀﬂﬃﬄﬅﬆ";

	[Token(Token = "0x40001D4")]
	public const string preSuffix = "§§§";

	[Token(Token = "0x40001D5")]
	public const string elviraPreSuffix = "&&&";

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, string> specialSymDic;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, string> sheetsSFXDict;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string theChar;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xA0CA30", Offset = "0xA0CA30", VA = "0xA0CA30")]
	private void CreateSheetsSFXDict()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xA0CC18", Offset = "0xA0CC18", VA = "0xA0CC18")]
	public Dictionary<string, string> GetSheetsSFXDict()
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xA0CC7C", Offset = "0xA0CC7C", VA = "0xA0CC7C")]
	private void CreateSpecialSymDict()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xA0CDBC", Offset = "0xA0CDBC", VA = "0xA0CDBC")]
	public string ReplaceSymCharacters(string _text)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xA0CE24", Offset = "0xA0CE24", VA = "0xA0CE24")]
	public string GetSFXForReactionType(string _reactionType)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xA0CEE8", Offset = "0xA0CEE8", VA = "0xA0CEE8")]
	public string GetLastSymbolForBubble(string _sentence)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xA0CFE4", Offset = "0xA0CFE4", VA = "0xA0CFE4")]
	public string GetReplaceForTrigger(string _trigger)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA0CFE8", Offset = "0xA0CFE8", VA = "0xA0CFE8")]
	public string GetReplaceForTriggerSheets(string _trigger)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA0D0C4", Offset = "0xA0D0C4", VA = "0xA0D0C4")]
	public bool IsSFXSymbol(string _symbol)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA0D118", Offset = "0xA0D118", VA = "0xA0D118")]
	public string GetSFXForReplace(string _replace)
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA0D1C8", Offset = "0xA0D1C8", VA = "0xA0D1C8")]
	public HumanEmoSFX()
	{
	}
}
[Token(Token = "0x200006A")]
public class MovingSFXLoopRB : MonoBehaviour
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EventInstance instance;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	[SerializeField]
	private string fmodEvent;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string parameter;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int frameInterval;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float turnSpeedFactor;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool paused;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA0E220", Offset = "0xA0E220", VA = "0xA0E220")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA0E280", Offset = "0xA0E280", VA = "0xA0E280")]
	private void StartInstance()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA0E2D8", Offset = "0xA0E2D8", VA = "0xA0E2D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xA0E35C", Offset = "0xA0E35C", VA = "0xA0E35C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xA0E384", Offset = "0xA0E384", VA = "0xA0E384")]
	public MovingSFXLoopRB()
	{
	}
}
[Token(Token = "0x200006B")]
[CreateAssetMenu(menuName = "My FMOD Callback Handler")]
public class MyFMODCallbackHandler : PlatformCallbackHandler
{
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA0E3A0", Offset = "0xA0E3A0", VA = "0xA0E3A0", Slot = "4")]
	public override void PreInitialize(FMOD.Studio.System studioSystem, Action<RESULT, string> reportResult)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xA0E3A4", Offset = "0xA0E3A4", VA = "0xA0E3A4")]
	public MyFMODCallbackHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
[CreateAssetMenu(fileName = "UniqHumansCollection", menuName = "HumansCollectionUniq", order = 1)]
public class UniqHumansCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public class UniqEntityDefinitionGroup
	{
		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnResources.HumanType groupType;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EntityDefinition[] group;

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA0E500", Offset = "0xA0E500", VA = "0xA0E500")]
		public UniqEntityDefinitionGroup()
		{
		}
	}

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniqEntityDefinitionGroup[] collection;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xA0E3AC", Offset = "0xA0E3AC", VA = "0xA0E3AC")]
	public EntityDefinition GetRandomHumnFromGroup(SpawnResources.HumanType whichType)
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xA0E4F8", Offset = "0xA0E4F8", VA = "0xA0E4F8")]
	public UniqHumansCollection()
	{
	}
}
[Token(Token = "0x200006E")]
public class AxisToAxis : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody crankShaftRB;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HingeJoint turnedJoint;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint crankShaft;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FXgeneratorRunning;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool freeSpinTarget;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private JointMotor motor;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float factor;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool crankAttached;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mass;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float counter;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float squeekTime;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xA0E508", Offset = "0xA0E508", VA = "0xA0E508")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA0E594", Offset = "0xA0E594", VA = "0xA0E594")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA0E550", Offset = "0xA0E550", VA = "0xA0E550")]
	public void SetMotor(bool which)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xA0E694", Offset = "0xA0E694", VA = "0xA0E694")]
	public AxisToAxis()
	{
	}
}
[Token(Token = "0x200006F")]
public class BabbleField : CollisionBase
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool visualFeedback;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dumbfield;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA0E6AC", Offset = "0xA0E6AC", VA = "0xA0E6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xA0E73C", Offset = "0xA0E73C", VA = "0xA0E73C", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xA0E880", Offset = "0xA0E880", VA = "0xA0E880")]
	public BabbleField()
	{
	}
}
[Token(Token = "0x2000070")]
[CreateAssetMenu(fileName = "BakeSceneStorage", menuName = "Bakery", order = 1)]
public class BakeSceneStorage : ScriptableObject
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public UnityEngine.Object[] scenes;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA0E9B4", Offset = "0xA0E9B4", VA = "0xA0E9B4")]
	public BakeSceneStorage()
	{
	}
}
[Token(Token = "0x2000071")]
public class BakingHelper : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 OriginalPosition;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion OriginalRotation;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool HideOnAwake;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xA0E9BC", Offset = "0xA0E9BC", VA = "0xA0E9BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xA0EA6C", Offset = "0xA0EA6C", VA = "0xA0EA6C")]
	[ContextMenu("Record current position")]
	public void Record()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xA0EABC", Offset = "0xA0EABC", VA = "0xA0EABC")]
	public BakingHelper()
	{
	}
}
[Token(Token = "0x2000072")]
public class BirthdayCake : MonoBehaviour
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject candle;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isBurning;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float velCounter;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject smokeOnly;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool touchCandleIsOff;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xA0EAC4", Offset = "0xA0EAC4", VA = "0xA0EAC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xA0EB34", Offset = "0xA0EB34", VA = "0xA0EB34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xA0EC1C", Offset = "0xA0EC1C", VA = "0xA0EC1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xA0ED04", Offset = "0xA0ED04", VA = "0xA0ED04")]
	private void BlowOutCandle(MouthSFXSet set, Entity entity, string ID, Transform mouth)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA0EDF4", Offset = "0xA0EDF4", VA = "0xA0EDF4")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA0EDA8", Offset = "0xA0EDA8", VA = "0xA0EDA8")]
	[ContextMenu("candle off")]
	private void CandleOff()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA0EE74", Offset = "0xA0EE74", VA = "0xA0EE74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xA0EFC8", Offset = "0xA0EFC8", VA = "0xA0EFC8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xA0F128", Offset = "0xA0F128", VA = "0xA0F128")]
	public BirthdayCake()
	{
	}
}
[Token(Token = "0x2000073")]
public class BoomBox : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public class Song
	{
		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FMOD_Event;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float songLength;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string songName;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int songIDX;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool unlocked;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Level songLevel;

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xA0F690", Offset = "0xA0F690", VA = "0xA0F690")]
		public Song()
		{
		}
	}

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool introPlayed;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSong;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string[] music;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventInstance[] musicInstance;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float coolTime;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float LastTimePlayed;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject offButton;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject onButton;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Level> songLevels;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Song> songsList;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Level defaultLevel;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int playingSongIDX;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance instance;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xA0F13C", Offset = "0xA0F13C", VA = "0xA0F13C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA0F19C", Offset = "0xA0F19C", VA = "0xA0F19C")]
	[ContextMenu("CreateSongList")]
	private void CreateUnlockedSongsList()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xA0F6F8", Offset = "0xA0F6F8", VA = "0xA0F6F8")]
	[ContextMenu("PlaySong")]
	private void PlaySong()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA0F7DC", Offset = "0xA0F7DC", VA = "0xA0F7DC")]
	[ContextMenu("NextSong")]
	private void NextSong()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xA0F79C", Offset = "0xA0F79C", VA = "0xA0F79C")]
	[ContextMenu("StopSong")]
	private void StopSong()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xA0F8A0", Offset = "0xA0F8A0", VA = "0xA0F8A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xA0F8A4", Offset = "0xA0F8A4", VA = "0xA0F8A4")]
	public BoomBox()
	{
	}
}
[Token(Token = "0x2000075")]
public class BossBooster : MonoBehaviour
{
	[Token(Token = "0x2000076")]
	public delegate void BoosterSlingConnectedDelegate(Glue whichGlue, bool connected);

	[Token(Token = "0x2000077")]
	public delegate void BoosterDestroyedDelegate();

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BossBoosterWeakpoint> bossBoosterWeakpoints;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hatchDuration;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SpinnytopWhole;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpinnytopBroken;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject AntennaWhole;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject AntennaBroke;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BaseWhole;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BaseBroke;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject energyOrbFX;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool boosterDestroyed;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float hingeForce;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform boosterWP;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool boosterActivated;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject energyAttach;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int direction;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float rotVelocity;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hatchOpen;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CrystalEnergyBase energyBaseAttach;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HingeJoint myHingeJoint;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JointMotor jointMotor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject overloadFX;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Glued rotationGlued;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentEnergy;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int lastEnergyLevel;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject launchFX;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ShakeObject[] shakeObject;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public StudioEventEmitter destroyedBoosterSFX;

	[Token(Token = "0x14000004")]
	public static event BoosterSlingConnectedDelegate OnBoosterSlingConnected
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xA0F8B8", Offset = "0xA0F8B8", VA = "0xA0F8B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xA0F970", Offset = "0xA0F970", VA = "0xA0F970")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event BoosterDestroyedDelegate OnBoosterDestroyed
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xA0FA28", Offset = "0xA0FA28", VA = "0xA0FA28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xA0FAE4", Offset = "0xA0FAE4", VA = "0xA0FAE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA0FBA0", Offset = "0xA0FBA0", VA = "0xA0FBA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA0FCA4", Offset = "0xA0FCA4", VA = "0xA0FCA4")]
	public void ActivateBooster()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA0FDB8", Offset = "0xA0FDB8", VA = "0xA0FDB8")]
	[ContextMenu("LaunchBooster")]
	public void LaunchBooster(bool which = true)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA0FDE8", Offset = "0xA0FDE8", VA = "0xA0FDE8")]
	public void SetShake(bool which)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xA0FE48", Offset = "0xA0FE48", VA = "0xA0FE48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xA0FF30", Offset = "0xA0FF30", VA = "0xA0FF30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA10018", Offset = "0xA10018", VA = "0xA10018")]
	private void EnergyEvent(int _energyLevel)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA10060", Offset = "0xA10060", VA = "0xA10060")]
	private void EnergyConnection(Glue _glue, Glued _glued)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA10148", Offset = "0xA10148", VA = "0xA10148")]
	public void DebugDestroyAll()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA1002C", Offset = "0xA1002C", VA = "0xA1002C")]
	private void EnergyLevelCheck()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xA10454", Offset = "0xA10454", VA = "0xA10454")]
	public void WeakpointDestroyed(BossBoosterWeakpoint _bossBoosterWeakpoint)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xA10744", Offset = "0xA10744", VA = "0xA10744")]
	public void RegisterBooster(BossBoosterWeakpoint booster)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xA10444", Offset = "0xA10444", VA = "0xA10444")]
	[ContextMenu("OpenHatch")]
	private void OpenHatch()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xA1044C", Offset = "0xA1044C", VA = "0xA1044C")]
	[ContextMenu("CloseHatch")]
	private void CloseHatch()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xA1082C", Offset = "0xA1082C", VA = "0xA1082C")]
	private void OpenHatch(bool which)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xA10BC8", Offset = "0xA10BC8", VA = "0xA10BC8")]
	public BossBooster()
	{
	}
}
[Token(Token = "0x2000078")]
public class BossBoosterWeakpoint : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hatchRoot;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weakPoint;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject weakPointDestroyed;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject weakPointActive;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hatchOpen;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isWeakPointDestroyed;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BossBooster bossBooster;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween tween;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CollisionBase collisionBase;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EntityDefinition zapper;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject physicalHatch;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody hatchRB;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xA10F24", Offset = "0xA10F24", VA = "0xA10F24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xA11158", Offset = "0xA11158", VA = "0xA11158")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xA11278", Offset = "0xA11278", VA = "0xA11278")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xA112D4", Offset = "0xA112D4", VA = "0xA112D4")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xA10290", Offset = "0xA10290", VA = "0xA10290")]
	[ContextMenu("DestroyWeakpoint")]
	public void DestroyWeakpoint()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xA109E8", Offset = "0xA109E8", VA = "0xA109E8")]
	public void OpenHatch(bool which, float duration)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xA11410", Offset = "0xA11410", VA = "0xA11410")]
	private void HatchOpen()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xA11430", Offset = "0xA11430", VA = "0xA11430")]
	private void HatchClosed()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xA11450", Offset = "0xA11450", VA = "0xA11450")]
	public BossBoosterWeakpoint()
	{
	}
}
[Token(Token = "0x2000079")]
public class BossController : LevelDirector_base
{
	[Token(Token = "0x200007A")]
	public enum Phase
	{
		[Token(Token = "0x4000270")]
		none,
		[Token(Token = "0x4000271")]
		patrol,
		[Token(Token = "0x4000272")]
		EMPBuildUp,
		[Token(Token = "0x4000273")]
		reboot,
		[Token(Token = "0x4000274")]
		initBoosters
	}

	[Token(Token = "0x200007B")]
	[CompilerGenerated]
	private sealed class <RebootSequence>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossController <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023E")]
			[Address(RVA = "0xA13ADC", Offset = "0xA13ADC", VA = "0xA13ADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000240")]
			[Address(RVA = "0xA13B24", Offset = "0xA13B24", VA = "0xA13B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0xA12AB0", Offset = "0xA12AB0", VA = "0xA12AB0")]
		[DebuggerHidden]
		public <RebootSequence>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0xA139F8", Offset = "0xA139F8", VA = "0xA139F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0xA139FC", Offset = "0xA139FC", VA = "0xA139FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xA13AE4", Offset = "0xA13AE4", VA = "0xA13AE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007C")]
	[CompilerGenerated]
	private sealed class <EMPBlastSequence>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossController <>4__this;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <lastBoostersDestroyed>5__2;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000244")]
			[Address(RVA = "0xA13D3C", Offset = "0xA13D3C", VA = "0xA13D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000246")]
			[Address(RVA = "0xA13D84", Offset = "0xA13D84", VA = "0xA13D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xA138E0", Offset = "0xA138E0", VA = "0xA138E0")]
		[DebuggerHidden]
		public <EMPBlastSequence>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xA13B2C", Offset = "0xA13B2C", VA = "0xA13B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xA13B30", Offset = "0xA13B30", VA = "0xA13B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0xA13D44", Offset = "0xA13D44", VA = "0xA13D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Phase bossPhase;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Drone myDrone;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public EntityDefinition powerslingDef;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<Glued> gluedList;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Rigidbody rb;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Glue connectedGlue;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int slingConnections;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float initialSteerTorque;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float initialUprightTorque;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float initialPower;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float initialAngularDrag;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float initialMaxVelocity;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<float> velocityOverTime;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject weakSpot;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<Glue> connections;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int minSlingsRequired;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public List<Transform> patrolWPs;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public BossBooster[] bossBoosters;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform playerTarget;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform centerWP;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float chargeTimerMax;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public CollisionBase weakPoint;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float velMiddled;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public EntityDefinition zapper;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float weakSpotStartTime;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public int weakPointHitCount;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject electricalExplosion;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private IEnumerator EMPBlastBuildUp;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject hitExplosion;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject boosterLeft;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject boosterRight;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool toCenterWP;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public HingeJoint headJoint;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public BossLauncher bossLauncher;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float initialsDistanceTreshold;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int boostersDestroyed;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public MolluskWebcam webcam;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public LevelDirector_C3333_Resetto controllingLevelDirector;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private IEnumerator rebootSequence;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private bool movingToLastBooster;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Transform lastBooster;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool killMagnets;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject[] sparksHands;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float initialDrag;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject bossCoreComputer;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Transform bossCoreReactor;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool boosterActivationDone;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private BossBooster bossBooster;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool coreVis;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float fightingPower;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool cooldown;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool empSequenceActive;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xA11460", Offset = "0xA11460", VA = "0xA11460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xA116D8", Offset = "0xA116D8", VA = "0xA116D8", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xA1176C", Offset = "0xA1176C", VA = "0xA1176C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xA11668", Offset = "0xA11668", VA = "0xA11668")]
	public void SetBoosters(bool which)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xA11808", Offset = "0xA11808", VA = "0xA11808")]
	private void SetSparks(bool which)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xA11610", Offset = "0xA11610", VA = "0xA11610")]
	public void SetKillMagnets(bool which)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xA11870", Offset = "0xA11870", VA = "0xA11870")]
	public void DebugActivateBoosters()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xA118CC", Offset = "0xA118CC", VA = "0xA118CC")]
	[ContextMenu("ActivateBoosters")]
	public void ActivateBoosters()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xA11AB4", Offset = "0xA11AB4", VA = "0xA11AB4")]
	private void CheckBoosterActivated(Transform wpReached)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xA11D94", Offset = "0xA11D94", VA = "0xA11D94", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xA11D9C", Offset = "0xA11D9C", VA = "0xA11D9C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xA11EE0", Offset = "0xA11EE0", VA = "0xA11EE0", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xA12024", Offset = "0xA12024", VA = "0xA12024")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xA123D0", Offset = "0xA123D0", VA = "0xA123D0")]
	private void TargetReached(Transform _transform)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xA1260C", Offset = "0xA1260C", VA = "0xA1260C")]
	public void KillAllCoroutines()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xA12614", Offset = "0xA12614", VA = "0xA12614")]
	public void LaunchLastBooster(bool which = true)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xA126A8", Offset = "0xA126A8", VA = "0xA126A8")]
	public void MoveToLastWorkingBooster()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xA12164", Offset = "0xA12164", VA = "0xA12164")]
	[ContextMenu("WeakPointHit")]
	public void WeakPointHit()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xA12A3C", Offset = "0xA12A3C", VA = "0xA12A3C")]
	[IteratorStateMachine(typeof(<RebootSequence>d__68))]
	private IEnumerator RebootSequence()
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xA12AD8", Offset = "0xA12AD8", VA = "0xA12AD8")]
	[ContextMenu("showCore")]
	private void ToggleCore()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xA11638", Offset = "0xA11638", VA = "0xA11638")]
	public void ShowCore(bool showCore = true)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xA128F0", Offset = "0xA128F0", VA = "0xA128F0")]
	private void EndWeakpointPhase()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xA12B18", Offset = "0xA12B18", VA = "0xA12B18")]
	private void EMPBlast()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xA124BC", Offset = "0xA124BC", VA = "0xA124BC")]
	[ContextMenu("StopAndLookAtPlayer")]
	private void StopAndLookAtPlayer()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xA11C24", Offset = "0xA11C24", VA = "0xA11C24")]
	[ContextMenu("ToCenterWP")]
	public void ToCenterWP()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xA12954", Offset = "0xA12954", VA = "0xA12954")]
	private void KillAttachedPowerslings()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xA12D7C", Offset = "0xA12D7C", VA = "0xA12D7C")]
	[ContextMenu("AddDebugSlingConnection")]
	private void AddDebugSlingConnection()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xA12F80", Offset = "0xA12F80", VA = "0xA12F80")]
	[ContextMenu("AddDebugALLLLLSlingConnection")]
	private void AddAllSlingConnection()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xA12F9C", Offset = "0xA12F9C", VA = "0xA12F9C")]
	private void KillAllBotConnections()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xA12FA0", Offset = "0xA12FA0", VA = "0xA12FA0", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA133F0", Offset = "0xA133F0", VA = "0xA133F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA1364C", Offset = "0xA1364C", VA = "0xA1364C")]
	[ContextMenu("Patrol")]
	private void Patrol()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA13654", Offset = "0xA13654", VA = "0xA13654")]
	public void OriginalDroneValues()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA12C44", Offset = "0xA12C44", VA = "0xA12C44")]
	public void Patrol(bool setNewWPs = false)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA12DA4", Offset = "0xA12DA4", VA = "0xA12DA4")]
	private void ChangeWaypoint()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA13544", Offset = "0xA13544", VA = "0xA13544")]
	[ContextMenu("StartEMPBlastSequence")]
	private void StartEMPBlastSequence()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA13718", Offset = "0xA13718", VA = "0xA13718")]
	private void BoosterDestroyed()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA137D4", Offset = "0xA137D4", VA = "0xA137D4")]
	private void MeanFace()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xA137F8", Offset = "0xA137F8", VA = "0xA137F8")]
	private void NoTypeDelay()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xA1382C", Offset = "0xA1382C", VA = "0xA1382C")]
	private void InsertVerbalReactionAndLocalise(string key)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xA136A4", Offset = "0xA136A4", VA = "0xA136A4")]
	[IteratorStateMachine(typeof(<EMPBlastSequence>d__94))]
	private IEnumerator EMPBlastSequence()
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xA13908", Offset = "0xA13908", VA = "0xA13908")]
	public BossController()
	{
	}
}
[Token(Token = "0x200007D")]
public class BossLauncher : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject zapperMissile;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform debugTarget;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> targetList;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> missileList;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform launchPoint;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BossController bossController;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator rescanTargets;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isActive;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xA13D8C", Offset = "0xA13D8C", VA = "0xA13D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xA13E64", Offset = "0xA13E64", VA = "0xA13E64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xA13F38", Offset = "0xA13F38", VA = "0xA13F38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xA1400C", Offset = "0xA1400C", VA = "0xA1400C")]
	private void DestroyerDestroy(GameObject destroyObject)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xA14188", Offset = "0xA14188", VA = "0xA14188")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA14560", Offset = "0xA14560", VA = "0xA14560")]
	[ContextMenu("DebugLogMissiles")]
	private void DebugLogMissiles()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xA142A4", Offset = "0xA142A4", VA = "0xA142A4")]
	public void AddTarget(Transform _transform, bool _isGlued)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xA146FC", Offset = "0xA146FC", VA = "0xA146FC")]
	private void CheckTargetsMissiles()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xA1494C", Offset = "0xA1494C", VA = "0xA1494C")]
	public BossLauncher()
	{
	}
}
[Token(Token = "0x200007E")]
public class BossLimits : MonoBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> leftCuffs;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Glue> rightCuffs;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool limitsOff;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject limits;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int sidesRemoved;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelDirector_C3333_Resetto levelController;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xA1495C", Offset = "0xA1495C", VA = "0xA1495C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xA149DC", Offset = "0xA149DC", VA = "0xA149DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xA14A5C", Offset = "0xA14A5C", VA = "0xA14A5C")]
	public void DebugKillLimits()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xA14BD4", Offset = "0xA14BD4", VA = "0xA14BD4")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xA14C88", Offset = "0xA14C88", VA = "0xA14C88")]
	private void CheckBurnoutSide(List<Glue> side)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xA14E78", Offset = "0xA14E78", VA = "0xA14E78")]
	public BossLimits()
	{
	}
}
[Token(Token = "0x200007F")]
public class BubbleIconVisibility : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool iconHidden;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iconToHide;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xA14E80", Offset = "0xA14E80", VA = "0xA14E80")]
	public static void ToggleIcons()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xA14F78", Offset = "0xA14F78", VA = "0xA14F78")]
	public BubbleIconVisibility()
	{
	}
}
[Token(Token = "0x2000080")]
public class BubbleTextTransitionFader : MonoBehaviour
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] textMeshes;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] fadeMaterials;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color vertexColor;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string colorProp;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xA14F80", Offset = "0xA14F80", VA = "0xA14F80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA14F84", Offset = "0xA14F84", VA = "0xA14F84")]
	private void SetFade()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA15108", Offset = "0xA15108", VA = "0xA15108")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA15168", Offset = "0xA15168", VA = "0xA15168")]
	public BubbleTextTransitionFader()
	{
	}
}
[Token(Token = "0x2000081")]
public class BurnoutAttachedToKinematic : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glued myGlued;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool connectedToMe;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool connectedIsKinematic;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xA151C0", Offset = "0xA151C0", VA = "0xA151C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA151C4", Offset = "0xA151C4", VA = "0xA151C4")]
	private void CheckGlued()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA15274", Offset = "0xA15274", VA = "0xA15274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA152F4", Offset = "0xA152F4", VA = "0xA152F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA15374", Offset = "0xA15374", VA = "0xA15374")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA15594", Offset = "0xA15594", VA = "0xA15594")]
	public BurnoutAttachedToKinematic()
	{
	}
}
[Token(Token = "0x2000082")]
public class Drawing : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mRenderer;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material newMat;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color col;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float val;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject alarmSFX;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Joint myJoint;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA1559C", Offset = "0xA1559C", VA = "0xA1559C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA1561C", Offset = "0xA1561C", VA = "0xA1561C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xA1569C", Offset = "0xA1569C", VA = "0xA1569C")]
	private void OnGrab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA15784", Offset = "0xA15784", VA = "0xA15784")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA157D8", Offset = "0xA157D8", VA = "0xA157D8")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xA15860", Offset = "0xA15860", VA = "0xA15860")]
	public void TellPolaJoint(Joint _polaJoint)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xA15868", Offset = "0xA15868", VA = "0xA15868")]
	public void CreateDrawing(Texture2D _drawing)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA15964", Offset = "0xA15964", VA = "0xA15964")]
	public Drawing()
	{
	}
}
[Token(Token = "0x2000083")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fov;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float orthoSize;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraPositionProxyTransform;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform cameraTargetProxyTransform;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform playerTransform;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform targetTransform;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform camTrans;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 camPosOffset;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 cameraTargetOffset;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 camPosOffsetStore;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 cameraTargetOffsetStore;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 camDiff;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 targetDiff;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float followSpeedCamera;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float followSpeedTarget;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float camDist;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float startFov;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float distanceFactor;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool playerOrthoSizeTracking;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ratioScale;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform[] targets;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int currentTarget;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FollowCamera _instance;

	[Token(Token = "0x1700002A")]
	public static FollowCamera Instance
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xA1596C", Offset = "0xA1596C", VA = "0xA1596C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA15AF8", Offset = "0xA15AF8", VA = "0xA15AF8")]
	private void NextTarget()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xA15B48", Offset = "0xA15B48", VA = "0xA15B48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA15C90", Offset = "0xA15C90", VA = "0xA15C90")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA15E78", Offset = "0xA15E78", VA = "0xA15E78")]
	public void SnapCameraToTargets()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xA15FE0", Offset = "0xA15FE0", VA = "0xA15FE0")]
	public void RemoveOffset()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xA15FEC", Offset = "0xA15FEC", VA = "0xA15FEC")]
	public void RemoveOffsetFull()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xA15FFC", Offset = "0xA15FFC", VA = "0xA15FFC")]
	public void SetOffsetCamPositionProxy(Vector3 vec)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xA16050", Offset = "0xA16050", VA = "0xA16050")]
	public void UnlocksCam()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xA1606C", Offset = "0xA1606C", VA = "0xA1606C")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x2000084")]
public class LookAtLerp : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turnSpeed;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distance;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera cam;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFactor;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool changeFOV;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool useConstructionManagerTarget;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool pureLookAt;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LookAtLerp _instance;

	[Token(Token = "0x1700002B")]
	public static LookAtLerp Instance
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xA160B0", Offset = "0xA160B0", VA = "0xA160B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xA1623C", Offset = "0xA1623C", VA = "0xA1623C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xA16448", Offset = "0xA16448", VA = "0xA16448")]
	public void NewTarget(Collider _collider)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xA16288", Offset = "0xA16288", VA = "0xA16288")]
	private void SelectConstructionManagerTarget()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xA164FC", Offset = "0xA164FC", VA = "0xA164FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xA167E4", Offset = "0xA167E4", VA = "0xA167E4")]
	public LookAtLerp()
	{
	}
}
[Token(Token = "0x2000085")]
public class LookAtVRCamera : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform lookAtCamera;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 posOffset;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool pitchLock;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool rollLock;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool useMinHeight;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minHeight;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion q;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xA16804", Offset = "0xA16804", VA = "0xA16804")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xA16828", Offset = "0xA16828", VA = "0xA16828")]
	private void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xA16A8C", Offset = "0xA16A8C", VA = "0xA16A8C")]
	public LookAtVRCamera()
	{
	}
}
[Token(Token = "0x2000086")]
public class Polaroid : MonoBehaviour
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture camTex;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mRenderer;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D screenShot;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material newMat;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color col;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float val;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float developInc;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Joint myJoint;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOverlay;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isIntro;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D[] stars;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color32[] pix;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numStars;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xA16A9C", Offset = "0xA16A9C", VA = "0xA16A9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xA16B1C", Offset = "0xA16B1C", VA = "0xA16B1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xA16B9C", Offset = "0xA16B9C", VA = "0xA16B9C")]
	private void OnGrab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xA16C84", Offset = "0xA16C84", VA = "0xA16C84")]
	public void TellPolaJoint(Joint _polaJoint)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xA16C8C", Offset = "0xA16C8C", VA = "0xA16C8C")]
	public void CreatePolaroid(bool _showOverlays, bool _isIntro, Camera _photoCamera)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xA16F3C", Offset = "0xA16F3C", VA = "0xA16F3C")]
	private void SaveToLevel(bool _isIntro, bool isFreeCamera = false)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xA170DC", Offset = "0xA170DC", VA = "0xA170DC")]
	private string GetSavePath()
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xA16F40", Offset = "0xA16F40", VA = "0xA16F40")]
	private void DrawImage()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xA170E4", Offset = "0xA170E4", VA = "0xA170E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xA1715C", Offset = "0xA1715C", VA = "0xA1715C")]
	public Polaroid()
	{
	}
}
[Token(Token = "0x2000087")]
public class SpawnConstructionCamera : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject constructionCameraPrefab;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xA17170", Offset = "0xA17170", VA = "0xA17170")]
	public SpawnConstructionCamera()
	{
	}
}
[Token(Token = "0x2000088")]
public class SpawnPolaroidImage : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionValidationPhotoCamera vCamera;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject polaPrefab;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform polaAttach;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HingeJoint hingeJoint;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xA17178", Offset = "0xA17178", VA = "0xA17178")]
	public void SpawnPolaroid(bool _showOverlays, bool useJoints = true, bool isIntro = false)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xA17544", Offset = "0xA17544", VA = "0xA17544")]
	public void DestroyJoint()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xA17548", Offset = "0xA17548", VA = "0xA17548")]
	public SpawnPolaroidImage()
	{
	}
}
[Token(Token = "0x2000089")]
public class SpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fov;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xA17550", Offset = "0xA17550", VA = "0xA17550")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xA175A8", Offset = "0xA175A8", VA = "0xA175A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xA175CC", Offset = "0xA175CC", VA = "0xA175CC")]
	public SpectatorCamera()
	{
	}
}
[Token(Token = "0x200008A")]
public class CameraColliderFrustrum : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionValidationPhotoCamera validationCamera;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xA175DC", Offset = "0xA175DC", VA = "0xA175DC", Slot = "4")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xA178A0", Offset = "0xA178A0", VA = "0xA178A0", Slot = "5")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xA17A98", Offset = "0xA17A98", VA = "0xA17A98")]
	public CameraColliderFrustrum()
	{
	}
}
[Token(Token = "0x200008B")]
public class CameraDisplayController : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <Blink>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraDisplayController <>4__this;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <s>5__2;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xA17EFC", Offset = "0xA17EFC", VA = "0xA17EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0xA17F44", Offset = "0xA17F44", VA = "0xA17F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xA17DFC", Offset = "0xA17DFC", VA = "0xA17DFC")]
		[DebuggerHidden]
		public <Blink>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xA17E2C", Offset = "0xA17E2C", VA = "0xA17E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xA17E30", Offset = "0xA17E30", VA = "0xA17E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xA17F04", Offset = "0xA17F04", VA = "0xA17F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CompletionDial;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LedON;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LedOFF;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro text;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool on;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro textTargets;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro textCompletion;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro textTentacles;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GameUI;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isBlinking;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Sequence seq;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string targetText;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xA17AA0", Offset = "0xA17AA0", VA = "0xA17AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xA17BE4", Offset = "0xA17BE4", VA = "0xA17BE4")]
	public void SetDigit(int A, int B)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xA17CBC", Offset = "0xA17CBC", VA = "0xA17CBC")]
	public void ToggleUI(bool UI)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xA17B10", Offset = "0xA17B10", VA = "0xA17B10")]
	public void SetDial(float t)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA17CDC", Offset = "0xA17CDC", VA = "0xA17CDC")]
	public void SetLed(bool state)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA17D24", Offset = "0xA17D24", VA = "0xA17D24")]
	public void BlinkLed(bool on)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA17D88", Offset = "0xA17D88", VA = "0xA17D88")]
	[IteratorStateMachine(typeof(<Blink>d__18))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA17E24", Offset = "0xA17E24", VA = "0xA17E24")]
	public CameraDisplayController()
	{
	}
}
[Token(Token = "0x200008D")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FadeController fadeController;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fadeControllerPrefab;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color targetColor;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color titleColor;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA17F4C", Offset = "0xA17F4C", VA = "0xA17F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA180B0", Offset = "0xA180B0", VA = "0xA180B0")]
	public void TransitionFade(bool toTitle, float _duration, float _delay = 0f)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA1814C", Offset = "0xA1814C", VA = "0xA1814C")]
	public void DoFade(Color _color, float _duration, float _delay = 0f)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA1821C", Offset = "0xA1821C", VA = "0xA1821C")]
	private void FadeTo()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA1824C", Offset = "0xA1824C", VA = "0xA1824C")]
	public void SetColor(Color _color)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA18268", Offset = "0xA18268", VA = "0xA18268")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x200008E")]
public class CameraSmooth : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cameraTarget;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cameraSelf;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool enableSmooth;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rollLock;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool pitchLock;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int fov;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float XRotationOffset;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform helperTrans;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float lerpPositionRateStatic;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float lerpRotationRateStatic;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool smoothCamEnabled;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FlyCam flyCam;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform originalCameraTarget;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool flyCamActive;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xA182C0", Offset = "0xA182C0", VA = "0xA182C0")]
	public void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA18804", Offset = "0xA18804", VA = "0xA18804")]
	public void DestroySmoothCamera()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA188D0", Offset = "0xA188D0", VA = "0xA188D0")]
	[ContextMenu("ToggleFlyCam")]
	public void ToggleFlyCam()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA18984", Offset = "0xA18984", VA = "0xA18984")]
	public void ResetFlyCamPosition()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA186CC", Offset = "0xA186CC", VA = "0xA186CC")]
	public void SetFlyCam(bool active)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA18A10", Offset = "0xA18A10", VA = "0xA18A10")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA18E48", Offset = "0xA18E48", VA = "0xA18E48")]
	public CameraSmooth()
	{
	}
}
[Token(Token = "0x200008F")]
public class CameraSurfaceFX : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isUnderWater;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform trans;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color underWaterColor;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distanceToSurface;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA18E60", Offset = "0xA18E60", VA = "0xA18E60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA18F50", Offset = "0xA18F50", VA = "0xA18F50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA18FDC", Offset = "0xA18FDC", VA = "0xA18FDC")]
	private void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA18FFC", Offset = "0xA18FFC", VA = "0xA18FFC")]
	public static void UnderwaterDOF(bool which)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA190BC", Offset = "0xA190BC", VA = "0xA190BC")]
	public static void UnderWaterSFX(bool _which)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA19110", Offset = "0xA19110", VA = "0xA19110")]
	public CameraSurfaceFX()
	{
	}
}
[Token(Token = "0x2000090")]
public class CarryOver_base : MonoBehaviour
{
	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA19118", Offset = "0xA19118", VA = "0xA19118", Slot = "4")]
	public virtual void CleanUpStart()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA1917C", Offset = "0xA1917C", VA = "0xA1917C", Slot = "5")]
	public virtual void CleanUpEnd()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA19220", Offset = "0xA19220", VA = "0xA19220")]
	public CarryOver_base()
	{
	}
}
[Token(Token = "0x2000091")]
public class CarryOver_Human : CarryOver_base
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA19228", Offset = "0xA19228", VA = "0xA19228")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA19280", Offset = "0xA19280", VA = "0xA19280", Slot = "4")]
	public override void CleanUpStart()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xA19300", Offset = "0xA19300", VA = "0xA19300", Slot = "5")]
	public override void CleanUpEnd()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA19358", Offset = "0xA19358", VA = "0xA19358")]
	public CarryOver_Human()
	{
	}
}
[Token(Token = "0x2000092")]
public class CarryOver_SingleMagnet : CarryOver_base
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glue magnet;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA19360", Offset = "0xA19360", VA = "0xA19360")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA19438", Offset = "0xA19438", VA = "0xA19438", Slot = "4")]
	public override void CleanUpStart()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA19504", Offset = "0xA19504", VA = "0xA19504", Slot = "5")]
	public override void CleanUpEnd()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA195EC", Offset = "0xA195EC", VA = "0xA195EC")]
	public CarryOver_SingleMagnet()
	{
	}
}
[Token(Token = "0x2000093")]
public class ChangeBreakforce : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float breakForce;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xA195F4", Offset = "0xA195F4", VA = "0xA195F4")]
	public void ChangeForce()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA1967C", Offset = "0xA1967C", VA = "0xA1967C")]
	public ChangeBreakforce()
	{
	}
}
[Token(Token = "0x2000094")]
public class ChattyHumans : MonoBehaviour
{
	[Token(Token = "0x2000095")]
	public enum State
	{
		[Token(Token = "0x4000317")]
		chat,
		[Token(Token = "0x4000318")]
		impatient,
		[Token(Token = "0x4000319")]
		annoyed
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State chatState;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isEndgame;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> chatList;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int chatIndex;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cooldownStart;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int temperLimit;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int temper;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool doesEndgameLines;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool stopTalking;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool smallChanceOfNonEndgame;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float chanceOfTalking;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool noChitChat;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int annoyed;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA19690", Offset = "0xA19690", VA = "0xA19690")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xA1972C", Offset = "0xA1972C", VA = "0xA1972C")]
	private void GetMe()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA197DC", Offset = "0xA197DC", VA = "0xA197DC")]
	private void GetLines()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA19B80", Offset = "0xA19B80", VA = "0xA19B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xA19CB8", Offset = "0xA19CB8", VA = "0xA19CB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xA19DE8", Offset = "0xA19DE8", VA = "0xA19DE8")]
	private void SimTap()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA19E18", Offset = "0xA19E18", VA = "0xA19E18", Slot = "4")]
	public virtual void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA19F44", Offset = "0xA19F44", VA = "0xA19F44")]
	private void ChatWithPlayer()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA1A11C", Offset = "0xA1A11C", VA = "0xA1A11C", Slot = "5")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA1A1A0", Offset = "0xA1A1A0", VA = "0xA1A1A0")]
	public ChattyHumans()
	{
	}
}
[Token(Token = "0x2000096")]
public class CityReplayLabel : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject backToCity;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backToReplay;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA1A1BC", Offset = "0xA1A1BC", VA = "0xA1A1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA1A1C0", Offset = "0xA1A1C0", VA = "0xA1A1C0")]
	private void Init()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA1A2B4", Offset = "0xA1A2B4", VA = "0xA1A2B4")]
	public CityReplayLabel()
	{
	}
}
[Token(Token = "0x2000097")]
public class CollisionBase : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	public delegate void CollisionDictChangedDelegate(Rigidbody rb, bool added = true, string baseID = "");

	[Token(Token = "0x2000099")]
	public delegate void CollisionDictChangedObjectDelegate(Rigidbody rb, bool added = true, string baseID = "");

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> collisionsListNonRB;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string collisionBaseID;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool excludeStaticRBs;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool ignoreTriggers;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool useIgnoreCategory;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<CategoryDefinition> ignoreCategory;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useIgnoreRBs;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> ignoreRBs;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool trackRBs;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool trackColliders;

	[Token(Token = "0x14000006")]
	public static event CollisionDictChangedDelegate OnCollisionDictChanged
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xA1A2BC", Offset = "0xA1A2BC", VA = "0xA1A2BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA1A374", Offset = "0xA1A374", VA = "0xA1A374")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event CollisionDictChangedObjectDelegate OnCollisionDictObjectChanged
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA110BC", Offset = "0xA110BC", VA = "0xA110BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA111DC", Offset = "0xA111DC", VA = "0xA111DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA1A42C", Offset = "0xA1A42C", VA = "0xA1A42C", Slot = "4")]
	public virtual void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA1A430", Offset = "0xA1A430", VA = "0xA1A430", Slot = "5")]
	public virtual void CollisionDictChangedNonRB(Collider col, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA1A434", Offset = "0xA1A434", VA = "0xA1A434", Slot = "6")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA1A924", Offset = "0xA1A924", VA = "0xA1A924", Slot = "7")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xA0E884", Offset = "0xA0E884", VA = "0xA0E884")]
	public CollisionBase()
	{
	}
}
[Token(Token = "0x200009A")]
public class CollisionColliderBase : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> colliderList;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int totalCollisions;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CategoryDefinition> ignoreCategory;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Rigidbody> ignoreRBs;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xA1AE38", Offset = "0xA1AE38", VA = "0xA1AE38", Slot = "4")]
	public virtual void CollisionDictChanged(Collision collision, bool added = true)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA1AE3C", Offset = "0xA1AE3C", VA = "0xA1AE3C")]
	private void CleanList()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA1AF4C", Offset = "0xA1AF4C", VA = "0xA1AF4C", Slot = "5")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA1B11C", Offset = "0xA1B11C", VA = "0xA1B11C", Slot = "6")]
	public virtual void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA1B2F0", Offset = "0xA1B2F0", VA = "0xA1B2F0")]
	public CollisionColliderBase()
	{
	}
}
[Token(Token = "0x200009B")]
public class CollisionTest : MonoBehaviour
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody colRB;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA1B3C8", Offset = "0xA1B3C8", VA = "0xA1B3C8")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA1B4E8", Offset = "0xA1B4E8", VA = "0xA1B4E8")]
	public void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA1B608", Offset = "0xA1B608", VA = "0xA1B608")]
	public CollisionTest()
	{
	}
}
[Token(Token = "0x200009C")]
public class ConnectedJointBase : GlueConnections
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Joint connections")]
	public ConnectedJointBase connectedJointBase;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool hasConnectedJoint;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Joint connectedJointJoint;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool isMainJoint;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA1B610", Offset = "0xA1B610", VA = "0xA1B610")]
	public ConnectedJointBase()
	{
	}
}
[Token(Token = "0x200009D")]
public class AchievementConnections : MonoBehaviour
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GlueConnections myConnection;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EntityDefinition> forbiddenEntities;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Rigidbody> forbiddenRBs;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool locked;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool conditionMet;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Achievement achievement;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA1B618", Offset = "0xA1B618", VA = "0xA1B618")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA1B6C8", Offset = "0xA1B6C8", VA = "0xA1B6C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA1B804", Offset = "0xA1B804", VA = "0xA1B804")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA1B928", Offset = "0xA1B928", VA = "0xA1B928")]
	private void LevelComplete()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA1B9B4", Offset = "0xA1B9B4", VA = "0xA1B9B4")]
	private void ChainCheck(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA1BC18", Offset = "0xA1BC18", VA = "0xA1BC18")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA1BC28", Offset = "0xA1BC28", VA = "0xA1BC28")]
	public AchievementConnections()
	{
	}
}
[Token(Token = "0x200009E")]
public class AnalogWheelDriver : MonoBehaviour
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JointMotor m;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastAngle;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float diff;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float velocity;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startAngle;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool snapBack;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float snapBackFactor;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool useLimits;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float limit;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float setSpeed;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float motorForce;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ID;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minVelocity;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float stepIncPowFactor;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertedVelocity;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool rollOut;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float speedVal;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float powFactor;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA1BC30", Offset = "0xA1BC30", VA = "0xA1BC30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA1BCB0", Offset = "0xA1BCB0", VA = "0xA1BCB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA1BD30", Offset = "0xA1BD30", VA = "0xA1BD30")]
	public void OnLeverUpdate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA1BDE0", Offset = "0xA1BDE0", VA = "0xA1BDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA1BD48", Offset = "0xA1BD48", VA = "0xA1BD48")]
	public void SetSpeed(float _speed, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA1BF48", Offset = "0xA1BF48", VA = "0xA1BF48")]
	private void SnapBack()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xA1C034", Offset = "0xA1C034", VA = "0xA1C034")]
	public AnalogWheelDriver()
	{
	}
}
[Token(Token = "0x200009F")]
public class AutoSpawn : CreateVisualTarget
{
	[Token(Token = "0x20000A0")]
	public delegate void ObjectSpawned(GameObject spawnObject, AutoSpawn spawner);

	[Token(Token = "0x20000A1")]
	public enum ID
	{
		[Token(Token = "0x4000370")]
		spawner0,
		[Token(Token = "0x4000371")]
		spawner1,
		[Token(Token = "0x4000372")]
		spawner2,
		[Token(Token = "0x4000373")]
		spawner3,
		[Token(Token = "0x4000374")]
		spawner4,
		[Token(Token = "0x4000375")]
		spawner5
	}

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Collider> colliders;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("WARNING: can only have one prefab for penetration area reasons")]
	public GameObject[] myPrefab;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float wait;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waitCounter;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool SpawnAsIs;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool useWeightLabels;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool useSpawnerRotation;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool randomRotation;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool makeKinematicAfterSpawn;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int MaxElements;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int spawnedElements;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float initialSpawnWait;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int nextSpawn;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject spawnGameObject;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool spawnerInactive;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool showGhost;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool recoverSunkObjects;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool released;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public ID spawnerID;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject editorSpawnResourcesGameObject;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool autoSpawn;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool autoSpawnFirst;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool buttonPressed;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	public bool overrideFloat;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float secondsToFloat;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float timeToFullSink;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EntityDefinition currentEntityDef;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Entity sunkThing;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int spawnObjectColliders;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int collidersCounted;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Rigidbody attachedRB;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool justSpawned;

	[Token(Token = "0x14000008")]
	public static event ObjectSpawned OnObjectSpawned
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xA1C06C", Offset = "0xA1C06C", VA = "0xA1C06C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xA1C124", Offset = "0xA1C124", VA = "0xA1C124")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA1C1DC", Offset = "0xA1C1DC", VA = "0xA1C1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA1C3F8", Offset = "0xA1C3F8", VA = "0xA1C3F8")]
	private void RemoveLegacyElements()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA1C628", Offset = "0xA1C628", VA = "0xA1C628")]
	private void SpawnerGhost()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA1C6E0", Offset = "0xA1C6E0", VA = "0xA1C6E0")]
	private void EditorCreateGhost()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA1C510", Offset = "0xA1C510", VA = "0xA1C510")]
	private void SelectNextSpawn()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xA1C880", Offset = "0xA1C880", VA = "0xA1C880")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xA1CB70", Offset = "0xA1CB70", VA = "0xA1CB70")]
	private void OnGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA1CB74", Offset = "0xA1CB74", VA = "0xA1CB74")]
	[ContextMenu("SpawnManual")]
	public void ManualSpawnRequest()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA1CB80", Offset = "0xA1CB80", VA = "0xA1CB80", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xA1CCA8", Offset = "0xA1CCA8", VA = "0xA1CCA8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xA1CDD0", Offset = "0xA1CDD0", VA = "0xA1CDD0")]
	private void WaterDeactivate(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xA1CF40", Offset = "0xA1CF40", VA = "0xA1CF40")]
	public void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA1C978", Offset = "0xA1C978", VA = "0xA1C978")]
	private void CheckAreBusy()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA1D0F4", Offset = "0xA1D0F4", VA = "0xA1D0F4")]
	private void SpawnerDepleted()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA1D104", Offset = "0xA1D104", VA = "0xA1D104")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA1D678", Offset = "0xA1D678", VA = "0xA1D678")]
	private void SetFloatingValues(GameObject go)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA1D584", Offset = "0xA1D584", VA = "0xA1D584")]
	private void FloatingCheck(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA1D738", Offset = "0xA1D738", VA = "0xA1D738")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA1D8B0", Offset = "0xA1D8B0", VA = "0xA1D8B0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA1D940", Offset = "0xA1D940", VA = "0xA1D940")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA1D978", Offset = "0xA1D978", VA = "0xA1D978")]
	public AutoSpawn()
	{
	}
}
[Token(Token = "0x20000A2")]
public class BlockTargets : MonoBehaviour
{
	[Token(Token = "0x6000310")]
	[Address(RVA = "0xA1DB34", Offset = "0xA1DB34", VA = "0xA1DB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xA1DC70", Offset = "0xA1DC70", VA = "0xA1DC70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xA1DCC0", Offset = "0xA1DCC0", VA = "0xA1DCC0")]
	public BlockTargets()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Cannon : MonoBehaviour
{
	[Token(Token = "0x20000A4")]
	public delegate void OnCannonEmptyDelegate();

	[Token(Token = "0x20000A5")]
	public delegate void OnCannonFiredDelegate(GameObject _go);

	[Token(Token = "0x20000A6")]
	[CompilerGenerated]
	private sealed class <CountDown>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cannon <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000330")]
			[Address(RVA = "0xA1EC98", Offset = "0xA1EC98", VA = "0xA1EC98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0xA1ECE0", Offset = "0xA1ECE0", VA = "0xA1ECE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xA1E13C", Offset = "0xA1E13C", VA = "0xA1E13C")]
		[DebuggerHidden]
		public <CountDown>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xA1EB7C", Offset = "0xA1EB7C", VA = "0xA1EB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0xA1EB80", Offset = "0xA1EB80", VA = "0xA1EB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0xA1ECA0", Offset = "0xA1ECA0", VA = "0xA1ECA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A7")]
	[CompilerGenerated]
	private sealed class <Shoot>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cannon <>4__this;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <barrelRotTime>5__2;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0xA1F058", Offset = "0xA1F058", VA = "0xA1F058", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000338")]
			[Address(RVA = "0xA1F0A0", Offset = "0xA1F0A0", VA = "0xA1F0A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xA1E4DC", Offset = "0xA1E4DC", VA = "0xA1E4DC")]
		[DebuggerHidden]
		public <Shoot>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xA1ECE8", Offset = "0xA1ECE8", VA = "0xA1ECE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xA1ECEC", Offset = "0xA1ECEC", VA = "0xA1ECEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xA1F060", Offset = "0xA1F060", VA = "0xA1F060", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string CannonBoom;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string Klaxxon;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform Swivel;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform barrel;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform spawner;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] cannonBall;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool fireProjectilesRandomly;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int cannonBallIdx;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float swivelMax;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float barrelMax;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float barrelMin;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float velocityMin;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float velocityMax;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool autoStart;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int maxShots;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float waitBetweenShots;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isShooting;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro shots;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float signPostDirectionTime;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool noExplosion;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAngularVelocity;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float initWait;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 rotOffset;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool blocked;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int countDown;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int maxCountDown;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float barrelRot;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentProjectile;

	[Token(Token = "0x1700002E")]
	public int ShotsFired
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xA1DFB0", Offset = "0xA1DFB0", VA = "0xA1DFB0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xA1DFB8", Offset = "0xA1DFB8", VA = "0xA1DFB8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event OnCannonEmptyDelegate OnCannonEmpty
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xA1DCC8", Offset = "0xA1DCC8", VA = "0xA1DCC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xA1DD80", Offset = "0xA1DD80", VA = "0xA1DD80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event OnCannonFiredDelegate OnCannonFired
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xA1DE38", Offset = "0xA1DE38", VA = "0xA1DE38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xA1DEF4", Offset = "0xA1DEF4", VA = "0xA1DEF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA1DFC0", Offset = "0xA1DFC0", VA = "0xA1DFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA1E098", Offset = "0xA1E098", VA = "0xA1E098")]
	public void ShootCountdown()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA1E0C8", Offset = "0xA1E0C8", VA = "0xA1E0C8")]
	[IteratorStateMachine(typeof(<CountDown>d__41))]
	private IEnumerator CountDown()
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA1E164", Offset = "0xA1E164", VA = "0xA1E164")]
	public void StartShooting(bool _force = false)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA1E288", Offset = "0xA1E288", VA = "0xA1E288")]
	[ContextMenu("ToggleShooting")]
	public void ToggleShooting()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA1E3D0", Offset = "0xA1E3D0", VA = "0xA1E3D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA1E450", Offset = "0xA1E450", VA = "0xA1E450")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA1E4D0", Offset = "0xA1E4D0", VA = "0xA1E4D0")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA1E214", Offset = "0xA1E214", VA = "0xA1E214")]
	[IteratorStateMachine(typeof(<Shoot>d__48))]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA1E504", Offset = "0xA1E504", VA = "0xA1E504")]
	private void SpawnProjectile()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA1E2D0", Offset = "0xA1E2D0", VA = "0xA1E2D0")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA1E944", Offset = "0xA1E944", VA = "0xA1E944")]
	public Cannon()
	{
	}
}
[Token(Token = "0x20000A8")]
public class CannonShotCameraTarget : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool trackCannonShots;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xA1F0A8", Offset = "0xA1F0A8", VA = "0xA1F0A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xA1F120", Offset = "0xA1F120", VA = "0xA1F120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xA1F198", Offset = "0xA1F198", VA = "0xA1F198")]
	private void CannonFired(GameObject _go)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xA1F24C", Offset = "0xA1F24C", VA = "0xA1F24C")]
	public CannonShotCameraTarget()
	{
	}
}
[Token(Token = "0x20000A9")]
public class CollisionsCatcher : MonoBehaviour
{
	[Token(Token = "0x20000AA")]
	public delegate void OnCollidingDelegate(bool _isColliding, Rigidbody _rb);

	[Token(Token = "0x20000AB")]
	public delegate void OnDisqualifiedDelegate(Rigidbody _rb);

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable grabbable;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inWater;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool wasInWater;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool hasCollided;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool ignoreTentacleCollisions;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hasExploded;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool cannotExplode;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool isDisqualified;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool wasGrabbed;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool allowWaterCollision;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool allowOtherCollision;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x1400000B")]
	public event OnCollidingDelegate OnColliding
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xA1F25C", Offset = "0xA1F25C", VA = "0xA1F25C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xA1F2F8", Offset = "0xA1F2F8", VA = "0xA1F2F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event OnDisqualifiedDelegate OnDisqualified
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xA1F394", Offset = "0xA1F394", VA = "0xA1F394")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xA1F44C", Offset = "0xA1F44C", VA = "0xA1F44C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA1F504", Offset = "0xA1F504", VA = "0xA1F504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA1F5B8", Offset = "0xA1F5B8", VA = "0xA1F5B8")]
	private void CheckGrabbable()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA1F6D0", Offset = "0xA1F6D0", VA = "0xA1F6D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA1F7B8", Offset = "0xA1F7B8", VA = "0xA1F7B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA1F8A0", Offset = "0xA1F8A0", VA = "0xA1F8A0")]
	public bool GetIsDisqualified()
	{
		return default(bool);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA1F8A8", Offset = "0xA1F8A8", VA = "0xA1F8A8")]
	private void OnGrab(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA1F8BC", Offset = "0xA1F8BC", VA = "0xA1F8BC")]
	public void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA1F9B8", Offset = "0xA1F9B8", VA = "0xA1F9B8")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA1FA38", Offset = "0xA1FA38", VA = "0xA1FA38")]
	public int GetCollisions()
	{
		return default(int);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA1FA88", Offset = "0xA1FA88", VA = "0xA1FA88")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA1FCBC", Offset = "0xA1FCBC", VA = "0xA1FCBC")]
	private void OnCollisionEnter(Collision _collision)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xA1FCE8", Offset = "0xA1FCE8", VA = "0xA1FCE8")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xA1FE10", Offset = "0xA1FE10", VA = "0xA1FE10")]
	private void OnCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xA1FE3C", Offset = "0xA1FE3C", VA = "0xA1FE3C")]
	public CollisionsCatcher()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ConstructionCrane : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 speed;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotSpeed;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxVelocity;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRotVelocity;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftLimit;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightLimit;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float addOnX;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA200FC", Offset = "0xA200FC", VA = "0xA200FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA20154", Offset = "0xA20154", VA = "0xA20154")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA203CC", Offset = "0xA203CC", VA = "0xA203CC")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA203D4", Offset = "0xA203D4", VA = "0xA203D4")]
	public void SetRotation(float _speed)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA203E4", Offset = "0xA203E4", VA = "0xA203E4")]
	public ConstructionCrane()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ConstructionPanel : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] lamps;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite pending;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite done;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cameraHint;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastNum;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Timer timer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lastDone;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int lastSoundNumDone;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lastSoundNumDoneIncOnly;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cooldownTimer;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float cooldown;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 vfxPos;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform fireworksSpawn;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool suppressInitAudioEvents;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ConstructionPanel _instance;

	[Token(Token = "0x17000033")]
	public static ConstructionPanel Instance
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xA209E0", Offset = "0xA209E0", VA = "0xA209E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA203F8", Offset = "0xA203F8", VA = "0xA203F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA20430", Offset = "0xA20430", VA = "0xA20430")]
	public void LevelCompleteFX()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA204AC", Offset = "0xA204AC", VA = "0xA204AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA20580", Offset = "0xA20580", VA = "0xA20580")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA20654", Offset = "0xA20654", VA = "0xA20654")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA20670", Offset = "0xA20670", VA = "0xA20670")]
	private void TargetChanges(int _done, int _needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xA20950", Offset = "0xA20950", VA = "0xA20950")]
	private void PlayTargetDoneAudio()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA208AC", Offset = "0xA208AC", VA = "0xA208AC")]
	private void SetCameraHint()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xA207F8", Offset = "0xA207F8", VA = "0xA207F8")]
	private void SetLamps(int _done, int _needed)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA20B6C", Offset = "0xA20B6C", VA = "0xA20B6C")]
	public ConstructionPanel()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ConstructionResources : MonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ConstructionResources _instance;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material targetOutline;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material targetOutlineOK;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material removeOutline;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material targetOutlineEntityOK;

	[Token(Token = "0x17000034")]
	public static ConstructionResources Instance
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xA20B88", Offset = "0xA20B88", VA = "0xA20B88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xA20D14", Offset = "0xA20D14", VA = "0xA20D14")]
	public ConstructionResources()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ConstructionRocket : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject thrustObjects;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool boosterOn;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("needs to be set if burntime is -1 for factor calc")]
	public float forceCap;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentForce;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fullPowerReachedFactor;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float inc;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useGyro;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 target;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useLaunchOrientationAsTarget;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float uprightTorque;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxBurnTime;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float burnTime;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool explodeOnBurnout;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem explosionFX;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int delay;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool hasDelay;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable grabbable;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isArmed;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject blink;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material blinkMat;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material originalMat;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer blinkMeshRenderer;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool inWater;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool initialised;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool launchAssist;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float maxVelocity;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float forceFactor;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform ExhaustScale;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 minScale;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 maxScale;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minScaleExplosion;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float maxScaleExplosion;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion rot;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float minVel;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xAF6718", Offset = "0xAF6718", VA = "0xAF6718")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xAF68A4", Offset = "0xAF68A4", VA = "0xAF68A4")]
	private void SetArmed()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xAF6900", Offset = "0xAF6900", VA = "0xAF6900")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xAF6A8C", Offset = "0xAF6A8C", VA = "0xAF6A8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xAF6C1C", Offset = "0xAF6C1C", VA = "0xAF6C1C")]
	private void EnterWater(bool _inWater)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xAF68E0", Offset = "0xAF68E0", VA = "0xAF68E0")]
	private void SetEngines(bool _which)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xAF6C70", Offset = "0xAF6C70", VA = "0xAF6C70")]
	public void ToggleBooster()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xAF6D0C", Offset = "0xAF6D0C", VA = "0xAF6D0C")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xAF6C50", Offset = "0xAF6C50", VA = "0xAF6C50")]
	public void SetBoosterOff()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xAF6D90", Offset = "0xAF6D90", VA = "0xAF6D90")]
	public void SetBooster()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xAF6D98", Offset = "0xAF6D98", VA = "0xAF6D98")]
	[ContextMenu("Unarm")]
	public void UnarmRocket()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xAF6DA0", Offset = "0xAF6DA0", VA = "0xAF6DA0")]
	[ContextMenu("Arm")]
	public void ArmRocket()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xAF6E0C", Offset = "0xAF6E0C", VA = "0xAF6E0C")]
	[ContextMenu("ArmAndStart")]
	public void ArmAndStart()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xAF6D1C", Offset = "0xAF6D1C", VA = "0xAF6D1C")]
	public void StartBooster()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xAF6C80", Offset = "0xAF6C80", VA = "0xAF6C80")]
	public void SetBooster(bool _mode = true)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xAF6E24", Offset = "0xAF6E24", VA = "0xAF6E24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xAF74C4", Offset = "0xAF74C4", VA = "0xAF74C4")]
	private void Explode()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xAF6E28", Offset = "0xAF6E28", VA = "0xAF6E28")]
	private void EngineBooster()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xAF772C", Offset = "0xAF772C", VA = "0xAF772C")]
	public ConstructionRocket()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ConstructionStabiliser : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	public enum StabilizeDirection
	{
		[Token(Token = "0x40003FE")]
		up,
		[Token(Token = "0x40003FF")]
		forward,
		[Token(Token = "0x4000400")]
		right
	}

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 target;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float uprightTorque;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StabilizeDirection stabilizeDirection;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion rot;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool stabiliseActive;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool easeOutForce;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool useGlueScale;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Glue glue;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float forceUsed;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ForceMode forceMode;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool onlyStabiliseOverVelocity;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float stabiliseVelocity;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float factor;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 quatTarget;

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xAF7780", Offset = "0xAF7780", VA = "0xAF7780")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xAF7878", Offset = "0xAF7878", VA = "0xAF7878")]
	public void SetStabilise(bool _which)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xAF7884", Offset = "0xAF7884", VA = "0xAF7884")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xAF7888", Offset = "0xAF7888", VA = "0xAF7888")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xAF7ADC", Offset = "0xAF7ADC", VA = "0xAF7ADC")]
	public ConstructionStabiliser()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ConstructionTarget : Entity
{
	[Token(Token = "0x20000B3")]
	public enum rotationAngle
	{
		[Token(Token = "0x4000448")]
		right,
		[Token(Token = "0x4000449")]
		up,
		[Token(Token = "0x400044A")]
		forward
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <WrongEntityBlink>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConstructionTarget <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0xAFC544", Offset = "0xAFC544", VA = "0xAFC544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A7")]
			[Address(RVA = "0xAFC58C", Offset = "0xAFC58C", VA = "0xAFC58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xAFB750", Offset = "0xAFB750", VA = "0xAFB750")]
		[DebuggerHidden]
		public <WrongEntityBlink>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xAFC474", Offset = "0xAFC474", VA = "0xAFC474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xAFC478", Offset = "0xAFC478", VA = "0xAFC478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xAFC54C", Offset = "0xAFC54C", VA = "0xAFC54C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<Rigidbody, List<Collider>> wrongEntityDict;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<Rigidbody, Grabbable> grabbables;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<Rigidbody, Entity> entities;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public TextMeshPro tm;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform attach;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool isPositionTarget;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Entity attachedEntity;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("---Setup:category needs to be set explicitly. not using myEntity.categoryDefinition")]
	public CategoryDefinition MyCategory;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useEntityCategory;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool locked;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("SET ON CORRECT")]
	public Entity triggerEntity;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public GameObject target;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int solutionScore;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool allowGrabbedComplete;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool doNotRegisterAsTarget;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	public bool ignoreIfInsideTarget;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	public bool doNotCountTowardsNeeded;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool noAutoInstancing;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[Header("---Positioning rules")]
	public bool allowMirroredCorrect;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool ignoreRotation;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public rotationAngle targetRotationAngle;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector3[] pointAngleVectors;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float rotationPrecision;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float distancePrecision;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool useGlueScale;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float glueScale;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float glueScaleTolerance;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public List<Entity> distanceRotationOK;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("---OOB")]
	public bool addToOOBDetection;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool doNotOOBConstructionTarget;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	[Header("---Photo rules")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool overwritePhotoRB;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Rigidbody targetRigidbodyForPhoto;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool isAutoCameraTarget;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool initialised;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	[Header("---Colliders")]
	private bool hasTargetCollider;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool useOverrideTrigger;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Collider overrideCollider;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider usedTargetCollider;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject successFX;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool solutionValueChangeOnDestroyTrackedEntity;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int collisionCount;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int targetValue;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int targetID;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float posDiff;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool tEntityIsGrabbed;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	private bool isPlacedPrecisely;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	private bool positionOK;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
	private bool rotationOK;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Entity lastEntity;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("---Feedback")]
	public bool playIndividualSound;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[EventRef]
	public string completeSFX;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool useOkFeedback;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float OKFeedbackScale;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool wrongEntityIndicator;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool hideVisual;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<Renderer> outlines;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("---After completion")]
	public bool makeKinematicOnComplete;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool forceToIdealPositionOnComplete;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool mergeWithRB;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool attachWithFixedJoint;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Rigidbody mergeRB;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Material[] sharedMaterials;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int count;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 forward;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 targetDir;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float angle;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int blinks;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool blockCheck;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xAF7AFC", Offset = "0xAF7AFC", VA = "0xAF7AFC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xAF7B24", Offset = "0xAF7B24", VA = "0xAF7B24", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xAF7B98", Offset = "0xAF7B98", VA = "0xAF7B98", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xAF7C0C", Offset = "0xAF7C0C", VA = "0xAF7C0C", Slot = "7")]
	public virtual void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xAF7F24", Offset = "0xAF7F24", VA = "0xAF7F24", Slot = "8")]
	public virtual void MyEntityDestroyed()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xAF7F28", Offset = "0xAF7F28", VA = "0xAF7F28", Slot = "9")]
	public virtual void ManualSetScore(int _which)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xAF7F30", Offset = "0xAF7F30", VA = "0xAF7F30", Slot = "10")]
	public virtual Rigidbody PhotoRB()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xAF7FC4", Offset = "0xAF7FC4", VA = "0xAF7FC4")]
	private bool IsInsideTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xAF80D0", Offset = "0xAF80D0", VA = "0xAF80D0")]
	private void DestroyInsideTarget()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xAF8154", Offset = "0xAF8154", VA = "0xAF8154")]
	private void DestroyInsideTargetEditor()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xAF82BC", Offset = "0xAF82BC", VA = "0xAF82BC", Slot = "11")]
	[ContextMenu("EditorSetTarget")]
	public virtual void EditorSetTarget()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xAF8348", Offset = "0xAF8348", VA = "0xAF8348")]
	private void AttachTargetVisual()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xAF87DC", Offset = "0xAF87DC", VA = "0xAF87DC")]
	private void DeleteStuff()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xAF9E44", Offset = "0xAF9E44", VA = "0xAF9E44")]
	[ContextMenu("SetDefaultOutlines")]
	private void SetDefaultOutlines()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xAF9E50", Offset = "0xAF9E50", VA = "0xAF9E50")]
	private void SetMaterialTo(Renderer mr, Material _material)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xAF9968", Offset = "0xAF9968", VA = "0xAF9968")]
	public void SetOutlines(bool showRenderer = true, int defaultOutline = 0)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xAF96FC", Offset = "0xAF96FC", VA = "0xAF96FC")]
	private void PrepareOutlines(UnityEngine.Object obj, bool showRenderer = true, bool defaultOutline = true)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xAF9420", Offset = "0xAF9420", VA = "0xAF9420")]
	private void TurnToTriggers(Collider col, bool compForced = false)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xAF9398", Offset = "0xAF9398", VA = "0xAF9398")]
	private void DoDestroy(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xAF86FC", Offset = "0xAF86FC", VA = "0xAF86FC")]
	private void DeleteAttach()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xAF9FE4", Offset = "0xAF9FE4", VA = "0xAF9FE4", Slot = "12")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xAFA5B4", Offset = "0xAFA5B4", VA = "0xAFA5B4")]
	private void CheckGrabbables()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xAFA788", Offset = "0xAFA788", VA = "0xAFA788")]
	private void SuccessActions()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xAFAB38", Offset = "0xAFAB38", VA = "0xAFAB38", Slot = "13")]
	public virtual int GetCorrectEntitiesGroup()
	{
		return default(int);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xAFAEF8", Offset = "0xAFAEF8", VA = "0xAFAEF8", Slot = "14")]
	public virtual int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xAFAF00", Offset = "0xAFAF00", VA = "0xAFAF00")]
	public void CreateDistanceRotationCheckEntitiesList()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xAFB6DC", Offset = "0xAFB6DC", VA = "0xAFB6DC")]
	[IteratorStateMachine(typeof(<WrongEntityBlink>d__96))]
	private IEnumerator WrongEntityBlink()
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xAFB778", Offset = "0xAFB778", VA = "0xAFB778")]
	private void StartBlinking()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xAFAEB8", Offset = "0xAFAEB8", VA = "0xAFAEB8")]
	public void IndividualSoundFeedback()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xAFAD54", Offset = "0xAFAD54", VA = "0xAFAD54")]
	public void SpawnOKFeedback(Vector3 _position)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xAFB818", Offset = "0xAFB818", VA = "0xAFB818", Slot = "15")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xAFBEE8", Offset = "0xAFBEE8", VA = "0xAFBEE8", Slot = "16")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xAFC210", Offset = "0xAFC210", VA = "0xAFC210")]
	public ConstructionTarget()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ConstructionTargetAngularVelocity : ConstructionTarget
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Grabbable grabbable;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<float> speeds;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float angularVelocity;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float val;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xAFC594", Offset = "0xAFC594", VA = "0xAFC594", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xAFC69C", Offset = "0xAFC69C", VA = "0xAFC69C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xAFCAC4", Offset = "0xAFCAC4", VA = "0xAFCAC4", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xAFCAC8", Offset = "0xAFCAC8", VA = "0xAFCAC8", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xAFCACC", Offset = "0xAFCACC", VA = "0xAFCACC")]
	public ConstructionTargetAngularVelocity()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ConstructionTargetBurnout : ConstructionTarget
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	private bool wasTriggered;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xAFCAD0", Offset = "0xAFCAD0", VA = "0xAFCAD0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xAFCADC", Offset = "0xAFCADC", VA = "0xAFCADC")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xAFCB5C", Offset = "0xAFCB5C", VA = "0xAFCB5C")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xAFCBDC", Offset = "0xAFCBDC", VA = "0xAFCBDC")]
	private void BurnoutEvent(Glue _glue)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xAFCF00", Offset = "0xAFCF00", VA = "0xAFCF00")]
	public ConstructionTargetBurnout()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ConstructionTargetCatch : ConstructionTarget
{
	[Token(Token = "0x20000B8")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	private bool wasTriggered;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool anyEntity;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	public bool takePicture;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool addTrail;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject trailPrefab;

	[Token(Token = "0x1400000D")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xAFCF04", Offset = "0xAFCF04", VA = "0xAFCF04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xAFCFBC", Offset = "0xAFCFBC", VA = "0xAFCFBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xAFD074", Offset = "0xAFD074", VA = "0xAFD074", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xAFD080", Offset = "0xAFD080", VA = "0xAFD080", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xAFD108", Offset = "0xAFD108", VA = "0xAFD108", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xAFD190", Offset = "0xAFD190", VA = "0xAFD190")]
	private void GrabEvent(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xAFD1BC", Offset = "0xAFD1BC", VA = "0xAFD1BC")]
	private void CheckCondition(GameObject _go)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xAFD3A4", Offset = "0xAFD3A4", VA = "0xAFD3A4")]
	public ConstructionTargetCatch()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ConstructionTargetClearArea : ConstructionTarget
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<Collider> colliders;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject visual;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<MeshRenderer> renderers;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool tentaclesAllowed;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xAFD50C", Offset = "0xAFD50C", VA = "0xAFD50C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xAFD5D8", Offset = "0xAFD5D8", VA = "0xAFD5D8")]
	private void GetRenderers()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xAFDA14", Offset = "0xAFDA14", VA = "0xAFDA14", Slot = "14")]
	public override int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xAFDA38", Offset = "0xAFDA38", VA = "0xAFDA38", Slot = "7")]
	public override void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xAFDBA0", Offset = "0xAFDBA0", VA = "0xAFDBA0")]
	private void SetState()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xAFD8BC", Offset = "0xAFD8BC", VA = "0xAFD8BC")]
	private void SetVisual()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xAFDBF8", Offset = "0xAFDBF8", VA = "0xAFDBF8", Slot = "15")]
	public override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xAFDDC0", Offset = "0xAFDDC0", VA = "0xAFDDC0", Slot = "16")]
	public override void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xAFDE6C", Offset = "0xAFDE6C", VA = "0xAFDE6C")]
	public ConstructionTargetClearArea()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ConstructionTargetCollider : MonoBehaviour
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider targetCollider;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xAFDEF8", Offset = "0xAFDEF8", VA = "0xAFDEF8")]
	public ConstructionTargetCollider()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ConstructionTargetConnectionBoosters : ConstructionTarget
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GlueConnections myConnection;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int connectionsRequired;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int grabbableCount;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public EntityDefinition requiredEntity;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<ConstructionRocket> boostersAttached;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ConstructionTargetManual boostersLaunchedTarget;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int frames;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ConstructionRocket booster;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int boostersLaunched;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xAFDF00", Offset = "0xAFDF00", VA = "0xAFDF00", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xAFE070", Offset = "0xAFE070", VA = "0xAFE070")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xAFDF20", Offset = "0xAFDF20", VA = "0xAFDF20")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xAFE114", Offset = "0xAFE114", VA = "0xAFE114", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xAFE1F8", Offset = "0xAFE1F8", VA = "0xAFE1F8", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xAFE2DC", Offset = "0xAFE2DC", VA = "0xAFE2DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xAFE3BC", Offset = "0xAFE3BC", VA = "0xAFE3BC")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xAFE764", Offset = "0xAFE764", VA = "0xAFE764")]
	public ConstructionTargetConnectionBoosters()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ConstructionTargetConnectionCount : ConstructionTarget
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Header("--Connection Rules")]
	public GlueConnections myConnection;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int connectionsRequired;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int grabbableCount;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public bool glueCounts;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
	public bool requireEntity;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<EntityDefinition> requiredEntities;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool createSeparateTargets;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool triggerOnce;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	[Header("only works for requiredEntities without count")]
	public bool invertRule;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
	public bool noConnectionsAllowed;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool hasHadConnections;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xAFE770", Offset = "0xAFE770", VA = "0xAFE770", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xAFE934", Offset = "0xAFE934", VA = "0xAFE934")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xAFE7C4", Offset = "0xAFE7C4", VA = "0xAFE7C4")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xAFE9D8", Offset = "0xAFE9D8", VA = "0xAFE9D8", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xAFEABC", Offset = "0xAFEABC", VA = "0xAFEABC", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xAFEBA0", Offset = "0xAFEBA0", VA = "0xAFEBA0")]
	private void NoConnectionAllowed(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xAFEC20", Offset = "0xAFEC20", VA = "0xAFEC20")]
	private void ChainCheck(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xAFEF78", Offset = "0xAFEF78", VA = "0xAFEF78")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xAFEF94", Offset = "0xAFEF94", VA = "0xAFEF94")]
	public ConstructionTargetConnectionCount()
	{
	}
}
[Token(Token = "0x20000BD")]
public class ConstructionTargetContainerRescue : ConstructionTarget
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform perimeter;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool perimeterWasOK;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xAFEFA8", Offset = "0xAFEFA8", VA = "0xAFEFA8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xAFEFAC", Offset = "0xAFEFAC", VA = "0xAFEFAC")]
	public void InitContainerRescue()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xAFF03C", Offset = "0xAFF03C", VA = "0xAFF03C")]
	public bool IsInWater()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xAFF058", Offset = "0xAFF058", VA = "0xAFF058")]
	private void CheckSolution()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xAFF098", Offset = "0xAFF098", VA = "0xAFF098")]
	private bool CheckPerimeter()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xAFF1F0", Offset = "0xAFF1F0", VA = "0xAFF1F0", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xAFF1F4", Offset = "0xAFF1F4", VA = "0xAFF1F4", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xAFF1F8", Offset = "0xAFF1F8", VA = "0xAFF1F8")]
	public ConstructionTargetContainerRescue()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ConstructionTargetEntityLoad : ConstructionTarget
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool manualInitialisation;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool usePercentage;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int startEntities;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xAFF1FC", Offset = "0xAFF1FC", VA = "0xAFF1FC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xAFF264", Offset = "0xAFF264", VA = "0xAFF264", Slot = "12")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xAFF2EC", Offset = "0xAFF2EC", VA = "0xAFF2EC", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xAFF374", Offset = "0xAFF374", VA = "0xAFF374")]
	private void PercentageChange(int percentage)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xAFF3F8", Offset = "0xAFF3F8", VA = "0xAFF3F8")]
	[ContextMenu("SetComplete")]
	private void SetComplete()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xAFF430", Offset = "0xAFF430", VA = "0xAFF430")]
	[ContextMenu("SetInComplete")]
	private void SetInComplete()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xAFF414", Offset = "0xAFF414", VA = "0xAFF414")]
	public void SetComplete(bool which)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xAFF448", Offset = "0xAFF448", VA = "0xAFF448", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xAFF44C", Offset = "0xAFF44C", VA = "0xAFF44C", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xAFF450", Offset = "0xAFF450", VA = "0xAFF450")]
	public ConstructionTargetEntityLoad()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ConstructionTargetGForce : ConstructionTarget
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform gForceMeasurePoint;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform axisCenterPoint;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Rigidbody measureRB;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float worldFactor;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Grabbable grabbable;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Joint hinge;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<float> speeds;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float angularVelocity;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float val;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float angleChange;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float lastAngleChange;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float distance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float gForce;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float otherGForce;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private Vector3 lastDir;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 currentDir;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float lastFrameVelocity;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float lastVelDelta;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xAFF454", Offset = "0xAFF454", VA = "0xAFF454", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xAFF5C0", Offset = "0xAFF5C0", VA = "0xAFF5C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xAFFE90", Offset = "0xAFFE90", VA = "0xAFFE90", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xAFFE94", Offset = "0xAFFE94", VA = "0xAFFE94", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xAFFE98", Offset = "0xAFFE98", VA = "0xAFFE98")]
	public ConstructionTargetGForce()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ConstructionTargetGluedToEntity : ConstructionTarget
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Glued glued;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xAFFE9C", Offset = "0xAFFE9C", VA = "0xAFFE9C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xAFFEA8", Offset = "0xAFFEA8", VA = "0xAFFEA8")]
	private void OnGlueEvent(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB00050", Offset = "0xB00050", VA = "0xB00050")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB000D0", Offset = "0xB000D0", VA = "0xB000D0")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB00150", Offset = "0xB00150", VA = "0xB00150")]
	public ConstructionTargetGluedToEntity()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C1")]
public class TargetSort
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public Entity triggerEntity;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float distance;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ConstructionTarget target;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB00154", Offset = "0xB00154", VA = "0xB00154")]
	public TargetSort()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ConstructionTargetManager : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	public delegate void OnLevelCompleteDelegate();

	[Token(Token = "0x20000C4")]
	public delegate void OnTargetPlacedDelegate(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true);

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int countDown;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Glue> glueUsedList;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ConstructionTarget> targets;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool gameDone;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<MeshRenderer, Material> MeshMaterials;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float completeTimer;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastCompletes;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool debugNoCountdown;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[HideInInspector]
	public bool timerPossible;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool invertGoals;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool noCompleteWait;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usePhotoCameraValidation;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool autoCamera;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool autoDropValidationCamera;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool cameraDropped;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] targetValues;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, string> targetDict;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float completeWait;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float photoDelay;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noLevelDoneEvent;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool missionFailed;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ConstructionTarget> targetsComplete;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<ConstructionTarget> newCompletes;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ConstructionTarget> removedCompletes;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TargetSort> targetSortList;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ConstructionTargetManager _instance;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int completes;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float maxTimer;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float newClosestDistance;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int roundCount;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastCheckTime;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int frame;

	[Token(Token = "0x17000037")]
	public static ConstructionTargetManager Instance
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xAFA1D4", Offset = "0xAFA1D4", VA = "0xAFA1D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000E")]
	public static event OnLevelCompleteDelegate OnLevelComplete
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xB0015C", Offset = "0xB0015C", VA = "0xB0015C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xB00214", Offset = "0xB00214", VA = "0xB00214")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event OnTargetPlacedDelegate OnTargetPlaced
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xB002CC", Offset = "0xB002CC", VA = "0xB002CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xB00388", Offset = "0xB00388", VA = "0xB00388")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xB00444", Offset = "0xB00444", VA = "0xB00444")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xB00704", Offset = "0xB00704", VA = "0xB00704")]
	public void MissionFailed()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xB005B0", Offset = "0xB005B0", VA = "0xB005B0")]
	public int GetTargetsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xB00710", Offset = "0xB00710", VA = "0xB00710")]
	public void CTMRules()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xB00730", Offset = "0xB00730", VA = "0xB00730")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xAFA350", Offset = "0xAFA350", VA = "0xAFA350")]
	public void RegisterTargets(ConstructionTarget _target, int _targetID = 0, int _targetValue = 0)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xB00878", Offset = "0xB00878", VA = "0xB00878")]
	[ContextMenu("ForceGameDone")]
	public void ForceGameDone()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xB008E4", Offset = "0xB008E4", VA = "0xB008E4")]
	public bool HasTriggerEnitityID(Entity _entity, int _targetID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xAFCD5C", Offset = "0xAFCD5C", VA = "0xAFCD5C")]
	public bool HasTriggerEnitity(Entity _entity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xB00AA0", Offset = "0xB00AA0", VA = "0xB00AA0")]
	private void CheckTimerDone()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB00CA4", Offset = "0xB00CA4", VA = "0xB00CA4")]
	private void TakePicture()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB00F04", Offset = "0xB00F04", VA = "0xB00F04")]
	private Entity GetClosestInDistanceSorted(ConstructionTarget asker)
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB012BC", Offset = "0xB012BC", VA = "0xB012BC")]
	private void WriteSortList()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB016F0", Offset = "0xB016F0", VA = "0xB016F0")]
	private void ClosestFindAndPurge()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB01990", Offset = "0xB01990", VA = "0xB01990")]
	private void DistanceSort()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB019F4", Offset = "0xB019F4", VA = "0xB019F4")]
	private void GroupCheck()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB01A0C", Offset = "0xB01A0C", VA = "0xB01A0C")]
	public string TargetStatus()
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB01A90", Offset = "0xB01A90", VA = "0xB01A90")]
	public bool AllTargetCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB01AAC", Offset = "0xB01AAC", VA = "0xB01AAC")]
	private void TargetListCheck(ConstructionTarget t, int solutionScore)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB01CB8", Offset = "0xB01CB8", VA = "0xB01CB8")]
	private void CheckTargets()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB0230C", Offset = "0xB0230C", VA = "0xB0230C")]
	[ContextMenu("DropValidationCamera")]
	public void DropValidationCamera()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB02484", Offset = "0xB02484", VA = "0xB02484")]
	public float GetTimer()
	{
		return default(float);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB024CC", Offset = "0xB024CC", VA = "0xB024CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB02504", Offset = "0xB02504", VA = "0xB02504")]
	public ConstructionTargetManager()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ConstructionTargetManual : ConstructionTarget
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool manualInitialisation;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB02994", Offset = "0xB02994", VA = "0xB02994", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB029AC", Offset = "0xB029AC", VA = "0xB029AC")]
	[ContextMenu("SetComplete")]
	private void SetComplete()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB029E4", Offset = "0xB029E4", VA = "0xB029E4")]
	[ContextMenu("SetInComplete")]
	private void SetInComplete()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB029C8", Offset = "0xB029C8", VA = "0xB029C8")]
	public void SetComplete(bool which)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB029FC", Offset = "0xB029FC", VA = "0xB029FC", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB02A00", Offset = "0xB02A00", VA = "0xB02A00", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB02A04", Offset = "0xB02A04", VA = "0xB02A04")]
	public ConstructionTargetManual()
	{
	}
}
[Token(Token = "0x20000C6")]
public class ConstructionTargetNotGlued : ConstructionTarget
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public EntityDefinition targetEntityDefinition;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public CategoryDefinition targetEntityCategory;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool useCategory;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int requiredUngluedEntities;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int ungluedEntities;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public List<Entity> gluedEntities;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB02A08", Offset = "0xB02A08", VA = "0xB02A08", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xB02A30", Offset = "0xB02A30", VA = "0xB02A30")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xB02B80", Offset = "0xB02B80", VA = "0xB02B80")]
	private void UpdateTargets()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xB02C50", Offset = "0xB02C50", VA = "0xB02C50", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB02CD8", Offset = "0xB02CD8", VA = "0xB02CD8", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB02D60", Offset = "0xB02D60", VA = "0xB02D60")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB02DC4", Offset = "0xB02DC4", VA = "0xB02DC4")]
	private void CheckEntity(GameObject go, bool _isGlued)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB02ED4", Offset = "0xB02ED4", VA = "0xB02ED4")]
	private void DoLists(Entity _entity, bool _isGlued)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB0300C", Offset = "0xB0300C", VA = "0xB0300C")]
	public ConstructionTargetNotGlued()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ConstructionTargetPeopleDestination : ConstructionTarget
{
	[Token(Token = "0x20000C8")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool grabAllowed;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	private bool wasGrabbed;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool doBumpIntoOtherHumanJump;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	private bool hasWaypoint;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionTarget waypointTriggerTarget;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParachuteRespawnTracker oobTracker;

	[Token(Token = "0x14000010")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xB03090", Offset = "0xB03090", VA = "0xB03090")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xB03148", Offset = "0xB03148", VA = "0xB03148")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB03200", Offset = "0xB03200", VA = "0xB03200", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB032CC", Offset = "0xB032CC", VA = "0xB032CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xB0331C", Offset = "0xB0331C", VA = "0xB0331C", Slot = "12")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xB034B8", Offset = "0xB034B8", VA = "0xB034B8", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xB035DC", Offset = "0xB035DC", VA = "0xB035DC")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB0377C", Offset = "0xB0377C", VA = "0xB0377C")]
	private void WaypointCheck()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xB03878", Offset = "0xB03878", VA = "0xB03878", Slot = "17")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xB039FC", Offset = "0xB039FC", VA = "0xB039FC")]
	private void GrabEvent(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB036A4", Offset = "0xB036A4", VA = "0xB036A4")]
	private void NotAllowed()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xB03AB8", Offset = "0xB03AB8", VA = "0xB03AB8")]
	private void GrabOOB()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xB03BD0", Offset = "0xB03BD0", VA = "0xB03BD0")]
	private void DestinationReached(string _id)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xB03C14", Offset = "0xB03C14", VA = "0xB03C14", Slot = "14")]
	public override int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB03C2C", Offset = "0xB03C2C", VA = "0xB03C2C")]
	public ConstructionTargetPeopleDestination()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ConstructionTargetRecycleObject : ConstructionTarget
{
	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB03D8C", Offset = "0xB03D8C", VA = "0xB03D8C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xB03D98", Offset = "0xB03D98", VA = "0xB03D98", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xB03E20", Offset = "0xB03E20", VA = "0xB03E20", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB03EA8", Offset = "0xB03EA8", VA = "0xB03EA8")]
	private void Recycled(GameObject _go)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xB03FBC", Offset = "0xB03FBC", VA = "0xB03FBC")]
	public ConstructionTargetRecycleObject()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ConstructionTargetRocket : ConstructionTarget
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool triggerOnce;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	private bool wasTriggered;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject visual;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool setCamTargetOnTrigger;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float radius;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float radiusFactor;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB03FC0", Offset = "0xB03FC0", VA = "0xB03FC0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB03FCC", Offset = "0xB03FCC", VA = "0xB03FCC", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB042A0", Offset = "0xB042A0", VA = "0xB042A0")]
	private void TakePicture()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB04380", Offset = "0xB04380", VA = "0xB04380", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB044F4", Offset = "0xB044F4", VA = "0xB044F4")]
	public ConstructionTargetRocket()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ConstructionTargetSpawnFreeze : ConstructionTarget
{
	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB0450C", Offset = "0xB0450C", VA = "0xB0450C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB04518", Offset = "0xB04518", VA = "0xB04518", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB045A0", Offset = "0xB045A0", VA = "0xB045A0", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB04628", Offset = "0xB04628", VA = "0xB04628")]
	private void UnSpawnFreeze(Grabbable _grabbable)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB04710", Offset = "0xB04710", VA = "0xB04710")]
	public ConstructionTargetSpawnFreeze()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ConstructionTargetSwitch : ConstructionTarget
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool OnIsCorrect;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	private bool buttonMode;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	public bool toggleMode;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB04714", Offset = "0xB04714", VA = "0xB04714", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB04720", Offset = "0xB04720", VA = "0xB04720")]
	public void ButtonMode(bool _on)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB04750", Offset = "0xB04750", VA = "0xB04750")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB04754", Offset = "0xB04754", VA = "0xB04754", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB04758", Offset = "0xB04758", VA = "0xB04758", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB0475C", Offset = "0xB0475C", VA = "0xB0475C")]
	public ConstructionTargetSwitch()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ConstructionTargetTriggersChainNoOnStay : ConstructionTarget
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public List<EntityDefinition> requiredConnectedEntities;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool triggerOnce;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject visual;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool wasTriggered;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	public bool multiTargetHideVisual;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int multiTargetHideVisualID;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private ConstructionTargetTriggersChainNoOnStay[] triggers;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB04768", Offset = "0xB04768", VA = "0xB04768", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB047D0", Offset = "0xB047D0", VA = "0xB047D0")]
	private void OnRBEnter(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB04CE8", Offset = "0xB04CE8", VA = "0xB04CE8")]
	private void OnRBExit(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB04DB4", Offset = "0xB04DB4", VA = "0xB04DB4", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB0505C", Offset = "0xB0505C", VA = "0xB0505C", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xB05210", Offset = "0xB05210", VA = "0xB05210")]
	public ConstructionTargetTriggersChainNoOnStay()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ConstructionTargetTriggersNoOnStay : ConstructionTarget
{
	[Token(Token = "0x20000CF")]
	public delegate void OnWrongEntityDelegate(ConstructionTargetTriggersNoOnStay me, EntityDefinition enDef);

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool triggerOnce;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject visual;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool wasTriggered;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool anyEntity;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
	public bool multiTargetHideVisual;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public int multiTargetHideVisualID;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool deactivateTriggerEntityAfterComplete;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool targetsCannotTrigger;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Collider myCollider;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool refreshTriggerOnDestroyTriggerEntity;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private ConstructionTargetTriggersNoOnStay[] triggers;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Grabbable grabbable;

	[Token(Token = "0x14000011")]
	public static event OnWrongEntityDelegate OnWrongEntity
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xB0521C", Offset = "0xB0521C", VA = "0xB0521C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xB052D4", Offset = "0xB052D4", VA = "0xB052D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xB0538C", Offset = "0xB0538C", VA = "0xB0538C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xB05434", Offset = "0xB05434", VA = "0xB05434", Slot = "8")]
	public override void MyEntityDestroyed()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xB054C4", Offset = "0xB054C4", VA = "0xB054C4")]
	private void OnRBEnter(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xB058C0", Offset = "0xB058C0", VA = "0xB058C0")]
	private void OnRBExit(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xB0598C", Offset = "0xB0598C", VA = "0xB0598C", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xB05C34", Offset = "0xB05C34", VA = "0xB05C34", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xB05DE8", Offset = "0xB05DE8", VA = "0xB05DE8")]
	public ConstructionTargetTriggersNoOnStay()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ConstructionValidationPhotoCamera : MonoBehaviour
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool readyToPhotograph;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 boundSize;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera photoCamera;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool tentacleInview;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool allTargetsVisible;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraDisplayController CameraDisplay;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isScanning;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject result;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject coneScan;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpawnPolaroidImage polaSpawner;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool freeInstantCamera;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject freeCameraButton;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string Click;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool useJoint;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent takePicture;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCount;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ConstructionValidationPhotoCamera _instance;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string checkText;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int numPhotoTargetsReq;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int targetsVisible;

	[Token(Token = "0x17000038")]
	public static ConstructionValidationPhotoCamera Instance
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xB00D28", Offset = "0xB00D28", VA = "0xB00D28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xB05F54", Offset = "0xB05F54", VA = "0xB05F54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xB060AC", Offset = "0xB060AC", VA = "0xB060AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xB0612C", Offset = "0xB0612C", VA = "0xB0612C")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB06190", Offset = "0xB06190", VA = "0xB06190")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB06898", Offset = "0xB06898", VA = "0xB06898")]
	private void ShowCone()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB0695C", Offset = "0xB0695C", VA = "0xB0695C")]
	private void SetScanning(bool which)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB067E8", Offset = "0xB067E8", VA = "0xB067E8")]
	private void CheckReadyToPhotograph()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB00EA4", Offset = "0xB00EA4", VA = "0xB00EA4")]
	[ContextMenu("TakePicture")]
	public void TakePicture()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB06140", Offset = "0xB06140", VA = "0xB06140")]
	public void TakeFreePicture()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xB04328", Offset = "0xB04328", VA = "0xB04328")]
	public void TakePicture(bool freePicture)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xB065A4", Offset = "0xB065A4", VA = "0xB065A4")]
	public void CheckTentacleInView()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xB0639C", Offset = "0xB0639C", VA = "0xB0639C")]
	public void CheckForTargetsInView()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xB0684C", Offset = "0xB0684C", VA = "0xB0684C")]
	private void UpdateTargets()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xB06A3C", Offset = "0xB06A3C", VA = "0xB06A3C")]
	public ConstructionValidationPhotoCamera()
	{
	}
}
[Token(Token = "0x20000D1")]
public class Containment : MonoBehaviour
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint[] hinges;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContainmentEffect containmentEffect;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool switchOn;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool targetsDone;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool buildUpDone;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody lidRB;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialised;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetPosition;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool powerWasTurnedOn;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xB06B04", Offset = "0xB06B04", VA = "0xB06B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xB06B1C", Offset = "0xB06B1C", VA = "0xB06B1C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xB06B94", Offset = "0xB06B94", VA = "0xB06B94")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xB06C0C", Offset = "0xB06C0C", VA = "0xB06C0C")]
	[ContextMenu("TURN ON")]
	private void TurnOnPower()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xB06C94", Offset = "0xB06C94", VA = "0xB06C94")]
	[ContextMenu("TURN OFF")]
	private void TurnOffPower()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xB06C14", Offset = "0xB06C14", VA = "0xB06C14")]
	private void TurnOnPower(bool _which = true)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB06DE0", Offset = "0xB06DE0", VA = "0xB06DE0")]
	public void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB06E0C", Offset = "0xB06E0C", VA = "0xB06E0C")]
	private void SetLatches(bool _on)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xB06F34", Offset = "0xB06F34", VA = "0xB06F34")]
	public void PullLever(bool _on)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xB06FA0", Offset = "0xB06FA0", VA = "0xB06FA0")]
	public Containment()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ContainmentEffect : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform particles;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform particlesBuildUp;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float downForce;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool effectActive;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Rigidbody> inRangeRBs;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool buildUpDone;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ForceMode forceMode;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int buildUpLength;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float buildUpCounter;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxShake;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool particlesShown;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool pullIn;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frameCounter;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int skip;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject plasmaSFX;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Implosion starts or is running")]
	public GameObject pullInLoop;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("effect starts up")]
	public GameObject riseFX;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelDirector_base levelDirector;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float inverseForceRadius;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float inverseForceFactor;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool triggerImplosionManually;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 downVector;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float explosionPower;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 direction;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float forceInvFactor;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xB06FA8", Offset = "0xB06FA8", VA = "0xB06FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xB072E0", Offset = "0xB072E0", VA = "0xB072E0")]
	[ContextMenu("StartEffect")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xB072E8", Offset = "0xB072E8", VA = "0xB072E8")]
	[ContextMenu("StopEffect")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB06C9C", Offset = "0xB06C9C", VA = "0xB06C9C")]
	public void SetActive(bool _mode)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB072F0", Offset = "0xB072F0", VA = "0xB072F0")]
	[ContextMenu("ExplodeAway")]
	public void ExplodeAway()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB074F4", Offset = "0xB074F4", VA = "0xB074F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xB07F94", Offset = "0xB07F94", VA = "0xB07F94")]
	[ContextMenu("Implode")]
	public void Implode()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xB07BB4", Offset = "0xB07BB4", VA = "0xB07BB4")]
	private void BuildUp()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xB07FA8", Offset = "0xB07FA8", VA = "0xB07FA8")]
	private void ImplosionFX()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xB07FD8", Offset = "0xB07FD8", VA = "0xB07FD8")]
	private float RND(float f)
	{
		return default(float);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xB07FE8", Offset = "0xB07FE8", VA = "0xB07FE8")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xB082A8", Offset = "0xB082A8", VA = "0xB082A8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xB082AC", Offset = "0xB082AC", VA = "0xB082AC")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xB0840C", Offset = "0xB0840C", VA = "0xB0840C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xB070C8", Offset = "0xB070C8", VA = "0xB070C8")]
	private void SetParticles(bool _which, Transform _particles)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xB08410", Offset = "0xB08410", VA = "0xB08410")]
	public ContainmentEffect()
	{
	}
}
[Token(Token = "0x20000D3")]
public class ConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x20000D4")]
	public enum directionEnum
	{
		[Token(Token = "0x400052E")]
		right,
		[Token(Token = "0x400052F")]
		up,
		[Token(Token = "0x4000530")]
		forward
	}

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public directionEnum speedDirection;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3[] pointAngleVectors;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Rigidbody> transportList;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frame;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int lastListClear;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 direction;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float gripTime;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float speedFactor;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Rigidbody, float> rbStayTime;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> colRBs;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 change;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float onCFactor;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xB08454", Offset = "0xB08454", VA = "0xB08454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xB085D8", Offset = "0xB085D8", VA = "0xB085D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB08B00", Offset = "0xB08B00", VA = "0xB08B00", Slot = "4")]
	public virtual void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB08E38", Offset = "0xB08E38", VA = "0xB08E38", Slot = "5")]
	public virtual void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xB09070", Offset = "0xB09070", VA = "0xB09070")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x20000D5")]
[RequireComponent(typeof(Grabbable))]
public class DispenserWheelController : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DispenserWheelController <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049F")]
			[Address(RVA = "0xB09DBC", Offset = "0xB09DBC", VA = "0xB09DBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A1")]
			[Address(RVA = "0xB09E04", Offset = "0xB09E04", VA = "0xB09E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB099E4", Offset = "0xB099E4", VA = "0xB099E4")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB09D1C", Offset = "0xB09D1C", VA = "0xB09D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB09D20", Offset = "0xB09D20", VA = "0xB09D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB09DC4", Offset = "0xB09DC4", VA = "0xB09DC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsScaleWheel;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Threshold;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int IncreaseDelta;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float delta;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GluemachineSpawner Dispenser;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float originalDrag;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float stopSpeed;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastAngle;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool switchMode;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool firstDown;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float PrevAngle;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float CurrAngle;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasCollision;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Grabbable grabbable;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int timesPressed;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool useStopSpeed;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool doHapticFeedback;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool isInDispenser;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent leverForward;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent leverBackward;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float leverDiff;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRControllerMapper controller;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xB091E4", Offset = "0xB091E4", VA = "0xB091E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xB09320", Offset = "0xB09320", VA = "0xB09320")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xB097E0", Offset = "0xB097E0", VA = "0xB097E0")]
	private void DoHapticFeedback(GameObject _go)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xB09970", Offset = "0xB09970", VA = "0xB09970")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__27))]
	private IEnumerator ButtonHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xB09780", Offset = "0xB09780", VA = "0xB09780")]
	private void SetState()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xB09A0C", Offset = "0xB09A0C", VA = "0xB09A0C")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xB09BF4", Offset = "0xB09BF4", VA = "0xB09BF4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xB09D00", Offset = "0xB09D00", VA = "0xB09D00")]
	public DispenserWheelController()
	{
	}
}
[Token(Token = "0x20000D7")]
public class EMP : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	public delegate void EMPDelegate(Glue empGlue, EMP me);

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> collisions;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody colRB;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool burnout;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool destroyAfterActivation;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float destructionWait;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool selftDestructActive;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Glue g;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] wrecks;

	[Token(Token = "0x14000012")]
	public static event EMPDelegate OnEMP
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB09E0C", Offset = "0xB09E0C", VA = "0xB09E0C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB09EC4", Offset = "0xB09EC4", VA = "0xB09EC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xB09F7C", Offset = "0xB09F7C", VA = "0xB09F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xB09FF8", Offset = "0xB09FF8", VA = "0xB09FF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xB0A1A0", Offset = "0xB0A1A0", VA = "0xB0A1A0")]
	public void SelfDestruct()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xB0A334", Offset = "0xB0A334", VA = "0xB0A334")]
	private void OnCollisionEnterCheck(Collider collider)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xB0A4E8", Offset = "0xB0A4E8", VA = "0xB0A4E8")]
	private void CollisionExitCheck(Collider collider)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xB0A644", Offset = "0xB0A644", VA = "0xB0A644")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xB0A648", Offset = "0xB0A648", VA = "0xB0A648")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB0A64C", Offset = "0xB0A64C", VA = "0xB0A64C")]
	public EMP()
	{
	}
}
[Token(Token = "0x20000D9")]
public class FadeLighting : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material skyboxMat;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color originalSkyBoxTopColor;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalSkyBoxMiddleColor;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color originalSkyBoxBottomColor;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color origAmbientColor;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color origDirectionalColor;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color origFogColor;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float originalFogDensity;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Light sceneLight;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool initialised;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string topColorString;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string middleColorString;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string bottomColorString;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool useAmbientColor;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color fxAmbientLight;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool useSkyTop;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color fxSkyTop;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool useSkyHorizon;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Color fxSkyHorizon;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool useSkyBottom;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color fxSkyBottom;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool useDirectionalLight;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color fxDirectionalColor;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool useFogColor;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color fxFogColor;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Ease densityEase;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool useFogDensity;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float fxFogDensity;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string tweenID;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float duration;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Color currentTop;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Color currentMiddle;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Color currenBottom;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB0A844", Offset = "0xB0A844", VA = "0xB0A844")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB0A998", Offset = "0xB0A998", VA = "0xB0A998")]
	private Color CheckMaterials(Material mat, string keyword)
	{
		return default(Color);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB0A9F0", Offset = "0xB0A9F0", VA = "0xB0A9F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB0AB74", Offset = "0xB0AB74", VA = "0xB0AB74")]
	[ContextMenu("TURN ON")]
	public void FadeTo()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xB0AB90", Offset = "0xB0AB90", VA = "0xB0AB90")]
	[ContextMenu("TURN OFF")]
	public void FadeBack()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB06DB8", Offset = "0xB06DB8", VA = "0xB06DB8")]
	public void FadeToColor(bool _which = true)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xB0B778", Offset = "0xB0B778", VA = "0xB0B778")]
	private void ColorUpdate()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB0ABAC", Offset = "0xB0ABAC", VA = "0xB0ABAC")]
	private void ChangeLight(bool _which)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB0B814", Offset = "0xB0B814", VA = "0xB0B814")]
	public FadeLighting()
	{
	}
}
[Token(Token = "0x20000DB")]
public class GenericChannelRemote : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	public delegate void RemoteEventDelegate(bool mode, int _channelID);

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int channelID;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string onSound;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string offSound;

	[Token(Token = "0x14000013")]
	public static event RemoteEventDelegate OnRemoteEvent
	{
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xB28F64", Offset = "0xB28F64", VA = "0xB28F64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xB2901C", Offset = "0xB2901C", VA = "0xB2901C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB290D4", Offset = "0xB290D4", VA = "0xB290D4")]
	[ContextMenu("ButtonPressed")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB2918C", Offset = "0xB2918C", VA = "0xB2918C")]
	[ContextMenu("ButtonOffPressed")]
	public void ButtonOffPressed()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB29244", Offset = "0xB29244", VA = "0xB29244")]
	public GenericChannelRemote()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Glue : ConnectedJointBase
{
	[Token(Token = "0x20000DE")]
	public delegate void BurnoutDelegate(Glue thisGlue);

	[Token(Token = "0x20000DF")]
	public delegate void OnGluedToDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x20000E0")]
	public delegate void OnGluedToInstanceDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x20000E1")]
	public enum JType
	{
		[Token(Token = "0x40005E3")]
		crazy,
		[Token(Token = "0x40005E4")]
		stiff,
		[Token(Token = "0x40005E5")]
		hinge,
		[Token(Token = "0x40005E6")]
		freeze,
		[Token(Token = "0x40005E7")]
		antiGrav,
		[Token(Token = "0x40005E8")]
		floppy,
		[Token(Token = "0x40005E9")]
		freeSpin
	}

	[Serializable]
	[Token(Token = "0x20000E2")]
	public class BurnoutEvent : UnityEvent<bool>
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xB2FFF0", Offset = "0xB2FFF0", VA = "0xB2FFF0")]
		public BurnoutEvent()
		{
		}
	}

	[Token(Token = "0x20000E3")]
	[CompilerGenerated]
	private sealed class <PullAwayRumble>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0xB3044C", Offset = "0xB3044C", VA = "0xB3044C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xB30494", Offset = "0xB30494", VA = "0xB30494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xB2B0A4", Offset = "0xB2B0A4", VA = "0xB2B0A4")]
		[DebuggerHidden]
		public <PullAwayRumble>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xB30038", Offset = "0xB30038", VA = "0xB30038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xB3003C", Offset = "0xB3003C", VA = "0xB3003C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xB30454", Offset = "0xB30454", VA = "0xB30454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <RipCoolDown>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0xB305E8", Offset = "0xB305E8", VA = "0xB305E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0xB30630", Offset = "0xB30630", VA = "0xB30630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xB2B140", Offset = "0xB2B140", VA = "0xB2B140")]
		[DebuggerHidden]
		public <RipCoolDown>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xB3049C", Offset = "0xB3049C", VA = "0xB3049C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xB304A0", Offset = "0xB304A0", VA = "0xB304A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xB305F0", Offset = "0xB305F0", VA = "0xB305F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <ConnectRumble>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0xB30914", Offset = "0xB30914", VA = "0xB30914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0xB3095C", Offset = "0xB3095C", VA = "0xB3095C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xB2B3B4", Offset = "0xB2B3B4", VA = "0xB2B3B4")]
		[DebuggerHidden]
		public <ConnectRumble>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xB30638", Offset = "0xB30638", VA = "0xB30638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xB3063C", Offset = "0xB3063C", VA = "0xB3063C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xB3091C", Offset = "0xB3091C", VA = "0xB3091C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[CompilerGenerated]
	private sealed class <WaitReactivate>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0xB30A18", Offset = "0xB30A18", VA = "0xB30A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000537")]
			[Address(RVA = "0xB30A60", Offset = "0xB30A60", VA = "0xB30A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xB2D410", Offset = "0xB2D410", VA = "0xB2D410")]
		[DebuggerHidden]
		public <WaitReactivate>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xB30964", Offset = "0xB30964", VA = "0xB30964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xB30968", Offset = "0xB30968", VA = "0xB30968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB30A20", Offset = "0xB30A20", VA = "0xB30A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Glue connectedJoint;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool grabConnected;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool unparentConnectedJoint;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool globalBlock;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isGrabbed;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("Glue")]
	public JType jointType;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VRControllerMapper controller;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject aura;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool toggleMagnetAura;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool magnetDeactivated;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VRControllerMapper lastUsedController;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float glueScale;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float magnetImpactDeactivationSpeed;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float nonTentacleMagnetImpactDeactivationSpeed;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Rigidbody> myJointConnectionsRBs;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Glued> myGluedIndexedList;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<Joint> myJointConnectionsJoints;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<Rigidbody, Collision> myCollisions;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<Rigidbody> anchorsAdjustedListRB;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<int> anchorsAdjustedListInt;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Glued> gluedList;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LayerMask nonStickyLayers;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool onlyStickToCertainLayers;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public LayerMask onlyStickyLayers;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool onlyStickToCertainOwnLayers;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LayerMask onlyStickyOwnLayers;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform inner;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Color OnValue;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Color OffValue;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeshRenderer rend;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Material mat;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool useCollision;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool preProcessing;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int frame;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int frameSoundDisable;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[HideInInspector]
	public bool noForceFeedback;

	[Token(Token = "0x40005A9")]
	public const float maxPullForceForDisconnect = 0f;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	public bool ripCoolDown;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Transform trans;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool noGravResetGravity;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool burnedOut;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Rigidbody colRB;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool flaggedForRemoval;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<float> anchorDistanceFloat;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject fakeCollider;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool AdjustFakeCollider;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool AdjustFakeStaticOnly;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float AnchorBurnoutDistance;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float anchorDistanceOverFactor;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool useAnchorDistanceOverTime;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
	public bool noUnglueAllowed;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float scaleBreakFactor;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool turnedOn;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject[] deactivateOnBurnout;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public bool replaceOnBurnout;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	public bool spawnRandomReplacement;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public EntityDefinition[] destroyedEntities;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool ignoreShockBurnout;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public bool burnoutDisconnects;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Collider[] colliders;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool disableAnchorCheck;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool disableBurnout;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool allowAutoConfigureAdjust;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool forceUnglueAllowed;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	public bool glueOnGlueAllowed;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int frameSkip;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Grabbable otherGrabbable;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float pullForce;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public int suckersConnected;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool auraActive;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private int genericIndex;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool lastUngluePressed;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Joint j;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float dist;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Glued glued;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ConfigurableJoint newJoint;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private SoftJointLimitSpring sls;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private SoftJointLimit sjl;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private JointDrive jd;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float globalBreakForce;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float globalBreakTorque;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Joint someJoint;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool checkJointBreak;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public BurnoutEvent Burnout;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private LayerMask explosionLayers;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private bool showDebugSphere;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float exploRadius;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float exploPower;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float exploUpForce;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Glue otherCollisionGlue;

	[Token(Token = "0x14000014")]
	public static event BurnoutDelegate OnBurnout
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xB293DC", Offset = "0xB293DC", VA = "0xB293DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xB29494", Offset = "0xB29494", VA = "0xB29494")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event OnGluedToDelegate OnGluedTo
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xB2954C", Offset = "0xB2954C", VA = "0xB2954C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xB29608", Offset = "0xB29608", VA = "0xB29608")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event OnGluedToInstanceDelegate OnGluedToInstance
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xB296C4", Offset = "0xB296C4", VA = "0xB296C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xB29760", Offset = "0xB29760", VA = "0xB29760")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xB297FC", Offset = "0xB297FC", VA = "0xB297FC")]
	[ContextMenu("ResetInertiaTensor")]
	public void ResetInertiaTensor()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xB29818", Offset = "0xB29818", VA = "0xB29818")]
	[ContextMenu("Turn ON")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xB298D4", Offset = "0xB298D4", VA = "0xB298D4")]
	[ContextMenu("Turn OFF")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xB2998C", Offset = "0xB2998C", VA = "0xB2998C")]
	private void WriteAnchors()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xB29B88", Offset = "0xB29B88", VA = "0xB29B88")]
	[ContextMenu("ResetInertiaTensor")]
	private void ResetTensor()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB29BA4", Offset = "0xB29BA4", VA = "0xB29BA4")]
	public static float GlueMass(float _scale)
	{
		return default(float);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB29BCC", Offset = "0xB29BCC", VA = "0xB29BCC")]
	public bool CheckUnglueAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB29C28", Offset = "0xB29C28", VA = "0xB29C28")]
	public void SetScale(float _scale)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB29F04", Offset = "0xB29F04", VA = "0xB29F04")]
	public void DisableBurnout(bool disableConnected = false)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xB29F38", Offset = "0xB29F38", VA = "0xB29F38")]
	public void DisableUnglue(bool disableConnected = false)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xB29E7C", Offset = "0xB29E7C", VA = "0xB29E7C")]
	private void NoSkipStep()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xB29F6C", Offset = "0xB29F6C", VA = "0xB29F6C")]
	private void SetFakeCollider(bool _which, [Optional] Rigidbody _rb)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xB2A000", Offset = "0xB2A000", VA = "0xB2A000", Slot = "9")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xB2A008", Offset = "0xB2A008", VA = "0xB2A008", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB2A68C", Offset = "0xB2A68C", VA = "0xB2A68C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB2A7C0", Offset = "0xB2A7C0", VA = "0xB2A7C0")]
	public void DeactivateFF()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xB2A7CC", Offset = "0xB2A7CC", VA = "0xB2A7CC")]
	public void DisableGlue()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB2A7DC", Offset = "0xB2A7DC", VA = "0xB2A7DC")]
	public int GetCollisionsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB2A824", Offset = "0xB2A824", VA = "0xB2A824")]
	public bool IsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB2A874", Offset = "0xB2A874", VA = "0xB2A874", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB2A89C", Offset = "0xB2A89C", VA = "0xB2A89C", Slot = "10")]
	public override void ChainChange(GlueConnections originator, bool wasAdded)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB2AD2C", Offset = "0xB2AD2C", VA = "0xB2AD2C", Slot = "8")]
	public override void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB2AEB8", Offset = "0xB2AEB8", VA = "0xB2AEB8")]
	private void RipOff()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB2A618", Offset = "0xB2A618", VA = "0xB2A618")]
	[IteratorStateMachine(typeof(<PullAwayRumble>d__109))]
	private IEnumerator PullAwayRumble()
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xB2B0CC", Offset = "0xB2B0CC", VA = "0xB2B0CC")]
	[IteratorStateMachine(typeof(<RipCoolDown>d__110))]
	private IEnumerator RipCoolDown()
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xB2B168", Offset = "0xB2B168", VA = "0xB2B168")]
	private void CheckPullForce()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xB2B1C8", Offset = "0xB2B1C8", VA = "0xB2B1C8", Slot = "7")]
	public override void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xB2B310", Offset = "0xB2B310", VA = "0xB2B310")]
	public void GlueRumble()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB2B340", Offset = "0xB2B340", VA = "0xB2B340")]
	[IteratorStateMachine(typeof(<ConnectRumble>d__114))]
	private IEnumerator ConnectRumble()
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB2B3DC", Offset = "0xB2B3DC", VA = "0xB2B3DC")]
	private void SetAura(bool which)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB2B514", Offset = "0xB2B514", VA = "0xB2B514")]
	public void GlueToolsClear(bool flagForRemoval)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB2AED4", Offset = "0xB2AED4", VA = "0xB2AED4")]
	public void KillMyConnections(bool connectedCheck = true)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xB2B5A0", Offset = "0xB2B5A0", VA = "0xB2B5A0")]
	public void RemoveConnectionWithGlued(Glued _glued, bool _internal = true)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xB2BC18", Offset = "0xB2BC18", VA = "0xB2BC18")]
	private bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xB2BC80", Offset = "0xB2BC80", VA = "0xB2BC80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xB2BFF0", Offset = "0xB2BFF0", VA = "0xB2BFF0")]
	private void CheckConnections()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xB2D35C", Offset = "0xB2D35C", VA = "0xB2D35C")]
	private void PostCollisionCheck(Collision collision)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xB2D39C", Offset = "0xB2D39C", VA = "0xB2D39C")]
	[IteratorStateMachine(typeof(<WaitReactivate>d__126))]
	private IEnumerator WaitReactivate()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xB2D438", Offset = "0xB2D438", VA = "0xB2D438")]
	[ContextMenu("Activate")]
	public void MagnetReactivate()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xB2D440", Offset = "0xB2D440", VA = "0xB2D440")]
	[ContextMenu("Deactivate")]
	public void MagnetDeactivation(bool autoActivate = true)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xB2C0E0", Offset = "0xB2C0E0", VA = "0xB2C0E0")]
	private void CheckJointDiff()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xB2DB90", Offset = "0xB2DB90", VA = "0xB2DB90")]
	private bool CheckInJointLists(Rigidbody _colRB)
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xB2C600", Offset = "0xB2C600", VA = "0xB2C600")]
	public void ConnectNewElement(Rigidbody _colRB, [Optional] JointData jointData, bool manualSetup = false)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xB2E0F4", Offset = "0xB2E0F4", VA = "0xB2E0F4")]
	private void AddNewJoint(Rigidbody _rb, Joint _j, Glued _glued)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xB2DEA4", Offset = "0xB2DEA4", VA = "0xB2DEA4")]
	private void SetAnchorsManually(Joint j, JointData jointData)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xB2DF14", Offset = "0xB2DF14", VA = "0xB2DF14")]
	private void SetAnchors(Rigidbody _colRB, Joint j, bool _autoanchors)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xB2BEBC", Offset = "0xB2BEBC", VA = "0xB2BEBC")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xB2E328", Offset = "0xB2E328", VA = "0xB2E328")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xB2E334", Offset = "0xB2E334", VA = "0xB2E334")]
	public void ShockDeactivation(bool _disconnect = false)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xB2E3B8", Offset = "0xB2E3B8", VA = "0xB2E3B8")]
	public void BurnOutMagnetShock()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xB2D4C0", Offset = "0xB2D4C0", VA = "0xB2D4C0")]
	[ContextMenu("bURNoUT")]
	public void BurnOutMagnet()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xB2E3C8", Offset = "0xB2E3C8", VA = "0xB2E3C8")]
	private void BurnoutExplosion()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xB2EA08", Offset = "0xB2EA08", VA = "0xB2EA08")]
	private void VisualBurnOut()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xB2EBAC", Offset = "0xB2EBAC", VA = "0xB2EBAC")]
	private void OnCollisionEnterCheck(Collision collision)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xB2F07C", Offset = "0xB2F07C", VA = "0xB2F07C")]
	private void CollisionExitCheck(Collision collision)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB2F3B4", Offset = "0xB2F3B4", VA = "0xB2F3B4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xB2BA2C", Offset = "0xB2BA2C", VA = "0xB2BA2C")]
	public void CollisionMagicExit()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xB2F46C", Offset = "0xB2F46C", VA = "0xB2F46C")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xB2F728", Offset = "0xB2F728", VA = "0xB2F728")]
	public Glue()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Glued : ConnectedJointBase
{
	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private sealed class <PullAwayRumble>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0xB31B18", Offset = "0xB31B18", VA = "0xB31B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0xB31B60", Offset = "0xB31B60", VA = "0xB31B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xB30EB0", Offset = "0xB30EB0", VA = "0xB30EB0")]
		[DebuggerHidden]
		public <PullAwayRumble>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xB31704", Offset = "0xB31704", VA = "0xB31704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xB31708", Offset = "0xB31708", VA = "0xB31708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xB31B20", Offset = "0xB31B20", VA = "0xB31B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[CompilerGenerated]
	private sealed class <ConnectGlue>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0xB31E44", Offset = "0xB31E44", VA = "0xB31E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0xB31E8C", Offset = "0xB31E8C", VA = "0xB31E8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xB30F4C", Offset = "0xB30F4C", VA = "0xB30F4C")]
		[DebuggerHidden]
		public <ConnectGlue>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xB31B68", Offset = "0xB31B68", VA = "0xB31B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xB31B6C", Offset = "0xB31B6C", VA = "0xB31B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xB31E4C", Offset = "0xB31E4C", VA = "0xB31E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EA")]
	[CompilerGenerated]
	private sealed class <RipCoolDown>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0xB31F5C", Offset = "0xB31F5C", VA = "0xB31F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055B")]
			[Address(RVA = "0xB31FA4", Offset = "0xB31FA4", VA = "0xB31FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xB311F4", Offset = "0xB311F4", VA = "0xB311F4")]
		[DebuggerHidden]
		public <RipCoolDown>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xB31E94", Offset = "0xB31E94", VA = "0xB31E94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xB31E98", Offset = "0xB31E98", VA = "0xB31E98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xB31F64", Offset = "0xB31F64", VA = "0xB31F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isGrabbed;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Grabbable grab;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Glue> connectedGlues;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRControllerMapper controller;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool ripCoolDown;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float magnetImpactDeactivationSpeed;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float nonTentacleMagnetImpactDeactivationSpeed;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool initialAntiGrav;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int frame;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float pullForce;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool freezeJointActive;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool isFrozen;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool isAntiGrav;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody colRB;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool flaggedForRemoval;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool noUnglueAllowed;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Glued connectedGlued;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool unglueConnectedJoint;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool simKinematicForBurnoutSimAttach;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool slingBurnoutBothAttached;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xB30A68", Offset = "0xB30A68", VA = "0xB30A68", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xB2DC38", Offset = "0xB2DC38", VA = "0xB2DC38")]
	public void CheckGrabbed()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xB30B00", Offset = "0xB30B00", VA = "0xB30B00", Slot = "8")]
	public override void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xB30C50", Offset = "0xB30C50", VA = "0xB30C50", Slot = "7")]
	public override void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xB30D24", Offset = "0xB30D24", VA = "0xB30D24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xB30E3C", Offset = "0xB30E3C", VA = "0xB30E3C")]
	[IteratorStateMachine(typeof(<PullAwayRumble>d__26))]
	private IEnumerator PullAwayRumble()
	{
		return null;
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xB30ED8", Offset = "0xB30ED8", VA = "0xB30ED8")]
	[IteratorStateMachine(typeof(<ConnectGlue>d__27))]
	private IEnumerator ConnectGlue()
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xB30D64", Offset = "0xB30D64", VA = "0xB30D64")]
	private void CheckPullForce(bool propagate = true)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xB30F74", Offset = "0xB30F74", VA = "0xB30F74")]
	private void RipOff()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xB31180", Offset = "0xB31180", VA = "0xB31180")]
	[IteratorStateMachine(typeof(<RipCoolDown>d__30))]
	private IEnumerator RipCoolDown()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xB3121C", Offset = "0xB3121C", VA = "0xB3121C")]
	public void GluedBurnOutConnectedMagnets()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xB31224", Offset = "0xB31224", VA = "0xB31224")]
	public void GluedToolsClear(bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xB30FBC", Offset = "0xB30FBC", VA = "0xB30FBC")]
	public void RemoveAllGlueConnections(bool _disconnectGlue = false)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB2DD54", Offset = "0xB2DD54", VA = "0xB2DD54")]
	public void AddGlueConnection(Glue _glue)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB31280", Offset = "0xB31280", VA = "0xB31280")]
	public void CheckForStatusEffects()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB2BB7C", Offset = "0xB2BB7C", VA = "0xB2BB7C")]
	public void RemoveGlueConnection(Glue _glue)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB31484", Offset = "0xB31484", VA = "0xB31484")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB31618", Offset = "0xB31618", VA = "0xB31618")]
	public Glued()
	{
	}
}
[Token(Token = "0x20000EB")]
public class GluemachineSpawner : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	public enum BlockStatus
	{
		[Token(Token = "0x4000635")]
		none,
		[Token(Token = "0x4000636")]
		overload,
		[Token(Token = "0x4000637")]
		empty,
		[Token(Token = "0x4000638")]
		blocked,
		[Token(Token = "0x4000639")]
		locked
	}

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EightSegmentDisplay NumberDisplay;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnTip;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ScaleNeedle;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool hasScaleWheel;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scaleWheel;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public GameObject typeWheel;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EntityDefinition[] MagnetScriptableObjects;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int GlueAmount;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public EntityDefinition[] MagnetPrefabs;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] LockedMagnets;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] DipenserUpgrades;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image ScreenIMG;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image ScreenLocked;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentType;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool hasTypeWheel;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int glueCounter;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scaleMultiplier;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Glue glueScript;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject spawnPrefab;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isInitialized;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool isInSandbox;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject sizeWheelCover;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject sizeSelectBrokenVFX;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("-1 no override - 0 smallest - 1 biggest")]
	public float sizeOverrride;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DispenserSpawnCheck spawnTrigger;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject magnetDisplay;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject blockedDisplay;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro statusType;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BlockStatus blockStatus;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private BlockStatus lastBlockStatus;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string sfx;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool blocked;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB31FAC", Offset = "0xB31FAC", VA = "0xB31FAC")]
	[ContextMenu("Init")]
	public void Init()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB3239C", Offset = "0xB3239C", VA = "0xB3239C")]
	private void SetScaleFunctions()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB324B0", Offset = "0xB324B0", VA = "0xB324B0")]
	private void SetMagnetSwitchFunction()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB32694", Offset = "0xB32694", VA = "0xB32694")]
	private void DefaultInit()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB327B8", Offset = "0xB327B8", VA = "0xB327B8")]
	public void ToggleMagnetType(int amount)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB328B4", Offset = "0xB328B4", VA = "0xB328B4")]
	public void NextMagnet(bool forward)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xB3221C", Offset = "0xB3221C", VA = "0xB3221C")]
	private void CheckBlocked()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xB328D0", Offset = "0xB328D0", VA = "0xB328D0")]
	[ContextMenu("DropMagnet")]
	public void PhysicalButtonPressed()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB329DC", Offset = "0xB329DC", VA = "0xB329DC")]
	private void SpawnGlue()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xB32528", Offset = "0xB32528", VA = "0xB32528")]
	private void SetAmount()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB32D64", Offset = "0xB32D64", VA = "0xB32D64")]
	public void SizeWheelNext(bool forward)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xB32E5C", Offset = "0xB32E5C", VA = "0xB32E5C")]
	public void WheelsController(int amount, bool isScaleWheel)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xB3259C", Offset = "0xB3259C", VA = "0xB3259C")]
	public void SetScaleNeedle(float n)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xB32E60", Offset = "0xB32E60", VA = "0xB32E60")]
	public GluemachineSpawner()
	{
	}
}
[Token(Token = "0x20000ED")]
public class IntroUfoTouch : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C0999 levelDir;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool canBeTouched;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xB32ED0", Offset = "0xB32ED0", VA = "0xB32ED0")]
	public void CanBeTouched()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xB32EDC", Offset = "0xB32EDC", VA = "0xB32EDC")]
	private void OnTriggerEnter(Collider _collider)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xB32FE8", Offset = "0xB32FE8", VA = "0xB32FE8")]
	public IntroUfoTouch()
	{
	}
}
[Token(Token = "0x20000EE")]
public class MagnetDispenserScreenUI : MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] AvailableItems;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] Images;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] Icons;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip PreviousAnimation;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip NextAnimation;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation ani;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentImg;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xB32FF0", Offset = "0xB32FF0", VA = "0xB32FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xB32FF4", Offset = "0xB32FF4", VA = "0xB32FF4")]
	public void Next()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xB3304C", Offset = "0xB3304C", VA = "0xB3304C")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB330A4", Offset = "0xB330A4", VA = "0xB330A4")]
	public void RearrageSprites()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xB33240", Offset = "0xB33240", VA = "0xB33240")]
	public MagnetDispenserScreenUI()
	{
	}
}
[Token(Token = "0x20000EF")]
public class MeasureAngularVelocity : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVel;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float targetValue;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EightSegmentDisplay digits;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay digitsTarget;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int targetID;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConstructionTargetAngularVelocity angularVelocityTarget;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xB33248", Offset = "0xB33248", VA = "0xB33248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xB3337C", Offset = "0xB3337C", VA = "0xB3337C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xB33404", Offset = "0xB33404", VA = "0xB33404")]
	public void SetVelocity(float _value)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xB334BC", Offset = "0xB334BC", VA = "0xB334BC")]
	public MeasureAngularVelocity()
	{
	}
}
[Token(Token = "0x20000F0")]
public class MeasureGForce : MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVel;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string unit;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay digits;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EightSegmentDisplay digitsFloat;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EightSegmentDisplay digitsTarget;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EightSegmentDisplay digitsFloatTarget;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float targetValue;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int targetID;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConstructionTargetGForce gForceTarget;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xB334C4", Offset = "0xB334C4", VA = "0xB334C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xB3378C", Offset = "0xB3378C", VA = "0xB3378C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xB33814", Offset = "0xB33814", VA = "0xB33814")]
	public void SetVelocity(float _value)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB339DC", Offset = "0xB339DC", VA = "0xB339DC")]
	public MeasureGForce()
	{
	}
}
[Token(Token = "0x20000F1")]
public class PowerSlingController : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <ResetSpring>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerSlingController <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xB34E08", Offset = "0xB34E08", VA = "0xB34E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0xB34E50", Offset = "0xB34E50", VA = "0xB34E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xB346D4", Offset = "0xB346D4", VA = "0xB346D4")]
		[DebuggerHidden]
		public <ResetSpring>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xB34D38", Offset = "0xB34D38", VA = "0xB34D38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xB34D3C", Offset = "0xB34D3C", VA = "0xB34D3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xB34E10", Offset = "0xB34E10", VA = "0xB34E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Glue mainJoint;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Glue subJoint;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable mainGrabbable;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable subGrabbable;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CrystalEnergyBase energyBaseMain;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CrystalEnergyBase energyBaseSub;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CrystalEnergyBase energyBase;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool powered;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpringJoint mainSpring;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpringJoint subSpring;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RubberBand slingShot;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Collider trigger;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool slingShotActive;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool shouldBeActive;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float width;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float initialSpring;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float initialDamper;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool crystalConnection;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EntityDefinition crystalEntity;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer[] lineRenderers;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material lineSling;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material lineConductor;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool retractAfterShot;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool isSlingshot;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool hasKinematic;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool isBurnedOut;

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB33A34", Offset = "0xB33A34", VA = "0xB33A34")]
	private void Start()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xB33C88", Offset = "0xB33C88", VA = "0xB33C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB33E38", Offset = "0xB33E38", VA = "0xB33E38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB33FE8", Offset = "0xB33FE8", VA = "0xB33FE8")]
	private void EnergyEvent(CrystalEnergyBase crystalBase)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB34110", Offset = "0xB34110", VA = "0xB34110")]
	private void SetCrystalConnection(bool which)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB344BC", Offset = "0xB344BC", VA = "0xB344BC")]
	[ContextMenu("SlingFired")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB341F8", Offset = "0xB341F8", VA = "0xB341F8")]
	public void MakeSpringSoft(bool springStaysSoft = false)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB34660", Offset = "0xB34660", VA = "0xB34660")]
	[IteratorStateMachine(typeof(<ResetSpring>d__31))]
	private IEnumerator ResetSpring()
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB346FC", Offset = "0xB346FC", VA = "0xB346FC")]
	private bool AnyMagnetGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB34358", Offset = "0xB34358", VA = "0xB34358")]
	private void MakeSpringHard(float factor = 1f)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB348F8", Offset = "0xB348F8", VA = "0xB348F8")]
	private void Burnout(Glue which)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB34A5C", Offset = "0xB34A5C", VA = "0xB34A5C")]
	private void CheckSpecialConnectedBurnout()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB34B70", Offset = "0xB34B70", VA = "0xB34B70")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xB34BA0", Offset = "0xB34BA0", VA = "0xB34BA0")]
	private void DetachCheck()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xB33B90", Offset = "0xB33B90", VA = "0xB33B90")]
	private void SetSlingshot()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB34D28", Offset = "0xB34D28", VA = "0xB34D28")]
	public PowerSlingController()
	{
	}
}
[Token(Token = "0x20000F3")]
public class RocketRemote : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	public delegate void RocketRemotePressed();

	[Token(Token = "0x20000F5")]
	public delegate void RocketRemoteOff();

	[Token(Token = "0x14000017")]
	public static event RocketRemotePressed OnRocketRemotePressed
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xB34E58", Offset = "0xB34E58", VA = "0xB34E58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xB34F10", Offset = "0xB34F10", VA = "0xB34F10")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event RocketRemoteOff OnRocketRemoteOffPressed
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB34FC8", Offset = "0xB34FC8", VA = "0xB34FC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xB35084", Offset = "0xB35084", VA = "0xB35084")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB35140", Offset = "0xB35140", VA = "0xB35140")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB351A4", Offset = "0xB351A4", VA = "0xB351A4")]
	public void ButtonOffPressed()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB35214", Offset = "0xB35214", VA = "0xB35214")]
	public RocketRemote()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x20000F7")]
	private class Wrapper<T>
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Items;

		[Token(Token = "0x60005A1")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x600059F")]
	public static T FromJson<T>(string json)
	{
		return (T)null;
	}

	[Token(Token = "0x60005A0")]
	public static string ToJson<T>(T array)
	{
		return null;
	}
}
[Token(Token = "0x20000F8")]
public class ScenePhotoCamera : MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float photoDelay;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB353EC", Offset = "0xB353EC", VA = "0xB353EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xB3543C", Offset = "0xB3543C", VA = "0xB3543C")]
	private void TakePhoto()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xB354BC", Offset = "0xB354BC", VA = "0xB354BC")]
	public ScenePhotoCamera()
	{
	}
}
[Token(Token = "0x20000F9")]
public class SelectionSpawner : CreateVisualTarget
{
	[Token(Token = "0x20000FA")]
	public delegate void ObjectSpawned(GameObject gameObject);

	[Token(Token = "0x20000FB")]
	public delegate void ObjectRecycled(GameObject gameObject);

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("SelectionSpawner area------------------")]
	[Space]
	[Space]
	public List<Collider> colliders;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float wait;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float nextItemWait;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float spawnAgainWait;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waitCounter;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool useSpawnerRotation;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int MaxElements;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int spawnedElements;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int itemID;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject currentSpawnPrefab;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject currentSpawnedGO;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody currentSpawnedRB;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider spawnCollider;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider deleteCollider;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float cleanUpTime;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float coolDown;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float coolDownTimer;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private EntityLookup entityLookup;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int categoryIDX;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject occupiedLight;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject occupiedLightOff;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject createSlot;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject destroySlot;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool editOffset;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool isPlaying;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool spawnSlotOccupied;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Space]
	public TextMeshProUGUI CategoryText;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image CategoryIcon;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite recycleIcon;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool createMode;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public CategoryDefinition people;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float rotationSpeed;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool debugGhostSpawnOnly;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool progressionSpawner;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	[HideInInspector]
	public bool tweakMode;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 spawnOffset;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Vector3 spawnEulerOffset;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 originalEulerAngles;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Grabbable grab;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool isMovableEditorSpanwer;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private FixedJoint editorFixedJoint;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float originalMass;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Entity entity;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool spanwnAreaEmpty;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Entity lastRecycled;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 axis;

	[Token(Token = "0x14000019")]
	public static event ObjectSpawned OnObjectSpawned
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xB354CC", Offset = "0xB354CC", VA = "0xB354CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xB35584", Offset = "0xB35584", VA = "0xB35584")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event ObjectRecycled OnObjectRecycled
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xB3563C", Offset = "0xB3563C", VA = "0xB3563C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xB356F8", Offset = "0xB356F8", VA = "0xB356F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xB357B4", Offset = "0xB357B4", VA = "0xB357B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xB35AF0", Offset = "0xB35AF0", VA = "0xB35AF0")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB35CE4", Offset = "0xB35CE4", VA = "0xB35CE4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB35DCC", Offset = "0xB35DCC", VA = "0xB35DCC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xB35EB4", Offset = "0xB35EB4", VA = "0xB35EB4")]
	private void OnGrabObject(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xB36024", Offset = "0xB36024", VA = "0xB36024")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xB3593C", Offset = "0xB3593C", VA = "0xB3593C")]
	public void SetMode(bool create)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB35AA0", Offset = "0xB35AA0", VA = "0xB35AA0")]
	private void SetCategory()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB36408", Offset = "0xB36408", VA = "0xB36408")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xB36538", Offset = "0xB36538", VA = "0xB36538")]
	public void ChangeCategory(bool forward = true)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xB359B0", Offset = "0xB359B0", VA = "0xB359B0")]
	private void SpawnCurrentItem()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xB362F8", Offset = "0xB362F8", VA = "0xB362F8")]
	public void DestroySpawned()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xB36758", Offset = "0xB36758", VA = "0xB36758")]
	public void ChangeItem(bool forward = true)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB361E4", Offset = "0xB361E4", VA = "0xB361E4")]
	private void CheckSpawnSlots()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB367B4", Offset = "0xB367B4", VA = "0xB367B4")]
	private void PositionObject()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB36614", Offset = "0xB36614", VA = "0xB36614")]
	private void PositionTargetGhost()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB368F8", Offset = "0xB368F8", VA = "0xB368F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB36EC4", Offset = "0xB36EC4", VA = "0xB36EC4")]
	private void Recycle(Collider col)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB372C8", Offset = "0xB372C8", VA = "0xB372C8")]
	private void CleanColliders()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB373C0", Offset = "0xB373C0", VA = "0xB373C0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB37564", Offset = "0xB37564", VA = "0xB37564")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xB37600", Offset = "0xB37600", VA = "0xB37600")]
	public SelectionSpawner()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ShellBase : MonoBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addToOOBDetection;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ignorePrecisionScore;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xB37844", Offset = "0xB37844", VA = "0xB37844", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xB37848", Offset = "0xB37848", VA = "0xB37848")]
	public ShellBase()
	{
	}
}
[Token(Token = "0x20000FD")]
[ExecuteInEditMode]
public class ShellConstructionTarget : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition shellMyEntity;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTarget myTarget;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xB37850", Offset = "0xB37850", VA = "0xB37850")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xB3797C", Offset = "0xB3797C", VA = "0xB3797C")]
	public ShellConstructionTarget()
	{
	}
}
[Token(Token = "0x20000FE")]
[ExecuteInEditMode]
public class ShellConstructionTargetAngularVelocity : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shellTargetValue;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int shellTargetID;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetAngularVelocity myTarget;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xB37984", Offset = "0xB37984", VA = "0xB37984")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xB37A7C", Offset = "0xB37A7C", VA = "0xB37A7C")]
	public ShellConstructionTargetAngularVelocity()
	{
	}
}
[Token(Token = "0x20000FF")]
[ExecuteInEditMode]
public class ShellConstructionTargetGForce : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shellTargetValue;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int shellTargetID;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetGForce myTarget;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xB37A8C", Offset = "0xB37A8C", VA = "0xB37A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xB37B84", Offset = "0xB37B84", VA = "0xB37B84")]
	public ShellConstructionTargetGForce()
	{
	}
}
[Token(Token = "0x2000100")]
[ExecuteInEditMode]
public class ShellConstructionTargetRocket : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition shellMyEntity;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetRocket myTarget;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool triggerOnce;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideAfterTriggered;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xB37B94", Offset = "0xB37B94", VA = "0xB37B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xB37CD0", Offset = "0xB37CD0", VA = "0xB37CD0")]
	public ShellConstructionTargetRocket()
	{
	}
}
[Token(Token = "0x2000101")]
public class Shell_MagnetDispenser : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool[] ActiveMagnet;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool[] LockedMagnet;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool progressionDispenser;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int amount;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasWheel;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GluemachineSpawner myTarget;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<bool> locked;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EntityDefinition> list;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Level sizeWheelUnlock;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xB37CE0", Offset = "0xB37CE0", VA = "0xB37CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xB37E14", Offset = "0xB37E14", VA = "0xB37E14")]
	private void Init()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xB37E6C", Offset = "0xB37E6C", VA = "0xB37E6C")]
	private void ManualInit()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xB37E24", Offset = "0xB37E24", VA = "0xB37E24")]
	private void ProgressionInit()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xB38160", Offset = "0xB38160", VA = "0xB38160")]
	public void GetProgressionPrefabList()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xB37E94", Offset = "0xB37E94", VA = "0xB37E94")]
	public void GetPrefabList()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xB383B8", Offset = "0xB383B8", VA = "0xB383B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xB383BC", Offset = "0xB383BC", VA = "0xB383BC")]
	public Shell_MagnetDispenser()
	{
	}
}
[Token(Token = "0x2000102")]
[ExecuteInEditMode]
public class Shell_tools_ValidationDevice : MonoBehaviour
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool freeCamera;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionValidationPhotoCamera myTarget;

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xB383CC", Offset = "0xB383CC", VA = "0xB383CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xB384AC", Offset = "0xB384AC", VA = "0xB384AC")]
	public Shell_tools_ValidationDevice()
	{
	}
}
[Token(Token = "0x2000103")]
public class StabiliserHoming : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	public delegate void EMPMissileHitDelegate(StabiliserHoming missile);

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 diff;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform orientationTarget;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float uprightTorque;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool easeOutForce;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float easeOutFactor;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 torque;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ForceMode forceMode;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxVelocity;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ForceMode flightForceMode;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float flightForce;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float homingDelay;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float homingSpeedup;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHoming;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float homingAccelerationFactor;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 heading;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float velFactor;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject particles;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool inActive;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float maxBurntime;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float burntime;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EMP emp;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject fake;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool doExplosion;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BossController bossController;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastY;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool exploded;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float homingCounter;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float factor;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody colRB;

	[Token(Token = "0x1400001B")]
	public static event EMPMissileHitDelegate OnEMPMissileHit
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xB384B4", Offset = "0xB384B4", VA = "0xB384B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xB3856C", Offset = "0xB3856C", VA = "0xB3856C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xB38624", Offset = "0xB38624", VA = "0xB38624")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xB386D8", Offset = "0xB386D8", VA = "0xB386D8")]
	private void StartHoming()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xB38718", Offset = "0xB38718", VA = "0xB38718")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xB38798", Offset = "0xB38798", VA = "0xB38798")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xB38818", Offset = "0xB38818", VA = "0xB38818")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xB38EBC", Offset = "0xB38EBC", VA = "0xB38EBC")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xB38FE4", Offset = "0xB38FE4", VA = "0xB38FE4")]
	private void Remove()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xB39078", Offset = "0xB39078", VA = "0xB39078")]
	private void EMPExplode(Glue thisGlue, EMP whichEMP)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xB3915C", Offset = "0xB3915C", VA = "0xB3915C")]
	private void Explode()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xB3881C", Offset = "0xB3881C", VA = "0xB3881C")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xB39274", Offset = "0xB39274", VA = "0xB39274")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xB394EC", Offset = "0xB394EC", VA = "0xB394EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xB395D0", Offset = "0xB395D0", VA = "0xB395D0")]
	public StabiliserHoming()
	{
	}
}
[Token(Token = "0x2000105")]
public class Story_UFODiscovery : MonoBehaviour
{
	[Token(Token = "0x2000106")]
	public delegate void OnLosenContainerDelegate(int _times);

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody[] rocksToRelease;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rubble;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doRelease;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody ripOffObject;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween tween;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particles;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ripRubbleSpawnPos;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int timesRippedOff;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject landSlideParticles;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ufoLoop;

	[Token(Token = "0x1400001C")]
	public event OnLosenContainerDelegate OnLosenContainer
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xB39774", Offset = "0xB39774", VA = "0xB39774")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xB39810", Offset = "0xB39810", VA = "0xB39810")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xB398AC", Offset = "0xB398AC", VA = "0xB398AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xB39AF8", Offset = "0xB39AF8", VA = "0xB39AF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xB39B78", Offset = "0xB39B78", VA = "0xB39B78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xB39BF8", Offset = "0xB39BF8", VA = "0xB39BF8")]
	private void RipOff(List<GameObject> _grabbedStuff, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xB3A0B8", Offset = "0xB3A0B8", VA = "0xB3A0B8")]
	private void ReleaseRocks(bool _mode)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xB3A1B0", Offset = "0xB3A1B0", VA = "0xB3A1B0")]
	private float GetRnd(float rng)
	{
		return default(float);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB3A1C0", Offset = "0xB3A1C0", VA = "0xB3A1C0")]
	private void ShakeRocks()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB39934", Offset = "0xB39934", VA = "0xB39934")]
	private void DoReleaseRocks()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB3A310", Offset = "0xB3A310", VA = "0xB3A310")]
	public Story_UFODiscovery()
	{
	}
}
[Token(Token = "0x2000107")]
public class TorqueSteering : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 target;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float uprightTorque;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetTrans;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion rot;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool stabiliseActive;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB3B46C", Offset = "0xB3B46C", VA = "0xB3B46C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB3B4F4", Offset = "0xB3B4F4", VA = "0xB3B4F4")]
	public void SetStabilise(bool _which)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB3B500", Offset = "0xB3B500", VA = "0xB3B500")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB3B504", Offset = "0xB3B504", VA = "0xB3B504")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB3B698", Offset = "0xB3B698", VA = "0xB3B698")]
	public TorqueSteering()
	{
	}
}
[Token(Token = "0x2000108")]
public class BallMachine : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wait;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float counter;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocity;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomOffsetX;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomOffsetY;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float randomOffsetZ;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 randomOffset;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] objects;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float scaleFactor;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject go;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB3B6B0", Offset = "0xB3B6B0", VA = "0xB3B6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB3B6B4", Offset = "0xB3B6B4", VA = "0xB3B6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB3B8FC", Offset = "0xB3B8FC", VA = "0xB3B8FC")]
	public BallMachine()
	{
	}
}
[Token(Token = "0x2000109")]
public class IntroSpawnUfo : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ufoPrefab;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ufo;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ufoVelocity;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool launchDone;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnDistance;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB3B924", Offset = "0xB3B924", VA = "0xB3B924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xB3B928", Offset = "0xB3B928", VA = "0xB3B928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xB3B92C", Offset = "0xB3B92C", VA = "0xB3B92C")]
	private void CheckForlaunch()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xB3B9F4", Offset = "0xB3B9F4", VA = "0xB3B9F4")]
	private void SpawnUfo()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xB3BBBC", Offset = "0xB3BBBC", VA = "0xB3BBBC")]
	public IntroSpawnUfo()
	{
	}
}
[Token(Token = "0x200010A")]
public class WheelMechanic : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isTurning;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastAngle;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float diff;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angleDeltaSum;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConstructionTarget cTarget;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float myTimer;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xB3BBD4", Offset = "0xB3BBD4", VA = "0xB3BBD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xB3BCD0", Offset = "0xB3BCD0", VA = "0xB3BCD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xB3BBDC", Offset = "0xB3BBDC", VA = "0xB3BBDC")]
	public void SetWheel(bool which)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xB3BDDC", Offset = "0xB3BDDC", VA = "0xB3BDDC")]
	public WheelMechanic()
	{
	}
}
[Token(Token = "0x200010B")]
public class WheelSpeed : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> speeds;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro tm;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint hinge;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float angularVelocity;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xB3BDE4", Offset = "0xB3BDE4", VA = "0xB3BDE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xB3BED0", Offset = "0xB3BED0", VA = "0xB3BED0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xB3C284", Offset = "0xB3C284", VA = "0xB3C284")]
	public WheelSpeed()
	{
	}
}
[Token(Token = "0x200010C")]
public class ConstructionTargetPeopleInArea : CollisionBase
{
	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConstructionTargetPeopleInArea <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xB3CAE0", Offset = "0xB3CAE0", VA = "0xB3CAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0xB3CB28", Offset = "0xB3CB28", VA = "0xB3CB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xB3C300", Offset = "0xB3C300", VA = "0xB3C300")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB3C748", Offset = "0xB3C748", VA = "0xB3C748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xB3C74C", Offset = "0xB3C74C", VA = "0xB3C74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xB3CAE8", Offset = "0xB3CAE8", VA = "0xB3CAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelDirector_C7000_sister_heistPrep mainLevelDirector;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LevelDirector_base> requiredLeveldirectors;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<bool> correctLevelDirectors;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HumanController> wrongLevelDirectors;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<ConstructionTargetManual> requiredTargets;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xB3C28C", Offset = "0xB3C28C", VA = "0xB3C28C")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xB3C328", Offset = "0xB3C328", VA = "0xB3C328", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xB3C60C", Offset = "0xB3C60C", VA = "0xB3C60C")]
	private void CheckAllTargets()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xB3C4C0", Offset = "0xB3C4C0", VA = "0xB3C4C0")]
	private void WrongHuman(HumanController hc, bool added)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xB3C740", Offset = "0xB3C740", VA = "0xB3C740")]
	public ConstructionTargetPeopleInArea()
	{
	}
}
[Token(Token = "0x200010E")]
public class ContactTracing : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <Reset>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRender;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ContactTracing <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xB3CE04", Offset = "0xB3CE04", VA = "0xB3CE04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0xB3CE4C", Offset = "0xB3CE4C", VA = "0xB3CE4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xB3CCFC", Offset = "0xB3CCFC", VA = "0xB3CCFC")]
		[DebuggerHidden]
		public <Reset>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB3CD2C", Offset = "0xB3CD2C", VA = "0xB3CD2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xB3CD30", Offset = "0xB3CD30", VA = "0xB3CD30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xB3CE0C", Offset = "0xB3CE0C", VA = "0xB3CE0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material myMat;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xB3CB30", Offset = "0xB3CB30", VA = "0xB3CB30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xB3CBA4", Offset = "0xB3CBA4", VA = "0xB3CBA4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xB3CC6C", Offset = "0xB3CC6C", VA = "0xB3CC6C")]
	[IteratorStateMachine(typeof(<Reset>d__3))]
	private IEnumerator Reset(MeshRenderer meshRender)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xB3CD24", Offset = "0xB3CD24", VA = "0xB3CD24")]
	public ContactTracing()
	{
	}
}
[Token(Token = "0x2000110")]
public class ContainerRescueManager : MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetsInMission;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ConstructionTargetContainerRescue> manualTargets;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform perimeter;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool checkForAchievement;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Achievement achievementAllContainers;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool achievementUnlocked;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelDirector_C122_Shipwreck levelDir;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int containersOutOfWater;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB3CE54", Offset = "0xB3CE54", VA = "0xB3CE54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB3CED4", Offset = "0xB3CED4", VA = "0xB3CED4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB3CF54", Offset = "0xB3CF54", VA = "0xB3CF54")]
	private void LevelComplete()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xB3CF60", Offset = "0xB3CF60", VA = "0xB3CF60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xB3CFF4", Offset = "0xB3CFF4", VA = "0xB3CFF4")]
	private void CheckLoadedAchievement()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xB3D21C", Offset = "0xB3D21C", VA = "0xB3D21C")]
	private void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xB3D220", Offset = "0xB3D220", VA = "0xB3D220")]
	private void ScanContainers()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xB3D438", Offset = "0xB3D438", VA = "0xB3D438")]
	public ContainerRescueManager()
	{
	}
}
[Token(Token = "0x2000111")]
public class CopySandboxSave : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xB3D448", Offset = "0xB3D448", VA = "0xB3D448")]
	private void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xB3D524", Offset = "0xB3D524", VA = "0xB3D524")]
	public void LevelToClipboard()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xB3D59C", Offset = "0xB3D59C", VA = "0xB3D59C")]
	public CopySandboxSave()
	{
	}
}
[Token(Token = "0x2000112")]
public class CraneWinchControl : MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float craneSpeed;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentSpeed;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topLimit;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bottomLimit;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool winchOn;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedSFXTreshold;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject winchSFX;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool craneDown;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xB3D5A4", Offset = "0xB3D5A4", VA = "0xB3D5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB3D5C4", Offset = "0xB3D5C4", VA = "0xB3D5C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB3D644", Offset = "0xB3D644", VA = "0xB3D644")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xB3D6C4", Offset = "0xB3D6C4", VA = "0xB3D6C4")]
	private void LeverUpdate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB3D6CC", Offset = "0xB3D6CC", VA = "0xB3D6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xB3D8BC", Offset = "0xB3D8BC", VA = "0xB3D8BC")]
	public CraneWinchControl()
	{
	}
}
[Token(Token = "0x2000113")]
public class CreateVisualTarget : MonoBehaviour
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[Header("CreateVisualTarget area------------------")]
	public GameObject target;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string colliderTag;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> outlines;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject spawnPrefab;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasTargetCollider;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Collider spawnColliderTarget;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[] sharedMaterials;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material ghostMaterial;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody targetRB;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xB3D8E4", Offset = "0xB3D8E4", VA = "0xB3D8E4")]
	public void SetPrefab(GameObject _prefab)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xB3D8EC", Offset = "0xB3D8EC", VA = "0xB3D8EC")]
	[ContextMenu("CreateGhost")]
	public void CreateGhost(bool useSpawnerOrientation = true, [Optional] Vector3 offset)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB3E8E8", Offset = "0xB3E8E8", VA = "0xB3E8E8")]
	private void ComponentDestroy(Transform _trans)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB3DC38", Offset = "0xB3DC38", VA = "0xB3DC38")]
	private void DeleteStuff()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB3F04C", Offset = "0xB3F04C", VA = "0xB3F04C")]
	[ContextMenu("SetDefaultOutlines")]
	private void SetDefaultOutlines()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xB3F054", Offset = "0xB3F054", VA = "0xB3F054")]
	private void SetMaterialTo(Renderer mr, Material _material)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xB3EE2C", Offset = "0xB3EE2C", VA = "0xB3EE2C")]
	public void SetOutlines(bool showRenderer = true)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xB3EBC0", Offset = "0xB3EBC0", VA = "0xB3EBC0")]
	private void PrepareOutlines(UnityEngine.Object obj, bool showRenderer = true, bool defaultOutline = true)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xB3E994", Offset = "0xB3E994", VA = "0xB3E994")]
	private void TurnToTriggers(Collider col, bool compForced = false)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xB3E90C", Offset = "0xB3E90C", VA = "0xB3E90C")]
	private void DoDestroy(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xB3F1E8", Offset = "0xB3F1E8", VA = "0xB3F1E8")]
	public void DeleteAttach()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB3F31C", Offset = "0xB3F31C", VA = "0xB3F31C")]
	public CreateVisualTarget()
	{
	}
}
[Token(Token = "0x2000114")]
public class CreditsFireworks : MonoBehaviour
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] secondaryFireworks;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB3F374", Offset = "0xB3F374", VA = "0xB3F374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB3F378", Offset = "0xB3F378", VA = "0xB3F378")]
	public void StartFireworks()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB3F77C", Offset = "0xB3F77C", VA = "0xB3F77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xB3F780", Offset = "0xB3F780", VA = "0xB3F780")]
	public CreditsFireworks()
	{
	}
}
[Token(Token = "0x2000115")]
public class CreditsParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteMask spriteMask;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xB3F788", Offset = "0xB3F788", VA = "0xB3F788")]
	public CreditsParticleSystem()
	{
	}
}
[Token(Token = "0x2000116")]
public class CrystalAntiGrav : CollisionBase
{
	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxShake;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float gravityCounterFactor;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public ForceMode forceMode;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Rigidbody> rbsInRange;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB3F790", Offset = "0xB3F790", VA = "0xB3F790", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xB3F900", Offset = "0xB3F900", VA = "0xB3F900")]
	private float RND(float f)
	{
		return default(float);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xB3F910", Offset = "0xB3F910", VA = "0xB3F910")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xB3FB74", Offset = "0xB3FB74", VA = "0xB3FB74")]
	public CrystalAntiGrav()
	{
	}
}
[Token(Token = "0x2000117")]
public class CrystalEnergyBase : MonoBehaviour
{
	[Token(Token = "0x2000118")]
	public delegate void EnergySourceEventDelegate(CrystalEnergyBase energyBase);

	[Token(Token = "0x2000119")]
	public delegate void EnergyReceiverLevelChangeEventDelegate(int _energyLevel);

	[Token(Token = "0x200011A")]
	public delegate void ReceiverCheckDelegate();

	[Token(Token = "0x200011B")]
	public enum EnergyType
	{
		[Token(Token = "0x4000764")]
		source,
		[Token(Token = "0x4000765")]
		receiver
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CrystalEnergyBase energyBaseRef;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CrystalEnergyBase> connections;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnergyType energyType;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isConnectorOnly;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool playEnergyFlowSound;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StudioEventEmitter studioEventEmitter;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string energyFlowSFX;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGlue;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Glue glue;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Glued glued;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnEvent;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OffEvent;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool chained;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CrystalEnergyBase chainObject;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int energyLevel;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int lastEnergyLevel;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string energyLoopSFX;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<CrystalEnergyBase> allConnections;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<CrystalEnergyBase> connectedSources;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<CrystalEnergyBase> connectorSources;

	[Token(Token = "0x1400001D")]
	public static event EnergySourceEventDelegate OnEnergySourceChangeEvent
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xB3FC10", Offset = "0xB3FC10", VA = "0xB3FC10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB3FCC8", Offset = "0xB3FCC8", VA = "0xB3FCC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event EnergyReceiverLevelChangeEventDelegate OnReceiverEnergyLevelChangeEvent
	{
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xB3FD80", Offset = "0xB3FD80", VA = "0xB3FD80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xB3FE1C", Offset = "0xB3FE1C", VA = "0xB3FE1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ReceiverCheckDelegate OnReceiverCheck
	{
		[Token(Token = "0x6000650")]
		[Address(RVA = "0xB3FEB8", Offset = "0xB3FEB8", VA = "0xB3FEB8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000651")]
		[Address(RVA = "0xB3FF74", Offset = "0xB3FF74", VA = "0xB3FF74")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xB40030", Offset = "0xB40030", VA = "0xB40030")]
	[ContextMenu("TestDestroy")]
	public void TestDestroy()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xB400D4", Offset = "0xB400D4", VA = "0xB400D4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xB400D8", Offset = "0xB400D8", VA = "0xB400D8", Slot = "5")]
	public virtual void SetEnergyLevel(int _eLevel)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xB400E0", Offset = "0xB400E0", VA = "0xB400E0")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xB40280", Offset = "0xB40280", VA = "0xB40280")]
	public List<CrystalEnergyBase> GetConnections()
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xB40510", Offset = "0xB40510", VA = "0xB40510", Slot = "6")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xB4083C", Offset = "0xB4083C", VA = "0xB4083C", Slot = "7")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xB40A0C", Offset = "0xB40A0C", VA = "0xB40A0C")]
	public void AddConnection(CrystalEnergyBase crystalEnergy)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xB40AF4", Offset = "0xB40AF4", VA = "0xB40AF4")]
	public void RemoveConnection(CrystalEnergyBase crystalEnergy)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xB40B84", Offset = "0xB40B84", VA = "0xB40B84", Slot = "8")]
	public virtual void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xB40B88", Offset = "0xB40B88", VA = "0xB40B88", Slot = "9")]
	public virtual void RemoveAllConnections()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xB40C70", Offset = "0xB40C70", VA = "0xB40C70", Slot = "10")]
	public virtual void CallReceiverEvent()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xB40CD4", Offset = "0xB40CD4", VA = "0xB40CD4", Slot = "11")]
	public virtual void ReceiversEvent()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xB41020", Offset = "0xB41020", VA = "0xB41020")]
	private void EnergySound(int _lastEnergy, int _energy)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xB411B0", Offset = "0xB411B0", VA = "0xB411B0", Slot = "12")]
	public virtual void CallEnergyEvent()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xB4121C", Offset = "0xB4121C", VA = "0xB4121C", Slot = "13")]
	public virtual void EnergyLevelEvent(CrystalEnergyBase _ceb)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xB41220", Offset = "0xB41220", VA = "0xB41220")]
	public CrystalEnergyBase()
	{
	}
}
[Token(Token = "0x200011C")]
public class CrystalEnergyPowerSling : CrystalEnergyBase
{
	[Token(Token = "0x200011D")]
	public delegate void EnergyConnectionDelegate(Glue _glue, Glued _glued);

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool onlyCertainLayersAllowed;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public LayerMask allowedLayers;

	[Token(Token = "0x14000020")]
	public static event EnergyConnectionDelegate OnEnergyConnection
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB41618", Offset = "0xB41618", VA = "0xB41618")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB416D0", Offset = "0xB416D0", VA = "0xB416D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xB41788", Offset = "0xB41788", VA = "0xB41788")]
	private bool LayerAllowed(Glue _glue, Glued _glued)
	{
		return default(bool);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xB41950", Offset = "0xB41950", VA = "0xB41950", Slot = "8")]
	public override void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xB41BC8", Offset = "0xB41BC8", VA = "0xB41BC8")]
	[ContextMenu("ConnectionsContainEnergyObject")]
	private void ConnectionsContainEnergyObject()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xB41D0C", Offset = "0xB41D0C", VA = "0xB41D0C")]
	public CrystalEnergyPowerSling()
	{
	}
}
[Token(Token = "0x200011E")]
public class CrystalLaser : MonoBehaviour
{
	[Token(Token = "0x200011F")]
	public enum State
	{
		[Token(Token = "0x4000789")]
		empty,
		[Token(Token = "0x400078A")]
		charged,
		[Token(Token = "0x400078B")]
		cooldown
	}

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform laserTransform;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject laserVFX;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool laserActive;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit hit;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject colliderTriggerPrefab;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int maxDeflections;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> laserColliders;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HazardTriggerLaserForces> hazardTriggerLaser;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 triggerScale;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LayerMask reflectionLayerMask;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int mirrorLayer;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 startPosition;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 startDir;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject activeEffects;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int crystalCharge;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int maxCharge;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public State laserState;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool switchedOn;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 chargeBarScale;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 nullVector;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform chargeBarRoot;

	[Token(Token = "0x4000780")]
	public const int batteryCharge = 2;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float reChargeFactor;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CrystalEnergyBase crystalEnergyBase;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 hitPosition;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chargeFactor;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Ray ray;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool laserHit;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Vector3> lines;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xB41E6C", Offset = "0xB41E6C", VA = "0xB41E6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xB422AC", Offset = "0xB422AC", VA = "0xB422AC")]
	public void AddCharge2()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xB422B8", Offset = "0xB422B8", VA = "0xB422B8")]
	public void ReduceCharge2()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xB422C4", Offset = "0xB422C4", VA = "0xB422C4")]
	[ContextMenu("UnCharge Laser")]
	public void UnChargeLaser()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xB42230", Offset = "0xB42230", VA = "0xB42230")]
	public void ChargeLaser(int _charge)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xB423B8", Offset = "0xB423B8", VA = "0xB423B8")]
	private void SetRayEnergy()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xB42508", Offset = "0xB42508", VA = "0xB42508")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xB425FC", Offset = "0xB425FC", VA = "0xB425FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xB42728", Offset = "0xB42728", VA = "0xB42728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xB42854", Offset = "0xB42854", VA = "0xB42854")]
	private void RemoteEvent(bool which, int _channelID)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xB42870", Offset = "0xB42870", VA = "0xB42870")]
	public void ToggleLaser()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xB428A0", Offset = "0xB428A0", VA = "0xB428A0")]
	[ContextMenu("DeActivateLaser")]
	public void DeActivateLaser()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB428AC", Offset = "0xB428AC", VA = "0xB428AC")]
	[ContextMenu("ActivateLaser")]
	public void ActivateLaser()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB422CC", Offset = "0xB422CC", VA = "0xB422CC")]
	private void SetLaserActive(bool which)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB41F74", Offset = "0xB41F74", VA = "0xB41F74")]
	private void FillTriggerList()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB428CC", Offset = "0xB428CC", VA = "0xB428CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB428D0", Offset = "0xB428D0", VA = "0xB428D0")]
	private void Laser()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB4311C", Offset = "0xB4311C", VA = "0xB4311C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xB431E4", Offset = "0xB431E4", VA = "0xB431E4")]
	public CrystalLaser()
	{
	}
}
[Token(Token = "0x2000120")]
public class CrystalShock : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrystalShock <>4__this;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <rot>5__2;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xB436A0", Offset = "0xB436A0", VA = "0xB436A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xB436E8", Offset = "0xB436E8", VA = "0xB436E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB433DC", Offset = "0xB433DC", VA = "0xB433DC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xB4340C", Offset = "0xB4340C", VA = "0xB4340C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xB43410", Offset = "0xB43410", VA = "0xB43410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xB436A8", Offset = "0xB436A8", VA = "0xB436A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mesh;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB43368", Offset = "0xB43368", VA = "0xB43368")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB43404", Offset = "0xB43404", VA = "0xB43404")]
	public CrystalShock()
	{
	}
}
[Token(Token = "0x2000122")]
public class CrystalShockExplosion : MonoBehaviour
{
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB436F0", Offset = "0xB436F0", VA = "0xB436F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB43744", Offset = "0xB43744", VA = "0xB43744")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB437FC", Offset = "0xB437FC", VA = "0xB437FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB43804", Offset = "0xB43804", VA = "0xB43804")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB43828", Offset = "0xB43828", VA = "0xB43828")]
	public CrystalShockExplosion()
	{
	}
}
[Token(Token = "0x2000123")]
public class CrystalThreatLevel : MonoBehaviour
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int progressThreatLevel;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int loadedLevelThreatLevel;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuestSystem questSystem;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CrystalThreatLevel _instance;

	[Token(Token = "0x17000051")]
	public static CrystalThreatLevel Instance
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB43830", Offset = "0xB43830", VA = "0xB43830")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xB439AC", Offset = "0xB439AC", VA = "0xB439AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xB439BC", Offset = "0xB439BC", VA = "0xB439BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xB43A3C", Offset = "0xB43A3C", VA = "0xB43A3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xB439B4", Offset = "0xB439B4", VA = "0xB439B4")]
	[ContextMenu("ReadThreatLevel")]
	private void ReadThreatLevel()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xB43ABC", Offset = "0xB43ABC", VA = "0xB43ABC")]
	private void UpdateThreatLevel(bool editorLevelStart)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xB43E0C", Offset = "0xB43E0C", VA = "0xB43E0C")]
	public CrystalThreatLevel()
	{
	}
}
[Token(Token = "0x2000124")]
public class DeactivateLimits : MonoBehaviour
{
	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string limitsID;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xB43E14", Offset = "0xB43E14", VA = "0xB43E14")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB43E20", Offset = "0xB43E20", VA = "0xB43E20")]
	public DeactivateLimits()
	{
	}
}
[Token(Token = "0x2000125")]
public class DebugCanvas : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	public enum Status
	{
		[Token(Token = "0x40007A6")]
		none,
		[Token(Token = "0x40007A7")]
		sdk,
		[Token(Token = "0x40007A8")]
		headsetRemoved,
		[Token(Token = "0x40007A9")]
		paused,
		[Token(Token = "0x40007AA")]
		quit
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvas;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject MainCanvas;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject debugGroup;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI tm;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject entitlementFeedback;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bugReporterButton;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool displayUserWatermark;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool punishEntitlementFail;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool displayEntitlementFeedback;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool useDebugFeedback;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject errorFeedback;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI errorTextMesh;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject quitButton;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Status currentStatus;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB43E28", Offset = "0xB43E28", VA = "0xB43E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB43F68", Offset = "0xB43F68", VA = "0xB43F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB44058", Offset = "0xB44058", VA = "0xB44058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xB44180", Offset = "0xB44180", VA = "0xB44180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB442A8", Offset = "0xB442A8", VA = "0xB442A8")]
	private void GamePaused(bool isPaused)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB44588", Offset = "0xB44588", VA = "0xB44588")]
	private void HeadsetRemoved()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xB44594", Offset = "0xB44594", VA = "0xB44594")]
	private void QuitCalled()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xB442B4", Offset = "0xB442B4", VA = "0xB442B4")]
	public void ShowStatusMsg(Status error, bool isActive)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB445A0", Offset = "0xB445A0", VA = "0xB445A0")]
	public void FailedEntitlementCheck()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB43F34", Offset = "0xB43F34", VA = "0xB43F34")]
	public void SetEntitlementFeedback(bool isEntitled = false)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB44620", Offset = "0xB44620", VA = "0xB44620")]
	private void DoQuit()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xB44628", Offset = "0xB44628", VA = "0xB44628")]
	public static void SetCanvas(bool active)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xB44684", Offset = "0xB44684", VA = "0xB44684")]
	public static void ToggleCanvas()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xB446F0", Offset = "0xB446F0", VA = "0xB446F0")]
	public static void DebuggerKeys()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xB449EC", Offset = "0xB449EC", VA = "0xB449EC")]
	public DebugCanvas()
	{
	}
}
[Token(Token = "0x2000127")]
public class DebugValues : MonoBehaviour
{
	[Token(Token = "0x2000128")]
	public enum Display
	{
		[Token(Token = "0x40007AE")]
		timeScale,
		[Token(Token = "0x40007AF")]
		fixedStep,
		[Token(Token = "0x40007B0")]
		refreshRate
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Display displayMode;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro tmPro;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB449F4", Offset = "0xB449F4", VA = "0xB449F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB44A4C", Offset = "0xB44A4C", VA = "0xB44A4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB44AC0", Offset = "0xB44AC0", VA = "0xB44AC0")]
	public DebugValues()
	{
	}
}
[Token(Token = "0x2000129")]
public class DelayedHeistOOB : MonoBehaviour
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanController humanController;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject nonHuman;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB44AC8", Offset = "0xB44AC8", VA = "0xB44AC8")]
	public void Init(HumanController controller, float delay)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB44B60", Offset = "0xB44B60", VA = "0xB44B60")]
	private void OOBMe()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB44C2C", Offset = "0xB44C2C", VA = "0xB44C2C")]
	public static void InitOOB(HumanController trespasser, float delay = 1.5f)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB44D14", Offset = "0xB44D14", VA = "0xB44D14")]
	public static void InitOOBNonHuman(GameObject go)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB44DE8", Offset = "0xB44DE8", VA = "0xB44DE8")]
	public void InitNonHuman(GameObject go)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB44E54", Offset = "0xB44E54", VA = "0xB44E54")]
	private void OOBDel()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB44EAC", Offset = "0xB44EAC", VA = "0xB44EAC")]
	public DelayedHeistOOB()
	{
	}
}
[Token(Token = "0x200012A")]
public class DeleteOnJointBreak : MonoBehaviour
{
	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FixedJoint myJoint;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject deleteOnBreak;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB44EB4", Offset = "0xB44EB4", VA = "0xB44EB4")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB44F6C", Offset = "0xB44F6C", VA = "0xB44F6C")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB44FC0", Offset = "0xB44FC0", VA = "0xB44FC0")]
	public DeleteOnJointBreak()
	{
	}
}
[Token(Token = "0x200012B")]
public class DemoUnlock : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Unlocks;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool visible;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB44FC8", Offset = "0xB44FC8", VA = "0xB44FC8")]
	public void ShowHide()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB45038", Offset = "0xB45038", VA = "0xB45038")]
	public DemoUnlock()
	{
	}
}
[Token(Token = "0x200012C")]
public class Destroyer : MonoBehaviour
{
	[Token(Token = "0x200012D")]
	public delegate void DestroyDelegate(GameObject _gameObject);

	[Token(Token = "0x14000021")]
	public static event DestroyDelegate OnDestroy
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xB406DC", Offset = "0xB406DC", VA = "0xB406DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xB40954", Offset = "0xB40954", VA = "0xB40954")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB40044", Offset = "0xB40044", VA = "0xB40044")]
	public static void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB45040", Offset = "0xB45040", VA = "0xB45040")]
	public static void DestroyerDestroyImmediate(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB450D0", Offset = "0xB450D0", VA = "0xB450D0")]
	public Destroyer()
	{
	}
}
[Token(Token = "0x200012E")]
public class DestroyOnBurnout : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> trackedGlues;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB45118", Offset = "0xB45118", VA = "0xB45118")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB45198", Offset = "0xB45198", VA = "0xB45198")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB45218", Offset = "0xB45218", VA = "0xB45218")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB452C4", Offset = "0xB452C4", VA = "0xB452C4")]
	public DestroyOnBurnout()
	{
	}
}
[Token(Token = "0x200012F")]
public class DeviceBasedAction_base : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] deviceList;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("ACTION if NOT device in list")]
	public bool actionIfNotDevice;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB452CC", Offset = "0xB452CC", VA = "0xB452CC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB45388", Offset = "0xB45388", VA = "0xB45388", Slot = "5")]
	public virtual void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB4538C", Offset = "0xB4538C", VA = "0xB4538C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB45390", Offset = "0xB45390", VA = "0xB45390")]
	public DeviceBasedAction_base()
	{
	}
}
[Token(Token = "0x2000130")]
public class DeviceBasedFixedUpdate : MonoBehaviour
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] changeForDevice;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Set if NOT device in list")]
	public float fixedUpdate;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setIfNotDevice;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xB45398", Offset = "0xB45398", VA = "0xB45398")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xB4547C", Offset = "0xB4547C", VA = "0xB4547C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xB45480", Offset = "0xB45480", VA = "0xB45480")]
	public DeviceBasedFixedUpdate()
	{
	}
}
[Token(Token = "0x2000131")]
public class DeviceBasedFog : DeviceBasedAction_base
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fogDensity;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xB45490", Offset = "0xB45490", VA = "0xB45490", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB4549C", Offset = "0xB4549C", VA = "0xB4549C")]
	public DeviceBasedFog()
	{
	}
}
[Token(Token = "0x2000132")]
public class DeviceBasedGPULevel : DeviceBasedAction_base
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int GPULevel;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB454B0", Offset = "0xB454B0", VA = "0xB454B0", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB454B4", Offset = "0xB454B4", VA = "0xB454B4")]
	public DeviceBasedGPULevel()
	{
	}
}
[Token(Token = "0x2000133")]
public class DeviceBasedOversampling : MonoBehaviour
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] changeForDevice;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Set if NOT device in list")]
	public float overSampling;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setIfNotDevice;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB454C4", Offset = "0xB454C4", VA = "0xB454C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB454C8", Offset = "0xB454C8", VA = "0xB454C8")]
	public DeviceBasedOversampling()
	{
	}
}
[Token(Token = "0x2000134")]
public class DeviceBasedRemoval : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] hideForDevice;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("HIDE if NOT device in list")]
	public bool hideIfNotDevice;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useOtherGameobject;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToHide;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useAwake;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayHideForGizmo;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB454D8", Offset = "0xB454D8", VA = "0xB454D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB45614", Offset = "0xB45614", VA = "0xB45614")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xB454E8", Offset = "0xB454E8", VA = "0xB454E8")]
	private void RemoveStuff()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xB45624", Offset = "0xB45624", VA = "0xB45624")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xB45628", Offset = "0xB45628", VA = "0xB45628")]
	public DeviceBasedRemoval()
	{
	}
}
[Token(Token = "0x2000135")]
public class DeviceBasedRigidBody : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] addForDevice;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("HIDE if NOT device in list")]
	public bool addIfNotDevice;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useOtherGameobject;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToAddRB;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useAwake;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayAddForGizmo;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xB45638", Offset = "0xB45638", VA = "0xB45638")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xB457F0", Offset = "0xB457F0", VA = "0xB457F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xB45648", Offset = "0xB45648", VA = "0xB45648")]
	private void RemoveStuff()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xB45800", Offset = "0xB45800", VA = "0xB45800")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xB45804", Offset = "0xB45804", VA = "0xB45804")]
	public DeviceBasedRigidBody()
	{
	}
}
[Token(Token = "0x2000136")]
public class DeviceBasedSurfaceShader : DeviceBasedAction_base
{
	[Token(Token = "0x2000137")]
	public enum SurfaceShader
	{
		[Token(Token = "0x40007D1")]
		allNoise,
		[Token(Token = "0x40007D2")]
		foam,
		[Token(Token = "0x40007D3")]
		reflection,
		[Token(Token = "0x40007D4")]
		ricoNoise,
		[Token(Token = "0x40007D5")]
		noNoise
	}

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceShader surfaceShader;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xB45814", Offset = "0xB45814", VA = "0xB45814", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xB458BC", Offset = "0xB458BC", VA = "0xB458BC")]
	public DeviceBasedSurfaceShader()
	{
	}
}
[Token(Token = "0x2000138")]
[ExecuteInEditMode]
public class DisableChildrensRenderers : MonoBehaviour
{
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xB458C4", Offset = "0xB458C4", VA = "0xB458C4")]
	[ContextMenu("Disable Childrens Renderers")]
	public void DisableRenderers()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xB45960", Offset = "0xB45960", VA = "0xB45960")]
	[ContextMenu("Enable Childrens Renderers")]
	public void EnableRenderers()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xB459FC", Offset = "0xB459FC", VA = "0xB459FC")]
	public DisableChildrensRenderers()
	{
	}
}
[Token(Token = "0x2000139")]
public class DisableCollisionAgainstRBs : MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allColliders;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> disableRBs;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOnlyRBColliders;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRB;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xB45A04", Offset = "0xB45A04", VA = "0xB45A04")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xB45D0C", Offset = "0xB45D0C", VA = "0xB45D0C")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xB45EB8", Offset = "0xB45EB8", VA = "0xB45EB8")]
	public void IgnoreCollision(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xB45AD8", Offset = "0xB45AD8", VA = "0xB45AD8")]
	private List<Collider> GetAllColliders(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xB45FB8", Offset = "0xB45FB8", VA = "0xB45FB8")]
	public DisableCollisionAgainstRBs()
	{
	}
}
[Token(Token = "0x200013A")]
public class DisableCollisionOnSlingshot : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allColliders;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Rigidbody> disableRBs;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOnlyRBColliders;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool disableTriggers;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRB;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xB45FC0", Offset = "0xB45FC0", VA = "0xB45FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xB4626C", Offset = "0xB4626C", VA = "0xB4626C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xB46320", Offset = "0xB46320", VA = "0xB46320")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xB463D4", Offset = "0xB463D4", VA = "0xB463D4")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xB465F0", Offset = "0xB465F0", VA = "0xB465F0")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xB4679C", Offset = "0xB4679C", VA = "0xB4679C")]
	public void IgnoreCollision(bool which, Collider otherColliders)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xB46038", Offset = "0xB46038", VA = "0xB46038")]
	private List<Collider> GetAllColliders(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xB468EC", Offset = "0xB468EC", VA = "0xB468EC")]
	public DisableCollisionOnSlingshot()
	{
	}
}
[Token(Token = "0x200013B")]
public class DisableEmitterOnPreload : MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter studioEmitter;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xB468F4", Offset = "0xB468F4", VA = "0xB468F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xB46974", Offset = "0xB46974", VA = "0xB46974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xB469F4", Offset = "0xB469F4", VA = "0xB469F4")]
	private void Load()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xB46AD0", Offset = "0xB46AD0", VA = "0xB46AD0")]
	public DisableEmitterOnPreload()
	{
	}
}
[Token(Token = "0x200013C")]
public class DisableJointOnGrab : MonoBehaviour
{
	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xB46AD8", Offset = "0xB46AD8", VA = "0xB46AD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB46B58", Offset = "0xB46B58", VA = "0xB46B58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB46BD8", Offset = "0xB46BD8", VA = "0xB46BD8")]
	private void RemoveJoint(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB46CC8", Offset = "0xB46CC8", VA = "0xB46CC8")]
	public DisableJointOnGrab()
	{
	}
}
[Token(Token = "0x200013D")]
public class DisableOnDistance : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxDistance;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform vrCam;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float wait;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB46CD0", Offset = "0xB46CD0", VA = "0xB46CD0")]
	public void SetMode(bool which)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB46D74", Offset = "0xB46D74", VA = "0xB46D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB46DB4", Offset = "0xB46DB4", VA = "0xB46DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB46F20", Offset = "0xB46F20", VA = "0xB46F20")]
	private void TestDistance()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB470C4", Offset = "0xB470C4", VA = "0xB470C4")]
	public DisableOnDistance()
	{
	}
}
[Token(Token = "0x200013E")]
public class DisableOObOnTargetComplete : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTarget constructionTarget;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParachuteRespawnTracker tracker;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB470E4", Offset = "0xB470E4", VA = "0xB470E4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB47260", Offset = "0xB47260", VA = "0xB47260")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB472E0", Offset = "0xB472E0", VA = "0xB472E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB47360", Offset = "0xB47360", VA = "0xB47360")]
	private void TargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xB47454", Offset = "0xB47454", VA = "0xB47454")]
	public DisableOObOnTargetComplete()
	{
	}
}
[Token(Token = "0x200013F")]
public class DisableRBCollisionAgainstColliders : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allMyColliders;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> disableTransforms;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody myRB;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB4745C", Offset = "0xB4745C", VA = "0xB4745C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB4770C", Offset = "0xB4770C", VA = "0xB4770C")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xB478B4", Offset = "0xB478B4", VA = "0xB478B4")]
	public void IgnoreCollision(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xB47540", Offset = "0xB47540", VA = "0xB47540")]
	private List<Collider> GetAllColliders(Transform _trans)
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xB479B4", Offset = "0xB479B4", VA = "0xB479B4")]
	public DisableRBCollisionAgainstColliders()
	{
	}
}
[Token(Token = "0x2000140")]
public class DispenserSpawnCheck : CollisionBase
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool areaBlocked;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xB479BC", Offset = "0xB479BC", VA = "0xB479BC", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xB47A44", Offset = "0xB47A44", VA = "0xB47A44", Slot = "5")]
	public override void CollisionDictChangedNonRB(Collider col, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xB47ACC", Offset = "0xB47ACC", VA = "0xB47ACC")]
	public DispenserSpawnCheck()
	{
	}
}
[Token(Token = "0x2000141")]
public class DogController : SandboxInit_base
{
	[Token(Token = "0x2000142")]
	public enum Mode
	{
		[Token(Token = "0x40007FF")]
		bark,
		[Token(Token = "0x4000800")]
		shake,
		[Token(Token = "0x4000801")]
		growl
	}

	[Token(Token = "0x2000143")]
	[CompilerGenerated]
	private sealed class <MakeDogHappy>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogController <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0xB48750", Offset = "0xB48750", VA = "0xB48750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xB48798", Offset = "0xB48798", VA = "0xB48798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xB48368", Offset = "0xB48368", VA = "0xB48368")]
		[DebuggerHidden]
		public <MakeDogHappy>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xB48644", Offset = "0xB48644", VA = "0xB48644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xB48648", Offset = "0xB48648", VA = "0xB48648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xB48758", Offset = "0xB48758", VA = "0xB48758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000144")]
	[CompilerGenerated]
	private sealed class <Shake>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogController <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xB48A70", Offset = "0xB48A70", VA = "0xB48A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xB48AB8", Offset = "0xB48AB8", VA = "0xB48AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xB48390", Offset = "0xB48390", VA = "0xB48390")]
		[DebuggerHidden]
		public <Shake>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xB487A0", Offset = "0xB487A0", VA = "0xB487A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xB487A4", Offset = "0xB487A4", VA = "0xB487A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xB48A78", Offset = "0xB48A78", VA = "0xB48A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip HappyDog;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip Blink;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AchievementsCollectedObjectsID achievementsCollectedObjectsID;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip ShakingDog;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation ani;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject happyParticles;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject wetPartilces;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsHappy;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool dogsPettedAndFriendly;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string dogEmo;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Grabbable grabbable;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool tentacleIsClose;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Mode dogMode;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool sandboxDog;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject proximityTrigger;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTapped;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xB47AD4", Offset = "0xB47AD4", VA = "0xB47AD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xB47AF4", Offset = "0xB47AF4", VA = "0xB47AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xB47C8C", Offset = "0xB47C8C", VA = "0xB47C8C", Slot = "4")]
	public override void SandboxInit()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xB47B1C", Offset = "0xB47B1C", VA = "0xB47B1C")]
	private void StartBarkRepeat()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xB47C90", Offset = "0xB47C90", VA = "0xB47C90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xB47D90", Offset = "0xB47D90", VA = "0xB47D90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xB47E84", Offset = "0xB47E84", VA = "0xB47E84")]
	public void TentacleProximity(bool isClose, Dictionary<Rigidbody, List<Collider>> _collisionDict)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xB48008", Offset = "0xB48008", VA = "0xB48008")]
	private void DogPettedBefore()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xB47BB0", Offset = "0xB47BB0", VA = "0xB47BB0")]
	private void DogTamed()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xB4800C", Offset = "0xB4800C", VA = "0xB4800C")]
	private void Growl()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xB480A0", Offset = "0xB480A0", VA = "0xB480A0")]
	private void Bark()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xB4807C", Offset = "0xB4807C", VA = "0xB4807C")]
	private void Jump(float force = 2f)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xB480E0", Offset = "0xB480E0", VA = "0xB480E0")]
	private void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xB48280", Offset = "0xB48280", VA = "0xB48280")]
	[IteratorStateMachine(typeof(<MakeDogHappy>d__32))]
	private IEnumerator MakeDogHappy()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xB482F4", Offset = "0xB482F4", VA = "0xB482F4")]
	[IteratorStateMachine(typeof(<Shake>d__33))]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xB483B8", Offset = "0xB483B8", VA = "0xB483B8", Slot = "5")]
	public virtual void NoPlayerFocus()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xB483FC", Offset = "0xB483FC", VA = "0xB483FC", Slot = "6")]
	public virtual void PlayerFocus()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xB48598", Offset = "0xB48598", VA = "0xB48598")]
	public DogController()
	{
	}
}
[Token(Token = "0x2000145")]
public class DogProximity : CollisionBase
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DogController dogController;

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xB48AC0", Offset = "0xB48AC0", VA = "0xB48AC0", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xB48B2C", Offset = "0xB48B2C", VA = "0xB48B2C")]
	public DogProximity()
	{
	}
}
[Token(Token = "0x2000146")]
public class DogTrigger : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	public delegate void EnterAreaDelegate(List<HumanController> humanController, bool isDogMan, bool areaIsEmpty = false);

	[Token(Token = "0x400080A")]
	public const string dogMan = "raylamp";

	[Token(Token = "0x400080B")]
	public const string dogsOnly = "dogsOnly";

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject waypointPrefab;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HumanController> humansInTrigger;

	[Token(Token = "0x14000022")]
	public static event EnterAreaDelegate OnEnterArea
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xB48B34", Offset = "0xB48B34", VA = "0xB48B34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000731")]
		[Address(RVA = "0xB48BEC", Offset = "0xB48BEC", VA = "0xB48BEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xB48CA4", Offset = "0xB48CA4", VA = "0xB48CA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB48FD8", Offset = "0xB48FD8", VA = "0xB48FD8")]
	private void ManageHumansInTrigger()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xB49284", Offset = "0xB49284", VA = "0xB49284")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xB4938C", Offset = "0xB4938C", VA = "0xB4938C")]
	public DogTrigger()
	{
	}
}
[Token(Token = "0x2000148")]
public class DroneRotors : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	public enum SpinMode
	{
		[Token(Token = "0x400081D")]
		none,
		[Token(Token = "0x400081E")]
		spinning,
		[Token(Token = "0x400081F")]
		damaged
	}

	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <ColliderRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneRotors <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xB4A054", Offset = "0xB4A054", VA = "0xB4A054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xB4A09C", Offset = "0xB4A09C", VA = "0xB4A09C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xB49B9C", Offset = "0xB49B9C", VA = "0xB49B9C")]
		[DebuggerHidden]
		public <ColliderRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xB49E24", Offset = "0xB49E24", VA = "0xB49E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xB49E28", Offset = "0xB49E28", VA = "0xB49E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xB4A05C", Offset = "0xB4A05C", VA = "0xB4A05C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpinMode spinMode;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Drone myDrone;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tween tween;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool replaceDamaged;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject regularRotors;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject damageRotors;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int spinDirection;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform axis;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider dangerTrigger;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float colliderRepeat;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float damage;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxDamage;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HazardTrigger hazardTrigger;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody colRB;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xB49604", Offset = "0xB49604", VA = "0xB49604")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xB496EC", Offset = "0xB496EC", VA = "0xB496EC")]
	[ContextMenu("DAMAGE")]
	public void DoDamage()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xB496B4", Offset = "0xB496B4", VA = "0xB496B4")]
	public void SetMode(SpinMode _mode, bool force = false)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xB49708", Offset = "0xB49708", VA = "0xB49708")]
	private void DoNone()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB49B28", Offset = "0xB49B28", VA = "0xB49B28")]
	[IteratorStateMachine(typeof(<ColliderRoutine>d__18))]
	private IEnumerator ColliderRoutine()
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xB49820", Offset = "0xB49820", VA = "0xB49820")]
	private void StartSpinning()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xB49AF0", Offset = "0xB49AF0", VA = "0xB49AF0")]
	private void KillRween()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xB4996C", Offset = "0xB4996C", VA = "0xB4996C")]
	private void DamageRotors()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xB49BC4", Offset = "0xB49BC4", VA = "0xB49BC4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xB49C1C", Offset = "0xB49C1C", VA = "0xB49C1C")]
	private void RotorHits(Collider other)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xB49E00", Offset = "0xB49E00", VA = "0xB49E00")]
	public DroneRotors()
	{
	}
}
[Token(Token = "0x200014B")]
public class EatObject : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public enum ParticlePosition
	{
		[Token(Token = "0x400082F")]
		none,
		[Token(Token = "0x4000830")]
		attached,
		[Token(Token = "0x4000831")]
		mouth,
		[Token(Token = "0x4000832")]
		camera
	}

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementsCollectedObjects collectedObjectsScript;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AchievementsCollectedObjectsID collectedObjectsScriptID;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh eatenMesh;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EntityDefinition myEntityDefinition;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isThingEaten;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject eatFeedback;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eatFeedbackPrefab;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticlePosition particlePosition;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool hapticFeedback;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string eatSFX;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB4A0A4", Offset = "0xB4A0A4", VA = "0xB4A0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xB4A1C4", Offset = "0xB4A1C4", VA = "0xB4A1C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xB4A244", Offset = "0xB4A244", VA = "0xB4A244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xB4A2C4", Offset = "0xB4A2C4", VA = "0xB4A2C4")]
	public void ThingEaten(MouthSFXSet set, Entity entity, string ID, Transform mouth)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB4A698", Offset = "0xB4A698", VA = "0xB4A698")]
	public EatObject()
	{
	}
}
[Token(Token = "0x200014D")]
public class EditorReplicatorManager : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject editorReplicator;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool editorReplicatorSpawned;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xB4A6A8", Offset = "0xB4A6A8", VA = "0xB4A6A8")]
	public static bool ReplicatorSpawned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xB4A738", Offset = "0xB4A738", VA = "0xB4A738")]
	public static void ToggleEditorReplicator()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xB4A9B0", Offset = "0xB4A9B0", VA = "0xB4A9B0")]
	public EditorReplicatorManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class EditorShortcuts : MonoBehaviour
{
	[Token(Token = "0x6000753")]
	[Address(RVA = "0xB4A9B8", Offset = "0xB4A9B8", VA = "0xB4A9B8")]
	public EditorShortcuts()
	{
	}
}
[Token(Token = "0x200014F")]
public class EnergyLevelVisualiser : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CrystalEnergyBase energyBase;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int levelForActiveState;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject onState;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject offState;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xB4A9C0", Offset = "0xB4A9C0", VA = "0xB4A9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xB4AAAC", Offset = "0xB4AAAC", VA = "0xB4AAAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xB4AB30", Offset = "0xB4AB30", VA = "0xB4AB30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xB4A9C8", Offset = "0xB4A9C8", VA = "0xB4A9C8")]
	private void EnergyLevelChange(int energyLevel)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xB4ABB4", Offset = "0xB4ABB4", VA = "0xB4ABB4")]
	public EnergyLevelVisualiser()
	{
	}
}
[Serializable]
[Token(Token = "0x2000150")]
[CreateAssetMenu(fileName = "Category", menuName = "Category")]
public class CategoryDefinition : ScriptableObject
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string categoryName;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite Icon;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hideInSandbox;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool editorOnly;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xB4ABC4", Offset = "0xB4ABC4", VA = "0xB4ABC4")]
	public CategoryDefinition()
	{
	}
}
[Serializable]
[Token(Token = "0x2000151")]
public class Entity : MonoBehaviour
{
	[Token(Token = "0x2000152")]
	public delegate void OnEntityLoadDelegate(Entity entity, bool added);

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Entity Base Settings")]
	public EntityDefinition MyEntity;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EntityDefinition SaveEntity;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string newEntityName;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectSaveData osd;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool blocked;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool savedOnExit;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public string ID;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool editorSpawnerSpawned;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool sandboxSpawned;

	[Token(Token = "0x14000023")]
	public static event OnEntityLoadDelegate OnEntityLoadChange
	{
		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB4ABCC", Offset = "0xB4ABCC", VA = "0xB4ABCC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB4AC84", Offset = "0xB4AC84", VA = "0xB4AC84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xB4AD3C", Offset = "0xB4AD3C", VA = "0xB4AD3C")]
	public EntityDefinition GetSaveEntityDefinition()
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xB4ADB4", Offset = "0xB4ADB4", VA = "0xB4ADB4")]
	public void CreateNewID()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xB4AE18", Offset = "0xB4AE18", VA = "0xB4AE18")]
	private void EntityLoadChange(bool added)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xB4AE94", Offset = "0xB4AE94", VA = "0xB4AE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xB4AFBC", Offset = "0xB4AFBC", VA = "0xB4AFBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xB4AFC4", Offset = "0xB4AFC4", VA = "0xB4AFC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xB4AF0C", Offset = "0xB4AF0C", VA = "0xB4AF0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB4AFCC", Offset = "0xB4AFCC", VA = "0xB4AFCC")]
	[ContextMenu("TestDestroy")]
	private void TestDestroy()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB4AFE0", Offset = "0xB4AFE0", VA = "0xB4AFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xB4AFE4", Offset = "0xB4AFE4", VA = "0xB4AFE4")]
	private void AddGrabbables()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xB4B0D0", Offset = "0xB4B0D0", VA = "0xB4B0D0")]
	public Entity GetEntity()
	{
		return null;
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xB4B0D4", Offset = "0xB4B0D4", VA = "0xB4B0D4")]
	public static Entity GetEntityFromGO(GameObject _go)
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xB4B16C", Offset = "0xB4B16C", VA = "0xB4B16C")]
	public static Entity GetEntityFromRB(Rigidbody _colRB)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xB4B22C", Offset = "0xB4B22C", VA = "0xB4B22C")]
	public static Entity GetEntityFromCollision(Collision _col)
	{
		return null;
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xB4B254", Offset = "0xB4B254", VA = "0xB4B254")]
	public static Entity GetEntityFromCollider(Collider _col)
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xB4B270", Offset = "0xB4B270", VA = "0xB4B270")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xB4B2D0", Offset = "0xB4B2D0", VA = "0xB4B2D0")]
	public Entity()
	{
	}
}
[Token(Token = "0x2000153")]
public class EntityCheck : MonoBehaviour
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CategoryDefinition matchEntity;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xB4B500", Offset = "0xB4B500", VA = "0xB4B500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xB4B504", Offset = "0xB4B504", VA = "0xB4B504")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xB4B6C8", Offset = "0xB4B6C8", VA = "0xB4B6C8")]
	public EntityCheck()
	{
	}
}
[Serializable]
[Token(Token = "0x2000154")]
public class EntityDefinition : ScriptableObject
{
	[Token(Token = "0x2000155")]
	public enum Kind
	{
		[Token(Token = "0x4000858")]
		None,
		[Token(Token = "0x4000859")]
		Progression,
		[Token(Token = "0x400085A")]
		Manual,
		[Token(Token = "0x400085B")]
		Always
	}

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string EntityName;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CategoryDefinition categoryDefinition;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string description;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prefab;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite Icon;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 spawnerOffset;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 spawnerEulerAngles;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool canRecycle;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Kind kind;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string customUnlockMessage;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("is this available in replicator")]
	public bool inSandbox;

	[Token(Token = "0x17000058")]
	public bool isProgressionUnlock
	{
		[Token(Token = "0x6000774")]
		[Address(RVA = "0xB4B6D0", Offset = "0xB4B6D0", VA = "0xB4B6D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000059")]
	public bool isUnlocked
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0xB4B744", Offset = "0xB4B744", VA = "0xB4B744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xB4B7C8", Offset = "0xB4B7C8", VA = "0xB4B7C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB4B6E0", Offset = "0xB4B6E0", VA = "0xB4B6E0")]
	[ContextMenu("CreateNewID")]
	public void CreateNewID()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB4B850", Offset = "0xB4B850", VA = "0xB4B850")]
	[ContextMenu("LockEntityDefinition")]
	private void LockEntityDefinition()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB4B87C", Offset = "0xB4B87C", VA = "0xB4B87C")]
	[ContextMenu("ClearAllUnlocks")]
	private void ClearAllUnlocks()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB4B8DC", Offset = "0xB4B8DC", VA = "0xB4B8DC")]
	public bool EntityAvailable(bool sandboxLoad = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB4B94C", Offset = "0xB4B94C", VA = "0xB4B94C")]
	public void AddEntityDefinitionToLookUp()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xB4BD60", Offset = "0xB4BD60", VA = "0xB4BD60")]
	public void SaveSO()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xB4BD64", Offset = "0xB4BD64", VA = "0xB4BD64")]
	[ContextMenu("Mark all EntityDefinition dirty")]
	public void SetAllDirty()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xB4BDA4", Offset = "0xB4BDA4", VA = "0xB4BDA4")]
	public EntityDefinition()
	{
	}
}
[Token(Token = "0x2000156")]
public class EntityDefinitionTriggerAchievement : CollisionBase
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EntityDefinition entityDefition;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CategoryDefinition categoryDefition;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useEntityDefinition;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int amountNeeded;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Achievement achievement;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int completionCount;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xB4BE44", Offset = "0xB4BE44", VA = "0xB4BE44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xB4BEE8", Offset = "0xB4BEE8", VA = "0xB4BEE8", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xB4C248", Offset = "0xB4C248", VA = "0xB4C248")]
	public EntityDefinitionTriggerAchievement()
	{
	}
}
[Token(Token = "0x2000157")]
public class EntityGravityChangeTrigger : MonoBehaviour
{
	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB4C25C", Offset = "0xB4C25C", VA = "0xB4C25C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB4C344", Offset = "0xB4C344", VA = "0xB4C344")]
	public EntityGravityChangeTrigger()
	{
	}
}
[Token(Token = "0x2000158")]
public class EntityLoadDisplay : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EightSegmentDisplay display;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showPercentage;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isDigital;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform analogNeedle;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float needleMax;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject warning;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dialAngle;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB4C34C", Offset = "0xB4C34C", VA = "0xB4C34C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB4C52C", Offset = "0xB4C52C", VA = "0xB4C52C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB4C65C", Offset = "0xB4C65C", VA = "0xB4C65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB4C6F8", Offset = "0xB4C6F8", VA = "0xB4C6F8")]
	private void PercentageChange(int percentage)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB4C7F0", Offset = "0xB4C7F0", VA = "0xB4C7F0")]
	public EntityLoadDisplay()
	{
	}
}
[Token(Token = "0x2000159")]
public class EntityLoadManager : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	public delegate void OnEntityLoadPercentageDelegate(int percentage);

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entity> entitesInGame;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int maxEntitesInGame;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool limitEntites;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool GlobalSpawnBlocked;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int totalEntitesInGame;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int entitiesCount;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static EntityLoadManager _instance;

	[Token(Token = "0x1700005A")]
	public static EntityLoadManager Instance
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xB4C808", Offset = "0xB4C808", VA = "0xB4C808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000024")]
	public static event OnEntityLoadPercentageDelegate OnEntityLoadPercentageChange
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0xB4C474", Offset = "0xB4C474", VA = "0xB4C474")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xB4C5A4", Offset = "0xB4C5A4", VA = "0xB4C5A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xB4C984", Offset = "0xB4C984", VA = "0xB4C984")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xB4CB84", Offset = "0xB4CB84", VA = "0xB4CB84")]
	public List<Entity> GetEntitiesInGame()
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xB4CB08", Offset = "0xB4CB08", VA = "0xB4CB08")]
	public void ClearAll(bool editorLevelStart = false)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xB4CB8C", Offset = "0xB4CB8C", VA = "0xB4CB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xB4CB90", Offset = "0xB4CB90", VA = "0xB4CB90")]
	private void SceneLoaded()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xB4CC80", Offset = "0xB4CC80", VA = "0xB4CC80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xB4CDA0", Offset = "0xB4CDA0", VA = "0xB4CDA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xB4CEC0", Offset = "0xB4CEC0", VA = "0xB4CEC0")]
	private void EntityLoadChange(Entity entity, bool added)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xB4D144", Offset = "0xB4D144", VA = "0xB4D144")]
	[ContextMenu("LogAllEntities")]
	private void LogAllEntities()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xB4D210", Offset = "0xB4D210", VA = "0xB4D210")]
	public EntityLoadManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class EntityElement
{
	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int entityID;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int sandboxDisplayId;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xB4D2BC", Offset = "0xB4D2BC", VA = "0xB4D2BC")]
	public EntityElement()
	{
	}
}
[Serializable]
[Token(Token = "0x200015C")]
public class CategoryList
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CategoryDefinition categoryDefinition;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<EntityDefinition> entityDefinitionList;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xB4D2C4", Offset = "0xB4D2C4", VA = "0xB4D2C4")]
	public CategoryList()
	{
	}
}
[Token(Token = "0x200015D")]
[CreateAssetMenu(fileName = "New EntityLookup", menuName = "EntityLookup", order = 1)]
public class EntityLookup : ScriptableObject
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CategoryDefinition magnets;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EntityLookup staticEntityLookup;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("THIS LIST DEFINES SANDBOX SPAWNER CATEGORIES ORDER")]
	public CategoryDefinition[] entityCategories;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("STUFF IN THIS LIST CAN BE SAVED IF NOT OVERRIDDEN BY A GRABBABLE")]
	public EntityElement[] entityDefs;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("THESE SUBLISTS DEFINE SANDBOX SPAWNER ITEMS ORDER")]
	public List<CategoryList> categoryList;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public QuestSystem questSystem;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<EntityDefinition> tempCatergoryEntityDefintionList;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string ghostErrorList;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xB4D2CC", Offset = "0xB4D2CC", VA = "0xB4D2CC")]
	public void InitEntityLookup()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xB4DA80", Offset = "0xB4DA80", VA = "0xB4DA80")]
	public void UpdateUnlocks()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xB4DC78", Offset = "0xB4DC78", VA = "0xB4DC78")]
	public void UnlockAllEntities()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xB4DA90", Offset = "0xB4DA90", VA = "0xB4DA90")]
	public void ManageProgressionUnlocks(QuestSystem questSystem, bool _force = false, bool forceUnlocked = true)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xB4BB8C", Offset = "0xB4BB8C", VA = "0xB4BB8C")]
	public bool HasEntity(EntityDefinition entityDef)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xB4DC88", Offset = "0xB4DC88", VA = "0xB4DC88")]
	private void SaveSO()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xB4BC4C", Offset = "0xB4BC4C", VA = "0xB4BC4C")]
	public void AddNewEntityToLookup(EntityDefinition newEntityDef)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xB4DC8C", Offset = "0xB4DC8C", VA = "0xB4DC8C")]
	public GameObject GetGameObjectFromID(int id)
	{
		return null;
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xB4DCEC", Offset = "0xB4DCEC", VA = "0xB4DCEC")]
	public EntityDefinition GetEntityDefinitionFromID(int id)
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB4DD44", Offset = "0xB4DD44", VA = "0xB4DD44")]
	public int GetEntityDefID(EntityDefinition entityDef)
	{
		return default(int);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xB4DE2C", Offset = "0xB4DE2C", VA = "0xB4DE2C")]
	public void SetSandboxID(EntityDefinition entityDef, int sbID)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xB4DF18", Offset = "0xB4DF18", VA = "0xB4DF18")]
	public int GetSandboxID(EntityDefinition entityDef)
	{
		return default(int);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xB4BA58", Offset = "0xB4BA58", VA = "0xB4BA58")]
	public static EntityLookup GetEntityLookUp()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB4E000", Offset = "0xB4E000", VA = "0xB4E000")]
	public static EntityLookup GetEntityLookUpRuntime()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xB4E14C", Offset = "0xB4E14C", VA = "0xB4E14C")]
	public int GetNextCategory(int _currentCategory, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xB4E1D0", Offset = "0xB4E1D0", VA = "0xB4E1D0")]
	public int GetNextAvailableItem(int _currentCategory, int _currentIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xB4E1D8", Offset = "0xB4E1D8", VA = "0xB4E1D8")]
	private List<EntityDefinition> GetCleanedUpEntityDefList(int _currentCategory)
	{
		return null;
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xB4E454", Offset = "0xB4E454", VA = "0xB4E454")]
	public EntityDefinition GetEntityFromCleanedList(int _currentCategory, int _index)
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB4E500", Offset = "0xB4E500", VA = "0xB4E500")]
	public EntityDefinition GetEntityFromFullList(int _currentCategory, int _index)
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xB4E5DC", Offset = "0xB4E5DC", VA = "0xB4E5DC")]
	public int GetNextItem(int _currentCategory, int _currentItem, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xB4E688", Offset = "0xB4E688", VA = "0xB4E688")]
	public int GetNextItemUnlocked(int _currentCategory, int _currentItem, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xB4D2D0", Offset = "0xB4D2D0", VA = "0xB4D2D0")]
	public void CreateCategoryList()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xB4E7B0", Offset = "0xB4E7B0", VA = "0xB4E7B0")]
	private void GhostCheck()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xB4E88C", Offset = "0xB4E88C", VA = "0xB4E88C")]
	private void CheckObject(EntityDefinition _entityDef)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB4F37C", Offset = "0xB4F37C", VA = "0xB4F37C")]
	public EntityLookup()
	{
	}
}
[Token(Token = "0x200015E")]
public class EntityLookupProvider : MonoBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityLookup entityLookup;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EntityLookupProvider _instance;

	[Token(Token = "0x1700005B")]
	public static EntityLookupProvider Instance
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xB4F384", Offset = "0xB4F384", VA = "0xB4F384")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xB4F510", Offset = "0xB4F510", VA = "0xB4F510")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xB4F528", Offset = "0xB4F528", VA = "0xB4F528")]
	private void UpdateUnlocks()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xB4F54C", Offset = "0xB4F54C", VA = "0xB4F54C")]
	public void EditorUpdateUnlocks()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xB4F580", Offset = "0xB4F580", VA = "0xB4F580")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xB4F600", Offset = "0xB4F600", VA = "0xB4F600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xB4F680", Offset = "0xB4F680", VA = "0xB4F680")]
	public EntityLookupProvider()
	{
	}
}
[Token(Token = "0x200015F")]
public class ExplosionForce : MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float exploRadius;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float exploPowerOffset;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float exploPower;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool spawnExplosion;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float upwardsModifier;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sourcePosFudge;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useMass;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> usedRBs;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyForceOncePerRB;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool notIfKinematic;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xB4F688", Offset = "0xB4F688", VA = "0xB4F688")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB4FABC", Offset = "0xB4FABC", VA = "0xB4FABC")]
	public ExplosionForce()
	{
	}
}
[Token(Token = "0x2000160")]
public class FactoryPanel : MonoBehaviour
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB4FAF4", Offset = "0xB4FAF4", VA = "0xB4FAF4")]
	public void SetAmount(int amount)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB4FB4C", Offset = "0xB4FB4C", VA = "0xB4FB4C")]
	public void StartHide()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB4FB9C", Offset = "0xB4FB9C", VA = "0xB4FB9C")]
	private void HideAmount()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xB4FBF8", Offset = "0xB4FBF8", VA = "0xB4FBF8")]
	public FactoryPanel()
	{
	}
}
[Token(Token = "0x2000161")]
public class FadeInOverride : MonoBehaviour
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeIn;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeInDelay;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xB4FC00", Offset = "0xB4FC00", VA = "0xB4FC00")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xB4FC28", Offset = "0xB4FC28", VA = "0xB4FC28")]
	public FadeInOverride()
	{
	}
}
[Token(Token = "0x2000162")]
public class FindMe : MonoBehaviour
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string myID;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xB4FC3C", Offset = "0xB4FC3C", VA = "0xB4FC3C")]
	public FindMe()
	{
	}
}
[Token(Token = "0x2000163")]
public class FireworksManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000164")]
	public class Credit
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("-------------------------------------------------------------------------")]
		public Sprite sprite;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isEnd;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int amount;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doShouts;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Rocket rocket;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isCredit;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xB50F60", Offset = "0xB50F60", VA = "0xB50F60")]
		public Credit()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <FinalVolleySequence>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireworksManager <>4__this;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <launches>5__2;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xB512B8", Offset = "0xB512B8", VA = "0xB512B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0xB51300", Offset = "0xB51300", VA = "0xB51300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xB50F78", Offset = "0xB50F78", VA = "0xB50F78")]
		[DebuggerHidden]
		public <FinalVolleySequence>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xB50FA0", Offset = "0xB50FA0", VA = "0xB50FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB50FA4", Offset = "0xB50FA4", VA = "0xB50FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB512C0", Offset = "0xB512C0", VA = "0xB512C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000166")]
	[CompilerGenerated]
	private sealed class <FinalSoundDown>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject _go;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xB51480", Offset = "0xB51480", VA = "0xB51480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xB514C8", Offset = "0xB514C8", VA = "0xB514C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xB51308", Offset = "0xB51308", VA = "0xB51308")]
		[DebuggerHidden]
		public <FinalSoundDown>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xB51330", Offset = "0xB51330", VA = "0xB51330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xB51334", Offset = "0xB51334", VA = "0xB51334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xB51488", Offset = "0xB51488", VA = "0xB51488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject typePrefab;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject typePrefabFin;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] primaryFireworks;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] secondaryFireworks;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RocketSpawner rocketSpawner;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Credit> credits;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoFire;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] autoLauncher;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float sway;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float baseLaunchVelocity;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject endRocket;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rocket finalRocket;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentRocket;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelDirector_C3336_Fireworks levelDir;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform launcher;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isEnd;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool finalVolleyStarted;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite theEnd;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int sortingGroupInc;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int lastRocketPeopleAmount;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastCreditExplosion;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xB4FC44", Offset = "0xB4FC44", VA = "0xB4FC44")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xB4FC8C", Offset = "0xB4FC8C", VA = "0xB4FC8C")]
	public void StartManual()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xB4FCB0", Offset = "0xB4FCB0", VA = "0xB4FCB0")]
	[ContextMenu("StartAutoFire")]
	public void StartAutoFire()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xB4FD18", Offset = "0xB4FD18", VA = "0xB4FD18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xB4FE40", Offset = "0xB4FE40", VA = "0xB4FE40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB4FF68", Offset = "0xB4FF68", VA = "0xB4FF68")]
	[ContextMenu("FireRocket")]
	private void FireRocket()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB503B0", Offset = "0xB503B0", VA = "0xB503B0")]
	private void FinalVolley()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB5044C", Offset = "0xB5044C", VA = "0xB5044C")]
	[IteratorStateMachine(typeof(<FinalVolleySequence>d__30))]
	private IEnumerator FinalVolleySequence()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB50314", Offset = "0xB50314", VA = "0xB50314")]
	private void RocketSpawned(Rocket rocket)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB50318", Offset = "0xB50318", VA = "0xB50318")]
	private void UpdateSpawner()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB504C0", Offset = "0xB504C0", VA = "0xB504C0")]
	private void RocketOutOfGame(Rocket rocket)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB504C4", Offset = "0xB504C4", VA = "0xB504C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB50534", Offset = "0xB50534", VA = "0xB50534")]
	private void RocketFireworksStart(Rocket rocket, bool doCredits)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB508BC", Offset = "0xB508BC", VA = "0xB508BC")]
	[IteratorStateMachine(typeof(<FinalSoundDown>d__36))]
	private IEnumerator FinalSoundDown(GameObject _go)
	{
		return null;
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB50930", Offset = "0xB50930", VA = "0xB50930")]
	public void StartFireworks(Credit credit, bool doType = true)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xB50F44", Offset = "0xB50F44", VA = "0xB50F44")]
	public FireworksManager()
	{
	}
}
[Token(Token = "0x2000167")]
public class FirstLaunchPerformanceChecker : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float updateInterval;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float accum;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeleft;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float measureTime;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float waiter;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialised;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool redoTest;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minFPS;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FirstLaunchPerformanceChecker _instance;

	[Token(Token = "0x17000060")]
	public static FirstLaunchPerformanceChecker Instance
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB514D0", Offset = "0xB514D0", VA = "0xB514D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xB5165C", Offset = "0xB5165C", VA = "0xB5165C")]
	public void LaunchPerformanceCheck()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xB516F8", Offset = "0xB516F8", VA = "0xB516F8")]
	public void StartTest()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xB5172C", Offset = "0xB5172C", VA = "0xB5172C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xB5173C", Offset = "0xB5173C", VA = "0xB5173C")]
	public void CheckPerformance()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xB518B0", Offset = "0xB518B0", VA = "0xB518B0")]
	public FirstLaunchPerformanceChecker()
	{
	}
}
[Token(Token = "0x2000168")]
public class FirstLoad : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	public enum State
	{
		[Token(Token = "0x40008CA")]
		none,
		[Token(Token = "0x40008CB")]
		SDKNotInitialised,
		[Token(Token = "0x40008CC")]
		headsetNotPresent,
		[Token(Token = "0x40008CD")]
		ready
	}

	[Token(Token = "0x200016A")]
	[CompilerGenerated]
	private sealed class <CheckForHMDPresent>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstLoad <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0xB52884", Offset = "0xB52884", VA = "0xB52884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0xB528CC", Offset = "0xB528CC", VA = "0xB528CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xB51D68", Offset = "0xB51D68", VA = "0xB51D68")]
		[DebuggerHidden]
		public <CheckForHMDPresent>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xB52770", Offset = "0xB52770", VA = "0xB52770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xB52774", Offset = "0xB52774", VA = "0xB52774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xB5288C", Offset = "0xB5288C", VA = "0xB5288C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <LoadVR>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _path;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xB5297C", Offset = "0xB5297C", VA = "0xB5297C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0xB529C4", Offset = "0xB529C4", VA = "0xB529C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xB52544", Offset = "0xB52544", VA = "0xB52544")]
		[DebuggerHidden]
		public <LoadVR>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xB528D4", Offset = "0xB528D4", VA = "0xB528D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xB528D8", Offset = "0xB528D8", VA = "0xB528D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xB52984", Offset = "0xB52984", VA = "0xB52984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016C")]
	[CompilerGenerated]
	private sealed class <ShowLogos>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstLoad <>4__this;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xB52E08", Offset = "0xB52E08", VA = "0xB52E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0xB52E50", Offset = "0xB52E50", VA = "0xB52E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xB52674", Offset = "0xB52674", VA = "0xB52674")]
		[DebuggerHidden]
		public <ShowLogos>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xB529CC", Offset = "0xB529CC", VA = "0xB529CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xB529D0", Offset = "0xB529D0", VA = "0xB529D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xB52E10", Offset = "0xB52E10", VA = "0xB52E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private QuestSystem questSystem;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool loaderStart;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool introDone;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer logoCycler;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logoHolder;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] logoSprites;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialised;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI tmPro;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject errorFeedback;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRControllerMapper[] unGlueMappers;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool firstRun;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool loaderPresent;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int logoNumber;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xB518D4", Offset = "0xB518D4", VA = "0xB518D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xB519C8", Offset = "0xB519C8", VA = "0xB519C8")]
	private void UnglueDown(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xB51A30", Offset = "0xB51A30", VA = "0xB51A30")]
	private void UnglueUp(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xB51A6C", Offset = "0xB51A6C", VA = "0xB51A6C")]
	private bool SkipPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xB51B30", Offset = "0xB51B30", VA = "0xB51B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xB51BCC", Offset = "0xB51BCC", VA = "0xB51BCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xB51CF4", Offset = "0xB51CF4", VA = "0xB51CF4")]
	[IteratorStateMachine(typeof(<CheckForHMDPresent>d__19))]
	private IEnumerator CheckForHMDPresent()
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xB51D90", Offset = "0xB51D90", VA = "0xB51D90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xB51DB0", Offset = "0xB51DB0", VA = "0xB51DB0")]
	private void Init()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xB520A4", Offset = "0xB520A4", VA = "0xB520A4")]
	private void InitVR()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB51EA4", Offset = "0xB51EA4", VA = "0xB51EA4")]
	private void DisplayStatus(State state)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xB52204", Offset = "0xB52204", VA = "0xB52204")]
	private void LoadFirst()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB524D0", Offset = "0xB524D0", VA = "0xB524D0")]
	[IteratorStateMachine(typeof(<LoadVR>d__25))]
	private IEnumerator LoadVR(string _path)
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB5256C", Offset = "0xB5256C", VA = "0xB5256C")]
	private void TentacleSystemInitialised(SetUpTentacleSystem tSystem)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB525BC", Offset = "0xB525BC", VA = "0xB525BC")]
	private void HideTentacles()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB52600", Offset = "0xB52600", VA = "0xB52600")]
	[IteratorStateMachine(typeof(<ShowLogos>d__29))]
	private IEnumerator ShowLogos()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB5269C", Offset = "0xB5269C", VA = "0xB5269C")]
	public void Quit()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB5270C", Offset = "0xB5270C", VA = "0xB5270C")]
	public FirstLoad()
	{
	}
}
[Token(Token = "0x200016D")]
public class FixedStepsReduction : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fixedUpate;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xB52E58", Offset = "0xB52E58", VA = "0xB52E58")]
	private void Start()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB52ED0", Offset = "0xB52ED0", VA = "0xB52ED0")]
	public FixedStepsReduction()
	{
	}
}
[Token(Token = "0x200016E")]
public class FlyCam : MonoBehaviour
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 dir;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float forwardSpeed;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float riseSpeed;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float yawSpeed;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float pitchSpeed;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float tragetZ;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 rot;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB52EE0", Offset = "0xB52EE0", VA = "0xB52EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB5300C", Offset = "0xB5300C", VA = "0xB5300C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB533AC", Offset = "0xB533AC", VA = "0xB533AC")]
	public FlyCam()
	{
	}
}
[Token(Token = "0x200016F")]
public class FlyingIsland : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FixedJoint[] pieces;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] heights;

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xB533B4", Offset = "0xB533B4", VA = "0xB533B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xB533B8", Offset = "0xB533B8", VA = "0xB533B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xB534D4", Offset = "0xB534D4", VA = "0xB534D4")]
	public FlyingIsland()
	{
	}
}
[Token(Token = "0x2000170")]
public class FontDefaults : MonoBehaviour
{
	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset fontAsset;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineHeight;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xB534DC", Offset = "0xB534DC", VA = "0xB534DC")]
	[ContextMenu("SetBubbleDefaults")]
	private void SetBubbleDefaults()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xB534E0", Offset = "0xB534E0", VA = "0xB534E0")]
	public FontDefaults()
	{
	}
}
[Token(Token = "0x2000171")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000172")]
	public delegate void OnPreResetDelegate(bool clear);

	[Token(Token = "0x2000173")]
	public delegate void OnPreLoadDelegate(bool editorLevelStart = false);

	[Token(Token = "0x2000174")]
	public delegate void OnLoadDelegate();

	[Token(Token = "0x2000175")]
	public delegate void OnPostLoadDelegate();

	[Token(Token = "0x2000176")]
	public delegate void OnQuitDelegate();

	[Token(Token = "0x2000177")]
	public delegate void OnShowTitleDelegate(TitleType.TitleMode titleMode);

	[Token(Token = "0x2000178")]
	public delegate void OnBubbleFadeDelegate(bool fadeOut);

	[Token(Token = "0x2000179")]
	public enum State
	{
		[Token(Token = "0x4000922")]
		none,
		[Token(Token = "0x4000923")]
		start,
		[Token(Token = "0x4000924")]
		complete,
		[Token(Token = "0x4000925")]
		fail
	}

	[Token(Token = "0x200017A")]
	public struct SceneStruct
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SceneReference Main;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SceneReference[] Dependecies;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneReference LightingSetup;
	}

	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <LoadScenesAsync>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneStruct scenes;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <AsyncE>5__2;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation <AsyncM>5__3;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__4;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AsyncOperation <Async>5__5;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0xB58974", Offset = "0xB58974", VA = "0xB58974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xB589BC", Offset = "0xB589BC", VA = "0xB589BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xB56B54", Offset = "0xB56B54", VA = "0xB56B54")]
		[DebuggerHidden]
		public <LoadScenesAsync>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xB57F98", Offset = "0xB57F98", VA = "0xB57F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xB57F9C", Offset = "0xB57F9C", VA = "0xB57F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB5897C", Offset = "0xB5897C", VA = "0xB5897C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <PostLoadSequence>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rTime>5__2;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <wait>5__3;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xB58FE0", Offset = "0xB58FE0", VA = "0xB58FE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xB59028", Offset = "0xB59028", VA = "0xB59028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xB56F70", Offset = "0xB56F70", VA = "0xB56F70")]
		[DebuggerHidden]
		public <PostLoadSequence>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xB589C4", Offset = "0xB589C4", VA = "0xB589C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xB589C8", Offset = "0xB589C8", VA = "0xB589C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xB58FE8", Offset = "0xB58FE8", VA = "0xB58FE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[CompilerGenerated]
	private sealed class <FadeSpeechBubble>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeOut;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <alphaTarget>5__3;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alphaStart>5__4;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xB59304", Offset = "0xB59304", VA = "0xB59304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0xB5934C", Offset = "0xB5934C", VA = "0xB5934C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xB57694", Offset = "0xB57694", VA = "0xB57694")]
		[DebuggerHidden]
		public <FadeSpeechBubble>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xB59104", Offset = "0xB59104", VA = "0xB59104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xB59108", Offset = "0xB59108", VA = "0xB59108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xB5930C", Offset = "0xB5930C", VA = "0xB5930C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static GameManager Game;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static GameManager _instance;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Story introStory;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color FadeColor;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeInDelay;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeInDuration;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultFadeOutDuration;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float defaultFadeInDuration;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public QuestSystem GameQuestSystem;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool noTitleBeforeLevel;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool InMenuScene;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Level CurrentLevel;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Story CurrentStory;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isLoading;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject vortex;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool doMovementTransition;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool levelReset;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool levelResetIndicator;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool inTransition;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool inTransitionFade;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool inTransitionConvoBlocked;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Level currentMenu;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool newUnlocks;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool newSandbox;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string customUnlock;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool saveHappened;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private VRControllerMapper[] unGlueMappers;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool skipTitlePressed;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CameraFade cameraFade;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioManager AudioMNG;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool quitBlock;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float levelTime;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool noMovement;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Level backLevel;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Level replayIsland;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool triggerCustomActionOnNextLoad;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool customResettoAction;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public State gameState;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Level lastLevel;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool levelDoneSFXPlayed;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool endOfStoryLoad;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float completionTime;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int scenesLoaded;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Scene[] oldLoadedScenes;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int neededScenes;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<AsyncOperation> AsyncOps;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<AsyncOperation> sceneLoads;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Scene loadedMainScene;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private TitleType.TitleMode titleMode;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool objectsVisible;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float TypeAlpha;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static bool TypeFadeActive;

	[Token(Token = "0x17000067")]
	public static GameManager Instance
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0xB522B0", Offset = "0xB522B0", VA = "0xB522B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000025")]
	public static event OnPreResetDelegate OnPreReset
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xB534F0", Offset = "0xB534F0", VA = "0xB534F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xB535A8", Offset = "0xB535A8", VA = "0xB535A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event OnPreLoadDelegate OnPreLoad
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xB53660", Offset = "0xB53660", VA = "0xB53660")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xB5371C", Offset = "0xB5371C", VA = "0xB5371C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event OnLoadDelegate OnLoad
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xB537D8", Offset = "0xB537D8", VA = "0xB537D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xB53894", Offset = "0xB53894", VA = "0xB53894")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event OnPostLoadDelegate OnPostLoad
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xB53950", Offset = "0xB53950", VA = "0xB53950")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xB53A0C", Offset = "0xB53A0C", VA = "0xB53A0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event OnQuitDelegate OnQuit
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xB53AC8", Offset = "0xB53AC8", VA = "0xB53AC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xB53B84", Offset = "0xB53B84", VA = "0xB53B84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event OnShowTitleDelegate OnShowTitle
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xB53C40", Offset = "0xB53C40", VA = "0xB53C40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xB53CFC", Offset = "0xB53CFC", VA = "0xB53CFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public static event OnBubbleFadeDelegate OnBubbleFade
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xB53DB8", Offset = "0xB53DB8", VA = "0xB53DB8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000823")]
		[Address(RVA = "0xB53E74", Offset = "0xB53E74", VA = "0xB53E74")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB53F30", Offset = "0xB53F30", VA = "0xB53F30")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB54124", Offset = "0xB54124", VA = "0xB54124")]
	public void OverrideCurrentLevel(Level _level)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB54164", Offset = "0xB54164", VA = "0xB54164")]
	public void LoadReplayIsland()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB54170", Offset = "0xB54170", VA = "0xB54170")]
	public bool IsReplayLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xB5421C", Offset = "0xB5421C", VA = "0xB5421C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xB542F0", Offset = "0xB542F0", VA = "0xB542F0")]
	private void UnglueDown(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xB54434", Offset = "0xB54434", VA = "0xB54434")]
	public bool NewUnlocks()
	{
		return default(bool);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xB5436C", Offset = "0xB5436C", VA = "0xB5436C")]
	private void SkipCheck()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xB5443C", Offset = "0xB5443C", VA = "0xB5443C")]
	private void UnglueUp(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xB54110", Offset = "0xB54110", VA = "0xB54110")]
	public void SetDefaultGravity()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xB54484", Offset = "0xB54484", VA = "0xB54484")]
	public void ResetAll(bool loadStartscene = false, int manualSlot = -1)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xB547A4", Offset = "0xB547A4", VA = "0xB547A4")]
	public void UnlockAll(bool resetOnly = false)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB54A34", Offset = "0xB54A34", VA = "0xB54A34")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB54D04", Offset = "0xB54D04", VA = "0xB54D04")]
	public void OverrideFadeInDuration(float _fadeDuration, float _fadeDelay)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB54D0C", Offset = "0xB54D0C", VA = "0xB54D0C")]
	private void DoQuit()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xB54DA8", Offset = "0xB54DA8", VA = "0xB54DA8")]
	public Level GetCurrentLevel()
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xB54DB0", Offset = "0xB54DB0", VA = "0xB54DB0")]
	[ContextMenu("LogLevelsStatus")]
	public void LogLevelsStatus()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xB5538C", Offset = "0xB5538C", VA = "0xB5538C")]
	[ContextMenu("LoadOptions")]
	public void LoadOptions()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB55478", Offset = "0xB55478", VA = "0xB55478")]
	public bool IsOptionsScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xB554E8", Offset = "0xB554E8", VA = "0xB554E8")]
	public void BackFromOptions()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB5556C", Offset = "0xB5556C", VA = "0xB5556C")]
	public bool ShowNavigation()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB555F4", Offset = "0xB555F4", VA = "0xB555F4")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB556C8", Offset = "0xB556C8", VA = "0xB556C8")]
	public int GetCurrentLevelPosition()
	{
		return default(int);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB55750", Offset = "0xB55750", VA = "0xB55750")]
	public int GetAmountLevelsInCurrentStory()
	{
		return default(int);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB557D8", Offset = "0xB557D8", VA = "0xB557D8")]
	public void CurrentLevelCompleted()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xB557F8", Offset = "0xB557F8", VA = "0xB557F8")]
	public void LoadNextLevelForQuest(string _id)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xB55824", Offset = "0xB55824", VA = "0xB55824")]
	public void LoadNextLevel()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB55AE0", Offset = "0xB55AE0", VA = "0xB55AE0")]
	public void LoadPreviousLevel()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB55C48", Offset = "0xB55C48", VA = "0xB55C48")]
	public void LevelComplete()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB55F48", Offset = "0xB55F48", VA = "0xB55F48")]
	public void LevelEndOptions(bool forceBalloon = false, bool sfxPlayed = false)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB55CD4", Offset = "0xB55CD4", VA = "0xB55CD4")]
	public void PlayLevelDoneSFX()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xB55FAC", Offset = "0xB55FAC", VA = "0xB55FAC")]
	public void StartStory(Story _story)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xB56050", Offset = "0xB56050", VA = "0xB56050")]
	public bool CurrentLevelIsMenuLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xB560D8", Offset = "0xB560D8", VA = "0xB560D8")]
	public void MarkThisAsComplete()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xB56180", Offset = "0xB56180", VA = "0xB56180")]
	public static float LevelPlayTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xB55DE8", Offset = "0xB55DE8", VA = "0xB55DE8")]
	public void SetLevelProgession(bool triggerTimeTrial = true)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xB56384", Offset = "0xB56384", VA = "0xB56384")]
	public void LoadMainMenuScene()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xB548FC", Offset = "0xB548FC", VA = "0xB548FC")]
	public void LoadMenuScene(bool forceReload = false)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xB54840", Offset = "0xB54840", VA = "0xB54840")]
	public void Reset(bool _clear = true)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xB56AB8", Offset = "0xB56AB8", VA = "0xB56AB8")]
	[IteratorStateMachine(typeof(<LoadScenesAsync>d__117))]
	private IEnumerator LoadScenesAsync(SceneStruct scenes)
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xB56B7C", Offset = "0xB56B7C", VA = "0xB56B7C")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xB56D84", Offset = "0xB56D84", VA = "0xB56D84")]
	private void OnAllScenesLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xB56EE8", Offset = "0xB56EE8", VA = "0xB56EE8")]
	public void SetTitleMode(TitleType.TitleMode _titleMode)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xB56EF0", Offset = "0xB56EF0", VA = "0xB56EF0")]
	public void SetNoTitleBeforeLevel(bool _noTitleBeforeLevel)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xB56EFC", Offset = "0xB56EFC", VA = "0xB56EFC")]
	[IteratorStateMachine(typeof(<PostLoadSequence>d__124))]
	private IEnumerator PostLoadSequence()
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xB56F98", Offset = "0xB56F98", VA = "0xB56F98")]
	public void TriggerTitle(TitleType.TitleMode _titleMode, bool which)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xB56CDC", Offset = "0xB56CDC", VA = "0xB56CDC")]
	private void ClearOldscenes()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xB5242C", Offset = "0xB5242C", VA = "0xB5242C")]
	public void LoadStartScene()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xB5416C", Offset = "0xB5416C", VA = "0xB5416C")]
	public void LoadLevel(Level level)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xB56570", Offset = "0xB56570", VA = "0xB56570")]
	public void DoLoadLevel(Level level)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xB561D4", Offset = "0xB561D4", VA = "0xB561D4")]
	private void CompleteAnalytics()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xB57028", Offset = "0xB57028", VA = "0xB57028")]
	private void StartAnalytics()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xB563B4", Offset = "0xB563B4", VA = "0xB563B4")]
	private void FailAnalytics(string which)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xB57300", Offset = "0xB57300", VA = "0xB57300")]
	[ContextMenu("SaveProgress")]
	private void Save()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xB57328", Offset = "0xB57328", VA = "0xB57328")]
	public void DebugTryFindSolution()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xB57564", Offset = "0xB57564", VA = "0xB57564")]
	public void HideObjects()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xB57618", Offset = "0xB57618", VA = "0xB57618")]
	[IteratorStateMachine(typeof(<FadeSpeechBubble>d__140))]
	public IEnumerator FadeSpeechBubble(bool fadeOut, float duration)
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xB576BC", Offset = "0xB576BC", VA = "0xB576BC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class SaveSystemState
{
	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveDataGame state;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB59354", Offset = "0xB59354", VA = "0xB59354")]
	public string SaveGamePath()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB59428", Offset = "0xB59428", VA = "0xB59428")]
	public static string SaveGameSlotPrefix()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB594D0", Offset = "0xB594D0", VA = "0xB594D0")]
	public SaveSystemState()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB594F8", Offset = "0xB594F8", VA = "0xB594F8")]
	public void LoadSaveGame()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB59618", Offset = "0xB59618", VA = "0xB59618")]
	public void DeleteSave()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB54778", Offset = "0xB54778", VA = "0xB54778")]
	public void DeleteSaveFile()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB59850", Offset = "0xB59850", VA = "0xB59850")]
	public void SaveCurrentState()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB59CD8", Offset = "0xB59CD8", VA = "0xB59CD8")]
	internal bool GetUnlock(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xB59D38", Offset = "0xB59D38", VA = "0xB59D38")]
	public void SetUnlock(string ID)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB54704", Offset = "0xB54704", VA = "0xB54704")]
	[ContextMenu("ClearUnlocks")]
	public void ClearUnlocks()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB59518", Offset = "0xB59518", VA = "0xB59518")]
	public SaveDataGame LoadSaveDataToState()
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xB59E10", Offset = "0xB59E10", VA = "0xB59E10")]
	public bool IsQuestUnlocked(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xB59F9C", Offset = "0xB59F9C", VA = "0xB59F9C")]
	public bool IsLevelCompleted(Quest parentQuest, string levelID)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xB5A2CC", Offset = "0xB5A2CC", VA = "0xB5A2CC")]
	public void MarkLevelCompleted(string beatLevelID)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xB5A7EC", Offset = "0xB5A7EC", VA = "0xB5A7EC")]
	public void UnlockQuest(string ID)
	{
	}
}
[Token(Token = "0x2000184")]
internal class SaveSystem
{
	[Token(Token = "0x2000185")]
	[Flags]
	public enum ReadJsonBlobOption
	{
		[Token(Token = "0x4000949")]
		None = 0,
		[Token(Token = "0x400094A")]
		AllowMissingFile = 1
	}

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SaveSystemState instance;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool SuppressSave;

	[Token(Token = "0x1700006E")]
	public static string ZeroID
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xB5AA84", Offset = "0xB5AA84", VA = "0xB5AA84")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public static SaveSystemState Instance
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xB5463C", Offset = "0xB5463C", VA = "0xB5463C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xB5AA58", Offset = "0xB5AA58", VA = "0xB5AA58")]
	public static string CreateID()
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xB5AADC", Offset = "0xB5AADC", VA = "0xB5AADC")]
	public static void WriteBackedFile(string path, bool backup, Action<FileStream> callback)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xB5ACA8", Offset = "0xB5ACA8", VA = "0xB5ACA8")]
	public static void SaveJsonBlob(string path, object data, bool backup = true)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xB59BE4", Offset = "0xB59BE4", VA = "0xB59BE4")]
	public static void SaveJsonBlobAbsolute(string path, object data, bool backup = true)
	{
	}

	[Token(Token = "0x60008AF")]
	public static T ReadJsonBlob<T>(string path, ReadJsonBlobOption option = ReadJsonBlobOption.None) where T : class, new()
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xB5AD1C", Offset = "0xB5AD1C", VA = "0xB5AD1C")]
	public static void DeleteFile(string path)
	{
	}

	[Token(Token = "0x60008B1")]
	public static T ReadJsonBlobAbsolute<T>(string path, ReadJsonBlobOption option = ReadJsonBlobOption.None) where T : class, new()
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xB5AD24", Offset = "0xB5AD24", VA = "0xB5AD24")]
	[ContextMenu("DeleteSaveFile")]
	public static void DeleteSave()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xB5AD7C", Offset = "0xB5AD7C", VA = "0xB5AD7C")]
	public static void SaveData()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xB5ADD4", Offset = "0xB5ADD4", VA = "0xB5ADD4")]
	public SaveSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000187")]
public class SaveDataGame
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GameVersion;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SaveDataQuest> SaveDataQuests;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> unlocks;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SaveDataAchievementProgress> achievementProgresses;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string date;

	[Token(Token = "0x17000070")]
	public DateTime Date
	{
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xB5B0B4", Offset = "0xB5B0B4", VA = "0xB5B0B4")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xB59900", Offset = "0xB59900", VA = "0xB59900")]
		set
		{
		}
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xB59684", Offset = "0xB59684", VA = "0xB59684")]
	public SaveDataGame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000188")]
public class SaveDataAchievementProgress
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int counter;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool unlocked;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool synced;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string userString;

	[Token(Token = "0x60008BB")]
	public T GetUserObject<T>() where T : new()
	{
		return (T)null;
	}

	[Token(Token = "0x60008BC")]
	public void SetUserObject<T>(T obj) where T : new()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xB5B278", Offset = "0xB5B278", VA = "0xB5B278")]
	public SaveDataAchievementProgress()
	{
	}
}
[Serializable]
[Token(Token = "0x2000189")]
public class SaveDataQuest
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> beatLevels;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool unlocked;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xB5A70C", Offset = "0xB5A70C", VA = "0xB5A70C")]
	public SaveDataQuest()
	{
	}
}
[Token(Token = "0x200018A")]
public class GaugeWheelsDisplay : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Wheels;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string result;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotSpeed;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xB5B2E0", Offset = "0xB5B2E0", VA = "0xB5B2E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xB5B34C", Offset = "0xB5B34C", VA = "0xB5B34C")]
	public void SetValue(float n)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xB5B2E4", Offset = "0xB5B2E4", VA = "0xB5B2E4")]
	public void DispalyProgress()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xB5B354", Offset = "0xB5B354", VA = "0xB5B354")]
	[ContextMenu("SetDisplay")]
	public void SetDisplay()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xB5B620", Offset = "0xB5B620", VA = "0xB5B620")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xB5B6FC", Offset = "0xB5B6FC", VA = "0xB5B6FC")]
	public GaugeWheelsDisplay()
	{
	}
}
[Token(Token = "0x200018B")]
public class GearMechanism : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Axis TargetAxis;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis ThisAxis;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Multiplicator;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float amount;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xB5B710", Offset = "0xB5B710", VA = "0xB5B710")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xB5B884", Offset = "0xB5B884", VA = "0xB5B884")]
	public GearMechanism()
	{
	}
}
[Token(Token = "0x200018C")]
public enum Axis
{
	[Token(Token = "0x4000963")]
	X,
	[Token(Token = "0x4000964")]
	Y,
	[Token(Token = "0x4000965")]
	Z
}
[Token(Token = "0x200018D")]
public class GlueCollisionMagic : MonoBehaviour
{
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Glue myGlue;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnabled;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xB5B88C", Offset = "0xB5B88C", VA = "0xB5B88C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xB5B8B8", Offset = "0xB5B8B8", VA = "0xB5B8B8")]
	public GlueCollisionMagic()
	{
	}
}
[Token(Token = "0x200018E")]
public class GluedToDelegate : MonoBehaviour
{
	[Token(Token = "0x200018F")]
	public delegate void OnGluedToDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x1400002C")]
	public static event OnGluedToDelegate OnGluedTo
	{
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xB5B8C0", Offset = "0xB5B8C0", VA = "0xB5B8C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB5B978", Offset = "0xB5B978", VA = "0xB5B978")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xB5BA30", Offset = "0xB5BA30", VA = "0xB5BA30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xB5BAB0", Offset = "0xB5BAB0", VA = "0xB5BAB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xB5BB30", Offset = "0xB5BB30", VA = "0xB5BB30")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xB5BC74", Offset = "0xB5BC74", VA = "0xB5BC74")]
	public GluedToDelegate()
	{
	}
}
[Token(Token = "0x2000190")]
public class GlueTools
{
	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xB5BE50", Offset = "0xB5BE50", VA = "0xB5BE50")]
	public static void GluedCleanUp(Transform _trans, bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xB5BF68", Offset = "0xB5BF68", VA = "0xB5BF68")]
	public static void GlueCleanUp(Transform _trans, bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xB5C01C", Offset = "0xB5C01C", VA = "0xB5C01C")]
	public static void BurnOutConnected(Transform _trans)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xB5C0C8", Offset = "0xB5C0C8", VA = "0xB5C0C8")]
	public static void BurnOutIfMagnet(Transform _trans)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xB5C174", Offset = "0xB5C174", VA = "0xB5C174")]
	public static bool BurnOutIfMagnetShock(Transform _trans)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xB5C224", Offset = "0xB5C224", VA = "0xB5C224")]
	public static void GlueCleanUpGroundWater(Transform _trans)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xB5C2EC", Offset = "0xB5C2EC", VA = "0xB5C2EC")]
	public static void FullGlueCleanup(Transform _trans)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xB5C3B8", Offset = "0xB5C3B8", VA = "0xB5C3B8")]
	public static void CleanAndKill(Transform _trans)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xB5C4EC", Offset = "0xB5C4EC", VA = "0xB5C4EC")]
	public GlueTools()
	{
	}
}
[Token(Token = "0x2000191")]
public class GrinderGroup : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool grinderRunning;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool grinderRunningLocal;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool init;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xB5C4F4", Offset = "0xB5C4F4", VA = "0xB5C4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xB5C5A4", Offset = "0xB5C5A4", VA = "0xB5C5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xB5C628", Offset = "0xB5C628", VA = "0xB5C628")]
	[ContextMenu("Start Grinder")]
	private void GrinderOn()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xB5C534", Offset = "0xB5C534", VA = "0xB5C534")]
	[ContextMenu("Stop Grinder")]
	private void GrinderOff()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xB5C6F4", Offset = "0xB5C6F4", VA = "0xB5C6F4")]
	public GrinderGroup()
	{
	}
}
[Token(Token = "0x2000192")]
public class GrinderNumberOFTentacles : MonoBehaviour
{
	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetManual[] targets;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xB5C708", Offset = "0xB5C708", VA = "0xB5C708")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xB5C70C", Offset = "0xB5C70C", VA = "0xB5C70C")]
	private void TentacleCheck()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xB5C870", Offset = "0xB5C870", VA = "0xB5C870")]
	public GrinderNumberOFTentacles()
	{
	}
}
[Token(Token = "0x2000193")]
public class GrinderSystem : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private sealed class <StopGrinder>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrinderSystem <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0xB5D604", Offset = "0xB5D604", VA = "0xB5D604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xB5D64C", Offset = "0xB5D64C", VA = "0xB5D64C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xB5CC00", Offset = "0xB5CC00", VA = "0xB5CC00")]
		[DebuggerHidden]
		public <StopGrinder>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xB5D528", Offset = "0xB5D528", VA = "0xB5D528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xB5D52C", Offset = "0xB5D52C", VA = "0xB5D52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xB5D60C", Offset = "0xB5D60C", VA = "0xB5D60C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <WaitTimer>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrinderSystem <>4__this;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TentacleLogic _tl;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xB5DB5C", Offset = "0xB5DB5C", VA = "0xB5DB5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xB5DBA4", Offset = "0xB5DBA4", VA = "0xB5DBA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xB5D230", Offset = "0xB5D230", VA = "0xB5D230")]
		[DebuggerHidden]
		public <WaitTimer>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xB5D654", Offset = "0xB5D654", VA = "0xB5D654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xB5D658", Offset = "0xB5D658", VA = "0xB5D658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xB5DB64", Offset = "0xB5DB64", VA = "0xB5DB64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <ConnectRumble>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic _tl;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRControllerMapper <rumbleController>5__2;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xB5DD80", Offset = "0xB5DD80", VA = "0xB5DD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xB5DDC8", Offset = "0xB5DDC8", VA = "0xB5DDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB5D2CC", Offset = "0xB5D2CC", VA = "0xB5D2CC")]
		[DebuggerHidden]
		public <ConnectRumble>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB5DBAC", Offset = "0xB5DBAC", VA = "0xB5DBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xB5DBB0", Offset = "0xB5DBB0", VA = "0xB5DBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xB5DD88", Offset = "0xB5DD88", VA = "0xB5DD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TentacleLogic> tentacleLogics;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SpawnPos;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TentacleLogic> tList;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConstructionTarget[] targets;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<TentacleLogic, int> bandagesRemoved;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] bandagePrefab;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particleFX;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool grindStarted;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string grinderSFX;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string bandageSFX;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xB5C878", Offset = "0xB5C878", VA = "0xB5C878")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xB5C99C", Offset = "0xB5C99C", VA = "0xB5C99C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xB5CA1C", Offset = "0xB5CA1C", VA = "0xB5CA1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xB5CA9C", Offset = "0xB5CA9C", VA = "0xB5CA9C")]
	private void GrinderButton(TentacleTriggerButton button, string id, bool buttonOn)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xB5CAA8", Offset = "0xB5CAA8", VA = "0xB5CAA8")]
	public void TurnOnGrinder()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xB5CBBC", Offset = "0xB5CBBC", VA = "0xB5CBBC")]
	[ContextMenu("TentacleHurt")]
	private void TentacleHurt()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xB5CB48", Offset = "0xB5CB48", VA = "0xB5CB48")]
	[IteratorStateMachine(typeof(<StopGrinder>d__18))]
	private IEnumerator StopGrinder()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xB5CC28", Offset = "0xB5CC28", VA = "0xB5CC28")]
	private void CheckTentacleInGrinder()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xB5D130", Offset = "0xB5D130", VA = "0xB5D130")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xB5D0C0", Offset = "0xB5D0C0", VA = "0xB5D0C0")]
	private int GetActiveBandageCount(TentacleLogic _tl)
	{
		return default(int);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB5D1A0", Offset = "0xB5D1A0", VA = "0xB5D1A0")]
	[IteratorStateMachine(typeof(<WaitTimer>d__22))]
	private IEnumerator WaitTimer([Optional] TentacleLogic _tl)
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB5D258", Offset = "0xB5D258", VA = "0xB5D258")]
	[IteratorStateMachine(typeof(<ConnectRumble>d__23))]
	private IEnumerator ConnectRumble(TentacleLogic _tl)
	{
		return null;
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xB5D2F4", Offset = "0xB5D2F4", VA = "0xB5D2F4")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB5D4A0", Offset = "0xB5D4A0", VA = "0xB5D4A0")]
	public GrinderSystem()
	{
	}
}
[Token(Token = "0x2000197")]
public class GroundRemoveIgnore : MonoBehaviour
{
	[Token(Token = "0x6000904")]
	[Address(RVA = "0xB5DDD0", Offset = "0xB5DDD0", VA = "0xB5DDD0")]
	public GroundRemoveIgnore()
	{
	}
}
[Token(Token = "0x2000198")]
public class HazardReceiver : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lastEventTimeTalking;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lastEventTimeForces;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("how quick an object burns/damages from fire")]
	public float burnFactor;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("how quick an object damages from laser")]
	public float laserFactor;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 direction;

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xB5DDD8", Offset = "0xB5DDD8", VA = "0xB5DDD8", Slot = "4")]
	public virtual void HazardEventEnd(HazardTrigger hazard, GameObject go, float factor = 1f)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xB5DDDC", Offset = "0xB5DDDC", VA = "0xB5DDDC", Slot = "5")]
	public virtual void HazardEvent(bool started, HazardTrigger.Hazard hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xB5DF5C", Offset = "0xB5DF5C", VA = "0xB5DF5C", Slot = "6")]
	public virtual void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xB5DF80", Offset = "0xB5DF80", VA = "0xB5DF80")]
	private void RotorHazard(bool started, HazardTrigger.Hazard hazard, GameObject go, float power, float timeStep)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xB5DF84", Offset = "0xB5DF84", VA = "0xB5DF84")]
	public HazardReceiver()
	{
	}
}
[Token(Token = "0x2000199")]
public class HazardReceiverCrystal : HazardReceiver
{
	[Token(Token = "0x200019A")]
	public delegate void CrystaGrowDelegate(HazardReceiver _crystal);

	[Token(Token = "0x200019B")]
	[CompilerGenerated]
	private sealed class <ScaleIt>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HazardReceiverCrystal <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xB5EF10", Offset = "0xB5EF10", VA = "0xB5EF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xB5EF58", Offset = "0xB5EF58", VA = "0xB5EF58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xB5E6C0", Offset = "0xB5E6C0", VA = "0xB5E6C0")]
		[DebuggerHidden]
		public <ScaleIt>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xB5EC28", Offset = "0xB5EC28", VA = "0xB5EC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xB5EC2C", Offset = "0xB5EC2C", VA = "0xB5EC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xB5EF18", Offset = "0xB5EF18", VA = "0xB5EF18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <EnergyBlast>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HazardReceiverCrystal <>4__this;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <magnetsDestroyed>5__2;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> <rbHits>5__3;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> <colliderList>5__4;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xB5F3D8", Offset = "0xB5F3D8", VA = "0xB5F3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0xB5F420", Offset = "0xB5F420", VA = "0xB5F420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xB5E75C", Offset = "0xB5E75C", VA = "0xB5E75C")]
		[DebuggerHidden]
		public <EnergyBlast>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB5EF60", Offset = "0xB5EF60", VA = "0xB5EF60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xB5EF64", Offset = "0xB5EF64", VA = "0xB5EF64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xB5F3E0", Offset = "0xB5F3E0", VA = "0xB5F3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LayerMask explosionLayers;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startscale;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("start at 1 because crystals always have energy")]
	public int energyLevel;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float hitRadius;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float laserTime;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float damageTime;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float targetScale;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween scaleTween;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool damage;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float suckInDelay;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject visual;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tween visualTween;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CrystalEnergyBase crystalEnergy;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CrystalAntiGrav crystalAntiGrav;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject regularCrystal;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject dangerCrystal;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float crystalDestructionTime;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int energyBlastMaxMagnets;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool blastReaction;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool scaleChange;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody rb;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int maxEnergyLevel;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 reduction;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool growthTriggered;

	[Token(Token = "0x1400002D")]
	public event CrystaGrowDelegate OnCrystalGrow
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xB5DF94", Offset = "0xB5DF94", VA = "0xB5DF94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xB5E030", Offset = "0xB5E030", VA = "0xB5E030")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xB5E0CC", Offset = "0xB5E0CC", VA = "0xB5E0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xB5E350", Offset = "0xB5E350", VA = "0xB5E350")]
	public void SetCrystalDestructionTime(float _newTime)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xB5E358", Offset = "0xB5E358", VA = "0xB5E358")]
	public float GetLaserTime()
	{
		return default(float);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xB5E360", Offset = "0xB5E360", VA = "0xB5E360")]
	private void LimitLevel()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xB5E280", Offset = "0xB5E280", VA = "0xB5E280")]
	private void CheckScale()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xB5E3A0", Offset = "0xB5E3A0", VA = "0xB5E3A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xB5E3EC", Offset = "0xB5E3EC", VA = "0xB5E3EC")]
	[ContextMenu("IncScaleHit")]
	private void IncScaleHit()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xB5E440", Offset = "0xB5E440", VA = "0xB5E440")]
	public void ScaleHit(bool bounceBack = false)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xB5E2E4", Offset = "0xB5E2E4", VA = "0xB5E2E4")]
	private void CrystalPhase()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xB5E64C", Offset = "0xB5E64C", VA = "0xB5E64C")]
	[IteratorStateMachine(typeof(<ScaleIt>d__36))]
	private IEnumerator ScaleIt()
	{
		return null;
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xB5E6E8", Offset = "0xB5E6E8", VA = "0xB5E6E8")]
	[IteratorStateMachine(typeof(<EnergyBlast>d__37))]
	private IEnumerator EnergyBlast()
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xB5E784", Offset = "0xB5E784", VA = "0xB5E784")]
	private void ScaleDone()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xB5E7BC", Offset = "0xB5E7BC", VA = "0xB5E7BC", Slot = "4")]
	public override void HazardEventEnd(HazardTrigger hazard, GameObject go, float factor = 1f)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xB5E808", Offset = "0xB5E808", VA = "0xB5E808")]
	private void DestroyCrystal()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xB5E604", Offset = "0xB5E604", VA = "0xB5E604")]
	private void StopTween(Tween tween)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xB5E81C", Offset = "0xB5E81C", VA = "0xB5E81C", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xB5EA98", Offset = "0xB5EA98", VA = "0xB5EA98")]
	public HazardReceiverCrystal()
	{
	}
}
[Token(Token = "0x200019D")]
public class HazardReceiverHuman : HazardReceiver
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fireJumpFactor;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 upAdder;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float shoutWait;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xB5F428", Offset = "0xB5F428", VA = "0xB5F428")]
	private void NewHurtShoutTime()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xB5F44C", Offset = "0xB5F44C", VA = "0xB5F44C", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeFactor, float factor)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xB5FBC4", Offset = "0xB5FBC4", VA = "0xB5FBC4")]
	private void RotorHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xB5F594", Offset = "0xB5F594", VA = "0xB5F594")]
	private void FireHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xB5F8AC", Offset = "0xB5F8AC", VA = "0xB5F8AC")]
	private void LaserHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xB5FEE0", Offset = "0xB5FEE0", VA = "0xB5FEE0")]
	public HazardReceiverHuman()
	{
	}
}
[Token(Token = "0x200019E")]
public class HazardReceiverMagnet : HazardReceiver
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Glue glue;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float laserTime;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float laserBurnoutTime;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xB5FF04", Offset = "0xB5FF04", VA = "0xB5FF04", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float power, float timeStep)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xB60028", Offset = "0xB60028", VA = "0xB60028")]
	public HazardReceiverMagnet()
	{
	}
}
[Token(Token = "0x200019F")]
public class HazardReceiverTentacle : HazardReceiver
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TentacleLogic tentacleLogic;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xB60044", Offset = "0xB60044", VA = "0xB60044", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep, float power)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xB60150", Offset = "0xB60150", VA = "0xB60150")]
	public HazardReceiverTentacle()
	{
	}
}
[Token(Token = "0x20001A0")]
public class HazardTrigger : CollisionBase
{
	[Token(Token = "0x20001A1")]
	public enum Hazard
	{
		[Token(Token = "0x40009BF")]
		none,
		[Token(Token = "0x40009C0")]
		fire,
		[Token(Token = "0x40009C1")]
		laser,
		[Token(Token = "0x40009C2")]
		explosion,
		[Token(Token = "0x40009C3")]
		rotor,
		[Token(Token = "0x40009C4")]
		burnout,
		[Token(Token = "0x40009C5")]
		booster,
		[Token(Token = "0x40009C6")]
		crystalEMP
	}

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float damageFactor;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float repeatRate;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject origin;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float genericFactor1;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<HazardReceiver> hazardReceiverList;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Hazard hazardType;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HazardReceiver hazardReceiver;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xB60160", Offset = "0xB60160", VA = "0xB60160", Slot = "8")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xB601FC", Offset = "0xB601FC", VA = "0xB601FC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xB603A4", Offset = "0xB603A4", VA = "0xB603A4", Slot = "9")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xB60484", Offset = "0xB60484", VA = "0xB60484", Slot = "10")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xB605A4", Offset = "0xB605A4", VA = "0xB605A4", Slot = "11")]
	public virtual void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xB60298", Offset = "0xB60298", VA = "0xB60298")]
	private void TellReceiversDisable()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xB606EC", Offset = "0xB606EC", VA = "0xB606EC", Slot = "12")]
	public virtual void StayEvents()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xB6082C", Offset = "0xB6082C", VA = "0xB6082C", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xB60A38", Offset = "0xB60A38", VA = "0xB60A38")]
	public HazardTrigger()
	{
	}
}
[Token(Token = "0x20001A2")]
public class HazardTriggerBooster : HazardTrigger
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform trans;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float laserForce;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float laserRotationForce;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 dir;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform originTrans;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float powerFactor;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ConstructionRocket myBooster;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ForceMode forceMode;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool useLiveBoosterFactor;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float boosterFactor;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int steps;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int maxSteps;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xB60ACC", Offset = "0xB60ACC", VA = "0xB60ACC", Slot = "8")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xB60B44", Offset = "0xB60B44", VA = "0xB60B44")]
	private void UseLayer()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xB60C64", Offset = "0xB60C64", VA = "0xB60C64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xB6105C", Offset = "0xB6105C", VA = "0xB6105C")]
	public HazardTriggerBooster()
	{
	}
}
[Token(Token = "0x20001A3")]
public class HazardTriggerLaserForces : HazardTrigger
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform trans;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float laserForce;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float laserRotationForce;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer meshRender;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ForceMode forceMode;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material startMaterial;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform laserDamageFeedbackFX;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CrystalLaser myLaser;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float originalDamageFactor;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float minChargeFactor;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float maxChargeFactor;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float chargeFactor;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 fxScale;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xB61084", Offset = "0xB61084", VA = "0xB61084")]
	public void SetMyLaser(CrystalLaser laser)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xB6108C", Offset = "0xB6108C", VA = "0xB6108C", Slot = "9")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xB61148", Offset = "0xB61148", VA = "0xB61148", Slot = "8")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xB61228", Offset = "0xB61228", VA = "0xB61228")]
	public void EnergyMaxCharge(int charge, int maxCharge)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xB61364", Offset = "0xB61364", VA = "0xB61364")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xB61758", Offset = "0xB61758", VA = "0xB61758")]
	public HazardTriggerLaserForces()
	{
	}
}
[Token(Token = "0x20001A4")]
public class HeistElevatorControl : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	[CompilerGenerated]
	private sealed class <ElevatorRide>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeistElevatorControl <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0xB61E3C", Offset = "0xB61E3C", VA = "0xB61E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xB61E84", Offset = "0xB61E84", VA = "0xB61E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xB617FC", Offset = "0xB617FC", VA = "0xB617FC")]
		[DebuggerHidden]
		public <ElevatorRide>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xB61AB4", Offset = "0xB61AB4", VA = "0xB61AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xB61AB8", Offset = "0xB61AB8", VA = "0xB61AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xB61E44", Offset = "0xB61E44", VA = "0xB61E44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanController scupPorgy;

	[Token(Token = "0x40009E1")]
	public const string scupPorgyID = "scupporgy";

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform elevatorTargetPosition;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Tween tween;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform scupTarget;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StudioEventEmitter elevatorSFX;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool elevatorStarted;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xB61788", Offset = "0xB61788", VA = "0xB61788")]
	[IteratorStateMachine(typeof(<ElevatorRide>d__8))]
	private IEnumerator ElevatorRide()
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xB61824", Offset = "0xB61824", VA = "0xB61824")]
	private void TargetReached()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xB61898", Offset = "0xB61898", VA = "0xB61898")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB61AAC", Offset = "0xB61AAC", VA = "0xB61AAC")]
	public HeistElevatorControl()
	{
	}
}
[Token(Token = "0x20001A6")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float wait;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isON;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xB61E8C", Offset = "0xB61E8C", VA = "0xB61E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xB61EF8", Offset = "0xB61EF8", VA = "0xB61EF8")]
	private void DoBlink()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xB61F48", Offset = "0xB61F48", VA = "0xB61F48")]
	public Blink()
	{
	}
}
[Token(Token = "0x20001A7")]
public class BoundsGizmo : MonoBehaviour
{
	[Token(Token = "0x6000957")]
	[Address(RVA = "0xB61F58", Offset = "0xB61F58", VA = "0xB61F58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xB61FD0", Offset = "0xB61FD0", VA = "0xB61FD0")]
	public BoundsGizmo()
	{
	}
}
[Token(Token = "0x20001A8")]
public static class ConfigurableJointExtensions
{
	[Token(Token = "0x6000959")]
	[Address(RVA = "0xB61FD8", Offset = "0xB61FD8", VA = "0xB61FD8")]
	public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xB62564", Offset = "0xB62564", VA = "0xB62564")]
	public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xB620CC", Offset = "0xB620CC", VA = "0xB620CC")]
	private static void SetTargetRotationInternal(ConfigurableJoint joint, Quaternion targetRotation, Quaternion startRotation, Space space)
	{
	}
}
[Token(Token = "0x20001A9")]
public class DeparentOnAwake : MonoBehaviour
{
	[Token(Token = "0x600095C")]
	[Address(RVA = "0xB62658", Offset = "0xB62658", VA = "0xB62658")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xB6267C", Offset = "0xB6267C", VA = "0xB6267C")]
	public DeparentOnAwake()
	{
	}
}
[Token(Token = "0x20001AA")]
public class DestroyOnStart : MonoBehaviour
{
	[Token(Token = "0x600095E")]
	[Address(RVA = "0xB62684", Offset = "0xB62684", VA = "0xB62684")]
	private void Start()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xB626F0", Offset = "0xB626F0", VA = "0xB626F0")]
	public DestroyOnStart()
	{
	}
}
[Token(Token = "0x20001AB")]
public class DestroyOnTouch : MonoBehaviour
{
	[Token(Token = "0x6000960")]
	[Address(RVA = "0xB626F8", Offset = "0xB626F8", VA = "0xB626F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xB6276C", Offset = "0xB6276C", VA = "0xB6276C")]
	public DestroyOnTouch()
	{
	}
}
[Token(Token = "0x20001AC")]
public static class DrawArrow
{
	[Token(Token = "0x6000962")]
	[Address(RVA = "0xB62774", Offset = "0xB62774", VA = "0xB62774")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xB629E4", Offset = "0xB629E4", VA = "0xB629E4")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xB62C98", Offset = "0xB62C98", VA = "0xB62C98")]
	public static void ForDebug(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xB62F64", Offset = "0xB62F64", VA = "0xB62F64")]
	public static void ForDebug(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}
}
[Token(Token = "0x20001AD")]
[ExecuteInEditMode]
public class DrawBones : MonoBehaviour
{
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer m_Renderer;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xB63288", Offset = "0xB63288", VA = "0xB63288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xB63398", Offset = "0xB63398", VA = "0xB63398")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xB635B0", Offset = "0xB635B0", VA = "0xB635B0")]
	public DrawBones()
	{
	}
}
[Token(Token = "0x20001AE")]
public class DrawLine : MonoBehaviour
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joint joint;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool attachToJoint;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetTransform;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useTargetArray;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] targetArray;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform trans;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float upOffset;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform physicsLine;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xB635B8", Offset = "0xB635B8", VA = "0xB635B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xB635DC", Offset = "0xB635DC", VA = "0xB635DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xB63898", Offset = "0xB63898", VA = "0xB63898")]
	public DrawLine()
	{
	}
}
[Token(Token = "0x20001AF")]
public class FollowObject : MonoBehaviour
{
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform follower;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera cam;

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xB638A8", Offset = "0xB638A8", VA = "0xB638A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xB638AC", Offset = "0xB638AC", VA = "0xB638AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xB63ABC", Offset = "0xB63ABC", VA = "0xB63ABC")]
	public FollowObject()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Gizmo : MonoBehaviour
{
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float size;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color gizmoColor;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xB63ACC", Offset = "0xB63ACC", VA = "0xB63ACC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xB63B10", Offset = "0xB63B10", VA = "0xB63B10")]
	public Gizmo()
	{
	}
}
[Token(Token = "0x20001B1")]
public class Hack_RB_onOff : MonoBehaviour
{
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xB63B2C", Offset = "0xB63B2C", VA = "0xB63B2C")]
	public Hack_RB_onOff()
	{
	}
}
[Token(Token = "0x20001B2")]
public class HiderCamera : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject go;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xB63B34", Offset = "0xB63B34", VA = "0xB63B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xB63B98", Offset = "0xB63B98", VA = "0xB63B98")]
	public static void HideCamera()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xB63C40", Offset = "0xB63C40", VA = "0xB63C40")]
	public HiderCamera()
	{
	}
}
[Token(Token = "0x20001B3")]
public class HideRenderer : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer myRenderer;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xB63C48", Offset = "0xB63C48", VA = "0xB63C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xB63D50", Offset = "0xB63D50", VA = "0xB63D50")]
	public HideRenderer()
	{
	}
}
[Token(Token = "0x20001B4")]
public class HingeJointFix : MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion initialLocalRotation;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialLocalPosition;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotationOnDisable;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 localPositionOnDisable;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDisabled;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xB63D58", Offset = "0xB63D58", VA = "0xB63D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xB63DA8", Offset = "0xB63DA8", VA = "0xB63DA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xB63E40", Offset = "0xB63E40", VA = "0xB63E40")]
	private void Update()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xB63EA0", Offset = "0xB63EA0", VA = "0xB63EA0")]
	public HingeJointFix()
	{
	}
}
[Token(Token = "0x20001B5")]
public class HingeSnap : MonoBehaviour
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minAngle;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAngle;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float treshold;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float targetAngle;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private JointSpring jointSpring;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool justSwitched;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float switchAngle;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool playIndividualSound;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string completeSFX;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent Open;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent Close;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool toggleOnStart;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xB63EA8", Offset = "0xB63EA8", VA = "0xB63EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xB63F78", Offset = "0xB63F78", VA = "0xB63F78")]
	public void IndividualSoundFeedback()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xB63F28", Offset = "0xB63F28", VA = "0xB63F28")]
	[ContextMenu("ToggleSwitch")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xB63FB8", Offset = "0xB63FB8", VA = "0xB63FB8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xB64108", Offset = "0xB64108", VA = "0xB64108")]
	public HingeSnap()
	{
	}
}
[Token(Token = "0x20001B6")]
public class JointAnchorScale : MonoBehaviour
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint[] joints;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] anchor;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] connectedAnchor;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool getJointsOnStart;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xB6411C", Offset = "0xB6411C", VA = "0xB6411C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xB64120", Offset = "0xB64120", VA = "0xB64120")]
	private void StoreAnchors()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xB642AC", Offset = "0xB642AC", VA = "0xB642AC")]
	private void ScaleUpdateAnchors()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xB643EC", Offset = "0xB643EC", VA = "0xB643EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xB643F0", Offset = "0xB643F0", VA = "0xB643F0")]
	public JointAnchorScale()
	{
	}
}
[Token(Token = "0x20001B7")]
[ExecuteInEditMode]
public class JointAnchorsPosition : MonoBehaviour
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint joint;

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xB643F8", Offset = "0xB643F8", VA = "0xB643F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xB643FC", Offset = "0xB643FC", VA = "0xB643FC")]
	private void SetAnchor()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xB64488", Offset = "0xB64488", VA = "0xB64488")]
	public JointAnchorsPosition()
	{
	}
}
[Token(Token = "0x20001B8")]
public class JointGizmos : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xB64490", Offset = "0xB64490", VA = "0xB64490")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xB646A8", Offset = "0xB646A8", VA = "0xB646A8")]
	public JointGizmos()
	{
	}
}
[Token(Token = "0x20001B9")]
public class JointTorque : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool readTorque;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint[] joints;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xB646B0", Offset = "0xB646B0", VA = "0xB646B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xB6485C", Offset = "0xB6485C", VA = "0xB6485C")]
	public JointTorque()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class MathHelp
{
	[Token(Token = "0x600098C")]
	[Address(RVA = "0xB64864", Offset = "0xB64864", VA = "0xB64864")]
	public static float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xB64880", Offset = "0xB64880", VA = "0xB64880")]
	public static Quaternion GetXAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xB648A0", Offset = "0xB648A0", VA = "0xB648A0")]
	public static Quaternion GetYAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xB648C0", Offset = "0xB648C0", VA = "0xB648C0")]
	public static Quaternion GetZAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xB648E0", Offset = "0xB648E0", VA = "0xB648E0")]
	public static void AddToFloat(List<float> li, float val, int len)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xB649D4", Offset = "0xB649D4", VA = "0xB649D4")]
	public static float MiddleFloats(List<float> li)
	{
		return default(float);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xB64B40", Offset = "0xB64B40", VA = "0xB64B40")]
	public static Vector2 MiddleVectors(List<Vector2> li)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xB64CE4", Offset = "0xB64CE4", VA = "0xB64CE4")]
	public static Vector3 Middle3Vectors(List<Vector3> li)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xB64E90", Offset = "0xB64E90", VA = "0xB64E90")]
	public static void AddToVector3(List<Vector3> li, Vector3 val, int len)
	{
	}
}
[Token(Token = "0x20001BB")]
public static class MeshExtension
{
	[Token(Token = "0x6000995")]
	[Address(RVA = "0xB64FA8", Offset = "0xB64FA8", VA = "0xB64FA8")]
	public static bool IsPointInside(this Mesh aMesh, Vector3 aLocalPoint)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001BC")]
[ExecuteInEditMode]
public class NonConvexMeshCollider : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	public class Box
	{
		[Token(Token = "0x20001BE")]
		[CompilerGenerated]
		private sealed class <get_Parents>d__17 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Box <b>5__2;

			[Token(Token = "0x17000091")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009B8")]
				[Address(RVA = "0xB68120", Offset = "0xB68120", VA = "0xB68120", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000092")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009BA")]
				[Address(RVA = "0xB68168", Offset = "0xB68168", VA = "0xB68168", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009B5")]
			[Address(RVA = "0xB67458", Offset = "0xB67458", VA = "0xB67458")]
			[DebuggerHidden]
			public <get_Parents>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60009B6")]
			[Address(RVA = "0xB68094", Offset = "0xB68094", VA = "0xB68094", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xB68098", Offset = "0xB68098", VA = "0xB68098", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xB68128", Offset = "0xB68128", VA = "0xB68128", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xB68170", Offset = "0xB68170", VA = "0xB68170", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009BC")]
			[Address(RVA = "0xB6821C", Offset = "0xB6821C", VA = "0xB6821C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001BF")]
		[CompilerGenerated]
		private sealed class <get_SelfAndParents>d__19 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Box> <>7__wrap1;

			[Token(Token = "0x17000093")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009C1")]
				[Address(RVA = "0xB685D0", Offset = "0xB685D0", VA = "0xB685D0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000094")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C3")]
				[Address(RVA = "0xB68618", Offset = "0xB68618", VA = "0xB68618", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xB67510", Offset = "0xB67510", VA = "0xB67510")]
			[DebuggerHidden]
			public <get_SelfAndParents>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xB68220", Offset = "0xB68220", VA = "0xB68220", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xB6823C", Offset = "0xB6823C", VA = "0xB6823C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xB68520", Offset = "0xB68520", VA = "0xB68520")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xB685D8", Offset = "0xB685D8", VA = "0xB685D8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0xB68620", Offset = "0xB68620", VA = "0xB68620", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009C5")]
			[Address(RVA = "0xB686CC", Offset = "0xB686CC", VA = "0xB686CC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001C0")]
		[CompilerGenerated]
		private sealed class <get_ChildrenRecursive>d__24 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Box[] <>7__wrap1;

			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Box <c>5__4;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Box> <>7__wrap4;

			[Token(Token = "0x17000095")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009CA")]
				[Address(RVA = "0xB68B2C", Offset = "0xB68B2C", VA = "0xB68B2C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000096")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009CC")]
				[Address(RVA = "0xB68B74", Offset = "0xB68B74", VA = "0xB68B74", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C6")]
			[Address(RVA = "0xB677A4", Offset = "0xB677A4", VA = "0xB677A4")]
			[DebuggerHidden]
			public <get_ChildrenRecursive>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60009C7")]
			[Address(RVA = "0xB686D0", Offset = "0xB686D0", VA = "0xB686D0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0xB686EC", Offset = "0xB686EC", VA = "0xB686EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xB68A7C", Offset = "0xB68A7C", VA = "0xB68A7C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xB68B34", Offset = "0xB68B34", VA = "0xB68B34", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xB68B7C", Offset = "0xB68B7C", VA = "0xB68B7C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xB68C28", Offset = "0xB68C28", VA = "0xB68C28", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001C1")]
		[CompilerGenerated]
		private sealed class <get_SelfAndChildrenRecursive>d__26 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Box> <>7__wrap1;

			[Token(Token = "0x17000097")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009D3")]
				[Address(RVA = "0xB68FDC", Offset = "0xB68FDC", VA = "0xB68FDC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000098")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D5")]
				[Address(RVA = "0xB69024", Offset = "0xB69024", VA = "0xB69024", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xB6785C", Offset = "0xB6785C", VA = "0xB6785C")]
			[DebuggerHidden]
			public <get_SelfAndChildrenRecursive>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60009D0")]
			[Address(RVA = "0xB68C2C", Offset = "0xB68C2C", VA = "0xB68C2C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xB68C48", Offset = "0xB68C48", VA = "0xB68C48", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009D2")]
			[Address(RVA = "0xB68F2C", Offset = "0xB68F2C", VA = "0xB68F2C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xB68FE4", Offset = "0xB68FE4", VA = "0xB68FE4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xB6902C", Offset = "0xB6902C", VA = "0xB6902C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xB690D8", Offset = "0xB690D8", VA = "0xB690D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Box[,,] boxes;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3Int lastLevelGridPos;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Box[] lastLevelBoxes;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3Int minGridPos;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3Int maxGridPos;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3Int gridSize;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3? center;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3? size;

		[Token(Token = "0x1700007D")]
		public Vector3 Center
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xB66464", Offset = "0xB66464", VA = "0xB66464")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700007E")]
		public Vector3 Size
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xB662E4", Offset = "0xB662E4", VA = "0xB662E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700007F")]
		public Box Parent
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xB673B4", Offset = "0xB673B4", VA = "0xB673B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xB673BC", Offset = "0xB673BC", VA = "0xB673BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public Box[] Children
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xB673C4", Offset = "0xB673C4", VA = "0xB673C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xB673CC", Offset = "0xB673CC", VA = "0xB673CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public IEnumerable<Box> Parents
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xB673D4", Offset = "0xB673D4", VA = "0xB673D4")]
			[IteratorStateMachine(typeof(<get_Parents>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		public IEnumerable<Box> SelfAndParents
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xB6748C", Offset = "0xB6748C", VA = "0xB6748C")]
			[IteratorStateMachine(typeof(<get_SelfAndParents>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public Box Root
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xB67544", Offset = "0xB67544", VA = "0xB67544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public IEnumerable<Box> ChildrenRecursive
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xB67720", Offset = "0xB67720", VA = "0xB67720")]
			[IteratorStateMachine(typeof(<get_ChildrenRecursive>d__24))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		public IEnumerable<Box> SelfAndChildrenRecursive
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xB677D8", Offset = "0xB677D8", VA = "0xB677D8")]
			[IteratorStateMachine(typeof(<get_SelfAndChildrenRecursive>d__26))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public Box[] LastLevelBoxes
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xB66F40", Offset = "0xB66F40", VA = "0xB66F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private IEnumerable<Vector3Int> CoveredGridPositions
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xB67558", Offset = "0xB67558", VA = "0xB67558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private int MinGridPosX
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xB67890", Offset = "0xB67890", VA = "0xB67890")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000089")]
		private int MinGridPosY
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xB679C8", Offset = "0xB679C8", VA = "0xB679C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008A")]
		private int MinGridPosZ
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xB67B00", Offset = "0xB67B00", VA = "0xB67B00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008B")]
		private int MaxGridPosX
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xB67C38", Offset = "0xB67C38", VA = "0xB67C38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008C")]
		private int MaxGridPosY
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xB67D70", Offset = "0xB67D70", VA = "0xB67D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008D")]
		private int MaxGridPosZ
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xB67EA8", Offset = "0xB67EA8", VA = "0xB67EA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008E")]
		private Vector3Int MinGridPos
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xB6766C", Offset = "0xB6766C", VA = "0xB6766C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private Vector3Int MaxGridPos
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xB67FE0", Offset = "0xB67FE0", VA = "0xB67FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private Vector3Int GridSize
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0xB67094", Offset = "0xB67094", VA = "0xB67094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xB66ED0", Offset = "0xB66ED0", VA = "0xB66ED0")]
		public Box(Box[,,] boxes, [Optional] Vector3? center, [Optional] Vector3? size, [Optional] Vector3Int lastLevelGridPos)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xB671D0", Offset = "0xB671D0", VA = "0xB671D0")]
		private void MergeWith(Box other)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xB66658", Offset = "0xB66658", VA = "0xB66658")]
		public bool TryMerge(Vector3Int direction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001C3")]
	public class Vector3Int
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3Int One;

		[Token(Token = "0x17000099")]
		public int X
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xB6921C", Offset = "0xB6921C", VA = "0xB6921C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xB69224", Offset = "0xB69224", VA = "0xB69224")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public int Y
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xB6922C", Offset = "0xB6922C", VA = "0xB6922C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xB69234", Offset = "0xB69234", VA = "0xB69234")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public int Z
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xB6923C", Offset = "0xB6923C", VA = "0xB6923C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xB69244", Offset = "0xB69244", VA = "0xB69244")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xB6661C", Offset = "0xB6661C", VA = "0xB6661C")]
		public Vector3Int(int x, int y, int z)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xB6924C", Offset = "0xB6924C", VA = "0xB6924C")]
		protected bool Equals(Vector3Int other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB69298", Offset = "0xB69298", VA = "0xB69298", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB693A4", Offset = "0xB693A4", VA = "0xB693A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB693C4", Offset = "0xB693C4", VA = "0xB693C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x20001C6")]
	[CompilerGenerated]
	private sealed class <CreateMeshIntersectingBoxes>d__6 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Box <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject colliderGo;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject <>3__colliderGo;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NonConvexMeshCollider <>4__this;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Bounds <bounds>5__2;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Box[,,] <boxes>5__3;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool[,,] <boxColliderPositions>5__4;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <s>5__5;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int <x>5__6;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int <y>5__7;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int <z>5__8;

		[Token(Token = "0x1700009C")]
		private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xB69D0C", Offset = "0xB69D0C", VA = "0xB69D0C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xB69D54", Offset = "0xB69D54", VA = "0xB69D54", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xB66CCC", Offset = "0xB66CCC", VA = "0xB66CCC")]
		[DebuggerHidden]
		public <CreateMeshIntersectingBoxes>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xB69648", Offset = "0xB69648", VA = "0xB69648", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xB6964C", Offset = "0xB6964C", VA = "0xB6964C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xB69D14", Offset = "0xB69D14", VA = "0xB69D14", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB69D5C", Offset = "0xB69D5C", VA = "0xB69D5C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB69E18", Offset = "0xB69E18", VA = "0xB69E18", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldMerge;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool createColliderChildGameObject;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int boxesPerEdge;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xB65140", Offset = "0xB65140", VA = "0xB65140")]
	public void Calculate()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xB65DF8", Offset = "0xB65DF8", VA = "0xB65DF8")]
	private Box[] MergeBoxes(Box[] boxes)
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xB658EC", Offset = "0xB658EC", VA = "0xB658EC")]
	private static GameObject CreateColliderChildGameObject(GameObject go, MeshFilter meshFilter)
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xB65D58", Offset = "0xB65D58", VA = "0xB65D58")]
	[IteratorStateMachine(typeof(<CreateMeshIntersectingBoxes>d__6))]
	private IEnumerable<Box> CreateMeshIntersectingBoxes(GameObject colliderGo)
	{
		return null;
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xB66D00", Offset = "0xB66D00", VA = "0xB66D00")]
	private static Bounds CalculateLocalBounds(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xB66EB8", Offset = "0xB66EB8", VA = "0xB66EB8")]
	public NonConvexMeshCollider()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ScaleJointsHelper : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] children;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _connectedAnchor;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _anchor;

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xB69E1C", Offset = "0xB69E1C", VA = "0xB69E1C")]
	private void StoreAnchors()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xB6A044", Offset = "0xB6A044", VA = "0xB6A044")]
	private void UpdateAnchors()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xB6A1C4", Offset = "0xB6A1C4", VA = "0xB6A1C4")]
	public ScaleJointsHelper()
	{
	}
}
[Token(Token = "0x20001C8")]
public class TextFPSCounter : MonoBehaviour
{
	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x4000A64")]
	private const int targetFPS = 60;

	[Token(Token = "0x4000A65")]
	private const float updateInterval = 0.1f;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int framesCount;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float framesTime;

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xB6A1CC", Offset = "0xB6A1CC", VA = "0xB6A1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xB6A2B0", Offset = "0xB6A2B0", VA = "0xB6A2B0")]
	public void GetGrip(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xB6A2C0", Offset = "0xB6A2C0", VA = "0xB6A2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xB6A4E4", Offset = "0xB6A4E4", VA = "0xB6A4E4")]
	public TextFPSCounter()
	{
	}
}
[Token(Token = "0x20001C9")]
public class UGUI_ImageColorFlickrRT : MonoBehaviour
{
	[Token(Token = "0x20001CA")]
	public enum Mode
	{
		[Token(Token = "0x4000A79")]
		sprite,
		[Token(Token = "0x4000A7A")]
		text,
		[Token(Token = "0x4000A7B")]
		spriteRenderer
	}

	[Token(Token = "0x20001CB")]
	public enum CycleType
	{
		[Token(Token = "0x4000A7D")]
		blink,
		[Token(Token = "0x4000A7E")]
		twoColors,
		[Token(Token = "0x4000A7F")]
		random,
		[Token(Token = "0x4000A80")]
		randomBlink
	}

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode cycleMode;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CycleType cycleType;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color firstColor;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color secondColor;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color transparentColor;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color a;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color b;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool doCycle;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color initialColor;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float wait;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int blink;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float waitCounter;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TMP_Text tm;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Image ts;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SpriteRenderer tr;

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xB6A4EC", Offset = "0xB6A4EC", VA = "0xB6A4EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xB6A6D4", Offset = "0xB6A6D4", VA = "0xB6A6D4")]
	public void StartFlickr()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xB6A6D8", Offset = "0xB6A6D8", VA = "0xB6A6D8")]
	public void StopFlickr()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xB6A6DC", Offset = "0xB6A6DC", VA = "0xB6A6DC")]
	public void ResetColor()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xB6A7F8", Offset = "0xB6A7F8", VA = "0xB6A7F8")]
	public void ForceInitialColor(Color32 col)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xB6A5C0", Offset = "0xB6A5C0", VA = "0xB6A5C0")]
	public void SetStartColor()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xB6A834", Offset = "0xB6A834", VA = "0xB6A834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xB6AAA0", Offset = "0xB6AAA0", VA = "0xB6AAA0")]
	public UGUI_ImageColorFlickrRT()
	{
	}
}
[Token(Token = "0x20001CC")]
public class WeightExclude : MonoBehaviour
{
	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xB6AAC0", Offset = "0xB6AAC0", VA = "0xB6AAC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xB6ABA0", Offset = "0xB6ABA0", VA = "0xB6ABA0")]
	public WeightExclude()
	{
	}
}
[Token(Token = "0x20001CD")]
public class WheelColliderHack : MonoBehaviour
{
	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB6ABA8", Offset = "0xB6ABA8", VA = "0xB6ABA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xB6AC08", Offset = "0xB6AC08", VA = "0xB6AC08")]
	public WheelColliderHack()
	{
	}
}
[Token(Token = "0x20001CE")]
public class HelpTimer : MonoBehaviour
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetConnectionCount[] targets;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ConstructionTargetConnectionCount> targetsList;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xB6AC10", Offset = "0xB6AC10", VA = "0xB6AC10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB6AC90", Offset = "0xB6AC90", VA = "0xB6AC90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB6AD10", Offset = "0xB6AD10", VA = "0xB6AD10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xB6AD90", Offset = "0xB6AD90", VA = "0xB6AD90")]
	private void SearchForTargets()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xB6AE3C", Offset = "0xB6AE3C", VA = "0xB6AE3C")]
	private void PickHuman()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xB6B168", Offset = "0xB6B168", VA = "0xB6B168")]
	private void TargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB6B398", Offset = "0xB6B398", VA = "0xB6B398")]
	public HelpTimer()
	{
	}
}
[Token(Token = "0x20001CF")]
public class HideGameObjects : MonoBehaviour
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB6B3A0", Offset = "0xB6B3A0", VA = "0xB6B3A0")]
	public void HideObjects(bool _hide = true)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB6B618", Offset = "0xB6B618", VA = "0xB6B618")]
	public HideGameObjects()
	{
	}
}
[Token(Token = "0x20001D0")]
public class HideIfAchievementUnlocked : MonoBehaviour
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB6B620", Offset = "0xB6B620", VA = "0xB6B620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB6B6C8", Offset = "0xB6B6C8", VA = "0xB6B6C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB6B748", Offset = "0xB6B748", VA = "0xB6B748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB6B7C8", Offset = "0xB6B7C8", VA = "0xB6B7C8")]
	private void AchievementUnlockedEvent(Achievement _achievement)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB6B624", Offset = "0xB6B624", VA = "0xB6B624")]
	private void UnlockedActionCheck()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xB6B850", Offset = "0xB6B850", VA = "0xB6B850")]
	public HideIfAchievementUnlocked()
	{
	}
}
[Token(Token = "0x20001D1")]
public class HideIfBuild : MonoBehaviour
{
	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xB6B858", Offset = "0xB6B858", VA = "0xB6B858")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xB6B87C", Offset = "0xB6B87C", VA = "0xB6B87C")]
	public HideIfBuild()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HideIfMenu : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool invert;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xB6B884", Offset = "0xB6B884", VA = "0xB6B884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xB6B948", Offset = "0xB6B948", VA = "0xB6B948")]
	public HideIfMenu()
	{
	}
}
[Token(Token = "0x20001D3")]
public class HideIfReplay : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool invert;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xB6B950", Offset = "0xB6B950", VA = "0xB6B950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xB6BA18", Offset = "0xB6BA18", VA = "0xB6BA18")]
	public HideIfReplay()
	{
	}
}
[Token(Token = "0x20001D4")]
public class HingeDetachPrevention : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	[CompilerGenerated]
	private sealed class <CollisionDisable>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HingeDetachPrevention <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0xB6C44C", Offset = "0xB6C44C", VA = "0xB6C44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xB6C494", Offset = "0xB6C494", VA = "0xB6C494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xB6BC88", Offset = "0xB6BC88", VA = "0xB6BC88")]
		[DebuggerHidden]
		public <CollisionDisable>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xB6C190", Offset = "0xB6C190", VA = "0xB6C190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xB6C194", Offset = "0xB6C194", VA = "0xB6C194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xB6C454", Offset = "0xB6C454", VA = "0xB6C454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceLimit;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator collisionTimeout;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float invokeUpdate;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable grabbale;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool disableCollisionOnOverpower;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool unglueOnOverpower;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool cooldown;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator collisionCoroutine;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool logging;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool onlyDetachIfGrabbed;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool useTorque;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float torqueLimit;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xB6BA20", Offset = "0xB6BA20", VA = "0xB6BA20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xB6BC14", Offset = "0xB6BC14", VA = "0xB6BC14")]
	[IteratorStateMachine(typeof(<CollisionDisable>d__14))]
	private IEnumerator CollisionDisable()
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xB6BCB0", Offset = "0xB6BCB0", VA = "0xB6BCB0")]
	private void SetCollision(bool which)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xB6BD6C", Offset = "0xB6BD6C", VA = "0xB6BD6C")]
	private void ForceCheck()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xB6C16C", Offset = "0xB6C16C", VA = "0xB6C16C")]
	public HingeDetachPrevention()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HingeSFX : MonoBehaviour
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HingeJoint myHingeJoint;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float counter;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float squeekTime;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float triggerVelocity;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lastDirection;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useIntermittent;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool onlyOncePerDirectionChange;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool triggerCooldownOnLowVelocity;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xB6C49C", Offset = "0xB6C49C", VA = "0xB6C49C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xB6C54C", Offset = "0xB6C54C", VA = "0xB6C54C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB6C66C", Offset = "0xB6C66C", VA = "0xB6C66C")]
	public HingeSFX()
	{
	}
}
[Token(Token = "0x20001D7")]
public class HugeRocketFlyAway : MonoBehaviour
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 velocityStore;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool gameDone;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject thrustFX;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xB6C690", Offset = "0xB6C690", VA = "0xB6C690")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xB6C6B0", Offset = "0xB6C6B0", VA = "0xB6C6B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xB6C768", Offset = "0xB6C768", VA = "0xB6C768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xB6C7E8", Offset = "0xB6C7E8", VA = "0xB6C7E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xB6C820", Offset = "0xB6C820", VA = "0xB6C820")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB6C864", Offset = "0xB6C864", VA = "0xB6C864")]
	public HugeRocketFlyAway()
	{
	}
}
[Token(Token = "0x20001D8")]
public class HumanDamage : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BubbleToCharacter characterBubble;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB6C86C", Offset = "0xB6C86C", VA = "0xB6C86C")]
	public HumanDamage()
	{
	}
}
[Token(Token = "0x20001D9")]
public class HumanOverrideHit : MonoBehaviour
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool humanHitEnabled;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB6C874", Offset = "0xB6C874", VA = "0xB6C874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xB6C918", Offset = "0xB6C918", VA = "0xB6C918")]
	public HumanOverrideHit()
	{
	}
}
[Token(Token = "0x20001DA")]
public class HumanRecycler : MonoBehaviour
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumansInteraction hi;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool recycleStarted;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xB6C920", Offset = "0xB6C920", VA = "0xB6C920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xB6CBD8", Offset = "0xB6CBD8", VA = "0xB6CBD8")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xB6CCD0", Offset = "0xB6CCD0", VA = "0xB6CCD0")]
	private void RecycleHuman()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xB6CFD0", Offset = "0xB6CFD0", VA = "0xB6CFD0")]
	public HumanRecycler()
	{
	}
}
[Token(Token = "0x20001DB")]
public class BubbleToCharacter : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	public delegate void ConversationDone(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001DD")]
	public delegate void ConversationSayNext(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001DE")]
	public delegate void ConversationStarted(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001DF")]
	public delegate void BabbleStartedDelegate(bool babbleStart, BubbleToCharacter bubble);

	[Token(Token = "0x20001E0")]
	public delegate void QuestionAnswered(string _convoID, int resultID, BubbleToCharacter bubble);

	[Token(Token = "0x20001E1")]
	public delegate void QuestionOpened(GameObject _go);

	[Token(Token = "0x20001E2")]
	public enum ConvoType
	{
		[Token(Token = "0x4000B2C")]
		none,
		[Token(Token = "0x4000B2D")]
		insert,
		[Token(Token = "0x4000B2E")]
		task,
		[Token(Token = "0x4000B2F")]
		question,
		[Token(Token = "0x4000B30")]
		noIcon
	}

	[Token(Token = "0x20001E3")]
	[CompilerGenerated]
	private sealed class <TextReveal>d__222 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xB7354C", Offset = "0xB7354C", VA = "0xB7354C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xB73594", Offset = "0xB73594", VA = "0xB73594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xB716BC", Offset = "0xB716BC", VA = "0xB716BC")]
		[DebuggerHidden]
		public <TextReveal>d__222(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xB72CE4", Offset = "0xB72CE4", VA = "0xB72CE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xB72CE8", Offset = "0xB72CE8", VA = "0xB72CE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xB73554", Offset = "0xB73554", VA = "0xB73554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E4")]
	[CompilerGenerated]
	private sealed class <ExtraWait>d__224 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xB73988", Offset = "0xB73988", VA = "0xB73988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0xB739D0", Offset = "0xB739D0", VA = "0xB739D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xB71758", Offset = "0xB71758", VA = "0xB71758")]
		[DebuggerHidden]
		public <ExtraWait>d__224(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xB7359C", Offset = "0xB7359C", VA = "0xB7359C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xB735A0", Offset = "0xB735A0", VA = "0xB735A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xB73990", Offset = "0xB73990", VA = "0xB73990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E5")]
	[CompilerGenerated]
	private sealed class <BubbleChange>d__225 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _wait;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xB73B20", Offset = "0xB73B20", VA = "0xB73B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xB73B68", Offset = "0xB73B68", VA = "0xB73B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xB71804", Offset = "0xB71804", VA = "0xB71804")]
		[DebuggerHidden]
		public <BubbleChange>d__225(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xB739D8", Offset = "0xB739D8", VA = "0xB739D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xB739DC", Offset = "0xB739DC", VA = "0xB739DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xB73B28", Offset = "0xB73B28", VA = "0xB73B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetCharacter;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody currentCharacter;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RelativeAttach[] relativeAttachList;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DOTweenAnimation bubbleTween;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bubbleInner;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabbable grabbable;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool wasGrabbed;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isGrabbed;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool initialised;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentTalk;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> chatList;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> markupList;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string mainConvoString;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro dots;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool bubbleHidden;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool touchBlocked;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public ConvoType currentConvoType;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ConvoType mainConvoType;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] convoIcons;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool currentConvoDone;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject convoIconRoot;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool animateTextOnBubble;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float perCharacterRevealDelay;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float newReadWaitAddonPerCharacter;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float newReadWaitAddonMinWait;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int timingIDX;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float bubbleHide;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float specialEndWait;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool doSpecialEndWait;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string mainConvoID;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int convoInterruptedAt;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool continueNeeded;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool blockTapSkip;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool isVisibleInCamera;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	private bool allSeen;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Questions")]
	public GameObject answerContainer;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float questionEndWait;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool questionWait;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool answerBlocked;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] defaultAnswers;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro[] answerType;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool useQuestLabel;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform questLabel;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshPro questLabelInfo;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool suppressIcons;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public HumanController humanController;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Camera VRCamera;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string reactionID;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float tappedReactionChance;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string flyingAwayReactionID;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string interruptedReactionID;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string shakeReactionID;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string[] tappedReactionID;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string hurtReactionID;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string babbleCharactersID;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string babbleWordsID;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string endBabbleID;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool useDefaultTappedReactions;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool interruptedReaction;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool useRepeatInject;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int tapReactions;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool pauseAfterInsert;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string manualInsert;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool useDefaultBlankColor;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string blankColor;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string customBlankColor;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string fullColor;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string highlightColor;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Dictionary<string, string> replaceDict;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Dictionary<string, string> replaceClearDict;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Vector3 regularBubbleScale;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public bool useLossyStartScale;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool debugNoWaitForPlayerFocus;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	public bool doHitReaction;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
	public bool doHurtReaction;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
	public bool isBabbleMode;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool isBabbleProof;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool doBabbleEndReaction;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	[Header("object start gameframe = 0")]
	public bool suppressInitBabble;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject babbleFX;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float lastHurtTime;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float hurtShoutWait;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool emoSFXPlayed;

	[Token(Token = "0x4000B04")]
	public const string startTapSymbol = "!";

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float talkTimingFactor;

	[Token(Token = "0x4000B06")]
	public const float talkSpeedAddon = 0.5f;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private string reactionType;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool unparent;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public DisableOnDistance disableOnDistance;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int revealFactor;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool convoStarted;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool alwaysConvoIcon;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool mainConvoSeen;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool isNav;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool isCompleted;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
	private bool isCouncil;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x216")]
	private bool isCouncilSatisfied;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public string characterIdentifier;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int nextBabbleBreak;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int babbleCounter;

	[Token(Token = "0x4000B15")]
	public const string pattern = "(?<=[.!?#。！？])";

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float hitTrigger;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float maxHitTrigger;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool humanHurt;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	public bool manualBlock;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int gameFrame;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int textPos;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool questionAllowed;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string currentTXT;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float talkSpeed;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private string partA;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private string partB;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private string c;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string emoSym;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Color[] colorArray;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Color tweenerColor;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private string lastEmo;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private int currentTextPos;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float calculatedReadWaitAddon;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 boundSize;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private Bounds bounds;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Plane[] planes;

	[Token(Token = "0x170000A0")]
	public float PerCharacterRevealDelay
	{
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xB6DC84", Offset = "0xB6DC84", VA = "0xB6DC84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xB6DC8C", Offset = "0xB6DC8C", VA = "0xB6DC8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float ReadWaitAddon
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xB6DC94", Offset = "0xB6DC94", VA = "0xB6DC94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xB6DC9C", Offset = "0xB6DC9C", VA = "0xB6DC9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float ReadWaitAddonPerCharacter
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xB6DCA4", Offset = "0xB6DCA4", VA = "0xB6DCA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xB6DCAC", Offset = "0xB6DCAC", VA = "0xB6DCAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public float BubbleHide
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xB6DCB4", Offset = "0xB6DCB4", VA = "0xB6DCB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xB6DCBC", Offset = "0xB6DCBC", VA = "0xB6DCBC")]
		set
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public static event ConversationDone OnConversationDone
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xB6CFD8", Offset = "0xB6CFD8", VA = "0xB6CFD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xB6D0B0", Offset = "0xB6D0B0", VA = "0xB6D0B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public static event ConversationSayNext OnConversationSayNext
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xB6D188", Offset = "0xB6D188", VA = "0xB6D188")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xB6D264", Offset = "0xB6D264", VA = "0xB6D264")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public static event ConversationStarted OnConversationStarted
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xB6D340", Offset = "0xB6D340", VA = "0xB6D340")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xB6D41C", Offset = "0xB6D41C", VA = "0xB6D41C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public static event BabbleStartedDelegate OnBabbleStarted
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xB6D4F8", Offset = "0xB6D4F8", VA = "0xB6D4F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xB6D5D4", Offset = "0xB6D5D4", VA = "0xB6D5D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public static event QuestionAnswered OnQuestionAnswered
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xB6D6B0", Offset = "0xB6D6B0", VA = "0xB6D6B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB6D78C", Offset = "0xB6D78C", VA = "0xB6D78C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public static event QuestionOpened OnQuestionOpened
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xB6D868", Offset = "0xB6D868", VA = "0xB6D868")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xB6D944", Offset = "0xB6D944", VA = "0xB6D944")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB6DA20", Offset = "0xB6DA20", VA = "0xB6DA20")]
	public void SetDefaultTimingValues()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB6DA90", Offset = "0xB6DA90", VA = "0xB6DA90")]
	public static void GetTalkTiming()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB6DC18", Offset = "0xB6DC18", VA = "0xB6DC18")]
	public static void SlideTalkSpeed(float _which)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xB6DCC4", Offset = "0xB6DCC4", VA = "0xB6DCC4")]
	public void CharacterID(string cID)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xB6DCD4", Offset = "0xB6DCD4", VA = "0xB6DCD4")]
	public void SetQuestLabel(string _header, string _info, bool _complete = false)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xB6DD08", Offset = "0xB6DD08", VA = "0xB6DD08")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xB6E198", Offset = "0xB6E198", VA = "0xB6E198")]
	private void MyQuestionOpened(GameObject _go)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xB6E478", Offset = "0xB6E478", VA = "0xB6E478")]
	public void SetBabble(bool which = true)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xB6E488", Offset = "0xB6E488", VA = "0xB6E488")]
	[ContextMenu("StartBabble")]
	public void StartBabble()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xB6E560", Offset = "0xB6E560", VA = "0xB6E560")]
	public void EndBabble(bool _forceEnd = false)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xB6E654", Offset = "0xB6E654", VA = "0xB6E654")]
	private void DoReplaceBabble(bool _pauseAfter = true)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xB6E6EC", Offset = "0xB6E6EC", VA = "0xB6E6EC")]
	private void DoInsertBabble(bool _pauseAfter = true)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xB6E93C", Offset = "0xB6E93C", VA = "0xB6E93C")]
	private string CreateBabbleString(int _chars, int minBabbleLength, int maxBabbleLength, int _maxCharsBabbleBubble = 20)
	{
		return null;
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xB6EBD4", Offset = "0xB6EBD4", VA = "0xB6EBD4")]
	[ContextMenu("TestBabbleGen")]
	private void TestBabbleGen()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xB6B54C", Offset = "0xB6B54C", VA = "0xB6B54C")]
	public void CleanUp(bool _which, bool hideBubbleSetup = false)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xB6EDB0", Offset = "0xB6EDB0", VA = "0xB6EDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xB6EF18", Offset = "0xB6EF18", VA = "0xB6EF18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xB6F044", Offset = "0xB6F044", VA = "0xB6F044")]
	public void AnswerGiven(int _answerID)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xB6EBC8", Offset = "0xB6EBC8", VA = "0xB6EBC8")]
	public void PauseMainConvoAfterInsert()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xB6F108", Offset = "0xB6F108", VA = "0xB6F108")]
	public void PauseMainConvoAfterInsert(bool fullPause = false)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB6DE50", Offset = "0xB6DE50", VA = "0xB6DE50")]
	public void InitCharacter(Transform _transform)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB6DFC8", Offset = "0xB6DFC8", VA = "0xB6DFC8")]
	public void EmptyConversation()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB6FA28", Offset = "0xB6FA28", VA = "0xB6FA28")]
	public void BlockTapSkip(bool _which)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB6FA34", Offset = "0xB6FA34", VA = "0xB6FA34")]
	public void SetAnswers(string _answerNo, string _answerYes)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB6FAAC", Offset = "0xB6FAAC", VA = "0xB6FAAC")]
	public void SetCouncil(bool isSatisfied)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB6FB24", Offset = "0xB6FB24", VA = "0xB6FB24")]
	public void SetNav()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB6FB94", Offset = "0xB6FB94", VA = "0xB6FB94")]
	public void SetCompleted()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB6B29C", Offset = "0xB6B29C", VA = "0xB6B29C")]
	public void StartTaskAndLocaliseRandomize(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB703D4", Offset = "0xB703D4", VA = "0xB703D4")]
	public void StartTaskAndLocalise(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB704BC", Offset = "0xB704BC", VA = "0xB704BC")]
	public void StartTask(string _what, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB704FC", Offset = "0xB704FC", VA = "0xB704FC")]
	public void StartQuestionAndLocalise(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB705E4", Offset = "0xB705E4", VA = "0xB705E4")]
	public void StartQuestion(string _what, string _mainConvoID = "")
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB6FC04", Offset = "0xB6FC04", VA = "0xB6FC04")]
	public void StartConversation(string _what, ConvoType _convoType = ConvoType.task, string _mainConvoID = "", bool _newConvo = true)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB705F4", Offset = "0xB705F4", VA = "0xB705F4")]
	private void AddInsertStartEMOSFX()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB6B384", Offset = "0xB6B384", VA = "0xB6B384")]
	public void SuppressIcon(bool _which)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB6F8C4", Offset = "0xB6F8C4", VA = "0xB6F8C4")]
	public void SetConvoIcons(bool forceIcon = false, ConvoType forceConvoType = ConvoType.noIcon)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB6F220", Offset = "0xB6F220", VA = "0xB6F220")]
	public static List<string> ParseNewChat(string _newText, BubbleToCharacter myBubble, bool parseDotDotDot = true)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB7075C", Offset = "0xB7075C", VA = "0xB7075C")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xB6F120", Offset = "0xB6F120", VA = "0xB6F120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xB70824", Offset = "0xB70824", VA = "0xB70824")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xB709D0", Offset = "0xB709D0", VA = "0xB709D0")]
	private void UnBlockTouch()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xB6B094", Offset = "0xB6B094", VA = "0xB6B094")]
	public void InsertVerbalReactionAndLocalise(string _locaID, string _reactionID = "", bool _noInterruptionInjection = true, string _reactionType = "")
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB6E784", Offset = "0xB6E784", VA = "0xB6E784")]
	public void InsertVerbalReaction(string _what, string _reactionID = "", bool _noInterruption = true, string _reactionType = "")
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB709D8", Offset = "0xB709D8", VA = "0xB709D8")]
	public void HumanHit(Collision _collision)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB70A9C", Offset = "0xB70A9C", VA = "0xB70A9C")]
	public bool HitVelocity(Collision _collision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB70F58", Offset = "0xB70F58", VA = "0xB70F58")]
	[ContextMenu("HumanHitReaction")]
	private void HumanHitReactionTest()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB70CD4", Offset = "0xB70CD4", VA = "0xB70CD4")]
	public void HumanHitReaction(float _velocity = 0f)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB70F78", Offset = "0xB70F78", VA = "0xB70F78")]
	public bool IsFullConvoShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB70F80", Offset = "0xB70F80", VA = "0xB70F80")]
	public bool IsFullMainConvoShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB70F88", Offset = "0xB70F88", VA = "0xB70F88")]
	[ContextMenu("OOBsed")]
	public void OOBsed()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB6EC5C", Offset = "0xB6EC5C", VA = "0xB6EC5C")]
	public void HideBubble()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xB70FB4", Offset = "0xB70FB4", VA = "0xB70FB4")]
	public void OnGrabbed(Grabbable _grabbable)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xB71048", Offset = "0xB71048", VA = "0xB71048")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB71058", Offset = "0xB71058", VA = "0xB71058")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xB710CC", Offset = "0xB710CC", VA = "0xB710CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB710E0", Offset = "0xB710E0", VA = "0xB710E0")]
	[ContextMenu("FlyAway")]
	public void FlyingAwayReaction()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB6E234", Offset = "0xB6E234", VA = "0xB6E234")]
	public void ContinueMainConvo(bool isQuestionOpenHideOthers = false)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xB7115C", Offset = "0xB7115C", VA = "0xB7115C")]
	public static void TypewriterMode(bool active)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xB711D8", Offset = "0xB711D8", VA = "0xB711D8")]
	private void RedoConversation()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xB71280", Offset = "0xB71280", VA = "0xB71280")]
	public void HumanTouched(bool _which)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xB71564", Offset = "0xB71564", VA = "0xB71564")]
	public void SayNextNew()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xB70704", Offset = "0xB70704", VA = "0xB70704")]
	private void ActivateInView()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB6FF04", Offset = "0xB6FF04", VA = "0xB6FF04")]
	public void SayNext()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB713B8", Offset = "0xB713B8", VA = "0xB713B8")]
	private void ReadDoneActions(bool _tapped = false)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB7156C", Offset = "0xB7156C", VA = "0xB7156C")]
	private bool RevealDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB71648", Offset = "0xB71648", VA = "0xB71648")]
	[IteratorStateMachine(typeof(<TextReveal>d__222))]
	private IEnumerator TextReveal()
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB716E4", Offset = "0xB716E4", VA = "0xB716E4")]
	[IteratorStateMachine(typeof(<ExtraWait>d__224))]
	private IEnumerator ExtraWait()
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB71780", Offset = "0xB71780", VA = "0xB71780")]
	[IteratorStateMachine(typeof(<BubbleChange>d__225))]
	private IEnumerator BubbleChange(float _wait = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB7182C", Offset = "0xB7182C", VA = "0xB7182C")]
	private void IsVisible()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB71A0C", Offset = "0xB71A0C", VA = "0xB71A0C")]
	public static void EmoTest(string emo)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB71CD0", Offset = "0xB71CD0", VA = "0xB71CD0")]
	public static void EmptyAllBubbles()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB71D90", Offset = "0xB71D90", VA = "0xB71D90")]
	public static BubbleToCharacter GetClosestCharacterFromViewCenter(Vector3 lookPosition, Vector3 lookAxis, bool needsConvo = false)
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB720A0", Offset = "0xB720A0", VA = "0xB720A0")]
	public BubbleToCharacter()
	{
	}
}
[Token(Token = "0x20001E6")]
public class HumanController : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <JumpPhases>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HumanController <>4__this;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _value;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xB77DA8", Offset = "0xB77DA8", VA = "0xB77DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xB77DF0", Offset = "0xB77DF0", VA = "0xB77DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xB77C54", Offset = "0xB77C54", VA = "0xB77C54")]
		[DebuggerHidden]
		public <JumpPhases>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xB77C7C", Offset = "0xB77C7C", VA = "0xB77C7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xB77C80", Offset = "0xB77C80", VA = "0xB77C80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xB77DB0", Offset = "0xB77DB0", VA = "0xB77DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera VRCamera;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float uprightTorque;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defaultUprightTorque;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion rot;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float jumpForce;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float jumpForceUp;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float baseHopWait;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Grabbable grabbable;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool turnedOver;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 forward;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float signed;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 cross;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 tmpTarget;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float signedB;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float turnTresh;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform humanTrans;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Human human;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool forceMove;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject humanPrefab;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HumansInteraction humanInteractions;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VoiceProvider voiceProvider;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool cameraIsTarget;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool cameraIsTargetInitially;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform lookToTarget;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool alwaysPlayerFocused;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool tempPlayerFocus;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float hopWait;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float hopWaitRepeat;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float deFocusWait;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform lookToHelper;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool enableFallParachute;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool parachuteOnlyOnce;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float overWriteParaFallFactor;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastYPos;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float freeFallDistance;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 origHeading;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform nonCameraTarget;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool useDefaultHeading;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool hasVRCamera;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool canMove;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool communicationBlock;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float deFocusMaxWait;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float defaultDefocusMaxWait;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform[] rayOrigin;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform[] groundRayOrigin;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform groundRayOriginRoot;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int raySwitch;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HumanWaypointController hwpController;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform lastTarget;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool raycastForPath;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool lastTargetIfBlockedAllowed;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float maxFallDistance;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float defaultFallDistance;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool tapTouchBlocked;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private LayerMask layerMask;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool turnBackAllowed;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool nonHuman;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool doBumpIntoOtherHumanJump;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public HumanAesthetic look;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool blockHeadIdle;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool movingAllowed;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool alwaysTurnToTorque;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Entity myEntity;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int jumps;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int insideJumps;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool isReallyParachuting;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public _g_Piece myWaypoint;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_base levelDirector;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool ignoreCommBlock;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private GameObject hackLookAt;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool jumpBlocked;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParachuteStandalone para;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int timesChecked;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float torqueValue;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 jumpForceVec;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int timesBlocked;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3[] groundNormalStore;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool isParachuting;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Ray myRay;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 dir;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 safeWalkNormal;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 rayStart;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private RaycastHit hit;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float checkDistance;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Transform checkSensor;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Vehicle vehicleInFront;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 walkDir;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xB73B70", Offset = "0xB73B70", VA = "0xB73B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xB740A4", Offset = "0xB740A4", VA = "0xB740A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xB74160", Offset = "0xB74160", VA = "0xB74160")]
	public void MovementSettings(float _jumpForce, float _jumpForceUp, float _hopWaitRepeat)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xB73F30", Offset = "0xB73F30", VA = "0xB73F30")]
	public void DefaultMovementSettings()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xB74218", Offset = "0xB74218", VA = "0xB74218")]
	public void SetFallDistance(float _fallDist)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB74238", Offset = "0xB74238", VA = "0xB74238")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB74320", Offset = "0xB74320", VA = "0xB74320")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB74408", Offset = "0xB74408", VA = "0xB74408")]
	private void OnParachuteChange(ParachuteStandalone _parachute, bool _which)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xB74494", Offset = "0xB74494", VA = "0xB74494")]
	private void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _grabbed)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xB6CE10", Offset = "0xB6CE10", VA = "0xB6CE10")]
	public void HitJump(Vector3 _otherPosition, bool forceIt = false, float modifier = 1f)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xB74654", Offset = "0xB74654", VA = "0xB74654")]
	public void UpJump(float modifier = 1f)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xB70F98", Offset = "0xB70F98", VA = "0xB70F98")]
	public void SetCommunicationBlock(bool _which)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xB7407C", Offset = "0xB7407C", VA = "0xB7407C")]
	public void SetCameraTarget(bool tempFocus = false)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xB746AC", Offset = "0xB746AC", VA = "0xB746AC")]
	private void SearchCamera()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xB74860", Offset = "0xB74860", VA = "0xB74860")]
	public void LookAtCameraTempWhileMoving(bool _allowWalking = false, float _waitTime = -1f)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xB74050", Offset = "0xB74050", VA = "0xB74050")]
	public void MoveToTarget(bool _which, bool _forceMove = false)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xB748B8", Offset = "0xB748B8", VA = "0xB748B8")]
	[ContextMenu("NoTargetAtAll")]
	public void NoTargetAtAll()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xB748F0", Offset = "0xB748F0", VA = "0xB748F0")]
	public void DeFocusCheck(bool forceDefocus = false)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xB74A94", Offset = "0xB74A94", VA = "0xB74A94")]
	public bool IsPlayerFocused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xB71360", Offset = "0xB71360", VA = "0xB71360")]
	[ContextMenu("CharacterTapped")]
	public void CharacterTapped()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xB74AAC", Offset = "0xB74AAC", VA = "0xB74AAC")]
	public void CleanUp(bool _which)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xB73EAC", Offset = "0xB73EAC", VA = "0xB73EAC")]
	private void DefaultHeading()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xB73FB4", Offset = "0xB73FB4", VA = "0xB73FB4")]
	public void InitNonCameraTarget([Optional] Transform _target)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xB74A48", Offset = "0xB74A48", VA = "0xB74A48")]
	public void SetTarget()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xB74B58", Offset = "0xB74B58", VA = "0xB74B58")]
	[ContextMenu("SetForwardTarget")]
	public void SetAlwaysForwardTarget()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xB74D34", Offset = "0xB74D34", VA = "0xB74D34")]
	public void IsAlwaysPlayerFocused(bool _playerfocused)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xB74770", Offset = "0xB74770", VA = "0xB74770")]
	public void SetTargetTransform(Transform _targetTrans)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xB74D44", Offset = "0xB74D44", VA = "0xB74D44")]
	public void InitNewHuman(HumanAestheticScriptableObject _humanSObject)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xB74E70", Offset = "0xB74E70", VA = "0xB74E70")]
	private void CheckTurnedOver()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xB75108", Offset = "0xB75108", VA = "0xB75108")]
	[ContextMenu("NoOrientationAtAll")]
	private void NoOrientationAtAll()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xB7512C", Offset = "0xB7512C", VA = "0xB7512C")]
	public void NoOrientationAtAll(bool which)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xB75168", Offset = "0xB75168", VA = "0xB75168")]
	public void BlockJump(bool which)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xB751DC", Offset = "0xB751DC", VA = "0xB751DC")]
	private void ParachuteCheck()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xB753FC", Offset = "0xB753FC", VA = "0xB753FC")]
	private void TurnToCamera()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xB75AB8", Offset = "0xB75AB8", VA = "0xB75AB8")]
	private void Jump()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xB76AC8", Offset = "0xB76AC8", VA = "0xB76AC8")]
	[IteratorStateMachine(typeof(<JumpPhases>d__121))]
	private IEnumerator JumpPhases(Vector3 _value)
	{
		return null;
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xB76B60", Offset = "0xB76B60", VA = "0xB76B60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xB76634", Offset = "0xB76634", VA = "0xB76634")]
	private Vector3 CheckForCollision()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xB76BC4", Offset = "0xB76BC4", VA = "0xB76BC4")]
	public HumanController()
	{
	}
}
[Token(Token = "0x20001E8")]
public class HumanControllerSetter : MonoBehaviour
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setCameraTarget;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enableParachute;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool focusOnStart;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xB77DF8", Offset = "0xB77DF8", VA = "0xB77DF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xB77F00", Offset = "0xB77F00", VA = "0xB77F00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xB77F80", Offset = "0xB77F80", VA = "0xB77F80")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xB780B0", Offset = "0xB780B0", VA = "0xB780B0")]
	public HumanControllerSetter()
	{
	}
}
[Token(Token = "0x20001E9")]
public class HumanEntitySpawnerChanger : MonoBehaviour
{
	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xB780C0", Offset = "0xB780C0", VA = "0xB780C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xB781C8", Offset = "0xB781C8", VA = "0xB781C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xB78248", Offset = "0xB78248", VA = "0xB78248")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xB7836C", Offset = "0xB7836C", VA = "0xB7836C")]
	public HumanEntitySpawnerChanger()
	{
	}
}
[Token(Token = "0x20001EA")]
public class HumansInteraction : MonoBehaviour
{
	[Token(Token = "0x20001EB")]
	public enum EventType
	{
		[Token(Token = "0x4000BC3")]
		inWater,
		[Token(Token = "0x4000BC4")]
		outOfWater,
		[Token(Token = "0x4000BC5")]
		hit,
		[Token(Token = "0x4000BC6")]
		tap,
		[Token(Token = "0x4000BC7")]
		grab,
		[Token(Token = "0x4000BC8")]
		squished,
		[Token(Token = "0x4000BC9")]
		humanHitHuman,
		[Token(Token = "0x4000BCA")]
		hurt
	}

	[Token(Token = "0x20001EC")]
	public delegate void CharacterEvent(EventType _which, Collision _collision, bool _grabbed);

	[Token(Token = "0x20001ED")]
	public delegate void CharacterEventGlobal(EventType _which, Collision _collision, bool _grabbed, BubbleToCharacter _bubble);

	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <UnSlap>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _time;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HumansInteraction <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xB7A838", Offset = "0xB7A838", VA = "0xB7A838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xB7A880", Offset = "0xB7A880", VA = "0xB7A880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xB79204", Offset = "0xB79204", VA = "0xB79204")]
		[DebuggerHidden]
		public <UnSlap>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xB7A65C", Offset = "0xB7A65C", VA = "0xB7A65C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xB7A660", Offset = "0xB7A660", VA = "0xB7A660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB7A840", Offset = "0xB7A840", VA = "0xB7A840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGrabbed;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool inWater;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool inWaterDelayed;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitEventTreshold;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grabbable;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DOTweenAnimation raftAni;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DOTweenAnimation raftAniOut;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool raftVisible;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool lifeSaverEnabled;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool noLifeSaverIfCollisions;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform headPos;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HumanController humanController;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool doSquishing;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool flyingAwayReaction;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string vestSFX;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string mushSFX;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string plopSFX;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BubbleToCharacter characterBubble;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool stopMovementOnGrab;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float flyAwayTriggerVelocity;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Dictionary<Rigidbody, TentacleLogic> myCollisionTentacleDict;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float vel;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool blockBubbleTap;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool flyingReactionTempLocked;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private bool slapped;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	private bool doHitCallback;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody colRB;

	[Token(Token = "0x14000034")]
	public event CharacterEvent OnCharacterEvent
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xB78374", Offset = "0xB78374", VA = "0xB78374")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xB78410", Offset = "0xB78410", VA = "0xB78410")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event CharacterEventGlobal OnCharacterEventGlobal
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xB784AC", Offset = "0xB784AC", VA = "0xB784AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xB78564", Offset = "0xB78564", VA = "0xB78564")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xB7861C", Offset = "0xB7861C", VA = "0xB7861C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xB78874", Offset = "0xB78874", VA = "0xB78874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xB788A0", Offset = "0xB788A0", VA = "0xB788A0")]
	private void CheckFlyingAway()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xB78988", Offset = "0xB78988", VA = "0xB78988")]
	private void CheckWaterLifeSaver()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xB78AC4", Offset = "0xB78AC4", VA = "0xB78AC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xB78CC4", Offset = "0xB78CC4", VA = "0xB78CC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xB78EC4", Offset = "0xB78EC4", VA = "0xB78EC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xB78F6C", Offset = "0xB78F6C", VA = "0xB78F6C")]
	private void UnSlapDone()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xB78F74", Offset = "0xB78F74", VA = "0xB78F74")]
	public void CallHurtReaction()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xB79010", Offset = "0xB79010", VA = "0xB79010")]
	public void SlappedHard()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xB79180", Offset = "0xB79180", VA = "0xB79180")]
	[IteratorStateMachine(typeof(<UnSlap>d__47))]
	private IEnumerator UnSlap(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xB7922C", Offset = "0xB7922C", VA = "0xB7922C")]
	public void TellHumanHitHuman(Collision _collision, bool _grabbed)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xB79258", Offset = "0xB79258", VA = "0xB79258")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xB793A4", Offset = "0xB793A4", VA = "0xB793A4")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xB794F0", Offset = "0xB794F0", VA = "0xB794F0")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xB79600", Offset = "0xB79600", VA = "0xB79600")]
	[ContextMenu("LogCollisions")]
	private void LogCollisions()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xB78998", Offset = "0xB78998", VA = "0xB78998")]
	private void InitLifeRaft()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xB78A8C", Offset = "0xB78A8C", VA = "0xB78A8C")]
	private void RemoveLifeRaft()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xB79B40", Offset = "0xB79B40", VA = "0xB79B40")]
	public void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xB79AF0", Offset = "0xB79AF0", VA = "0xB79AF0")]
	public int GetCollisions()
	{
		return default(int);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xB79C90", Offset = "0xB79C90", VA = "0xB79C90")]
	public void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xB7A094", Offset = "0xB7A094", VA = "0xB7A094")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xB7A0D0", Offset = "0xB7A0D0", VA = "0xB7A0D0")]
	private void CheckExit(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xB7A2E0", Offset = "0xB7A2E0", VA = "0xB7A2E0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xB7A30C", Offset = "0xB7A30C", VA = "0xB7A30C")]
	public HumansInteraction()
	{
	}
}
[Token(Token = "0x20001EF")]
public class HumanSpawnerChanger : MonoBehaviour
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanAestheticScriptableObject[] humanTypes;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xB7A888", Offset = "0xB7A888", VA = "0xB7A888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xB7A990", Offset = "0xB7A990", VA = "0xB7A990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xB7AA88", Offset = "0xB7AA88", VA = "0xB7AA88")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xB7ABB0", Offset = "0xB7ABB0", VA = "0xB7ABB0")]
	public HumanSpawnerChanger()
	{
	}
}
[Token(Token = "0x20001F0")]
public class LanguageSchool : MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	[CompilerGenerated]
	private sealed class <RefreshInputField>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageSchool <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xB7B408", Offset = "0xB7B408", VA = "0xB7B408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xB7B450", Offset = "0xB7B450", VA = "0xB7B450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB7ADE0", Offset = "0xB7ADE0", VA = "0xB7ADE0")]
		[DebuggerHidden]
		public <RefreshInputField>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB7B31C", Offset = "0xB7B31C", VA = "0xB7B31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xB7B320", Offset = "0xB7B320", VA = "0xB7B320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB7B410", Offset = "0xB7B410", VA = "0xB7B410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text languageText;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField input;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BubbleToCharacter.ConvoType convoType;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xB7ABB8", Offset = "0xB7ABB8", VA = "0xB7ABB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xB7AC38", Offset = "0xB7AC38", VA = "0xB7AC38")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xB7AD6C", Offset = "0xB7AD6C", VA = "0xB7AD6C")]
	[IteratorStateMachine(typeof(<RefreshInputField>d__6))]
	private IEnumerator RefreshInputField()
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xB7AE08", Offset = "0xB7AE08", VA = "0xB7AE08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xB7B084", Offset = "0xB7B084", VA = "0xB7B084")]
	public void ButtonFill()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xB7B0B8", Offset = "0xB7B0B8", VA = "0xB7B0B8")]
	public void ButtonSay()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xB7B0E8", Offset = "0xB7B0E8", VA = "0xB7B0E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xB7B294", Offset = "0xB7B294", VA = "0xB7B294")]
	public void DoQuit()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xB7B29C", Offset = "0xB7B29C", VA = "0xB7B29C")]
	public void DoEnglish()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xB7B2A8", Offset = "0xB7B2A8", VA = "0xB7B2A8")]
	public void DoGerman()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xB7B2B4", Offset = "0xB7B2B4", VA = "0xB7B2B4")]
	public void DoFrench()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xB7B2C0", Offset = "0xB7B2C0", VA = "0xB7B2C0")]
	public void DoChinese()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xB7B2CC", Offset = "0xB7B2CC", VA = "0xB7B2CC")]
	public void DoJapanese()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xB7B2D8", Offset = "0xB7B2D8", VA = "0xB7B2D8")]
	public void DoKorean()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xB7B2E4", Offset = "0xB7B2E4", VA = "0xB7B2E4")]
	public void DoRussian()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xB7B2F0", Offset = "0xB7B2F0", VA = "0xB7B2F0")]
	public void DoSpanish()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xB7B2FC", Offset = "0xB7B2FC", VA = "0xB7B2FC")]
	public void DoTraditionalChinese()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xB7B308", Offset = "0xB7B308", VA = "0xB7B308")]
	public void DoBrazilianPortuguese()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xB7B314", Offset = "0xB7B314", VA = "0xB7B314")]
	public LanguageSchool()
	{
	}
}
[Token(Token = "0x20001F2")]
public static class LayerExtensions
{
	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xB7B458", Offset = "0xB7B458", VA = "0xB7B458")]
	public static bool LayerContains(this LayerMask mask, int layer)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001F3")]
public class LevelDirectorRockets_base : LevelDirector_base
{
	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool isUnsolvable;

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xB7B4A4", Offset = "0xB7B4A4", VA = "0xB7B4A4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xB7B910", Offset = "0xB7B910", VA = "0xB7B910", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xB7BD78", Offset = "0xB7BD78", VA = "0xB7BD78", Slot = "29")]
	public virtual void OutOfRocketsCallback()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xB7BD9C", Offset = "0xB7BD9C", VA = "0xB7BD9C", Slot = "30")]
	public virtual void OutOfRockets()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xB7BEAC", Offset = "0xB7BEAC", VA = "0xB7BEAC", Slot = "31")]
	public virtual void UnSolvable()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xB7BED0", Offset = "0xB7BED0", VA = "0xB7BED0")]
	public LevelDirectorRockets_base()
	{
	}
}
[Token(Token = "0x20001F4")]
public class LevelDirectorRockets_help1 : LevelDirectorRockets_base
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject rocketSlingshot;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool blocked;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private LevelDirector_Resetti resetti;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool helpReceived;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xB7BFE8", Offset = "0xB7BFE8", VA = "0xB7BFE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xB7C168", Offset = "0xB7C168", VA = "0xB7C168", Slot = "12")]
	public override void CustomResettiAction(LevelDirector_Resetti _resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xB7C260", Offset = "0xB7C260", VA = "0xB7C260", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xB7C44C", Offset = "0xB7C44C", VA = "0xB7C44C")]
	public LevelDirectorRockets_help1()
	{
	}
}
[Token(Token = "0x20001F5")]
public class LevelDirector_base : MonoBehaviour
{
	[Token(Token = "0x20001F6")]
	public delegate void HostEventDelegate(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara);

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Level myLevel;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumansInteraction levelHost;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public HumanController humanController;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject characterLook;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool initialised;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Header("INFO ONLY NO EDITING")]
	public bool sceneHasTargetManager;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[Header("SETTINGS CHANGED IN CONSTRUCTION TARGET MANAGER")]
	public bool usePhotoCameraValidation;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool autoDropCameraOnTargetsDone;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noCompleteWaitTimer;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[Header("default convos disabled")]
	public bool noAutoMessages;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[Space]
	[Space]
	public bool delayIntroChats;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float introChatsDelayTime;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool startTap;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool suppressIcons;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[Space]
	public bool useIntro;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string introText;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool useBriefing;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string briefingText;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool popUpBriefing;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool pauseAfterIntro;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[Space]
	[Space]
	public bool useTargetDone;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string targetsDoneText;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool popUpTargetDone;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[Space]
	[Space]
	public bool useLevelDoneReaction;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string levelDoneReactionText;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useLevelDone;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string levelDoneText;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool popUpLevelDone;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool pauseAfterLevelDoneReaction;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[Space]
	[Space]
	[Header("changes Level settings for Gamemanager. no auto call without targetManagers ")]
	public bool sceneControllingHost;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool spawnNextButtonAfterLevelDone;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool autoLoadNextLevelAfterLevelDone;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[Header("scene change options (zep/auto) after final convo not before")]
	public bool levelLeaveAfterLevelDoneConvo;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	[Space]
	public bool autoOOB;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	private bool defaultOOBRespawnAfterLevelDone;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color infoColor;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string boxTitle;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string boxResettoTitle;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string boxlevelTitlesTitle;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int timesHostOOBsed;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public int gluedTo;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int tapsOutsideConvo;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public bool targetsDoneHintShown;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public int currentState;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int targetsPlaced;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public string lastEventType;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Space]
	public bool noInitialPlayerFocus;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string characterIdentifier;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("overrides useStartPosition")]
	public bool moveWithPlayer;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool initialStartTapHappened;

	[Token(Token = "0x4000C11")]
	private const string genericKeyword = "DEF_";

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool hideResettoInfo;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool resettiAsksQuestion;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool resettiMakesDrawing;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string resettiChitChat;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string resetti_hint_question;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string resetti_hint_question_yes;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string resetti_hint_question_no;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string resetti_hint_ready;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string resetti_hint_waiting;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool hideTitleInfo;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool noTitleBeforeLevel;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Title from Story localisationID -> intro-> parsed to m_intro_storyTitle")]
	public string currentTitleMain;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string currentTitleMainID;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string currentTitleTip;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string currentTitleTipID;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Header("Location from Story default titlePlaceID -> city-> parsed to titlePlaceID_city")]
	public string overrideTitleLocationID;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string currentTitleLocation;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string currentTitleLocationID;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public ParachuteRespawnTracker parachuteRespawnTracker;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ConstructionTargetManager ctm;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool levelLeaveAfterLevelDoneConvoHappened;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int updateData;

	[Token(Token = "0x14000036")]
	public static event HostEventDelegate OnHostEvent
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xB7C450", Offset = "0xB7C450", VA = "0xB7C450")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xB7C508", Offset = "0xB7C508", VA = "0xB7C508")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xB7C5C0", Offset = "0xB7C5C0", VA = "0xB7C5C0")]
	private bool FindCTM()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xB7C694", Offset = "0xB7C694", VA = "0xB7C694")]
	private void TogglePhotoCameraValidationRequired()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xB7C6C4", Offset = "0xB7C6C4", VA = "0xB7C6C4")]
	private void ToggleAutoDropValidationCamera()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xB7C6F4", Offset = "0xB7C6F4", VA = "0xB7C6F4")]
	private void ToggleNoCompleteWaitTimer()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xB7C724", Offset = "0xB7C724", VA = "0xB7C724")]
	private void ToggleResettiAsksQuestion()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xB7C7A4", Offset = "0xB7C7A4", VA = "0xB7C7A4")]
	private void ToggleResettiMakesDrawing()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xB7C824", Offset = "0xB7C824", VA = "0xB7C824")]
	private void TogglenNoTitleBeforeLevel()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xB7C8D4", Offset = "0xB7C8D4", VA = "0xB7C8D4")]
	private void ToggleSpawnNextButtonAfterLevelDone()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xB7C954", Offset = "0xB7C954", VA = "0xB7C954")]
	private void ToggleAutoLoadNextLevelAfterLevelDone()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xB7C8BC", Offset = "0xB7C8BC", VA = "0xB7C8BC")]
	[ContextMenu("InitAssembleConversation")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xB7C9D4", Offset = "0xB7C9D4", VA = "0xB7C9D4")]
	public void InitAssembleConversation()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xB7CD48", Offset = "0xB7CD48", VA = "0xB7CD48")]
	private void RigMoved(RigPosition _rigPosition)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xB7CD80", Offset = "0xB7CD80", VA = "0xB7CD80")]
	public void SimTap()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xB7CD9C", Offset = "0xB7CD9C", VA = "0xB7CD9C", Slot = "4")]
	public virtual void NoPlayerFocus()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xB7CDD0", Offset = "0xB7CDD0", VA = "0xB7CDD0", Slot = "5")]
	public virtual void PlayerFocus()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xB7CE80", Offset = "0xB7CE80", VA = "0xB7CE80", Slot = "6")]
	public virtual void CallHostEvent(string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xB7CF04", Offset = "0xB7CF04", VA = "0xB7CF04", Slot = "7")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xB7D2EC", Offset = "0xB7D2EC", VA = "0xB7D2EC", Slot = "8")]
	public virtual void InitStartTap()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xB7D364", Offset = "0xB7D364", VA = "0xB7D364", Slot = "9")]
	public virtual void InitialTalk()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xB7D408", Offset = "0xB7D408", VA = "0xB7D408")]
	private void DelayStart()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xB7B4A8", Offset = "0xB7B4A8", VA = "0xB7B4A8", Slot = "10")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xB7B914", Offset = "0xB7B914", VA = "0xB7B914", Slot = "11")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xB7D668", Offset = "0xB7D668", VA = "0xB7D668", Slot = "12")]
	public virtual void CustomResettiAction(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xB7D66C", Offset = "0xB7D66C", VA = "0xB7D66C", Slot = "13")]
	public virtual void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xB7D670", Offset = "0xB7D670", VA = "0xB7D670", Slot = "14")]
	public virtual void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xB7C31C", Offset = "0xB7C31C", VA = "0xB7C31C", Slot = "15")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xB7D674", Offset = "0xB7D674", VA = "0xB7D674", Slot = "16")]
	public virtual void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xB7D728", Offset = "0xB7D728", VA = "0xB7D728", Slot = "17")]
	public virtual void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xB7D798", Offset = "0xB7D798", VA = "0xB7D798", Slot = "18")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xB7D79C", Offset = "0xB7D79C", VA = "0xB7D79C", Slot = "19")]
	public virtual void OnWaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xB7D7A0", Offset = "0xB7D7A0", VA = "0xB7D7A0", Slot = "20")]
	public virtual void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xB7D940", Offset = "0xB7D940", VA = "0xB7D940", Slot = "21")]
	public virtual void OnRocketTargetComplete(int done, int needed)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xB7D958", Offset = "0xB7D958", VA = "0xB7D958", Slot = "22")]
	public virtual void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xB7DAB0", Offset = "0xB7DAB0", VA = "0xB7DAB0", Slot = "23")]
	public virtual void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xB7DAB4", Offset = "0xB7DAB4", VA = "0xB7DAB4", Slot = "24")]
	public virtual void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xB7DB04", Offset = "0xB7DB04", VA = "0xB7DB04", Slot = "25")]
	public virtual void SaveAndLoadNextLevel()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xB7DB9C", Offset = "0xB7DB9C", VA = "0xB7DB9C", Slot = "26")]
	public virtual void SaveAndUseLevelEndOption()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xB7DBDC", Offset = "0xB7DBDC", VA = "0xB7DBDC", Slot = "27")]
	public virtual void SaveAndShowNextBalloon()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xB7DC1C", Offset = "0xB7DC1C", VA = "0xB7DC1C", Slot = "28")]
	public virtual void LevelEndOptions()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xB7CB94", Offset = "0xB7CB94", VA = "0xB7CB94")]
	private void CheckTitles()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xB7BED4", Offset = "0xB7BED4", VA = "0xB7BED4")]
	public LevelDirector_base()
	{
	}
}
[Token(Token = "0x20001F7")]
public class LevelDirector_C0000_template : LevelDirector_base
{
	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xB7DC90", Offset = "0xB7DC90", VA = "0xB7DC90", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xB7DC94", Offset = "0xB7DC94", VA = "0xB7DC94")]
	public LevelDirector_C0000_template()
	{
	}
}
[Token(Token = "0x20001F8")]
public class LevelDirector_C0015_tripod : LevelDirector_base
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool briefingDone;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool resettoAsked;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int hintsGiven;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int hintWait;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xB7DC98", Offset = "0xB7DC98", VA = "0xB7DC98", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xB7DC9C", Offset = "0xB7DC9C", VA = "0xB7DC9C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xB7DD24", Offset = "0xB7DD24", VA = "0xB7DD24", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xB7DDAC", Offset = "0xB7DDAC", VA = "0xB7DDAC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xB7DEAC", Offset = "0xB7DEAC", VA = "0xB7DEAC")]
	private void ResettoHint()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xB7DFC4", Offset = "0xB7DFC4", VA = "0xB7DFC4")]
	private void ResettoAskedForHelp(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xB7E03C", Offset = "0xB7E03C", VA = "0xB7E03C")]
	public LevelDirector_C0015_tripod()
	{
	}
}
[Token(Token = "0x20001F9")]
public class LevelDirector_C0049_ResettoHelp : LevelDirector_base
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool isHelpLevel;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelResetti;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_Resetti defaultResetti;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool resettiPlaced;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Level helpLevelToLoad;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Level originalLevel;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool helpQuestionAnswered;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Achievement achievement;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Achievement achievementTimeTrial;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xB7E048", Offset = "0xB7E048", VA = "0xB7E048", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xB7E0F0", Offset = "0xB7E0F0", VA = "0xB7E0F0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xB7E178", Offset = "0xB7E178", VA = "0xB7E178", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xB7E200", Offset = "0xB7E200", VA = "0xB7E200")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xB7E260", Offset = "0xB7E260", VA = "0xB7E260", Slot = "12")]
	public override void CustomResettiAction(LevelDirector_Resetti _resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xB7E2D4", Offset = "0xB7E2D4", VA = "0xB7E2D4")]
	private void LoadHelpLevel()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xB7E2FC", Offset = "0xB7E2FC", VA = "0xB7E2FC", Slot = "20")]
	[ContextMenu("OnGameComplete")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xB7E3DC", Offset = "0xB7E3DC", VA = "0xB7E3DC")]
	public LevelDirector_C0049_ResettoHelp()
	{
	}
}
[Token(Token = "0x20001FA")]
public class LevelDirector_C0050_satellite2 : LevelDirector_base
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject chopper;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform targetWaypoint;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool assistantArrived;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool levelComplete;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xB7E3E0", Offset = "0xB7E3E0", VA = "0xB7E3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xB7E474", Offset = "0xB7E474", VA = "0xB7E474")]
	public void WaypointReached(Transform _waypoint)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xB7E528", Offset = "0xB7E528", VA = "0xB7E528")]
	private void AssistantSpeaks()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xB7E6FC", Offset = "0xB7E6FC", VA = "0xB7E6FC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xB7E784", Offset = "0xB7E784", VA = "0xB7E784", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xB7E860", Offset = "0xB7E860", VA = "0xB7E860", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xB7E868", Offset = "0xB7E868", VA = "0xB7E868", Slot = "20")]
	[ContextMenu("GameComplete")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xB7E8A0", Offset = "0xB7E8A0", VA = "0xB7E8A0")]
	public LevelDirector_C0050_satellite2()
	{
	}
}
[Token(Token = "0x20001FB")]
public class LevelDirector_C0062_molluskParty : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <PartySequence>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0062_molluskParty <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xB7F498", Offset = "0xB7F498", VA = "0xB7F498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xB7F4E0", Offset = "0xB7F4E0", VA = "0xB7F4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xB7E9A8", Offset = "0xB7E9A8", VA = "0xB7E9A8")]
		[DebuggerHidden]
		public <PartySequence>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xB7ED78", Offset = "0xB7ED78", VA = "0xB7ED78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xB7ED7C", Offset = "0xB7ED7C", VA = "0xB7ED7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xB7F4A0", Offset = "0xB7F4A0", VA = "0xB7F4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base employee1;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base employee2;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base employee3;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base employee4;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<string> chatterDone;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private List<string> chatterRequired;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool talkedToAllEmployees;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float beatTimer;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector3 danceForce;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public HumanController[] dancers;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xB7E8A4", Offset = "0xB7E8A4", VA = "0xB7E8A4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xB7E934", Offset = "0xB7E934", VA = "0xB7E934")]
	[IteratorStateMachine(typeof(<PartySequence>d__12))]
	private IEnumerator PartySequence()
	{
		return null;
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xB7E9D0", Offset = "0xB7E9D0", VA = "0xB7E9D0")]
	private void Dance()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xB7EACC", Offset = "0xB7EACC", VA = "0xB7EACC")]
	public void WinTheLevelFadeout()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xB7EB54", Offset = "0xB7EB54", VA = "0xB7EB54", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xB7ECB4", Offset = "0xB7ECB4", VA = "0xB7ECB4")]
	public LevelDirector_C0062_molluskParty()
	{
	}
}
[Token(Token = "0x20001FD")]
public class LevelDirector_C0102 : LevelDirector_base
{
	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction[] workers;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AlertAntenna alert;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Cannon cannon;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool buttonPressed;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool isDisqualified;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievementCatchAll;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xB7F4E8", Offset = "0xB7F4E8", VA = "0xB7F4E8", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xB7F5C4", Offset = "0xB7F5C4", VA = "0xB7F5C4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xB7F6A0", Offset = "0xB7F6A0", VA = "0xB7F6A0")]
	private void Disqualified(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xB7F6AC", Offset = "0xB7F6AC", VA = "0xB7F6AC")]
	public void CannonDepleted()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xB7F764", Offset = "0xB7F764", VA = "0xB7F764", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xB7F790", Offset = "0xB7F790", VA = "0xB7F790")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xB7F7DC", Offset = "0xB7F7DC", VA = "0xB7F7DC", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xB7F884", Offset = "0xB7F884", VA = "0xB7F884", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xB7F9C0", Offset = "0xB7F9C0", VA = "0xB7F9C0")]
	public LevelDirector_C0102()
	{
	}
}
[Token(Token = "0x20001FE")]
public class LevelDirector_C0111 : LevelDirector_base
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject specialResetti;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public BirthdayCake cake;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool resettiPlaced;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Achievement achievement;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Drone chopper;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public HumansInteraction mayorAssistant;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int sceneState;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool moveToHouseStarted;

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xB7F9C4", Offset = "0xB7F9C4", VA = "0xB7F9C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xB7FA44", Offset = "0xB7FA44", VA = "0xB7FA44", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xB7FACC", Offset = "0xB7FACC", VA = "0xB7FACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xB7FB2C", Offset = "0xB7FB2C", VA = "0xB7FB2C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xB7FBC0", Offset = "0xB7FBC0", VA = "0xB7FBC0")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xB7FC94", Offset = "0xB7FC94", VA = "0xB7FC94")]
	[ContextMenu("SpawnMayorAssistant")]
	public void SpawnMayorAssistant()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xB7FCC0", Offset = "0xB7FCC0", VA = "0xB7FCC0")]
	private void SpawnAssistant()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xB7FD38", Offset = "0xB7FD38", VA = "0xB7FD38")]
	private void AssistantTalks()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xB7FE64", Offset = "0xB7FE64", VA = "0xB7FE64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xB80014", Offset = "0xB80014", VA = "0xB80014", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xB80018", Offset = "0xB80018", VA = "0xB80018")]
	private void IntroChat()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xB80138", Offset = "0xB80138", VA = "0xB80138", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xB80A3C", Offset = "0xB80A3C", VA = "0xB80A3C")]
	private void BackFade()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xB80A7C", Offset = "0xB80A7C", VA = "0xB80A7C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xB80BC8", Offset = "0xB80BC8", VA = "0xB80BC8")]
	private void DestinationReachedHouse(string _id)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xB80934", Offset = "0xB80934", VA = "0xB80934")]
	private void MoveToHouse()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xB80D98", Offset = "0xB80D98", VA = "0xB80D98", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xB81080", Offset = "0xB81080", VA = "0xB81080")]
	public LevelDirector_C0111()
	{
	}
}
[Token(Token = "0x20001FF")]
public class LevelDirector_C0127_Host : LevelDirector_base
{
	[Token(Token = "0x2000200")]
	private enum State
	{
		[Token(Token = "0x4000C61")]
		None,
		[Token(Token = "0x4000C62")]
		WaitForConvo,
		[Token(Token = "0x4000C63")]
		WaitForConvoDone,
		[Token(Token = "0x4000C64")]
		WaitForRemote,
		[Token(Token = "0x4000C65")]
		WaitForRemoteDone,
		[Token(Token = "0x4000C66")]
		WaitForWave,
		[Token(Token = "0x4000C67")]
		WaitForWaveDone
	}

	[Token(Token = "0x2000201")]
	[CompilerGenerated]
	private sealed class <MayorConvo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0127_Host <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xB81FD4", Offset = "0xB81FD4", VA = "0xB81FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xB8201C", Offset = "0xB8201C", VA = "0xB8201C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xB815DC", Offset = "0xB815DC", VA = "0xB815DC")]
		[DebuggerHidden]
		public <MayorConvo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xB81868", Offset = "0xB81868", VA = "0xB81868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xB8186C", Offset = "0xB8186C", VA = "0xB8186C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xB81FDC", Offset = "0xB81FDC", VA = "0xB81FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject heloGroup;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject unveilThis;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Achievement achievement;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private State state;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private BubbleToCharacter convoDoneBubble;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string convoID;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float timer;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xB8108C", Offset = "0xB8108C", VA = "0xB8108C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xB810C4", Offset = "0xB810C4", VA = "0xB810C4", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xB8116C", Offset = "0xB8116C", VA = "0xB8116C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xB811F4", Offset = "0xB811F4", VA = "0xB811F4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xB8127C", Offset = "0xB8127C", VA = "0xB8127C")]
	private bool WaitForWaveDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xB81390", Offset = "0xB81390", VA = "0xB81390")]
	private bool WaitForConvoMayorDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xB81430", Offset = "0xB81430", VA = "0xB81430")]
	private bool WaitForConvoSistDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xB81468", Offset = "0xB81468", VA = "0xB81468")]
	private bool WaitForConvoLuskDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xB813C0", Offset = "0xB813C0", VA = "0xB813C0")]
	private bool _WaitForConvoDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xB814A0", Offset = "0xB814A0", VA = "0xB814A0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xB81540", Offset = "0xB81540", VA = "0xB81540")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xB81560", Offset = "0xB81560", VA = "0xB81560")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xB810F8", Offset = "0xB810F8", VA = "0xB810F8")]
	[IteratorStateMachine(typeof(<MayorConvo>d__23))]
	private IEnumerator MayorConvo()
	{
		return null;
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xB81604", Offset = "0xB81604", VA = "0xB81604")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xB8166C", Offset = "0xB8166C", VA = "0xB8166C")]
	private void TalkSist(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xB81700", Offset = "0xB81700", VA = "0xB81700")]
	private void TalkLusk(string key)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xB81788", Offset = "0xB81788", VA = "0xB81788")]
	private void TalkMayor(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xB81814", Offset = "0xB81814", VA = "0xB81814")]
	public LevelDirector_C0127_Host()
	{
	}
}
[Token(Token = "0x2000202")]
public class LevelDirector_C0128_CrystalCrisis : LevelDirector_base
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool levelDone;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool roofIsOpen;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumanEmoSFX angryMayorEMOSFX;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool firstBabbleDone;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool over;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xB82024", Offset = "0xB82024", VA = "0xB82024", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xB820C0", Offset = "0xB820C0", VA = "0xB820C0")]
	private void PostBabbleTalk()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xB82138", Offset = "0xB82138", VA = "0xB82138", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xB821E4", Offset = "0xB821E4", VA = "0xB821E4")]
	public void OpenRoof()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xB8225C", Offset = "0xB8225C", VA = "0xB8225C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xB82308", Offset = "0xB82308", VA = "0xB82308")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xB8243C", Offset = "0xB8243C", VA = "0xB8243C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xB82520", Offset = "0xB82520", VA = "0xB82520")]
	public LevelDirector_C0128_CrystalCrisis()
	{
	}
}
[Token(Token = "0x2000203")]
public class LevelDirector_C0129_salty_lusk : LevelDirector_Cutscene
{
	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0129_salty_lusk <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xB83074", Offset = "0xB83074", VA = "0xB83074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xB830BC", Offset = "0xB830BC", VA = "0xB830BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xB82928", Offset = "0xB82928", VA = "0xB82928")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xB82958", Offset = "0xB82958", VA = "0xB82958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xB8295C", Offset = "0xB8295C", VA = "0xB8295C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xB8307C", Offset = "0xB8307C", VA = "0xB8307C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public NoTrespassing droneTrigger;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Grabbable drone;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool laserArmed;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	private bool droneGrabbed;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xB82524", Offset = "0xB82524", VA = "0xB82524", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xB825C0", Offset = "0xB825C0", VA = "0xB825C0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xB82658", Offset = "0xB82658", VA = "0xB82658", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xB826F0", Offset = "0xB826F0", VA = "0xB826F0")]
	private void OnGrabbed(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xB82874", Offset = "0xB82874", VA = "0xB82874")]
	private void DropMe()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xB82804", Offset = "0xB82804", VA = "0xB82804")]
	private void HurtRB(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xB828A0", Offset = "0xB828A0", VA = "0xB828A0")]
	private void ZapRandomTip()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xB8254C", Offset = "0xB8254C", VA = "0xB8254C")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__11))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xB82950", Offset = "0xB82950", VA = "0xB82950")]
	public LevelDirector_C0129_salty_lusk()
	{
	}
}
[Token(Token = "0x2000205")]
public class LevelDirector_C0140_notExtinct : LevelDirector_Cutscene
{
	[Token(Token = "0x2000206")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0140_notExtinct <>4__this;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xB834F8", Offset = "0xB834F8", VA = "0xB834F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xB83540", Offset = "0xB83540", VA = "0xB83540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xB83164", Offset = "0xB83164", VA = "0xB83164")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xB83194", Offset = "0xB83194", VA = "0xB83194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xB83198", Offset = "0xB83198", VA = "0xB83198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xB83500", Offset = "0xB83500", VA = "0xB83500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xB830C4", Offset = "0xB830C4", VA = "0xB830C4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xB830C8", Offset = "0xB830C8", VA = "0xB830C8", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xB830F0", Offset = "0xB830F0", VA = "0xB830F0")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__2))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xB8318C", Offset = "0xB8318C", VA = "0xB8318C")]
	public LevelDirector_C0140_notExtinct()
	{
	}
}
[Token(Token = "0x2000207")]
public class LevelDirector_C0200_AntiGravExperiment : LevelDirector_base
{
	[Token(Token = "0x2000208")]
	public delegate void PostSpawnResettiDelegate(LevelDirector_Resetti resettiLevelDir);

	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <FinalSequence>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0200_AntiGravExperiment <>4__this;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <targetScaleWhite>5__2;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <blackHoleSFXPlayed>5__4;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xB85398", Offset = "0xB85398", VA = "0xB85398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xB853E0", Offset = "0xB853E0", VA = "0xB853E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB83FD0", Offset = "0xB83FD0", VA = "0xB83FD0")]
		[DebuggerHidden]
		public <FinalSequence>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xB84E14", Offset = "0xB84E14", VA = "0xB84E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB84E18", Offset = "0xB84E18", VA = "0xB84E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB853A0", Offset = "0xB853A0", VA = "0xB853A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget reactorTarget;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget reactorChargedTarget;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget connectMachineTarget;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public CrystalEnergyBase reactorEnergyBase;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject inPlaceIndicator;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public EightSegmentDisplay reactorCharge;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Glue slingConnector;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public int fullCharge;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Rigidbody reactorRB;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float pullInFactor;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ContainmentEffect containmentEffects;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float lastEnergy;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool hasImploded;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
	private bool finalSequence;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject connectExplosion;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[EventRef]
	public string connectToReactor;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public AlertAntenna alert;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Animation connectorLatch;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float originalDrag;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject connectedParticles;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Transform whiteField;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Transform blackField;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float outOfCenterCounter;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Vector3 dir;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int convoState;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private int currentEnergy;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool connectLatchOpen;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public AnimationCurve blackFieldScale;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x14000037")]
	public static event PostSpawnResettiDelegate OnPostSpawnResetti
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xB8385C", Offset = "0xB8385C", VA = "0xB8385C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xB83914", Offset = "0xB83914", VA = "0xB83914")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xB83548", Offset = "0xB83548", VA = "0xB83548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xB83644", Offset = "0xB83644", VA = "0xB83644", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xB83700", Offset = "0xB83700", VA = "0xB83700")]
	private void StartConversation()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xB839CC", Offset = "0xB839CC", VA = "0xB839CC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xB83ABC", Offset = "0xB83ABC", VA = "0xB83ABC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xB83BAC", Offset = "0xB83BAC", VA = "0xB83BAC")]
	private void CallSpawnResetti(LevelDirector_Resetti resettiLevelDir)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xB837E4", Offset = "0xB837E4", VA = "0xB837E4")]
	private void BriefingReactorPosition()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xB83BBC", Offset = "0xB83BBC", VA = "0xB83BBC")]
	private void BriefingConnectCrystals()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xB83C34", Offset = "0xB83C34", VA = "0xB83C34")]
	private void ConnectCrystalsReaction()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xB83D98", Offset = "0xB83D98", VA = "0xB83D98")]
	private void LatchRemovedConnectBriefing()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xB83E50", Offset = "0xB83E50", VA = "0xB83E50")]
	[ContextMenu("StartAntiGravCreation")]
	private void StartAntiGravCreation()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xB83F5C", Offset = "0xB83F5C", VA = "0xB83F5C")]
	[IteratorStateMachine(typeof(<FinalSequence>d__45))]
	private IEnumerator FinalSequence()
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xB83FF8", Offset = "0xB83FF8", VA = "0xB83FF8")]
	[ContextMenu("FinalSequence")]
	private void DebugFinalSequence()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xB84044", Offset = "0xB84044", VA = "0xB84044")]
	[ContextMenu("StartConnectMachine")]
	private void StartConnectMachine()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xB840F4", Offset = "0xB840F4", VA = "0xB840F4")]
	private void LatchRemove()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xB84230", Offset = "0xB84230", VA = "0xB84230")]
	private void DoPullin()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xB842F0", Offset = "0xB842F0", VA = "0xB842F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xB843DC", Offset = "0xB843DC", VA = "0xB843DC", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xB8451C", Offset = "0xB8451C", VA = "0xB8451C")]
	[ContextMenu("FullCharge")]
	private void FullPower()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xB84524", Offset = "0xB84524", VA = "0xB84524")]
	private void CrystalEnergyChange(int _energy)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xB84B04", Offset = "0xB84B04", VA = "0xB84B04")]
	[ContextMenu("Start Pull In")]
	private void AllCrystalsConnected()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xB847FC", Offset = "0xB847FC", VA = "0xB847FC")]
	private void DisableBurnoutDisconnect(bool which, bool noUnglueAllowed = false)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xB848A4", Offset = "0xB848A4", VA = "0xB848A4")]
	private void LockSlingsAttachedToCrystals()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xB84398", Offset = "0xB84398", VA = "0xB84398")]
	private bool LatchReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xB84BC4", Offset = "0xB84BC4", VA = "0xB84BC4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xB84CB0", Offset = "0xB84CB0", VA = "0xB84CB0")]
	public LevelDirector_C0200_AntiGravExperiment()
	{
	}
}
[Token(Token = "0x200020A")]
public class LevelDirector_C0201_AntiGravReveal : LevelDirector_base
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform attractTo;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Rigidbody reactor;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Rigidbody reactorLid;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Glue antiGravMagnet;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float pullInFactor;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ConstructionTarget grabReactor;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ConstructionTarget connectionTargetAntiGrav;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionTarget noConnectionTargetAntiGrav;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public ConstructionTarget connectionTargetHost;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 dir;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool failed;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	private bool allTargetsAttached;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Achievement achievement;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool levelDone;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	private bool molluskAttached;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	private bool stickMolluskActive;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
	private bool magnetDisconnected;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xB853E8", Offset = "0xB853E8", VA = "0xB853E8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xB85470", Offset = "0xB85470", VA = "0xB85470")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xB85524", Offset = "0xB85524", VA = "0xB85524")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xB85528", Offset = "0xB85528", VA = "0xB85528")]
	private void DoPullin()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xB85670", Offset = "0xB85670", VA = "0xB85670", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xB8574C", Offset = "0xB8574C", VA = "0xB8574C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xB85828", Offset = "0xB85828", VA = "0xB85828")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xB858AC", Offset = "0xB858AC", VA = "0xB858AC")]
	private void FailLevel()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xB85938", Offset = "0xB85938", VA = "0xB85938")]
	private void ObjectGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xB85B18", Offset = "0xB85B18", VA = "0xB85B18")]
	private void StickMollusk()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xB85BA4", Offset = "0xB85BA4", VA = "0xB85BA4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xB85E9C", Offset = "0xB85E9C", VA = "0xB85E9C")]
	private void TakePhoto()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xB85F4C", Offset = "0xB85F4C", VA = "0xB85F4C", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xB860C4", Offset = "0xB860C4", VA = "0xB860C4", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xB86188", Offset = "0xB86188", VA = "0xB86188")]
	public LevelDirector_C0201_AntiGravReveal()
	{
	}
}
[Token(Token = "0x200020B")]
public class LevelDirector_C0203_fishingShips : LevelDirector_base
{
	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<GameObject> ships;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public CategoryDefinition category;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool failed;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xB86194", Offset = "0xB86194", VA = "0xB86194", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xB861AC", Offset = "0xB861AC", VA = "0xB861AC")]
	private void FindShips()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xB8641C", Offset = "0xB8641C", VA = "0xB8641C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xB864F8", Offset = "0xB864F8", VA = "0xB864F8", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xB865D4", Offset = "0xB865D4", VA = "0xB865D4")]
	private void BeforeDestroy(GameObject _go)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xB8670C", Offset = "0xB8670C", VA = "0xB8670C")]
	private void VehicleDamageStatusChange(VehicleDamage vehic, VehicleDamage.Status damageStatus)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xB865D8", Offset = "0xB865D8", VA = "0xB865D8")]
	private void CheckShipsList(GameObject _go)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xB86748", Offset = "0xB86748", VA = "0xB86748")]
	public LevelDirector_C0203_fishingShips()
	{
	}
}
[Token(Token = "0x200020C")]
public class LevelDirector_C0204_sisterReconcilation : LevelDirector_Cutscene
{
	[Token(Token = "0x200020D")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0204_sisterReconcilation <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xB87794", Offset = "0xB87794", VA = "0xB87794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xB877DC", Offset = "0xB877DC", VA = "0xB877DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xB867E8", Offset = "0xB867E8", VA = "0xB867E8")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xB86928", Offset = "0xB86928", VA = "0xB86928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xB8692C", Offset = "0xB8692C", VA = "0xB8692C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xB8779C", Offset = "0xB8779C", VA = "0xB8779C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool hugCheck;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool hugHappened;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xB8674C", Offset = "0xB8674C", VA = "0xB8674C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xB86774", Offset = "0xB86774", VA = "0xB86774")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__3))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xB86810", Offset = "0xB86810", VA = "0xB86810")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xB86920", Offset = "0xB86920", VA = "0xB86920")]
	public LevelDirector_C0204_sisterReconcilation()
	{
	}
}
[Token(Token = "0x200020E")]
public class LevelDirector_C0555_Host : LevelDirector_base
{
	[Token(Token = "0x200020F")]
	private enum State
	{
		[Token(Token = "0x4000CC7")]
		None,
		[Token(Token = "0x4000CC8")]
		WaitForConvo,
		[Token(Token = "0x4000CC9")]
		WaitForConvoDone,
		[Token(Token = "0x4000CCA")]
		WaitForRemote,
		[Token(Token = "0x4000CCB")]
		WaitForRemoteDone
	}

	[Token(Token = "0x2000210")]
	[CompilerGenerated]
	private sealed class <ProfConvo>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0555_Host <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xB88FCC", Offset = "0xB88FCC", VA = "0xB88FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xB89014", Offset = "0xB89014", VA = "0xB89014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xB87CDC", Offset = "0xB87CDC", VA = "0xB87CDC")]
		[DebuggerHidden]
		public <ProfConvo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xB881E8", Offset = "0xB881E8", VA = "0xB881E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xB881EC", Offset = "0xB881EC", VA = "0xB881EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xB88FD4", Offset = "0xB88FD4", VA = "0xB88FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform focus;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Light directionalLight;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SpriteRenderer slideTarget;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite[] slides;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int currentSlide;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string convoID;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Achievement achievement;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string convoIDProf;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string convoIDLusk;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private string convoIDSister;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private State state;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private BubbleToCharacter convoDoneBubble;

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xB877E4", Offset = "0xB877E4", VA = "0xB877E4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xB877E8", Offset = "0xB877E8", VA = "0xB877E8", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xB878FC", Offset = "0xB878FC", VA = "0xB878FC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xB87984", Offset = "0xB87984", VA = "0xB87984")]
	private bool WaitForConvoProfDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xB87A34", Offset = "0xB87A34", VA = "0xB87A34")]
	private bool WaitForConvoSistDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xB87A7C", Offset = "0xB87A7C", VA = "0xB87A7C")]
	private bool WaitForConvoLuskDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xB879C4", Offset = "0xB879C4", VA = "0xB879C4")]
	private bool _WaitForConvoDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xB87AC4", Offset = "0xB87AC4", VA = "0xB87AC4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xB87B64", Offset = "0xB87B64", VA = "0xB87B64")]
	private void LookAtScreen()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xB87BAC", Offset = "0xB87BAC", VA = "0xB87BAC")]
	private void PlayerFocusBoth()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xB87BE4", Offset = "0xB87BE4", VA = "0xB87BE4")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xB87C04", Offset = "0xB87C04", VA = "0xB87C04")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB87C80", Offset = "0xB87C80", VA = "0xB87C80")]
	private void NextSlide()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xB87888", Offset = "0xB87888", VA = "0xB87888")]
	[IteratorStateMachine(typeof(<ProfConvo>d__28))]
	private IEnumerator ProfConvo()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xB87D04", Offset = "0xB87D04", VA = "0xB87D04")]
	private void LightFLick()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xB87ED0", Offset = "0xB87ED0", VA = "0xB87ED0")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xB87F38", Offset = "0xB87F38", VA = "0xB87F38")]
	private void TalkSist(string key)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xB87FB8", Offset = "0xB87FB8", VA = "0xB87FB8")]
	private void TalkLusk(string key)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xB88038", Offset = "0xB88038", VA = "0xB88038")]
	private void TalkProf(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xB880BC", Offset = "0xB880BC", VA = "0xB880BC")]
	public LevelDirector_C0555_Host()
	{
	}
}
[Token(Token = "0x2000211")]
public class LevelDirector_C0556_Host : LevelDirector_base
{
	[Token(Token = "0x2000212")]
	private enum State
	{
		[Token(Token = "0x4000CDE")]
		None,
		[Token(Token = "0x4000CDF")]
		WaitForConvo,
		[Token(Token = "0x4000CE0")]
		WaitForConvoDone,
		[Token(Token = "0x4000CE1")]
		WaitForRemote,
		[Token(Token = "0x4000CE2")]
		WaitForRemoteDone,
		[Token(Token = "0x4000CE3")]
		WaitForTarget,
		[Token(Token = "0x4000CE4")]
		WaitForTargetDone
	}

	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <ProfConvo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0556_Host <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xB8ABA0", Offset = "0xB8ABA0", VA = "0xB8ABA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xB8ABE8", Offset = "0xB8ABE8", VA = "0xB8ABE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xB899A8", Offset = "0xB899A8", VA = "0xB899A8")]
		[DebuggerHidden]
		public <ProfConvo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xB899D0", Offset = "0xB899D0", VA = "0xB899D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xB899D4", Offset = "0xB899D4", VA = "0xB899D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xB8ABA8", Offset = "0xB8ABA8", VA = "0xB8ABA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base mullet;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public LevelDirector_base assi;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject assiObject;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Rigidbody dome;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Rigidbody mulletRigidBody;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SpriteRenderer slideTarget;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite[] slides;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject babbleField;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform focus;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Light directionalLight;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int currentSlide;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private string waitFormconvoID;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private State state;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xB8901C", Offset = "0xB8901C", VA = "0xB8901C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xB89040", Offset = "0xB89040", VA = "0xB89040", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xB89168", Offset = "0xB89168", VA = "0xB89168", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xB891F0", Offset = "0xB891F0", VA = "0xB891F0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xB89224", Offset = "0xB89224", VA = "0xB89224")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xB89244", Offset = "0xB89244", VA = "0xB89244", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xB89260", Offset = "0xB89260", VA = "0xB89260")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xB892DC", Offset = "0xB892DC", VA = "0xB892DC")]
	private bool WaitForTargetComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xB89358", Offset = "0xB89358", VA = "0xB89358")]
	private void NextSlide()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xB890F4", Offset = "0xB890F4", VA = "0xB890F4")]
	[IteratorStateMachine(typeof(<ProfConvo>d__24))]
	private IEnumerator ProfConvo()
	{
		return null;
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xB893AC", Offset = "0xB893AC", VA = "0xB893AC")]
	private void LightFLick()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xB89578", Offset = "0xB89578", VA = "0xB89578")]
	private void TalkMull(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xB895F4", Offset = "0xB895F4", VA = "0xB895F4")]
	private void TalkLusk(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xB89670", Offset = "0xB89670", VA = "0xB89670")]
	private void TalkProf(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xB896E4", Offset = "0xB896E4", VA = "0xB896E4")]
	private bool WaitForConvoProfDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xB897E4", Offset = "0xB897E4", VA = "0xB897E4")]
	private bool WaitForConvoMullDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xB89804", Offset = "0xB89804", VA = "0xB89804")]
	private bool WaitForConvoLuskDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xB89824", Offset = "0xB89824", VA = "0xB89824")]
	private bool WaitForConvoAssiDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xB89844", Offset = "0xB89844", VA = "0xB89844")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xB896F0", Offset = "0xB896F0", VA = "0xB896F0")]
	private bool WaitForConvoDone(string key, bool immediate, HumansInteraction host)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xB898AC", Offset = "0xB898AC", VA = "0xB898AC")]
	public LevelDirector_C0556_Host()
	{
	}
}
[Token(Token = "0x2000214")]
public class LevelDirector_C0557_BigReveal2_ChezLusk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x2000215")]
	[CompilerGenerated]
	private sealed class <MainConversation>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0557_BigReveal2_ChezLusk <>4__this;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xB8B048", Offset = "0xB8B048", VA = "0xB8B048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xB8B090", Offset = "0xB8B090", VA = "0xB8B090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xB8ACA8", Offset = "0xB8ACA8", VA = "0xB8ACA8")]
		[DebuggerHidden]
		public <MainConversation>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xB8ADAC", Offset = "0xB8ADAC", VA = "0xB8ADAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xB8ADB0", Offset = "0xB8ADB0", VA = "0xB8ADB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xB8B050", Offset = "0xB8B050", VA = "0xB8B050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000216")]
	[CompilerGenerated]
	private sealed class <DemoEndOfLevel>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xB8B2EC", Offset = "0xB8B2EC", VA = "0xB8B2EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xB8B334", Offset = "0xB8B334", VA = "0xB8B334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xB8AD30", Offset = "0xB8AD30", VA = "0xB8AD30")]
		[DebuggerHidden]
		public <DemoEndOfLevel>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xB8B098", Offset = "0xB8B098", VA = "0xB8B098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xB8B09C", Offset = "0xB8B09C", VA = "0xB8B09C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xB8B2F4", Offset = "0xB8B2F4", VA = "0xB8B2F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject sharks;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xB8ABF0", Offset = "0xB8ABF0", VA = "0xB8ABF0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xB8AC34", Offset = "0xB8AC34", VA = "0xB8AC34")]
	[IteratorStateMachine(typeof(<MainConversation>d__2))]
	private IEnumerator MainConversation()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xB8ACD0", Offset = "0xB8ACD0", VA = "0xB8ACD0")]
	[IteratorStateMachine(typeof(<DemoEndOfLevel>d__3))]
	private IEnumerator DemoEndOfLevel()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xB8AD58", Offset = "0xB8AD58", VA = "0xB8AD58")]
	[ContextMenu("StartDemoEndOfLevel")]
	private void StartDemoEndOfLevel()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xB8ADA4", Offset = "0xB8ADA4", VA = "0xB8ADA4")]
	public LevelDirector_C0557_BigReveal2_ChezLusk()
	{
	}
}
[Token(Token = "0x2000217")]
public class LevelDirector_C0999 : LevelDirector_base
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Story_UFODiscovery ufoRip;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int excavState;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public IntroUfoTouch ufo;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<string> introWords;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string _words;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Level customLevel;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject conveyorBrokenParticles;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject conveyorSFX;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject touchFX;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Color lightTargetColor;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject craneSFX;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject tipSmokeL;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject tipSmokeR;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SmokingTips tipsOnFire;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Achievement achievement;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Light[] sceneLights;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int containerHint;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool getOutCrystalCalled;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	private bool craneDown;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float craneSpeed;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool tentacleContainerTouch;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float intensity;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool wasTouched;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Tween tweenPos;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Tween tweenRot;

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xB8B33C", Offset = "0xB8B33C", VA = "0xB8B33C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xB8B464", Offset = "0xB8B464", VA = "0xB8B464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xB8BBEC", Offset = "0xB8BBEC", VA = "0xB8BBEC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xB8BD10", Offset = "0xB8BD10", VA = "0xB8BD10")]
	private void IntroBriefing()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xB8BE3C", Offset = "0xB8BE3C", VA = "0xB8BE3C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xB8C104", Offset = "0xB8C104", VA = "0xB8C104")]
	private void KeepPullingChatter()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xB8C1D4", Offset = "0xB8C1D4", VA = "0xB8C1D4")]
	private void UFODiscoveredChatter()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xB8C294", Offset = "0xB8C294", VA = "0xB8C294")]
	private void FoundChatter()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xB8C354", Offset = "0xB8C354", VA = "0xB8C354")]
	private void ContainerChatter()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xB8BB34", Offset = "0xB8BB34", VA = "0xB8BB34")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xB8C4CC", Offset = "0xB8C4CC", VA = "0xB8C4CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xB8C5F8", Offset = "0xB8C5F8", VA = "0xB8C5F8")]
	public void TentacleTouchContainer()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xB8C788", Offset = "0xB8C788", VA = "0xB8C788")]
	private void LosenContainer(int _times)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xB8C8FC", Offset = "0xB8C8FC", VA = "0xB8C8FC")]
	private void CaveIn()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xB8CB84", Offset = "0xB8CB84", VA = "0xB8CB84")]
	private void CaveInNext()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xB8CA94", Offset = "0xB8CA94", VA = "0xB8CA94")]
	private void ChangeLights()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xB8CC68", Offset = "0xB8CC68", VA = "0xB8CC68")]
	private void MakeAllSloppy()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xB8CCDC", Offset = "0xB8CCDC", VA = "0xB8CCDC")]
	public void Touched()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xB8CEF4", Offset = "0xB8CEF4", VA = "0xB8CEF4")]
	private void TouchedReaction()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xB8D084", Offset = "0xB8D084", VA = "0xB8D084")]
	private void TouchedWords()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xB8D188", Offset = "0xB8D188", VA = "0xB8D188")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xB8D1C0", Offset = "0xB8D1C0", VA = "0xB8D1C0")]
	private void PreLoad(bool editorStart)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xB8D234", Offset = "0xB8D234", VA = "0xB8D234")]
	public LevelDirector_C0999()
	{
	}
}
[Token(Token = "0x2000218")]
public class LevelDirector_C1 : LevelDirector_base
{
	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <GlueSpawn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C1 <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xB8E244", Offset = "0xB8E244", VA = "0xB8E244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xB8E28C", Offset = "0xB8E28C", VA = "0xB8E28C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xB8DA94", Offset = "0xB8DA94", VA = "0xB8DA94")]
		[DebuggerHidden]
		public <GlueSpawn>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xB8DFC4", Offset = "0xB8DFC4", VA = "0xB8DFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xB8DFC8", Offset = "0xB8DFC8", VA = "0xB8DFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xB8E24C", Offset = "0xB8E24C", VA = "0xB8E24C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C1 <>4__this;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xB8E388", Offset = "0xB8E388", VA = "0xB8E388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xB8E3D0", Offset = "0xB8E3D0", VA = "0xB8E3D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xB8DF94", Offset = "0xB8DF94", VA = "0xB8DF94")]
		[DebuggerHidden]
		public <DelayedReaction>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xB8E294", Offset = "0xB8E294", VA = "0xB8E294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xB8E298", Offset = "0xB8E298", VA = "0xB8E298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xB8E390", Offset = "0xB8E390", VA = "0xB8E390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform humanFirstSpawn;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject targets;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform magnetsSpawn;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject magnetPrefab;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject constructionCameraPrefab;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform cameraSpawn;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject airplane;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool dropped;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int lastTargetsPlace;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xB8D258", Offset = "0xB8D258", VA = "0xB8D258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xB8D290", Offset = "0xB8D290", VA = "0xB8D290", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xB8D310", Offset = "0xB8D310", VA = "0xB8D310")]
	private void ActivateHost()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xB8D4B4", Offset = "0xB8D4B4", VA = "0xB8D4B4")]
	private void DoBriefing()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xB8D558", Offset = "0xB8D558", VA = "0xB8D558", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xB8D6C8", Offset = "0xB8D6C8", VA = "0xB8D6C8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xB8D840", Offset = "0xB8D840", VA = "0xB8D840")]
	private void TargetBriefing()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xB8D958", Offset = "0xB8D958", VA = "0xB8D958", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xB8D8E4", Offset = "0xB8D8E4", VA = "0xB8D8E4")]
	[IteratorStateMachine(typeof(<GlueSpawn>d__16))]
	private IEnumerator GlueSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xB8DABC", Offset = "0xB8DABC", VA = "0xB8DABC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xB8DDEC", Offset = "0xB8DDEC", VA = "0xB8DDEC", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xB8DEF4", Offset = "0xB8DEF4", VA = "0xB8DEF4")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__20))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xB8DFBC", Offset = "0xB8DFBC", VA = "0xB8DFBC")]
	public LevelDirector_C1()
	{
	}
}
[Token(Token = "0x200021B")]
public class LevelDirector_C100 : LevelDirector_base
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject helo;

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xB8E3D8", Offset = "0xB8E3D8", VA = "0xB8E3D8")]
	[ContextMenu("TestPhotoLines")]
	private void TestPhotoLines()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xB8E454", Offset = "0xB8E454", VA = "0xB8E454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xB8E488", Offset = "0xB8E488", VA = "0xB8E488", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xB8E53C", Offset = "0xB8E53C", VA = "0xB8E53C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xB8E5B4", Offset = "0xB8E5B4", VA = "0xB8E5B4")]
	public LevelDirector_C100()
	{
	}
}
[Token(Token = "0x200021C")]
public class LevelDirector_C101_simpleThrowing_resetto : LevelDirector_base
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTargetManual resettoChatTarget;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject throwingTargets;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject resettoHintArrow;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool askedForHint;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xB8E5BC", Offset = "0xB8E5BC", VA = "0xB8E5BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xB8E5DC", Offset = "0xB8E5DC", VA = "0xB8E5DC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xB8E620", Offset = "0xB8E620", VA = "0xB8E620", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xB8E72C", Offset = "0xB8E72C", VA = "0xB8E72C")]
	private void SpawnResetti_OnPostSpawnResetti(LevelDirector_Resetti resettiLevelDir)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xB8E73C", Offset = "0xB8E73C", VA = "0xB8E73C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xB8E848", Offset = "0xB8E848", VA = "0xB8E848")]
	private void ConversationSayNext(string _convoID, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xB8E940", Offset = "0xB8E940", VA = "0xB8E940")]
	private void ResettoAsked()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xB8EA58", Offset = "0xB8EA58", VA = "0xB8EA58")]
	private void ResettoHop()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xB8EB84", Offset = "0xB8EB84", VA = "0xB8EB84", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xB8EC68", Offset = "0xB8EC68", VA = "0xB8EC68")]
	public LevelDirector_C101_simpleThrowing_resetto()
	{
	}
}
[Token(Token = "0x200021D")]
public class LevelDirector_C103 : LevelDirector_base
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool anomalyHappened;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool lockedDown;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject themeMusic;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xB8EC70", Offset = "0xB8EC70", VA = "0xB8EC70", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xB8ED10", Offset = "0xB8ED10", VA = "0xB8ED10", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xB8ED9C", Offset = "0xB8ED9C", VA = "0xB8ED9C")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xB8EDAC", Offset = "0xB8EDAC", VA = "0xB8EDAC", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xB8EF88", Offset = "0xB8EF88", VA = "0xB8EF88")]
	public void AnomalyHappened()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xB8EE9C", Offset = "0xB8EE9C", VA = "0xB8EE9C")]
	public void LockedDown()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xB8F134", Offset = "0xB8F134", VA = "0xB8F134")]
	public LevelDirector_C103()
	{
	}
}
[Token(Token = "0x200021E")]
public class LevelDirector_C104_Bridging : LevelDirector_base
{
	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject Trophy;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public EntityDefinition Def;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string[] introKeys;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int convoIDX;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool levelDone;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
	private bool grabbed;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xB8F13C", Offset = "0xB8F13C", VA = "0xB8F13C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xB8F190", Offset = "0xB8F190", VA = "0xB8F190")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB8F158", Offset = "0xB8F158", VA = "0xB8F158")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB8F258", Offset = "0xB8F258", VA = "0xB8F258", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB8F4A4", Offset = "0xB8F4A4", VA = "0xB8F4A4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB8F52C", Offset = "0xB8F52C", VA = "0xB8F52C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB8F658", Offset = "0xB8F658", VA = "0xB8F658", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB8F6E4", Offset = "0xB8F6E4", VA = "0xB8F6E4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB8F770", Offset = "0xB8F770", VA = "0xB8F770")]
	private void GrabTrophy(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB8F8D0", Offset = "0xB8F8D0", VA = "0xB8F8D0")]
	public LevelDirector_C104_Bridging()
	{
	}
}
[Token(Token = "0x200021F")]
public class LevelDirector_C105_Slingshot : LevelDirector_base
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float completeSafetyCounter;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB8FED8", Offset = "0xB8FED8", VA = "0xB8FED8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB8FF08", Offset = "0xB8FF08", VA = "0xB8FF08")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB8FFA8", Offset = "0xB8FFA8", VA = "0xB8FFA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB8FFD4", Offset = "0xB8FFD4", VA = "0xB8FFD4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xB90440", Offset = "0xB90440", VA = "0xB90440", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xB90644", Offset = "0xB90644", VA = "0xB90644", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xB90708", Offset = "0xB90708", VA = "0xB90708")]
	public LevelDirector_C105_Slingshot()
	{
	}
}
[Token(Token = "0x2000220")]
public class LevelDirector_C1111 : LevelDirector_base
{
	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C1111 <>4__this;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xB91114", Offset = "0xB91114", VA = "0xB91114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xB9115C", Offset = "0xB9115C", VA = "0xB9115C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xB90FA0", Offset = "0xB90FA0", VA = "0xB90FA0")]
		[DebuggerHidden]
		public <DelayedReaction>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xB91020", Offset = "0xB91020", VA = "0xB91020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xB91024", Offset = "0xB91024", VA = "0xB91024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xB9111C", Offset = "0xB9111C", VA = "0xB9111C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Level customLevel;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string symbolToShow;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool initFocus;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool loadingInit;

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xB90710", Offset = "0xB90710", VA = "0xB90710", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xB90730", Offset = "0xB90730", VA = "0xB90730")]
	private void CharacterInit()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xB90764", Offset = "0xB90764", VA = "0xB90764", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xB907E8", Offset = "0xB907E8", VA = "0xB907E8", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xB90978", Offset = "0xB90978", VA = "0xB90978", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xB90C78", Offset = "0xB90C78", VA = "0xB90C78", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xB90BBC", Offset = "0xB90BBC", VA = "0xB90BBC")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xB90E04", Offset = "0xB90E04", VA = "0xB90E04", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xB90F00", Offset = "0xB90F00", VA = "0xB90F00")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__12))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xB90FC8", Offset = "0xB90FC8", VA = "0xB90FC8")]
	public LevelDirector_C1111()
	{
	}
}
[Token(Token = "0x2000222")]
public class LevelDirector_C1112 : LevelDirector_base
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EntityDefinition concreteBlock;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool unsolvable;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xB91164", Offset = "0xB91164", VA = "0xB91164", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xB91228", Offset = "0xB91228", VA = "0xB91228")]
	private void Task()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xB91388", Offset = "0xB91388", VA = "0xB91388", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xB914B8", Offset = "0xB914B8", VA = "0xB914B8", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xB91654", Offset = "0xB91654", VA = "0xB91654", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xB91854", Offset = "0xB91854", VA = "0xB91854", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xB91A64", Offset = "0xB91A64", VA = "0xB91A64")]
	public LevelDirector_C1112()
	{
	}
}
[Token(Token = "0x2000223")]
public class LevelDirector_C1113 : LevelDirector_base
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool introStarted;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool missionDone;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
	private bool levelDone;

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xB91A6C", Offset = "0xB91A6C", VA = "0xB91A6C")]
	[ContextMenu("Start Grinder")]
	private void GrinderOn()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xB91AB8", Offset = "0xB91AB8", VA = "0xB91AB8")]
	[ContextMenu("Stop Grinder")]
	private void GrinderOff()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xB91B00", Offset = "0xB91B00", VA = "0xB91B00")]
	public void LeverAction(bool _which)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xB91B4C", Offset = "0xB91B4C", VA = "0xB91B4C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xB91B88", Offset = "0xB91B88", VA = "0xB91B88", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xB91B8C", Offset = "0xB91B8C", VA = "0xB91B8C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xB91DB8", Offset = "0xB91DB8", VA = "0xB91DB8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xB91F1C", Offset = "0xB91F1C", VA = "0xB91F1C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xB92054", Offset = "0xB92054", VA = "0xB92054")]
	public LevelDirector_C1113()
	{
	}
}
[Token(Token = "0x2000224")]
public class LevelDirector_C1113_Doc : LevelDirector_base
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base nurse;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool endCalled;

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xB9205C", Offset = "0xB9205C", VA = "0xB9205C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xB92184", Offset = "0xB92184", VA = "0xB92184", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xB92188", Offset = "0xB92188", VA = "0xB92188", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xB92264", Offset = "0xB92264", VA = "0xB92264", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xB92334", Offset = "0xB92334", VA = "0xB92334")]
	public LevelDirector_C1113_Doc()
	{
	}
}
[Token(Token = "0x2000225")]
public class LevelDirector_C1114_UFO_lab : LevelDirector_base
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget armForSFX;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumansInteraction assistantHost;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject UFO;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool assistantIsBabble;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject stuffOn;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject stuffOff;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[EventRef]
	public string armClank;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool grabbedMsg;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool allTargetsDone;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	private bool levelEndSpawned;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xB9233C", Offset = "0xB9233C", VA = "0xB9233C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xB92384", Offset = "0xB92384", VA = "0xB92384")]
	private void IntroQuestion()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xB9240C", Offset = "0xB9240C", VA = "0xB9240C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xB92510", Offset = "0xB92510", VA = "0xB92510", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xB92614", Offset = "0xB92614", VA = "0xB92614")]
	private void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xB92738", Offset = "0xB92738", VA = "0xB92738")]
	private void ProfessorConcerned()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xB927E4", Offset = "0xB927E4", VA = "0xB927E4")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xB92AF0", Offset = "0xB92AF0", VA = "0xB92AF0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xB92CB0", Offset = "0xB92CB0", VA = "0xB92CB0", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xB92EAC", Offset = "0xB92EAC", VA = "0xB92EAC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xB930F4", Offset = "0xB930F4", VA = "0xB930F4")]
	public LevelDirector_C1114_UFO_lab()
	{
	}
}
[Token(Token = "0x2000226")]
public class LevelDirector_C1115_SisterBoat : LevelDirector_base
{
	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject waypoints;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Vehicle boat;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget humanTarget;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<ConstructionTarget> barrels;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int barrelsRequired;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool humanOnBoat;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int barrelsOnBoat;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ParachuteRespawnTracker[] barrelTrackers;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xB930FC", Offset = "0xB930FC", VA = "0xB930FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xB9311C", Offset = "0xB9311C", VA = "0xB9311C")]
	private void CheckHumanOnBoat()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xB931A0", Offset = "0xB931A0", VA = "0xB931A0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xB932AC", Offset = "0xB932AC", VA = "0xB932AC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xB93528", Offset = "0xB93528", VA = "0xB93528")]
	private string AssembleQuestion(bool removePrefix = false)
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xB935F4", Offset = "0xB935F4", VA = "0xB935F4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xB9341C", Offset = "0xB9341C", VA = "0xB9341C")]
	private void AskLoadedQuestion()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xB9349C", Offset = "0xB9349C", VA = "0xB9349C")]
	private void DoBriefing(bool removePrefix = false)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xB93778", Offset = "0xB93778", VA = "0xB93778", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xB938E4", Offset = "0xB938E4", VA = "0xB938E4")]
	private void StartBoat()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xB93AA8", Offset = "0xB93AA8", VA = "0xB93AA8")]
	private void DriveOff()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xB93AB8", Offset = "0xB93AB8", VA = "0xB93AB8")]
	public LevelDirector_C1115_SisterBoat()
	{
	}
}
[Token(Token = "0x2000227")]
public class LevelDirector_C1116_SisterCrystals : LevelDirector_base
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Grabbable letter;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xB93B48", Offset = "0xB93B48", VA = "0xB93B48", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xB93BE4", Offset = "0xB93BE4", VA = "0xB93BE4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xB93C94", Offset = "0xB93C94", VA = "0xB93C94", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xB93D44", Offset = "0xB93D44", VA = "0xB93D44")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xB93FE4", Offset = "0xB93FE4", VA = "0xB93FE4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xB943B0", Offset = "0xB943B0", VA = "0xB943B0")]
	private void ExitScene()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xB943D0", Offset = "0xB943D0", VA = "0xB943D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xB94490", Offset = "0xB94490", VA = "0xB94490")]
	private void CloserPlease()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xB93F18", Offset = "0xB93F18", VA = "0xB93F18")]
	private void DestinationReachedHouse(string _id)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xB942CC", Offset = "0xB942CC", VA = "0xB942CC")]
	[ContextMenu("MoveToWP")]
	private void MoveToWP()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xB94508", Offset = "0xB94508", VA = "0xB94508", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xB94578", Offset = "0xB94578", VA = "0xB94578")]
	public LevelDirector_C1116_SisterCrystals()
	{
	}
}
[Token(Token = "0x2000228")]
public class LevelDirector_C1118_EnterLusk : LevelDirector_base
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Drone chopper;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool briefingHappend;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool empFeedbackGiven;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievement;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool slingfired;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool luskIsIn;

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xB94580", Offset = "0xB94580", VA = "0xB94580")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xB945BC", Offset = "0xB945BC", VA = "0xB945BC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xB9469C", Offset = "0xB9469C", VA = "0xB9469C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xB9477C", Offset = "0xB9477C", VA = "0xB9477C")]
	private void SlingFired(GlueConnections _glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xB94788", Offset = "0xB94788", VA = "0xB94788")]
	private void EMPHappened(Glue glue, EMP emp)
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xB94850", Offset = "0xB94850", VA = "0xB94850", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xB948D8", Offset = "0xB948D8", VA = "0xB948D8")]
	private void SendOffChopper()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xB948F4", Offset = "0xB948F4", VA = "0xB948F4")]
	private void LuskIn()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xB94984", Offset = "0xB94984", VA = "0xB94984", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xB94EC4", Offset = "0xB94EC4", VA = "0xB94EC4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xB94F50", Offset = "0xB94F50", VA = "0xB94F50", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xB95084", Offset = "0xB95084", VA = "0xB95084")]
	public LevelDirector_C1118_EnterLusk()
	{
	}
}
[Token(Token = "0x2000229")]
public class LevelDirector_C1120_SandboxTutorial : LevelDirector_base
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget[] phase1Targets;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTargetManual phase3SaveTarget;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HumansInteraction assistant;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int goal;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int destroyed;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool containersPlaced;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xB9508C", Offset = "0xB9508C", VA = "0xB9508C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xB95118", Offset = "0xB95118", VA = "0xB95118", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xB951A4", Offset = "0xB951A4", VA = "0xB951A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xB951EC", Offset = "0xB951EC", VA = "0xB951EC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xB9536C", Offset = "0xB9536C", VA = "0xB9536C")]
	private void ShowPhase1()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xB955F4", Offset = "0xB955F4", VA = "0xB955F4")]
	private void ShowPhase3()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xB95674", Offset = "0xB95674", VA = "0xB95674")]
	[ContextMenu("Saved")]
	public void Saved()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xB95734", Offset = "0xB95734", VA = "0xB95734")]
	[ContextMenu("Test")]
	private void Test()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xB95754", Offset = "0xB95754", VA = "0xB95754", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xB95820", Offset = "0xB95820", VA = "0xB95820", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xB95930", Offset = "0xB95930", VA = "0xB95930")]
	public LevelDirector_C1120_SandboxTutorial()
	{
	}
}
[Token(Token = "0x200022A")]
public class LevelDirector_C112_assistantMayor : LevelDirector_base
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool endConvo;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool closeEnough;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 camPos;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 hostPos;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xB95940", Offset = "0xB95940", VA = "0xB95940", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xB9599C", Offset = "0xB9599C", VA = "0xB9599C")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xB959D8", Offset = "0xB959D8", VA = "0xB959D8")]
	private void Closer()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xB95AA0", Offset = "0xB95AA0", VA = "0xB95AA0")]
	private void CloseEnough()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xB95B40", Offset = "0xB95B40", VA = "0xB95B40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xB95C78", Offset = "0xB95C78", VA = "0xB95C78")]
	public LevelDirector_C112_assistantMayor()
	{
	}
}
[Token(Token = "0x200022B")]
public class LevelDirector_C112_Mayor : LevelDirector_base
{
	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <CouncilComplaints>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C112_Mayor <>4__this;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HumansInteraction>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HumansInteraction <humanI>5__3;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xB97A08", Offset = "0xB97A08", VA = "0xB97A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xB97A50", Offset = "0xB97A50", VA = "0xB97A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xB97094", Offset = "0xB97094", VA = "0xB97094")]
		[DebuggerHidden]
		public <CouncilComplaints>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xB97608", Offset = "0xB97608", VA = "0xB97608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xB97624", Offset = "0xB97624", VA = "0xB97624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xB979B8", Offset = "0xB979B8", VA = "0xB979B8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xB97A10", Offset = "0xB97A10", VA = "0xB97A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int peopleAsked;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<HumansInteraction> councilMembers;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<HumansInteraction> councilMembersAsked;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<string> councilComplaints;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject pledgeEmitter;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int maxComplaints;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_C112_assistantMayor assistant;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_musician conductor;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool moveAndTalkAllowed;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xB95C80", Offset = "0xB95C80", VA = "0xB95C80", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xB95D30", Offset = "0xB95D30", VA = "0xB95D30", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xB95DE0", Offset = "0xB95DE0", VA = "0xB95DE0")]
	[ContextMenu("TestStopMusic")]
	private void TestStopMusic()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xB95E60", Offset = "0xB95E60", VA = "0xB95E60", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xB964D4", Offset = "0xB964D4", VA = "0xB964D4")]
	public void InitSpeech()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xB95F7C", Offset = "0xB95F7C", VA = "0xB95F7C")]
	private void InitComplaints()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xB96464", Offset = "0xB96464", VA = "0xB96464")]
	private void MoveAndTalk(bool _which)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xB96590", Offset = "0xB96590", VA = "0xB96590")]
	private void StartSpeech()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xB966B0", Offset = "0xB966B0", VA = "0xB966B0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xB96A74", Offset = "0xB96A74", VA = "0xB96A74", Slot = "23")]
	public override void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xB96DA8", Offset = "0xB96DA8", VA = "0xB96DA8")]
	private void EndComplaints()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xB96A28", Offset = "0xB96A28", VA = "0xB96A28")]
	[ContextMenu("InitCouncilComplaints")]
	private void ActivateCouncilComplaints()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xB97020", Offset = "0xB97020", VA = "0xB97020")]
	[IteratorStateMachine(typeof(<CouncilComplaints>d__22))]
	private IEnumerator CouncilComplaints()
	{
		return null;
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xB970BC", Offset = "0xB970BC", VA = "0xB970BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xB9730C", Offset = "0xB9730C", VA = "0xB9730C")]
	private void MonsterTalk()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xB97370", Offset = "0xB97370", VA = "0xB97370")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xB974D4", Offset = "0xB974D4", VA = "0xB974D4")]
	private void Higher()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xB97578", Offset = "0xB97578", VA = "0xB97578")]
	public LevelDirector_C112_Mayor()
	{
	}
}
[Token(Token = "0x200022D")]
public class LevelDirector_C112_WasteDump : LevelDirector_base
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Story story;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool loadStarted;

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xB97A58", Offset = "0xB97A58", VA = "0xB97A58", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xB97B6C", Offset = "0xB97B6C", VA = "0xB97B6C")]
	public void StartWasteDumpMission()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xB97B94", Offset = "0xB97B94", VA = "0xB97B94", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xB97C9C", Offset = "0xB97C9C", VA = "0xB97C9C")]
	public LevelDirector_C112_WasteDump()
	{
	}
}
[Token(Token = "0x200022E")]
public class LevelDirector_C115_sizeWheel : LevelDirector_base
{
	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction assistantLevelHost;

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xB97CA4", Offset = "0xB97CA4", VA = "0xB97CA4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xB97CAC", Offset = "0xB97CAC", VA = "0xB97CAC")]
	public LevelDirector_C115_sizeWheel()
	{
	}
}
[Token(Token = "0x200022F")]
public class LevelDirector_C116_WeightWatchers : LevelDirector_base
{
	[Token(Token = "0x2000230")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C116_WeightWatchers <>4__this;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xB98548", Offset = "0xB98548", VA = "0xB98548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xB98590", Offset = "0xB98590", VA = "0xB98590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xB983D4", Offset = "0xB983D4", VA = "0xB983D4")]
		[DebuggerHidden]
		public <DelayedReaction>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xB98454", Offset = "0xB98454", VA = "0xB98454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xB98458", Offset = "0xB98458", VA = "0xB98458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xB98550", Offset = "0xB98550", VA = "0xB98550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public WeightGame WeightGame;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string generalTask;

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xB97CB4", Offset = "0xB97CB4", VA = "0xB97CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xB97CB8", Offset = "0xB97CB8", VA = "0xB97CB8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xB97E4C", Offset = "0xB97E4C", VA = "0xB97E4C", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xB97F24", Offset = "0xB97F24", VA = "0xB97F24", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xB98020", Offset = "0xB98020", VA = "0xB98020")]
	public void Wrong()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xB980AC", Offset = "0xB980AC", VA = "0xB980AC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xB98334", Offset = "0xB98334", VA = "0xB98334")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__8))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xB983FC", Offset = "0xB983FC", VA = "0xB983FC")]
	public LevelDirector_C116_WeightWatchers()
	{
	}
}
[Token(Token = "0x2000231")]
public class LevelDirector_C117_AMT_part1 : LevelDirector_base
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AMTanimations AMTmachineFX;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform audioPosition;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter ambienceEmitter;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool machineReady;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool fistPushed;

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xB98598", Offset = "0xB98598", VA = "0xB98598", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xB98648", Offset = "0xB98648", VA = "0xB98648", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xB986F8", Offset = "0xB986F8", VA = "0xB986F8")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xB98768", Offset = "0xB98768", VA = "0xB98768", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xB9884C", Offset = "0xB9884C", VA = "0xB9884C")]
	public void SpeakButtonPressed()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xB98894", Offset = "0xB98894", VA = "0xB98894")]
	private void MachineOn()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xB989A8", Offset = "0xB989A8", VA = "0xB989A8", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xB98B3C", Offset = "0xB98B3C", VA = "0xB98B3C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xB98C2C", Offset = "0xB98C2C", VA = "0xB98C2C")]
	private void DoIdle()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xB98CBC", Offset = "0xB98CBC", VA = "0xB98CBC")]
	private void StartIdle()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xB98CD8", Offset = "0xB98CD8", VA = "0xB98CD8", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xB993E4", Offset = "0xB993E4", VA = "0xB993E4")]
	public LevelDirector_C117_AMT_part1()
	{
	}
}
[Token(Token = "0x2000232")]
public class LevelDirector_C117_Beamter_part1 : LevelDirector_base
{
	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xB993EC", Offset = "0xB993EC", VA = "0xB993EC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xB99478", Offset = "0xB99478", VA = "0xB99478")]
	public void StartConvo()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xB99600", Offset = "0xB99600", VA = "0xB99600", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xB99618", Offset = "0xB99618", VA = "0xB99618", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xB997C4", Offset = "0xB997C4", VA = "0xB997C4", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xB9984C", Offset = "0xB9984C", VA = "0xB9984C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xB99A04", Offset = "0xB99A04", VA = "0xB99A04")]
	public LevelDirector_C117_Beamter_part1()
	{
	}
}
[Token(Token = "0x2000233")]
public class LevelDirector_C118_SisterRepair : LevelDirector_base
{
	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LightHouseTurn lighthouseMechanic;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget target;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string task3;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTarget crank;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ConstructionTarget repairDone;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ConstructionTarget manualTarget;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float crankVelocity;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject staticPadLock;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Rigidbody cover;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Padlock padlock;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float requiredSpeed;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float lastFaster;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool tooSlow;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool speedReached;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xB99A0C", Offset = "0xB99A0C", VA = "0xB99A0C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xB99ADC", Offset = "0xB99ADC", VA = "0xB99ADC")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xB99C14", Offset = "0xB99C14", VA = "0xB99C14")]
	public void PadlockOpen()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xB99C24", Offset = "0xB99C24", VA = "0xB99C24")]
	public void CrankAttached()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xB99D54", Offset = "0xB99D54", VA = "0xB99D54", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xB99DC4", Offset = "0xB99DC4", VA = "0xB99DC4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xB9A0FC", Offset = "0xB9A0FC", VA = "0xB9A0FC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget _target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xB9A368", Offset = "0xB9A368", VA = "0xB9A368")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xB9A5E0", Offset = "0xB9A5E0", VA = "0xB9A5E0", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xB9A804", Offset = "0xB9A804", VA = "0xB9A804")]
	public LevelDirector_C118_SisterRepair()
	{
	}
}
[Token(Token = "0x2000234")]
public class LevelDirector_C119_AMT_part2 : LevelDirector_base
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AMTanimations AMTmachineFX;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform audioPosition;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter ambienceEmitter;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float regReadWait;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float regPerCharacterWait;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float bubbleHide;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int slaps;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool slapsAllowed;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float lastHit;

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xB9A814", Offset = "0xB9A814", VA = "0xB9A814", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xB9A8C4", Offset = "0xB9A8C4", VA = "0xB9A8C4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xB9A974", Offset = "0xB9A974", VA = "0xB9A974")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xB9A9E4", Offset = "0xB9A9E4", VA = "0xB9A9E4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xB9AAF4", Offset = "0xB9AAF4", VA = "0xB9AAF4")]
	public void SpeakButtonPressed()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xB9AD2C", Offset = "0xB9AD2C", VA = "0xB9AD2C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xB9ABD0", Offset = "0xB9ABD0", VA = "0xB9ABD0")]
	private void StartEval()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xB9AF48", Offset = "0xB9AF48", VA = "0xB9AF48", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xB9AFFC", Offset = "0xB9AFFC", VA = "0xB9AFFC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xB9B3B0", Offset = "0xB9B3B0", VA = "0xB9B3B0", Slot = "23")]
	public override void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xB9B65C", Offset = "0xB9B65C", VA = "0xB9B65C")]
	public LevelDirector_C119_AMT_part2()
	{
	}
}
[Token(Token = "0x2000235")]
public class LevelDirector_C119_Beamter_part2 : LevelDirector_base
{
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xB9B664", Offset = "0xB9B664", VA = "0xB9B664", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xB9B680", Offset = "0xB9B680", VA = "0xB9B680")]
	public void StartConvo()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xB9B7A0", Offset = "0xB9B7A0", VA = "0xB9B7A0", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xB9BB20", Offset = "0xB9BB20", VA = "0xB9BB20", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xB9BDE0", Offset = "0xB9BDE0", VA = "0xB9BDE0")]
	public LevelDirector_C119_Beamter_part2()
	{
	}
}
[Token(Token = "0x2000236")]
public class LevelDirector_C120_Restaurant : LevelDirector_base
{
	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHostSub;

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xB9BDE8", Offset = "0xB9BDE8", VA = "0xB9BDE8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xB9BE70", Offset = "0xB9BE70", VA = "0xB9BE70", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xB9C1E4", Offset = "0xB9C1E4", VA = "0xB9C1E4")]
	private void RandomShouts()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xB9C308", Offset = "0xB9C308", VA = "0xB9C308", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xB9C3F0", Offset = "0xB9C3F0", VA = "0xB9C3F0", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xB9C4CC", Offset = "0xB9C4CC", VA = "0xB9C4CC")]
	public LevelDirector_C120_Restaurant()
	{
	}
}
[Token(Token = "0x2000237")]
public class LevelDirector_C122_Shipwreck : LevelDirector_base
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public int timeToPolice;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool missionFailed;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool gameDone;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int shouts;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject police;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private BubbleToCharacter copBubble;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public C_HelicopterManagerDeliverMagnets waypointChopperManager;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Drone chopper;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool endStarted;

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xB9C4D4", Offset = "0xB9C4D4", VA = "0xB9C4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xB9C59C", Offset = "0xB9C59C", VA = "0xB9C59C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xB9C6E8", Offset = "0xB9C6E8", VA = "0xB9C6E8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xB9C8A8", Offset = "0xB9C8A8", VA = "0xB9C8A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xB9CA18", Offset = "0xB9CA18", VA = "0xB9CA18")]
	private void Shouts()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xB9C904", Offset = "0xB9C904", VA = "0xB9C904")]
	[ContextMenu("TimeOut")]
	private void TimeOut()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xB9CB74", Offset = "0xB9CB74", VA = "0xB9CB74")]
	private void DroneSpawned(Drone _drone)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xB9CC1C", Offset = "0xB9CC1C", VA = "0xB9CC1C")]
	private void TargetReached(Transform _target)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xB9CD80", Offset = "0xB9CD80", VA = "0xB9CD80")]
	private void EndScene()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xB9CDA4", Offset = "0xB9CDA4", VA = "0xB9CDA4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xB9CEA0", Offset = "0xB9CEA0", VA = "0xB9CEA0", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xB9CF20", Offset = "0xB9CF20", VA = "0xB9CF20")]
	public LevelDirector_C122_Shipwreck()
	{
	}
}
[Token(Token = "0x2000238")]
public class LevelDirector_C123_Villa : LevelDirector_base
{
	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xB9CF30", Offset = "0xB9CF30", VA = "0xB9CF30", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xB9CF4C", Offset = "0xB9CF4C", VA = "0xB9CF4C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xB9D048", Offset = "0xB9D048", VA = "0xB9D048")]
	private void RandomShouts()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xB9D1BC", Offset = "0xB9D1BC", VA = "0xB9D1BC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xB9D22C", Offset = "0xB9D22C", VA = "0xB9D22C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xB9D24C", Offset = "0xB9D24C", VA = "0xB9D24C")]
	public LevelDirector_C123_Villa()
	{
	}
}
[Token(Token = "0x2000239")]
public class LevelDirector_C124_highrise : LevelDirector_base
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base sisterLevelDir;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public VehicleWaypoint finalDestination;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public FixedJoint joint;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool levelEndTriggered;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xB9D254", Offset = "0xB9D254", VA = "0xB9D254", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xB9D28C", Offset = "0xB9D28C", VA = "0xB9D28C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xB9D318", Offset = "0xB9D318", VA = "0xB9D318", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xB9D3A4", Offset = "0xB9D3A4", VA = "0xB9D3A4")]
	[ContextMenu("SisterArrives")]
	private void SisterArrives()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xB9D41C", Offset = "0xB9D41C", VA = "0xB9D41C")]
	private void BlockSister()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xB9D444", Offset = "0xB9D444", VA = "0xB9D444")]
	[ContextMenu("SisterEnd")]
	private void SisterEnd()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xB9D540", Offset = "0xB9D540", VA = "0xB9D540")]
	private void WaypointReached(Vehicle vehicle, VehicleWaypoint vehicleWaypoint)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xB9D5C8", Offset = "0xB9D5C8", VA = "0xB9D5C8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xB9D6D8", Offset = "0xB9D6D8", VA = "0xB9D6D8", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xB9D6F4", Offset = "0xB9D6F4", VA = "0xB9D6F4")]
	public LevelDirector_C124_highrise()
	{
	}
}
[Token(Token = "0x200023A")]
public class LevelDirector_C125_CannonStability : LevelDirector_base
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget humanTarget;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTarget cannonTarget;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievement;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private BubbleToCharacter targetBubble;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int lastTargets;

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xB9D6FC", Offset = "0xB9D6FC", VA = "0xB9D6FC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xB9D76C", Offset = "0xB9D76C", VA = "0xB9D76C")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xB9D7F4", Offset = "0xB9D7F4", VA = "0xB9D7F4")]
	private void StepConvo(string _locaID, bool isProfessor, bool hasFocus = false)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xB9D8E4", Offset = "0xB9D8E4", VA = "0xB9D8E4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xB9DD48", Offset = "0xB9DD48", VA = "0xB9DD48", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xB9DFD4", Offset = "0xB9DFD4", VA = "0xB9DFD4", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xB9E088", Offset = "0xB9E088", VA = "0xB9E088")]
	public LevelDirector_C125_CannonStability()
	{
	}
}
[Token(Token = "0x200023B")]
public class LevelDirector_C15_unused : LevelDirector_base
{
	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xB9E090", Offset = "0xB9E090", VA = "0xB9E090")]
	public LevelDirector_C15_unused()
	{
	}
}
[Token(Token = "0x200023C")]
public class LevelDirector_C1999_MolluskDump : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x200023D")]
	[CompilerGenerated]
	private sealed class <Convo>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C1999_MolluskDump <>4__this;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xB9E8D0", Offset = "0xB9E8D0", VA = "0xB9E8D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xB9E918", Offset = "0xB9E918", VA = "0xB9E918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xB9E264", Offset = "0xB9E264", VA = "0xB9E264")]
		[DebuggerHidden]
		public <Convo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xB9E3DC", Offset = "0xB9E3DC", VA = "0xB9E3DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xB9E3E0", Offset = "0xB9E3E0", VA = "0xB9E3E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xB9E8D8", Offset = "0xB9E8D8", VA = "0xB9E8D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int excavState;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public IntroUfoTouch ufo;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject conveyorBrokenParticles;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject conveyorSFX;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ParticleSystem particles;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool craneDown;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float craneSpeed;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject craneSFX;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xB9E098", Offset = "0xB9E098", VA = "0xB9E098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xB9E180", Offset = "0xB9E180", VA = "0xB9E180", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xB9E1F0", Offset = "0xB9E1F0", VA = "0xB9E1F0")]
	[IteratorStateMachine(typeof(<Convo>d__14))]
	private IEnumerator Convo()
	{
		return null;
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xB9E0C8", Offset = "0xB9E0C8", VA = "0xB9E0C8")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xB9E28C", Offset = "0xB9E28C", VA = "0xB9E28C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xB9E3B8", Offset = "0xB9E3B8", VA = "0xB9E3B8")]
	public LevelDirector_C1999_MolluskDump()
	{
	}
}
[Token(Token = "0x200023E")]
public class LevelDirector_C202_foodDelivery : LevelDirector_base
{
	[Token(Token = "0x4000DC2")]
	private const int positiveRatingsRequired = 3;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int currentpositiveRatings;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<ConstructionTargetManual> ratingsTargets;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<LevelDirector_foodCustomer> foodCustomers;

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xB9E920", Offset = "0xB9E920", VA = "0xB9E920", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xB9E93C", Offset = "0xB9E93C", VA = "0xB9E93C")]
	private void InitManualTargets()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xB9EA74", Offset = "0xB9EA74", VA = "0xB9EA74", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xB9EB54", Offset = "0xB9EB54", VA = "0xB9EB54", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xB9EC34", Offset = "0xB9EC34", VA = "0xB9EC34")]
	private void FoodCustomerInit(LevelDirector_foodCustomer customer)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xB9ED1C", Offset = "0xB9ED1C", VA = "0xB9ED1C")]
	private void FoodCustomerResult(LevelDirector_foodCustomer customer, bool which)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xB9EDB4", Offset = "0xB9EDB4", VA = "0xB9EDB4")]
	private void ChangeRatings(bool which)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xB9EF74", Offset = "0xB9EF74", VA = "0xB9EF74")]
	public LevelDirector_C202_foodDelivery()
	{
	}
}
[Token(Token = "0x200023F")]
public class LevelDirector_C20_Burnout : LevelDirector_base
{
	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool targetsAllDone;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool briefingDoneOnce;

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xB9EFFC", Offset = "0xB9EFFC", VA = "0xB9EFFC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xB9F004", Offset = "0xB9F004", VA = "0xB9F004")]
	private void YankHarder()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xB9F0A8", Offset = "0xB9F0A8", VA = "0xB9F0A8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xB9F19C", Offset = "0xB9F19C", VA = "0xB9F19C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xB9F200", Offset = "0xB9F200", VA = "0xB9F200")]
	public LevelDirector_C20_Burnout()
	{
	}
}
[Token(Token = "0x2000240")]
public class LevelDirector_C2222 : LevelDirector_base
{
	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool loadTriggered;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xB9F208", Offset = "0xB9F208", VA = "0xB9F208", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xB9F29C", Offset = "0xB9F29C", VA = "0xB9F29C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xB9F488", Offset = "0xB9F488", VA = "0xB9F488", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xB9F554", Offset = "0xB9F554", VA = "0xB9F554")]
	private void LoadNextLevel()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xB9F58C", Offset = "0xB9F58C", VA = "0xB9F58C")]
	public LevelDirector_C2222()
	{
	}
}
[Token(Token = "0x2000241")]
public class LevelDirector_C3333_Resetto : LevelDirector_base
{
	[Token(Token = "0x2000242")]
	private enum State
	{
		[Token(Token = "0x4000DF9")]
		None,
		[Token(Token = "0x4000DFA")]
		WaitForConvo,
		[Token(Token = "0x4000DFB")]
		WaitForConvoDone
	}

	[Token(Token = "0x2000243")]
	public enum Phase
	{
		[Token(Token = "0x4000DFD")]
		intro,
		[Token(Token = "0x4000DFE")]
		start,
		[Token(Token = "0x4000DFF")]
		h1,
		[Token(Token = "0x4000E00")]
		b1,
		[Token(Token = "0x4000E01")]
		h2,
		[Token(Token = "0x4000E02")]
		b2,
		[Token(Token = "0x4000E03")]
		h3,
		[Token(Token = "0x4000E04")]
		b3
	}

	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceIntro>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xBA1A48", Offset = "0xBA1A48", VA = "0xBA1A48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xBA1A90", Offset = "0xBA1A90", VA = "0xBA1A90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xBA0400", Offset = "0xBA0400", VA = "0xBA0400")]
		[DebuggerHidden]
		public <BossFightSequenceIntro>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xBA14E0", Offset = "0xBA14E0", VA = "0xBA14E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xBA14E4", Offset = "0xBA14E4", VA = "0xBA14E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xBA1A50", Offset = "0xBA1A50", VA = "0xBA1A50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceStart>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xBA1C50", Offset = "0xBA1C50", VA = "0xBA1C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xBA1C98", Offset = "0xBA1C98", VA = "0xBA1C98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xBA0454", Offset = "0xBA0454", VA = "0xBA0454")]
		[DebuggerHidden]
		public <BossFightSequenceStart>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xBA1A98", Offset = "0xBA1A98", VA = "0xBA1A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xBA1A9C", Offset = "0xBA1A9C", VA = "0xBA1A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xBA1C58", Offset = "0xBA1C58", VA = "0xBA1C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000246")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH1>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xBA1DD4", Offset = "0xBA1DD4", VA = "0xBA1DD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xBA1E1C", Offset = "0xBA1E1C", VA = "0xBA1E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xBA047C", Offset = "0xBA047C", VA = "0xBA047C")]
		[DebuggerHidden]
		public <BossFightSequenceH1>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xBA1CA0", Offset = "0xBA1CA0", VA = "0xBA1CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xBA1CA4", Offset = "0xBA1CA4", VA = "0xBA1CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xBA1DDC", Offset = "0xBA1DDC", VA = "0xBA1DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000247")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB1>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xBA205C", Offset = "0xBA205C", VA = "0xBA205C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xBA20A4", Offset = "0xBA20A4", VA = "0xBA20A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xBA04A4", Offset = "0xBA04A4", VA = "0xBA04A4")]
		[DebuggerHidden]
		public <BossFightSequenceB1>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xBA1E24", Offset = "0xBA1E24", VA = "0xBA1E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xBA1E28", Offset = "0xBA1E28", VA = "0xBA1E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xBA2064", Offset = "0xBA2064", VA = "0xBA2064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH2>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xBA21E0", Offset = "0xBA21E0", VA = "0xBA21E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xBA2228", Offset = "0xBA2228", VA = "0xBA2228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xBA04CC", Offset = "0xBA04CC", VA = "0xBA04CC")]
		[DebuggerHidden]
		public <BossFightSequenceH2>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xBA20AC", Offset = "0xBA20AC", VA = "0xBA20AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xBA20B0", Offset = "0xBA20B0", VA = "0xBA20B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xBA21E8", Offset = "0xBA21E8", VA = "0xBA21E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB2>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xBA26E0", Offset = "0xBA26E0", VA = "0xBA26E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xBA2728", Offset = "0xBA2728", VA = "0xBA2728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xBA04F4", Offset = "0xBA04F4", VA = "0xBA04F4")]
		[DebuggerHidden]
		public <BossFightSequenceB2>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xBA2230", Offset = "0xBA2230", VA = "0xBA2230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xBA2234", Offset = "0xBA2234", VA = "0xBA2234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xBA26E8", Offset = "0xBA26E8", VA = "0xBA26E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024A")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH3>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xBA28EC", Offset = "0xBA28EC", VA = "0xBA28EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xBA2934", Offset = "0xBA2934", VA = "0xBA2934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xBA051C", Offset = "0xBA051C", VA = "0xBA051C")]
		[DebuggerHidden]
		public <BossFightSequenceH3>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xBA2730", Offset = "0xBA2730", VA = "0xBA2730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xBA2734", Offset = "0xBA2734", VA = "0xBA2734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xBA28F4", Offset = "0xBA28F4", VA = "0xBA28F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024B")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB3>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xBA2DCC", Offset = "0xBA2DCC", VA = "0xBA2DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xBA2E14", Offset = "0xBA2E14", VA = "0xBA2E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xBA0544", Offset = "0xBA0544", VA = "0xBA0544")]
		[DebuggerHidden]
		public <BossFightSequenceB3>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xBA293C", Offset = "0xBA293C", VA = "0xBA293C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xBA2940", Offset = "0xBA2940", VA = "0xBA2940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xBA2DD4", Offset = "0xBA2DD4", VA = "0xBA2DD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass72_0
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float wavesHeightTween;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xBA2E1C", Offset = "0xBA2E1C", VA = "0xBA2E1C")]
		public <>c__DisplayClass72_0()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xBA2E24", Offset = "0xBA2E24", VA = "0xBA2E24")]
		internal float <ChangeSea>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xBA2E2C", Offset = "0xBA2E2C", VA = "0xBA2E2C")]
		internal void <ChangeSea>b__1(float x)
		{
		}
	}

	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <ChangeSea>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass72_0 <>8__1;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xBA3070", Offset = "0xBA3070", VA = "0xBA3070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xBA30B8", Offset = "0xBA30B8", VA = "0xBA30B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xBA078C", Offset = "0xBA078C", VA = "0xBA078C")]
		[DebuggerHidden]
		public <ChangeSea>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xBA2E34", Offset = "0xBA2E34", VA = "0xBA2E34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xBA2E38", Offset = "0xBA2E38", VA = "0xBA2E38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xBA3078", Offset = "0xBA3078", VA = "0xBA3078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float waterHeightTween;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xBA30C0", Offset = "0xBA30C0", VA = "0xBA30C0")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xBA30C8", Offset = "0xBA30C8", VA = "0xBA30C8")]
		internal float <ChangeSealevel>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xBA30D0", Offset = "0xBA30D0", VA = "0xBA30D0")]
		internal void <ChangeSealevel>b__1(float x)
		{
		}
	}

	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <ChangeSealevel>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass74_0 <>8__1;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float targetHeight;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Ease ease;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startTime>5__2;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <islandsPosition>5__3;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xBA3418", Offset = "0xBA3418", VA = "0xBA3418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xBA3460", Offset = "0xBA3460", VA = "0xBA3460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xBA07B4", Offset = "0xBA07B4", VA = "0xBA07B4")]
		[DebuggerHidden]
		public <ChangeSealevel>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xBA30D8", Offset = "0xBA30D8", VA = "0xBA30D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xBA30DC", Offset = "0xBA30DC", VA = "0xBA30DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xBA3420", Offset = "0xBA3420", VA = "0xBA3420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public BossController bossController;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base professor;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base mayor;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base scupPorgy;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base rayLamp;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base flossenhammer;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private IEnumerator bossfightSequence;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private IEnumerator seaLevelEnumerator;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Phase sequencePhase;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool resettiPlaced;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
	private bool resettoActivated;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
	private bool boosterActive;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EF")]
	private bool resettoArrived;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool tentacleUnchained;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	private bool EMPMissileHit;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
	private bool empBlastCharging;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
	private bool moveToLastBoosterDone;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool centerReached;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AutoSpawn[] spawners;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject smokePipes;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject poolWaterOverride;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public BossLimits bossLimits;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public SetSeaWaves setSeaWaves;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform distantIslands;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ShakeObject[] shakeObjects;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject speedStripes;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Rigidbody[] pipeCovers;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject underwaterCrystals;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Transform resettoFactoryTrigger;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public bool smoothCam;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject liftIslandLoop;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Achievement achievement;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Animation Gears;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Animation Pistons;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject FactoryFX;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public MeshRenderer groundVisual;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Material buildingsA_Uber;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Material surfaceNoCull;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelDirector_C3333_Resetto _instance;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float lowSeaLevel;

	[Token(Token = "0x170000D0")]
	public static LevelDirector_C3333_Resetto Instance
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xB9F594", Offset = "0xB9F594", VA = "0xB9F594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xB9F720", Offset = "0xB9F720", VA = "0xB9F720", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xB9FA0C", Offset = "0xB9FA0C", VA = "0xB9FA0C")]
	private void BlockOptions()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xB9FA30", Offset = "0xB9FA30", VA = "0xB9FA30")]
	[ContextMenu("ShortcutToStart")]
	public void ShortcutToStart()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xB9FC08", Offset = "0xB9FC08", VA = "0xB9FC08")]
	[ContextMenu("ShortcutToH1")]
	public void ShortcutToH1()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xB9FCD8", Offset = "0xB9FCD8", VA = "0xB9FCD8")]
	[ContextMenu("ShortcutToB1")]
	public void ShortcutToB1()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xB9FDC8", Offset = "0xB9FDC8", VA = "0xB9FDC8")]
	[ContextMenu("ShortcutToH2")]
	public void ShortcutToH2()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xB9FEC8", Offset = "0xB9FEC8", VA = "0xB9FEC8")]
	[ContextMenu("ShortcutToB2")]
	public void ShortcutToB2()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xB9FFE4", Offset = "0xB9FFE4", VA = "0xB9FFE4")]
	[ContextMenu("ShortcutToH3")]
	public void ShortcutToH3()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xBA0110", Offset = "0xBA0110", VA = "0xBA0110")]
	[ContextMenu("ShortcutToB3")]
	public void ShortcutToB3()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xB9FAE8", Offset = "0xB9FAE8", VA = "0xB9FAE8")]
	private void IntroDebug()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xB9F948", Offset = "0xB9F948", VA = "0xB9F948")]
	[IteratorStateMachine(typeof(<BossFightSequenceIntro>d__60))]
	private IEnumerator BossFightSequenceIntro()
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xBA0428", Offset = "0xBA0428", VA = "0xBA0428")]
	private void RepeatUnchainedBriefing()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xB9FB94", Offset = "0xB9FB94", VA = "0xB9FB94")]
	[IteratorStateMachine(typeof(<BossFightSequenceStart>d__62))]
	private IEnumerator BossFightSequenceStart()
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xB9FC64", Offset = "0xB9FC64", VA = "0xB9FC64")]
	[IteratorStateMachine(typeof(<BossFightSequenceH1>d__63))]
	private IEnumerator BossFightSequenceH1()
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xB9FD54", Offset = "0xB9FD54", VA = "0xB9FD54")]
	[IteratorStateMachine(typeof(<BossFightSequenceB1>d__64))]
	private IEnumerator BossFightSequenceB1()
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xB9FE54", Offset = "0xB9FE54", VA = "0xB9FE54")]
	[IteratorStateMachine(typeof(<BossFightSequenceH2>d__65))]
	private IEnumerator BossFightSequenceH2()
	{
		return null;
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xB9FF70", Offset = "0xB9FF70", VA = "0xB9FF70")]
	[IteratorStateMachine(typeof(<BossFightSequenceB2>d__66))]
	private IEnumerator BossFightSequenceB2()
	{
		return null;
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xBA009C", Offset = "0xBA009C", VA = "0xBA009C")]
	[IteratorStateMachine(typeof(<BossFightSequenceH3>d__67))]
	private IEnumerator BossFightSequenceH3()
	{
		return null;
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xBA01E4", Offset = "0xBA01E4", VA = "0xBA01E4")]
	[IteratorStateMachine(typeof(<BossFightSequenceB3>d__68))]
	private IEnumerator BossFightSequenceB3()
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xBA056C", Offset = "0xBA056C", VA = "0xBA056C")]
	[ContextMenu("DropIsland")]
	private void DropIsland()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xBA0588", Offset = "0xBA0588", VA = "0xBA0588")]
	[ContextMenu("StartLiftIsland")]
	private void StartLiftIsland()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xBA0624", Offset = "0xBA0624", VA = "0xBA0624")]
	public void SetShake(bool which)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xBA072C", Offset = "0xBA072C", VA = "0xBA072C")]
	[IteratorStateMachine(typeof(<ChangeSea>d__72))]
	private IEnumerator ChangeSea()
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xBA0684", Offset = "0xBA0684", VA = "0xBA0684")]
	[IteratorStateMachine(typeof(<ChangeSealevel>d__74))]
	private IEnumerator ChangeSealevel(float targetHeight, float duration, float delay = 1f, Ease ease = Ease.InOutSine)
	{
		return null;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xBA07DC", Offset = "0xBA07DC", VA = "0xBA07DC")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xBA08E8", Offset = "0xBA08E8", VA = "0xBA08E8", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xBA0A1C", Offset = "0xBA0A1C", VA = "0xBA0A1C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xBA0B50", Offset = "0xBA0B50", VA = "0xBA0B50")]
	[ContextMenu("ResettoStart")]
	public void ResettoStart()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xBA0CD0", Offset = "0xBA0CD0", VA = "0xBA0CD0")]
	private void ResettoNotArrivedCheck()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xBA0CE4", Offset = "0xBA0CE4", VA = "0xBA0CE4")]
	private void ResettoRants()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xBA0DB8", Offset = "0xBA0DB8", VA = "0xBA0DB8")]
	private void ResettoAsksForHelp()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xBA0258", Offset = "0xBA0258", VA = "0xBA0258")]
	public void DebugWarpResettoToFactory(bool force = false)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xBA0E38", Offset = "0xBA0E38", VA = "0xBA0E38")]
	private void ResettoBriefing()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xBA0F8C", Offset = "0xBA0F8C", VA = "0xBA0F8C")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xB9FA70", Offset = "0xB9FA70", VA = "0xB9FA70")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xBA0FC0", Offset = "0xBA0FC0", VA = "0xBA0FC0")]
	private void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xBA1038", Offset = "0xBA1038", VA = "0xBA1038")]
	private bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xBA11B4", Offset = "0xBA11B4", VA = "0xBA11B4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xB9F8D8", Offset = "0xB9F8D8", VA = "0xB9F8D8")]
	private void SetPipeCoversKinematic(bool which)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xBA1290", Offset = "0xBA1290", VA = "0xBA1290")]
	public void TentacleUnchained()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xBA12B8", Offset = "0xBA12B8", VA = "0xBA12B8")]
	public void BoostersActivated()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xBA12C4", Offset = "0xBA12C4", VA = "0xBA12C4")]
	public void EMPBlastChargeStart()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xB9F890", Offset = "0xB9F890", VA = "0xB9F890")]
	public void SetSpawners(bool which)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xBA12D0", Offset = "0xBA12D0", VA = "0xBA12D0")]
	private void EMPMissileHitEvent(StabiliserHoming missile)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xBA12DC", Offset = "0xBA12DC", VA = "0xBA12DC")]
	public void MoveToLastBoosterDone()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xBA12E8", Offset = "0xBA12E8", VA = "0xBA12E8")]
	public void CenterReached()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xBA12F4", Offset = "0xBA12F4", VA = "0xBA12F4")]
	public void BoosterDestroyed(int which)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xBA1404", Offset = "0xBA1404", VA = "0xBA1404")]
	public void BossWeakpointHit(int which)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xB9F9BC", Offset = "0xB9F9BC", VA = "0xB9F9BC")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xBA1480", Offset = "0xBA1480", VA = "0xBA1480")]
	public LevelDirector_C3333_Resetto()
	{
	}
}
[Token(Token = "0x2000250")]
public class LevelDirector_C3334_Sister : LevelDirector_base
{
	[Token(Token = "0x2000251")]
	private enum State
	{
		[Token(Token = "0x4000E42")]
		None,
		[Token(Token = "0x4000E43")]
		WaitForConvo,
		[Token(Token = "0x4000E44")]
		WaitForConvoDone
	}

	[Token(Token = "0x2000252")]
	[CompilerGenerated]
	private sealed class <SavingMollusk>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3334_Sister <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xBA46B0", Offset = "0xBA46B0", VA = "0xBA46B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xBA46F8", Offset = "0xBA46F8", VA = "0xBA46F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xBA39FC", Offset = "0xBA39FC", VA = "0xBA39FC")]
		[DebuggerHidden]
		public <SavingMollusk>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xBA3F50", Offset = "0xBA3F50", VA = "0xBA3F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xBA3F54", Offset = "0xBA3F54", VA = "0xBA3F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xBA46B8", Offset = "0xBA46B8", VA = "0xBA46B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<LevelDirector_base> convoClearLevelDirectors;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_C3334_Sister sister;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public FixedJoint molluskJoint;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Rigidbody weight;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool molluskIsSaved;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] attaches;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool molluskGrabAllowed;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Rigidbody robot;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject burnSizzleSFX;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TadaPostBossfight tarantellaTada;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int rantIDX;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private string rantKey;

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xBA3468", Offset = "0xBA3468", VA = "0xBA3468")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xBA35D8", Offset = "0xBA35D8", VA = "0xBA35D8")]
	public void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xBA3650", Offset = "0xBA3650", VA = "0xBA3650")]
	public bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xBA37CC", Offset = "0xBA37CC", VA = "0xBA37CC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xBA38A8", Offset = "0xBA38A8", VA = "0xBA38A8")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xBA38F8", Offset = "0xBA38F8", VA = "0xBA38F8")]
	[ContextMenu("PlayTadaTest")]
	private void PlayTadaTest()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xBA3918", Offset = "0xBA3918", VA = "0xBA3918", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xBA3988", Offset = "0xBA3988", VA = "0xBA3988")]
	[IteratorStateMachine(typeof(<SavingMollusk>d__27))]
	private IEnumerator SavingMollusk()
	{
		return null;
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xBA3A24", Offset = "0xBA3A24", VA = "0xBA3A24")]
	private void ThrowHim()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xBA3ACC", Offset = "0xBA3ACC", VA = "0xBA3ACC")]
	private void MolluskFinishMe()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xBA3B50", Offset = "0xBA3B50", VA = "0xBA3B50")]
	private void LoopKey()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xBA3C48", Offset = "0xBA3C48", VA = "0xBA3C48", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xBA3D28", Offset = "0xBA3D28", VA = "0xBA3D28", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xBA3E08", Offset = "0xBA3E08", VA = "0xBA3E08")]
	private void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xBA3EC4", Offset = "0xBA3EC4", VA = "0xBA3EC4")]
	public void MolluskSaved()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xBA3ED0", Offset = "0xBA3ED0", VA = "0xBA3ED0")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xBA3EE8", Offset = "0xBA3EE8", VA = "0xBA3EE8")]
	public LevelDirector_C3334_Sister()
	{
	}
}
[Token(Token = "0x2000253")]
public class LevelDirector_C3335_Celebration : LevelDirector_Cutscene
{
	[Token(Token = "0x2000254")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3335_Celebration <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0xBA5308", Offset = "0xBA5308", VA = "0xBA5308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xBA5350", Offset = "0xBA5350", VA = "0xBA5350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xBA48EC", Offset = "0xBA48EC", VA = "0xBA48EC")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xBA491C", Offset = "0xBA491C", VA = "0xBA491C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xBA4920", Offset = "0xBA4920", VA = "0xBA4920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xBA5310", Offset = "0xBA5310", VA = "0xBA5310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public ShoutTimer shoutTimerHosts;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Story chefStory;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Story mobStory;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool resettiPlaced;

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xBA4700", Offset = "0xBA4700", VA = "0xBA4700", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xBA47A0", Offset = "0xBA47A0", VA = "0xBA47A0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xBA482C", Offset = "0xBA482C", VA = "0xBA482C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xBA48B8", Offset = "0xBA48B8", VA = "0xBA48B8")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xBA472C", Offset = "0xBA472C", VA = "0xBA472C")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__9))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xBA4914", Offset = "0xBA4914", VA = "0xBA4914")]
	public LevelDirector_C3335_Celebration()
	{
	}
}
[Token(Token = "0x2000255")]
public class LevelDirector_C3336_Fireworks : LevelDirector_Cutscene
{
	[Token(Token = "0x2000256")]
	[CompilerGenerated]
	private sealed class <Fireworks>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3336_Fireworks <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xBA5A1C", Offset = "0xBA5A1C", VA = "0xBA5A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xBA5A64", Offset = "0xBA5A64", VA = "0xBA5A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xBA5698", Offset = "0xBA5698", VA = "0xBA5698")]
		[DebuggerHidden]
		public <Fireworks>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xBA5778", Offset = "0xBA5778", VA = "0xBA5778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xBA577C", Offset = "0xBA577C", VA = "0xBA577C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xBA5A24", Offset = "0xBA5A24", VA = "0xBA5A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool resettiHidden;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public FireworksManager fireworksManager;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool fireworksDone;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	private bool autoEndStarted;

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xBA5358", Offset = "0xBA5358", VA = "0xBA5358", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xBA53E4", Offset = "0xBA53E4", VA = "0xBA53E4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xBA5470", Offset = "0xBA5470", VA = "0xBA5470")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xBA54A4", Offset = "0xBA54A4", VA = "0xBA54A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xBA54C0", Offset = "0xBA54C0", VA = "0xBA54C0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xBA5560", Offset = "0xBA5560", VA = "0xBA5560")]
	public void ButtonAuto()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xBA55FC", Offset = "0xBA55FC", VA = "0xBA55FC")]
	public void ButtonManual()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xBA54EC", Offset = "0xBA54EC", VA = "0xBA54EC")]
	[IteratorStateMachine(typeof(<Fireworks>d__11))]
	private IEnumerator Fireworks()
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xBA56C0", Offset = "0xBA56C0", VA = "0xBA56C0")]
	public void AutoEnd()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xBA56F8", Offset = "0xBA56F8", VA = "0xBA56F8")]
	public void FireworksDone()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xBA5770", Offset = "0xBA5770", VA = "0xBA5770")]
	public LevelDirector_C3336_Fireworks()
	{
	}
}
[Token(Token = "0x2000257")]
public class LevelDirector_C51_Stacking_Cactus : LevelDirector_base
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xBA5A6C", Offset = "0xBA5A6C", VA = "0xBA5A6C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xBA5AC0", Offset = "0xBA5AC0", VA = "0xBA5AC0")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xBA5A88", Offset = "0xBA5A88", VA = "0xBA5A88")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xBA5B88", Offset = "0xBA5B88", VA = "0xBA5B88", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xBA5D00", Offset = "0xBA5D00", VA = "0xBA5D00", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xBA5D88", Offset = "0xBA5D88", VA = "0xBA5D88", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xBA5E30", Offset = "0xBA5E30", VA = "0xBA5E30")]
	public LevelDirector_C51_Stacking_Cactus()
	{
	}
}
[Token(Token = "0x2000258")]
public class LevelDirector_C52_CannonBuilding : LevelDirector_base
{
	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xBA6660", Offset = "0xBA6660", VA = "0xBA6660", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xBA66B4", Offset = "0xBA66B4", VA = "0xBA66B4")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xBA667C", Offset = "0xBA667C", VA = "0xBA667C")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xBA677C", Offset = "0xBA677C", VA = "0xBA677C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xBA68F4", Offset = "0xBA68F4", VA = "0xBA68F4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xBA697C", Offset = "0xBA697C", VA = "0xBA697C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xBA6A24", Offset = "0xBA6A24", VA = "0xBA6A24")]
	public LevelDirector_C52_CannonBuilding()
	{
	}
}
[Token(Token = "0x2000259")]
public class LevelDirector_C53_ShipToShore2Barges : LevelDirector_base
{
	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xBA6DA8", Offset = "0xBA6DA8", VA = "0xBA6DA8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xBA6DFC", Offset = "0xBA6DFC", VA = "0xBA6DFC")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xBA6DC4", Offset = "0xBA6DC4", VA = "0xBA6DC4")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xBA6EC4", Offset = "0xBA6EC4", VA = "0xBA6EC4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xBA703C", Offset = "0xBA703C", VA = "0xBA703C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xBA70C4", Offset = "0xBA70C4", VA = "0xBA70C4", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xBA716C", Offset = "0xBA716C", VA = "0xBA716C")]
	public LevelDirector_C53_ShipToShore2Barges()
	{
	}
}
[Token(Token = "0x200025A")]
public class LevelDirector_C6000_lasers_battery : LevelDirector_base
{
	[Token(Token = "0x200025B")]
	[CompilerGenerated]
	private sealed class <HatchOpen>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C6000_lasers_battery <>4__this;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody[] <>7__wrap1;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <_rb>5__4;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xBA7D20", Offset = "0xBA7D20", VA = "0xBA7D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xBA7D68", Offset = "0xBA7D68", VA = "0xBA7D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xBA7A5C", Offset = "0xBA7A5C", VA = "0xBA7A5C")]
		[DebuggerHidden]
		public <HatchOpen>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xBA7B60", Offset = "0xBA7B60", VA = "0xBA7B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xBA7B64", Offset = "0xBA7B64", VA = "0xBA7B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xBA7D28", Offset = "0xBA7D28", VA = "0xBA7D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget battery;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget manualTarget;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public CrystalEnergyBase laserEnergyBase;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public VehicleDamage chopper;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool useBatteryGhost;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Rigidbody[] hatches;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool isCharged;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xBA7438", Offset = "0xBA7438", VA = "0xBA7438", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xBA756C", Offset = "0xBA756C", VA = "0xBA756C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xBA7604", Offset = "0xBA7604", VA = "0xBA7604", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xBA76B0", Offset = "0xBA76B0", VA = "0xBA76B0")]
	private void ChargeLaser(int _energyLevel)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xBA7754", Offset = "0xBA7754", VA = "0xBA7754")]
	[ContextMenu("LaserCharge")]
	private void LaserCharge()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xBA7814", Offset = "0xBA7814", VA = "0xBA7814", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xBA799C", Offset = "0xBA799C", VA = "0xBA799C")]
	[ContextMenu("openHatches")]
	private void OpenHatchesAfterBatterySet()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xBA79E8", Offset = "0xBA79E8", VA = "0xBA79E8")]
	[IteratorStateMachine(typeof(<HatchOpen>d__14))]
	private IEnumerator HatchOpen()
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xBA7A84", Offset = "0xBA7A84", VA = "0xBA7A84", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xBA7B58", Offset = "0xBA7B58", VA = "0xBA7B58")]
	public LevelDirector_C6000_lasers_battery()
	{
	}
}
[Token(Token = "0x200025C")]
public class LevelDirector_C6001_crystals_explode : LevelDirector_base
{
	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Rigidbody[] hatch;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HazardReceiverCrystal crystalNear;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HazardReceiverCrystal crystalFar;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTargetManual crystalTargetNear;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ConstructionTargetManual crystalTargetFar;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject shipDelivery1;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject shipDelivery2;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool isCharged;

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xBA7D70", Offset = "0xBA7D70", VA = "0xBA7D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xBA7D90", Offset = "0xBA7D90", VA = "0xBA7D90", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xBA7DEC", Offset = "0xBA7DEC", VA = "0xBA7DEC")]
	private void StartConversation()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xBA7E80", Offset = "0xBA7E80", VA = "0xBA7E80")]
	[ContextMenu("OpenHatch")]
	private void OpenHatch()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xBA7F08", Offset = "0xBA7F08", VA = "0xBA7F08")]
	public void StartShip2()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xBA7F28", Offset = "0xBA7F28", VA = "0xBA7F28", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xBA8000", Offset = "0xBA8000", VA = "0xBA8000", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xBA80D8", Offset = "0xBA80D8", VA = "0xBA80D8")]
	private void StartCrystalFar()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xBA8160", Offset = "0xBA8160", VA = "0xBA8160")]
	private void CrystalHit(HazardReceiver crystal)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xBA8534", Offset = "0xBA8534", VA = "0xBA8534", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xBA8540", Offset = "0xBA8540", VA = "0xBA8540")]
	public LevelDirector_C6001_crystals_explode()
	{
	}
}
[Token(Token = "0x200025D")]
public class LevelDirector_C6002_lasers_slingCharge : LevelDirector_base
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HazardReceiverCrystal mainCrystal;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget targetLaserCannon;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTargetManual targetCrystalDestroyed;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public CrystalLaser crystalLaser;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public CrystalEnergyBase crystalEnergyBase;

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xBA8548", Offset = "0xBA8548", VA = "0xBA8548", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xBA8624", Offset = "0xBA8624", VA = "0xBA8624", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xBA86BC", Offset = "0xBA86BC", VA = "0xBA86BC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xBA8754", Offset = "0xBA8754", VA = "0xBA8754")]
	public void ChargeLaser(int _charge)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xBA87A8", Offset = "0xBA87A8", VA = "0xBA87A8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xBA88E8", Offset = "0xBA88E8", VA = "0xBA88E8")]
	public LevelDirector_C6002_lasers_slingCharge()
	{
	}
}
[Token(Token = "0x200025E")]
public class LevelDirector_C6003_lasers_scrapMilitary : LevelDirector_base
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<ConstructionTargetManual> constructionsTargets;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ConstructionTargetManual crystalTarget;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Glue battery;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject[] waves;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int maxWaves;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<GameObject> currentTargets;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int targetsRequired;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int targetsDestroyed;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform coastalGun;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 coastalGunStart;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 coastalOffset;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public HazardReceiverCrystal mainCrystal;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float laserTime;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float laserTimerRequired;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xBA88F0", Offset = "0xBA88F0", VA = "0xBA88F0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xBA8D74", Offset = "0xBA8D74", VA = "0xBA8D74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xBA8F10", Offset = "0xBA8F10", VA = "0xBA8F10")]
	[ContextMenu("StartCoastalGun")]
	private void StartCoastalGun()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xBA90AC", Offset = "0xBA90AC", VA = "0xBA90AC")]
	private void SetWave(int wave)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xBA8B88", Offset = "0xBA8B88", VA = "0xBA8B88")]
	private void NextWave()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xBA8E14", Offset = "0xBA8E14", VA = "0xBA8E14")]
	[ContextMenu("LevelSuccess")]
	private void LevelSuccess()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xBA90F4", Offset = "0xBA90F4", VA = "0xBA90F4")]
	private void EvalChange(GameObject _go)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xBA91F4", Offset = "0xBA91F4", VA = "0xBA91F4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xBA92D4", Offset = "0xBA92D4", VA = "0xBA92D4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xBA93B4", Offset = "0xBA93B4", VA = "0xBA93B4")]
	private void StatusChange(VehicleDamage vehicleDamage, VehicleDamage.Status status)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xBA9510", Offset = "0xBA9510", VA = "0xBA9510")]
	private void DestroyerDestroyed(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xBA9514", Offset = "0xBA9514", VA = "0xBA9514", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xBA9518", Offset = "0xBA9518", VA = "0xBA9518", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xBA9588", Offset = "0xBA9588", VA = "0xBA9588")]
	public LevelDirector_C6003_lasers_scrapMilitary()
	{
	}
}
[Token(Token = "0x200025F")]
public class LevelDirector_C60_ShipToShore1BargeHard : LevelDirector_base
{
	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xBA968C", Offset = "0xBA968C", VA = "0xBA968C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xBA96E0", Offset = "0xBA96E0", VA = "0xBA96E0")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xBA96A8", Offset = "0xBA96A8", VA = "0xBA96A8")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xBA97A8", Offset = "0xBA97A8", VA = "0xBA97A8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xBA9920", Offset = "0xBA9920", VA = "0xBA9920", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xBA99A8", Offset = "0xBA99A8", VA = "0xBA99A8", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xBA9A50", Offset = "0xBA9A50", VA = "0xBA9A50")]
	public LevelDirector_C60_ShipToShore1BargeHard()
	{
	}
}
[Token(Token = "0x2000260")]
public class LevelDirector_C61_DiagonalHard : LevelDirector_base
{
	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xBA9C64", Offset = "0xBA9C64", VA = "0xBA9C64", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xBA9CB8", Offset = "0xBA9CB8", VA = "0xBA9CB8")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xBA9C80", Offset = "0xBA9C80", VA = "0xBA9C80")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xBA9D80", Offset = "0xBA9D80", VA = "0xBA9D80", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xBA9EF8", Offset = "0xBA9EF8", VA = "0xBA9EF8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xBA9F80", Offset = "0xBA9F80", VA = "0xBA9F80", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xBAA028", Offset = "0xBAA028", VA = "0xBAA028")]
	public LevelDirector_C61_DiagonalHard()
	{
	}
}
[Token(Token = "0x2000261")]
public class LevelDirector_C7000_sister_heistPrep : LevelDirector_Cutscene
{
	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7000_sister_heistPrep <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0xBAB55C", Offset = "0xBAB55C", VA = "0xBAB55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xBAB5A4", Offset = "0xBAB5A4", VA = "0xBAB5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xBAA618", Offset = "0xBAA618", VA = "0xBAA618")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xBAA648", Offset = "0xBAA648", VA = "0xBAA648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xBAA64C", Offset = "0xBAA64C", VA = "0xBAA64C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xBAB564", Offset = "0xBAB564", VA = "0xBAB564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool teamAssembled;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool partyFeedbackActive;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private BubbleToCharacter lastPartyFeedbackBubble;

	[Token(Token = "0x170000ED")]
	public bool TeamAssembled
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xBAA23C", Offset = "0xBAA23C", VA = "0xBAA23C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xBAA244", Offset = "0xBAA244", VA = "0xBAA244")]
		set
		{
		}
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xBAA250", Offset = "0xBAA250", VA = "0xBAA250", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xBAA258", Offset = "0xBAA258", VA = "0xBAA258")]
	public void HumanPlacement(HumanController humanController, bool requiredHuman, bool added)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xBAA578", Offset = "0xBAA578", VA = "0xBAA578", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xBAA5A4", Offset = "0xBAA5A4", VA = "0xBAA5A4")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__9))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xBAA640", Offset = "0xBAA640", VA = "0xBAA640")]
	public LevelDirector_C7000_sister_heistPrep()
	{
	}
}
[Token(Token = "0x2000263")]
public class LevelDirector_C7001_flossenhammer : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x2000264")]
	[CompilerGenerated]
	private sealed class <ReleaseSedative>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_flossenhammer <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xBAB954", Offset = "0xBAB954", VA = "0xBAB954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xBAB99C", Offset = "0xBAB99C", VA = "0xBAB99C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xBAB670", Offset = "0xBAB670", VA = "0xBAB670")]
		[DebuggerHidden]
		public <ReleaseSedative>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xBAB7B8", Offset = "0xBAB7B8", VA = "0xBAB7B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xBAB7BC", Offset = "0xBAB7BC", VA = "0xBAB7BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xBAB95C", Offset = "0xBAB95C", VA = "0xBAB95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject sedative;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float timer;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool isInArea;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	private bool sedativesReleased;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	private bool firstTimeInPosition;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject noTrespassingPool;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SharkController[] sharks;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject overPoolTrigger;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xBAB5AC", Offset = "0xBAB5AC", VA = "0xBAB5AC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xBAB5DC", Offset = "0xBAB5DC", VA = "0xBAB5DC")]
	[ContextMenu("DebugReleaseSedative")]
	public void DebugSedative()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xBAB5FC", Offset = "0xBAB5FC", VA = "0xBAB5FC")]
	[IteratorStateMachine(typeof(<ReleaseSedative>d__10))]
	private IEnumerator ReleaseSedative()
	{
		return null;
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xBAB698", Offset = "0xBAB698", VA = "0xBAB698")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xBAB708", Offset = "0xBAB708", VA = "0xBAB708", Slot = "30")]
	public override void PositionOverPoolReached(bool enter)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xBAB7B0", Offset = "0xBAB7B0", VA = "0xBAB7B0")]
	public LevelDirector_C7001_flossenhammer()
	{
	}
}
[Token(Token = "0x2000265")]
public class LevelDirector_C7001_gamberino : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xBAB9A4", Offset = "0xBAB9A4", VA = "0xBAB9A4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xBAB9AC", Offset = "0xBAB9AC", VA = "0xBAB9AC")]
	public LevelDirector_C7001_gamberino()
	{
	}
}
[Token(Token = "0x2000266")]
public class LevelDirector_C7001_Guarddog : LevelDirector_base
{
	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject waypointCrane;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject waypointRayLamp;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int targetWaypointID;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int idleWaypointID;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool huntRandomPerson;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	public bool patrolOnStart;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	public bool onlyChaseRayLamp;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int dogVoice;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_C7001_Sister mainHost;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool isAlarmed;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool rayLampIsIn;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string lastCharacterID;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int characterHits;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xBAB9B4", Offset = "0xBAB9B4", VA = "0xBAB9B4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xBABA94", Offset = "0xBABA94", VA = "0xBABA94", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xBABB74", Offset = "0xBABB74", VA = "0xBABB74", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xBABBF8", Offset = "0xBABBF8", VA = "0xBABBF8")]
	private void MovementSettings()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xBABEC8", Offset = "0xBABEC8", VA = "0xBABEC8")]
	[ContextMenu("LookForWaypoint")]
	private void LookForWaypoint()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xBABBCC", Offset = "0xBABBCC", VA = "0xBABBCC")]
	private void DisableMoving()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xBABF0C", Offset = "0xBABF0C", VA = "0xBABF0C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xBABC44", Offset = "0xBABC44", VA = "0xBABC44")]
	public void HumanEntersTrigger(List<HumanController> humanController, bool isDogMan, bool areaIsEmpty)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xBAC2DC", Offset = "0xBAC2DC", VA = "0xBAC2DC")]
	private void Alarm(HumanController hc)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xBAC368", Offset = "0xBAC368", VA = "0xBAC368")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xBAC474", Offset = "0xBAC474", VA = "0xBAC474")]
	public LevelDirector_C7001_Guarddog()
	{
	}
}
[Token(Token = "0x2000267")]
public class LevelDirector_C7001_guardEntrance : LevelDirector_C7001_guardGeneric
{
	[Token(Token = "0x2000268")]
	[CompilerGenerated]
	private sealed class <HouseEnd>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_guardEntrance <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xA21CDC", Offset = "0xA21CDC", VA = "0xA21CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xA21D24", Offset = "0xA21D24", VA = "0xA21D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xA213E0", Offset = "0xA213E0", VA = "0xA213E0")]
		[DebuggerHidden]
		public <HouseEnd>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xA21C08", Offset = "0xA21C08", VA = "0xA21C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xA21C0C", Offset = "0xA21C0C", VA = "0xA21C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xA21CE4", Offset = "0xA21CE4", VA = "0xA21CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ConstructionTargetManual target;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool gateLocked;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	private bool needsToPee;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject trespassingTriggers;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool goToHouseStarted;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject houseEntryWaypoint;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool guardRemoved;

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xA20D1C", Offset = "0xA20D1C", VA = "0xA20D1C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xA20DE8", Offset = "0xA20DE8", VA = "0xA20DE8")]
	public void ActivateGuard()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xA20E7C", Offset = "0xA20E7C", VA = "0xA20E7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xA210F4", Offset = "0xA210F4", VA = "0xA210F4")]
	private void RemoveGuard()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xA21314", Offset = "0xA21314", VA = "0xA21314")]
	private void GoToHouse()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xA2136C", Offset = "0xA2136C", VA = "0xA2136C")]
	[IteratorStateMachine(typeof(<HouseEnd>d__12))]
	private IEnumerator HouseEnd()
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xA21408", Offset = "0xA21408", VA = "0xA21408")]
	[ContextMenu("NeedForPee")]
	private void StartNeedForPee()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xA214A0", Offset = "0xA214A0", VA = "0xA214A0", Slot = "29")]
	public override void Trespasser(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xA2152C", Offset = "0xA2152C", VA = "0xA2152C")]
	private void TrespassingInsert()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xA21620", Offset = "0xA21620", VA = "0xA21620", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xA217EC", Offset = "0xA217EC", VA = "0xA217EC", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xA2192C", Offset = "0xA2192C", VA = "0xA2192C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xA21A40", Offset = "0xA21A40", VA = "0xA21A40", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xA21B98", Offset = "0xA21B98", VA = "0xA21B98", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xA21B9C", Offset = "0xA21B9C", VA = "0xA21B9C")]
	public LevelDirector_C7001_guardEntrance()
	{
	}
}
[Token(Token = "0x2000269")]
public class LevelDirector_C7001_guardGeneric : LevelDirector_base
{
	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string trespassingReactionID;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string grabbedReactionID;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<string> trespassingID;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string emoSFXOnTrespass;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool reactionOnGrab;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xA21D2C", Offset = "0xA21D2C", VA = "0xA21D2C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xA21DAC", Offset = "0xA21DAC", VA = "0xA21DAC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xA21E2C", Offset = "0xA21E2C", VA = "0xA21E2C", Slot = "29")]
	public virtual void Trespasser(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xA22008", Offset = "0xA22008", VA = "0xA22008", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xA21BA8", Offset = "0xA21BA8", VA = "0xA21BA8")]
	public LevelDirector_C7001_guardGeneric()
	{
	}
}
[Token(Token = "0x200026A")]
public class LevelDirector_C7001_guardShip : LevelDirector_C7001_guardGeneric
{
	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Rigidbody[] shipDisasterBS;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject humanAttach;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public FloatRigidbody shipFloatRB;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float angleBetweenShip;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject restrictedArea;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool shipLose;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool shipInWater;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool shipIsSinking;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	private bool areaLocked;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject explosions;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool reactionOnSlap;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Rigidbody gangway;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[EventRef]
	public string shipSinksSFX;

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xA22108", Offset = "0xA22108", VA = "0xA22108", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xA22274", Offset = "0xA22274", VA = "0xA22274")]
	public void SetReactions(bool which)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xA22284", Offset = "0xA22284", VA = "0xA22284", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xA22364", Offset = "0xA22364", VA = "0xA22364", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xA22444", Offset = "0xA22444", VA = "0xA22444")]
	[ContextMenu("ReleaseShip")]
	private void ReleaseShip()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xA226A0", Offset = "0xA226A0", VA = "0xA226A0")]
	private void LockArea(bool mode)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xA226AC", Offset = "0xA226AC", VA = "0xA226AC", Slot = "30")]
	public virtual void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xA22770", Offset = "0xA22770", VA = "0xA22770")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xA22884", Offset = "0xA22884", VA = "0xA22884")]
	private void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xA228A0", Offset = "0xA228A0", VA = "0xA228A0")]
	private void FollowShip()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xA22174", Offset = "0xA22174", VA = "0xA22174")]
	private void SetShipRBs(bool mode)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xA2294C", Offset = "0xA2294C", VA = "0xA2294C")]
	public void UnlockArea()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xA22954", Offset = "0xA22954", VA = "0xA22954")]
	private void TapReact()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xA22A04", Offset = "0xA22A04", VA = "0xA22A04", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xA22AA4", Offset = "0xA22AA4", VA = "0xA22AA4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xA22B14", Offset = "0xA22B14", VA = "0xA22B14")]
	public LevelDirector_C7001_guardShip()
	{
	}
}
[Token(Token = "0x200026B")]
public class LevelDirector_C7001_heistHeroes : LevelDirector_base
{
	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool elevatorReset;

	[Token(Token = "0x4000ED6")]
	private const string flossenhammerTrigger = "flossenhammerTrigger";

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xA22B18", Offset = "0xA22B18", VA = "0xA22B18", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xA22BDC", Offset = "0xA22BDC", VA = "0xA22BDC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xA22CA0", Offset = "0xA22CA0", VA = "0xA22CA0", Slot = "29")]
	public virtual void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xA22D98", Offset = "0xA22D98", VA = "0xA22D98", Slot = "30")]
	public virtual void PositionOverPoolReached(bool enter)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xA22E28", Offset = "0xA22E28", VA = "0xA22E28", Slot = "31")]
	public virtual void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xA23050", Offset = "0xA23050", VA = "0xA23050")]
	public LevelDirector_C7001_heistHeroes()
	{
	}
}
[Token(Token = "0x200026C")]
public class LevelDirector_C7001_mayor : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Animation Gears;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Animation Pistons;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject FactoryFX;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool factoryIsOn;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base workerFactory;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject factoryLock;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AutoSpawn[] spawners;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xA23060", Offset = "0xA23060", VA = "0xA23060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xA23134", Offset = "0xA23134", VA = "0xA23134")]
	public void UnlockFactoryWindow(bool which)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xA2308C", Offset = "0xA2308C", VA = "0xA2308C")]
	[ContextMenu("factoryOn")]
	private void SetFactory(bool which)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xA23158", Offset = "0xA23158", VA = "0xA23158", Slot = "31")]
	public override void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xA232D8", Offset = "0xA232D8", VA = "0xA232D8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xA23260", Offset = "0xA23260", VA = "0xA23260")]
	public void MayorOnTarget()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xA234C8", Offset = "0xA234C8", VA = "0xA234C8")]
	[ContextMenu("FactoryStart")]
	private void FactoryStart()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xA23540", Offset = "0xA23540", VA = "0xA23540")]
	public LevelDirector_C7001_mayor()
	{
	}
}
[Token(Token = "0x200026D")]
public class LevelDirector_C7001_professor : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform professorAttach;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform amtMachine;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform jitterRoot;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base amtLeveldirector;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform LuskCabin;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject bossCore;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] GasEmitters;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool gas;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Animation ani;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool inPosition;

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xA23550", Offset = "0xA23550", VA = "0xA23550")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xA23554", Offset = "0xA23554", VA = "0xA23554", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xA235A0", Offset = "0xA235A0", VA = "0xA235A0", Slot = "31")]
	public override void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xA236B0", Offset = "0xA236B0", VA = "0xA236B0")]
	public void PositionReached()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xA237DC", Offset = "0xA237DC", VA = "0xA237DC")]
	public void RevealLusk()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xA23800", Offset = "0xA23800", VA = "0xA23800")]
	[ContextMenu("TestAmtReveal")]
	private void TestAmtReveal()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xA2380C", Offset = "0xA2380C", VA = "0xA2380C")]
	public void TriggerAMTReveal(float _duration = 8f, float _delay = 0f)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xA238F4", Offset = "0xA238F4", VA = "0xA238F4")]
	[ContextMenu("AnimateRobot")]
	public void AnimateRobot()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xA23910", Offset = "0xA23910", VA = "0xA23910")]
	[ContextMenu("ToggleGas")]
	public void ToggleGas()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xA2391C", Offset = "0xA2391C", VA = "0xA2391C")]
	public void ToggleGas(float delayLight, float lightDuration)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xA23A14", Offset = "0xA23A14", VA = "0xA23A14")]
	private void StartCough()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xA23A38", Offset = "0xA23A38", VA = "0xA23A38")]
	private void StartElviraHurt()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xA23B20", Offset = "0xA23B20", VA = "0xA23B20")]
	private void FadeLight()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xA23B3C", Offset = "0xA23B3C", VA = "0xA23B3C")]
	public LevelDirector_C7001_professor()
	{
	}
}
[Token(Token = "0x200026E")]
public class LevelDirector_C7001_raylamp : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rayisOutside;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject elevatorBlock;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int characterHits;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xA23B4C", Offset = "0xA23B4C", VA = "0xA23B4C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xA23C0C", Offset = "0xA23C0C", VA = "0xA23C0C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xA23CA8", Offset = "0xA23CA8", VA = "0xA23CA8")]
	private void DestinationReached(string _id)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xA23DE4", Offset = "0xA23DE4", VA = "0xA23DE4", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xA24028", Offset = "0xA24028", VA = "0xA24028")]
	public LevelDirector_C7001_raylamp()
	{
	}
}
[Token(Token = "0x200026F")]
public class LevelDirector_C7001_scupporgy : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Rigidbody[] craneControl;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform[] LatchRings;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject Led_ON;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject Led_OFF;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject gangwayWaypoint;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool boxOpen;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xA24038", Offset = "0xA24038", VA = "0xA24038", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xA24154", Offset = "0xA24154", VA = "0xA24154")]
	[ContextMenu("EnableCrane")]
	public void EnableCrane()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xA24084", Offset = "0xA24084", VA = "0xA24084")]
	private void LockCraneControl(bool mode)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xA2419C", Offset = "0xA2419C", VA = "0xA2419C", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xA243A8", Offset = "0xA243A8", VA = "0xA243A8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xA242D8", Offset = "0xA242D8", VA = "0xA242D8")]
	private void OpenBoxBriefing()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xA2449C", Offset = "0xA2449C", VA = "0xA2449C")]
	public void JointBreak()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xA246B4", Offset = "0xA246B4", VA = "0xA246B4")]
	public LevelDirector_C7001_scupporgy()
	{
	}
}
[Token(Token = "0x2000270")]
public class LevelDirector_C7001_Sister : LevelDirector_base
{
	[Token(Token = "0x2000271")]
	private enum State
	{
		[Token(Token = "0x4000F25")]
		None,
		[Token(Token = "0x4000F26")]
		WaitForConvo,
		[Token(Token = "0x4000F27")]
		WaitForConvoDone
	}

	[Token(Token = "0x2000272")]
	public enum Phase
	{
		[Token(Token = "0x4000F29")]
		intro,
		[Token(Token = "0x4000F2A")]
		entranceGuardRemoved,
		[Token(Token = "0x4000F2B")]
		gangwaySnatched,
		[Token(Token = "0x4000F2C")]
		gangwayPositioned,
		[Token(Token = "0x4000F2D")]
		rayLampPositioned,
		[Token(Token = "0x4000F2E")]
		scupPorgyInElevator,
		[Token(Token = "0x4000F2F")]
		craneControlReady,
		[Token(Token = "0x4000F30")]
		factoryStarted,
		[Token(Token = "0x4000F31")]
		sharksSedated,
		[Token(Token = "0x4000F32")]
		plugPulled,
		[Token(Token = "0x4000F33")]
		computerAccessed
	}

	[Token(Token = "0x2000273")]
	[CompilerGenerated]
	private sealed class <Intro>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xA25EA0", Offset = "0xA25EA0", VA = "0xA25EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xA25EE8", Offset = "0xA25EE8", VA = "0xA25EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xA24968", Offset = "0xA24968", VA = "0xA24968")]
		[DebuggerHidden]
		public <Intro>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xA25B18", Offset = "0xA25B18", VA = "0xA25B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xA25B1C", Offset = "0xA25B1C", VA = "0xA25B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xA25EA8", Offset = "0xA25EA8", VA = "0xA25EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[CompilerGenerated]
	private sealed class <Entrance>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xA26000", Offset = "0xA26000", VA = "0xA26000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xA26048", Offset = "0xA26048", VA = "0xA26048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xA24A04", Offset = "0xA24A04", VA = "0xA24A04")]
		[DebuggerHidden]
		public <Entrance>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xA25EF0", Offset = "0xA25EF0", VA = "0xA25EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xA25EF4", Offset = "0xA25EF4", VA = "0xA25EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xA26008", Offset = "0xA26008", VA = "0xA26008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <ShipGangway>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xA2616C", Offset = "0xA2616C", VA = "0xA2616C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xA261B4", Offset = "0xA261B4", VA = "0xA261B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xA24AA0", Offset = "0xA24AA0", VA = "0xA24AA0")]
		[DebuggerHidden]
		public <ShipGangway>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xA26050", Offset = "0xA26050", VA = "0xA26050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xA26054", Offset = "0xA26054", VA = "0xA26054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xA26174", Offset = "0xA26174", VA = "0xA26174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[CompilerGenerated]
	private sealed class <GangwayEntrance>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xA263F4", Offset = "0xA263F4", VA = "0xA263F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xA2643C", Offset = "0xA2643C", VA = "0xA2643C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xA24B3C", Offset = "0xA24B3C", VA = "0xA24B3C")]
		[DebuggerHidden]
		public <GangwayEntrance>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xA261BC", Offset = "0xA261BC", VA = "0xA261BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xA261C0", Offset = "0xA261C0", VA = "0xA261C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA263FC", Offset = "0xA263FC", VA = "0xA263FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[CompilerGenerated]
	private sealed class <DogsCrane>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xA26524", Offset = "0xA26524", VA = "0xA26524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xA2656C", Offset = "0xA2656C", VA = "0xA2656C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA24BD8", Offset = "0xA24BD8", VA = "0xA24BD8")]
		[DebuggerHidden]
		public <DogsCrane>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xA26444", Offset = "0xA26444", VA = "0xA26444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xA26448", Offset = "0xA26448", VA = "0xA26448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xA2652C", Offset = "0xA2652C", VA = "0xA2652C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private sealed class <Factory>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xA26764", Offset = "0xA26764", VA = "0xA26764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xA267AC", Offset = "0xA267AC", VA = "0xA267AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xA24C74", Offset = "0xA24C74", VA = "0xA24C74")]
		[DebuggerHidden]
		public <Factory>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xA26574", Offset = "0xA26574", VA = "0xA26574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xA26578", Offset = "0xA26578", VA = "0xA26578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xA2676C", Offset = "0xA2676C", VA = "0xA2676C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <Sharks>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xA26894", Offset = "0xA26894", VA = "0xA26894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xA268DC", Offset = "0xA268DC", VA = "0xA268DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xA24D10", Offset = "0xA24D10", VA = "0xA24D10")]
		[DebuggerHidden]
		public <Sharks>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xA267B4", Offset = "0xA267B4", VA = "0xA267B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xA267B8", Offset = "0xA267B8", VA = "0xA267B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xA2689C", Offset = "0xA2689C", VA = "0xA2689C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[CompilerGenerated]
	private sealed class <Pool>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xA269D8", Offset = "0xA269D8", VA = "0xA269D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xA26A20", Offset = "0xA26A20", VA = "0xA26A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xA24DAC", Offset = "0xA24DAC", VA = "0xA24DAC")]
		[DebuggerHidden]
		public <Pool>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xA268E4", Offset = "0xA268E4", VA = "0xA268E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xA268E8", Offset = "0xA268E8", VA = "0xA268E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xA269E0", Offset = "0xA269E0", VA = "0xA269E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027B")]
	[CompilerGenerated]
	private sealed class <Vault>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0xA26B08", Offset = "0xA26B08", VA = "0xA26B08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xA26B50", Offset = "0xA26B50", VA = "0xA26B50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xA24E48", Offset = "0xA24E48", VA = "0xA24E48")]
		[DebuggerHidden]
		public <Vault>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xA26A28", Offset = "0xA26A28", VA = "0xA26A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xA26A2C", Offset = "0xA26A2C", VA = "0xA26A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xA26B10", Offset = "0xA26B10", VA = "0xA26B10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027C")]
	[CompilerGenerated]
	private sealed class <AMT>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xA27550", Offset = "0xA27550", VA = "0xA27550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xA27598", Offset = "0xA27598", VA = "0xA27598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xA24EE4", Offset = "0xA24EE4", VA = "0xA24EE4")]
		[DebuggerHidden]
		public <AMT>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xA26B58", Offset = "0xA26B58", VA = "0xA26B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xA26B5C", Offset = "0xA26B5C", VA = "0xA26B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xA27558", Offset = "0xA27558", VA = "0xA27558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_C7001_Sister sister;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_C7001_professor professor;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_C7001_mayor mayor;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base scupPorgy;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base rayLamp;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base flossenhammer;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_C7001_guardShip shipGuard;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_C7001_guardEntrance gateGuard;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LevelDirector_base amtLeveldirector;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Phase sequencePhase;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool entranceGuardRemoved;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
	public bool gangwaySnatched;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
	public bool gangwayPositioned;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FB")]
	public bool rayLampPositioned;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public bool scupPorgyInElevator;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
	public bool craneControlReady;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
	public bool factoryStarted;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FF")]
	public bool sharksSedated;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool plugPulled;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public bool computerAccessed;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
	public bool introTrespassing;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
	private bool gangwayGrabCheck;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool gangwayGrabbed;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ConstructionTargetManual target_sharkTestExplosion;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public ConstructionTargetManual target_entranceGuardRemoved;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public ConstructionTargetManual target_gangwaySnatched;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public ConstructionTarget target_gangwayPositioned;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ConstructionTargetManual target_rayLampPositioned;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public ConstructionTargetManual target_scupPorgyInElevator;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public ConstructionTargetManual target_craneControlReady;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ConstructionTargetManual target_factoryStarted;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public ConstructionTargetManual target_sharksSedated;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public ConstructionTargetManual target_plugPulled;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public ConstructionTargetManual target_computerAccessed;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public PoolPlugLogic plugLogic;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject gangway;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public MolluskWebcam webcam;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelDirector_C7001_Sister _instance;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private bool debugCraneEnabled;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	private bool debugfactoryStarted;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
	private bool debugSharksSedated;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27B")]
	private bool debugPlugPulled;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private bool debugVaultReached;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
	private bool debugGasToggled;

	[Token(Token = "0x170000F4")]
	public static LevelDirector_C7001_Sister Instance
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xA246C4", Offset = "0xA246C4", VA = "0xA246C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xA24850", Offset = "0xA24850", VA = "0xA24850", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xA248A4", Offset = "0xA248A4", VA = "0xA248A4")]
	[IteratorStateMachine(typeof(<Intro>d__48))]
	private IEnumerator Intro()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xA24990", Offset = "0xA24990", VA = "0xA24990")]
	[IteratorStateMachine(typeof(<Entrance>d__49))]
	private IEnumerator Entrance()
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xA24A2C", Offset = "0xA24A2C", VA = "0xA24A2C")]
	[IteratorStateMachine(typeof(<ShipGangway>d__50))]
	private IEnumerator ShipGangway()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xA24AC8", Offset = "0xA24AC8", VA = "0xA24AC8")]
	[IteratorStateMachine(typeof(<GangwayEntrance>d__51))]
	private IEnumerator GangwayEntrance()
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xA24B64", Offset = "0xA24B64", VA = "0xA24B64")]
	[IteratorStateMachine(typeof(<DogsCrane>d__52))]
	private IEnumerator DogsCrane()
	{
		return null;
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xA24C00", Offset = "0xA24C00", VA = "0xA24C00")]
	[IteratorStateMachine(typeof(<Factory>d__53))]
	private IEnumerator Factory()
	{
		return null;
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xA24C9C", Offset = "0xA24C9C", VA = "0xA24C9C")]
	[IteratorStateMachine(typeof(<Sharks>d__54))]
	private IEnumerator Sharks()
	{
		return null;
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xA24D38", Offset = "0xA24D38", VA = "0xA24D38")]
	[IteratorStateMachine(typeof(<Pool>d__55))]
	private IEnumerator Pool()
	{
		return null;
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xA24DD4", Offset = "0xA24DD4", VA = "0xA24DD4")]
	[IteratorStateMachine(typeof(<Vault>d__56))]
	private IEnumerator Vault()
	{
		return null;
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xA24E70", Offset = "0xA24E70", VA = "0xA24E70")]
	[IteratorStateMachine(typeof(<AMT>d__57))]
	private IEnumerator AMT()
	{
		return null;
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xA24F0C", Offset = "0xA24F0C", VA = "0xA24F0C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xA24FEC", Offset = "0xA24FEC", VA = "0xA24FEC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xA250CC", Offset = "0xA250CC", VA = "0xA250CC")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xA21B08", Offset = "0xA21B08", VA = "0xA21B08")]
	public void PauseConvo([Optional] LevelDirector_base _levelDirector)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xA25158", Offset = "0xA25158", VA = "0xA25158")]
	private void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xA251D0", Offset = "0xA251D0", VA = "0xA251D0")]
	private bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xA2534C", Offset = "0xA2534C", VA = "0xA2534C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xA24918", Offset = "0xA24918", VA = "0xA24918")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xA25428", Offset = "0xA25428", VA = "0xA25428", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xA25574", Offset = "0xA25574", VA = "0xA25574")]
	private void Trespasser(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xA212C4", Offset = "0xA212C4", VA = "0xA212C4")]
	public void EntranceGuardRemoved()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xA22650", Offset = "0xA22650", VA = "0xA22650")]
	public void GangwaySnatched()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xA254C0", Offset = "0xA254C0", VA = "0xA254C0")]
	public void GangwayPositioned()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xA23DA8", Offset = "0xA23DA8", VA = "0xA23DA8")]
	public void RayLampPositioned()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xA2429C", Offset = "0xA2429C", VA = "0xA2429C")]
	public void ScupPorgyInElevator()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xA24664", Offset = "0xA24664", VA = "0xA24664")]
	public void CraneControlReady()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xA234F0", Offset = "0xA234F0", VA = "0xA234F0")]
	public void FactoryStarted()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xA255F4", Offset = "0xA255F4", VA = "0xA255F4")]
	public void SharksSedated()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xA25698", Offset = "0xA25698", VA = "0xA25698")]
	public void PlugPulled()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xA2378C", Offset = "0xA2378C", VA = "0xA2378C")]
	[ContextMenu("ComputerAccessed")]
	public void ComputerAccessed()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xA256E8", Offset = "0xA256E8", VA = "0xA256E8")]
	public void DebugEnableCrane()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xA257A0", Offset = "0xA257A0", VA = "0xA257A0")]
	public void DebugStartFactory()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xA25850", Offset = "0xA25850", VA = "0xA25850")]
	public void DebugSedateSharks()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xA25904", Offset = "0xA25904", VA = "0xA25904")]
	public void DebugPullPlug()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xA259A8", Offset = "0xA259A8", VA = "0xA259A8")]
	public void DebugVaultReached()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xA25A30", Offset = "0xA25A30", VA = "0xA25A30")]
	public void DebugStartGas()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xA25AC0", Offset = "0xA25AC0", VA = "0xA25AC0")]
	public LevelDirector_C7001_Sister()
	{
	}
}
[Token(Token = "0x200027D")]
public class LevelDirector_C8001_IslandBooster_Mollusk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x200027E")]
	public enum Marker
	{
		[Token(Token = "0x4000F78")]
		none,
		[Token(Token = "0x4000F79")]
		briefing,
		[Token(Token = "0x4000F7A")]
		targetsDone,
		[Token(Token = "0x4000F7B")]
		poseQuestion,
		[Token(Token = "0x4000F7C")]
		answerYes
	}

	[Token(Token = "0x200027F")]
	[CompilerGenerated]
	private sealed class <IslandBooster>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Marker marker;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C8001_IslandBooster_Mollusk <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xA29950", Offset = "0xA29950", VA = "0xA29950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xA29998", Offset = "0xA29998", VA = "0xA29998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xA2789C", Offset = "0xA2789C", VA = "0xA2789C")]
		[DebuggerHidden]
		public <IslandBooster>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xA28D88", Offset = "0xA28D88", VA = "0xA28D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xA28D8C", Offset = "0xA28D8C", VA = "0xA28D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xA29958", Offset = "0xA29958", VA = "0xA29958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[CompilerGenerated]
	private sealed class <ExplodeClamps>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C8001_IslandBooster_Mollusk <>4__this;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform[] <>7__wrap1;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xA29B48", Offset = "0xA29B48", VA = "0xA29B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xA29B90", Offset = "0xA29B90", VA = "0xA29B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xA28AF4", Offset = "0xA28AF4", VA = "0xA28AF4")]
		[DebuggerHidden]
		public <ExplodeClamps>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xA299A0", Offset = "0xA299A0", VA = "0xA299A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xA299A4", Offset = "0xA299A4", VA = "0xA299A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xA29B50", Offset = "0xA29B50", VA = "0xA29B50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform[] clamps;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionRocket mainBooster;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public CrystalEnergyBase catalyser;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GlueConnections boosterGlued;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject exploPrefab;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int energyLevel;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Glued LandMass;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3 landMassStartPos;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Rigidbody landmassRB;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Glued leftAttach;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Glued rightAttach;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool boosterArmed;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public EntityDefinition powerSlingEntityDef;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int connectedPowerslingsRequired;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public EntityDefinition[] connectedEntityDefsNeeded;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public ConstructionTargetManual[] slingTargets;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ConstructionTargetManual boosterArmedTarget;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int connectedSlingsToLandmass;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 boosterPosition;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float timerAfterFullPower;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public StayInPlace quadcopterController;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Transform quadcopterLaunchTarget;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Transform luskHover;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject rubble;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform luskLeave;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public WeightCounterForce weightCounterForce;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject limits;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool luskbeforeBreakOff;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float nextJumpOff;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float shakeOffset;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private bool helpShoutTriggered;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AD")]
	private bool landmassReleased;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AE")]
	private bool released;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private int questionAnswered;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private bool wasDone;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xA275A0", Offset = "0xA275A0", VA = "0xA275A0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xA277C8", Offset = "0xA277C8", VA = "0xA277C8")]
	[IteratorStateMachine(typeof(<IslandBooster>d__31))]
	private IEnumerator IslandBooster(Marker marker = Marker.none)
	{
		return null;
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xA278C4", Offset = "0xA278C4", VA = "0xA278C4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xA27A18", Offset = "0xA27A18", VA = "0xA27A18", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xA27B6C", Offset = "0xA27B6C", VA = "0xA27B6C")]
	private void EnergyLevelChange(int _level)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xA27E70", Offset = "0xA27E70", VA = "0xA27E70")]
	private void ChainChange(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xA27E88", Offset = "0xA27E88", VA = "0xA27E88")]
	private int CheckAttach(Glued whichAttach)
	{
		return default(int);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xA27DD8", Offset = "0xA27DD8", VA = "0xA27DD8")]
	private void CheckConnectionsToIsland()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xA27B88", Offset = "0xA27B88", VA = "0xA27B88")]
	private void CheckEnergyFlow()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xA281A8", Offset = "0xA281A8", VA = "0xA281A8")]
	private float GetRND(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xA281B0", Offset = "0xA281B0", VA = "0xA281B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xA28520", Offset = "0xA28520", VA = "0xA28520")]
	private void JumpOff()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xA284D0", Offset = "0xA284D0", VA = "0xA284D0")]
	private void ReleaseLandmass()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xA287A0", Offset = "0xA287A0", VA = "0xA287A0")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xA287B4", Offset = "0xA287B4", VA = "0xA287B4")]
	[ContextMenu("ReleaseBooster")]
	public void ReleaseBoosterAndLaunch()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xA28828", Offset = "0xA28828", VA = "0xA28828")]
	private void DisableUnglueBurnout()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xA28A80", Offset = "0xA28A80", VA = "0xA28A80")]
	[IteratorStateMachine(typeof(<ExplodeClamps>d__52))]
	private IEnumerator ExplodeClamps()
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xA28B1C", Offset = "0xA28B1C", VA = "0xA28B1C")]
	[ContextMenu("open")]
	public void OpenClamps()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xA28BE4", Offset = "0xA28BE4", VA = "0xA28BE4", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xA28C98", Offset = "0xA28C98", VA = "0xA28C98", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xA28D04", Offset = "0xA28D04", VA = "0xA28D04")]
	public LevelDirector_C8001_IslandBooster_Mollusk()
	{
	}
}
[Token(Token = "0x2000281")]
public class LevelDirector_C9001_chitChat : LevelDirector_base
{
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xA29B98", Offset = "0xA29B98", VA = "0xA29B98", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xA29C1C", Offset = "0xA29C1C", VA = "0xA29C1C")]
	public LevelDirector_C9001_chitChat()
	{
	}
}
[Token(Token = "0x2000282")]
public class LevelDirector_C9001_tutorial : LevelDirector_Cutscene
{
	[Token(Token = "0x2000283")]
	[CompilerGenerated]
	private sealed class <Convo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9001_tutorial <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xA2A3C8", Offset = "0xA2A3C8", VA = "0xA2A3C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xA2A410", Offset = "0xA2A410", VA = "0xA2A410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xA29CC4", Offset = "0xA29CC4", VA = "0xA29CC4")]
		[DebuggerHidden]
		public <Convo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xA29D50", Offset = "0xA29D50", VA = "0xA29D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xA29D54", Offset = "0xA29D54", VA = "0xA29D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xA2A3D0", Offset = "0xA2A3D0", VA = "0xA2A3D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xA29C24", Offset = "0xA29C24", VA = "0xA29C24", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xA29C50", Offset = "0xA29C50", VA = "0xA29C50")]
	[IteratorStateMachine(typeof(<Convo>d__1))]
	private IEnumerator Convo()
	{
		return null;
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xA29CEC", Offset = "0xA29CEC", VA = "0xA29CEC")]
	public LevelDirector_C9001_tutorial()
	{
	}
}
[Token(Token = "0x2000284")]
public class LevelDirector_C9100_Fitness_ConcreteBlock : LevelDirector_base
{
	[Token(Token = "0x2000285")]
	public enum State
	{
		[Token(Token = "0x4000F9D")]
		none,
		[Token(Token = "0x4000F9E")]
		minimum,
		[Token(Token = "0x4000F9F")]
		maximum
	}

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EntityDefinition concreteBlockDefinition;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float minDistance;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float targetDistance;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<ConstructionTargetManual> targets;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int distanceStepsRequired;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int currentDistanceSteps;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int maxDistance;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Achievement achivement400;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Achievement achivement200;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AutoSpawn spawner;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int steps;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int blocksLost;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public State stateReached;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<GameObject> blocksLostList;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float diff;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform throwMeasureRoot;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform angleMeasureRoot;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform distanceMarkerRoot;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool levelDone;

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xA2A418", Offset = "0xA2A418", VA = "0xA2A418", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xA2A790", Offset = "0xA2A790", VA = "0xA2A790", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xA2A8C4", Offset = "0xA2A8C4", VA = "0xA2A8C4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xA2A9F8", Offset = "0xA2A9F8", VA = "0xA2A9F8")]
	private void DestroyIt(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xA2AC2C", Offset = "0xA2AC2C", VA = "0xA2AC2C")]
	private void ObjectSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xA2AD04", Offset = "0xA2AD04", VA = "0xA2AD04")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xA2B144", Offset = "0xA2B144", VA = "0xA2B144")]
	private void ShowProgress()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xA2B15C", Offset = "0xA2B15C", VA = "0xA2B15C")]
	private void AddStep()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xA2B4CC", Offset = "0xA2B4CC", VA = "0xA2B4CC")]
	[ContextMenu("DebugNextDistance")]
	private void DebugNextDistance()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xA2A6AC", Offset = "0xA2A6AC", VA = "0xA2A6AC")]
	private void NextDistance()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xA2B4E4", Offset = "0xA2B4E4", VA = "0xA2B4E4", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xA2B4F0", Offset = "0xA2B4F0", VA = "0xA2B4F0")]
	public LevelDirector_C9100_Fitness_ConcreteBlock()
	{
	}
}
[Token(Token = "0x2000286")]
public class LevelDirector_C9101_workout_peanutbutter : LevelDirector_Cutscene
{
	[Token(Token = "0x2000287")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9101_workout_peanutbutter <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xA2BE1C", Offset = "0xA2BE1C", VA = "0xA2BE1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xA2BE64", Offset = "0xA2BE64", VA = "0xA2BE64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xA2B75C", Offset = "0xA2B75C", VA = "0xA2B75C")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xA2B788", Offset = "0xA2B788", VA = "0xA2B788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xA2B78C", Offset = "0xA2B78C", VA = "0xA2B78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xA2BE24", Offset = "0xA2BE24", VA = "0xA2BE24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ParachuteRespawnTracker barrelTracker;

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xA2B590", Offset = "0xA2B590", VA = "0xA2B590", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xA2B6E8", Offset = "0xA2B6E8", VA = "0xA2B6E8")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__2))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xA2B784", Offset = "0xA2B784", VA = "0xA2B784")]
	public LevelDirector_C9101_workout_peanutbutter()
	{
	}
}
[Token(Token = "0x2000288")]
public class LevelDirector_C9102_bloodSample : LevelDirector_Cutscene
{
	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <ConvoSequence>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9102_bloodSample <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xA2CC64", Offset = "0xA2CC64", VA = "0xA2CC64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xA2CCAC", Offset = "0xA2CCAC", VA = "0xA2CCAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xA2C34C", Offset = "0xA2C34C", VA = "0xA2C34C")]
		[DebuggerHidden]
		public <ConvoSequence>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xA2C500", Offset = "0xA2C500", VA = "0xA2C500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xA2C504", Offset = "0xA2C504", VA = "0xA2C504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xA2CC6C", Offset = "0xA2CC6C", VA = "0xA2CC6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Rigidbody hospitalRB;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool syringeAttachedToHospital;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	private bool syringeInserted;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool syringeUnloaded;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool syringeFilled;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject shipDelivery;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public ConstructionTargetManual syringeInsertedTarget;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ConstructionTargetManual syringeFilledTarget;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public ConstructionTargetManual syringeUnloadedTarget;

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xA2BE6C", Offset = "0xA2BE6C", VA = "0xA2BE6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xA2BE8C", Offset = "0xA2BE8C", VA = "0xA2BE8C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xA2BF2C", Offset = "0xA2BF2C", VA = "0xA2BF2C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xA2C13C", Offset = "0xA2C13C", VA = "0xA2C13C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xA2BEB8", Offset = "0xA2BEB8", VA = "0xA2BEB8")]
	[IteratorStateMachine(typeof(<ConvoSequence>d__13))]
	private IEnumerator ConvoSequence()
	{
		return null;
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xA2C374", Offset = "0xA2C374", VA = "0xA2C374")]
	private void SyringeInserted(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xA2C3AC", Offset = "0xA2C3AC", VA = "0xA2C3AC")]
	private void SyringeFilled(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xA2C3E4", Offset = "0xA2C3E4", VA = "0xA2C3E4")]
	private void SyringeUnloadStarted(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xA2C4FC", Offset = "0xA2C4FC", VA = "0xA2C4FC")]
	public LevelDirector_C9102_bloodSample()
	{
	}
}
[Token(Token = "0x200028A")]
public class LevelDirector_C9999_SandboxTutorial2 : LevelDirector_base
{
	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget[] recylceTargets;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumanController assistant;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget entityLoadTarget;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public StayInPlace balloon;

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xA2CCB4", Offset = "0xA2CCB4", VA = "0xA2CCB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xA2CCBC", Offset = "0xA2CCBC", VA = "0xA2CCBC")]
	private void LockTargets(bool which = true)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xA2CD04", Offset = "0xA2CD04", VA = "0xA2CD04", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xA2CD88", Offset = "0xA2CD88", VA = "0xA2CD88")]
	[ContextMenu("SetBalloon")]
	private void SetBalloon()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xA2CDA8", Offset = "0xA2CDA8", VA = "0xA2CDA8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xA2CFAC", Offset = "0xA2CFAC", VA = "0xA2CFAC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xA2D214", Offset = "0xA2D214", VA = "0xA2D214", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA2D240", Offset = "0xA2D240", VA = "0xA2D240")]
	public LevelDirector_C9999_SandboxTutorial2()
	{
	}
}
[Token(Token = "0x200028B")]
public class LevelDirector_ClearProgress : LevelDirector_base
{
	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool deleteInitialised;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SaveSlotManager saveSlotManager;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool blocked;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA2D248", Offset = "0xA2D248", VA = "0xA2D248", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xA2D2D4", Offset = "0xA2D2D4", VA = "0xA2D2D4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xA2D360", Offset = "0xA2D360", VA = "0xA2D360")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xA2D384", Offset = "0xA2D384", VA = "0xA2D384")]
	public void DeleteInit()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xA2D458", Offset = "0xA2D458", VA = "0xA2D458", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA2D68C", Offset = "0xA2D68C", VA = "0xA2D68C")]
	public void ResetQuit()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA2D6C4", Offset = "0xA2D6C4", VA = "0xA2D6C4")]
	private void DeleteProgress()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xA2D6E8", Offset = "0xA2D6E8", VA = "0xA2D6E8")]
	public LevelDirector_ClearProgress()
	{
	}
}
[Token(Token = "0x200028C")]
public class LevelDirector_Cutscene : LevelDirector_base
{
	[Token(Token = "0x200028D")]
	public enum Actor
	{
		[Token(Token = "0x4000FCF")]
		None = 0,
		[Token(Token = "0x4000FD0")]
		DocFlossenhammer = 1,
		[Token(Token = "0x4000FD1")]
		ScupPorgy = 2,
		[Token(Token = "0x4000FD2")]
		Prowfish = 3,
		[Token(Token = "0x4000FD3")]
		Professor = 3,
		[Token(Token = "0x4000FD4")]
		RayLamp = 4,
		[Token(Token = "0x4000FD5")]
		Sister = 5,
		[Token(Token = "0x4000FD6")]
		Mayor = 6,
		[Token(Token = "0x4000FD7")]
		Lusk = 7,
		[Token(Token = "0x4000FD8")]
		CraneSisters = 8,
		[Token(Token = "0x4000FD9")]
		CraneSistersB = 9,
		[Token(Token = "0x4000FDA")]
		MadameGurnard = 10,
		[Token(Token = "0x4000FDB")]
		DonGamberino = 11,
		[Token(Token = "0x4000FDC")]
		Resetto = 12
	}

	[Token(Token = "0x200028E")]
	public enum State
	{
		[Token(Token = "0x4000FDE")]
		None,
		[Token(Token = "0x4000FDF")]
		WaitForAnyConvo,
		[Token(Token = "0x4000FE0")]
		WaitForConvo,
		[Token(Token = "0x4000FE1")]
		WaitForConvoDone,
		[Token(Token = "0x4000FE2")]
		WaitForQuestion,
		[Token(Token = "0x4000FE3")]
		WaitForQuestionDone,
		[Token(Token = "0x4000FE4")]
		WaitForRemote,
		[Token(Token = "0x4000FE5")]
		WaitForRemoteDone
	}

	[Token(Token = "0x4000FB7")]
	public const int ANSWER_NO = 0;

	[Token(Token = "0x4000FB8")]
	public const int ANSWER_YES = 1;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Actor wait_question_actor;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Actor wait_convo_actor;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Actor active_actor;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private State state;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string active_convoID;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool toolboxGrabbed;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool toolboxempty;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int wait_question_answer_result;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Grabbable toolBox;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base actor_flossenhammer;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base actor_prowfish;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base actor_sister;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base actor_mayor;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base actor_lusk;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base actor_scup;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base actor_ray;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LevelDirector_base actor_craneSisters;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LevelDirector_base actor_craneSistersB;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public LevelDirector_base actor_madameGurnard;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public LevelDirector_base actor_donGamberino;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public LevelDirector_base actor_levelResetto;

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xA2C05C", Offset = "0xA2C05C", VA = "0xA2C05C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xA2C26C", Offset = "0xA2C26C", VA = "0xA2C26C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xA2D6F0", Offset = "0xA2D6F0", VA = "0xA2D6F0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xA2A378", Offset = "0xA2A378", VA = "0xA2A378")]
	public int GetAnswer()
	{
		return default(int);
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xA2D7B4", Offset = "0xA2D7B4", VA = "0xA2D7B4", Slot = "17")]
	public override void QuestionAnswered(string _convoID, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xA2B61C", Offset = "0xA2B61C", VA = "0xA2B61C")]
	public LevelDirector_base getLevelDirector(Actor actor)
	{
		return null;
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xA2A244", Offset = "0xA2A244", VA = "0xA2A244")]
	public void Ask(Actor actor, string key, bool immediate = true, bool clearLast = true)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xA2A388", Offset = "0xA2A388", VA = "0xA2A388")]
	public void ClearLast(bool clearLast)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xA2A10C", Offset = "0xA2A10C", VA = "0xA2A10C")]
	public void Talk(Actor actor, string key, bool immediate = true, bool clearLast = true)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xA2A1C4", Offset = "0xA2A1C4", VA = "0xA2A1C4")]
	public bool WaitForConvoDone(Actor actor)
	{
		return default(bool);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xA2A2F8", Offset = "0xA2A2F8", VA = "0xA2A2F8")]
	public bool WaitForQuestionDone(Actor actor)
	{
		return default(bool);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xA2D878", Offset = "0xA2D878", VA = "0xA2D878")]
	private void OnGrabToolbox(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xA2D884", Offset = "0xA2D884", VA = "0xA2D884", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xA2D890", Offset = "0xA2D890", VA = "0xA2D890")]
	public bool WaitForToolboxGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xA2D8A0", Offset = "0xA2D8A0", VA = "0xA2D8A0")]
	[ContextMenu("WinTheLevelFadeout")]
	public void WinTheLevelFadeout(float fadeTime = 1.5f)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xA29CF0", Offset = "0xA29CF0", VA = "0xA29CF0")]
	public LevelDirector_Cutscene()
	{
	}
}
[Token(Token = "0x200028F")]
public class LevelDirector_CutsceneSimon : LevelDirector_base
{
	[Token(Token = "0x2000290")]
	private enum State
	{
		[Token(Token = "0x4000FED")]
		None,
		[Token(Token = "0x4000FEE")]
		WaitForConvo,
		[Token(Token = "0x4000FEF")]
		WaitForConvoDone
	}

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<LevelDirector_base> convoClearLevelDirectors;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool autoAddMeToClearList;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xA276D0", Offset = "0xA276D0", VA = "0xA276D0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xA29768", Offset = "0xA29768", VA = "0xA29768")]
	public void ClearAllConvos()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xA298D8", Offset = "0xA298D8", VA = "0xA298D8")]
	public void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xA295EC", Offset = "0xA295EC", VA = "0xA295EC")]
	public bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xA2D97C", Offset = "0xA2D97C", VA = "0xA2D97C")]
	public bool WaitForConvoDoneNoTranslate(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xA2DAFC", Offset = "0xA2DAFC", VA = "0xA2DAFC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xA2784C", Offset = "0xA2784C", VA = "0xA2784C")]
	public void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xA28D28", Offset = "0xA28D28", VA = "0xA28D28")]
	public LevelDirector_CutsceneSimon()
	{
	}
}
[Token(Token = "0x2000291")]
public class LevelDirector_foodCustomer : LevelDirector_base
{
	[Token(Token = "0x2000292")]
	public delegate void InitFoodCustomerDelegate(LevelDirector_foodCustomer customer);

	[Token(Token = "0x2000293")]
	public delegate void FoodCustomerResultDelegate(LevelDirector_foodCustomer customer, bool result);

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject foodTarget;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<EntityDefinition> foodOrderOptionsList;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string[] foodSymbols;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int currentfoodID;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<ConstructionTarget> myOrderTargets;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float orderTimer;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float orderAmount;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float orderTimerStep;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float maxOrderTime;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool customerDone;

	[Token(Token = "0x14000038")]
	public static event InitFoodCustomerDelegate OnInitFoodCustomer
	{
		[Token(Token = "0x600103C")]
		[Address(RVA = "0xA2DBD8", Offset = "0xA2DBD8", VA = "0xA2DBD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600103D")]
		[Address(RVA = "0xA2DC90", Offset = "0xA2DC90", VA = "0xA2DC90")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public static event FoodCustomerResultDelegate OnFoodCustomerResult
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0xA2DD48", Offset = "0xA2DD48", VA = "0xA2DD48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600103F")]
		[Address(RVA = "0xA2DE04", Offset = "0xA2DE04", VA = "0xA2DE04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xA2DEC0", Offset = "0xA2DEC0", VA = "0xA2DEC0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA2E318", Offset = "0xA2E318", VA = "0xA2E318", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA2DF58", Offset = "0xA2DF58", VA = "0xA2DF58")]
	[ContextMenu("NEW ORDER")]
	public void NewOrder()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xA2E3A4", Offset = "0xA2E3A4", VA = "0xA2E3A4")]
	private void OrderBubble()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xA2E450", Offset = "0xA2E450", VA = "0xA2E450")]
	private void OrderTimer()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xA2E494", Offset = "0xA2E494", VA = "0xA2E494")]
	private void OrderFailed()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xA2E538", Offset = "0xA2E538", VA = "0xA2E538")]
	private void OrderSuccesful()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xA2E5DC", Offset = "0xA2E5DC", VA = "0xA2E5DC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xA2E668", Offset = "0xA2E668", VA = "0xA2E668")]
	private void WrongDelivery(ConstructionTargetTriggersNoOnStay target, EntityDefinition wrongEntityDef)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xA2E730", Offset = "0xA2E730", VA = "0xA2E730")]
	public LevelDirector_foodCustomer()
	{
	}
}
[Token(Token = "0x2000294")]
public class LevelDirector_MayorMenu : LevelDirector_base
{
	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HingeSnap hingeSnap;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool openTriggered;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool wasJustCompleted;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Story introStory;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xA2EA70", Offset = "0xA2EA70", VA = "0xA2EA70", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xA2EA74", Offset = "0xA2EA74", VA = "0xA2EA74")]
	private void MayorStatusUpdate()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xA2EA78", Offset = "0xA2EA78", VA = "0xA2EA78")]
	public LevelDirector_MayorMenu()
	{
	}
}
[Token(Token = "0x2000295")]
public class LevelDirector_musician : LevelDirector_base
{
	[Token(Token = "0x2000296")]
	public delegate void MusicStateDelegate(LevelDirector_musician conductor, State _state);

	[Token(Token = "0x2000297")]
	public enum State
	{
		[Token(Token = "0x400101D")]
		stop,
		[Token(Token = "0x400101E")]
		play,
		[Token(Token = "0x400101F")]
		pause
	}

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public State musicState;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Animation myAnimation;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter studioEmitter;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[EventRef]
	public string musicTrack;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int ID;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool isConductor;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool playOnStart;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float pauseDuration;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public bool slapToSilence;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	public bool searchWaypointOnStart;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
	private bool isInterrupted;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
	public bool playInterruptedSFX;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[EventRef]
	public string interruptedSFX;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool hopToTheBeat;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float hopStartOffset;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float beatTimer;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public Vector3 danceForce;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Header("cannot dance without ignoring")]
	public bool playInterruptsAlsoOnTaps;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float minVelForHitsDetection;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool ignoreStaticRBHits;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool ignoreNonRbHits;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool musicEnded;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	public bool checkForMusicEnded;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float hitCoolDown;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float lastHit;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool hitSFX;

	[Token(Token = "0x1400003A")]
	public static event MusicStateDelegate OnMusicState
	{
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xA2EA80", Offset = "0xA2EA80", VA = "0xA2EA80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xA2EB38", Offset = "0xA2EB38", VA = "0xA2EB38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA2EBF0", Offset = "0xA2EBF0", VA = "0xA2EBF0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA2EE50", Offset = "0xA2EE50", VA = "0xA2EE50")]
	[ContextMenu("StartMusicians")]
	public void StopMusicians()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA2EEC0", Offset = "0xA2EEC0", VA = "0xA2EEC0")]
	[ContextMenu("StartMusicians")]
	public void StartMusicians()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA2EF30", Offset = "0xA2EF30", VA = "0xA2EF30")]
	private void MusicEvent(LevelDirector_musician conductor, State _state)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xA2F180", Offset = "0xA2F180", VA = "0xA2F180")]
	private void Timed()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xA2F34C", Offset = "0xA2F34C", VA = "0xA2F34C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xA2F538", Offset = "0xA2F538", VA = "0xA2F538", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xA2F654", Offset = "0xA2F654", VA = "0xA2F654")]
	private void PreLoad(bool what)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xA2F6CC", Offset = "0xA2F6CC", VA = "0xA2F6CC", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xA2F910", Offset = "0xA2F910", VA = "0xA2F910")]
	private void Interrupt()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xA2FA90", Offset = "0xA2FA90", VA = "0xA2FA90")]
	private void ResetMusic()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xA2F2B4", Offset = "0xA2F2B4", VA = "0xA2F2B4")]
	private void EndPlaying()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xA2FB70", Offset = "0xA2FB70", VA = "0xA2FB70")]
	public LevelDirector_musician()
	{
	}
}
[Token(Token = "0x2000298")]
public class LevelDirector_Quit : LevelDirector_base
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConfigurableJoint quitJoint;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public FixedJoint optionsJoint;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject optionsAttach;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool quitInitialised;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float levelLeaveWarning;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject nextButton;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject prevButton;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool wasPulled;

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xA2FC68", Offset = "0xA2FC68", VA = "0xA2FC68", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xA2FD9C", Offset = "0xA2FD9C", VA = "0xA2FD9C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xA2FE28", Offset = "0xA2FE28", VA = "0xA2FE28", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xA2FEB4", Offset = "0xA2FEB4", VA = "0xA2FEB4")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xA2FED8", Offset = "0xA2FED8", VA = "0xA2FED8")]
	public void OptionsPulled()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xA30250", Offset = "0xA30250", VA = "0xA30250")]
	public void QuitInit()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xA302FC", Offset = "0xA302FC", VA = "0xA302FC", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xA30230", Offset = "0xA30230", VA = "0xA30230")]
	private void GoOptions()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xA30510", Offset = "0xA30510", VA = "0xA30510")]
	private void QuitGame()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xA30530", Offset = "0xA30530", VA = "0xA30530")]
	public LevelDirector_Quit()
	{
	}
}
[Token(Token = "0x2000299")]
public class LevelDirector_R1 : LevelDirectorRockets_base
{
	[Token(Token = "0x6001072")]
	[Address(RVA = "0xA30540", Offset = "0xA30540", VA = "0xA30540")]
	public LevelDirector_R1()
	{
	}
}
[Token(Token = "0x200029A")]
public class LevelDirector_Resetti : LevelDirector_base
{
	[Token(Token = "0x200029B")]
	public enum ResettiState
	{
		[Token(Token = "0x400102D")]
		start,
		[Token(Token = "0x400102E")]
		customAction
	}

	[Token(Token = "0x200029C")]
	public delegate void AskedForHintDelegate(LevelDirector_Resetti resetti);

	[Token(Token = "0x200029D")]
	public delegate void TalkedToResettoDelegate(LevelDirector_Resetti resetti, string convoID);

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Level level;

	[Token(Token = "0x17000113")]
	public SpawnResetti spawnResetti
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0xA30830", Offset = "0xA30830", VA = "0xA30830")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001078")]
		[Address(RVA = "0xA30838", Offset = "0xA30838", VA = "0xA30838")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public static event AskedForHintDelegate OnAskedForHint
	{
		[Token(Token = "0x6001073")]
		[Address(RVA = "0xA30548", Offset = "0xA30548", VA = "0xA30548")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xA30600", Offset = "0xA30600", VA = "0xA30600")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event TalkedToResettoDelegate OnResettoConversationStarted
	{
		[Token(Token = "0x6001075")]
		[Address(RVA = "0xA306B8", Offset = "0xA306B8", VA = "0xA306B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xA30774", Offset = "0xA30774", VA = "0xA30774")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xA30848", Offset = "0xA30848", VA = "0xA30848", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xA30AF0", Offset = "0xA30AF0", VA = "0xA30AF0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xA30B60", Offset = "0xA30B60", VA = "0xA30B60", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xA30F38", Offset = "0xA30F38", VA = "0xA30F38")]
	private void WaitComments()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xA31034", Offset = "0xA31034", VA = "0xA31034")]
	private void DrawingDone()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xA3114C", Offset = "0xA3114C", VA = "0xA3114C")]
	private void DrawingDoneAttract()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xA31250", Offset = "0xA31250", VA = "0xA31250", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xA3131C", Offset = "0xA3131C", VA = "0xA3131C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xA313C4", Offset = "0xA313C4", VA = "0xA313C4")]
	public LevelDirector_Resetti()
	{
	}
}
[Token(Token = "0x200029E")]
public class LevelDirector_Sandbox : LevelDirector_base
{
	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool actionBlock;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float lastSaveWait;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool saveOnExit;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA31678", Offset = "0xA31678", VA = "0xA31678", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA316BC", Offset = "0xA316BC", VA = "0xA316BC")]
	private void SaveFeedback()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA31694", Offset = "0xA31694", VA = "0xA31694")]
	private void DefaultSandboxChatter()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA31774", Offset = "0xA31774", VA = "0xA31774")]
	public void ButtonSave()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA317AC", Offset = "0xA317AC", VA = "0xA317AC")]
	public void ButtonReset()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA31850", Offset = "0xA31850", VA = "0xA31850")]
	public void ButtonMenu()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xA31964", Offset = "0xA31964", VA = "0xA31964", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xA31920", Offset = "0xA31920", VA = "0xA31920")]
	private void ToMenu()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA31BB4", Offset = "0xA31BB4", VA = "0xA31BB4")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xA31BEC", Offset = "0xA31BEC", VA = "0xA31BEC")]
	private void SaveReload()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xA31C28", Offset = "0xA31C28", VA = "0xA31C28")]
	public LevelDirector_Sandbox()
	{
	}
}
[Token(Token = "0x200029F")]
public class LevelDirector_TalkSpeed : LevelDirector_base
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float updateVal;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float levelStart;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float lastValue;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float currentVal;

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xA31C38", Offset = "0xA31C38", VA = "0xA31C38", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xA31CDC", Offset = "0xA31CDC", VA = "0xA31CDC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xA31D68", Offset = "0xA31D68", VA = "0xA31D68", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xA31DF4", Offset = "0xA31DF4", VA = "0xA31DF4")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xA31C64", Offset = "0xA31C64", VA = "0xA31C64")]
	private void InitWords()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xA31DF8", Offset = "0xA31DF8", VA = "0xA31DF8")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xA31EC4", Offset = "0xA31EC4", VA = "0xA31EC4")]
	private void Speak()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xA31F18", Offset = "0xA31F18", VA = "0xA31F18")]
	public LevelDirector_TalkSpeed()
	{
	}
}
[Token(Token = "0x20002A0")]
public class LevelDirector_TypewriterDemo : LevelDirector_base
{
	[Token(Token = "0x600109D")]
	[Address(RVA = "0xA31F20", Offset = "0xA31F20", VA = "0xA31F20", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xA31FA4", Offset = "0xA31FA4", VA = "0xA31FA4", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xA32030", Offset = "0xA32030", VA = "0xA32030", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xA320BC", Offset = "0xA320BC", VA = "0xA320BC")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xA32134", Offset = "0xA32134", VA = "0xA32134")]
	public void SetSwitch(bool which)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xA321EC", Offset = "0xA321EC", VA = "0xA321EC")]
	public LevelDirector_TypewriterDemo()
	{
	}
}
[Token(Token = "0x20002A1")]
public class MenuDirector_base : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	public enum StoryState
	{
		[Token(Token = "0x4001066")]
		done,
		[Token(Token = "0x4001067")]
		active,
		[Token(Token = "0x4001068")]
		locked
	}

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction levelHost;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public HumanController humanController;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanAestheticScriptableObject characterLook;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject alternativeCharacterLook;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool initialised;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Story myStory;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Level menuLevel;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quest myQuest;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Level myLevel;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isQuestion;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool popupInitialTalk;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool alwaysPlayerFocused;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool showAnswerFeedback;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool useQuestLabel;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentLevelNum;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isNavigation;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyShowIfActive;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool sideQuestUnlockedDependency;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Story sideQuestUnlockedDependencyStory;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool alwaysShowHost;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool alwaysShowNavIconWhenNav;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool useDefaultOOBPosition;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool useRaycastJustCompletedCheck;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool onlyShowInMenu;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string storyIntroText;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string storyQuestionText;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string activeStoryIntro;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string activeNavIntro;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string storyAnswer0Text;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string storyAnswer1Text;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string storyAnswer0FeedbackText;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string storyAnswer1FeedbackText;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string storyTitleText;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string placeID;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private StoryState storyState;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform vrCamera;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool cameraVisible;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string councilDialogue;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string characterIdentifier;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool dummies;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool doAttractHello;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float attractJumpForce;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float attractTimeModifier;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool doAttractJump;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public int timesHostOOBsed;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string menuQ;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private BubbleToCharacter.ConvoType cType;

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xA331F4", Offset = "0xA331F4", VA = "0xA331F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xA331F8", Offset = "0xA331F8", VA = "0xA331F8")]
	private void NavigationStoryCheck()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xA335A4", Offset = "0xA335A4", VA = "0xA335A4")]
	private void StoryCheck()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xA3377C", Offset = "0xA3377C", VA = "0xA3377C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xA33F4C", Offset = "0xA33F4C", VA = "0xA33F4C")]
	public void StopAttractJump()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xA33F58", Offset = "0xA33F58", VA = "0xA33F58", Slot = "5")]
	public virtual void SetupConversation()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xA34B0C", Offset = "0xA34B0C", VA = "0xA34B0C", Slot = "6")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xA34CD4", Offset = "0xA34CD4", VA = "0xA34CD4", Slot = "7")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xA34EA4", Offset = "0xA34EA4", VA = "0xA34EA4", Slot = "8")]
	public virtual void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xA35038", Offset = "0xA35038", VA = "0xA35038")]
	private Level GetNavLevel()
	{
		return null;
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xA350C0", Offset = "0xA350C0", VA = "0xA350C0", Slot = "9")]
	public virtual void CallLoadNext()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xA35128", Offset = "0xA35128", VA = "0xA35128", Slot = "10")]
	public virtual void OnConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA35198", Offset = "0xA35198", VA = "0xA35198", Slot = "11")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA3519C", Offset = "0xA3519C", VA = "0xA3519C", Slot = "12")]
	public virtual void OnWaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA351A0", Offset = "0xA351A0", VA = "0xA351A0", Slot = "13")]
	public virtual void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xA351A4", Offset = "0xA351A4", VA = "0xA351A4")]
	[ContextMenu("AttractJump")]
	private void AttractJump()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xA33C94", Offset = "0xA33C94", VA = "0xA33C94")]
	private void AssembleLocaIDS()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xA352EC", Offset = "0xA352EC", VA = "0xA352EC")]
	private void StoryStateTranslation()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xA35390", Offset = "0xA35390", VA = "0xA35390")]
	private string ReadTranslation(string _convoType, bool useGeneric = true)
	{
		return null;
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA35490", Offset = "0xA35490", VA = "0xA35490")]
	public MenuDirector_base()
	{
	}
}
[Token(Token = "0x20002A3")]
[CreateAssetMenu(fileName = "DialogList", menuName = "DialogNPClist", order = 1)]
public class NPCDialogListScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entry> Entries;

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA35524", Offset = "0xA35524", VA = "0xA35524")]
	public NPCDialogListScriptableObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A4")]
public class Entry
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Id;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Text;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TextDB;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AssetPath;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Level;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Gameobject;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Comment;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime Creationdate;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JustUploaded;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool SaveThese;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool DifferentThanDB;

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA3552C", Offset = "0xA3552C", VA = "0xA3552C")]
	public Entry(string _id, string _text, string _textDB, string _comment)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA355FC", Offset = "0xA355FC", VA = "0xA355FC")]
	public Entry(string _id, string _text)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA3569C", Offset = "0xA3569C", VA = "0xA3569C")]
	public string DateToString()
	{
		return null;
	}
}
[Token(Token = "0x20002A5")]
public class ObjectsUsedAchievement : MonoBehaviour
{
	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> grabbedObjects;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxGrabbedObjectsForAchievement;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EntityDefinition objectEntity;

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA356E8", Offset = "0xA356E8", VA = "0xA356E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xA35764", Offset = "0xA35764", VA = "0xA35764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xA35880", Offset = "0xA35880", VA = "0xA35880")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xA3599C", Offset = "0xA3599C", VA = "0xA3599C")]
	private void OnGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xA35B64", Offset = "0xA35B64", VA = "0xA35B64")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xA35BD0", Offset = "0xA35BD0", VA = "0xA35BD0")]
	public ObjectsUsedAchievement()
	{
	}
}
[Token(Token = "0x20002A6")]
public class RelativeAttach : MonoBehaviour
{
	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform relAttach;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 targetPos;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offset;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float vel;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 movePosTarget;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dist;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xA35BE0", Offset = "0xA35BE0", VA = "0xA35BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xA35C04", Offset = "0xA35C04", VA = "0xA35C04")]
	public void SetTarget(Transform _target)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA35CB8", Offset = "0xA35CB8", VA = "0xA35CB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xA36020", Offset = "0xA36020", VA = "0xA36020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xA35D5C", Offset = "0xA35D5C", VA = "0xA35D5C")]
	private void SetPosition(bool initPositioning = false)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xA36028", Offset = "0xA36028", VA = "0xA36028")]
	public RelativeAttach()
	{
	}
}
[Token(Token = "0x20002A7")]
public class RocketsUsedAchievement : MonoBehaviour
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> grabbedObjects;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EntityDefinition objectEntity;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AchievementsPerfectRunsRockets rocketRunsSO;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool cannotComplete;

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xA36048", Offset = "0xA36048", VA = "0xA36048")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xA360C4", Offset = "0xA360C4", VA = "0xA360C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xA36234", Offset = "0xA36234", VA = "0xA36234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xA363A4", Offset = "0xA363A4", VA = "0xA363A4")]
	private void OnRocketFLight(bool mode, Transform target)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA36574", Offset = "0xA36574", VA = "0xA36574")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xA365DC", Offset = "0xA365DC", VA = "0xA365DC")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xA36700", Offset = "0xA36700", VA = "0xA36700")]
	public RocketsUsedAchievement()
	{
	}
}
[Token(Token = "0x20002A8")]
public class SaySomething : MonoBehaviour
{
	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sayThis;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BubbleToCharacter bubble;

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xA36708", Offset = "0xA36708", VA = "0xA36708")]
	private void Start()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xA367A0", Offset = "0xA367A0", VA = "0xA367A0")]
	public SaySomething()
	{
	}
}
[Token(Token = "0x20002A9")]
public class ShellHuman : MonoBehaviour
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanAestheticScriptableObject[] humanTypes;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BubbleToCharacter.ConvoType convoType;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ID;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool sayImmediately;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool suppressIcons;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool manualIconSelect;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BubbleToCharacter.ConvoType manualIconType;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool setCameraTarget;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float sayTimed;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookForWaypoints;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool autoRespawn;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool clearAfterConvo;

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xA367A8", Offset = "0xA367A8", VA = "0xA367A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xA36860", Offset = "0xA36860", VA = "0xA36860")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xA36918", Offset = "0xA36918", VA = "0xA36918")]
	private void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xA369C8", Offset = "0xA369C8", VA = "0xA369C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xA36A4C", Offset = "0xA36A4C", VA = "0xA36A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xA36C0C", Offset = "0xA36C0C", VA = "0xA36C0C")]
	private void QuickSay()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xA36BA4", Offset = "0xA36BA4", VA = "0xA36BA4")]
	public void ChangeHuman()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xA36CFC", Offset = "0xA36CFC", VA = "0xA36CFC")]
	public ShellHuman()
	{
	}
}
[Token(Token = "0x20002AA")]
public class SpeechBubbleQuestionTouch : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubbleQuestionTouch <>4__this;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool longer;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xA3837C", Offset = "0xA3837C", VA = "0xA3837C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xA383C4", Offset = "0xA383C4", VA = "0xA383C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xA37C9C", Offset = "0xA37C9C", VA = "0xA37C9C")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xA37F64", Offset = "0xA37F64", VA = "0xA37F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xA37F68", Offset = "0xA37F68", VA = "0xA37F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xA38384", Offset = "0xA38384", VA = "0xA38384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGrabbed;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable grabbable;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<Rigidbody, TentacleLogic> myCollisionTentacleDict;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRControllerMapper controller;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject holder;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int answerID;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BubbleToCharacter myBubbleScript;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useBubbleGrab;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject physicalButton;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform root;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject bubble;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bubbleHilight;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform vrCamera;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool cameraLookingAtBubble;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool buttonHighlighted;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 localStartPos;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion localStartRotation;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool posRead;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpeechBubbleQuestionTouch otherBubble;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LayerMask layerMask;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tween tween;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool tweenRunning;

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xA36D04", Offset = "0xA36D04", VA = "0xA36D04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xA36F84", Offset = "0xA36F84", VA = "0xA36F84")]
	private void GetPos()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xA36FE4", Offset = "0xA36FE4", VA = "0xA36FE4")]
	private void SetPos()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xA37030", Offset = "0xA37030", VA = "0xA37030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xA37478", Offset = "0xA37478", VA = "0xA37478")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xA37648", Offset = "0xA37648", VA = "0xA37648")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xA377BC", Offset = "0xA377BC", VA = "0xA377BC")]
	private void UnobstructedViewToVRCamera()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xA37A10", Offset = "0xA37A10", VA = "0xA37A10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xA37738", Offset = "0xA37738", VA = "0xA37738")]
	public void AnswerQuestion()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA37A14", Offset = "0xA37A14", VA = "0xA37A14")]
	private void AnswerQuestionAction()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA37BF0", Offset = "0xA37BF0", VA = "0xA37BF0")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xA37B68", Offset = "0xA37B68", VA = "0xA37B68")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__33))]
	private IEnumerator ButtonHapticFeedback(bool longer = false)
	{
		return null;
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xA372A8", Offset = "0xA372A8", VA = "0xA372A8")]
	private void SetSpriteFeedback()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xA37CC4", Offset = "0xA37CC4", VA = "0xA37CC4")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xA37E40", Offset = "0xA37E40", VA = "0xA37E40")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xA37E44", Offset = "0xA37E44", VA = "0xA37E44")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xA37F50", Offset = "0xA37F50", VA = "0xA37F50")]
	private void OnTriggerExit(Collider Collider)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xA37F54", Offset = "0xA37F54", VA = "0xA37F54")]
	public SpeechBubbleQuestionTouch()
	{
	}
}
[Token(Token = "0x20002AC")]
[ExecuteInEditMode]
public class TurnToDirection : MonoBehaviour
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform realTarget;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool turnToDirectionEnabled;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 upVector;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetRot;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 offset;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 diff;

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xA383CC", Offset = "0xA383CC", VA = "0xA383CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xA38504", Offset = "0xA38504", VA = "0xA38504")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xA388E8", Offset = "0xA388E8", VA = "0xA388E8")]
	public TurnToDirection()
	{
	}
}
[Token(Token = "0x20002AD")]
public class TurnToDirectionBubble : MonoBehaviour
{
	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform realTarget;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool turnToDirectionEnabled;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 diff;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform visRoot;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 distanceDiff;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform distanceTarget;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform helperTrans;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xA3891C", Offset = "0xA3891C", VA = "0xA3891C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xA38A4C", Offset = "0xA38A4C", VA = "0xA38A4C")]
	private void CheckForCamera()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xA38AF8", Offset = "0xA38AF8", VA = "0xA38AF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xA38AFC", Offset = "0xA38AFC", VA = "0xA38AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xA391E8", Offset = "0xA391E8", VA = "0xA391E8")]
	public TurnToDirectionBubble()
	{
	}
}
[Token(Token = "0x20002AE")]
public class VoiceProvider : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string conversation;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanEmoSFX humanEmoSFX;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanEmoSFX humanEmoSFX_male;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HumanEmoSFX defaultEMOSFX;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HumanEmoSFX elviraEmoSFX;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool suppressEmoSFX;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool stopPreviousSound;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventInstance FMODinstance;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string parameter;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string thingToSay;

	[Token(Token = "0x40010CE")]
	public const string musicstatesParameterName = "Musicstates";

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, int> musicParameters;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool emoSFXSet;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string origTxt;

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xA391FC", Offset = "0xA391FC", VA = "0xA391FC")]
	public string MusicTriggerSearch(string _txt)
	{
		return null;
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xA396E8", Offset = "0xA396E8", VA = "0xA396E8")]
	public static void SetGlobalMusicParameter(int parameter)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xA39754", Offset = "0xA39754", VA = "0xA39754")]
	public string ElviraTriggerSearch(string _txt)
	{
		return null;
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xA398A4", Offset = "0xA398A4", VA = "0xA398A4")]
	public static void PlayElviraEmoSFX(string _emo)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xA39548", Offset = "0xA39548", VA = "0xA39548")]
	private void CheckMusicLookup()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xA399E0", Offset = "0xA399E0", VA = "0xA399E0")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xA399E4", Offset = "0xA399E4", VA = "0xA399E4")]
	private void GetEMOSFX()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xA35284", Offset = "0xA35284", VA = "0xA35284")]
	public void PlayReactionSFX(string _reactionType)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xA39D5C", Offset = "0xA39D5C", VA = "0xA39D5C")]
	public string GetEmoStringForSymbol(string _reactionTypeSymbol)
	{
		return null;
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xA39DE4", Offset = "0xA39DE4", VA = "0xA39DE4")]
	public void PlayReactionSFXSymbol(string _reactionTypeSymbol)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xA39E90", Offset = "0xA39E90", VA = "0xA39E90")]
	public void SetParameter(string _parameter = "")
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xA39B6C", Offset = "0xA39B6C", VA = "0xA39B6C")]
	private void PlayEmo(string _thingToSay)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xA39E98", Offset = "0xA39E98", VA = "0xA39E98")]
	public VoiceProvider()
	{
	}
}
[Token(Token = "0x20002AF")]
public static class GeneralHelper
{
	[Token(Token = "0x6001105")]
	[Address(RVA = "0xA39F2C", Offset = "0xA39F2C", VA = "0xA39F2C")]
	public static object GetPropValue(object src, string propName)
	{
		return null;
	}

	[Token(Token = "0x6001106")]
	public static T RandomElement<T>(T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x6001107")]
	public static T RandomElement<T>(List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xA39F80", Offset = "0xA39F80", VA = "0xA39F80")]
	public static Vector2 RandomPosition(this Rect rect, float distance = 0f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xA3A01C", Offset = "0xA3A01C", VA = "0xA3A01C")]
	public static Rect RandomSubRect(this Rect rect, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600110A")]
	public static void Swap<T>(ref T a, ref T b)
	{
	}

	[Token(Token = "0x600110B")]
	public static List<T> Shuffle<T>(this List<T> list)
	{
		return null;
	}
}
[Token(Token = "0x20002B0")]
public static class IListExtensions
{
	[Token(Token = "0x600110C")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x20002B1")]
public class HumanWaypointController : MonoBehaviour
{
	[Token(Token = "0x20002B2")]
	public delegate void DestinationReachedDelegate(string waypointID = "");

	[Token(Token = "0x20002B3")]
	public delegate void WaypointReachedDelegate(string waypointID = "");

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public _g_Piece currentWaypoint;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public _g_Piece lastWaypoint;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autoSelectClosestNodeOnStart;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HumanController humanController;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultDistanceTreshhold;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceTreshold;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool noWaypointMoveInWater;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool stopAtNextWaypoint;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool travelling;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool inWater;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useWaterExits;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int waypointForceID;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool waterExitActive;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool isPaused;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool noRegularWalkBacktrack;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool isGrabbed;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int wpChecks;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool movingAllowed;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool rescanWaypointsOnDefocus;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool movementSetupOnStart;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool logging;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("DO NOT SET MANUALLY")]
	public bool lookingForClosestWaypoint;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool forceWaterExit;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waterExitStarted;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int sequence;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> nodes;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private _g_Piece closestPiece;

	[Token(Token = "0x1400003D")]
	public event DestinationReachedDelegate OnDestinationReached
	{
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xA3A11C", Offset = "0xA3A11C", VA = "0xA3A11C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600110E")]
		[Address(RVA = "0xA3A1B8", Offset = "0xA3A1B8", VA = "0xA3A1B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public event WaypointReachedDelegate OnWaypointReached
	{
		[Token(Token = "0x600110F")]
		[Address(RVA = "0xA3A254", Offset = "0xA3A254", VA = "0xA3A254")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001110")]
		[Address(RVA = "0xA3A2F0", Offset = "0xA3A2F0", VA = "0xA3A2F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xA3A38C", Offset = "0xA3A38C", VA = "0xA3A38C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xA3A460", Offset = "0xA3A460", VA = "0xA3A460")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xA3A534", Offset = "0xA3A534", VA = "0xA3A534")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xA3A5D8", Offset = "0xA3A5D8", VA = "0xA3A5D8")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xA3A660", Offset = "0xA3A660", VA = "0xA3A660")]
	public void SearchClosestWaypoint()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xA3ADCC", Offset = "0xA3ADCC", VA = "0xA3ADCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xA33E88", Offset = "0xA33E88", VA = "0xA33E88")]
	public void NoMoving()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xA3ADE8", Offset = "0xA3ADE8", VA = "0xA3ADE8")]
	public void CleanUpCarryOver()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xA3AE18", Offset = "0xA3AE18", VA = "0xA3AE18")]
	public void RescanOnPickUp()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xA3AEB8", Offset = "0xA3AEB8", VA = "0xA3AEB8")]
	public void DistanceCheck()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xA3B6BC", Offset = "0xA3B6BC", VA = "0xA3B6BC")]
	private void SetNextRandomWaypoint()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xA3B598", Offset = "0xA3B598", VA = "0xA3B598")]
	private void CheckDestination()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xA3B4D8", Offset = "0xA3B4D8", VA = "0xA3B4D8")]
	public void ContinueWaypoint()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xA3BFB8", Offset = "0xA3BFB8", VA = "0xA3BFB8")]
	private bool PauseCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xA3C094", Offset = "0xA3C094", VA = "0xA3C094")]
	private void EndPause()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xA3C09C", Offset = "0xA3C09C", VA = "0xA3C09C")]
	public void GotoWayppoint(string _ID)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xA3A6EC", Offset = "0xA3A6EC", VA = "0xA3A6EC")]
	public void SearchClosestNode(bool _inWater = false, bool notCurrent = false)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xA3BE74", Offset = "0xA3BE74", VA = "0xA3BE74")]
	public void SetWaypoint(GameObject _go)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xA3C2CC", Offset = "0xA3C2CC", VA = "0xA3C2CC")]
	public void SetWaypoint(_g_Piece _wp)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xA3BE08", Offset = "0xA3BE08", VA = "0xA3BE08")]
	public void DestinationReached()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xA3C070", Offset = "0xA3C070", VA = "0xA3C070")]
	public void StopTravelling()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xA3C3A4", Offset = "0xA3C3A4", VA = "0xA3C3A4")]
	public void SetLastWaypoint()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xA3C4DC", Offset = "0xA3C4DC", VA = "0xA3C4DC")]
	public HumanWaypointController()
	{
	}
}
[Token(Token = "0x20002B4")]
public static class CTransform
{
	[Token(Token = "0x6001130")]
	[Address(RVA = "0xA3C6F8", Offset = "0xA3C6F8", VA = "0xA3C6F8")]
	public static void SetX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA3C744", Offset = "0xA3C744", VA = "0xA3C744")]
	public static void SetY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xA3C790", Offset = "0xA3C790", VA = "0xA3C790")]
	public static void SetZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xA3C7DC", Offset = "0xA3C7DC", VA = "0xA3C7DC")]
	public static void SetLocalX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA3C828", Offset = "0xA3C828", VA = "0xA3C828")]
	public static void SetLocalY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA3C874", Offset = "0xA3C874", VA = "0xA3C874")]
	public static void SetLocalZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA3C8C0", Offset = "0xA3C8C0", VA = "0xA3C8C0")]
	public static void SetLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA3C90C", Offset = "0xA3C90C", VA = "0xA3C90C")]
	public static void SetLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA3C958", Offset = "0xA3C958", VA = "0xA3C958")]
	public static void SetLocalScaleZ(this Transform transform, float z)
	{
	}
}
[Token(Token = "0x20002B5")]
public static class TrigoFunctions
{
	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA3C9A4", Offset = "0xA3C9A4", VA = "0xA3C9A4")]
	public static void SetAlpha(this Material material, float value)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA3C9DC", Offset = "0xA3C9DC", VA = "0xA3C9DC")]
	public static float PointToAngle(Vector2 tPoint)
	{
		return default(float);
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA3CA10", Offset = "0xA3CA10", VA = "0xA3CA10")]
	public static Vector2 AngleToNormal(float tAngle)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20002B6")]
[ExecuteInEditMode]
public class _g_Piece : MonoBehaviour
{
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<_g_Piece> waypointPieces;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject[] connectedPieces;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject[] connectCubes;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> connectedList;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fakeLine;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool destinationWaypoint;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ID;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distanceTreshold;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float defaultDistanceTreshold;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool waitCheckpoint;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float chanceOfWait;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float waitMin;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float waitMax;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int waypointID;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool waterExitSystemWayPoint;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool waterExitStart;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool waterExitEnd;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool noEntrySearchClosest;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int sequence;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool useSequence;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool rescanClosestCheckpoint;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float allowedFallingDistance;

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xA3CA2C", Offset = "0xA3CA2C", VA = "0xA3CA2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xA3CDC0", Offset = "0xA3CDC0", VA = "0xA3CDC0")]
	public void SetTreshold(float treshold)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xA3CB7C", Offset = "0xA3CB7C", VA = "0xA3CB7C")]
	public void Scale()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xA3CBF0", Offset = "0xA3CBF0", VA = "0xA3CBF0")]
	private void CreateConnectedList()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xA3CDC8", Offset = "0xA3CDC8", VA = "0xA3CDC8")]
	public List<GameObject> ConnectedNodes()
	{
		return null;
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xA3CDD0", Offset = "0xA3CDD0", VA = "0xA3CDD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xA3CF50", Offset = "0xA3CF50", VA = "0xA3CF50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xA3D00C", Offset = "0xA3D00C", VA = "0xA3D00C")]
	public _g_Piece()
	{
	}
}
[Token(Token = "0x20002B7")]
public class ExplodOnImpact : MonoBehaviour
{
	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Rocket> rockets;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool unKinematicOnImpact;

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xA3D0E4", Offset = "0xA3D0E4", VA = "0xA3D0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xA3D13C", Offset = "0xA3D13C", VA = "0xA3D13C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xA3D2D4", Offset = "0xA3D2D4", VA = "0xA3D2D4")]
	public ExplodOnImpact()
	{
	}
}
[Token(Token = "0x20002B8")]
public class MagnetMatAnimate : MonoBehaviour
{
	[Token(Token = "0x6001147")]
	[Address(RVA = "0xA3D2DC", Offset = "0xA3D2DC", VA = "0xA3D2DC")]
	public MagnetMatAnimate()
	{
	}
}
[Token(Token = "0x20002B9")]
public class RandomMesh : MonoBehaviour
{
	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter mf;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] meshList;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialManager MaterialMan;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xA3D2E4", Offset = "0xA3D2E4", VA = "0xA3D2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xA3D558", Offset = "0xA3D558", VA = "0xA3D558")]
	public RandomMesh()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BA")]
public class SceneReference : ISerializationCallbackReceiver
{
	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string scenePath;

	[Token(Token = "0x17000116")]
	public string ScenePath
	{
		[Token(Token = "0x600114A")]
		[Address(RVA = "0xA3D560", Offset = "0xA3D560", VA = "0xA3D560")]
		get
		{
			return null;
		}
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xA3D568", Offset = "0xA3D568", VA = "0xA3D568")]
		set
		{
		}
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xA3D570", Offset = "0xA3D570", VA = "0xA3D570")]
	public static implicit operator string(SceneReference sceneReference)
	{
		return null;
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xA3D588", Offset = "0xA3D588", VA = "0xA3D588", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xA3D58C", Offset = "0xA3D58C", VA = "0xA3D58C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xA3D590", Offset = "0xA3D590", VA = "0xA3D590")]
	public SceneReference()
	{
	}
}
[Token(Token = "0x20002BB")]
public class IslandBoosterShaderChange : MonoBehaviour
{
	[Token(Token = "0x6001150")]
	[Address(RVA = "0xA3D5F0", Offset = "0xA3D5F0", VA = "0xA3D5F0")]
	public IslandBoosterShaderChange()
	{
	}
}
[Token(Token = "0x20002BC")]
public class IslandSlices : MonoBehaviour
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bigChunks;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject smallerSlices;

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA3D5F8", Offset = "0xA3D5F8", VA = "0xA3D5F8")]
	private void SetToChunks(bool which)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA3D640", Offset = "0xA3D640", VA = "0xA3D640")]
	public static void SetToChunksStatic(bool which)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xA3D6DC", Offset = "0xA3D6DC", VA = "0xA3D6DC")]
	public IslandSlices()
	{
	}
}
[Token(Token = "0x20002BD")]
public class JointBreakCallback : MonoBehaviour
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent JointBreak;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint myJoint;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isTriggered;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xA3D6E4", Offset = "0xA3D6E4", VA = "0xA3D6E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xA3D7E0", Offset = "0xA3D7E0", VA = "0xA3D7E0")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xA3D884", Offset = "0xA3D884", VA = "0xA3D884")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xA3D8F8", Offset = "0xA3D8F8", VA = "0xA3D8F8")]
	public JointBreakCallback()
	{
	}
}
[Token(Token = "0x20002BE")]
public class KeepChainClear : MonoBehaviour
{
	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float levelStart;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool doCheck;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int framesNeeded;

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xA3D900", Offset = "0xA3D900", VA = "0xA3D900")]
	private void Start()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xA3D998", Offset = "0xA3D998", VA = "0xA3D998")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xA3D9DC", Offset = "0xA3D9DC", VA = "0xA3D9DC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xA3DB44", Offset = "0xA3DB44", VA = "0xA3DB44")]
	public KeepChainClear()
	{
	}
}
[Token(Token = "0x20002BF")]
[ExecuteInEditMode]
public class LegRootOrientation : MonoBehaviour
{
	[Token(Token = "0x600115C")]
	[Address(RVA = "0xA3DB54", Offset = "0xA3DB54", VA = "0xA3DB54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xA3DBB8", Offset = "0xA3DBB8", VA = "0xA3DBB8")]
	public LegRootOrientation()
	{
	}
}
[Token(Token = "0x20002C0")]
public class LevelDirector_TeamTalk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x20002C1")]
	[CompilerGenerated]
	private sealed class <Conversation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_TeamTalk <>4__this;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xA3E3AC", Offset = "0xA3E3AC", VA = "0xA3E3AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0xA3E3F4", Offset = "0xA3E3F4", VA = "0xA3E3F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xA3DF18", Offset = "0xA3DF18", VA = "0xA3DF18")]
		[DebuggerHidden]
		public <Conversation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xA3DF48", Offset = "0xA3DF48", VA = "0xA3DF48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xA3DF4C", Offset = "0xA3DF4C", VA = "0xA3DF4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xA3E3B4", Offset = "0xA3E3B4", VA = "0xA3E3B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base alessandro;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base almut;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base dennis;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base luca;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base marcel;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base rico;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private LevelDirector_base simon;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool startTalk;

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xA3DBC0", Offset = "0xA3DBC0", VA = "0xA3DBC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xA3DC40", Offset = "0xA3DC40", VA = "0xA3DC40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA3DCC0", Offset = "0xA3DCC0", VA = "0xA3DCC0")]
	private void TakeShot(VRControllerMapper vrMapper)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA3DCCC", Offset = "0xA3DCCC", VA = "0xA3DCCC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xA3DD7C", Offset = "0xA3DD7C", VA = "0xA3DD7C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xA3DD08", Offset = "0xA3DD08", VA = "0xA3DD08")]
	[IteratorStateMachine(typeof(<Conversation>d__14))]
	private IEnumerator Conversation()
	{
		return null;
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xA3DD90", Offset = "0xA3DD90", VA = "0xA3DD90")]
	private void FocusPlayer(bool which)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xA3DF40", Offset = "0xA3DF40", VA = "0xA3DF40")]
	public LevelDirector_TeamTalk()
	{
	}
}
[Token(Token = "0x20002C2")]
public class LevelShowHide : MonoBehaviour
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("if showIfDone=false gameobject hidden for level complete")]
	public bool showIfDone;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Level myLevel;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ignoreIfReplay;

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xA3E3FC", Offset = "0xA3E3FC", VA = "0xA3E3FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xA3E4D8", Offset = "0xA3E4D8", VA = "0xA3E4D8")]
	public LevelShowHide()
	{
	}
}
[Token(Token = "0x20002C3")]
public class LevelWaterOverride : MonoBehaviour
{
	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Length;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Height;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaterInterface waterInterface;

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xA3E4E8", Offset = "0xA3E4E8", VA = "0xA3E4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xA3E540", Offset = "0xA3E540", VA = "0xA3E540")]
	public LevelWaterOverride()
	{
	}
}
[Token(Token = "0x20002C4")]
public class LeverRef : MonoBehaviour
{
	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical[] button;

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xA3E548", Offset = "0xA3E548", VA = "0xA3E548")]
	public LeverRef()
	{
	}
}
[Token(Token = "0x20002C5")]
public class LightCurveAnimation : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	[CompilerGenerated]
	private sealed class <TimeAnimation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightCurveAnimation <>4__this;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <stillThere>5__3;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsed>5__4;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xA3E7A0", Offset = "0xA3E7A0", VA = "0xA3E7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xA3E7E8", Offset = "0xA3E7E8", VA = "0xA3E7E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xA3E5E4", Offset = "0xA3E5E4", VA = "0xA3E5E4")]
		[DebuggerHidden]
		public <TimeAnimation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xA3E63C", Offset = "0xA3E63C", VA = "0xA3E63C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xA3E640", Offset = "0xA3E640", VA = "0xA3E640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xA3E7A8", Offset = "0xA3E7A8", VA = "0xA3E7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightIntensity;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loop;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Light;

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xA3E550", Offset = "0xA3E550", VA = "0xA3E550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xA3E570", Offset = "0xA3E570", VA = "0xA3E570")]
	[IteratorStateMachine(typeof(<TimeAnimation>d__5))]
	private IEnumerator TimeAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA3E60C", Offset = "0xA3E60C", VA = "0xA3E60C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA3E634", Offset = "0xA3E634", VA = "0xA3E634")]
	public LightCurveAnimation()
	{
	}
}
[Token(Token = "0x20002C7")]
public class LightHouseTurn : MonoBehaviour
{
	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C118_SisterRepair levelDirector;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody crankShaftRB;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint lightHouse;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HingeJoint crankShaft;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject FXgeneratorRunning;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FXShortCircuit;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Joint crankJoint;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private JointMotor motor;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float factor;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool crankAttached;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float mass;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float counter;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float squeekTime;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string sfxCrankAttach;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string sfxCrankTurning;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EventInstance instanceCrankTurning;

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xA3E7F0", Offset = "0xA3E7F0", VA = "0xA3E7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xA3E978", Offset = "0xA3E978", VA = "0xA3E978")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA3EB40", Offset = "0xA3EB40", VA = "0xA3EB40")]
	public void SetMotorLighthouse(bool which)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xA3E958", Offset = "0xA3E958", VA = "0xA3E958")]
	public void ShortCircuit(bool which)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA3E84C", Offset = "0xA3E84C", VA = "0xA3E84C")]
	public void SetMotor(bool which)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xA3EB60", Offset = "0xA3EB60", VA = "0xA3EB60")]
	public void DestroyCrankJoint()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xA3EBF0", Offset = "0xA3EBF0", VA = "0xA3EBF0")]
	public void FixCrankHandle()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xA3ED18", Offset = "0xA3ED18", VA = "0xA3ED18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA3EF14", Offset = "0xA3EF14", VA = "0xA3EF14")]
	public LightHouseTurn()
	{
	}
}
[Token(Token = "0x20002C8")]
public class LimitConnections : MonoBehaviour
{
	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glued glued;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int connectionsAllowed;

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA3EF2C", Offset = "0xA3EF2C", VA = "0xA3EF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA3EF84", Offset = "0xA3EF84", VA = "0xA3EF84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA3F004", Offset = "0xA3F004", VA = "0xA3F004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA3F084", Offset = "0xA3F084", VA = "0xA3F084")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xA3F194", Offset = "0xA3F194", VA = "0xA3F194")]
	public LimitConnections()
	{
	}
}
[Token(Token = "0x20002C9")]
public class LimitNode : MonoBehaviour
{
	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isWaterNode;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA3F1A4", Offset = "0xA3F1A4", VA = "0xA3F1A4")]
	public LimitNode()
	{
	}
}
[Token(Token = "0x20002CA")]
public class LimitNodeVisual : MonoBehaviour
{
	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lineAttach;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLowPerf;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform trans;

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xA3F1B4", Offset = "0xA3F1B4", VA = "0xA3F1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xA3F228", Offset = "0xA3F228", VA = "0xA3F228")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xA3F284", Offset = "0xA3F284", VA = "0xA3F284")]
	public LimitNodeVisual()
	{
	}
}
[Token(Token = "0x20002CB")]
[RequireComponent(typeof(LineRenderer))]
public class LineRenderBetweenObjects : MonoBehaviour
{
	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform P1;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform P2;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer line;

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xA3F28C", Offset = "0xA3F28C", VA = "0xA3F28C")]
	private void Start()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xA3F2E4", Offset = "0xA3F2E4", VA = "0xA3F2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xA3F34C", Offset = "0xA3F34C", VA = "0xA3F34C")]
	[ContextMenu("Draw now")]
	public void DrawLine()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xA3F440", Offset = "0xA3F440", VA = "0xA3F440")]
	public LineRenderBetweenObjects()
	{
	}
}
[Token(Token = "0x20002CC")]
public class AssembleDefaultConversations : MonoBehaviour
{
	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string genericBriefingID;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string genericInsertID;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int briefingID;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string gamePrefix;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string sceneType;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool wrongFormat;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int[] targetValues;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Dictionary<string, string> lookUpDict;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int[] amountValues;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int runs;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string introText;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string briefingText;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string targetsDoneText;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string targetsDoneReactionText;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string levelDoneText;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string levelDoneReactionText;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string levelDoneAddonText;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string fail;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string outOfTries;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string unSolvable;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string locaPhoto;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string titleTipLevelSpecific;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string titleTipLevelSpecificID;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string resettiChitChat;

	[Token(Token = "0x4001168")]
	public const string resettiChitChatKey = "resetti_chitchat";

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string resetti_hint_question;

	[Token(Token = "0x400116A")]
	public const string resetti_hint_questionKey = "resetti_hint_question";

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string resetti_hint_questionRevert;

	[Token(Token = "0x400116C")]
	public const string resetti_hint_questionRevertKey = "resetti_hint_questionRevert";

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string resetti_hint_question_yes;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string resetti_hint_question_no;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string resetti_hint_ready;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string resetti_hint_waiting;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string mainSceneName;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject actualGameObject;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static bool noGeneric;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public static bool initialised;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public static bool returnIDs;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string prefixIfGeneric;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string currentID;

	[Token(Token = "0x4001178")]
	public const string genericKeyword = "generic";

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static Dictionary<string, bool> lookupLevelLocaFound;

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xA3F448", Offset = "0xA3F448", VA = "0xA3F448")]
	public static void EditorInit(string _scenePath, bool _returnIDs = false, string _prefixIfGeneric = "DEF_")
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xA3F5EC", Offset = "0xA3F5EC", VA = "0xA3F5EC")]
	public static void ExternalInit(string _scenePath)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xA3F4D4", Offset = "0xA3F4D4", VA = "0xA3F4D4")]
	public static void Init(string _scenePath)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xA3FE50", Offset = "0xA3FE50", VA = "0xA3FE50")]
	public static void SetTargetValues(int idx, int _value, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xA3FF50", Offset = "0xA3FF50", VA = "0xA3FF50")]
	public static void SetAmountValues(int idx, int _value, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xA40050", Offset = "0xA40050", VA = "0xA40050")]
	public static void IncrementAmountValues(int idx, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xA3F9A8", Offset = "0xA3F9A8", VA = "0xA3F9A8")]
	public static void FillDefaultIDs(bool createDict = true)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xA40E14", Offset = "0xA40E14", VA = "0xA40E14")]
	public static string LocaPhotoPath(string _convoType)
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xA3F8B4", Offset = "0xA3F8B4", VA = "0xA3F8B4")]
	public static void ParseLevelID()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xA3F67C", Offset = "0xA3F67C", VA = "0xA3F67C")]
	public static void SetGameID()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xA3F7F8", Offset = "0xA3F7F8", VA = "0xA3F7F8")]
	public static void ClearValues()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xA4014C", Offset = "0xA4014C", VA = "0xA4014C")]
	public static void CreateDict()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xA40920", Offset = "0xA40920", VA = "0xA40920")]
	public static string ReadTranslation(string _convoType, bool useGamePrefix = true)
	{
		return null;
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xA410B4", Offset = "0xA410B4", VA = "0xA410B4")]
	public AssembleDefaultConversations()
	{
	}
}
[Token(Token = "0x20002CD")]
public static class ExtensionMethods
{
	[Token(Token = "0x60011A0")]
	public static T[] AddtoArray<T>(T[] Org, T New_Value)
	{
		return null;
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xA411D0", Offset = "0xA411D0", VA = "0xA411D0")]
	public static Transform FindDeepChild(this Transform _parent, string _name, bool _toLower = false, bool _findHidden = false)
	{
		return null;
	}

	[Token(Token = "0x60011A2")]
	public static T GetRandom<T>(this T[] self)
	{
		return (T)null;
	}

	[Token(Token = "0x60011A3")]
	public static T GetRandom<T>(this List<T> self)
	{
		return (T)null;
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xA412D4", Offset = "0xA412D4", VA = "0xA412D4")]
	public static string ReplaceParameters(this string text, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xA4148C", Offset = "0xA4148C", VA = "0xA4148C")]
	public static string RegularReplaceParameters(this string text, Dictionary<string, string> parameters)
	{
		return null;
	}
}
[Token(Token = "0x20002CE")]
public class PropertyReader
{
	[Token(Token = "0x20002CF")]
	public struct Variable
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type type;
	}

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Variable[] _fields_cache;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Variable[] _props_cache;

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xA41610", Offset = "0xA41610", VA = "0xA41610")]
	public Variable[] getFields()
	{
		return null;
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xA41780", Offset = "0xA41780", VA = "0xA41780")]
	public Variable[] getProperties()
	{
		return null;
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xA418F0", Offset = "0xA418F0", VA = "0xA418F0")]
	public object getValue(string name)
	{
		return null;
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xA41940", Offset = "0xA41940", VA = "0xA41940")]
	public void setValue(string name, object value)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xA41658", Offset = "0xA41658", VA = "0xA41658")]
	public static Variable[] getFields(Type type)
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xA417C8", Offset = "0xA417C8", VA = "0xA417C8")]
	public static Variable[] getProperties(Type type)
	{
		return null;
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xA41998", Offset = "0xA41998", VA = "0xA41998")]
	public PropertyReader()
	{
	}
}
[Token(Token = "0x20002D0")]
public class StepAllLocalisationKeys : MonoBehaviour
{
	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalizationDataSO locaSO;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	[Space]
	[Space]
	public Languages language;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int locaIDX;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxKeys;

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xA419A0", Offset = "0xA419A0", VA = "0xA419A0")]
	public StepAllLocalisationKeys()
	{
	}
}
[Token(Token = "0x20002D1")]
public class TranslatedText : MonoBehaviour
{
	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro _textMeshPro;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI _textMeshProUGUI;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _translationId;

	[Token(Token = "0x1700011B")]
	private TextMeshPro textMeshPro
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xA419A8", Offset = "0xA419A8", VA = "0xA419A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	private TextMeshProUGUI textMeshProUGUI
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xA41A50", Offset = "0xA41A50", VA = "0xA41A50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public string translationId
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xA41AF8", Offset = "0xA41AF8", VA = "0xA41AF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xA41B00", Offset = "0xA41B00", VA = "0xA41B00")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xA41B04", Offset = "0xA41B04", VA = "0xA41B04")]
	private void TrySelfRegistration()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xA41E18", Offset = "0xA41E18", VA = "0xA41E18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xA41F54", Offset = "0xA41F54", VA = "0xA41F54")]
	public void SetTranslatedText(string text)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xA42044", Offset = "0xA42044", VA = "0xA42044")]
	public TranslatedText()
	{
	}
}
[Token(Token = "0x20002D2")]
public class TranslationManager : MonoBehaviour
{
	[Token(Token = "0x20002D3")]
	public delegate void OnLanguageChangeDelegate();

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Languages CurrentLanguage;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool initialised;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizationDataSO localizationDataSO;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static LocalizationDataSO LocalizationDataSO;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool fontAnimationAllowedByLanguage;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<Languages, string> debugStringDict;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<TranslatedText> texts;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool languageLoaded;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static TranslationManager _instance;

	[Token(Token = "0x1700011E")]
	public static TranslationManager Instance
	{
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xA41B90", Offset = "0xA41B90", VA = "0xA41B90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400003F")]
	public static event OnLanguageChangeDelegate OnLanguageChange
	{
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xA4204C", Offset = "0xA4204C", VA = "0xA4204C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xA42104", Offset = "0xA42104", VA = "0xA42104")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xA421BC", Offset = "0xA421BC", VA = "0xA421BC")]
	public static void DisplayMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xA423F0", Offset = "0xA423F0", VA = "0xA423F0")]
	public static string ConcatMessages(List<string> msg)
	{
		return null;
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xA42550", Offset = "0xA42550", VA = "0xA42550")]
	private void MyInspectorGUI()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xA42638", Offset = "0xA42638", VA = "0xA42638")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xA42758", Offset = "0xA42758", VA = "0xA42758")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xA42A50", Offset = "0xA42A50", VA = "0xA42A50")]
	public static void CallLanguageChangedDelegate()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xA42AF8", Offset = "0xA42AF8", VA = "0xA42AF8")]
	[ContextMenu("DEBUG set english")]
	private void SetEnglish()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xA42BD0", Offset = "0xA42BD0", VA = "0xA42BD0")]
	[ContextMenu("DEBUG set german")]
	private void SetSpanish()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xA42860", Offset = "0xA42860", VA = "0xA42860")]
	public static void LoadLanguageSettings()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xA42BD8", Offset = "0xA42BD8", VA = "0xA42BD8")]
	public static Languages CheckSystemLanguage()
	{
		return default(Languages);
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xA42B00", Offset = "0xA42B00", VA = "0xA42B00")]
	public static void SetLanguage(Languages language)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xA42CB8", Offset = "0xA42CB8", VA = "0xA42CB8")]
	private void LookupTranslation(TranslatedText text)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xA34874", Offset = "0xA34874", VA = "0xA34874")]
	public static string GetUITranslation(string translationId)
	{
		return null;
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xA42CE0", Offset = "0xA42CE0", VA = "0xA42CE0")]
	public static string GetUITranslation(string translationId, Languages _language)
	{
		return null;
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xA42D80", Offset = "0xA42D80", VA = "0xA42D80")]
	public static bool TryGetUITranslation(string translationId, out string translation)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xA34908", Offset = "0xA34908", VA = "0xA34908")]
	public static string GetRandomUITranslation(string translationId)
	{
		return null;
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xA42E4C", Offset = "0xA42E4C", VA = "0xA42E4C")]
	public static string GetUITranslation(string translationId, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xA4109C", Offset = "0xA4109C", VA = "0xA4109C")]
	public static string GetRandomUITranslation(string translationId, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xA42E64", Offset = "0xA42E64", VA = "0xA42E64")]
	public void LanguageChanged()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xA42FBC", Offset = "0xA42FBC", VA = "0xA42FBC")]
	public static void LanguageSpecificFontChanges()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xA43294", Offset = "0xA43294", VA = "0xA43294")]
	public static string TranslationExchange(string translationId, string scriptString)
	{
		return null;
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xA432CC", Offset = "0xA432CC", VA = "0xA432CC")]
	private void RegisterExistingTexts()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xA41D0C", Offset = "0xA41D0C", VA = "0xA41D0C")]
	public void RegisterText(TranslatedText text)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xA41EA4", Offset = "0xA41EA4", VA = "0xA41EA4")]
	public void UnregisterText(TranslatedText text)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xA4338C", Offset = "0xA4338C", VA = "0xA4338C")]
	public TranslationManager()
	{
	}
}
[Token(Token = "0x20002D4")]
public class LockRBTrigger : CollisionBase
{
	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody RBToLock;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rigidbody triggerRB;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string onSound;

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xA433D4", Offset = "0xA433D4", VA = "0xA433D4", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xA43494", Offset = "0xA43494", VA = "0xA43494")]
	public LockRBTrigger()
	{
	}
}
[Token(Token = "0x20002D5")]
public class LogoScreenUFO : MonoBehaviour
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cameraRig;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attachTrans;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ropeTrans;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rope;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 diff;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody ufo;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPos;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 upForce;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform startFade;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform endFade;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool targetReached;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool firstFadeReached;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject chainSFX;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool chainMoving;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 pos;

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xA4349C", Offset = "0xA4349C", VA = "0xA4349C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xA435A0", Offset = "0xA435A0", VA = "0xA435A0")]
	private void ReleaseRope()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xA43614", Offset = "0xA43614", VA = "0xA43614")]
	private void TargetReached()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xA43718", Offset = "0xA43718", VA = "0xA43718")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xA43750", Offset = "0xA43750", VA = "0xA43750")]
	private void Update()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xA438B0", Offset = "0xA438B0", VA = "0xA438B0")]
	private void PlayerClimbPositionCheck()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xA4399C", Offset = "0xA4399C", VA = "0xA4399C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xA43CA8", Offset = "0xA43CA8", VA = "0xA43CA8")]
	public LogoScreenUFO()
	{
	}
}
[Token(Token = "0x20002D6")]
public class LogosScreenSpawn : MonoBehaviour
{
	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawnPrefabs;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleOffsetMin;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleOffsetMax;

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xA43CC0", Offset = "0xA43CC0", VA = "0xA43CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xA43FB8", Offset = "0xA43FB8", VA = "0xA43FB8")]
	private float GetRnd(float rng)
	{
		return default(float);
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xA43FC8", Offset = "0xA43FC8", VA = "0xA43FC8")]
	public LogosScreenSpawn()
	{
	}
}
[Token(Token = "0x20002D7")]
public class LogPanel : MonoBehaviour
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tm;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject LogObject;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string myLog;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string oldLog;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxlines;

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xA43FDC", Offset = "0xA43FDC", VA = "0xA43FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xA44098", Offset = "0xA44098", VA = "0xA44098")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xA44118", Offset = "0xA44118", VA = "0xA44118")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xA44198", Offset = "0xA44198", VA = "0xA44198")]
	public static void SetLog(bool which)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xA44250", Offset = "0xA44250", VA = "0xA44250")]
	public static bool GetState()
	{
		return default(bool);
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xA442A4", Offset = "0xA442A4", VA = "0xA442A4")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xA4433C", Offset = "0xA4433C", VA = "0xA4433C")]
	private void RemoveExcessLinesFromStart()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xA44454", Offset = "0xA44454", VA = "0xA44454")]
	public LogPanel()
	{
	}
}
[Token(Token = "0x20002D8")]
public class MakeFloatRBsSinky : MonoBehaviour
{
	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sinkOverride;

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xA444C4", Offset = "0xA444C4", VA = "0xA444C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xA444C8", Offset = "0xA444C8", VA = "0xA444C8")]
	private void Sinky()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xA445FC", Offset = "0xA445FC", VA = "0xA445FC")]
	public MakeFloatRBsSinky()
	{
	}
}
[Token(Token = "0x20002D9")]
public class MakeNonKinematic : MonoBehaviour
{
	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xA4460C", Offset = "0xA4460C", VA = "0xA4460C")]
	public void DoAction()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xA44660", Offset = "0xA44660", VA = "0xA44660")]
	public MakeNonKinematic()
	{
	}
}
[Token(Token = "0x20002DA")]
public class ManualUnlockEntityDefiniton : MonoBehaviour
{
	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition[] entityDefinitions;

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xA44668", Offset = "0xA44668", VA = "0xA44668")]
	public void ManualUnlock()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xA446CC", Offset = "0xA446CC", VA = "0xA446CC")]
	public ManualUnlockEntityDefiniton()
	{
	}
}
[Token(Token = "0x20002DB")]
public class ManualWaterSurfaceTrigger : CollisionBase
{
	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool changeSkipStep;

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xA446D4", Offset = "0xA446D4", VA = "0xA446D4", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xA447B8", Offset = "0xA447B8", VA = "0xA447B8")]
	public ManualWaterSurfaceTrigger()
	{
	}
}
[Token(Token = "0x20002DC")]
public class MarkLevelComplete : MonoBehaviour
{
	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xA447C0", Offset = "0xA447C0", VA = "0xA447C0")]
	public void MarkAsComplete()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xA447E4", Offset = "0xA447E4", VA = "0xA447E4")]
	public MarkLevelComplete()
	{
	}
}
[Token(Token = "0x20002DD")]
public class MatchOrientation : MonoBehaviour
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 PosOffset;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 RotOffset;

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xA447EC", Offset = "0xA447EC", VA = "0xA447EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xA44810", Offset = "0xA44810", VA = "0xA44810")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xA44938", Offset = "0xA44938", VA = "0xA44938")]
	public MatchOrientation()
	{
	}
}
[Token(Token = "0x20002DE")]
public class MaterialManager : MonoBehaviour
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public Palette palette;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool randomColor;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Renderer> renders;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<MeshFilter> MeshFilters;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool externalColorChangeAllowed;

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xA449AC", Offset = "0xA449AC", VA = "0xA449AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xA3D40C", Offset = "0xA3D40C", VA = "0xA3D40C")]
	public void Change()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xA44CBC", Offset = "0xA44CBC", VA = "0xA44CBC")]
	public void SetColor()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xA44CC8", Offset = "0xA44CC8", VA = "0xA44CC8")]
	public void SetColorExternal(Color col)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xA44CB8", Offset = "0xA44CB8", VA = "0xA44CB8")]
	public void SetColor(Color col)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xA44F64", Offset = "0xA44F64", VA = "0xA44F64")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xA44CE0", Offset = "0xA44CE0", VA = "0xA44CE0")]
	private void ChangeMeshVertexColor(Color col)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xA44A24", Offset = "0xA44A24", VA = "0xA44A24")]
	private void SearchRenderersAndMeshFilters()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xA45000", Offset = "0xA45000", VA = "0xA45000")]
	public MaterialManager()
	{
	}
}
[Token(Token = "0x20002DF")]
public class MolluskWebcam : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	public enum Mood
	{
		[Token(Token = "0x40011BC")]
		neutral,
		[Token(Token = "0x40011BD")]
		mean,
		[Token(Token = "0x40011BE")]
		hurt,
		[Token(Token = "0x40011BF")]
		angry,
		[Token(Token = "0x40011C0")]
		angryEyesClosed
	}

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] moodSprites;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer webcam;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mood mood;

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xA45010", Offset = "0xA45010", VA = "0xA45010")]
	public void SetCam(bool which)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xA45040", Offset = "0xA45040", VA = "0xA45040")]
	public void SetMood(Mood _mood, bool showSprites = false)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xA450C0", Offset = "0xA450C0", VA = "0xA450C0")]
	public MolluskWebcam()
	{
	}
}
[Token(Token = "0x20002E1")]
public class Movement : MonoBehaviour
{
	[Token(Token = "0x20002E2")]
	public delegate void BlinderEventDelegate(bool blinderOn);

	[Token(Token = "0x20002E3")]
	[CompilerGenerated]
	private sealed class <SnapTurn>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool rightTurn;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Movement <>4__this;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <dir>5__2;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xA46B64", Offset = "0xA46B64", VA = "0xA46B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xA46BAC", Offset = "0xA46BAC", VA = "0xA46BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xA46690", Offset = "0xA46690", VA = "0xA46690")]
		[DebuggerHidden]
		public <SnapTurn>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xA46990", Offset = "0xA46990", VA = "0xA46990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xA46994", Offset = "0xA46994", VA = "0xA46994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xA46B6C", Offset = "0xA46B6C", VA = "0xA46B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float snapTurnStickThreshold;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float smoothTurnTurnStickThreshold;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float snapTurnDuration;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float snapTurnRotationMax;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float smoothTurnSpeed;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float verticalSpeedFactor;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float verticalHeightFactor;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float verticalHeight;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool factorChanged;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool AllowMovement;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool AllowTurning;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool UseLimits;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public static bool FastMove;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] verticalLimits;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTurning;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float increment;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float turnStarted;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastTurned;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float turned;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool snapStickCentered;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool smoothTurning;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool snapTurningUsesSteps;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool leftHandMoves;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform cameraRig;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 camForward;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] directions;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 input;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform camHelper;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool useVignetting;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tween vignettingTween;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isVignetting;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool forceVignetting;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material blinderMaterial;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string blinder;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Movement _instance;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float UVPosition;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float currentUVPosition;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool needsVignetting;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float vignetteSpeedIn;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float vignetteSpeedOut;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float blindersStrength;

	[Token(Token = "0x1700011F")]
	public static Movement Instance
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0xA43B04", Offset = "0xA43B04", VA = "0xA43B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000040")]
	public static event BlinderEventDelegate OnBlinderEvent
	{
		[Token(Token = "0x6001205")]
		[Address(RVA = "0xA450C8", Offset = "0xA450C8", VA = "0xA450C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001206")]
		[Address(RVA = "0xA45180", Offset = "0xA45180", VA = "0xA45180")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xA45238", Offset = "0xA45238", VA = "0xA45238")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xA454B4", Offset = "0xA454B4", VA = "0xA454B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xA4542C", Offset = "0xA4542C", VA = "0xA4542C")]
	public void SetSmoothTurnSpeed()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xA45484", Offset = "0xA45484", VA = "0xA45484")]
	public void SetSmoothTurning()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xA454E8", Offset = "0xA454E8", VA = "0xA454E8")]
	public void SetVignetting(bool which)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xA454F4", Offset = "0xA454F4", VA = "0xA454F4")]
	public void SetForceVignetting(bool which)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xA45500", Offset = "0xA45500", VA = "0xA45500")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xA4567C", Offset = "0xA4567C", VA = "0xA4567C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xA457F8", Offset = "0xA457F8", VA = "0xA457F8")]
	private void ControllerActive(int _id, bool _which)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xA45864", Offset = "0xA45864", VA = "0xA45864")]
	private void GamePaused(bool which)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xA45874", Offset = "0xA45874", VA = "0xA45874")]
	private void PreLoad(bool editorPreLoadCall)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xA45808", Offset = "0xA45808", VA = "0xA45808")]
	public void VerticalChange(bool force = false)
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xA45890", Offset = "0xA45890", VA = "0xA45890")]
	public static void ToggleMovement()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xA458E0", Offset = "0xA458E0", VA = "0xA458E0")]
	public static void ToggleLimits()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xA45950", Offset = "0xA45950", VA = "0xA45950")]
	public static void SetLimits(bool which)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xA459BC", Offset = "0xA459BC", VA = "0xA459BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xA45ED4", Offset = "0xA45ED4", VA = "0xA45ED4")]
	private void UpdateMovement(int _ID)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xA4655C", Offset = "0xA4655C", VA = "0xA4655C")]
	private void Move(VRControllerMapper mapper, Vector2 stickDirection)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xA46608", Offset = "0xA46608", VA = "0xA46608")]
	[IteratorStateMachine(typeof(<SnapTurn>d__60))]
	private IEnumerator SnapTurn(bool rightTurn)
	{
		return null;
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xA45A3C", Offset = "0xA45A3C", VA = "0xA45A3C")]
	private void VignettingChange(bool which)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xA453E0", Offset = "0xA453E0", VA = "0xA453E0")]
	private void CalcBlinders()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xA43C80", Offset = "0xA43C80", VA = "0xA43C80")]
	public void VignettingTick(bool which = true)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xA466B8", Offset = "0xA466B8", VA = "0xA466B8")]
	private void UpdateVignetting()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xA466E0", Offset = "0xA466E0", VA = "0xA466E0")]
	private void EndVignetting()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xA46748", Offset = "0xA46748", VA = "0xA46748")]
	public Movement()
	{
	}
}
[Token(Token = "0x20002E4")]
public class MovementLimits : MonoBehaviour
{
	[Token(Token = "0x20002E5")]
	public delegate void OnMovementLimitsInitDelegate(MovementLimits movementLimits, bool active);

	[Token(Token = "0x20002E6")]
	public delegate void MovementLimitsDeactivateDelegate(string id);

	[Token(Token = "0x20002E7")]
	public enum Mode
	{
		[Token(Token = "0x4001222")]
		regular,
		[Token(Token = "0x4001223")]
		lowPerformance
	}

	[Token(Token = "0x20002E8")]
	public static class Poly
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xA486E8", Offset = "0xA486E8", VA = "0xA486E8")]
		public static bool ContainsPoint(Vector3[] polyPoints, Vector3 p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> limitNodes;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LimitNode> limitNodesComp;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] limitNodesArray;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] closestPointOnLine;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nodes;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform editorPlayer;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool drawEditorDebugLines;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[Header("is limits part of shared prefab")]
	[Space]
	public bool isDefaultLimits;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[Header("replaces default limits")]
	public bool overrideDefault;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform rig;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform playerHead;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool initialised;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int idx2;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 distanceVector;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Header("player must stay inside or outside (obstacle) ")]
	public bool stayInside;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool isOnCorrectSideOfPolygon;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 playerHeadPosition;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isActive;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<LimitNodeVisual> limitNodesVisual;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool showLimitNodes;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool showLimitNodeConnections;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lineWidth;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float limitPullFactorOverride;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float limitPullFactor;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Mode performanceMode;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int visibleNodes;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static MovementLimits masterLimits;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool useLimitBell;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string ID;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float totalDistance;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int lineCount;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastB;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool lineHasEnded;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float dist;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float closestDistance;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int closestDistanceIDX;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float closestsBuoyDistance;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform closestsBuoy;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float buoyDist;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float minDistBell;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool bellCanRing;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float distCounter;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 distanceForce;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float nextRing;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int reScanCount;

	[Token(Token = "0x14000041")]
	public static event OnMovementLimitsInitDelegate OnMovementLimitsInit
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0xA46BB4", Offset = "0xA46BB4", VA = "0xA46BB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0xA46C6C", Offset = "0xA46C6C", VA = "0xA46C6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event MovementLimitsDeactivateDelegate OnMovementLimitsDeactivate
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xA46D24", Offset = "0xA46D24", VA = "0xA46D24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001232")]
		[Address(RVA = "0xA46DE0", Offset = "0xA46DE0", VA = "0xA46DE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xA46E9C", Offset = "0xA46E9C", VA = "0xA46E9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xA46EA0", Offset = "0xA46EA0", VA = "0xA46EA0")]
	private void Init()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xA47A84", Offset = "0xA47A84", VA = "0xA47A84")]
	private void InitLimits(MovementLimits movementLimits, bool active)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xA47B50", Offset = "0xA47B50", VA = "0xA47B50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xA47DDC", Offset = "0xA47DDC", VA = "0xA47DDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xA47EA0", Offset = "0xA47EA0", VA = "0xA47EA0")]
	public static void CallDeactivate(string _whichID)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xA47F0C", Offset = "0xA47F0C", VA = "0xA47F0C")]
	private void Deactivate(string id)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xA478AC", Offset = "0xA478AC", VA = "0xA478AC")]
	private void HideVisualNodes()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xA47FFC", Offset = "0xA47FFC", VA = "0xA47FFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xA48960", Offset = "0xA48960", VA = "0xA48960")]
	public bool InsidePolygon(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xA48968", Offset = "0xA48968", VA = "0xA48968")]
	public static Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xA482E8", Offset = "0xA482E8", VA = "0xA482E8")]
	public void CollidePolygon(Transform _rig, Vector3 _playerHead)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xA48AF8", Offset = "0xA48AF8", VA = "0xA48AF8")]
	private void RingBellClosestBuoy(float distance)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xA487A8", Offset = "0xA487A8", VA = "0xA487A8")]
	private void FindClosestEntry()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xA47514", Offset = "0xA47514", VA = "0xA47514")]
	private void GetNodes()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xA48DE8", Offset = "0xA48DE8", VA = "0xA48DE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xA4939C", Offset = "0xA4939C", VA = "0xA4939C")]
	public MovementLimits()
	{
	}
}
[Token(Token = "0x20002E9")]
public class MoveRotationPosition : MonoBehaviour
{
	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float power;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parentTo;

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xA494E8", Offset = "0xA494E8", VA = "0xA494E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xA49560", Offset = "0xA49560", VA = "0xA49560")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xA49628", Offset = "0xA49628", VA = "0xA49628")]
	public MoveRotationPosition()
	{
	}
}
[Token(Token = "0x20002EA")]
public class NativeLanguageLabel : MonoBehaviour
{
	[Token(Token = "0x6001250")]
	[Address(RVA = "0xA49638", Offset = "0xA49638", VA = "0xA49638")]
	private void Start()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xA497E4", Offset = "0xA497E4", VA = "0xA497E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xA49864", Offset = "0xA49864", VA = "0xA49864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xA4963C", Offset = "0xA4963C", VA = "0xA4963C")]
	private void SetLabels()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xA498E4", Offset = "0xA498E4", VA = "0xA498E4")]
	public NativeLanguageLabel()
	{
	}
}
[Token(Token = "0x20002EB")]
public class NoSleep : MonoBehaviour
{
	[Token(Token = "0x6001255")]
	[Address(RVA = "0xA498EC", Offset = "0xA498EC", VA = "0xA498EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xA49948", Offset = "0xA49948", VA = "0xA49948")]
	public NoSleep()
	{
	}
}
[Token(Token = "0x20002EC")]
public class NoTrespassing : MonoBehaviour
{
	[Token(Token = "0x20002ED")]
	public delegate void TrespasserDelegate(Rigidbody _trespasser, string _areaID, Type _type);

	[Token(Token = "0x20002EE")]
	public enum Type
	{
		[Token(Token = "0x4001245")]
		human,
		[Token(Token = "0x4001246")]
		otherRB,
		[Token(Token = "0x4001247")]
		tentacle,
		[Token(Token = "0x4001248")]
		none
	}

	[Token(Token = "0x20002EF")]
	[CompilerGenerated]
	private sealed class <Blink>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NoTrespassing <>4__this;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xA4AC14", Offset = "0xA4AC14", VA = "0xA4AC14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xA4AC5C", Offset = "0xA4AC5C", VA = "0xA4AC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xA49CBC", Offset = "0xA49CBC", VA = "0xA49CBC")]
		[DebuggerHidden]
		public <Blink>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xA4AA08", Offset = "0xA4AA08", VA = "0xA4AA08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xA4AA0C", Offset = "0xA4AA0C", VA = "0xA4AA0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xA4AC1C", Offset = "0xA4AC1C", VA = "0xA4AC1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[CompilerGenerated]
	private sealed class <ExplodeStuff>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody colRB;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _delay;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool destroyThis;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <trackRB>5__2;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xA4AF04", Offset = "0xA4AF04", VA = "0xA4AF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xA4AF4C", Offset = "0xA4AF4C", VA = "0xA4AF4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xA4A7CC", Offset = "0xA4A7CC", VA = "0xA4A7CC")]
		[DebuggerHidden]
		public <ExplodeStuff>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xA4AC64", Offset = "0xA4AC64", VA = "0xA4AC64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xA4AC68", Offset = "0xA4AC68", VA = "0xA4AC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xA4AF0C", Offset = "0xA4AF0C", VA = "0xA4AF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string areaID;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlyTriggerDelegate;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[Space]
	[Space]
	[Header("Humans")]
	public bool trackHumans;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool activateForEveryone;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool doNotActivateForID;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> characterID;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hurtHumans;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool OOBHumans;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float humanOOBDelay;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool humanExplosionEnabled;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Space]
	[Space]
	[Header("Objects")]
	public bool trackOtherRB;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool explosionEnabled;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float explosionDelay;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool removeObject;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Header("Tentacles")]
	[Space]
	[Space]
	public bool trackTentacles;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool hurtTentacles;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool tentacleExplosionEnabled;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float tentacleExplosionDelay;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[Space]
	public bool refreshCollider;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float refreshTime;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider myCollider;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public bool flashBorder;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject viusualBorder;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HumanController trespasser;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool playAlarmSFX;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IEnumerator blinkCoroutine;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator explodeCoroutine;

	[Token(Token = "0x14000043")]
	public static event TrespasserDelegate OnTrespasser
	{
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xA49950", Offset = "0xA49950", VA = "0xA49950")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xA49A08", Offset = "0xA49A08", VA = "0xA49A08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xA49AC0", Offset = "0xA49AC0", VA = "0xA49AC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xA49C10", Offset = "0xA49C10", VA = "0xA49C10")]
	[ContextMenu("DoRefreshCollider")]
	public void DoRefreshCollider()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xA49C48", Offset = "0xA49C48", VA = "0xA49C48")]
	[IteratorStateMachine(typeof(<Blink>d__34))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xA49CE4", Offset = "0xA49CE4", VA = "0xA49CE4")]
	public void CallManualTrespass(Rigidbody _Rb)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xA49CE8", Offset = "0xA49CE8", VA = "0xA49CE8")]
	public void CeckRB(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xA4A614", Offset = "0xA4A614", VA = "0xA4A614")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xA4A424", Offset = "0xA4A424", VA = "0xA4A424")]
	private void TrackTentacles(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xA4A740", Offset = "0xA4A740", VA = "0xA4A740")]
	private void PlayAlarm(Vector3 pos)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xA4A1E0", Offset = "0xA4A1E0", VA = "0xA4A1E0")]
	private void TrackOtherRB(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xA49ED8", Offset = "0xA49ED8", VA = "0xA49ED8")]
	private void TrackHumans(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xA4A6A8", Offset = "0xA4A6A8", VA = "0xA4A6A8")]
	[IteratorStateMachine(typeof(<ExplodeStuff>d__42))]
	private IEnumerator ExplodeStuff(Rigidbody colRB, float _delay = 0.25f, bool destroyThis = false)
	{
		return null;
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xA4A7F4", Offset = "0xA4A7F4", VA = "0xA4A7F4")]
	public NoTrespassing()
	{
	}
}
[Token(Token = "0x20002F1")]
public class OceanAmbience : MonoBehaviour
{
	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("0:calm | 1:medium | 2:heavy | 3:off")]
	public int wavesParameter;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int windParameter;

	[Token(Token = "0x4001254")]
	public const string windParameterName = "Wind";

	[Token(Token = "0x4001255")]
	public const string wavesParameterName = "Waves";

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xA4AF54", Offset = "0xA4AF54", VA = "0xA4AF54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xA4B000", Offset = "0xA4B000", VA = "0xA4B000")]
	public OceanAmbience()
	{
	}
}
[Token(Token = "0x20002F2")]
public class AddToOOb : MonoBehaviour
{
	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool replaceOOB;

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xA4B008", Offset = "0xA4B008", VA = "0xA4B008")]
	private void Start()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xA4B3B4", Offset = "0xA4B3B4", VA = "0xA4B3B4")]
	public AddToOOb()
	{
	}
}
[Token(Token = "0x20002F3")]
public class ParachuteRespawnManager : MonoBehaviour
{
	[Token(Token = "0x20002F4")]
	public delegate void OutOfBoundsDelegate(ParachuteRespawnTracker tracker, bool _adddebris = false, bool _useReplacer = true);

	[Token(Token = "0x20002F5")]
	[CompilerGenerated]
	private sealed class <CollisionCheat>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody _colRB;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xA4CA1C", Offset = "0xA4CA1C", VA = "0xA4CA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xA4CA64", Offset = "0xA4CA64", VA = "0xA4CA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xA4B7E0", Offset = "0xA4B7E0", VA = "0xA4B7E0")]
		[DebuggerHidden]
		public <CollisionCheat>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xA4C8F0", Offset = "0xA4C8F0", VA = "0xA4C8F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xA4C8F4", Offset = "0xA4C8F4", VA = "0xA4C8F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xA4CA24", Offset = "0xA4CA24", VA = "0xA4CA24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> outOfBoundsRBs;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> insideBoundsRBs;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParachuteRespawnTracker> trackedObjects;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<FloatRigidbody> outOfBoundsFloats;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatRigidbody> insideBoundsFloats;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<ParachuteRespawnTracker, float> outOfReachSphereDict;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<RigPosition> safeZoneList;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> safeZoneRBs;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform oob;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform waterOOB;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool useDistanceCheck;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool useSafeZoneWithPosition0;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ParachuteRespawnManager _instance;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 waterpos;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParachuteRespawnTracker prt;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float maxDistance;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float maxTimeOutside;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cleanedPosition;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int lastRB;

	[Token(Token = "0x17000126")]
	public static ParachuteRespawnManager Instance
	{
		[Token(Token = "0x600127B")]
		[Address(RVA = "0xA4B238", Offset = "0xA4B238", VA = "0xA4B238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000044")]
	public static event OutOfBoundsDelegate OnOutOfBounds
	{
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xA4B3BC", Offset = "0xA4B3BC", VA = "0xA4B3BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600127A")]
		[Address(RVA = "0xA4B474", Offset = "0xA4B474", VA = "0xA4B474")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xA4B52C", Offset = "0xA4B52C", VA = "0xA4B52C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xA4B584", Offset = "0xA4B584", VA = "0xA4B584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xA4B604", Offset = "0xA4B604", VA = "0xA4B604")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xA4B684", Offset = "0xA4B684", VA = "0xA4B684")]
	public void RegisterSafeZone(RigPosition rigPosition)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xA4B76C", Offset = "0xA4B76C", VA = "0xA4B76C")]
	[IteratorStateMachine(typeof(<CollisionCheat>d__23))]
	private IEnumerator CollisionCheat(Rigidbody _colRB)
	{
		return null;
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xA4B808", Offset = "0xA4B808", VA = "0xA4B808")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xA4B8D8", Offset = "0xA4B8D8", VA = "0xA4B8D8")]
	public void AddTrackedObjectWithScript(ParachuteRespawnTracker _prt, Entity _entityScript)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xA4B9C0", Offset = "0xA4B9C0", VA = "0xA4B9C0")]
	public void RemoveTrackedObject(GameObject _go)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xA4BA6C", Offset = "0xA4BA6C", VA = "0xA4BA6C")]
	public void RemoveTrackedObject(ParachuteRespawnTracker _prt)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xA4BAFC", Offset = "0xA4BAFC", VA = "0xA4BAFC")]
	public void AddTrackedObject(GameObject _go, Entity _entityScript)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xA4BC94", Offset = "0xA4BC94", VA = "0xA4BC94")]
	public void DoOOBCalls(ParachuteRespawnTracker _prt)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xA4BD14", Offset = "0xA4BD14", VA = "0xA4BD14")]
	public void OOBCheck(Rigidbody colRB, bool fromBurnout = false, [Optional] Glue glue)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xA4C118", Offset = "0xA4C118", VA = "0xA4C118")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xA4C488", Offset = "0xA4C488", VA = "0xA4C488")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xA4C4A4", Offset = "0xA4C4A4", VA = "0xA4C4A4")]
	public ParachuteRespawnManager()
	{
	}
}
[Token(Token = "0x20002F6")]
public class ParachuteRespawnTracker : SandboxInit_base
{
	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Entity entityScript;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoRegister;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool reuseGameobject;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool useStartPosition;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool useClosestSpawnArea;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RigPosition closestAreaOnStart;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 startPosition;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useSpawnerRotation;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody myTriggerRB;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startPositionYOffset;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool spanwPosSet;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool trackOnly;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool respawnAfterLevelDone;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool respawnLock;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool noParachute;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool OOBOnBurnout;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("use this to manu add a type of object to respawn")]
	public bool hideAfterRegister;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> connectedObjects;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector3> connectedOffsets;

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xA4CA6C", Offset = "0xA4CA6C", VA = "0xA4CA6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xA4CAE4", Offset = "0xA4CAE4", VA = "0xA4CAE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xA4CC9C", Offset = "0xA4CC9C", VA = "0xA4CC9C")]
	public void SetSpawnPos()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xA4BD10", Offset = "0xA4BD10", VA = "0xA4BD10")]
	public void OutOfBounds()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xA4CF30", Offset = "0xA4CF30", VA = "0xA4CF30")]
	public Vector3 GetSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xA4CBD4", Offset = "0xA4CBD4", VA = "0xA4CBD4")]
	public void AutoRegister()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xA4CF50", Offset = "0xA4CF50", VA = "0xA4CF50", Slot = "4")]
	public override void SandboxInit()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xA4CF54", Offset = "0xA4CF54", VA = "0xA4CF54")]
	public void Unregister()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xA4CFE4", Offset = "0xA4CFE4", VA = "0xA4CFE4")]
	public ParachuteRespawnTracker()
	{
	}
}
[Token(Token = "0x20002F7")]
public class ParachuteStandalone : MonoBehaviour
{
	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isColliding;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int collisions;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isGrabbed;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasGrabbed;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool chuteDeployed;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deployEffectFactor;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float velocityCounterFactor;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gravityCounterFactor;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool userRandomness;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject parachuteVisual;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastY;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform chutePoint;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minDeploySpeed;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minDeployHeight;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float deployForce;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool removeAfterLanded;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool parachuteOnly;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float openParachuteBelow;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float visualScaleFactor;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject colliders;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool clearStarted;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool autoInit;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject fallingClothSFX;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float oDrag;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float oAngularDrag;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int velKillCount;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float speedBaseHeight;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 velocity;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float forceAdded;

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xA4CFFC", Offset = "0xA4CFFC", VA = "0xA4CFFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xA4D0D0", Offset = "0xA4D0D0", VA = "0xA4D0D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xA4D1A4", Offset = "0xA4D1A4", VA = "0xA4D1A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xA4D2CC", Offset = "0xA4D2CC", VA = "0xA4D2CC")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xA4D20C", Offset = "0xA4D20C", VA = "0xA4D20C")]
	public void Init(Rigidbody _rb, bool _killVelocity = true)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xA4D5E0", Offset = "0xA4D5E0", VA = "0xA4D5E0")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xA4D6CC", Offset = "0xA4D6CC", VA = "0xA4D6CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xA4D770", Offset = "0xA4D770", VA = "0xA4D770")]
	private void CheckHeight()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xA4DA64", Offset = "0xA4DA64", VA = "0xA4DA64")]
	private void DeployChute()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xA4D3A4", Offset = "0xA4D3A4", VA = "0xA4D3A4")]
	public void GroundReset()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xA4DC9C", Offset = "0xA4DC9C", VA = "0xA4DC9C")]
	private void ReallyDestroy()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xA4D910", Offset = "0xA4D910", VA = "0xA4D910")]
	private void Parachuting()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xA4DD58", Offset = "0xA4DD58", VA = "0xA4DD58")]
	public ParachuteStandalone()
	{
	}
}
[Token(Token = "0x20002F8")]
public class SpawnPointParachuteDeploy : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	public delegate void OnParachuteDelegate(ParachuteStandalone _parachute, bool _which);

	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private sealed class <KeepInPlace>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody _newRB;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _position;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <countInPlace>5__2;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xA4F8AC", Offset = "0xA4F8AC", VA = "0xA4F8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xA4F8F4", Offset = "0xA4F8F4", VA = "0xA4F8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xA4F000", Offset = "0xA4F000", VA = "0xA4F000")]
		[DebuggerHidden]
		public <KeepInPlace>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xA4F6FC", Offset = "0xA4F6FC", VA = "0xA4F6FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xA4F700", Offset = "0xA4F700", VA = "0xA4F700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xA4F8B4", Offset = "0xA4F8B4", VA = "0xA4F8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject replacerPrefab;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject puffPrefab;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parachutePrefab;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 spawnPosition;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool noTracker;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool randomRotation;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject debrisPrefab;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ParachuteStandalone> activeParachutes;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> respawnedRBs;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool levelDone;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool useReplacerOnReuse;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool noParachute;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool addAndInitTracker;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IEnumerator keepInPlaceCoroutine;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SpawnPointParachuteDeploy _instance;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParachuteRespawnTracker currentSpawn;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float closest;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentDistance;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RigPosition closestRigPosition;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool addDebris;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 forceRot;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject currentSpawnGameObject;

	[Token(Token = "0x17000129")]
	public static SpawnPointParachuteDeploy Instance
	{
		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xA4C214", Offset = "0xA4C214", VA = "0xA4C214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000045")]
	public static event OnParachuteDelegate OnParachute
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xA4DD94", Offset = "0xA4DD94", VA = "0xA4DD94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xA4DE4C", Offset = "0xA4DE4C", VA = "0xA4DE4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xA4DF04", Offset = "0xA4DF04", VA = "0xA4DF04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xA4DFD0", Offset = "0xA4DFD0", VA = "0xA4DFD0")]
	public void RemoveParachute(GameObject _para)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xA4DB8C", Offset = "0xA4DB8C", VA = "0xA4DB8C")]
	public void RemoveParachute(ParachuteStandalone _para)
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xA4E180", Offset = "0xA4E180", VA = "0xA4E180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xA4E2E8", Offset = "0xA4E2E8", VA = "0xA4E2E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xA4E450", Offset = "0xA4E450", VA = "0xA4E450")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xA4E608", Offset = "0xA4E608", VA = "0xA4E608")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xA4E614", Offset = "0xA4E614", VA = "0xA4E614")]
	private void SpawnEntity()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xA4EC78", Offset = "0xA4EC78", VA = "0xA4EC78")]
	[IteratorStateMachine(typeof(<KeepInPlace>d__30))]
	private IEnumerator KeepInPlace(Rigidbody _newRB, Vector3 _position)
	{
		return null;
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xA4F028", Offset = "0xA4F028", VA = "0xA4F028")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xA4F298", Offset = "0xA4F298", VA = "0xA4F298")]
	public RigPosition GetRigFromEnum(RigPosition.PositionEnum _enum)
	{
		return null;
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xA4CD64", Offset = "0xA4CD64", VA = "0xA4CD64")]
	public RigPosition GetClosestRigPosition()
	{
		return null;
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xA4F400", Offset = "0xA4F400", VA = "0xA4F400")]
	public void ParachuteSpawnAt(ParachuteRespawnTracker _tracker, Vector3 _position, bool rndRot = true, [Optional] Vector3 _rotation, bool _addDebris = false)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xA4F4AC", Offset = "0xA4F4AC", VA = "0xA4F4AC")]
	public void NoTrackerParachuteSpawnAt(GameObject _prefab, Vector3 _position, bool rndRot = true, [Optional] Vector3 _rotation, bool _addDebris = false)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xA4DC1C", Offset = "0xA4DC1C", VA = "0xA4DC1C")]
	public void ParachuteEvent(ParachuteStandalone _para, bool _which)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xA4C390", Offset = "0xA4C390", VA = "0xA4C390")]
	public ParachuteStandalone ReturnParachuteRoot(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xA4ED10", Offset = "0xA4ED10", VA = "0xA4ED10")]
	public ParachuteStandalone AttachParachute(GameObject _gameObject, bool _killVelocity = true)
	{
		return null;
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xA4EFF0", Offset = "0xA4EFF0", VA = "0xA4EFF0")]
	public static float RND(float range)
	{
		return default(float);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xA4F518", Offset = "0xA4F518", VA = "0xA4F518")]
	public SpawnPointParachuteDeploy()
	{
	}
}
[Token(Token = "0x20002FB")]
public class OptionsProgressGauge : MonoBehaviour
{
	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxAngle;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform needleRoot;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aniRoot;

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xA4F8FC", Offset = "0xA4F8FC", VA = "0xA4F8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xA4FA04", Offset = "0xA4FA04", VA = "0xA4FA04")]
	public OptionsProgressGauge()
	{
	}
}
[Token(Token = "0x20002FC")]
public class OverlayType : MonoBehaviour
{
	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OverlayType _instance;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject content;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material titleTMProMat;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mode;

	[Token(Token = "0x1700012C")]
	public static OverlayType Instance
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xA4FA14", Offset = "0xA4FA14", VA = "0xA4FA14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xA4FBA0", Offset = "0xA4FBA0", VA = "0xA4FBA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xA4FBC0", Offset = "0xA4FBC0", VA = "0xA4FBC0")]
	public void ShowTitle(bool which = true)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xA4FBE8", Offset = "0xA4FBE8", VA = "0xA4FBE8")]
	public OverlayType()
	{
	}
}
[Token(Token = "0x20002FD")]
public class OverrideSetTentacleConfig : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverrideSetTentacleConfig <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xA4FDC4", Offset = "0xA4FDC4", VA = "0xA4FDC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xA4FE0C", Offset = "0xA4FE0C", VA = "0xA4FE0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xA4FC64", Offset = "0xA4FC64", VA = "0xA4FC64")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xA4FC94", Offset = "0xA4FC94", VA = "0xA4FC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xA4FC98", Offset = "0xA4FC98", VA = "0xA4FC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xA4FDCC", Offset = "0xA4FDCC", VA = "0xA4FDCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleSettings overrideTentacleSettings;

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xA4FBF0", Offset = "0xA4FBF0", VA = "0xA4FBF0")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	[ContextMenu("DoSettings")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xA4FC8C", Offset = "0xA4FC8C", VA = "0xA4FC8C")]
	public OverrideSetTentacleConfig()
	{
	}
}
[Token(Token = "0x20002FF")]
public class Padlock : MonoBehaviour
{
	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint fixedJoint;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject closedLock;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject openLock;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelDirector_C118_SisterRepair levelDir;

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xA4FE14", Offset = "0xA4FE14", VA = "0xA4FE14")]
	private void Start()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xA4FE4C", Offset = "0xA4FE4C", VA = "0xA4FE4C")]
	public void AllowPullOff(LevelDirector_C118_SisterRepair _levelDir)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xA4FE80", Offset = "0xA4FE80", VA = "0xA4FE80")]
	public void JointBreakCallback()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xA4FF60", Offset = "0xA4FF60", VA = "0xA4FF60")]
	public Padlock()
	{
	}
}
[Token(Token = "0x2000300")]
public class ParachuteSpawnPrefab : MonoBehaviour
{
	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnPrefab;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openParachuteBelow;

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xA4FF68", Offset = "0xA4FF68", VA = "0xA4FF68")]
	private void Start()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xA50094", Offset = "0xA50094", VA = "0xA50094")]
	public ParachuteSpawnPrefab()
	{
	}
}
[Token(Token = "0x2000301")]
public class ParentTo : MonoBehaviour
{
	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform myParent;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool worldPositionStays;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setToLocalZero;

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xA500A4", Offset = "0xA500A4", VA = "0xA500A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xA50144", Offset = "0xA50144", VA = "0xA50144")]
	public ParentTo()
	{
	}
}
[Token(Token = "0x2000302")]
public class PeanutButterDial : MonoBehaviour
{
	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Dial;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro text;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float MaxRot;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float MinRot;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PhysicalSlider sizeSlider;

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xA5014C", Offset = "0xA5014C", VA = "0xA5014C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xA50350", Offset = "0xA50350", VA = "0xA50350")]
	public void Set()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xA504B0", Offset = "0xA504B0", VA = "0xA504B0")]
	public void SetDial(float n)
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xA50500", Offset = "0xA50500", VA = "0xA50500")]
	public PeanutButterDial()
	{
	}
}
[Token(Token = "0x2000303")]
public class PedestrianLadder : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	[CompilerGenerated]
	private sealed class <CoolOff>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PedestrianLadder <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xA5083C", Offset = "0xA5083C", VA = "0xA5083C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xA50884", Offset = "0xA50884", VA = "0xA50884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xA50748", Offset = "0xA50748", VA = "0xA50748")]
		[DebuggerHidden]
		public <CoolOff>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xA50780", Offset = "0xA50780", VA = "0xA50780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xA50784", Offset = "0xA50784", VA = "0xA50784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xA50844", Offset = "0xA50844", VA = "0xA50844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 dir;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool cooldown;

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xA50514", Offset = "0xA50514", VA = "0xA50514")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xA50518", Offset = "0xA50518", VA = "0xA50518")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xA506D4", Offset = "0xA506D4", VA = "0xA506D4")]
	[IteratorStateMachine(typeof(<CoolOff>d__4))]
	private IEnumerator CoolOff()
	{
		return null;
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xA50770", Offset = "0xA50770", VA = "0xA50770")]
	public PedestrianLadder()
	{
	}
}
[Token(Token = "0x2000305")]
public class PerformanceTests : MonoBehaviour
{
	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PerformanceTests _instance;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool NOFLOATING;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MyCanvas;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject VirtualConsole;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material BuildingsMaterial;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material VehiclesMaterial;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material WaterSurfaceMaterial;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Shader NewUberShader;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Shader NewUberNoFoamlineShader;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Shader WaterSurfaceShader;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shader WaterSurfaceFoamShader;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Shader WaterSurfaceReflectionShader;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Shader WaterSurfaceNoNoiseShader;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Shader WaterSurfaceShaderNoCull;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Shader WaterSurfaceShaderQuestTest;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material speechBubbleTypeMat;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material speechBubbleBackgroundMat;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Material lastSkyBox;

	[Token(Token = "0x17000131")]
	public static PerformanceTests Instance
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xA5088C", Offset = "0xA5088C", VA = "0xA5088C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xA50A18", Offset = "0xA50A18", VA = "0xA50A18")]
	[ContextMenu("destroy")]
	public void KillCanvas()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xA50E54", Offset = "0xA50E54", VA = "0xA50E54")]
	public static void ToggleSkybox()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xA50EA8", Offset = "0xA50EA8", VA = "0xA50EA8")]
	public static void ClearSkybox()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xA50EE0", Offset = "0xA50EE0", VA = "0xA50EE0")]
	public void SetDefaultWaterSurface()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xA50F04", Offset = "0xA50F04", VA = "0xA50F04")]
	public void SetSurfaceFoamNoise()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xA50F28", Offset = "0xA50F28", VA = "0xA50F28")]
	public void SetSurfaceReflectionNoise()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xA50F4C", Offset = "0xA50F4C", VA = "0xA50F4C")]
	public void SetSurfaceNoNoise()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xA50F70", Offset = "0xA50F70", VA = "0xA50F70")]
	public void SetSurfaceNoCull()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xA50F94", Offset = "0xA50F94", VA = "0xA50F94")]
	public void SetSurfaceQuestNoise()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xA50FB8", Offset = "0xA50FB8", VA = "0xA50FB8")]
	public void ToggleFoamline()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xA51074", Offset = "0xA51074", VA = "0xA51074")]
	public PerformanceTests()
	{
	}
}
[Token(Token = "0x2000306")]
public class PhysicalRotors : MonoBehaviour
{
	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint[] rotors;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int dir;

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xA5107C", Offset = "0xA5107C", VA = "0xA5107C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xA51184", Offset = "0xA51184", VA = "0xA51184")]
	public void DestroyHinges()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xA512AC", Offset = "0xA512AC", VA = "0xA512AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xA51380", Offset = "0xA51380", VA = "0xA51380")]
	public PhysicalRotors()
	{
	}
}
[Serializable]
[Token(Token = "0x2000307")]
public class SliderEvent : UnityEvent<float>
{
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xA51390", Offset = "0xA51390", VA = "0xA51390")]
	public SliderEvent()
	{
	}
}
[Token(Token = "0x2000308")]
public class PhysicalSlider : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	public delegate void OnSliderUpdateDelegate(float _handOverValue);

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ID;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable sliderGrabbable;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool grabbableOnlyOperation;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ConfigurableJoint myJoint;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform limitMax;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform limitMin;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float range;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float startFactor;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool setStartFactor;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastFactor;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentFactor;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 debugTargetPosition;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startposition;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float segmentLength;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool debugMe;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float limitModifier;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool suppressCalls;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool callbackOnRelaseOnly;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SliderEvent sliderEvent;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool segmentHapticFeedback;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lastHapticSegmentValue;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastNewSnapSegmentValue;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool newSnap;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int sliderSegments;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int hapticSnappingMultiplier;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool doReleaseAdjust;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool releaseOnSegmentSnap;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float unlockTime;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string snapSFX;

	[Token(Token = "0x14000046")]
	public event OnSliderUpdateDelegate OnSliderUpdate
	{
		[Token(Token = "0x6001300")]
		[Address(RVA = "0xA513D8", Offset = "0xA513D8", VA = "0xA513D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001301")]
		[Address(RVA = "0xA51474", Offset = "0xA51474", VA = "0xA51474")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xA51510", Offset = "0xA51510", VA = "0xA51510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xA517A8", Offset = "0xA517A8", VA = "0xA517A8")]
	public bool SliderGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xA5171C", Offset = "0xA5171C", VA = "0xA5171C")]
	[ContextMenu("SetDebugFactorPosition")]
	private void SetStartFactorPosition()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xA502C4", Offset = "0xA502C4", VA = "0xA502C4")]
	public void SetSlider(float factor, bool noCall = false)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xA517C4", Offset = "0xA517C4", VA = "0xA517C4")]
	private void SetPositionForFactor(float factor)
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xA50234", Offset = "0xA50234", VA = "0xA50234")]
	public float GetFactorForPosition()
	{
		return default(float);
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xA51724", Offset = "0xA51724", VA = "0xA51724")]
	private void GrabLock()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xA5189C", Offset = "0xA5189C", VA = "0xA5189C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xA51928", Offset = "0xA51928", VA = "0xA51928")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xA519B4", Offset = "0xA519B4", VA = "0xA519B4")]
	private void GrabEvent(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xA502D0", Offset = "0xA502D0", VA = "0xA502D0")]
	public void ForceCall()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xA519B8", Offset = "0xA519B8", VA = "0xA519B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xA51E74", Offset = "0xA51E74", VA = "0xA51E74")]
	private void Unlock()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xA51EF8", Offset = "0xA51EF8", VA = "0xA51EF8")]
	public PhysicalSlider()
	{
	}
}
[Token(Token = "0x200030A")]
public class PlayerPrefsX
{
	[Token(Token = "0x200030B")]
	private enum ArrayType
	{
		[Token(Token = "0x4001314")]
		Float,
		[Token(Token = "0x4001315")]
		Int32,
		[Token(Token = "0x4001316")]
		Bool,
		[Token(Token = "0x4001317")]
		String,
		[Token(Token = "0x4001318")]
		Vector2,
		[Token(Token = "0x4001319")]
		Vector3,
		[Token(Token = "0x400131A")]
		Quaternion,
		[Token(Token = "0x400131B")]
		Color
	}

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int endianDiff1;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int endianDiff2;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int idx;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static byte[] byteBlock;

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xA520D4", Offset = "0xA520D4", VA = "0xA520D4")]
	public static string GetString(string name, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xA52124", Offset = "0xA52124", VA = "0xA52124")]
	public static void SetString(string name, string value)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xA5212C", Offset = "0xA5212C", VA = "0xA5212C")]
	public static bool SetBool(string name, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xA521BC", Offset = "0xA521BC", VA = "0xA521BC")]
	public static bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xA521D8", Offset = "0xA521D8", VA = "0xA521D8")]
	public static bool GetBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xA521F8", Offset = "0xA521F8", VA = "0xA521F8")]
	public static long GetLong(string key, long defaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xA522B4", Offset = "0xA522B4", VA = "0xA522B4")]
	public static long GetLong(string key)
	{
		return default(long);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xA522A4", Offset = "0xA522A4", VA = "0xA522A4")]
	private static void SplitLong(long input, out int lowBits, out int highBits)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xA52350", Offset = "0xA52350", VA = "0xA52350")]
	public static void SetLong(string key, long value)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xA523E8", Offset = "0xA523E8", VA = "0xA523E8")]
	public static bool SetVector2(string key, Vector2 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xA52520", Offset = "0xA52520", VA = "0xA52520")]
	private static Vector2 GetVector2(string key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xA52698", Offset = "0xA52698", VA = "0xA52698")]
	public static Vector2 GetVector2(string key, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xA526DC", Offset = "0xA526DC", VA = "0xA526DC")]
	public static bool SetVector3(string key, Vector3 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xA5277C", Offset = "0xA5277C", VA = "0xA5277C")]
	public static Vector3 GetVector3(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xA527F4", Offset = "0xA527F4", VA = "0xA527F4")]
	public static Vector3 GetVector3(string key, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xA5284C", Offset = "0xA5284C", VA = "0xA5284C")]
	public static bool SetQuaternion(string key, Quaternion vector)
	{
		return default(bool);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xA528FC", Offset = "0xA528FC", VA = "0xA528FC")]
	public static Quaternion GetQuaternion(string key)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xA52980", Offset = "0xA52980", VA = "0xA52980")]
	public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xA529E4", Offset = "0xA529E4", VA = "0xA529E4")]
	public static bool SetColor(string key, Color color)
	{
		return default(bool);
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xA52A94", Offset = "0xA52A94", VA = "0xA52A94")]
	public static Color GetColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xA52AD0", Offset = "0xA52AD0", VA = "0xA52AD0")]
	public static Color GetColor(string key, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xA52B34", Offset = "0xA52B34", VA = "0xA52B34")]
	public static bool SetBoolArray(string key, bool[] boolArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xA52EF4", Offset = "0xA52EF4", VA = "0xA52EF4")]
	public static bool[] GetBoolArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xA53190", Offset = "0xA53190", VA = "0xA53190")]
	public static bool[] GetBoolArray(string key, bool defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xA53250", Offset = "0xA53250", VA = "0xA53250")]
	public static bool SetStringArray(string key, string[] stringArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xA53530", Offset = "0xA53530", VA = "0xA53530")]
	public static string[] GetStringArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xA53850", Offset = "0xA53850", VA = "0xA53850")]
	public static string[] GetStringArray(string key, string defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xA53958", Offset = "0xA53958", VA = "0xA53958")]
	public static bool SetIntArray(string key, int[] intArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xA52470", Offset = "0xA52470", VA = "0xA52470")]
	public static bool SetFloatArray(string key, float[] floatArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xA53A08", Offset = "0xA53A08", VA = "0xA53A08")]
	public static bool SetVector2Array(string key, Vector2[] vector2Array)
	{
		return default(bool);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xA53AB8", Offset = "0xA53AB8", VA = "0xA53AB8")]
	public static bool SetVector3Array(string key, Vector3[] vector3Array)
	{
		return default(bool);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xA53B68", Offset = "0xA53B68", VA = "0xA53B68")]
	public static bool SetQuaternionArray(string key, Quaternion[] quaternionArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xA53C18", Offset = "0xA53C18", VA = "0xA53C18")]
	public static bool SetColorArray(string key, Color[] colorArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001335")]
	private static bool SetValue<T>(string key, T array, ArrayType arrayType, int vectorNumber, Action<T, byte[], int> convert) where T : IList
	{
		return default(bool);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xA53CC8", Offset = "0xA53CC8", VA = "0xA53CC8")]
	private static void ConvertFromInt(int[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xA53CF4", Offset = "0xA53CF4", VA = "0xA53CF4")]
	private static void ConvertFromFloat(float[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xA53DBC", Offset = "0xA53DBC", VA = "0xA53DBC")]
	private static void ConvertFromVector2(Vector2[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xA53E20", Offset = "0xA53E20", VA = "0xA53E20")]
	private static void ConvertFromVector3(Vector3[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xA53EB4", Offset = "0xA53EB4", VA = "0xA53EB4")]
	private static void ConvertFromQuaternion(Quaternion[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xA53F54", Offset = "0xA53F54", VA = "0xA53F54")]
	private static void ConvertFromColor(Color[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xA53FF4", Offset = "0xA53FF4", VA = "0xA53FF4")]
	public static int[] GetIntArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xA54100", Offset = "0xA54100", VA = "0xA54100")]
	public static int[] GetIntArray(string key, int defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xA5258C", Offset = "0xA5258C", VA = "0xA5258C")]
	public static float[] GetFloatArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xA541BC", Offset = "0xA541BC", VA = "0xA541BC")]
	public static float[] GetFloatArray(string key, float defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xA54278", Offset = "0xA54278", VA = "0xA54278")]
	public static Vector2[] GetVector2Array(string key)
	{
		return null;
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xA54384", Offset = "0xA54384", VA = "0xA54384")]
	public static Vector2[] GetVector2Array(string key, Vector2 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xA54448", Offset = "0xA54448", VA = "0xA54448")]
	public static Vector3[] GetVector3Array(string key)
	{
		return null;
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xA54554", Offset = "0xA54554", VA = "0xA54554")]
	public static Vector3[] GetVector3Array(string key, Vector3 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xA54628", Offset = "0xA54628", VA = "0xA54628")]
	public static Quaternion[] GetQuaternionArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xA54734", Offset = "0xA54734", VA = "0xA54734")]
	public static Quaternion[] GetQuaternionArray(string key, Quaternion defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xA54810", Offset = "0xA54810", VA = "0xA54810")]
	public static Color[] GetColorArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xA5491C", Offset = "0xA5491C", VA = "0xA5491C")]
	public static Color[] GetColorArray(string key, Color defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	private static void GetValue<T>(string key, T list, ArrayType arrayType, int vectorNumber, Action<T, byte[]> convert) where T : IList
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xA549F8", Offset = "0xA549F8", VA = "0xA549F8")]
	private static void ConvertToInt(List<int> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xA54AA8", Offset = "0xA54AA8", VA = "0xA54AA8")]
	private static void ConvertToFloat(List<float> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xA54BE0", Offset = "0xA54BE0", VA = "0xA54BE0")]
	private static void ConvertToVector2(List<Vector2> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xA54CAC", Offset = "0xA54CAC", VA = "0xA54CAC")]
	private static void ConvertToVector3(List<Vector3> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xA54D90", Offset = "0xA54D90", VA = "0xA54D90")]
	private static void ConvertToQuaternion(List<Quaternion> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0xA54E8C", Offset = "0xA54E8C", VA = "0xA54E8C")]
	private static void ConvertToColor(List<Color> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0xA54F88", Offset = "0xA54F88", VA = "0xA54F88")]
	public static void ShowArrayType(string key)
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xA52C90", Offset = "0xA52C90", VA = "0xA52C90")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xA52E00", Offset = "0xA52E00", VA = "0xA52E00")]
	private static bool SaveBytes(string key, byte[] bytes)
	{
		return default(bool);
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xA53D24", Offset = "0xA53D24", VA = "0xA53D24")]
	private static void ConvertFloatToBytes(float f, byte[] bytes)
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xA54B54", Offset = "0xA54B54", VA = "0xA54B54")]
	private static float ConvertBytesToFloat(byte[] bytes)
	{
		return default(float);
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xA52D68", Offset = "0xA52D68", VA = "0xA52D68")]
	private static void ConvertInt32ToBytes(int i, byte[] bytes)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xA53104", Offset = "0xA53104", VA = "0xA53104")]
	private static int ConvertBytesToInt32(byte[] bytes)
	{
		return default(int);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xA550CC", Offset = "0xA550CC", VA = "0xA550CC")]
	private static void ConvertTo4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xA5524C", Offset = "0xA5524C", VA = "0xA5524C")]
	private static void ConvertFrom4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xA553CC", Offset = "0xA553CC", VA = "0xA553CC")]
	public PlayerPrefsX()
	{
	}
}
[Token(Token = "0x200030C")]
public class PlayOneShot : MonoBehaviour
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string EventReference;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance EventInstance;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xA553D4", Offset = "0xA553D4", VA = "0xA553D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xA553D8", Offset = "0xA553D8", VA = "0xA553D8")]
	public void PlayOnce()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xA553FC", Offset = "0xA553FC", VA = "0xA553FC")]
	public PlayOneShot()
	{
	}
}
[Token(Token = "0x200030D")]
public class PointAtVRCamera : MonoBehaviour
{
	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xA55454", Offset = "0xA55454", VA = "0xA55454")]
	private void Awake()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xA55478", Offset = "0xA55478", VA = "0xA55478")]
	private void Update()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xA5552C", Offset = "0xA5552C", VA = "0xA5552C")]
	public PointAtVRCamera()
	{
	}
}
[Token(Token = "0x200030E")]
public class PoolPlugLogic : MonoBehaviour
{
	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform waterLevel;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waterLevelTargetY;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject vaultFlodded;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vaultClear;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Joint joint;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool draining;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CollisionBase collisionBase;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform drainTarget;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float drainForce;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool unlocked;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Grabbable grabbable;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 dir;

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xA55534", Offset = "0xA55534", VA = "0xA55534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xA555A4", Offset = "0xA555A4", VA = "0xA555A4")]
	private void OnGrabbed(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xA55598", Offset = "0xA55598", VA = "0xA55598")]
	public void UnLockPlug(bool which)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xA555CC", Offset = "0xA555CC", VA = "0xA555CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xA555DC", Offset = "0xA555DC", VA = "0xA555DC")]
	private void DoDrain()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xA55914", Offset = "0xA55914", VA = "0xA55914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xA559F4", Offset = "0xA559F4", VA = "0xA559F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xA55AD4", Offset = "0xA55AD4", VA = "0xA55AD4")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xA55C38", Offset = "0xA55C38", VA = "0xA55C38")]
	public void UnlockPlug()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xA55CC4", Offset = "0xA55CC4", VA = "0xA55CC4")]
	private void WaterDrained()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xA55CCC", Offset = "0xA55CCC", VA = "0xA55CCC")]
	[ContextMenu("Drain the pool")]
	public void PlugJointBreak()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xA55E20", Offset = "0xA55E20", VA = "0xA55E20")]
	public PoolPlugLogic()
	{
	}
}
[Token(Token = "0x200030F")]
public class ProgrammerSounds : MonoBehaviour
{
	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EVENT_CALLBACK dialogueCallback;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string fmodEvent;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventInstance dialogueInstance;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isPlaying;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float volume;

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xA55E3C", Offset = "0xA55E3C", VA = "0xA55E3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xA55EC8", Offset = "0xA55EC8", VA = "0xA55EC8")]
	public void PlayDialogue(string key, Rigidbody _rb, float _pitch = 1f)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xA56030", Offset = "0xA56030", VA = "0xA56030")]
	public void StopDialogue()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xA56078", Offset = "0xA56078", VA = "0xA56078")]
	private static RESULT DialogueEventCallback(EVENT_CALLBACK_TYPE type, IntPtr instancePtr, IntPtr parameterPtr)
	{
		return default(RESULT);
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xA56380", Offset = "0xA56380", VA = "0xA56380")]
	public void StopSound()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xA56390", Offset = "0xA56390", VA = "0xA56390")]
	private void PlayingCheck()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xA563C0", Offset = "0xA563C0", VA = "0xA563C0")]
	public ProgrammerSounds()
	{
	}
}
[Token(Token = "0x2000310")]
public class PropellerSpin : MonoBehaviour
{
	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Direction;

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xA563C8", Offset = "0xA563C8", VA = "0xA563C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xA563CC", Offset = "0xA563CC", VA = "0xA563CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xA56428", Offset = "0xA56428", VA = "0xA56428")]
	public PropellerSpin()
	{
	}
}
[Token(Token = "0x2000311")]
public class PushAway : CollisionBase
{
	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody boss;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool bossInRange;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform trans;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float force;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ForceMode forceMode;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 direction;

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xA56430", Offset = "0xA56430", VA = "0xA56430")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xA56454", Offset = "0xA56454", VA = "0xA56454", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xA564D4", Offset = "0xA564D4", VA = "0xA564D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xA5657C", Offset = "0xA5657C", VA = "0xA5657C")]
	public PushAway()
	{
	}
}
[Token(Token = "0x2000312")]
public class QualityManager : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	[CompilerGenerated]
	private sealed class <OversamplingFade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <wait>5__2;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xA57334", Offset = "0xA57334", VA = "0xA57334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xA5737C", Offset = "0xA5737C", VA = "0xA5737C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xA57138", Offset = "0xA57138", VA = "0xA57138")]
		[DebuggerHidden]
		public <OversamplingFade>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xA571D4", Offset = "0xA571D4", VA = "0xA571D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xA571D8", Offset = "0xA571D8", VA = "0xA571D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xA5733C", Offset = "0xA5733C", VA = "0xA5733C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400133A")]
	public const float defaultShadowDistance = 15f;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool lightProbesEnabled;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static QualityManager _instance;

	[Token(Token = "0x17000132")]
	public static QualityManager Instance
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xA5658C", Offset = "0xA5658C", VA = "0xA5658C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public static float ShadowQuality
	{
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xA56E64", Offset = "0xA56E64", VA = "0xA56E64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001380")]
		[Address(RVA = "0xA56B14", Offset = "0xA56B14", VA = "0xA56B14")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public static float AntiAliasing
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xA57160", Offset = "0xA57160", VA = "0xA57160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xA567C4", Offset = "0xA567C4", VA = "0xA567C4")]
		set
		{
		}
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xA56744", Offset = "0xA56744", VA = "0xA56744")]
	private void Awake()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xA5697C", Offset = "0xA5697C", VA = "0xA5697C")]
	public void ApplyCurrentQualitySettings()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xA56D64", Offset = "0xA56D64", VA = "0xA56D64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xA56DE4", Offset = "0xA56DE4", VA = "0xA56DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xA56D58", Offset = "0xA56D58", VA = "0xA56D58")]
	private void SetDefaultShadowDistance()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xA56E84", Offset = "0xA56E84", VA = "0xA56E84")]
	public static void SetOverSampling(float sliderValue, PhysicalSlider slider)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xA570B8", Offset = "0xA570B8", VA = "0xA570B8")]
	public void ChangeOversampling()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xA570D8", Offset = "0xA570D8", VA = "0xA570D8")]
	[IteratorStateMachine(typeof(<OversamplingFade>d__15))]
	private IEnumerator OversamplingFade()
	{
		return null;
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xA56FC0", Offset = "0xA56FC0", VA = "0xA56FC0")]
	public static float SnapValue(float newValue, int segments)
	{
		return default(float);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xA56BB0", Offset = "0xA56BB0", VA = "0xA56BB0")]
	private void RefreshShadows()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xA57180", Offset = "0xA57180", VA = "0xA57180")]
	public QualityManager()
	{
	}
}
[Token(Token = "0x2000314")]
public class QuestOpti : MonoBehaviour
{
	[Token(Token = "0x6001390")]
	[Address(RVA = "0xA57384", Offset = "0xA57384", VA = "0xA57384")]
	public QuestOpti()
	{
	}
}
[Token(Token = "0x2000315")]
public class RandomGroupSelection : MonoBehaviour
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("one object selected to be active")]
	public GameObject[] groups;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("chance to be visible 0-1")]
	public float chanceToBeVisible;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useDelay;

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xA5738C", Offset = "0xA5738C", VA = "0xA5738C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xA573F8", Offset = "0xA573F8", VA = "0xA573F8")]
	[ContextMenu("SelectGroup")]
	private void SelectGroup()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xA57500", Offset = "0xA57500", VA = "0xA57500")]
	public RandomGroupSelection()
	{
	}
}
[Token(Token = "0x2000316")]
public class RapController : MonoBehaviour
{
	[Token(Token = "0x2000317")]
	[CompilerGenerated]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapController <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xA57A80", Offset = "0xA57A80", VA = "0xA57A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xA57AC8", Offset = "0xA57AC8", VA = "0xA57AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xA57954", Offset = "0xA57954", VA = "0xA57954")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xA579C4", Offset = "0xA579C4", VA = "0xA579C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xA579C8", Offset = "0xA579C8", VA = "0xA579C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xA57A88", Offset = "0xA57A88", VA = "0xA57A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sisterAVocals;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sisterBVocals;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanAestheticScriptableObject characterLookSisterA;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject characterLookSisterB;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject track;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int stateOnStart;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int stateTargetsDone;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int stateGameDone;

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xA57510", Offset = "0xA57510", VA = "0xA57510")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xA575D8", Offset = "0xA575D8", VA = "0xA575D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0xA576A0", Offset = "0xA576A0", VA = "0xA576A0")]
	private void SearchHuman()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0xA578E0", Offset = "0xA578E0", VA = "0xA578E0")]
	[IteratorStateMachine(typeof(<Start>d__11))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xA5797C", Offset = "0xA5797C", VA = "0xA5797C", Slot = "4")]
	public virtual void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xA5799C", Offset = "0xA5799C", VA = "0xA5799C")]
	private void GameComplete()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xA579B4", Offset = "0xA579B4", VA = "0xA579B4")]
	public RapController()
	{
	}
}
[Token(Token = "0x2000318")]
public class RaycastCapsuleTest : MonoBehaviour
{
	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xA57AD0", Offset = "0xA57AD0", VA = "0xA57AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xA57AD4", Offset = "0xA57AD4", VA = "0xA57AD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xA57BAC", Offset = "0xA57BAC", VA = "0xA57BAC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xA57C88", Offset = "0xA57C88", VA = "0xA57C88")]
	public RaycastCapsuleTest()
	{
	}
}
[Token(Token = "0x2000319")]
public class RemoveFromEntitiesLoadCount : MonoBehaviour
{
	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xA57C90", Offset = "0xA57C90", VA = "0xA57C90")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xA57D3C", Offset = "0xA57D3C", VA = "0xA57D3C")]
	public RemoveFromEntitiesLoadCount()
	{
	}
}
[Token(Token = "0x200031A")]
public class RemoveIfNotDemo : MonoBehaviour
{
	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool remove;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xA57D44", Offset = "0xA57D44", VA = "0xA57D44")]
	public RemoveIfNotDemo()
	{
	}
}
[Token(Token = "0x200031B")]
public class RemoveTeleportForBuild : MonoBehaviour
{
	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xA57D54", Offset = "0xA57D54", VA = "0xA57D54")]
	public RemoveTeleportForBuild()
	{
	}
}
[Token(Token = "0x200031C")]
public class ReplayCartridge : MonoBehaviour
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Story story;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string myStoryTitle;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string myStoryID;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xA57D5C", Offset = "0xA57D5C", VA = "0xA57D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xA57EE4", Offset = "0xA57EE4", VA = "0xA57EE4")]
	public ReplayCartridge()
	{
	}
}
[Token(Token = "0x200031D")]
public class ReplayCartridgeReader : CollisionBase
{
	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EntityDefinition cartridgeEntityDefinition;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform attachPosition;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CollisionBase slotCrowdedTrigger;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform ejectPosition;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasCartridge;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Entity currentEntity;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string inserCartridgeSFX;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string ejectCartridgeSFX;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Grabbable grabbable;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Entity collisionEntity;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isEjecting;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float ejectForce;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float ejectForceFun;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LevelDirector_base consoleLeveldirector;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ReplayCartridge replayCartridge;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isPlaying;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xA57EEC", Offset = "0xA57EEC", VA = "0xA57EEC", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xA5806C", Offset = "0xA5806C", VA = "0xA5806C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xA5811C", Offset = "0xA5811C", VA = "0xA5811C")]
	private void StartInvoke()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xA58098", Offset = "0xA58098", VA = "0xA58098")]
	private void InsertCartridge()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xA58170", Offset = "0xA58170", VA = "0xA58170")]
	public void StartButton()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xA58214", Offset = "0xA58214", VA = "0xA58214")]
	public void EjectPressed()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xA583AC", Offset = "0xA583AC", VA = "0xA583AC")]
	private void Insert()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xA58A2C", Offset = "0xA58A2C", VA = "0xA58A2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xA58218", Offset = "0xA58218", VA = "0xA58218")]
	public void Eject()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xA58AAC", Offset = "0xA58AAC", VA = "0xA58AAC")]
	private void EjectDone()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xA58B6C", Offset = "0xA58B6C", VA = "0xA58B6C")]
	public ReplayCartridgeReader()
	{
	}
}
[Token(Token = "0x200031E")]
public class ReplicatorReference : MonoBehaviour
{
	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectionSpawner replicator;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEditorReplicator;

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xA58B80", Offset = "0xA58B80", VA = "0xA58B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xA58C14", Offset = "0xA58C14", VA = "0xA58C14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xA58CA8", Offset = "0xA58CA8", VA = "0xA58CA8")]
	private void PreLoad(bool editorLevelStart)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xA58CCC", Offset = "0xA58CCC", VA = "0xA58CCC")]
	public ReplicatorReference()
	{
	}
}
[Token(Token = "0x200031F")]
public class RescanWPTriggerHumans : MonoBehaviour
{
	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xA58CD4", Offset = "0xA58CD4", VA = "0xA58CD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xA58DBC", Offset = "0xA58DBC", VA = "0xA58DBC")]
	public RescanWPTriggerHumans()
	{
	}
}
[Token(Token = "0x2000320")]
public class ResetCOM : MonoBehaviour
{
	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xA58DC4", Offset = "0xA58DC4", VA = "0xA58DC4")]
	[ContextMenu("Reset COM")]
	private void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xA58E1C", Offset = "0xA58E1C", VA = "0xA58E1C")]
	public ResetCOM()
	{
	}
}
[Token(Token = "0x2000321")]
public class ResettiDoNoTouch : MonoBehaviour
{
	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction levelHost;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HumanController humanController;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool block;

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xA58E24", Offset = "0xA58E24", VA = "0xA58E24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xA58EBC", Offset = "0xA58EBC", VA = "0xA58EBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xA58F54", Offset = "0xA58F54", VA = "0xA58F54")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xA58F58", Offset = "0xA58F58", VA = "0xA58F58", Slot = "4")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xA59008", Offset = "0xA59008", VA = "0xA59008")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xA591F0", Offset = "0xA591F0", VA = "0xA591F0")]
	public ResettiDoNoTouch()
	{
	}
}
[Token(Token = "0x2000322")]
public class ResettoDream : MonoBehaviour
{
	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_base levelResetti;

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xA591F8", Offset = "0xA591F8", VA = "0xA591F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xA59278", Offset = "0xA59278", VA = "0xA59278")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xA592F8", Offset = "0xA592F8", VA = "0xA592F8")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xA593D4", Offset = "0xA593D4", VA = "0xA593D4")]
	public ResettoDream()
	{
	}
}
[Token(Token = "0x2000323")]
public class RigPosition : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	public enum PositionEnum
	{
		[Token(Token = "0x4001385")]
		pos0,
		[Token(Token = "0x4001386")]
		pos1,
		[Token(Token = "0x4001387")]
		pos2,
		[Token(Token = "0x4001388")]
		pos3,
		[Token(Token = "0x4001389")]
		pos4
	}

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionEnum myPosition;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool dropped;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider safeZone;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 respawnAreaLeeway;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform respawnRoot;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform optionsZeppelinPosition;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform gameDoneBalloonPosition;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("relative to orientation of transform")]
	public Vector3 optionsZeppelinPositionStartOffset;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("relative to orientation of transform")]
	public Vector3 gameDoneBalloonStartOffset;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Dummy Dispenser attached to this")]
	public Transform dispenserPosition;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform replicatorPosition;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject positionDispenserPrefab;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject sharedPositionsDispenser;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool autoPositionsDispenser;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject positionReplicatorxPrefab;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject sharedPositionsReplicator;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SelectionSpawner replicatorShared;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool autoPositionsReplicator;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject playSpaceVisual;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Level level;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public StudioEventEmitter wavesFront;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public StudioEventEmitter wavesBack;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StudioEventEmitter wavesLeft;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public StudioEventEmitter wavesRight;

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xA593DC", Offset = "0xA593DC", VA = "0xA593DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xA593F8", Offset = "0xA593F8", VA = "0xA593F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xA59570", Offset = "0xA59570", VA = "0xA59570")]
	private void AutoPlacements()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xA598B8", Offset = "0xA598B8", VA = "0xA598B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xA59AF8", Offset = "0xA59AF8", VA = "0xA59AF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xA59C28", Offset = "0xA59C28", VA = "0xA59C28")]
	private void CheckPosition(RigPositionLever caller)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xA59EBC", Offset = "0xA59EBC", VA = "0xA59EBC")]
	[ContextMenu("spawn")]
	private void DebugSpawnArea()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xA59FE0", Offset = "0xA59FE0", VA = "0xA59FE0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xA5A14C", Offset = "0xA5A14C", VA = "0xA5A14C")]
	public RigPosition()
	{
	}
}
[Token(Token = "0x2000325")]
public class RigPositionLever : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	public delegate void ReportPositionDelegate(RigPositionLever rigPositionLever);

	[Token(Token = "0x2000327")]
	public delegate void RigMovedDelegate(RigPosition _rigPosition);

	[Token(Token = "0x2000328")]
	[CompilerGenerated]
	private sealed class <ResetTentacles>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xA5A8CC", Offset = "0xA5A8CC", VA = "0xA5A8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xA5A914", Offset = "0xA5A914", VA = "0xA5A914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xA5A5B4", Offset = "0xA5A5B4", VA = "0xA5A5B4")]
		[DebuggerHidden]
		public <ResetTentacles>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xA5A7AC", Offset = "0xA5A7AC", VA = "0xA5A7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xA5A7B0", Offset = "0xA5A7B0", VA = "0xA5A7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xA5A8D4", Offset = "0xA5A8D4", VA = "0xA5A8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigPosition.PositionEnum targetRigPosition;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RigPosition rigPosition;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isBlocked;

	[Token(Token = "0x14000047")]
	public static event ReportPositionDelegate OnReportPosition
	{
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xA59A40", Offset = "0xA59A40", VA = "0xA59A40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xA59B70", Offset = "0xA59B70", VA = "0xA59B70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000048")]
	public static event RigMovedDelegate OnRigMoved
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xA5A184", Offset = "0xA5A184", VA = "0xA5A184")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xA5A240", Offset = "0xA5A240", VA = "0xA5A240")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xA5A2FC", Offset = "0xA5A2FC", VA = "0xA5A2FC")]
	public void MoveToRigPositon()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xA59E24", Offset = "0xA59E24", VA = "0xA59E24")]
	public void ReportPosition(RigPosition _rigPosition)
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xA5A378", Offset = "0xA5A378", VA = "0xA5A378")]
	private void SetRigPosition()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xA5A554", Offset = "0xA5A554", VA = "0xA5A554")]
	[IteratorStateMachine(typeof(<ResetTentacles>d__14))]
	private IEnumerator ResetTentacles()
	{
		return null;
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xA5A5DC", Offset = "0xA5A5DC", VA = "0xA5A5DC")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xA5A614", Offset = "0xA5A614", VA = "0xA5A614")]
	public RigPositionLever()
	{
	}
}
[Token(Token = "0x2000329")]
public class RigPositionPositionalAudio : MonoBehaviour
{
	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigPosition.PositionEnum rigPositionEnum;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wavesFront;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool wavesRight;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool wavesBack;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool wavesLeft;

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xA5A91C", Offset = "0xA5A91C", VA = "0xA5A91C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xA5AA14", Offset = "0xA5AA14", VA = "0xA5AA14")]
	public RigPositionPositionalAudio()
	{
	}
}
[Token(Token = "0x200032A")]
public class DartGameController : RocketTargetManager
{
	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("DART GAME MANAGER")]
	public GameObject dartTargetPrefab;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int round;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float offset;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float xOffset;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int maxPoints;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TargetDisplay[] roundsDisplay;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentScore;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool noSpawning;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool pause;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int roundsDisplayType;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool resetRocketsAfterRound;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float movingOffset;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool doOffset;

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xA5AA24", Offset = "0xA5AA24", VA = "0xA5AA24", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xA5AC30", Offset = "0xA5AC30", VA = "0xA5AC30")]
	private void Start()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xA5AC5C", Offset = "0xA5AC5C", VA = "0xA5AC5C")]
	private void CheckForActiveRockets()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xA5AD64", Offset = "0xA5AD64", VA = "0xA5AD64")]
	private void InGameResetRockets()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xA5AD80", Offset = "0xA5AD80", VA = "0xA5AD80", Slot = "5")]
	public override void TellScore(int _score, GameObject _rocket, DartTarget _currenttarget, int _rocketScore)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xA5AE18", Offset = "0xA5AE18", VA = "0xA5AE18", Slot = "6")]
	public override void TargetDone(GameObject _rocket)
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xA5AF24", Offset = "0xA5AF24", VA = "0xA5AF24")]
	private void SpawnNext()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xA5B0A0", Offset = "0xA5B0A0", VA = "0xA5B0A0")]
	public DartGameController()
	{
	}
}
[Token(Token = "0x200032B")]
public class DartSegment : MonoBehaviour
{
	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMesh;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int segmentScore;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DartTarget dartTarget;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material blinkMaterial;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material startMaterial;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int blinkCounter;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 hitPos;

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xA5B0CC", Offset = "0xA5B0CC", VA = "0xA5B0CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xA5B14C", Offset = "0xA5B14C", VA = "0xA5B14C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xA5B1CC", Offset = "0xA5B1CC", VA = "0xA5B1CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xA5B2C0", Offset = "0xA5B2C0", VA = "0xA5B2C0")]
	public void GetDartTarget(DartTarget dt)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xA5B2C8", Offset = "0xA5B2C8", VA = "0xA5B2C8")]
	private void GlueTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xA5B3CC", Offset = "0xA5B3CC", VA = "0xA5B3CC")]
	public void StartBlink()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xA5B4A0", Offset = "0xA5B4A0", VA = "0xA5B4A0")]
	public void SegmentHit()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xA5B554", Offset = "0xA5B554", VA = "0xA5B554")]
	public DartSegment()
	{
	}
}
[Token(Token = "0x200032C")]
public class DartTarget : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	public enum EventType
	{
		[Token(Token = "0x40013B9")]
		appear,
		[Token(Token = "0x40013BA")]
		complete,
		[Token(Token = "0x40013BB")]
		levelOver,
		[Token(Token = "0x40013BC")]
		hit
	}

	[Token(Token = "0x200032E")]
	public delegate void TargetTargetDelegate(EventType _which, [Optional] DartSegment _segment);

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DartSegment> segments;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalScore;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> rocketsScored;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RocketTargetManager dartGameController;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool deactivated;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DOTweenAnimation[] tweens;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EightSegmentDisplay score;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EightSegmentDisplay target;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool removeRockets;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DartTarget dartTarget;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rotateAxis;

	[Token(Token = "0x14000049")]
	public event TargetTargetDelegate OnTargetTargetEvent
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xA5B564", Offset = "0xA5B564", VA = "0xA5B564")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xA5B600", Offset = "0xA5B600", VA = "0xA5B600")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xA5B69C", Offset = "0xA5B69C", VA = "0xA5B69C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xA5BB24", Offset = "0xA5BB24", VA = "0xA5BB24")]
	private void Start()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xA5B9D4", Offset = "0xA5B9D4", VA = "0xA5B9D4")]
	public void RegisterSegment()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xA5BC40", Offset = "0xA5BC40", VA = "0xA5BC40")]
	public void RemoveRockets()
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xA5BB90", Offset = "0xA5BB90", VA = "0xA5BB90")]
	private void TargetIn()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xA5BE4C", Offset = "0xA5BE4C", VA = "0xA5BE4C")]
	public void TargetOut()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xA5BF50", Offset = "0xA5BF50", VA = "0xA5BF50")]
	public void Remove()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xA5BF68", Offset = "0xA5BF68", VA = "0xA5BF68")]
	public static void CallGameOver()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xA5BFB8", Offset = "0xA5BFB8", VA = "0xA5BFB8")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xA5C050", Offset = "0xA5C050", VA = "0xA5C050")]
	public int ReturnUsedRockets()
	{
		return default(int);
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xA5C098", Offset = "0xA5C098", VA = "0xA5C098")]
	public void AddScore(GameObject rocket, int _score, DartSegment _segment)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xA5C510", Offset = "0xA5C510", VA = "0xA5C510")]
	public DartTarget()
	{
	}
}
[Token(Token = "0x200032F")]
public class RocketWatchUI : MonoBehaviour
{
	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject needle;

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xA5C700", Offset = "0xA5C700", VA = "0xA5C700")]
	public RocketWatchUI()
	{
	}
}
[Token(Token = "0x2000330")]
public class Rocket : MonoBehaviour
{
	[Token(Token = "0x2000331")]
	public delegate void OnRocketFLightDelegate(bool mode, Transform target);

	[Token(Token = "0x2000332")]
	public delegate void OnRocketFireworksDelegate(Rocket rocket, bool noCredits);

	[Token(Token = "0x2000333")]
	public enum State
	{
		[Token(Token = "0x400140A")]
		none,
		[Token(Token = "0x400140B")]
		parachuting,
		[Token(Token = "0x400140C")]
		landed,
		[Token(Token = "0x400140D")]
		aborted,
		[Token(Token = "0x400140E")]
		disassembled,
		[Token(Token = "0x400140F")]
		landedFail,
		[Token(Token = "0x4001410")]
		sunken
	}

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int collisions;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isGrabbed;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool peakReached;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float highestPoint;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform chutePoint;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float deployEffectFactor;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float minDeploySpeed;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float highestSpeed;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float highestYSpeed;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minDeployHeight;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minSpeedForOrientation;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float deployForce;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float gravityFactor;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float forceAppliedBelowFactor;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minDescentSpeed;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minSpeedDieFactor;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float waterForgivenessFactor;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialised;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public State paraState;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float podWeight;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float horizontalSDFactor;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float pureFallTime;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int lastCollisions;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool disAssembleOnEnterWaterBeforeFlight;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool autoFired;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RocketStage[] stages;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform assembled;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject podParticles;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject trail;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject landingPod;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool seperateStages;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool fireworksRocket;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool noDisassembleOnImpact;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float lastYVel;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 lastVel;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool deployed;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float debugLaunchForce;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float debugLaunchVelocityFactor;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<GameObject> tentacleCollisions;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Rocket currentRocket;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<GameObject> collisionList;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int noCollisionCount;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float landTimer;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float debugLaunchWait;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VRControllerMapper controller;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject landingPodFloat;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject landingPodSink;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float realTimeSplashWait;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RocketTracker rocketTracker;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Grabbable myGrabbable;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool rocketFlight;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject visualLandingIndicatorOK;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject visualLandingIndicatorFAIL;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int passengers;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool useFloaterInWaterDetection;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	private bool isInWater;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[EventRef]
	public string parachuteSFX;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[EventRef]
	public string explosionSFX;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[EventRef]
	public string breakSFX;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool astronautsEjected;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool successReactionShown;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	private bool wasDebugLaunched;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float fallFactor;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float chuteActive;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool doChuting;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool landingOK;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 rotDir;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool rocketFlightHappened;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float timeRocketFlightEnded;

	[Token(Token = "0x1400004A")]
	public static event OnRocketFLightDelegate OnRocketFlight
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0xA5C708", Offset = "0xA5C708", VA = "0xA5C708")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600140F")]
		[Address(RVA = "0xA5C7C0", Offset = "0xA5C7C0", VA = "0xA5C7C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public static event OnRocketFireworksDelegate OnRocketFireworks
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xA5C878", Offset = "0xA5C878", VA = "0xA5C878")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xA5C934", Offset = "0xA5C934", VA = "0xA5C934")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xA5C9F0", Offset = "0xA5C9F0", VA = "0xA5C9F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xA5CB64", Offset = "0xA5CB64", VA = "0xA5CB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xA5D138", Offset = "0xA5D138", VA = "0xA5D138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xA5D2B4", Offset = "0xA5D2B4", VA = "0xA5D2B4")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xA5CF58", Offset = "0xA5CF58", VA = "0xA5CF58")]
	private void PrepareStages(RocketStage _stage)
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xA5D49C", Offset = "0xA5D49C", VA = "0xA5D49C")]
	private void DropAstronautPayload()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xA5D4A8", Offset = "0xA5D4A8", VA = "0xA5D4A8")]
	private void DropAstronautPayload(bool _isSuccess = true, bool _isCheating = false)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xA5D7E8", Offset = "0xA5D7E8", VA = "0xA5D7E8")]
	private void Aborted()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xA5D8F4", Offset = "0xA5D8F4", VA = "0xA5D8F4")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xA5DB18", Offset = "0xA5DB18", VA = "0xA5DB18")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xA5DBA0", Offset = "0xA5DBA0", VA = "0xA5DBA0")]
	private void CheckForSunken()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xA5DC60", Offset = "0xA5DC60", VA = "0xA5DC60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xA5E448", Offset = "0xA5E448", VA = "0xA5E448")]
	private void CheckHeight()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xA5EDD4", Offset = "0xA5EDD4", VA = "0xA5EDD4")]
	private bool LandingSpeedOK(bool _isWaterLanding = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xA5EE0C", Offset = "0xA5EE0C", VA = "0xA5EE0C")]
	private void CheckWaterLanding()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xA5EB14", Offset = "0xA5EB14", VA = "0xA5EB14")]
	private void DoFireworks(bool doCredits = true)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xA5EB94", Offset = "0xA5EB94", VA = "0xA5EB94")]
	private void DeployChute()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xA5F134", Offset = "0xA5F134", VA = "0xA5F134")]
	private void DecoupleStage(RocketStage _stage)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xA5F020", Offset = "0xA5F020", VA = "0xA5F020")]
	private void Landed()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xA5CF10", Offset = "0xA5CF10", VA = "0xA5CF10")]
	private void LandingIndicatorsOff()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xA5DF28", Offset = "0xA5DF28", VA = "0xA5DF28")]
	private void LandedFail()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xA5F344", Offset = "0xA5F344", VA = "0xA5F344")]
	private void OkLandingIndicator()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xA5E830", Offset = "0xA5E830", VA = "0xA5E830")]
	private void Parachuting()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xA5DA10", Offset = "0xA5DA10", VA = "0xA5DA10")]
	private void RocketFlight(bool _which)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xA5E15C", Offset = "0xA5E15C", VA = "0xA5E15C")]
	private void NoneBreakApart()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xA5E558", Offset = "0xA5E558", VA = "0xA5E558")]
	private void OrientToVelocityVector()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xA5F3D0", Offset = "0xA5F3D0", VA = "0xA5F3D0")]
	private void CheckCollisionForceBreak(Collision collision)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xA5EFB8", Offset = "0xA5EFB8", VA = "0xA5EFB8")]
	private void MakePodSink()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xA5D2E8", Offset = "0xA5D2E8", VA = "0xA5D2E8")]
	private void HitWater()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xA5F73C", Offset = "0xA5F73C", VA = "0xA5F73C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xA5F804", Offset = "0xA5F804", VA = "0xA5F804")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xA5FB38", Offset = "0xA5FB38", VA = "0xA5FB38")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xA5FD30", Offset = "0xA5FD30", VA = "0xA5FD30")]
	public Rocket()
	{
	}
}
[Token(Token = "0x2000334")]
public class RocketLatch : MonoBehaviour
{
	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionRocket rocket;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint joint;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DOTweenAnimation tween;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float latchShrink;

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xA600E0", Offset = "0xA600E0", VA = "0xA600E0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xA601B4", Offset = "0xA601B4", VA = "0xA601B4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xA60288", Offset = "0xA60288", VA = "0xA60288")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xA6046C", Offset = "0xA6046C", VA = "0xA6046C")]
	private void ObjectLoaded(Rigidbody _rb)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xA60538", Offset = "0xA60538", VA = "0xA60538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xA60670", Offset = "0xA60670", VA = "0xA60670")]
	private void Start()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xA60694", Offset = "0xA60694", VA = "0xA60694")]
	private void CheckConnectedBody()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xA607B4", Offset = "0xA607B4", VA = "0xA607B4")]
	private void DestroyLatch()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xA607DC", Offset = "0xA607DC", VA = "0xA607DC")]
	private void Drop()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xA60350", Offset = "0xA60350", VA = "0xA60350")]
	public void RemoveLatch()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xA60898", Offset = "0xA60898", VA = "0xA60898")]
	public void TweenDone()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xA6091C", Offset = "0xA6091C", VA = "0xA6091C")]
	public RocketLatch()
	{
	}
}
[Token(Token = "0x2000335")]
public class RocketPanel : MonoBehaviour
{
	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EightSegmentDisplay leftSide;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay rightSide;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] targetsDone;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] runsSprites;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rocketsPanel;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject targetsPanel;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform fireworksSpawn;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RocketPanel _instance;

	[Token(Token = "0x1700013B")]
	public static RocketPanel Instance
	{
		[Token(Token = "0x6001447")]
		[Address(RVA = "0xA6092C", Offset = "0xA6092C", VA = "0xA6092C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xA60AB8", Offset = "0xA60AB8", VA = "0xA60AB8")]
	public void LevelCompleteFX()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xA60B34", Offset = "0xA60B34", VA = "0xA60B34")]
	public void SetRockets(int _spawned, int _max)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xA60B9C", Offset = "0xA60B9C", VA = "0xA60B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xA60BC4", Offset = "0xA60BC4", VA = "0xA60BC4")]
	public void SetTargets(int _needed, int _done)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xA60CDC", Offset = "0xA60CDC", VA = "0xA60CDC")]
	public RocketPanel()
	{
	}
}
[Token(Token = "0x2000336")]
public class RocketSpawner : MonoBehaviour
{
	[Token(Token = "0x2000337")]
	public delegate void OnRocketSpawnedDelegate(Rocket rocket);

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] myPrefab;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float wait;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float waitCounter;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool makeKinematicAfterSpawn;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaxElements;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnedElements;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool lastRocketRemoved;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Collider> colliders;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> spawnedRockets;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialised;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cleanUpTime;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spawnPosition;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool rumblePlayed;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool blocked;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RocketSpawner _instance;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider spawnCollider;

	[Token(Token = "0x1700013C")]
	public static RocketSpawner Instance
	{
		[Token(Token = "0x600144F")]
		[Address(RVA = "0xA60E54", Offset = "0xA60E54", VA = "0xA60E54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400004C")]
	public static event OnRocketSpawnedDelegate OnRocketSpawned
	{
		[Token(Token = "0x600144D")]
		[Address(RVA = "0xA60CE4", Offset = "0xA60CE4", VA = "0xA60CE4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600144E")]
		[Address(RVA = "0xA60D9C", Offset = "0xA60D9C", VA = "0xA60D9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xA60FD0", Offset = "0xA60FD0", VA = "0xA60FD0")]
	[ContextMenu("InitRocketPad")]
	public void Init()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xA61144", Offset = "0xA61144", VA = "0xA61144")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xA611EC", Offset = "0xA611EC", VA = "0xA611EC")]
	public int ActiveSpawnedRockets()
	{
		return default(int);
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xA61348", Offset = "0xA61348", VA = "0xA61348")]
	[ContextMenu("ResetSpanwed")]
	public void ResetSpanwed()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xA61354", Offset = "0xA61354", VA = "0xA61354")]
	public void SetSpawnRockets(GameObject[] _rocketPrefabs)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xA61364", Offset = "0xA61364", VA = "0xA61364")]
	public void SetMaxRockets(int _max)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xA6136C", Offset = "0xA6136C", VA = "0xA6136C")]
	[ContextMenu("UnBlock")]
	public void Block(bool which)
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xA61378", Offset = "0xA61378", VA = "0xA61378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xA61A48", Offset = "0xA61A48", VA = "0xA61A48", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xA61AC8", Offset = "0xA61AC8", VA = "0xA61AC8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xA61B48", Offset = "0xA61B48", VA = "0xA61B48")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xA61CA8", Offset = "0xA61CA8", VA = "0xA61CA8")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xA61E20", Offset = "0xA61E20", VA = "0xA61E20")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xA61EB0", Offset = "0xA61EB0", VA = "0xA61EB0")]
	public RocketSpawner()
	{
	}
}
[Token(Token = "0x2000338")]
public class RocketStage : MonoBehaviour
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particleFX;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject floatMesh;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool waterHit;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public FloatingObject.FLOATTYPE floatType;

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xA620A8", Offset = "0xA620A8", VA = "0xA620A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xA62118", Offset = "0xA62118", VA = "0xA62118")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xA621E0", Offset = "0xA621E0", VA = "0xA621E0")]
	private void HitWater()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xA62274", Offset = "0xA62274", VA = "0xA62274")]
	public RocketStage()
	{
	}
}
[Token(Token = "0x2000339")]
public class RocketTarget : Entity
{
	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<RocketTracker> collisions;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int resultScore;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int groupID;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IDTriggereableOnce;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<RocketTracker> triggerRockets;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isBonusTarget;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[HideInInspector]
	public bool removeBonusOnComplete;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool triggerOnly;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool useIDLock;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool groupHideIfDone;

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xA6227C", Offset = "0xA6227C", VA = "0xA6227C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xA6248C", Offset = "0xA6248C", VA = "0xA6248C")]
	public void HideTarget(int _groupID)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xA624CC", Offset = "0xA624CC", VA = "0xA624CC")]
	public void ClearRocketTracker(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xA62564", Offset = "0xA62564", VA = "0xA62564", Slot = "5")]
	public virtual void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xA62700", Offset = "0xA62700", VA = "0xA62700", Slot = "6")]
	public virtual void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xA62844", Offset = "0xA62844", VA = "0xA62844", Slot = "7")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xA629CC", Offset = "0xA629CC", VA = "0xA629CC", Slot = "8")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xA62AFC", Offset = "0xA62AFC", VA = "0xA62AFC")]
	public RocketTarget()
	{
	}
}
[Token(Token = "0x200033A")]
public class RocketTargetCatch : RocketTarget
{
	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isGrabbed;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRControllerMapper controller;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool needsClearing;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<RocketTracker> trackedRockets;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject currentGrabbed;

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xA62B8C", Offset = "0xA62B8C", VA = "0xA62B8C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xA62CB8", Offset = "0xA62CB8", VA = "0xA62CB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xA62D8C", Offset = "0xA62D8C", VA = "0xA62D8C")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xA635D8", Offset = "0xA635D8", VA = "0xA635D8")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xA638E0", Offset = "0xA638E0", VA = "0xA638E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xA63A08", Offset = "0xA63A08", VA = "0xA63A08")]
	public RocketTargetCatch()
	{
	}
}
[Token(Token = "0x200033B")]
public class RocketTargetDartSingle : MonoBehaviour
{
	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wasTriggered;

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xA63A0C", Offset = "0xA63A0C", VA = "0xA63A0C")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xA63EF8", Offset = "0xA63EF8", VA = "0xA63EF8")]
	public RocketTargetDartSingle()
	{
	}
}
[Token(Token = "0x200033C")]
public class RocketTargetFlyThrough : RocketTarget
{
	[Token(Token = "0x6001476")]
	[Address(RVA = "0xA63F00", Offset = "0xA63F00", VA = "0xA63F00", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xA63F04", Offset = "0xA63F04", VA = "0xA63F04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xA63F08", Offset = "0xA63F08", VA = "0xA63F08")]
	private void CheckCondition()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xA64240", Offset = "0xA64240", VA = "0xA64240")]
	public RocketTargetFlyThrough()
	{
	}
}
[Token(Token = "0x200033D")]
public class RocketTargetLand : RocketTarget
{
	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject visual;

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xA64244", Offset = "0xA64244", VA = "0xA64244", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xA64248", Offset = "0xA64248", VA = "0xA64248")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xA6424C", Offset = "0xA6424C", VA = "0xA6424C")]
	private void CheckCondition()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xA6448C", Offset = "0xA6448C", VA = "0xA6448C")]
	public RocketTargetLand()
	{
	}
}
[Token(Token = "0x200033E")]
public class RocketTargetManager : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	public delegate void OnLevelCompleteDelegate();

	[Token(Token = "0x2000340")]
	public delegate void OnTargetCompleteDelegate(int done, int needed);

	[Token(Token = "0x2000341")]
	public delegate void OnOutOfRocketsDelegate();

	[Token(Token = "0x2000342")]
	public delegate void OnUnSolvableDelegate();

	[Token(Token = "0x2000343")]
	public delegate void OnRocketOutOfGameDelegate(Rocket rocket);

	[Token(Token = "0x4001447")]
	public const int maxIDs = 10;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxRocketPerLevel;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int successfullRunsNeeded;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int rocketsUsed;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int targetScore;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string missionBriefing;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] spawnRocketTypes;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool outOfRockets;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public int succesfullRuns;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public RocketTracker currentRocketTry;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<RocketTracker> rockets;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<RocketTracker> outOfGameRockets;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<RocketTarget> targetsRequiredPerLevel;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<RocketTarget> bonusTargets;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<RocketTarget> bonusTargetsComplete;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<List<RocketTracker>> idsCompletedList;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int[] idsRequired;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool[] IDsDone;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool gameDone;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject successFX;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool countTargetGroupsAsOne;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool unSolvable;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool showTargetsPanel;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static RocketTargetManager _instance;

	[Token(Token = "0x1700013D")]
	public static RocketTargetManager Instance
	{
		[Token(Token = "0x6001488")]
		[Address(RVA = "0xA5B858", Offset = "0xA5B858", VA = "0xA5B858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400004D")]
	public static event OnLevelCompleteDelegate OnLevelComplete
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0xA64490", Offset = "0xA64490", VA = "0xA64490")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600147F")]
		[Address(RVA = "0xA64548", Offset = "0xA64548", VA = "0xA64548")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004E")]
	public static event OnTargetCompleteDelegate OnTargetComplete
	{
		[Token(Token = "0x6001480")]
		[Address(RVA = "0xA64600", Offset = "0xA64600", VA = "0xA64600")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001481")]
		[Address(RVA = "0xA646BC", Offset = "0xA646BC", VA = "0xA646BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004F")]
	public static event OnOutOfRocketsDelegate OnOutOfRockets
	{
		[Token(Token = "0x6001482")]
		[Address(RVA = "0xA64778", Offset = "0xA64778", VA = "0xA64778")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001483")]
		[Address(RVA = "0xA64834", Offset = "0xA64834", VA = "0xA64834")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public static event OnUnSolvableDelegate OnUnSolvable
	{
		[Token(Token = "0x6001484")]
		[Address(RVA = "0xA648F0", Offset = "0xA648F0", VA = "0xA648F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xA649AC", Offset = "0xA649AC", VA = "0xA649AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000051")]
	public static event OnRocketOutOfGameDelegate OnRocketOutOfGame
	{
		[Token(Token = "0x6001486")]
		[Address(RVA = "0xA64A68", Offset = "0xA64A68", VA = "0xA64A68")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001487")]
		[Address(RVA = "0xA64B24", Offset = "0xA64B24", VA = "0xA64B24")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xA64BE0", Offset = "0xA64BE0", VA = "0xA64BE0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xA64FA8", Offset = "0xA64FA8", VA = "0xA64FA8")]
	public void ResetRocketsSpawned()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xA5C370", Offset = "0xA5C370", VA = "0xA5C370")]
	public void ReportRocketsOutOfGame(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xA65070", Offset = "0xA65070", VA = "0xA65070")]
	private void CheckConditions()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xA65124", Offset = "0xA65124", VA = "0xA65124")]
	public void RegisterRockets(RocketTracker _rocket)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xA63784", Offset = "0xA63784", VA = "0xA63784")]
	public void ClearTrackerFromTargets(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xA62348", Offset = "0xA62348", VA = "0xA62348")]
	public void RegisterTargets(RocketTarget _target)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xA652F0", Offset = "0xA652F0", VA = "0xA652F0")]
	public void BonusTargetComplete(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xA653F0", Offset = "0xA653F0", VA = "0xA653F0")]
	private void ClearTargetsForGroup(int _groupID)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xA63BF8", Offset = "0xA63BF8", VA = "0xA63BF8")]
	public void CheckLevelComplete(Vector3 _position, RocketTarget _rocketTarget, bool _forceTargetOK = false)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xA65540", Offset = "0xA65540", VA = "0xA65540")]
	private void ShowResultSuccess(Vector3 _position)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xA619CC", Offset = "0xA619CC", VA = "0xA619CC")]
	public void UpdatePanel()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xA656C8", Offset = "0xA656C8", VA = "0xA656C8", Slot = "5")]
	public virtual void TellScore(int _score, GameObject _rocket, DartTarget _currenttarget, int _targetScore)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xA656CC", Offset = "0xA656CC", VA = "0xA656CC", Slot = "6")]
	public virtual void TargetDone(GameObject _rocket)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xA656D0", Offset = "0xA656D0", VA = "0xA656D0")]
	public RocketTargetManager()
	{
	}
}
[Token(Token = "0x2000344")]
public class RocketTracker : Entity
{
	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int perTryTargetsDone;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int perLevelTargetsDone;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int runScore;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isGrabbed;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isRegistered;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rocket myRocket;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool conditionsMet;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<RocketTarget> myTargets;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int[] conditionIDSMet;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int idLock;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool outOfGame;

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xA65DD8", Offset = "0xA65DD8", VA = "0xA65DD8", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xA66008", Offset = "0xA66008", VA = "0xA66008")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xA660DC", Offset = "0xA660DC", VA = "0xA660DC")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xA66180", Offset = "0xA66180", VA = "0xA66180")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xA65F6C", Offset = "0xA65F6C", VA = "0xA65F6C")]
	public void RegisterRocket()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xA65274", Offset = "0xA65274", VA = "0xA65274")]
	public void ClearMyTargets()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xA66208", Offset = "0xA66208", VA = "0xA66208")]
	private void BonusComplete(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xA63118", Offset = "0xA63118", VA = "0xA63118")]
	public void ConditionSuccess(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xA66330", Offset = "0xA66330", VA = "0xA66330")]
	public void ConditionFeedbackFX()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xA6625C", Offset = "0xA6625C", VA = "0xA6625C")]
	public void BonusFeedbackFX()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xA6646C", Offset = "0xA6646C", VA = "0xA6646C")]
	public RocketTracker()
	{
	}
}
[Token(Token = "0x2000345")]
public class TargetDisplay : MonoBehaviour
{
	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] targetsDone;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] runsSprites;

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xA6647C", Offset = "0xA6647C", VA = "0xA6647C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xA66488", Offset = "0xA66488", VA = "0xA66488")]
	public void SetTargets(int _needed, int _done)
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xA665A0", Offset = "0xA665A0", VA = "0xA665A0")]
	public TargetDisplay()
	{
	}
}
[Token(Token = "0x2000346")]
public class WindSack : MonoBehaviour
{
	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forcePoint;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float factor;

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xA665A8", Offset = "0xA665A8", VA = "0xA665A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xA66620", Offset = "0xA66620", VA = "0xA66620")]
	private void Update()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xA6675C", Offset = "0xA6675C", VA = "0xA6675C")]
	public WindSack()
	{
	}
}
[Token(Token = "0x2000347")]
public class WindZone : MonoBehaviour
{
	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 windSpeed;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 WindSpeedStatic;

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xA6676C", Offset = "0xA6676C", VA = "0xA6676C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xA66804", Offset = "0xA66804", VA = "0xA66804")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xA669C8", Offset = "0xA669C8", VA = "0xA669C8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xA66D00", Offset = "0xA66D00", VA = "0xA66D00")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xA66ED8", Offset = "0xA66ED8", VA = "0xA66ED8")]
	public WindZone()
	{
	}
}
[Token(Token = "0x2000348")]
public enum SlingState
{
	[Token(Token = "0x400147A")]
	Rest,
	[Token(Token = "0x400147B")]
	Loading,
	[Token(Token = "0x400147C")]
	Shoot,
	[Token(Token = "0x400147D")]
	Cooldown
}
[Token(Token = "0x2000349")]
public class RubberBand : MonoBehaviour
{
	[Token(Token = "0x200034A")]
	public delegate void SlingFiredDelegate(GlueConnections _glueConnection, RubberBand rubberBand);

	[Token(Token = "0x200034B")]
	public delegate void SlingLoadedDelegate(GlueConnections _glueConnection, RubberBand rubberBand);

	[Token(Token = "0x200034C")]
	[CompilerGenerated]
	private sealed class <TestDelayedFire>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RubberBand <>4__this;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fire;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xA69D8C", Offset = "0xA69D8C", VA = "0xA69D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xA69DD4", Offset = "0xA69DD4", VA = "0xA69DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xA68BA8", Offset = "0xA68BA8", VA = "0xA68BA8")]
		[DebuggerHidden]
		public <TestDelayedFire>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xA69758", Offset = "0xA69758", VA = "0xA69758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xA6975C", Offset = "0xA6975C", VA = "0xA6975C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xA69D94", Offset = "0xA69D94", VA = "0xA69D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform end;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 middle;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer line;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer backLine;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConfigurableJoint spring;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConfigurableJoint springSub;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform Projectile;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LineRenderer path;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SlingState state;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody projectileRB;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float dist;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Collider box;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float span;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float distancePowerFactor;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool legacySlignShot;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PowerSlingController slingController;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material powerSlingMaterial;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material powerSlingAttachedMaterial;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer powerSlingCenter;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float coolDownTime;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float counterForceFactor;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ForceMode counterForceMode;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float distForceFactor;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float nonFireDistance;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<Vector3> fireDirection;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 middledDirection;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float spanStrechFactor;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float triggerSize;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[EventRef]
	public string customSlingSFX;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool useUpdate;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float shotTentacleCollisionCooldown;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool rescanCollidersOnShoot;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ConfigurableJoint cJoint;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 attachPos;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 pullCounterforce;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool canFire;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 shootVelocity;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<GlueConnections, Grabbable> glueGrabDict;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Grabbable _grabbale;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool anyInChainGrabbed;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GlueConnections checkConnection;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float stretchSFXFactor;

	[Token(Token = "0x40014AC")]
	private const string stretchtForceParameter = "Stretch";

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private EventInstance stretchSFXInstance;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string stretchSFX;

	[Token(Token = "0x40014AF")]
	private const string shotForceParameter = "VelocityFactor";

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string shotSFX;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Grabbable grabbableProjectile;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool wasMother;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GlueConnections glueConnection;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool isShootable;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float minMassTensorCheat;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int numSteps;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float widthFactor;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float timeDelta;

	[Token(Token = "0x14000052")]
	public static event SlingFiredDelegate OnSlingFired
	{
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xA66F60", Offset = "0xA66F60", VA = "0xA66F60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xA67018", Offset = "0xA67018", VA = "0xA67018")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000053")]
	public static event SlingFiredDelegate OnSlingLoaded
	{
		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xA670D0", Offset = "0xA670D0", VA = "0xA670D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xA6718C", Offset = "0xA6718C", VA = "0xA6718C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xA67248", Offset = "0xA67248", VA = "0xA67248")]
	private void Start()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xA67390", Offset = "0xA67390", VA = "0xA67390")]
	private ConfigurableJoint CreateSlingSpring(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xA67540", Offset = "0xA67540", VA = "0xA67540")]
	public void DetachSling()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xA67874", Offset = "0xA67874", VA = "0xA67874")]
	private float MassToForceFactor(float dist)
	{
		return default(float);
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xA678DC", Offset = "0xA678DC", VA = "0xA678DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xA6833C", Offset = "0xA6833C", VA = "0xA6833C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xA678EC", Offset = "0xA678EC", VA = "0xA678EC")]
	private void UpdateSlingshot()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xA676A0", Offset = "0xA676A0", VA = "0xA676A0")]
	private void StretchSFX(float _dist)
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xA685C0", Offset = "0xA685C0", VA = "0xA685C0")]
	private bool CheckAniInChainGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xA6894C", Offset = "0xA6894C", VA = "0xA6894C")]
	private void Fire()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xA68B20", Offset = "0xA68B20", VA = "0xA68B20")]
	[IteratorStateMachine(typeof(<TestDelayedFire>d__67))]
	private IEnumerator TestDelayedFire(bool fire)
	{
		return null;
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xA68BD0", Offset = "0xA68BD0", VA = "0xA68BD0")]
	private void MakeActive()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xA68BDC", Offset = "0xA68BDC", VA = "0xA68BDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xA6834C", Offset = "0xA6834C", VA = "0xA6834C")]
	private void UpdateTrajectory(Vector3 initialPosition, Vector3 initialVelocity)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xA69300", Offset = "0xA69300", VA = "0xA69300")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xA69318", Offset = "0xA69318", VA = "0xA69318")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xA69340", Offset = "0xA69340", VA = "0xA69340")]
	public RubberBand()
	{
	}
}
[Token(Token = "0x200034D")]
public class RustyRandomizer : MonoBehaviour
{
	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xA69DDC", Offset = "0xA69DDC", VA = "0xA69DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xA69E38", Offset = "0xA69E38", VA = "0xA69E38")]
	private void ChangeMaterial()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xA69F20", Offset = "0xA69F20", VA = "0xA69F20")]
	public RustyRandomizer()
	{
	}
}
[Token(Token = "0x200034E")]
public class SandboxDemoLoad : MonoBehaviour
{
	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string loadableJSon;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int JSONIndex;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> listOfSaveEntities;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xA69F28", Offset = "0xA69F28", VA = "0xA69F28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xA69FA8", Offset = "0xA69FA8", VA = "0xA69FA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xA6A028", Offset = "0xA6A028", VA = "0xA6A028")]
	private void Start()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xA6A0AC", Offset = "0xA6A0AC", VA = "0xA6A0AC")]
	private void LoadSO()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xA6A100", Offset = "0xA6A100", VA = "0xA6A100")]
	private void PreReset(bool _clear)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xA6A168", Offset = "0xA6A168", VA = "0xA6A168")]
	public void LoadNext()
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xA6A248", Offset = "0xA6A248", VA = "0xA6A248")]
	public SandboxDemoLoad()
	{
	}
}
[Token(Token = "0x200034F")]
public class SandboxInit_base : MonoBehaviour
{
	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xA6A250", Offset = "0xA6A250", VA = "0xA6A250", Slot = "4")]
	public virtual void SandboxInit()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xA6A254", Offset = "0xA6A254", VA = "0xA6A254")]
	public SandboxInit_base()
	{
	}
}
[Token(Token = "0x2000350")]
public class SandBoxLimitSet : MonoBehaviour
{
	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xA6A25C", Offset = "0xA6A25C", VA = "0xA6A25C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xA6A30C", Offset = "0xA6A30C", VA = "0xA6A30C")]
	public SandBoxLimitSet()
	{
	}
}
[Token(Token = "0x2000351")]
public class SandboxSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000352")]
	public class SandboxSettings
	{
		[Token(Token = "0x2000353")]
		public enum Mode
		{
			[Token(Token = "0x40014CC")]
			story,
			[Token(Token = "0x40014CD")]
			level
		}

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode unlockMode;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Level unlockOnLevelDone;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Story unlockOnStoryDone;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level sandbox;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isAvailable;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xA6A8E0", Offset = "0xA6A8E0", VA = "0xA6A8E0")]
		public SandboxSettings()
		{
		}
	}

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMeshProDestination;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject navigationButtons;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<SandboxSettings> sandboxes;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SandboxSettings> availableSandboxesList;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int idx;

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xA6A31C", Offset = "0xA6A31C", VA = "0xA6A31C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xA6A320", Offset = "0xA6A320", VA = "0xA6A320")]
	private void CheckForMenu()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xA6A3D4", Offset = "0xA6A3D4", VA = "0xA6A3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xA6A480", Offset = "0xA6A480", VA = "0xA6A480")]
	private void AvailableSandboxes()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xA6A738", Offset = "0xA6A738", VA = "0xA6A738")]
	private void SetDestination()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xA6A7CC", Offset = "0xA6A7CC", VA = "0xA6A7CC")]
	public void LeverPressed()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xA6A848", Offset = "0xA6A848", VA = "0xA6A848")]
	public void NextPlayground(bool forward)
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xA6A8D8", Offset = "0xA6A8D8", VA = "0xA6A8D8")]
	public SandboxSelector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000354")]
public class ObjectSaveData
{
	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string debugName;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int RigidbodyID;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int entityDefinitionID;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 entityPosition;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 entityRotation;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 entityScale;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGlue;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JointData[] jointData;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool hasConnectedJoint;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public JointData connectedJointConfig;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int connectedGlueJointRBID;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ObjectSaveData loadedConnectedJoint;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isSecondary;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool hasColor;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color color;

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xA6A8E8", Offset = "0xA6A8E8", VA = "0xA6A8E8")]
	public ObjectSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000355")]
public class JointData
{
	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool autoConfigure;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 anchor;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 connectedAnchor;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 secondaryAxis;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int connectedRBID;

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xA6A8F0", Offset = "0xA6A8F0", VA = "0xA6A8F0")]
	public JointData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000356")]
public class ConstructionData
{
	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ObjectSaveData[] constructionData;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string version;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int entitiesUsed;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxEntities;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string device;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string levelName;

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xA6A8F8", Offset = "0xA6A8F8", VA = "0xA6A8F8")]
	public ConstructionData()
	{
	}
}
[Token(Token = "0x2000357")]
public class SaveID : MonoBehaviour
{
	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int saveID;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isStaticSaveID;

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xA6A900", Offset = "0xA6A900", VA = "0xA6A900")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xA6A970", Offset = "0xA6A970", VA = "0xA6A970")]
	private void CheckManualSaveID()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xA6AA80", Offset = "0xA6AA80", VA = "0xA6AA80")]
	public SaveID()
	{
	}
}
[Token(Token = "0x2000358")]
public class SaveBelow : MonoBehaviour
{
	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideAfterSave;

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xA6AA88", Offset = "0xA6AA88", VA = "0xA6AA88")]
	[ContextMenu("SaveBelow")]
	private void Save()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xA6AC9C", Offset = "0xA6AC9C", VA = "0xA6AC9C")]
	public SaveBelow()
	{
	}
}
[Token(Token = "0x2000359")]
public class SceneLighting : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[CompilerGenerated]
	private sealed class <LateLight>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLighting <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xA6B474", Offset = "0xA6B474", VA = "0xA6B474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xA6B4BC", Offset = "0xA6B4BC", VA = "0xA6B4BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xA6B180", Offset = "0xA6B180", VA = "0xA6B180")]
		[DebuggerHidden]
		public <LateLight>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xA6B31C", Offset = "0xA6B31C", VA = "0xA6B31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xA6B320", Offset = "0xA6B320", VA = "0xA6B320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xA6B47C", Offset = "0xA6B47C", VA = "0xA6B47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("LOCK FOR DEFAULT PREFABS")]
	public bool lockApplyPrefab;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Skybox;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color AmbientColor;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool FogEnabled;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public FogMode SceneFogMode;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color FogColor;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Density;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private LightmapBakeType bakeType;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shadowDistanceOverride;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Light directionalLight;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool overrideDirectionalLight;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color directionalLightColor;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float directionalLightIntensity;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool lateOverrideLighting;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneLighting _instance;

	[Token(Token = "0x17000140")]
	public static SceneLighting Instance
	{
		[Token(Token = "0x6001504")]
		[Address(RVA = "0xA6ACAC", Offset = "0xA6ACAC", VA = "0xA6ACAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xA6AE38", Offset = "0xA6AE38", VA = "0xA6AE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xA6B10C", Offset = "0xA6B10C", VA = "0xA6B10C")]
	[IteratorStateMachine(typeof(<LateLight>d__18))]
	private IEnumerator LateLight()
	{
		return null;
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xA6B1A8", Offset = "0xA6B1A8", VA = "0xA6B1A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xA6AE68", Offset = "0xA6AE68", VA = "0xA6AE68")]
	[ContextMenu("LoadLightingSettings")]
	public void LoadLightingSettings()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xA6B208", Offset = "0xA6B208", VA = "0xA6B208")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xA6B20C", Offset = "0xA6B20C", VA = "0xA6B20C")]
	public void SaveLightingSettings()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xA6B2F8", Offset = "0xA6B2F8", VA = "0xA6B2F8")]
	public SceneLighting()
	{
	}
}
[Token(Token = "0x200035B")]
public class SeafoodGrinder : MonoBehaviour
{
	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float realSpeed;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotAxis;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speedInc;

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xA6B4C4", Offset = "0xA6B4C4", VA = "0xA6B4C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xA6B518", Offset = "0xA6B518", VA = "0xA6B518")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xA6B620", Offset = "0xA6B620", VA = "0xA6B620")]
	public SeafoodGrinder()
	{
	}
}
[Token(Token = "0x200035C")]
public class SeagullsSFX : MonoBehaviour
{
	[Token(Token = "0x6001515")]
	[Address(RVA = "0xA6B638", Offset = "0xA6B638", VA = "0xA6B638")]
	private void Start()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xA6B728", Offset = "0xA6B728", VA = "0xA6B728")]
	public SeagullsSFX()
	{
	}
}
[Token(Token = "0x200035D")]
public class SetBreakforceOnGrab : MonoBehaviour
{
	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint myJoint;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float breakforceToSet;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xA6B730", Offset = "0xA6B730", VA = "0xA6B730")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xA6B834", Offset = "0xA6B834", VA = "0xA6B834")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xA6B8B4", Offset = "0xA6B8B4", VA = "0xA6B8B4")]
	private void Grab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0xA6BAFC", Offset = "0xA6BAFC", VA = "0xA6BAFC")]
	public SetBreakforceOnGrab()
	{
	}
}
[Token(Token = "0x200035E")]
public class SetCenterOfMassToTransform : MonoBehaviour
{
	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody targetRB;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform COMTransform;

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xA6BB04", Offset = "0xA6BB04", VA = "0xA6BB04")]
	private void Start()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0xA6BB64", Offset = "0xA6BB64", VA = "0xA6BB64")]
	public SetCenterOfMassToTransform()
	{
	}
}
[Token(Token = "0x200035F")]
public class SetComplete : MonoBehaviour
{
	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("check level bool for Start completion - or use ManualCall")]
	public bool level;

	[Token(Token = "0x600151D")]
	[Address(RVA = "0xA6BB6C", Offset = "0xA6BB6C", VA = "0xA6BB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xA6BBA0", Offset = "0xA6BBA0", VA = "0xA6BBA0")]
	public void ManualCall()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xA6BBC4", Offset = "0xA6BBC4", VA = "0xA6BBC4")]
	public SetComplete()
	{
	}
}
[Token(Token = "0x2000360")]
[ExecuteInEditMode]
public class SetSeaWaves : MonoBehaviour
{
	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaterInterface.WATER waves;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private WaterInterface.WATER lastWaves;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool customWaterHeight;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waterOffset;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defaultWaterHeight;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastWaterOffset;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideDefaultWavesParameter;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int wavesParameter;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool overrideDefaultWindParameter;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int windParameter;

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xA6BBCC", Offset = "0xA6BBCC", VA = "0xA6BBCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xA6BBF0", Offset = "0xA6BBF0", VA = "0xA6BBF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xA6BBD0", Offset = "0xA6BBD0", VA = "0xA6BBD0")]
	private void SetOcean()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xA6BCA4", Offset = "0xA6BCA4", VA = "0xA6BCA4")]
	private void SetOceanSFX()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xA6BBF4", Offset = "0xA6BBF4", VA = "0xA6BBF4")]
	private void SetWaves()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xA6BC28", Offset = "0xA6BC28", VA = "0xA6BC28")]
	public void SetHeight()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xA6BD5C", Offset = "0xA6BD5C", VA = "0xA6BD5C")]
	public SetSeaWaves()
	{
	}
}
[Token(Token = "0x2000361")]
public class SetupDemoTentacle : MonoBehaviour
{
	[Token(Token = "0x2000362")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetupDemoTentacle <>4__this;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xA6C104", Offset = "0xA6C104", VA = "0xA6C104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xA6C14C", Offset = "0xA6C14C", VA = "0xA6C14C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xA6BDEC", Offset = "0xA6BDEC", VA = "0xA6BDEC")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xA6BFE4", Offset = "0xA6BFE4", VA = "0xA6BFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xA6BFE8", Offset = "0xA6BFE8", VA = "0xA6BFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xA6C10C", Offset = "0xA6C10C", VA = "0xA6C10C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tentacle;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glove;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Joint concreteBlock;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody concreteBlockRB;

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xA6BD78", Offset = "0xA6BD78", VA = "0xA6BD78")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xA6BE14", Offset = "0xA6BE14", VA = "0xA6BE14")]
	private void ShowDemoTentacle()
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xA6BE60", Offset = "0xA6BE60", VA = "0xA6BE60")]
	private void Update()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xA6BFDC", Offset = "0xA6BFDC", VA = "0xA6BFDC")]
	public SetupDemoTentacle()
	{
	}
}
[Token(Token = "0x2000363")]
public class ShakeObject : MonoBehaviour
{
	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <ShakeEnumerator>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShakeObject <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xA6C564", Offset = "0xA6C564", VA = "0xA6C564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xA6C5AC", Offset = "0xA6C5AC", VA = "0xA6C5AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xA6C320", Offset = "0xA6C320", VA = "0xA6C320")]
		[DebuggerHidden]
		public <ShakeEnumerator>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xA6C380", Offset = "0xA6C380", VA = "0xA6C380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xA6C384", Offset = "0xA6C384", VA = "0xA6C384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xA6C56C", Offset = "0xA6C56C", VA = "0xA6C56C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isActive;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 shakeOffset;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useStartPosition;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform shakeTarget;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float strength;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float duration;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator shakeEnumerator;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool GlobalShakeDeactivated;

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xA6C154", Offset = "0xA6C154", VA = "0xA6C154")]
	private void Start()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xA6C164", Offset = "0xA6C164", VA = "0xA6C164")]
	[ContextMenu("StartShake")]
	public void StartShake()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xA6C2AC", Offset = "0xA6C2AC", VA = "0xA6C2AC")]
	[IteratorStateMachine(typeof(<ShakeEnumerator>d__12))]
	private IEnumerator ShakeEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xA6C348", Offset = "0xA6C348", VA = "0xA6C348")]
	private float GetRND(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xA6C350", Offset = "0xA6C350", VA = "0xA6C350")]
	public ShakeObject()
	{
	}
}
[Token(Token = "0x2000365")]
public class SharkBait : MonoBehaviour
{
	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vehicle myVehicle;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attackHumans;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetSpeedFactor;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allowTriggerChange;

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xA6C5B4", Offset = "0xA6C5B4", VA = "0xA6C5B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xA6C634", Offset = "0xA6C634", VA = "0xA6C634")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0xA6C71C", Offset = "0xA6C71C", VA = "0xA6C71C")]
	public SharkBait()
	{
	}
}
[Token(Token = "0x2000366")]
public class SharkController : MonoBehaviour
{
	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackerORB laserORB;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fake;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fakeBellyUp;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator sharkAnimator;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vehicle myVehicle;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rb;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xA6C72C", Offset = "0xA6C72C", VA = "0xA6C72C")]
	[ContextMenu("Deactivate Shark")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xA6C788", Offset = "0xA6C788", VA = "0xA6C788")]
	private void DoDeactivate()
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xA6C82C", Offset = "0xA6C82C", VA = "0xA6C82C")]
	public SharkController()
	{
	}
}
[Token(Token = "0x2000367")]
public class SharkVehicleAnimation : MonoBehaviour
{
	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vehicle myVehicle;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator sharkAnimator;

	[Token(Token = "0x6001542")]
	[Address(RVA = "0xA6C834", Offset = "0xA6C834", VA = "0xA6C834")]
	private void Start()
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xA6C890", Offset = "0xA6C890", VA = "0xA6C890")]
	private void AnimCheck()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xA6C8E8", Offset = "0xA6C8E8", VA = "0xA6C8E8")]
	public SharkVehicleAnimation()
	{
	}
}
[Token(Token = "0x2000368")]
public class ShoutTimer : CollisionBase
{
	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BubbleToCharacter> bubblesList;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<HumansInteraction> excludeList;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool belowThisTransformOnly;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool useTrigger;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool isInsert;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("key for loc")]
	public string shoutID;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string emoString;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float startWait;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minWait;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxWait;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float duration;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float startTime;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool isActive;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float perCharacterRevealDelay;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool changeBubbleScale;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 bubbleScale;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool clearConvosOnDeactivate;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool clearConvosOnActivate;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string emoSFX;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool doHop;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float hopForceMin;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float hopForceMax;

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xA6C8F0", Offset = "0xA6C8F0", VA = "0xA6C8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0xA6C9F0", Offset = "0xA6C9F0", VA = "0xA6C9F0")]
	[ContextMenu("Activate")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0xA6CD9C", Offset = "0xA6CD9C", VA = "0xA6CD9C")]
	private void ClearConvos()
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xA6CE28", Offset = "0xA6CE28", VA = "0xA6CE28")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xA6CE60", Offset = "0xA6CE60", VA = "0xA6CE60", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xA6C980", Offset = "0xA6C980", VA = "0xA6C980")]
	private void NewWait(float offset = -1f)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xA6CA34", Offset = "0xA6CA34", VA = "0xA6CA34")]
	private void SearchForTargets()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xA6D048", Offset = "0xA6D048", VA = "0xA6D048")]
	public void RemoveBubble(HumansInteraction hi)
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xA6D0DC", Offset = "0xA6D0DC", VA = "0xA6D0DC")]
	private void PickHuman()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xA6D348", Offset = "0xA6D348", VA = "0xA6D348")]
	public ShoutTimer()
	{
	}
}
[Token(Token = "0x2000369")]
public class ShowIfNewStuffPlayground : MonoBehaviour
{
	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToShow;

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xA6D458", Offset = "0xA6D458", VA = "0xA6D458")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xA6D560", Offset = "0xA6D560", VA = "0xA6D560")]
	private void Start()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xA6D45C", Offset = "0xA6D45C", VA = "0xA6D45C")]
	private void DoUnlocks()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xA6D564", Offset = "0xA6D564", VA = "0xA6D564")]
	public ShowIfNewStuffPlayground()
	{
	}
}
[Token(Token = "0x200036A")]
public class SizeAdjustMovement : MonoBehaviour
{
	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicalSlider Slider;

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xA6D56C", Offset = "0xA6D56C", VA = "0xA6D56C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xA6D570", Offset = "0xA6D570", VA = "0xA6D570")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xA6D628", Offset = "0xA6D628", VA = "0xA6D628")]
	public SizeAdjustMovement()
	{
	}
}
[Token(Token = "0x200036B")]
public class SlingshotDisabled : MonoBehaviour
{
	[Token(Token = "0x6001556")]
	[Address(RVA = "0xA6D630", Offset = "0xA6D630", VA = "0xA6D630")]
	private void Start()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xA6D634", Offset = "0xA6D634", VA = "0xA6D634")]
	private void Update()
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xA6D638", Offset = "0xA6D638", VA = "0xA6D638")]
	public SlingshotDisabled()
	{
	}
}
[Token(Token = "0x200036C")]
public class SmokingTips : MonoBehaviour
{
	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject tipSmokeL;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject tipSmokeR;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject putOnTips;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEnabled;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool initialised;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scale;

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xA6D640", Offset = "0xA6D640", VA = "0xA6D640")]
	private void Init()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xA6D740", Offset = "0xA6D740", VA = "0xA6D740")]
	private void Update()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xA6D7D4", Offset = "0xA6D7D4", VA = "0xA6D7D4")]
	public SmokingTips()
	{
	}
}
[Token(Token = "0x200036D")]
public class SolutionBase : MonoBehaviour
{
	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] neededObjects;

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xA6D7E4", Offset = "0xA6D7E4", VA = "0xA6D7E4", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xA6D8A8", Offset = "0xA6D8A8", VA = "0xA6D8A8")]
	public SolutionBase()
	{
	}
}
[Token(Token = "0x200036E")]
public class SpawnerMouth : MonoBehaviour
{
	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform animationRoot;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoSpawn.ID spanwerID;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string spawnedSFX;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float aniDuration;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tween tween;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween dialTween;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float addLocalForce;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dialNeedle;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float dialTweenDuration;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float aniScale;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AutoSpawn mySpawner;

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xA6D8B0", Offset = "0xA6D8B0", VA = "0xA6D8B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xA6D930", Offset = "0xA6D930", VA = "0xA6D930")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xA6D9B0", Offset = "0xA6D9B0", VA = "0xA6D9B0")]
	private void ObjectSpawned(GameObject spawnedObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xA6DC68", Offset = "0xA6DC68", VA = "0xA6DC68")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xA6D9DC", Offset = "0xA6D9DC", VA = "0xA6D9DC")]
	private void Spawned(GameObject spawnedObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xA6DCEC", Offset = "0xA6DCEC", VA = "0xA6DCEC")]
	private void CancelTween(Tween _tween)
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0xA6DD34", Offset = "0xA6DD34", VA = "0xA6DD34")]
	public SpawnerMouth()
	{
	}
}
[Token(Token = "0x200036F")]
public class SpawnPeopleOnTargetCompleted : MonoBehaviour
{
	[Token(Token = "0x2000370")]
	[CompilerGenerated]
	private sealed class <PeopleSpawn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPeopleOnTargetCompleted <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xA6E380", Offset = "0xA6E380", VA = "0xA6E380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xA6E3C8", Offset = "0xA6E3C8", VA = "0xA6E3C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xA6DED0", Offset = "0xA6DED0", VA = "0xA6DED0")]
		[DebuggerHidden]
		public <PeopleSpawn>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xA6DF14", Offset = "0xA6DF14", VA = "0xA6DF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xA6DF18", Offset = "0xA6DF18", VA = "0xA6DF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xA6E388", Offset = "0xA6E388", VA = "0xA6E388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTarget target;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnDelay;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool peopleSpawned;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject peoplePrefab;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] tools;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dist;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float height;

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xA6DD5C", Offset = "0xA6DD5C", VA = "0xA6DD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xA6DD60", Offset = "0xA6DD60", VA = "0xA6DD60")]
	private void TargetPlacedCheck()
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0xA6DE4C", Offset = "0xA6DE4C", VA = "0xA6DE4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xA6DE5C", Offset = "0xA6DE5C", VA = "0xA6DE5C")]
	[IteratorStateMachine(typeof(<PeopleSpawn>d__11))]
	private IEnumerator PeopleSpawn()
	{
		return null;
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0xA6DEF8", Offset = "0xA6DEF8", VA = "0xA6DEF8")]
	public SpawnPeopleOnTargetCompleted()
	{
	}
}
[Token(Token = "0x2000371")]
public class SpawnPrefab : MonoBehaviour
{
	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool atOriginalPosition;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPosition;

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xA6E3D0", Offset = "0xA6E3D0", VA = "0xA6E3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xA6E400", Offset = "0xA6E400", VA = "0xA6E400")]
	public void DoSpawnPrefab()
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xA6E530", Offset = "0xA6E530", VA = "0xA6E530")]
	public SpawnPrefab()
	{
	}
}
[Token(Token = "0x2000372")]
public class SpawnResetti : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	public delegate void CustomActionDelegate(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resState);

	[Token(Token = "0x2000374")]
	public delegate void SpawnResettiDelegate(SpawnResetti resetti);

	[Token(Token = "0x2000375")]
	public delegate void PostSpawnResettiDelegate(LevelDirector_Resetti resettiLevelDir);

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject resettiPrefab;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnResetti;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] spawnPositions;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject drawingPrefab;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody myRigidBody;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool defaultResettoSpawned;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelDirector_Resetti levelDirector_Resetti;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConfigurableJoint myConfigurableJoint;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody myRB;

	[Token(Token = "0x14000054")]
	public static event CustomActionDelegate OnCustomResettiAction
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0xA6E538", Offset = "0xA6E538", VA = "0xA6E538")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001574")]
		[Address(RVA = "0xA6E5F0", Offset = "0xA6E5F0", VA = "0xA6E5F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000055")]
	public static event SpawnResettiDelegate OnSpawnResetti
	{
		[Token(Token = "0x6001575")]
		[Address(RVA = "0xA6E6A8", Offset = "0xA6E6A8", VA = "0xA6E6A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001576")]
		[Address(RVA = "0xA6E764", Offset = "0xA6E764", VA = "0xA6E764")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public static event PostSpawnResettiDelegate OnPostSpawnResetti
	{
		[Token(Token = "0x6001577")]
		[Address(RVA = "0xA6E820", Offset = "0xA6E820", VA = "0xA6E820")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001578")]
		[Address(RVA = "0xA6E8DC", Offset = "0xA6E8DC", VA = "0xA6E8DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xA6E998", Offset = "0xA6E998", VA = "0xA6E998")]
	private void Start()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xA6EC08", Offset = "0xA6EC08", VA = "0xA6EC08")]
	public void HideDefaultResetto()
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xA6EC50", Offset = "0xA6EC50", VA = "0xA6EC50")]
	public void CallCustomAction(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resState)
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xA6ECD0", Offset = "0xA6ECD0", VA = "0xA6ECD0")]
	public Transform GetInHouseTransform()
	{
		return null;
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0xA6EA00", Offset = "0xA6EA00", VA = "0xA6EA00")]
	private void Spawn()
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xA6ECF8", Offset = "0xA6ECF8", VA = "0xA6ECF8")]
	[ContextMenu("SpawnDrawing")]
	public void SpawnDrawing()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xA6ED00", Offset = "0xA6ED00", VA = "0xA6ED00")]
	public void SpawnDrawing(Texture2D drawingTexture)
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xA6EF38", Offset = "0xA6EF38", VA = "0xA6EF38")]
	public SpawnResetti()
	{
	}
}
[Token(Token = "0x2000376")]
public class SphericalExplosions : MonoBehaviour
{
	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float totalRange;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deadzone;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayMin;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayMax;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool changeScale;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleMin;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleMax;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] prefabs;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float scale;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject go;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 position;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startTime;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject prefabPicked;

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xA6F3B0", Offset = "0xA6F3B0", VA = "0xA6F3B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xA6F3E8", Offset = "0xA6F3E8", VA = "0xA6F3E8")]
	[ContextMenu("StartExplosions")]
	public void StartExplosions()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xA6F410", Offset = "0xA6F410", VA = "0xA6F410")]
	private void Explode()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xA6F640", Offset = "0xA6F640", VA = "0xA6F640")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xA6F694", Offset = "0xA6F694", VA = "0xA6F694")]
	public SphericalExplosions()
	{
	}
}
[Token(Token = "0x2000377")]
public class SprayCanTool : MonoBehaviour
{
	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollisionBase collisionBase;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<Rigidbody, MaterialManager> rbToMaterialManagerDict;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MaterialManager> materialManagersInRange;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialManager matManager;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable myGrabbable;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color sprayColor;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sprayFXVisual;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider myCollider;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSpraying;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem sprayFX;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MaterialManager myMaterialManager;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool debugOn;

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xA6F6CC", Offset = "0xA6F6CC", VA = "0xA6F6CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xA6F79C", Offset = "0xA6F79C", VA = "0xA6F79C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xA6F7F0", Offset = "0xA6F7F0", VA = "0xA6F7F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xA6F87C", Offset = "0xA6F87C", VA = "0xA6F87C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xA6F908", Offset = "0xA6F908", VA = "0xA6F908")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xA6F774", Offset = "0xA6F774", VA = "0xA6F774")]
	private void SetSpraying(bool isOn)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xA6F7A0", Offset = "0xA6F7A0", VA = "0xA6F7A0")]
	[ContextMenu("RandomColor")]
	public void SetRandomColor()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xA6FB5C", Offset = "0xA6FB5C", VA = "0xA6FB5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xA6FE94", Offset = "0xA6FE94", VA = "0xA6FE94")]
	public SprayCanTool()
	{
	}
}
[Token(Token = "0x2000378")]
public class StabilizerCore : MonoBehaviour
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xA6FF6C", Offset = "0xA6FF6C", VA = "0xA6FF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xA6FF90", Offset = "0xA6FF90", VA = "0xA6FF90")]
	private void Update()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xA6FFF0", Offset = "0xA6FFF0", VA = "0xA6FFF0")]
	public StabilizerCore()
	{
	}
}
[Token(Token = "0x2000379")]
public class CollisionKeeper : MonoBehaviour
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMother;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CollisionKeeper> myCollisionRBs;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CollisionKeeper> myConnectionsChecked;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CollisionKeeper colKeeper;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCollision;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xA6FFF8", Offset = "0xA6FFF8", VA = "0xA6FFF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xA700F8", Offset = "0xA700F8", VA = "0xA700F8")]
	private void MotherCheck()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xA702F0", Offset = "0xA702F0", VA = "0xA702F0")]
	public bool WasChecked(CollisionKeeper _reporter)
	{
		return default(bool);
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xA70410", Offset = "0xA70410", VA = "0xA70410")]
	public void ConnectionCheck(CollisionKeeper _original)
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xA705CC", Offset = "0xA705CC", VA = "0xA705CC")]
	private void CleanUp()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xA70108", Offset = "0xA70108", VA = "0xA70108")]
	private void SourceCheckConnections()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xA706C4", Offset = "0xA706C4", VA = "0xA706C4")]
	private void OnCollisionEnterCheck(Rigidbody colRB)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xA70868", Offset = "0xA70868", VA = "0xA70868")]
	private void CollisionExitCheck(Rigidbody colRB)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xA70974", Offset = "0xA70974", VA = "0xA70974")]
	public void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xA70C50", Offset = "0xA70C50", VA = "0xA70C50")]
	public void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xA70E30", Offset = "0xA70E30", VA = "0xA70E30")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xA71140", Offset = "0xA71140", VA = "0xA71140")]
	public void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xA71354", Offset = "0xA71354", VA = "0xA71354")]
	public CollisionKeeper()
	{
	}
}
[Token(Token = "0x200037A")]
public class GlueConnections : MonoBehaviour
{
	[Token(Token = "0x200037B")]
	public delegate void OnChangeDelegate(GlueConnections which, bool wasAdded);

	[Token(Token = "0x200037C")]
	public delegate void OnChainChangeDelegate(List<GlueConnections> connectionChain);

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isMother;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GlueConnections> myConnections;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GlueConnections> myConnectionsChecked;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GlueConnections> wasConnected;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Glue myGlue;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable myGrabbable;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int theLength;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GlueConnections myMother;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GlueConnections> mothers;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int connectionsHash;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float combinedMass;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float combinedDrag;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Entity entity;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool delegateAdded;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int lastCheck;

	[Token(Token = "0x14000057")]
	public static event OnChangeDelegate OnConnectionChange
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xA71468", Offset = "0xA71468", VA = "0xA71468")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xA71520", Offset = "0xA71520", VA = "0xA71520")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000058")]
	public event OnChainChangeDelegate OnChainChange
	{
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xA715D8", Offset = "0xA715D8", VA = "0xA715D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xA71674", Offset = "0xA71674", VA = "0xA71674")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xA71710", Offset = "0xA71710", VA = "0xA71710", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xA71950", Offset = "0xA71950", VA = "0xA71950", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xA71A3C", Offset = "0xA71A3C", VA = "0xA71A3C", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xA71AF4", Offset = "0xA71AF4", VA = "0xA71AF4", Slot = "7")]
	public virtual void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xA71AF8", Offset = "0xA71AF8", VA = "0xA71AF8", Slot = "8")]
	public virtual void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xA71AFC", Offset = "0xA71AFC", VA = "0xA71AFC", Slot = "9")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xA71854", Offset = "0xA71854", VA = "0xA71854")]
	public void ActivateMother(bool _isMother)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xA71C14", Offset = "0xA71C14", VA = "0xA71C14")]
	public void AddConnection(GlueConnections _connection)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xA71ECC", Offset = "0xA71ECC", VA = "0xA71ECC")]
	public void RemoveConnection(GlueConnections _connection)
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xA71FCC", Offset = "0xA71FCC", VA = "0xA71FCC", Slot = "10")]
	public virtual void ChainChange(GlueConnections originator, bool wasAdded)
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xA722B8", Offset = "0xA722B8", VA = "0xA722B8", Slot = "11")]
	public virtual void DoChainChangeCallback()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xA722D8", Offset = "0xA722D8", VA = "0xA722D8")]
	public void ClearAllConnections()
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xA72350", Offset = "0xA72350", VA = "0xA72350")]
	public bool WasChecked(GlueConnections _reporter)
	{
		return default(bool);
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xA72580", Offset = "0xA72580", VA = "0xA72580")]
	public void ConnectionCheck(GlueConnections _original)
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xA71D68", Offset = "0xA71D68", VA = "0xA71D68")]
	public void SourceCheckConnections([Optional] GlueConnections _originator, bool wasAdded = true)
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xA72674", Offset = "0xA72674", VA = "0xA72674")]
	public GlueConnections()
	{
	}
}
[Token(Token = "0x200037D")]
public class ShipSpawnEmpty : MonoBehaviour
{
	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnFreeTimer;

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xA72988", Offset = "0xA72988", VA = "0xA72988")]
	private void Start()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xA7298C", Offset = "0xA7298C", VA = "0xA7298C")]
	public bool SpanwIsFree()
	{
		return default(bool);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xA729A4", Offset = "0xA729A4", VA = "0xA729A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xA729D0", Offset = "0xA729D0", VA = "0xA729D0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xA729FC", Offset = "0xA729FC", VA = "0xA729FC")]
	public ShipSpawnEmpty()
	{
	}
}
[Token(Token = "0x200037E")]
public class StayInPlace : MonoBehaviour
{
	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useTarget;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float force;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distFactor;

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xA72A04", Offset = "0xA72A04", VA = "0xA72A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xA72AA0", Offset = "0xA72AA0", VA = "0xA72AA0")]
	public void SetStartPosition(Vector3 _pos)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xA72AAC", Offset = "0xA72AAC", VA = "0xA72AAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xA72C34", Offset = "0xA72C34", VA = "0xA72C34")]
	public StayInPlace()
	{
	}
}
[Token(Token = "0x200037F")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000149")]
	public static bool Initialized
	{
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xA72C44", Offset = "0xA72C44", VA = "0xA72C44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xA72C4C", Offset = "0xA72C4C", VA = "0xA72C4C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000380")]
public class StoryShowHide : MonoBehaviour
{
	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showIfDone;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showIfActive;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showIfLocked;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool ignoreIfReplay;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetObject;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Story myStory;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuDirector_base.StoryState storyState;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("use start or awake")]
	public bool checkStatusOnStart;

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xA72C54", Offset = "0xA72C54", VA = "0xA72C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xA73000", Offset = "0xA73000", VA = "0xA73000")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xA72C64", Offset = "0xA72C64", VA = "0xA72C64")]
	private void CheckStatus()
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xA73010", Offset = "0xA73010", VA = "0xA73010")]
	public StoryShowHide()
	{
	}
}
[Token(Token = "0x2000381")]
public class DoNoDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xA73028", Offset = "0xA73028", VA = "0xA73028")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xA73094", Offset = "0xA73094", VA = "0xA73094")]
	public DoNoDestroyOnLoad()
	{
	}
}
[Token(Token = "0x2000382")]
public class Haptics : MonoBehaviour
{
	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionReference action;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _amplitude;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _duration;

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xA7309C", Offset = "0xA7309C", VA = "0xA7309C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xA73158", Offset = "0xA73158", VA = "0xA73158")]
	private void Rumble(UnityEngine.InputSystem.InputDevice device)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xA73210", Offset = "0xA73210", VA = "0xA73210")]
	private void RumbleRight()
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xA732B0", Offset = "0xA732B0", VA = "0xA732B0")]
	private void RumbleLeft()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xA73350", Offset = "0xA73350", VA = "0xA73350")]
	public Haptics()
	{
	}
}
[Token(Token = "0x2000383")]
public class LeverLoadAction : MonoBehaviour
{
	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical Lever;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavigationOptions Action;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level customLevel;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Story customStory;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultDelay;

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xA73400", Offset = "0xA73400", VA = "0xA73400")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xA734B0", Offset = "0xA734B0", VA = "0xA734B0")]
	private void DoAction()
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xA73600", Offset = "0xA73600", VA = "0xA73600")]
	public void LeverAction()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xA73650", Offset = "0xA73650", VA = "0xA73650")]
	public LeverLoadAction()
	{
	}
}
[Token(Token = "0x2000384")]
public enum NavigationOptions
{
	[Token(Token = "0x40015C8")]
	Next,
	[Token(Token = "0x40015C9")]
	Reset,
	[Token(Token = "0x40015CA")]
	Menu,
	[Token(Token = "0x40015CB")]
	Start,
	[Token(Token = "0x40015CC")]
	Previous,
	[Token(Token = "0x40015CD")]
	Custom,
	[Token(Token = "0x40015CE")]
	Options,
	[Token(Token = "0x40015CF")]
	BackFromOptions,
	[Token(Token = "0x40015D0")]
	startStory,
	[Token(Token = "0x40015D1")]
	MainMenu
}
[Token(Token = "0x2000385")]
public class LeverOptionsAction : MonoBehaviour
{
	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical Lever;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicalSlider Slider;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OptionsActions Action;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float defaultDelay;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Languages language;

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xA73664", Offset = "0xA73664", VA = "0xA73664")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xA73770", Offset = "0xA73770", VA = "0xA73770")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xA73774", Offset = "0xA73774", VA = "0xA73774")]
	private void InitValues()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xA73BF0", Offset = "0xA73BF0", VA = "0xA73BF0")]
	public void DoAction(bool _which)
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xA73DC0", Offset = "0xA73DC0", VA = "0xA73DC0")]
	public void DoLanguageAction()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xA73DCC", Offset = "0xA73DCC", VA = "0xA73DCC")]
	public void DoIntAction(int _which)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xA73DD0", Offset = "0xA73DD0", VA = "0xA73DD0")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xA74530", Offset = "0xA74530", VA = "0xA74530")]
	public void LeverAction()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xA74580", Offset = "0xA74580", VA = "0xA74580")]
	public LeverOptionsAction()
	{
	}
}
[Token(Token = "0x2000386")]
public enum OptionsActions
{
	[Token(Token = "0x40015D8")]
	TentacleScaleAdjust = 0,
	[Token(Token = "0x40015D9")]
	QualityShadows = 2,
	[Token(Token = "0x40015DA")]
	QualityAO = 3,
	[Token(Token = "0x40015DB")]
	UnlockAll = 4,
	[Token(Token = "0x40015DC")]
	SizeAdjust = 5,
	[Token(Token = "0x40015DD")]
	Music = 6,
	[Token(Token = "0x40015DE")]
	SFX = 7,
	[Token(Token = "0x40015DF")]
	Ambience = 8,
	[Token(Token = "0x40015E0")]
	Language = 9,
	[Token(Token = "0x40015E1")]
	Typewriter = 10,
	[Token(Token = "0x40015E2")]
	TalkSpeed = 11,
	[Token(Token = "0x40015E3")]
	QualityShadowsLevel = 12,
	[Token(Token = "0x40015E4")]
	AA = 13,
	[Token(Token = "0x40015E5")]
	OverSampling = 14,
	[Token(Token = "0x40015E6")]
	VerticalMove = 15,
	[Token(Token = "0x40015E7")]
	SmoothTurning = 16,
	[Token(Token = "0x40015E8")]
	SmoothTurningSpeed = 17,
	[Token(Token = "0x40015E9")]
	Vignetting = 18,
	[Token(Token = "0x40015EA")]
	VignettingStrength = 19,
	[Token(Token = "0x40015EB")]
	SaveSlot = 20
}
[Token(Token = "0x2000387")]
public class NavigationManager : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	public enum NavType
	{
		[Token(Token = "0x40015FE")]
		menu,
		[Token(Token = "0x40015FF")]
		levelEnd,
		[Token(Token = "0x4001600")]
		debug,
		[Token(Token = "0x4001601")]
		storyDone
	}

	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private sealed class <LevelCompleteBalloonSpawnCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavigationManager <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xA75518", Offset = "0xA75518", VA = "0xA75518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xA75560", Offset = "0xA75560", VA = "0xA75560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xA74BA0", Offset = "0xA74BA0", VA = "0xA74BA0")]
		[DebuggerHidden]
		public <LevelCompleteBalloonSpawnCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xA75280", Offset = "0xA75280", VA = "0xA75280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xA75284", Offset = "0xA75284", VA = "0xA75284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xA75520", Offset = "0xA75520", VA = "0xA75520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool menuDown;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 offset;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavType navType;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextBalloonPrefab;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nextBalloonOffset;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject optionsVehiclePrefab;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float optionsVehicleOffset;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SwitchButtonPhysical> buttons;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float optionsCooldown;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject resetHouse;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool blockOptions;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float timeInLevel;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NavigationManager _instance;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool balloonSpawned;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject navBalloon;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject optionsZeppelin;

	[Token(Token = "0x1700014A")]
	public static NavigationManager Instance
	{
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xA74594", Offset = "0xA74594", VA = "0xA74594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xA74720", Offset = "0xA74720", VA = "0xA74720")]
	private void Start()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xA74764", Offset = "0xA74764", VA = "0xA74764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xA749A8", Offset = "0xA749A8", VA = "0xA749A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xA74ADC", Offset = "0xA74ADC", VA = "0xA74ADC")]
	public void LevelCompleteBalloonSpawn()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xA74B2C", Offset = "0xA74B2C", VA = "0xA74B2C")]
	[IteratorStateMachine(typeof(<LevelCompleteBalloonSpawnCoroutine>d__22))]
	[ContextMenu("SpawnBallon")]
	private IEnumerator LevelCompleteBalloonSpawnCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xA74BC8", Offset = "0xA74BC8", VA = "0xA74BC8")]
	private void SpawnPoofEffects(Vector3 pos, float scale = 1f)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xA74EA0", Offset = "0xA74EA0", VA = "0xA74EA0")]
	public void MenuDown(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xA74F44", Offset = "0xA74F44", VA = "0xA74F44")]
	public void DeleteOptionsZep(bool doFX = true)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xA75044", Offset = "0xA75044", VA = "0xA75044")]
	[ContextMenu("SpawnZeppelin")]
	private void SpawnOptionsZep()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xA75254", Offset = "0xA75254", VA = "0xA75254")]
	public NavigationManager()
	{
	}
}
[Token(Token = "0x200038A")]
public class NextLeverConstruction : MonoBehaviour
{
	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xA75568", Offset = "0xA75568", VA = "0xA75568")]
	public void LeverActivated()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xA755D0", Offset = "0xA755D0", VA = "0xA755D0")]
	public NextLeverConstruction()
	{
	}
}
[Token(Token = "0x200038B")]
public class MaterialProvider : MonoBehaviour
{
	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MaterialProvider _instance;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] people;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosion;

	[Token(Token = "0x1700014D")]
	public static MaterialProvider Instance
	{
		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xA755D8", Offset = "0xA755D8", VA = "0xA755D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xA75764", Offset = "0xA75764", VA = "0xA75764")]
	public MaterialProvider()
	{
	}
}
[Token(Token = "0x200038C")]
[CreateAssetMenu(fileName = "Palette", menuName = "Palette", order = 1)]
public class Palette : ScriptableObject
{
	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] Colors;

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xA7576C", Offset = "0xA7576C", VA = "0xA7576C")]
	public Palette()
	{
	}
}
[Token(Token = "0x200038D")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x200038E")]
	public delegate void GamePausedDelegate(bool isPaused);

	[Token(Token = "0x200038F")]
	public delegate void HeadsetRemovedDelegate();

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gameActive;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pauseGameInEditor;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool isPaused;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool ignorePause;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool appFocus;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool appPause;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PauseManager _instance;

	[Token(Token = "0x1700014E")]
	public static PauseManager Instance
	{
		[Token(Token = "0x6001605")]
		[Address(RVA = "0xA75A5C", Offset = "0xA75A5C", VA = "0xA75A5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000059")]
	public static event GamePausedDelegate OnGamePaused
	{
		[Token(Token = "0x6001601")]
		[Address(RVA = "0xA75774", Offset = "0xA75774", VA = "0xA75774")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001602")]
		[Address(RVA = "0xA7582C", Offset = "0xA7582C", VA = "0xA7582C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005A")]
	public static event HeadsetRemovedDelegate OnHeadsetRemoved
	{
		[Token(Token = "0x6001603")]
		[Address(RVA = "0xA758E4", Offset = "0xA758E4", VA = "0xA758E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001604")]
		[Address(RVA = "0xA759A0", Offset = "0xA759A0", VA = "0xA759A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xA75BD8", Offset = "0xA75BD8", VA = "0xA75BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xA75D84", Offset = "0xA75D84", VA = "0xA75D84")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xA75D90", Offset = "0xA75D90", VA = "0xA75D90")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xA75D9C", Offset = "0xA75D9C", VA = "0xA75D9C")]
	public bool GameActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xA75DA4", Offset = "0xA75DA4", VA = "0xA75DA4")]
	private void PauseGame(bool paused = true)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xA75C3C", Offset = "0xA75C3C", VA = "0xA75C3C")]
	private void PauseCheck()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xA75ED4", Offset = "0xA75ED4", VA = "0xA75ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xA75FBC", Offset = "0xA75FBC", VA = "0xA75FBC")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x2000390")]
public interface IOptions
{
	[Token(Token = "0x1700014F")]
	bool LimitsEnabled
	{
		[Token(Token = "0x6001616")]
		get;
		[Token(Token = "0x6001617")]
		set;
	}

	[Token(Token = "0x17000150")]
	float TentacleScale
	{
		[Token(Token = "0x6001618")]
		get;
		[Token(Token = "0x6001619")]
		set;
	}

	[Token(Token = "0x17000151")]
	float CameraHeight
	{
		[Token(Token = "0x600161A")]
		get;
		[Token(Token = "0x600161B")]
		set;
	}

	[Token(Token = "0x17000152")]
	bool VerticalMove
	{
		[Token(Token = "0x600161C")]
		get;
		[Token(Token = "0x600161D")]
		set;
	}

	[Token(Token = "0x17000153")]
	float MusicVolume
	{
		[Token(Token = "0x600161E")]
		get;
		[Token(Token = "0x600161F")]
		set;
	}

	[Token(Token = "0x17000154")]
	float SFXVolume
	{
		[Token(Token = "0x6001620")]
		get;
		[Token(Token = "0x6001621")]
		set;
	}

	[Token(Token = "0x17000155")]
	float AmbienceVolume
	{
		[Token(Token = "0x6001622")]
		get;
		[Token(Token = "0x6001623")]
		set;
	}

	[Token(Token = "0x17000156")]
	float ShadowsQuality
	{
		[Token(Token = "0x6001624")]
		get;
		[Token(Token = "0x6001625")]
		set;
	}

	[Token(Token = "0x17000157")]
	float AA
	{
		[Token(Token = "0x6001626")]
		get;
		[Token(Token = "0x6001627")]
		set;
	}

	[Token(Token = "0x17000158")]
	float OverSampling
	{
		[Token(Token = "0x6001628")]
		get;
		[Token(Token = "0x6001629")]
		set;
	}

	[Token(Token = "0x17000159")]
	string Language
	{
		[Token(Token = "0x600162A")]
		get;
		[Token(Token = "0x600162B")]
		set;
	}

	[Token(Token = "0x1700015A")]
	string Version
	{
		[Token(Token = "0x600162C")]
		get;
		[Token(Token = "0x600162D")]
		set;
	}

	[Token(Token = "0x1700015B")]
	bool PerformanceChecked
	{
		[Token(Token = "0x600162E")]
		get;
		[Token(Token = "0x600162F")]
		set;
	}

	[Token(Token = "0x1700015C")]
	bool FirstRun
	{
		[Token(Token = "0x6001630")]
		get;
		[Token(Token = "0x6001631")]
		set;
	}

	[Token(Token = "0x1700015D")]
	bool RollLock
	{
		[Token(Token = "0x6001632")]
		get;
		[Token(Token = "0x6001633")]
		set;
	}

	[Token(Token = "0x1700015E")]
	bool PitchLock
	{
		[Token(Token = "0x6001634")]
		get;
		[Token(Token = "0x6001635")]
		set;
	}

	[Token(Token = "0x1700015F")]
	float RotationFollowSpeed
	{
		[Token(Token = "0x6001636")]
		get;
		[Token(Token = "0x6001637")]
		set;
	}

	[Token(Token = "0x17000160")]
	float PositionFollowSpeed
	{
		[Token(Token = "0x6001638")]
		get;
		[Token(Token = "0x6001639")]
		set;
	}

	[Token(Token = "0x17000161")]
	float SmoothCamFOV
	{
		[Token(Token = "0x600163A")]
		get;
		[Token(Token = "0x600163B")]
		set;
	}

	[Token(Token = "0x17000162")]
	float FlyCamSpeed
	{
		[Token(Token = "0x600163C")]
		get;
		[Token(Token = "0x600163D")]
		set;
	}

	[Token(Token = "0x17000163")]
	float FlyCamYawSpeed
	{
		[Token(Token = "0x600163E")]
		get;
		[Token(Token = "0x600163F")]
		set;
	}

	[Token(Token = "0x17000164")]
	float FlyCamPitchSpeed
	{
		[Token(Token = "0x6001640")]
		get;
		[Token(Token = "0x6001641")]
		set;
	}

	[Token(Token = "0x17000165")]
	float FlyCamRiseSpeed
	{
		[Token(Token = "0x6001642")]
		get;
		[Token(Token = "0x6001643")]
		set;
	}

	[Token(Token = "0x17000166")]
	bool TextRevealAnimation
	{
		[Token(Token = "0x6001644")]
		get;
		[Token(Token = "0x6001645")]
		set;
	}

	[Token(Token = "0x17000167")]
	float TalkSpeed
	{
		[Token(Token = "0x6001646")]
		get;
		[Token(Token = "0x6001647")]
		set;
	}

	[Token(Token = "0x17000168")]
	float SmoothTurningSpeed
	{
		[Token(Token = "0x6001648")]
		get;
		[Token(Token = "0x6001649")]
		set;
	}

	[Token(Token = "0x17000169")]
	bool SmoothTurning
	{
		[Token(Token = "0x600164A")]
		get;
		[Token(Token = "0x600164B")]
		set;
	}

	[Token(Token = "0x1700016A")]
	bool Vignetting
	{
		[Token(Token = "0x600164C")]
		get;
		[Token(Token = "0x600164D")]
		set;
	}

	[Token(Token = "0x1700016B")]
	float VignettingStrength
	{
		[Token(Token = "0x600164E")]
		get;
		[Token(Token = "0x600164F")]
		set;
	}

	[Token(Token = "0x1700016C")]
	int SaveSlot
	{
		[Token(Token = "0x6001650")]
		get;
		[Token(Token = "0x6001651")]
		set;
	}

	[Token(Token = "0x1700016D")]
	float[] Percentages
	{
		[Token(Token = "0x6001652")]
		get;
		[Token(Token = "0x6001653")]
		set;
	}
}
[Serializable]
[Token(Token = "0x2000391")]
public class Options
{
	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool LimitsEnabled;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TentacleScale;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CameraHeight;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool VerticalMove;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MusicVolume;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SFXVolume;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AmbienceVolume;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ShadowsQuality;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float AA;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OverSampling;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Language;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Version;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool SmoothTurning;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float SmoothTurningSpeed;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Vignetting;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VignettingStrength;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool PerformanceChecked;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool FirstRun;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool RollLock;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool PitchLock;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RotationFollowSpeed;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float PositionFollowSpeed;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SmoothCamFOV;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FlyCamSpeed;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FlyCamYawSpeed;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float FlyCamPitchSpeed;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float FlyCamRiseSpeed;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool TextRevealAnimation;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float TalkSpeed;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int SaveSlot;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float[] Percentages;

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xA76208", Offset = "0xA76208", VA = "0xA76208")]
	public Options()
	{
	}
}
[Token(Token = "0x2000392")]
public class PersistentOptionsManager : IOptions
{
	[Token(Token = "0x2000393")]
	public delegate void ChangeEventHandler(object sender);

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PersistentOptionsManager instance;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Options state;

	[Token(Token = "0x1700016E")]
	public static PersistentOptionsManager Instance
	{
		[Token(Token = "0x6001655")]
		[Address(RVA = "0xA73A30", Offset = "0xA73A30", VA = "0xA73A30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016F")]
	public bool LimitsEnabled
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xA766F0", Offset = "0xA766F0", VA = "0xA766F0", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xA7670C", Offset = "0xA7670C", VA = "0xA7670C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public float TentacleScale
	{
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xA73AF4", Offset = "0xA73AF4", VA = "0xA73AF4", Slot = "6")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001660")]
		[Address(RVA = "0xA74430", Offset = "0xA74430", VA = "0xA74430", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float CameraHeight
	{
		[Token(Token = "0x6001661")]
		[Address(RVA = "0xA73B10", Offset = "0xA73B10", VA = "0xA73B10", Slot = "8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001662")]
		[Address(RVA = "0xA740D0", Offset = "0xA740D0", VA = "0xA740D0", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public bool VerticalMove
	{
		[Token(Token = "0x6001663")]
		[Address(RVA = "0xA73B2C", Offset = "0xA73B2C", VA = "0xA73B2C", Slot = "10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001664")]
		[Address(RVA = "0xA73D60", Offset = "0xA73D60", VA = "0xA73D60", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public float MusicVolume
	{
		[Token(Token = "0x6001665")]
		[Address(RVA = "0xA7672C", Offset = "0xA7672C", VA = "0xA7672C", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001666")]
		[Address(RVA = "0xA76748", Offset = "0xA76748", VA = "0xA76748", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public float SFXVolume
	{
		[Token(Token = "0x6001667")]
		[Address(RVA = "0xA76764", Offset = "0xA76764", VA = "0xA76764", Slot = "14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001668")]
		[Address(RVA = "0xA76780", Offset = "0xA76780", VA = "0xA76780", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public float AmbienceVolume
	{
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xA7679C", Offset = "0xA7679C", VA = "0xA7679C", Slot = "16")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600166A")]
		[Address(RVA = "0xA767B8", Offset = "0xA767B8", VA = "0xA767B8", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public float ShadowsQuality
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xA767D4", Offset = "0xA767D4", VA = "0xA767D4", Slot = "18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600166C")]
		[Address(RVA = "0xA767F0", Offset = "0xA767F0", VA = "0xA767F0", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public float AA
	{
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xA7680C", Offset = "0xA7680C", VA = "0xA7680C", Slot = "20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xA76828", Offset = "0xA76828", VA = "0xA76828", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public float OverSampling
	{
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xA73ABC", Offset = "0xA73ABC", VA = "0xA73ABC", Slot = "22")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001670")]
		[Address(RVA = "0xA76844", Offset = "0xA76844", VA = "0xA76844", Slot = "23")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public string Language
	{
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xA76860", Offset = "0xA76860", VA = "0xA76860", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001672")]
		[Address(RVA = "0xA7687C", Offset = "0xA7687C", VA = "0xA7687C", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public string Version
	{
		[Token(Token = "0x6001673")]
		[Address(RVA = "0xA768A4", Offset = "0xA768A4", VA = "0xA768A4", Slot = "26")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001674")]
		[Address(RVA = "0xA768C0", Offset = "0xA768C0", VA = "0xA768C0", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public bool PerformanceChecked
	{
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xA768E8", Offset = "0xA768E8", VA = "0xA768E8", Slot = "28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xA76904", Offset = "0xA76904", VA = "0xA76904", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public bool FirstRun
	{
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xA76924", Offset = "0xA76924", VA = "0xA76924", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xA76940", Offset = "0xA76940", VA = "0xA76940", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public bool RollLock
	{
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xA76960", Offset = "0xA76960", VA = "0xA76960", Slot = "32")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xA7697C", Offset = "0xA7697C", VA = "0xA7697C", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public bool PitchLock
	{
		[Token(Token = "0x600167B")]
		[Address(RVA = "0xA7699C", Offset = "0xA7699C", VA = "0xA7699C", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600167C")]
		[Address(RVA = "0xA769B8", Offset = "0xA769B8", VA = "0xA769B8", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public float RotationFollowSpeed
	{
		[Token(Token = "0x600167D")]
		[Address(RVA = "0xA769D8", Offset = "0xA769D8", VA = "0xA769D8", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600167E")]
		[Address(RVA = "0xA769F4", Offset = "0xA769F4", VA = "0xA769F4", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public float PositionFollowSpeed
	{
		[Token(Token = "0x600167F")]
		[Address(RVA = "0xA76A10", Offset = "0xA76A10", VA = "0xA76A10", Slot = "38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001680")]
		[Address(RVA = "0xA76A2C", Offset = "0xA76A2C", VA = "0xA76A2C", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public float SmoothCamFOV
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0xA76A48", Offset = "0xA76A48", VA = "0xA76A48", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001682")]
		[Address(RVA = "0xA76A64", Offset = "0xA76A64", VA = "0xA76A64", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public float FlyCamSpeed
	{
		[Token(Token = "0x6001683")]
		[Address(RVA = "0xA76A80", Offset = "0xA76A80", VA = "0xA76A80", Slot = "42")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001684")]
		[Address(RVA = "0xA76A9C", Offset = "0xA76A9C", VA = "0xA76A9C", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public float FlyCamYawSpeed
	{
		[Token(Token = "0x6001685")]
		[Address(RVA = "0xA76AB8", Offset = "0xA76AB8", VA = "0xA76AB8", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001686")]
		[Address(RVA = "0xA76AD4", Offset = "0xA76AD4", VA = "0xA76AD4", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public float FlyCamPitchSpeed
	{
		[Token(Token = "0x6001687")]
		[Address(RVA = "0xA76AF0", Offset = "0xA76AF0", VA = "0xA76AF0", Slot = "46")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xA76B0C", Offset = "0xA76B0C", VA = "0xA76B0C", Slot = "47")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public float FlyCamRiseSpeed
	{
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xA76B28", Offset = "0xA76B28", VA = "0xA76B28", Slot = "48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xA76B44", Offset = "0xA76B44", VA = "0xA76B44", Slot = "49")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public bool TextRevealAnimation
	{
		[Token(Token = "0x600168B")]
		[Address(RVA = "0xA73AD8", Offset = "0xA73AD8", VA = "0xA73AD8", Slot = "50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xA76B60", Offset = "0xA76B60", VA = "0xA76B60", Slot = "51")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public float TalkSpeed
	{
		[Token(Token = "0x600168D")]
		[Address(RVA = "0xA73BD4", Offset = "0xA73BD4", VA = "0xA73BD4", Slot = "52")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600168E")]
		[Address(RVA = "0xA76B80", Offset = "0xA76B80", VA = "0xA76B80", Slot = "53")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public bool SmoothTurning
	{
		[Token(Token = "0x600168F")]
		[Address(RVA = "0xA73B64", Offset = "0xA73B64", VA = "0xA73B64", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xA73D80", Offset = "0xA73D80", VA = "0xA73D80", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public float SmoothTurningSpeed
	{
		[Token(Token = "0x6001691")]
		[Address(RVA = "0xA73B48", Offset = "0xA73B48", VA = "0xA73B48", Slot = "54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA743F8", Offset = "0xA743F8", VA = "0xA743F8", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public bool Vignetting
	{
		[Token(Token = "0x6001693")]
		[Address(RVA = "0xA73B80", Offset = "0xA73B80", VA = "0xA73B80", Slot = "58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001694")]
		[Address(RVA = "0xA73DA0", Offset = "0xA73DA0", VA = "0xA73DA0", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public float VignettingStrength
	{
		[Token(Token = "0x6001695")]
		[Address(RVA = "0xA73B9C", Offset = "0xA73B9C", VA = "0xA73B9C", Slot = "60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001696")]
		[Address(RVA = "0xA74414", Offset = "0xA74414", VA = "0xA74414", Slot = "61")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public int SaveSlot
	{
		[Token(Token = "0x6001697")]
		[Address(RVA = "0xA73BB8", Offset = "0xA73BB8", VA = "0xA73BB8", Slot = "62")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001698")]
		[Address(RVA = "0xA76B9C", Offset = "0xA76B9C", VA = "0xA76B9C", Slot = "63")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public float[] Percentages
	{
		[Token(Token = "0x6001699")]
		[Address(RVA = "0xA76BB8", Offset = "0xA76BB8", VA = "0xA76BB8", Slot = "64")]
		get
		{
			return null;
		}
		[Token(Token = "0x600169A")]
		[Address(RVA = "0xA76BD4", Offset = "0xA76BD4", VA = "0xA76BD4", Slot = "65")]
		set
		{
		}
	}

	[Token(Token = "0x1400005B")]
	public event ChangeEventHandler OnChange
	{
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xA763AC", Offset = "0xA763AC", VA = "0xA763AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001657")]
		[Address(RVA = "0xA76448", Offset = "0xA76448", VA = "0xA76448")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0xA76314", Offset = "0xA76314", VA = "0xA76314")]
	private PersistentOptionsManager()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0xA765AC", Offset = "0xA765AC", VA = "0xA765AC")]
	private void AnnounceChange()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0xA765E0", Offset = "0xA765E0", VA = "0xA765E0")]
	private void Save()
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0xA764E4", Offset = "0xA764E4", VA = "0xA764E4")]
	private string GetOptionsFilePath()
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0xA76650", Offset = "0xA76650", VA = "0xA76650")]
	[ContextMenu("DeleteAndReset")]
	public void DeleteAndReset()
	{
	}
}
[Token(Token = "0x2000394")]
public class PlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000395")]
	public enum deviceType
	{
		[Token(Token = "0x4001647")]
		none,
		[Token(Token = "0x4001648")]
		htcvive,
		[Token(Token = "0x4001649")]
		htcvivePro,
		[Token(Token = "0x400164A")]
		oculusRift,
		[Token(Token = "0x400164B")]
		oculusRiftS,
		[Token(Token = "0x400164C")]
		psvr2,
		[Token(Token = "0x400164D")]
		quest,
		[Token(Token = "0x400164E")]
		valveIndex,
		[Token(Token = "0x400164F")]
		quest2,
		[Token(Token = "0x4001650")]
		cosmos,
		[Token(Token = "0x4001651")]
		PCVR,
		[Token(Token = "0x4001652")]
		HPReverb,
		[Token(Token = "0x4001653")]
		pico3
	}

	[Token(Token = "0x2000396")]
	public enum deviceController
	{
		[Token(Token = "0x4001655")]
		none,
		[Token(Token = "0x4001656")]
		viveWand,
		[Token(Token = "0x4001657")]
		oculusTouchLegacy,
		[Token(Token = "0x4001658")]
		oculusTouchNew,
		[Token(Token = "0x4001659")]
		indexKnuckles,
		[Token(Token = "0x400165A")]
		cosmos,
		[Token(Token = "0x400165B")]
		oculusTouchWhite,
		[Token(Token = "0x400165C")]
		HPReverb,
		[Token(Token = "0x400165D")]
		picoTouchWhite,
		[Token(Token = "0x400165E")]
		psvr2
	}

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static deviceType device;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static deviceType realDevice;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool IsQuestPlatform;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static deviceController controllers;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float FixedTimeFactor;

	[Token(Token = "0x4001639")]
	public const float FixedTimeFactor90 = 90.008995f;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private deviceType debugDevice;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private deviceController debugController;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static deviceController DebugController;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static deviceType DebugDevice;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string foundXRDeviceName;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static PlatformManager _instance;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool VRInputFocus;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static readonly bool IsSteamVR;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public static readonly bool IsOculus;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string PlatformFilePrefix;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly bool IsPSVR2;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public static readonly bool IsPico;

	[Token(Token = "0x1700018E")]
	public static PlatformManager Instance
	{
		[Token(Token = "0x600169F")]
		[Address(RVA = "0xA76D4C", Offset = "0xA76D4C", VA = "0xA76D4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xA76F04", Offset = "0xA76F04", VA = "0xA76F04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xA770DC", Offset = "0xA770DC", VA = "0xA770DC")]
	private void CheckDevices()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xA77840", Offset = "0xA77840", VA = "0xA77840")]
	public static void DebugSetup()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xA77090", Offset = "0xA77090", VA = "0xA77090")]
	public static string LoadedXRDevice()
	{
		return null;
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xA75ECC", Offset = "0xA75ECC", VA = "0xA75ECC")]
	public static bool HeadsetConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xA77898", Offset = "0xA77898", VA = "0xA77898")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xA7789C", Offset = "0xA7789C", VA = "0xA7789C")]
	private void OnVRInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xA75E60", Offset = "0xA75E60", VA = "0xA75E60")]
	public static bool HeadsetAndInputFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xA779D4", Offset = "0xA779D4", VA = "0xA779D4")]
	public static void SetLowFixedUpdate(float fixedUpdate = 0.025f)
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xA77A9C", Offset = "0xA77A9C", VA = "0xA77A9C")]
	public static void ChangeFixedUpdate(float increment)
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xA777BC", Offset = "0xA777BC", VA = "0xA777BC")]
	public static void SetDefaultFixedUpdate()
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xA77B28", Offset = "0xA77B28", VA = "0xA77B28")]
	public PlatformManager()
	{
	}
}
[Token(Token = "0x2000397")]
public class SpawnResources : MonoBehaviour
{
	[Token(Token = "0x2000398")]
	public enum HumanType
	{
		[Token(Token = "0x40016AA")]
		all,
		[Token(Token = "0x40016AB")]
		regular,
		[Token(Token = "0x40016AC")]
		workers,
		[Token(Token = "0x40016AD")]
		astronauts,
		[Token(Token = "0x40016AE")]
		sailors,
		[Token(Token = "0x40016AF")]
		scientists,
		[Token(Token = "0x40016B0")]
		guards,
		[Token(Token = "0x40016B1")]
		police
	}

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnResources _instance;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject starsFXPrefab;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject okFXPrefab;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject conditionOKFXPrefab;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bonusFXPrefab;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject exploFXPrefab;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject carExploFXPrefab;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject quarterExploFXPrefab;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject smallExploBlastComponentFXPrefab;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject smokeFXPrefab;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject fireTinyFXPrefab;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject poofTinyFXPrefab;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject poofMagicTinyFXPrefab;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject poofMagicMediumFXPrefab;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject fallingRubbleFXPrefab;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject cartoonSmokeFXPrefab;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject smokeTipsPrefab;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material burntVehicles;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material damagedVehicles;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material houseMaterial;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject boom;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rocketSuccess;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject validationCamera;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject redHitSmall;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject magnetBurnoutFXPrefab;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject softStarFXPrefab;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject flashFXPrefab;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject successConfetti1;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject labelType;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject debugSphere;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject crystalsEnergySuckIn;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject crystalShockMaxLevel;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject factoryPanel;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject limitBuoy;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject limitBuoyLowPerformance;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject limitLineRenderer;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject limitLineRendererLowPerformance;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject energyConnectFX;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject pipeSpawnerMouth;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject editorReplicator;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material heliCable;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material laserMaxCharge;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material factoryGhost;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject ImpactPoof;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[Header("Human stuff")]
	public GameObject peopleGeneric;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject astronauts;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumanAestheticScriptableObject resettiHuman;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[EventRef]
	[Header("SFX")]
	public string targetDoneSFX;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[EventRef]
	public string levelCompleteSFX;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[EventRef]
	public string bullseyeSFX;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[EventRef]
	public string tentacleMeatSFX;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[EventRef]
	public string tentacleMeatHarderSFX;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[EventRef]
	public string leverSFX;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[EventRef]
	public string leverSnapSFX;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[EventRef]
	public string carExplosion;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[EventRef]
	public string carGlassHit;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[EventRef]
	public string carHit;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[EventRef]
	public string carTouch;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[EventRef]
	public string boosterArm;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[EventRef]
	public string boomImpactSFX;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[EventRef]
	public string wrongGameplay;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[EventRef]
	public string parachuteOpen;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[EventRef]
	public string[] carEngineSFX;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[EventRef]
	public string[] carHornSFX;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Header("Flickering Test")]
	public Material building;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Texture2D nearText4k;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Texture2D nearText8k;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Texture2D nearText;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Texture2D farText;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Texture2D redText;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Texture2D greenText;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public HumanType humanTypes;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public HumanAestheticScriptableObject[] humanTypeList;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public UniqHumansCollection uniqHumansCollections;

	[Token(Token = "0x1700018F")]
	public static SpawnResources Instance
	{
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xA74C90", Offset = "0xA74C90", VA = "0xA74C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xA77BB0", Offset = "0xA77BB0", VA = "0xA77BB0")]
	public void PlaySFX(string soundFX, GameObject attachTo)
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0xA77BC0", Offset = "0xA77BC0", VA = "0xA77BC0")]
	public GameObject SpawnFXFeedback(Vector3 _position, GameObject _fxPrefab, Vector3 _euler, float scale = 0f)
	{
		return null;
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xA74E1C", Offset = "0xA74E1C", VA = "0xA74E1C")]
	public GameObject SpawnFXFeedback(Vector3 _position, GameObject _fxPrefab, float scale = 0f)
	{
		return null;
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xA77CEC", Offset = "0xA77CEC", VA = "0xA77CEC")]
	public GameObject SpawnUniqHuman(HumanType _type)
	{
		return null;
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xA77DE0", Offset = "0xA77DE0", VA = "0xA77DE0")]
	public SpawnResources()
	{
	}
}
[Token(Token = "0x2000399")]
public class VRControllerMapper : MonoBehaviour
{
	[Token(Token = "0x200039A")]
	public enum actionType
	{
		[Token(Token = "0x40016D3")]
		grab,
		[Token(Token = "0x40016D4")]
		unGlue,
		[Token(Token = "0x40016D5")]
		menu,
		[Token(Token = "0x40016D6")]
		move,
		[Token(Token = "0x40016D7")]
		secondButton,
		[Token(Token = "0x40016D8")]
		thumbPress,
		[Token(Token = "0x40016D9")]
		forward,
		[Token(Token = "0x40016DA")]
		backward,
		[Token(Token = "0x40016DB")]
		left,
		[Token(Token = "0x40016DC")]
		right
	}

	[Token(Token = "0x200039B")]
	public delegate void OnGrabDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039C")]
	public delegate void OnGrabUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039D")]
	public delegate void OnMenuDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039E")]
	public delegate void OnMenuUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039F")]
	public delegate void OnUnGlueDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A0")]
	public delegate void OnUnGlueUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A1")]
	public delegate void OnSecondButtonDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A2")]
	public delegate void OnSecondButtonUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A3")]
	public delegate void OnThumbDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A4")]
	public delegate void OnThumbUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A5")]
	public delegate void OnMoveStickDelegate(VRControllerMapper controller, Vector2 direction);

	[Token(Token = "0x20003A6")]
	public delegate void OnForwardDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A7")]
	public delegate void OnBackwardDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A8")]
	public delegate void OnLeftDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A9")]
	public delegate void OnRightDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerID;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SetUpTentacleSystem setUp;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool initialised;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool controllerActive;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRControllerMapperSub myVRControllerMapperSub;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TentacleLogic tentacleLogic;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody velocityRB;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool grabDown;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool unGlueDown;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool menuDown;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool secondButtonDown;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool thumbPress;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool forward;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool backward;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool left;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool right;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 stickDirection;

	[Token(Token = "0x1400005C")]
	public static event OnGrabDownDelegate OnTriggerDown
	{
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xA77DE8", Offset = "0xA77DE8", VA = "0xA77DE8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xA77EA0", Offset = "0xA77EA0", VA = "0xA77EA0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005D")]
	public static event OnGrabUpDelegate OnTriggerUp
	{
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA77F58", Offset = "0xA77F58", VA = "0xA77F58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA78014", Offset = "0xA78014", VA = "0xA78014")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005E")]
	public static event OnMenuDownDelegate OnMenuDown
	{
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xA748EC", Offset = "0xA748EC", VA = "0xA748EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xA74A20", Offset = "0xA74A20", VA = "0xA74A20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005F")]
	public static event OnMenuUpDelegate OnMenuUp
	{
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xA780D0", Offset = "0xA780D0", VA = "0xA780D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xA7818C", Offset = "0xA7818C", VA = "0xA7818C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000060")]
	public static event OnUnGlueDownDelegate OnUnGlueDown
	{
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xA78248", Offset = "0xA78248", VA = "0xA78248")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xA78304", Offset = "0xA78304", VA = "0xA78304")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000061")]
	public static event OnUnGlueUpDelegate OnUnGlueUp
	{
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xA783C0", Offset = "0xA783C0", VA = "0xA783C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xA7847C", Offset = "0xA7847C", VA = "0xA7847C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000062")]
	public static event OnSecondButtonDownDelegate OnSecondButtonDown
	{
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xA78538", Offset = "0xA78538", VA = "0xA78538")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xA785F4", Offset = "0xA785F4", VA = "0xA785F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000063")]
	public static event OnSecondButtonUpDelegate OnSecondButtonUp
	{
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xA786B0", Offset = "0xA786B0", VA = "0xA786B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xA7876C", Offset = "0xA7876C", VA = "0xA7876C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000064")]
	public static event OnThumbDownDelegate OnThumbDown
	{
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA78828", Offset = "0xA78828", VA = "0xA78828")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA788E4", Offset = "0xA788E4", VA = "0xA788E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public static event OnThumbUpDelegate OnThumbUp
	{
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xA789A0", Offset = "0xA789A0", VA = "0xA789A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xA78A5C", Offset = "0xA78A5C", VA = "0xA78A5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000066")]
	public static event OnMoveStickDelegate OnMoveStick
	{
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xA78B18", Offset = "0xA78B18", VA = "0xA78B18")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xA78BD4", Offset = "0xA78BD4", VA = "0xA78BD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000067")]
	public static event OnForwardDelegate OnForward
	{
		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA78C90", Offset = "0xA78C90", VA = "0xA78C90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA78D4C", Offset = "0xA78D4C", VA = "0xA78D4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000068")]
	public static event OnBackwardDelegate OnBackward
	{
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA78E08", Offset = "0xA78E08", VA = "0xA78E08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xA78EC4", Offset = "0xA78EC4", VA = "0xA78EC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000069")]
	public static event OnLeftDelegate OnLeft
	{
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xA78F80", Offset = "0xA78F80", VA = "0xA78F80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xA7903C", Offset = "0xA7903C", VA = "0xA7903C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006A")]
	public static event OnRightDelegate OnRight
	{
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xA790F8", Offset = "0xA790F8", VA = "0xA790F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xA791B4", Offset = "0xA791B4", VA = "0xA791B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xA79270", Offset = "0xA79270", VA = "0xA79270")]
	private void Start()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xA793B8", Offset = "0xA793B8", VA = "0xA793B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xA79430", Offset = "0xA79430", VA = "0xA79430")]
	private void Pause(bool isTrue)
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xA79334", Offset = "0xA79334", VA = "0xA79334")]
	private void InitPlatform()
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xA795BC", Offset = "0xA795BC", VA = "0xA795BC")]
	public void ControllerAction(actionType _action, Vector2 _dir)
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xA79654", Offset = "0xA79654", VA = "0xA79654")]
	public void ControllerAction(actionType _action, bool _which)
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0xA79818", Offset = "0xA79818", VA = "0xA79818")]
	public Vector3 GetControllerVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0xA79838", Offset = "0xA79838", VA = "0xA79838")]
	public bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0xA79840", Offset = "0xA79840", VA = "0xA79840")]
	public bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xA79848", Offset = "0xA79848", VA = "0xA79848")]
	public void HapticFeedback(ushort _frequency)
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xA79868", Offset = "0xA79868", VA = "0xA79868")]
	public VRControllerMapper()
	{
	}
}
[Token(Token = "0x20003AA")]
public class VRControllerMapperSub : MonoBehaviour
{
	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hand;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool lastControllerActive;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerMapper myMapper;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.XR.InputDevice handDevice;

	[Token(Token = "0x6001718")]
	[Address(RVA = "0xA7AD90", Offset = "0xA7AD90", VA = "0xA7AD90", Slot = "4")]
	public virtual void Init(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0xA7ADD8", Offset = "0xA7ADD8", VA = "0xA7ADD8", Slot = "5")]
	public virtual Vector3 GetControllerVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0xA7ADFC", Offset = "0xA7ADFC", VA = "0xA7ADFC", Slot = "6")]
	public virtual void InitPlatformSpecific()
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0xA7AE00", Offset = "0xA7AE00", VA = "0xA7AE00", Slot = "7")]
	public virtual void InputDevicePresent()
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0xA7AEEC", Offset = "0xA7AEEC", VA = "0xA7AEEC", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0xA7B108", Offset = "0xA7B108", VA = "0xA7B108", Slot = "9")]
	public virtual void HapticFeedback(ushort _frequency)
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0xA7B17C", Offset = "0xA7B17C", VA = "0xA7B17C")]
	public VRControllerMapperSub()
	{
	}
}
[Token(Token = "0x20003AB")]
public class VRControllerMapperSubOculusOpenXR : VRControllerMapperSub
{
	[Token(Token = "0x600171F")]
	[Address(RVA = "0xA7B184", Offset = "0xA7B184", VA = "0xA7B184", Slot = "6")]
	public override void InitPlatformSpecific()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0xA7B6A8", Offset = "0xA7B6A8", VA = "0xA7B6A8")]
	public VRControllerMapperSubOculusOpenXR()
	{
	}
}
[Token(Token = "0x20003AC")]
public class VRInputManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class ControllerInputSet
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public InputActionReference inputTrigger;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public InputActionReference inputButtonOne;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public InputActionReference inputButtonTwo;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public InputActionReference inputMovement;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public InputActionReference inputMenu;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public InputActionReference thumbDown;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA7B780", Offset = "0xA7B780", VA = "0xA7B780")]
		public ControllerInputSet()
		{
		}
	}

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ControllerInputSet> controllerInputSet;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionAsset actionAsset;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRInputManager _instance;

	[Token(Token = "0x17000190")]
	public static VRInputManager Instance
	{
		[Token(Token = "0x6001722")]
		[Address(RVA = "0xA7B51C", Offset = "0xA7B51C", VA = "0xA7B51C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0xA7B6B0", Offset = "0xA7B6B0", VA = "0xA7B6B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0xA7B778", Offset = "0xA7B778", VA = "0xA7B778")]
	public VRInputManager()
	{
	}
}
[Token(Token = "0x20003AE")]
public class XRDevice
{
	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.XR.InputDevice headDevice;

	[Token(Token = "0x6001725")]
	[Address(RVA = "0xA7B788", Offset = "0xA7B788", VA = "0xA7B788")]
	public XRDevice()
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0xA778F8", Offset = "0xA778F8", VA = "0xA778F8")]
	public static bool IsHMDMounted()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003AF")]
public class TadaPostBossfight : MonoBehaviour
{
	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_musician[] musicians;

	[Token(Token = "0x6001727")]
	[Address(RVA = "0xA7B7C8", Offset = "0xA7B7C8", VA = "0xA7B7C8")]
	public void PlayTada(bool play)
	{
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0xA7B99C", Offset = "0xA7B99C", VA = "0xA7B99C")]
	private void StopAnimation()
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xA7B9A4", Offset = "0xA7B9A4", VA = "0xA7B9A4")]
	public TadaPostBossfight()
	{
	}
}
[Token(Token = "0x20003B0")]
public class TakeScreenshot : MonoBehaviour
{
	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TakeScreenshots;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CameraToPNG screenshotTaker;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool thumbUp;

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xA7B9AC", Offset = "0xA7B9AC", VA = "0xA7B9AC")]
	public static void ToggleScreenshots()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xA7BAFC", Offset = "0xA7BAFC", VA = "0xA7BAFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0xA7BB74", Offset = "0xA7BB74", VA = "0xA7BB74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0xA7BBEC", Offset = "0xA7BBEC", VA = "0xA7BBEC")]
	private void TakeShot(VRControllerMapper vrMapper)
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xA7BC98", Offset = "0xA7BC98", VA = "0xA7BC98")]
	public TakeScreenshot()
	{
	}
}
[Token(Token = "0x20003B1")]
public class TargetShippingPerimeter : MonoBehaviour
{
	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject placementPrefab;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wpDummy;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float amountToPlace;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer renderer;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> buoys;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> gaps;

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xA7BCA8", Offset = "0xA7BCA8", VA = "0xA7BCA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0xA7C20C", Offset = "0xA7C20C", VA = "0xA7C20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xA7BCD4", Offset = "0xA7BCD4", VA = "0xA7BCD4")]
	private void PlaceBuoys()
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0xA7C250", Offset = "0xA7C250", VA = "0xA7C250")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xA7C3BC", Offset = "0xA7C3BC", VA = "0xA7C3BC")]
	public TargetShippingPerimeter()
	{
	}
}
[Token(Token = "0x20003B2")]
public class TentacleBeastMouth : CollisionBase
{
	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MouthSFXScriptableObject mouthSFX;

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xA7C3CC", Offset = "0xA7C3CC", VA = "0xA7C3CC", Slot = "5")]
	public override void CollisionDictChangedNonRB(Collider collider, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xA7C4BC", Offset = "0xA7C4BC", VA = "0xA7C4BC")]
	public TentacleBeastMouth()
	{
	}
}
[Token(Token = "0x20003B3")]
public class TentacleSFX : MonoBehaviour
{
	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic tentacleLogic;

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xA7C4C4", Offset = "0xA7C4C4", VA = "0xA7C4C4")]
	private void OnCollisionEnter(Collision _collision)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xA7C55C", Offset = "0xA7C55C", VA = "0xA7C55C")]
	private void OnCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0xA7C5F4", Offset = "0xA7C5F4", VA = "0xA7C5F4")]
	public TentacleSFX()
	{
	}
}
[Token(Token = "0x20003B4")]
public class TentacleSFXGenerator : MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	[CompilerGenerated]
	private sealed class <HapticFeedback>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleSFXGenerator <>4__this;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitForce;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <num>5__2;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <forceFactor>5__3;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ushort <val>5__4;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xA7CFB8", Offset = "0xA7CFB8", VA = "0xA7CFB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xA7D000", Offset = "0xA7D000", VA = "0xA7D000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xA7CCE8", Offset = "0xA7CCE8", VA = "0xA7CCE8")]
		[DebuggerHidden]
		public <HapticFeedback>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xA7CDBC", Offset = "0xA7CDBC", VA = "0xA7CDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xA7CDC0", Offset = "0xA7CDC0", VA = "0xA7CDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xA7CFC0", Offset = "0xA7CFC0", VA = "0xA7CFC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float CoolTime;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float globalCoolDown;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] LastTimePlayed;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float globalLastTimePlayed;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] ImpactForceRange;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastImpact;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string[] InputSound;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventInstance[] impactInstances;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventDescription[] impactEventDescriptions;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PARAMETER_ID[] impactParameterIds;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TentacleLogic tentacleLogic;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float strongest;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastTimeRetriggerSFX;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool bypass;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int instanceCount;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool collisionEvents;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float minHaptic;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float hapticInc;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int hapticRounds;

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xA7C5FC", Offset = "0xA7C5FC", VA = "0xA7C5FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0xA7C7EC", Offset = "0xA7C7EC", VA = "0xA7C7EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0xA7C8E4", Offset = "0xA7C8E4", VA = "0xA7C8E4")]
	public void BoneCollisionEvent(Collision _collision, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0xA7CC54", Offset = "0xA7CC54", VA = "0xA7CC54")]
	public void BoneCollisionExit(Collision _collision, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0xA7CC64", Offset = "0xA7CC64", VA = "0xA7CC64")]
	[IteratorStateMachine(typeof(<HapticFeedback>d__23))]
	private IEnumerator HapticFeedback(float hitForce)
	{
		return null;
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0xA7CD10", Offset = "0xA7CD10", VA = "0xA7CD10")]
	public TentacleSFXGenerator()
	{
	}
}
[Token(Token = "0x20003B6")]
public class Grabbable : MonoBehaviour
{
	[Token(Token = "0x20003B7")]
	public delegate void OnGrabObjectDelegate(bool _isGrabbed, VRControllerMapper controller);

	[Token(Token = "0x20003B8")]
	public delegate void OnSpawnFreezeGrabDelegate(Grabbable _grabbable);

	[Token(Token = "0x20003B9")]
	[CompilerGenerated]
	private sealed class <CollisionToggleTimer>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable <>4__this;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0xA7F44C", Offset = "0xA7F44C", VA = "0xA7F44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0xA7F494", Offset = "0xA7F494", VA = "0xA7F494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xA7EAB0", Offset = "0xA7EAB0", VA = "0xA7EAB0")]
		[DebuggerHidden]
		public <CollisionToggleTimer>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xA7F30C", Offset = "0xA7F30C", VA = "0xA7F30C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xA7F310", Offset = "0xA7F310", VA = "0xA7F310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xA7F454", Offset = "0xA7F454", VA = "0xA7F454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initialKinematic;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsGrabbed;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool spawnFreeze;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SuckerGrabber> MySuckerGrabber;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerMapper controller;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool usePullFeedback;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float disableCollisionReleaseVelocity;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static VRControllerMapper lastUsedGrabbableController;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool stopDetachCall;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool initialHasGravity;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool wasGrabbed;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool carryingOver;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useDebugIsGrabbed;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool debugIsGrabbed;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CollisionDetectionMode originalCollisionDetectionMode;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int layerTentaclePhobic;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Collider> allColliders;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool disableTentacleCollisionsOnGrab;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Grabbable[] ChainedGrabbables;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initDone;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<TentacleLogic> connectedTentacles;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CarryOver_base carryOver;

	[Token(Token = "0x1400006B")]
	public event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x6001745")]
		[Address(RVA = "0xA7D008", Offset = "0xA7D008", VA = "0xA7D008")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001746")]
		[Address(RVA = "0xA7D0A4", Offset = "0xA7D0A4", VA = "0xA7D0A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006C")]
	public static event OnSpawnFreezeGrabDelegate OnSpawnFreezeGrab
	{
		[Token(Token = "0x6001747")]
		[Address(RVA = "0xA7D140", Offset = "0xA7D140", VA = "0xA7D140")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001748")]
		[Address(RVA = "0xA7D1F8", Offset = "0xA7D1F8", VA = "0xA7D1F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xA7D2B0", Offset = "0xA7D2B0", VA = "0xA7D2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xA7D660", Offset = "0xA7D660", VA = "0xA7D660")]
	public void Init()
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xA7D7A8", Offset = "0xA7D7A8", VA = "0xA7D7A8")]
	public void SpawnerInit()
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xA7D864", Offset = "0xA7D864", VA = "0xA7D864")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xA7D86C", Offset = "0xA7D86C", VA = "0xA7D86C")]
	private void CheckPhysicsProperties()
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xA7DA90", Offset = "0xA7DA90", VA = "0xA7DA90")]
	public void ToggleCollidersCollisionAgainst(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0xA7D42C", Offset = "0xA7D42C", VA = "0xA7D42C")]
	public void GetAllColliders()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xA7DBD0", Offset = "0xA7DBD0", VA = "0xA7DBD0")]
	public bool GetIsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xA7DBEC", Offset = "0xA7DBEC", VA = "0xA7DBEC")]
	public void GrabbedAllergy(float _duration)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xA7DE18", Offset = "0xA7DE18", VA = "0xA7DE18")]
	public void DropMe()
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xA7DF30", Offset = "0xA7DF30", VA = "0xA7DF30")]
	public static void DetachTentaclesFor(GameObject _go)
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xA6FD18", Offset = "0xA6FD18", VA = "0xA6FD18")]
	public bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0xA7D69C", Offset = "0xA7D69C", VA = "0xA7D69C")]
	public static void RBKinematicHack(Rigidbody _rb, bool _isKinematic)
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xA7DFE4", Offset = "0xA7DFE4", VA = "0xA7DFE4")]
	public void SetStatus(bool _isGrabbed, SuckerGrabber _mySuckerGrabber, VRControllerMapper _controller, bool chainTrigger = false)
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xA7E7C4", Offset = "0xA7E7C4", VA = "0xA7E7C4")]
	public void SwooshSFX(Vector3 vel)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xA7E4F8", Offset = "0xA7E4F8", VA = "0xA7E4F8")]
	private void VelocityCorrection()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xA7E3AC", Offset = "0xA7E3AC", VA = "0xA7E3AC")]
	private void DisableCollisionReleaseCheck(TentacleLogic tLogic)
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0xA7E98C", Offset = "0xA7E98C", VA = "0xA7E98C")]
	public void DisableTentacleCollision(float duration = 0.2f)
	{
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0xA7EA2C", Offset = "0xA7EA2C", VA = "0xA7EA2C")]
	[IteratorStateMachine(typeof(<CollisionToggleTimer>d__47))]
	private IEnumerator CollisionToggleTimer(float duration)
	{
		return null;
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0xA7EAD8", Offset = "0xA7EAD8", VA = "0xA7EAD8")]
	public void HapticFeedbackAttachedTentacles(TentacleLogic.HapticType type = TentacleLogic.HapticType.prettyShort)
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0xA7ECFC", Offset = "0xA7ECFC", VA = "0xA7ECFC")]
	public bool HasSuckersAttached()
	{
		return default(bool);
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0xA7ED4C", Offset = "0xA7ED4C", VA = "0xA7ED4C")]
	public void StartLoad(bool carrOverActive = false)
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0xA7EE68", Offset = "0xA7EE68", VA = "0xA7EE68")]
	public void EndLoad()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0xA7EF58", Offset = "0xA7EF58", VA = "0xA7EF58")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x20003BA")]
public class GrabberControll : MonoBehaviour
{
	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool grabbing;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grabbed;

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xA7F49C", Offset = "0xA7F49C", VA = "0xA7F49C")]
	public GrabberControll()
	{
	}
}
[Token(Token = "0x20003BB")]
public class SetupChain : MonoBehaviour
{
	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lastElement;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer skin;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] tipBones;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] WirstBones;

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xA7F4A4", Offset = "0xA7F4A4", VA = "0xA7F4A4")]
	public void SetUpwards()
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xA7F7DC", Offset = "0xA7F7DC", VA = "0xA7F7DC")]
	public void SetDownwards()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xA7FBE0", Offset = "0xA7FBE0", VA = "0xA7FBE0")]
	public void SetupColliders()
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xA7FE28", Offset = "0xA7FE28", VA = "0xA7FE28")]
	public void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xA7FEC0", Offset = "0xA7FEC0", VA = "0xA7FEC0")]
	public void SetupStretchyJoints()
	{
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xA803C4", Offset = "0xA803C4", VA = "0xA803C4")]
	public SetupChain()
	{
	}
}
[Token(Token = "0x20003BC")]
public class VRControllerGestureTracker : MonoBehaviour
{
	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody controllerA;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody controllerB;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeForPose;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float poseTimer;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float controllerVSAngles;

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xA803CC", Offset = "0xA803CC", VA = "0xA803CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xA803D0", Offset = "0xA803D0", VA = "0xA803D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xA804A4", Offset = "0xA804A4", VA = "0xA804A4")]
	private void TrackNO()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xA80594", Offset = "0xA80594", VA = "0xA80594")]
	private void TrackOK()
	{
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0xA806F8", Offset = "0xA806F8", VA = "0xA806F8")]
	public VRControllerGestureTracker()
	{
	}
}
[Token(Token = "0x20003BD")]
public class SetUpTentacleSystem : MonoBehaviour
{
	[Token(Token = "0x20003BE")]
	public delegate void ChangeRigPositionDelegate(Vector3 rigPos);

	[Token(Token = "0x20003BF")]
	public delegate void VRSetupIntialisedDelegate(SetUpTentacleSystem tSystem);

	[Token(Token = "0x20003C0")]
	public delegate void ControllerActiveDelegate(int _id, bool active);

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic rightTentacle;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TentacleLogic leftTentacle;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftController;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightController;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRControllerMapper helperLeft;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRControllerMapper helperRight;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool leftControllerActive;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool rightControllerActive;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 deviceOffset;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 deviceRotation;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float sizeCompensation;

	[Token(Token = "0x4001749")]
	public const float sizeCompDefault = 0.25f;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float tentacleScale;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform cameraRig;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 startPosition;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 basePosition;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 startRotation;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera VRCamera;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool initialised;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject headFloatDetector;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject headFloatGo;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject SmoothCamPrefab;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool smoothCamMode;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool carryOverEnabled;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SetUpTentacleSystem _instance;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] minMax;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CameraSmooth smoothCam;

	[Token(Token = "0x17000195")]
	public static SetUpTentacleSystem Instance
	{
		[Token(Token = "0x6001781")]
		[Address(RVA = "0xA740EC", Offset = "0xA740EC", VA = "0xA740EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400006D")]
	public static event ChangeRigPositionDelegate OnChangeRigPosition
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0xA80708", Offset = "0xA80708", VA = "0xA80708")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xA807C0", Offset = "0xA807C0", VA = "0xA807C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006E")]
	public static event VRSetupIntialisedDelegate OnTentacleSystemInitialised
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0xA80878", Offset = "0xA80878", VA = "0xA80878")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600177E")]
		[Address(RVA = "0xA80934", Offset = "0xA80934", VA = "0xA80934")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public static event ControllerActiveDelegate OnControllerActive
	{
		[Token(Token = "0x600177F")]
		[Address(RVA = "0xA809F0", Offset = "0xA809F0", VA = "0xA809F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001780")]
		[Address(RVA = "0xA80AAC", Offset = "0xA80AAC", VA = "0xA80AAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0xA80B68", Offset = "0xA80B68", VA = "0xA80B68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xA80D50", Offset = "0xA80D50", VA = "0xA80D50")]
	private VRControllerMapper InitTentacle(TentacleLogic _tentacleLogic, VRControllerMapper _helper, Transform _controller, int _id)
	{
		return null;
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0xA81024", Offset = "0xA81024", VA = "0xA81024")]
	private void DoAttach(TentacleLogic _tentacleLogic, Transform _controller)
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xA8122C", Offset = "0xA8122C", VA = "0xA8122C")]
	public void EndLoadCarryOverCleanUp()
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xA8126C", Offset = "0xA8126C", VA = "0xA8126C")]
	public void LevelResetSizeCompensation()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0xA8128C", Offset = "0xA8128C", VA = "0xA8128C")]
	public void RepositionRig()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xA7444C", Offset = "0xA7444C", VA = "0xA7444C")]
	public void SetTentacleScale(float _which)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0xA812AC", Offset = "0xA812AC", VA = "0xA812AC")]
	public void SetCollision(bool _which)
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0xA812F0", Offset = "0xA812F0", VA = "0xA812F0")]
	public float[] GetMinMaxHeight()
	{
		return null;
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0xA81388", Offset = "0xA81388", VA = "0xA81388")]
	public float GetHeightForFactor(float _sizeCompensation)
	{
		return default(float);
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0xA813A0", Offset = "0xA813A0", VA = "0xA813A0")]
	public float GetFactorForheight(float _height)
	{
		return default(float);
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0xA74268", Offset = "0xA74268", VA = "0xA74268")]
	public void SetSizeCompensation(bool _resetPositionAndRotation = true)
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0xA81408", Offset = "0xA81408", VA = "0xA81408")]
	public Vector3 GetRigPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0xA81430", Offset = "0xA81430", VA = "0xA81430")]
	public void DebugToggleTentacles(int whichTentacle)
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0xA81480", Offset = "0xA81480", VA = "0xA81480")]
	public void DebugSetTentacles(int whichTentacle, bool isActive)
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0xA814BC", Offset = "0xA814BC", VA = "0xA814BC")]
	public void LevelResetTentacles()
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0xA80D3C", Offset = "0xA80D3C", VA = "0xA80D3C")]
	private void DeviceAdjust()
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0xA79464", Offset = "0xA79464", VA = "0xA79464")]
	public void VisualSetTentacles(int _id, bool _which)
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0xA81564", Offset = "0xA81564", VA = "0xA81564")]
	public int GetActiveControllers()
	{
		return default(int);
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0xA7AF94", Offset = "0xA7AF94", VA = "0xA7AF94")]
	public void SetTentacles(int _id, bool _which)
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0xA81584", Offset = "0xA81584", VA = "0xA81584")]
	[ContextMenu("TestFullResetTentacle")]
	public void TestFullResetTentacle()
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0xA815B0", Offset = "0xA815B0", VA = "0xA815B0")]
	[ContextMenu("InGameResetTentacle")]
	public void InGameResetTentacle()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xA8153C", Offset = "0xA8153C", VA = "0xA8153C")]
	public void ResetTentacle(int _controllerID, bool inGameReset = false)
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xA815DC", Offset = "0xA815DC", VA = "0xA815DC")]
	private void DoResetTentacle(TentacleLogic _tentacleLogic, Transform _controller, bool _controllerActive, bool inGameReset = false)
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xA816C8", Offset = "0xA816C8", VA = "0xA816C8")]
	public void ToggleSmoothCam()
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xA81948", Offset = "0xA81948", VA = "0xA81948")]
	public void ToggleFlyCam()
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xA81974", Offset = "0xA81974", VA = "0xA81974")]
	public bool GetFlyCam()
	{
		return default(bool);
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xA816D8", Offset = "0xA816D8", VA = "0xA816D8")]
	[ContextMenu("SmoothCam")]
	public void SetSmoothCam(bool active)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xA819A8", Offset = "0xA819A8", VA = "0xA819A8")]
	public void CarryOverCheck()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xA80E4C", Offset = "0xA80E4C", VA = "0xA80E4C")]
	private void HeadWaterDetector()
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xA819E0", Offset = "0xA819E0", VA = "0xA819E0")]
	public SetUpTentacleSystem()
	{
	}
}
[Token(Token = "0x20003C1")]
public class SloppyTentacleInfection : MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> collisions;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float newDuration;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody colRB;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float overrideDuration;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isGrabbed;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grab;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ignoreGrabbing;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool ignoreTriggers;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRControllerMapper controller;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isCrystal;

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xA81E84", Offset = "0xA81E84", VA = "0xA81E84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xA81FA8", Offset = "0xA81FA8", VA = "0xA81FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xA82028", Offset = "0xA82028", VA = "0xA82028")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xA820A8", Offset = "0xA820A8", VA = "0xA820A8")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xA82204", Offset = "0xA82204", VA = "0xA82204")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xA8220C", Offset = "0xA8220C", VA = "0xA8220C")]
	private void TentacleCheck(bool doSound = false)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xA82484", Offset = "0xA82484", VA = "0xA82484")]
	private void OnCollisionEnterCheck(Collider collider)
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xA82560", Offset = "0xA82560", VA = "0xA82560")]
	private void CollisionExitCheck(Collider collider)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xA827B4", Offset = "0xA827B4", VA = "0xA827B4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0xA8298C", Offset = "0xA8298C", VA = "0xA8298C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0xA82A9C", Offset = "0xA82A9C", VA = "0xA82A9C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0xA82BC8", Offset = "0xA82BC8", VA = "0xA82BC8")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0xA82CD0", Offset = "0xA82CD0", VA = "0xA82CD0")]
	public SloppyTentacleInfection()
	{
	}
}
[Token(Token = "0x20003C2")]
public class SloppyTentacleInfectionTriggers : MonoBehaviour
{
	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float durationOverride;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float newDuration;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCrystal;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody colRB;

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0xA82D60", Offset = "0xA82D60", VA = "0xA82D60")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0xA82EFC", Offset = "0xA82EFC", VA = "0xA82EFC")]
	public SloppyTentacleInfectionTriggers()
	{
	}
}
[Token(Token = "0x20003C3")]
public class SuckerGrabber : MonoBehaviour
{
	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic Tentacle;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJoint ConnectedJoint;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Grabbing;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool grabPress;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool contracted;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startScale;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRControllerMapper controller;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool grabsGlue;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool Injuried;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween tween;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Collider> myColliders;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Joint> myJoints;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody myRB;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable grab;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Glue glue;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SoftJointLimitSpring lim;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JointDrive jd;

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0xA82F10", Offset = "0xA82F10", VA = "0xA82F10")]
	private void Start()
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0xA82F9C", Offset = "0xA82F9C", VA = "0xA82F9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0xA82F98", Offset = "0xA82F98", VA = "0xA82F98")]
	private void SetSuckerScale()
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0xA82FB0", Offset = "0xA82FB0", VA = "0xA82FB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0xA83760", Offset = "0xA83760", VA = "0xA83760")]
	private bool InjuryIssues()
	{
		return default(bool);
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0xA8314C", Offset = "0xA8314C", VA = "0xA8314C")]
	private void Grab(Collider col)
	{
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0xA83768", Offset = "0xA83768", VA = "0xA83768")]
	public void ReleaseObject(GameObject _releaseObject)
	{
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0xA83BE4", Offset = "0xA83BE4", VA = "0xA83BE4")]
	public void TriggerUp()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0xA837D0", Offset = "0xA837D0", VA = "0xA837D0")]
	private void ReleaseAllJoints(bool nonGlueRelease = false, [Optional] GameObject specificGameObject)
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0xA83C1C", Offset = "0xA83C1C", VA = "0xA83C1C")]
	public void NonGlueRelease()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xA83C28", Offset = "0xA83C28", VA = "0xA83C28")]
	public void TriggerDown()
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xA83C34", Offset = "0xA83C34", VA = "0xA83C34")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xA83D48", Offset = "0xA83D48", VA = "0xA83D48")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xA83DD8", Offset = "0xA83DD8", VA = "0xA83DD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xA83F28", Offset = "0xA83F28", VA = "0xA83F28")]
	private Vector3 GetMeanVector(Vector3[] positions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xA83FD0", Offset = "0xA83FD0", VA = "0xA83FD0")]
	public SuckerGrabber()
	{
	}
}
[Token(Token = "0x20003C4")]
public class TentacleConfig : MonoBehaviour
{
	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TentacleJointHelper> jointHelpers;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TentacleSettings tentacleSettings;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve weightCurve;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve fakeColliderCurve;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lifeEditing;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Tween> weightTweens;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween scaleTween;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<Rigidbody, float> massesDict;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string fileName;

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xA840A8", Offset = "0xA840A8", VA = "0xA840A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xA849BC", Offset = "0xA849BC", VA = "0xA849BC")]
	public void SetTentacleConfig(TentacleSettings tSettings, float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xA840D4", Offset = "0xA840D4", VA = "0xA840D4")]
	public void GetSettings()
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xA84A38", Offset = "0xA84A38", VA = "0xA84A38")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xA84AD4", Offset = "0xA84AD4", VA = "0xA84AD4")]
	private void UpdateTweenValues()
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xA843F8", Offset = "0xA843F8", VA = "0xA843F8")]
	public void SetRegularWeightCurve(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xA84754", Offset = "0xA84754", VA = "0xA84754")]
	public void SetFakeColliderCurve(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xA84204", Offset = "0xA84204", VA = "0xA84204")]
	private void GetJointHelpers()
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xA84C74", Offset = "0xA84C74", VA = "0xA84C74")]
	public TentacleConfig()
	{
	}
}
[Token(Token = "0x20003C6")]
public class TentacleInjured : MonoBehaviour
{
	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xA84F70", Offset = "0xA84F70", VA = "0xA84F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0xA84F78", Offset = "0xA84F78", VA = "0xA84F78")]
	private void SetInjured(bool injured)
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0xA8506C", Offset = "0xA8506C", VA = "0xA8506C")]
	public TentacleInjured()
	{
	}
}
[Token(Token = "0x20003C7")]
public class TentacleJointHelper : MonoBehaviour
{
	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint MyJoint;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool RepositionGameObject;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MyJointAttach;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MyReceiverAttach;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TentacleJointHelper NextJointHelper;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FakeCollider;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody RB;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DoNotAdjust;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TentacleJointHelper lastJointHelper;

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0xA85074", Offset = "0xA85074", VA = "0xA85074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0xA85128", Offset = "0xA85128", VA = "0xA85128")]
	private void Repo()
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0xA85418", Offset = "0xA85418", VA = "0xA85418")]
	[ContextMenu("REFRESH HELPER")]
	public void GetNextJointHelper()
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0xA854A4", Offset = "0xA854A4", VA = "0xA854A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0xA854A8", Offset = "0xA854A8", VA = "0xA854A8")]
	public TentacleJointHelper()
	{
	}
}
[Token(Token = "0x20003C8")]
public class TentacleLogic : MonoBehaviour
{
	[Token(Token = "0x20003C9")]
	public enum HapticType
	{
		[Token(Token = "0x40017EE")]
		prettyShort,
		[Token(Token = "0x40017EF")]
		weird,
		[Token(Token = "0x40017F0")]
		tick
	}

	[Token(Token = "0x20003CA")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x20003CB")]
	public delegate void OnUnGrabObjectDelegate(GameObject grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x20003CC")]
	public delegate void OnTooStretchyRipOffDelegate(List<GameObject> _grabbedStuff, TentacleLogic _tentacleLogic);

	[Token(Token = "0x20003CD")]
	[CompilerGenerated]
	private sealed class <SloppyHapticFeedback>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xA8A290", Offset = "0xA8A290", VA = "0xA8A290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xA8A2D8", Offset = "0xA8A2D8", VA = "0xA8A2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xA8847C", Offset = "0xA8847C", VA = "0xA8847C")]
		[DebuggerHidden]
		public <SloppyHapticFeedback>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xA89E50", Offset = "0xA89E50", VA = "0xA89E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xA89E54", Offset = "0xA89E54", VA = "0xA89E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xA8A298", Offset = "0xA8A298", VA = "0xA8A298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[CompilerGenerated]
	private sealed class <HapticFeedbackShort>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xA8A42C", Offset = "0xA8A42C", VA = "0xA8A42C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xA8A474", Offset = "0xA8A474", VA = "0xA8A474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xA885C0", Offset = "0xA885C0", VA = "0xA885C0")]
		[DebuggerHidden]
		public <HapticFeedbackShort>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xA8A2E0", Offset = "0xA8A2E0", VA = "0xA8A2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xA8A2E4", Offset = "0xA8A2E4", VA = "0xA8A2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xA8A434", Offset = "0xA8A434", VA = "0xA8A434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CF")]
	[CompilerGenerated]
	private sealed class <HapticFeedbackWeird>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xA8A864", Offset = "0xA8A864", VA = "0xA8A864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xA8A8AC", Offset = "0xA8A8AC", VA = "0xA8A8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xA8865C", Offset = "0xA8865C", VA = "0xA8865C")]
		[DebuggerHidden]
		public <HapticFeedbackWeird>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xA8A47C", Offset = "0xA8A47C", VA = "0xA8A47C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xA8A480", Offset = "0xA8A480", VA = "0xA8A480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xA8A86C", Offset = "0xA8A86C", VA = "0xA8A86C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[CompilerGenerated]
	private sealed class <ReEnableCollision>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xA8A970", Offset = "0xA8A970", VA = "0xA8A970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xA8A9B8", Offset = "0xA8A9B8", VA = "0xA8A9B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xA88E8C", Offset = "0xA88E8C", VA = "0xA88E8C")]
		[DebuggerHidden]
		public <ReEnableCollision>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xA8A8B4", Offset = "0xA8A8B4", VA = "0xA8A8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xA8A8B8", Offset = "0xA8A8B8", VA = "0xA8A8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xA8A978", Offset = "0xA8A978", VA = "0xA8A978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	[CompilerGenerated]
	private sealed class <BusyGrab>d__155 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xA8AA98", Offset = "0xA8AA98", VA = "0xA8AA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xA8AAE0", Offset = "0xA8AAE0", VA = "0xA8AAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xA897C4", Offset = "0xA897C4", VA = "0xA897C4")]
		[DebuggerHidden]
		public <BusyGrab>d__155(int <>1__state)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xA8A9C0", Offset = "0xA8A9C0", VA = "0xA8A9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xA8A9C4", Offset = "0xA8A9C4", VA = "0xA8A9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xA8AAA0", Offset = "0xA8AAA0", VA = "0xA8AAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D2")]
	[CompilerGenerated]
	private sealed class <PullHapticFeedback>d__163 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xA8ACCC", Offset = "0xA8ACCC", VA = "0xA8ACCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xA8AD14", Offset = "0xA8AD14", VA = "0xA8AD14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xA89968", Offset = "0xA89968", VA = "0xA89968")]
		[DebuggerHidden]
		public <PullHapticFeedback>d__163(int <>1__state)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xA8AAE8", Offset = "0xA8AAE8", VA = "0xA8AAE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xA8AAEC", Offset = "0xA8AAEC", VA = "0xA8AAEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xA8ACD4", Offset = "0xA8ACD4", VA = "0xA8ACD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerID;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TentacleObject;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody[] Bones;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] BonesJoints;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] BonesSizes;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] originalRot;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] originalPosition;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] originalJointRotation;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] lastRotations;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] lastRotationsAccum;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] lastPositions;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] lastVelocities;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] lastPositionDifs;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int totalBones;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int totalBonesJoints;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ConfigurableJoint ControllerAttachJoint;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Rigidbody BoneRBWithControllerAttachJoint;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody ControllerAttachedKinematicRB;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SuckerGrabber[] Suckers;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool BusyGrabbing;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool grabStaySticky;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float maxStretchFactor;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxStretchFactorTotal;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool sloppyTentacles;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool sloppyFeedback;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sloppyDuration;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<GameObject> grabbedStuff;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SkinnedMeshRenderer tentacleMeshRenderer;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VRControllerMapper myControllerHelper;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Material tentacleMat;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float sloppyWait;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float tentacleLength;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool ignoreCollisionsAgainstGrabbed;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public LayerMask penetrationTest;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Rigidbody, TentacleLogic> tentacleBonesLookup;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LayerMask TentacleLayerRight;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public LayerMask TentacleLayerLeft;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool scaleUpdateAnchors;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform trans;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int tentacleScale;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3[] anchor;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3[] connectedAnchor;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float scaleStore;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int glueGrabbed;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static TentacleLogic tentacleLogic;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TentacleSFXGenerator soundGen;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float stretchFactor;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool suckerScaling;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[EventRef]
	public string GrabSound;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[EventRef]
	public string SnapSound;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[EventRef]
	public string ReleaseSound;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject[] Bandages;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TentacleConfig tentacleConfig;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float controllerBoneStartDistance;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject soundEmitterPrefab;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool hideRenderers;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TentacleSettings tentacleSettingsOriginal;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TentacleSettings tentacleSettingsDefault;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TentacleSettings tentacleSettingsSloppy;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool logThis;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float rumbleForce;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float ripDistance;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float size;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float maxErractic;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float distSqr;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float erraticMaximum;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float fullSize;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float rumbleFactor;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool initialised;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
	private bool busyGrabRunning;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float erraticReset;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public List<Collider> myColliders;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int frameCounter;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float penetrationScaleFudge;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool penetrationCheck;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AlignToBezierCurve tentacleGlove;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public HumanEmoSFX elviraEmoSFX;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool noPenetration;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Collider[] hitColliders;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool useForces;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float minSloppy;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float maxSloppy;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int crazyCount;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float maxTime;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float minTime;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float frequency;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float maxPullForceForDisconnect;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float minRumbleDistance;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private bool rumbleRunning;

	[Token(Token = "0x14000070")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xA854B8", Offset = "0xA854B8", VA = "0xA854B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xA85574", Offset = "0xA85574", VA = "0xA85574")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000071")]
	public static event OnUnGrabObjectDelegate OnUnGrab
	{
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xA85630", Offset = "0xA85630", VA = "0xA85630")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xA856EC", Offset = "0xA856EC", VA = "0xA856EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000072")]
	public static event OnTooStretchyRipOffDelegate OnTooStretchyRipOff
	{
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xA857A8", Offset = "0xA857A8", VA = "0xA857A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xA85864", Offset = "0xA85864", VA = "0xA85864")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xA85920", Offset = "0xA85920", VA = "0xA85920")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xA85A34", Offset = "0xA85A34", VA = "0xA85A34")]
	private void Start()
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xA85B44", Offset = "0xA85B44", VA = "0xA85B44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xA85C18", Offset = "0xA85C18", VA = "0xA85C18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xA85CEC", Offset = "0xA85CEC", VA = "0xA85CEC")]
	public void ResetDeviceAdjust()
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0xA85D88", Offset = "0xA85D88", VA = "0xA85D88")]
	public void ResetDefaultTentacleConfig()
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0xA85D9C", Offset = "0xA85D9C", VA = "0xA85D9C")]
	[ContextMenu("Release Tentacle")]
	public void DebugReleaseTentacle()
	{
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0xA85DC8", Offset = "0xA85DC8", VA = "0xA85DC8")]
	private void CheckCollidersForPenetration()
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xA85FF4", Offset = "0xA85FF4", VA = "0xA85FF4")]
	public void SetTentacleCollisions(bool _which = true)
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xA8607C", Offset = "0xA8607C", VA = "0xA8607C")]
	public bool IsTentacleTip(Rigidbody _rb, int lastBones)
	{
		return default(bool);
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xA860F8", Offset = "0xA860F8", VA = "0xA860F8")]
	public void SetTentacleScale(float _which)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xA861D0", Offset = "0xA861D0", VA = "0xA861D0")]
	private void SetLayer(Collider col)
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xA863B0", Offset = "0xA863B0", VA = "0xA863B0")]
	[ContextMenu("INIT")]
	public void InitTentacle(Transform _controller)
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xA87064", Offset = "0xA87064", VA = "0xA87064")]
	private void CalculateBonesSizes()
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xA873FC", Offset = "0xA873FC", VA = "0xA873FC")]
	private void StoreStartPosition()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xA86EC8", Offset = "0xA86EC8", VA = "0xA86EC8")]
	public void StoreAnchors()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xA87778", Offset = "0xA87778", VA = "0xA87778")]
	private void ScaleUpdateAnchors()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xA878C4", Offset = "0xA878C4", VA = "0xA878C4")]
	public static void InitTBonesLookup()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xA87240", Offset = "0xA87240", VA = "0xA87240")]
	public void AddBonesToLookup()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xA8795C", Offset = "0xA8795C", VA = "0xA8795C")]
	public static TentacleLogic GetTentacleFromBR(Rigidbody boneRB)
	{
		return null;
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xA87A10", Offset = "0xA87A10", VA = "0xA87A10")]
	public void LockBones(bool _isKinematic)
	{
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xA87ABC", Offset = "0xA87ABC", VA = "0xA87ABC")]
	public void OverrideDefaultTentacleSettings(TentacleSettings newSettings)
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xA85B0C", Offset = "0xA85B0C", VA = "0xA85B0C")]
	private void ChangeWeight(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xA87AE0", Offset = "0xA87AE0", VA = "0xA87AE0")]
	public void BoneCollisionEvent(Collision _collision)
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0xA87B00", Offset = "0xA87B00", VA = "0xA87B00")]
	public void BoneCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xA87B20", Offset = "0xA87B20", VA = "0xA87B20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xA88020", Offset = "0xA88020", VA = "0xA88020")]
	[ContextMenu("MakeForeverSloppy")]
	private void MakeForeverSloppy()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xA87FB0", Offset = "0xA87FB0", VA = "0xA87FB0")]
	private void SloppyCheck()
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xA88124", Offset = "0xA88124", VA = "0xA88124")]
	public void DoSloppyFeedbackOnly(float _time)
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xA8802C", Offset = "0xA8802C", VA = "0xA8802C")]
	public void SloppyTentacles(float _duration, bool _useForces = true)
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xA8820C", Offset = "0xA8820C", VA = "0xA8820C")]
	private int Flop()
	{
		return default(int);
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xA88234", Offset = "0xA88234", VA = "0xA88234")]
	private void SloppyForce(float _f = 200f)
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xA881BC", Offset = "0xA881BC", VA = "0xA881BC")]
	private void SloppyFeedback()
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xA88458", Offset = "0xA88458", VA = "0xA88458")]
	private float RandomRange(float min, float max, float factor = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xA883E4", Offset = "0xA883E4", VA = "0xA883E4")]
	[IteratorStateMachine(typeof(<SloppyHapticFeedback>d__129))]
	private IEnumerator SloppyHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xA884A4", Offset = "0xA884A4", VA = "0xA884A4")]
	public void StartHapticFeedback(HapticType type = HapticType.prettyShort)
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xA8852C", Offset = "0xA8852C", VA = "0xA8852C")]
	private void HapticFeedbackTick()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xA8854C", Offset = "0xA8854C", VA = "0xA8854C")]
	[IteratorStateMachine(typeof(<HapticFeedbackShort>d__132))]
	private IEnumerator HapticFeedbackShort()
	{
		return null;
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xA885E8", Offset = "0xA885E8", VA = "0xA885E8")]
	[IteratorStateMachine(typeof(<HapticFeedbackWeird>d__133))]
	private IEnumerator HapticFeedbackWeird()
	{
		return null;
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xA8810C", Offset = "0xA8810C", VA = "0xA8810C")]
	public void EndSloppyTentacles()
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xA88684", Offset = "0xA88684", VA = "0xA88684")]
	public void RepositionBones(bool velChange = true)
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xA87B80", Offset = "0xA87B80", VA = "0xA87B80")]
	public void BonesCheck()
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xA88A98", Offset = "0xA88A98", VA = "0xA88A98")]
	private void CrazyCountCheck()
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xA88B6C", Offset = "0xA88B6C", VA = "0xA88B6C")]
	private void TooStretchyRipEvent()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xA88E18", Offset = "0xA88E18", VA = "0xA88E18")]
	[IteratorStateMachine(typeof(<ReEnableCollision>d__140))]
	private IEnumerator ReEnableCollision()
	{
		return null;
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xA88EB4", Offset = "0xA88EB4", VA = "0xA88EB4")]
	public void StartBusyGrab()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xA88F50", Offset = "0xA88F50", VA = "0xA88F50")]
	public void StopBusyGrab()
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xA88F78", Offset = "0xA88F78", VA = "0xA88F78")]
	public void IgoreCollisionAgainstTentacle(Grabbable _grabbable, bool which)
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xA89048", Offset = "0xA89048", VA = "0xA89048")]
	public void GrabObject(GameObject go, VRControllerMapper _controller, [Optional] Grabbable _grabbable)
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0xA891C8", Offset = "0xA891C8", VA = "0xA891C8")]
	public bool ObjectIsGrabbed(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0xA89220", Offset = "0xA89220", VA = "0xA89220")]
	public void TriggerDown(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0xA892AC", Offset = "0xA892AC", VA = "0xA892AC")]
	public void TriggerUp(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0xA8924C", Offset = "0xA8924C", VA = "0xA8924C")]
	private void GrabStuff()
	{
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0xA892D8", Offset = "0xA892D8", VA = "0xA892D8")]
	public void CleanUpCarryOver()
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0xA89440", Offset = "0xA89440", VA = "0xA89440")]
	public void DropAllExceptCarryOver(bool carrOverActive = false)
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0xA88C88", Offset = "0xA88C88", VA = "0xA88C88")]
	public void DropAll()
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0xA895B4", Offset = "0xA895B4", VA = "0xA895B4")]
	public void ReleaseObject(GameObject _releaseObject)
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0xA8961C", Offset = "0xA8961C", VA = "0xA8961C")]
	public void ReleaseNonGlueSuckers()
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xA89684", Offset = "0xA89684", VA = "0xA89684")]
	public void NonGlueReleaseCall(GameObject go)
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xA89750", Offset = "0xA89750", VA = "0xA89750")]
	[IteratorStateMachine(typeof(<BusyGrab>d__155))]
	public IEnumerator BusyGrab()
	{
		return null;
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xA897EC", Offset = "0xA897EC", VA = "0xA897EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xA88AF8", Offset = "0xA88AF8", VA = "0xA88AF8")]
	[IteratorStateMachine(typeof(<PullHapticFeedback>d__163))]
	private IEnumerator PullHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0xA89990", Offset = "0xA89990", VA = "0xA89990")]
	[ContextMenu("Injured")]
	public void InjureTentacle()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xA84FC8", Offset = "0xA84FC8", VA = "0xA84FC8")]
	public void Injured(bool status, int _which = -1)
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0xA8999C", Offset = "0xA8999C", VA = "0xA8999C")]
	public TentacleLogic()
	{
	}
}
[Token(Token = "0x20003D3")]
[CreateAssetMenu(fileName = "New Tentacle Settings", menuName = "TentacleSettings", order = 1)]
public class TentacleSettings : ScriptableObject
{
	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve weightCurve;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fakeColliderCurve;

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xA8AD1C", Offset = "0xA8AD1C", VA = "0xA8AD1C")]
	public TentacleSettings()
	{
	}
}
[Token(Token = "0x20003D4")]
public class TentacleSwoosh : MonoBehaviour
{
	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool swooshed;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tentacleThreshold;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float controllerThreshold;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerMapper controller;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string swooshEvent;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 controllerVelocity;

	[Token(Token = "0x600185A")]
	[Address(RVA = "0xA8AD24", Offset = "0xA8AD24", VA = "0xA8AD24")]
	private void Start()
	{
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0xA8ADF0", Offset = "0xA8ADF0", VA = "0xA8ADF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0xA8B000", Offset = "0xA8B000", VA = "0xA8B000")]
	public TentacleSwoosh()
	{
	}
}
[Token(Token = "0x20003D5")]
public class TentacleSyringe : MonoBehaviour
{
	[Token(Token = "0x20003D6")]
	public delegate void SyringeInsertedDelegate(TentacleSyringe syringe);

	[Token(Token = "0x20003D7")]
	public delegate void SyringeFilledDelegate(TentacleSyringe syringe);

	[Token(Token = "0x20003D8")]
	public delegate void SyringeUnloadStartedDelegate(TentacleSyringe syringe);

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FixedJoint fixedJoint;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syringeInserted;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable grabbable;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform liquid;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform puller;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable pullerGrabbable;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wasGrabbedAfterInsert;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject visualExtension;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float maxPullDistance;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool bloodCompleted;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ConfigurableJoint joint;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParachuteRespawnTracker tracker;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool unloadSyringe;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 originalTargetPosition;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EntityDefinition triggerEntity;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool syringeUnloaded;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private JointDrive yDrive;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private IEnumerator lockTogether;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dist;

	[Token(Token = "0x14000073")]
	public static event SyringeInsertedDelegate OnSyringeInserted
	{
		[Token(Token = "0x600185D")]
		[Address(RVA = "0xA8B008", Offset = "0xA8B008", VA = "0xA8B008")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600185E")]
		[Address(RVA = "0xA8B0C0", Offset = "0xA8B0C0", VA = "0xA8B0C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000074")]
	public static event SyringeFilledDelegate OnSyringeFilled
	{
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xA8B178", Offset = "0xA8B178", VA = "0xA8B178")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001860")]
		[Address(RVA = "0xA8B234", Offset = "0xA8B234", VA = "0xA8B234")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000075")]
	public static event SyringeUnloadStartedDelegate OnSyringeUnloadStarted
	{
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xA8B2F0", Offset = "0xA8B2F0", VA = "0xA8B2F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001862")]
		[Address(RVA = "0xA8B3AC", Offset = "0xA8B3AC", VA = "0xA8B3AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0xA8B468", Offset = "0xA8B468", VA = "0xA8B468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xA8B4A8", Offset = "0xA8B4A8", VA = "0xA8B4A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xA8B51C", Offset = "0xA8B51C", VA = "0xA8B51C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xA8B590", Offset = "0xA8B590", VA = "0xA8B590", Slot = "4")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xA8B638", Offset = "0xA8B638", VA = "0xA8B638")]
	private void ReleaseSyringe(bool completed = false)
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xA8B798", Offset = "0xA8B798", VA = "0xA8B798")]
	private void DefaultSyringeValues()
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0xA8B80C", Offset = "0xA8B80C", VA = "0xA8B80C")]
	[ContextMenu("StartUnloadSyringe")]
	private void StartUnloadSyringe(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0xA8B8F4", Offset = "0xA8B8F4", VA = "0xA8B8F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0xA8B980", Offset = "0xA8B980", VA = "0xA8B980")]
	private void Update()
	{
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0xA8BD38", Offset = "0xA8BD38", VA = "0xA8BD38")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xA8C04C", Offset = "0xA8C04C", VA = "0xA8C04C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0xA8C188", Offset = "0xA8C188", VA = "0xA8C188")]
	public TentacleSyringe()
	{
	}
}
[Token(Token = "0x20003D9")]
public class TentacleTest : MonoBehaviour
{
	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer tentacle;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] bones;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bonesOn;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool tentacleOn;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xA8C588", Offset = "0xA8C588", VA = "0xA8C588")]
	private void Start()
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xA8C61C", Offset = "0xA8C61C", VA = "0xA8C61C")]
	private void Update()
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xA8C5B4", Offset = "0xA8C5B4", VA = "0xA8C5B4")]
	private void SetBones()
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xA8C70C", Offset = "0xA8C70C", VA = "0xA8C70C")]
	public TentacleTest()
	{
	}
}
[Token(Token = "0x20003DA")]
public class TentacleTouchExcavation : MonoBehaviour
{
	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C0999 levelDirector;

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xA8C71C", Offset = "0xA8C71C", VA = "0xA8C71C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xA8C720", Offset = "0xA8C720", VA = "0xA8C720")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xA8C798", Offset = "0xA8C798", VA = "0xA8C798")]
	public TentacleTouchExcavation()
	{
	}
}
[Token(Token = "0x20003DB")]
public class TentaculumReplay : MonoBehaviour
{
	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level tentaculumLevel;

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xA8C7A0", Offset = "0xA8C7A0", VA = "0xA8C7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xA8C9D4", Offset = "0xA8C9D4", VA = "0xA8C9D4")]
	public TentaculumReplay()
	{
	}
}
[Token(Token = "0x20003DC")]
public class ThreatLevelShow : MonoBehaviour
{
	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int startingThreatLevel;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useThreatLevelMultiplier;

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xA8C9DC", Offset = "0xA8C9DC", VA = "0xA8C9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0xA8CB1C", Offset = "0xA8CB1C", VA = "0xA8CB1C")]
	public ThreatLevelShow()
	{
	}
}
[Token(Token = "0x20003DD")]
public class TimeScaleIndependentUpdate : MonoBehaviour
{
	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseWhenGameIsPaused;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double previousTimeSinceStartup;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double realtimeSinceStartup;

	[Token(Token = "0x170001A2")]
	public double deltaTime
	{
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xA8CB84", Offset = "0xA8CB84", VA = "0xA8CB84")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6001889")]
		[Address(RVA = "0xA8CB8C", Offset = "0xA8CB8C", VA = "0xA8CB8C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0xA8CB2C", Offset = "0xA8CB2C", VA = "0xA8CB2C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0xA8CB4C", Offset = "0xA8CB4C", VA = "0xA8CB4C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0xA8CB94", Offset = "0xA8CB94", VA = "0xA8CB94")]
	public TimeScaleIndependentUpdate()
	{
	}
}
[Token(Token = "0x20003DE")]
public class TipManager : MonoBehaviour
{
	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuestSystem questSytem;

	[Token(Token = "0x4001832")]
	private const string generalTipString = "titleTip_phase";

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> allTips;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int gameTipPhase;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TipManager _instance;

	[Token(Token = "0x170001A3")]
	public static TipManager Instance
	{
		[Token(Token = "0x600188B")]
		[Address(RVA = "0xA8CBA4", Offset = "0xA8CBA4", VA = "0xA8CBA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0xA8CD30", Offset = "0xA8CD30", VA = "0xA8CD30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0xA8CDB0", Offset = "0xA8CDB0", VA = "0xA8CDB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0xA8CE30", Offset = "0xA8CE30", VA = "0xA8CE30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0xA8CE34", Offset = "0xA8CE34", VA = "0xA8CE34")]
	public void InitTips()
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0xA8CED4", Offset = "0xA8CED4", VA = "0xA8CED4")]
	public void ReadTips(string searchword, int _currentTipPhase)
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0xA8D098", Offset = "0xA8D098", VA = "0xA8D098")]
	private void CallUpdateTips(bool editorLevelStart = false)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0xA8CE38", Offset = "0xA8CE38", VA = "0xA8CE38")]
	[ContextMenu("UpdateTips")]
	public void UpdateTips()
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xA8D09C", Offset = "0xA8D09C", VA = "0xA8D09C")]
	private void CheckThrough(bool writeTips)
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0xA8D368", Offset = "0xA8D368", VA = "0xA8D368")]
	[ContextMenu("LogTip")]
	public void LogTip()
	{
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0xA8D3D0", Offset = "0xA8D3D0", VA = "0xA8D3D0")]
	public string GetTipID()
	{
		return null;
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0xA8D468", Offset = "0xA8D468", VA = "0xA8D468")]
	public TipManager()
	{
	}
}
[Token(Token = "0x20003DF")]
public class TitleType : MonoBehaviour
{
	[Token(Token = "0x20003E0")]
	public enum Type
	{
		[Token(Token = "0x4001841")]
		main,
		[Token(Token = "0x4001842")]
		location,
		[Token(Token = "0x4001843")]
		tip,
		[Token(Token = "0x4001844")]
		unlocks
	}

	[Token(Token = "0x20003E1")]
	public enum TitleMode
	{
		[Token(Token = "0x4001846")]
		none,
		[Token(Token = "0x4001847")]
		loadStartScene,
		[Token(Token = "0x4001848")]
		resetLevel,
		[Token(Token = "0x4001849")]
		backToMenu,
		[Token(Token = "0x400184A")]
		startContinueStory,
		[Token(Token = "0x400184B")]
		nextLevel,
		[Token(Token = "0x400184C")]
		options,
		[Token(Token = "0x400184D")]
		backFromOptions,
		[Token(Token = "0x400184E")]
		startGameButton,
		[Token(Token = "0x400184F")]
		sandbox,
		[Token(Token = "0x4001850")]
		unlockedSandbox,
		[Token(Token = "0x4001851")]
		unlockedSideQuest,
		[Token(Token = "0x4001852")]
		unlockedObjects,
		[Token(Token = "0x4001853")]
		unlockedMagnet,
		[Token(Token = "0x4001854")]
		manual
	}

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type titleType;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 offset;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string titleText;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string titleTextID;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string tipText;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string tipTextID;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string locationText;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string locationTextID;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRCameraViewSmoothingIDP myVRCameraViewSmoothingIDP;

	[Token(Token = "0x6001897")]
	[Address(RVA = "0xA8D478", Offset = "0xA8D478", VA = "0xA8D478")]
	public static string CheckString(string txt)
	{
		return null;
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0xA8D598", Offset = "0xA8D598", VA = "0xA8D598")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0xA8D618", Offset = "0xA8D618", VA = "0xA8D618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0xA8D698", Offset = "0xA8D698", VA = "0xA8D698")]
	private void ShowTitle(TitleMode _titleMode)
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0xA8E17C", Offset = "0xA8E17C", VA = "0xA8E17C")]
	public static void GetTitle(TitleMode _titleMode, Type _titleType, Level _level, bool editorCall = false)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0xA8D9E0", Offset = "0xA8D9E0", VA = "0xA8D9E0")]
	public static string MainTitle(TitleMode _titleMode, Level _level)
	{
		return null;
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0xA8DC88", Offset = "0xA8DC88", VA = "0xA8DC88")]
	public static string Tip(TitleMode _titleMode, Level _level, bool editorCall = false)
	{
		return null;
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0xA8DFB4", Offset = "0xA8DFB4", VA = "0xA8DFB4")]
	public static string Location(TitleMode _titleMode, Level _level)
	{
		return null;
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0xA8E1B4", Offset = "0xA8E1B4", VA = "0xA8E1B4")]
	public static void GetContent()
	{
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xA8E294", Offset = "0xA8E294", VA = "0xA8E294")]
	public TitleType()
	{
	}
}
[Token(Token = "0x20003E2")]
public class ToggleConveyor : MonoBehaviour
{
	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool conveyorActive;

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0xA8E29C", Offset = "0xA8E29C", VA = "0xA8E29C")]
	private void Start()
	{
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0xA8E348", Offset = "0xA8E348", VA = "0xA8E348")]
	private void Toggle()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0xA8E2A4", Offset = "0xA8E2A4", VA = "0xA8E2A4")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0xA8E358", Offset = "0xA8E358", VA = "0xA8E358")]
	public ToggleConveyor()
	{
	}
}
[Token(Token = "0x20003E3")]
public class TrackerORB : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	[CompilerGenerated]
	private sealed class <FireLaser>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackerORB <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xA8EF50", Offset = "0xA8EF50", VA = "0xA8EF50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xA8EF98", Offset = "0xA8EF98", VA = "0xA8EF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xA8E910", Offset = "0xA8E910", VA = "0xA8E910")]
		[DebuggerHidden]
		public <FireLaser>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xA8EDD8", Offset = "0xA8EDD8", VA = "0xA8EDD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xA8EDDC", Offset = "0xA8EDDC", VA = "0xA8EDDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xA8EF58", Offset = "0xA8EF58", VA = "0xA8EF58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 rot;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float followSpeed;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float trackingSpeedFactor;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentTrackingFactor;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rayStart;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform visualLaser;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 visualScale;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> trespassingID;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LayerMask myLayermask;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float duration;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion originalRotation;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Transform> targetsList;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float distance;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform idleTarget;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform idleTargetCenter;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float maxTrackingDistance;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool detachAndFollow;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject deactivateGroup;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform myParent;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool inActive;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float timer;

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0xA8E368", Offset = "0xA8E368", VA = "0xA8E368")]
	private void Start()
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0xA8E514", Offset = "0xA8E514", VA = "0xA8E514")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0xA8E558", Offset = "0xA8E558", VA = "0xA8E558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0xA8E5D8", Offset = "0xA8E5D8", VA = "0xA8E5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0xA8E49C", Offset = "0xA8E49C", VA = "0xA8E49C")]
	private void StartIdleTargets()
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0xA8E658", Offset = "0xA8E658", VA = "0xA8E658")]
	private void IdleTargets()
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0xA8E7C4", Offset = "0xA8E7C4", VA = "0xA8E7C4")]
	private void Trespassing(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0xA8E89C", Offset = "0xA8E89C", VA = "0xA8E89C")]
	[IteratorStateMachine(typeof(<FireLaser>d__30))]
	private IEnumerator FireLaser()
	{
		return null;
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0xA8E938", Offset = "0xA8E938", VA = "0xA8E938")]
	private void LaserVisual()
	{
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0xA8EA2C", Offset = "0xA8EA2C", VA = "0xA8EA2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0xA8ECE4", Offset = "0xA8ECE4", VA = "0xA8ECE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0xA8EDB4", Offset = "0xA8EDB4", VA = "0xA8EDB4")]
	public TrackerORB()
	{
	}
}
[Token(Token = "0x20003E5")]
public class TrailerTools : MonoBehaviour
{
	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGroup;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool trailerToolsEnabled;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputField;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Dropdown dropDown;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] detachPressed;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool released;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool useCameraCenter;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform controllerTransform;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform humanHighlighter;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform humanConvoLoadedHighlighter;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image modeButtonImage;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TrailerTools _instance;

	[Token(Token = "0x170001A6")]
	public static TrailerTools Instance
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xA8EFA0", Offset = "0xA8EFA0", VA = "0xA8EFA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public bool TrailerToolsEnabled
	{
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xA8F204", Offset = "0xA8F204", VA = "0xA8F204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xA8F20C", Offset = "0xA8F20C", VA = "0xA8F20C")]
		set
		{
		}
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0xA8F12C", Offset = "0xA8F12C", VA = "0xA8F12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0xA8F1B4", Offset = "0xA8F1B4", VA = "0xA8F1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0xA8F1B8", Offset = "0xA8F1B8", VA = "0xA8F1B8")]
	public void ToggleSelectionMode()
	{
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0xA8F18C", Offset = "0xA8F18C", VA = "0xA8F18C")]
	private void SetTrailerTools(bool which)
	{
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0xA8F218", Offset = "0xA8F218", VA = "0xA8F218")]
	public void InjectPressed()
	{
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0xA8F488", Offset = "0xA8F488", VA = "0xA8F488")]
	public void HideToolsButton()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0xA8F358", Offset = "0xA8F358", VA = "0xA8F358")]
	private BubbleToCharacter GetTargetBubble(bool convoLoadedRequired)
	{
		return null;
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0xA8F490", Offset = "0xA8F490", VA = "0xA8F490")]
	public void OpenDebuggerButton()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0xA8F534", Offset = "0xA8F534", VA = "0xA8F534")]
	public void TalkPressed()
	{
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0xA8F5F4", Offset = "0xA8F5F4", VA = "0xA8F5F4")]
	public void ClearFocusedPressed()
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0xA8F6CC", Offset = "0xA8F6CC", VA = "0xA8F6CC")]
	public void NoMovingFocused()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0xA8F7E0", Offset = "0xA8F7E0", VA = "0xA8F7E0")]
	public void SetForwardFocusedPressed()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0xA8F880", Offset = "0xA8F880", VA = "0xA8F880")]
	public void LookToCameraPressed()
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0xA8F930", Offset = "0xA8F930", VA = "0xA8F930")]
	public void HideConvosPressed()
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0xA8F9FC", Offset = "0xA8F9FC", VA = "0xA8F9FC")]
	public void ClearAllConvos()
	{
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0xA8FC0C", Offset = "0xA8FC0C", VA = "0xA8FC0C")]
	public TrailerTools()
	{
	}
}
[Token(Token = "0x20003E6")]
public class TrespassingAllowed : MonoBehaviour
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool remove;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool explode;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float chancePercentage;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ignore;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool anyZone;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> zoneID;

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0xA8FC78", Offset = "0xA8FC78", VA = "0xA8FC78")]
	public TrespassingAllowed()
	{
	}
}
[Token(Token = "0x20003E7")]
public class TriggerRepeater : MonoBehaviour
{
	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DroneRotors droneRotors;

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0xA8FC90", Offset = "0xA8FC90", VA = "0xA8FC90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xA8FCAC", Offset = "0xA8FCAC", VA = "0xA8FCAC")]
	public TriggerRepeater()
	{
	}
}
[Token(Token = "0x20003E8")]
public class TriggerTargetIgnore : MonoBehaviour
{
	[Token(Token = "0x60018CD")]
	[Address(RVA = "0xA8FCB4", Offset = "0xA8FCB4", VA = "0xA8FCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xA8FCB8", Offset = "0xA8FCB8", VA = "0xA8FCB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xA8FCBC", Offset = "0xA8FCBC", VA = "0xA8FCBC")]
	public TriggerTargetIgnore()
	{
	}
}
[Token(Token = "0x20003E9")]
public class TutorialBillboards : MonoBehaviour
{
	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmProShadow;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D[] deviceImages;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D[] deviceImagesOculusOverrides;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material billboardMat;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlatformManager.deviceController deviceControllerList;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string locaID;

	[Token(Token = "0x400188C")]
	private const string category = "control_";

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool usePlatformOverrides;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D fallBackTexture;

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xA8FCC4", Offset = "0xA8FCC4", VA = "0xA8FCC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0xA8FD18", Offset = "0xA8FD18", VA = "0xA8FD18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0xA8FD98", Offset = "0xA8FD98", VA = "0xA8FD98")]
	private void SetBillboard()
	{
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xA90300", Offset = "0xA90300", VA = "0xA90300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0xA90388", Offset = "0xA90388", VA = "0xA90388")]
	public TutorialBillboards()
	{
	}
}
[Token(Token = "0x20003EA")]
public class TutorialSigns : MonoBehaviour
{
	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string locaID;

	[Token(Token = "0x4001891")]
	private const string category = "sign_";

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0xA90390", Offset = "0xA90390", VA = "0xA90390")]
	private void Start()
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0xA90404", Offset = "0xA90404", VA = "0xA90404")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0xA90408", Offset = "0xA90408", VA = "0xA90408")]
	public TutorialSigns()
	{
	}
}
[Token(Token = "0x20003EB")]
public class UFOLab : MonoBehaviour
{
	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetManual target;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody armRB;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody sensorRB;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject statusFeedback;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool blocked;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody clamp;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool lockedAtStart;

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xA90410", Offset = "0xA90410", VA = "0xA90410")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xA9051C", Offset = "0xA9051C", VA = "0xA9051C")]
	public void Block(bool which)
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0xA90418", Offset = "0xA90418", VA = "0xA90418")]
	public void Lock(bool which)
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xA90528", Offset = "0xA90528", VA = "0xA90528")]
	public UFOLab()
	{
	}
}
[Token(Token = "0x20003EC")]
public class EightSegmentDisplay : MonoBehaviour
{
	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] Digits;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] Numbers;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ID;

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0xA90538", Offset = "0xA90538", VA = "0xA90538")]
	public void SetNumber(int num, string _ID = "")
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xA906E0", Offset = "0xA906E0", VA = "0xA906E0")]
	public EightSegmentDisplay()
	{
	}
}
[Token(Token = "0x20003ED")]
public class GenericPhysicalButtonListener : MonoBehaviour
{
	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent pressEvent;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonTrigger ButtonTrigger;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isReleased;

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0xA906E8", Offset = "0xA906E8", VA = "0xA906E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0xA90734", Offset = "0xA90734", VA = "0xA90734")]
	public GenericPhysicalButtonListener()
	{
	}
}
[Token(Token = "0x20003EE")]
public class SwitchButton : MonoBehaviour
{
	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint hinge;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isActivated;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool lastActivated;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool activatedTarget;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool switchLock;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool onDown;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool offDown;

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xA90744", Offset = "0xA90744", VA = "0xA90744")]
	private void Start()
	{
	}

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0xA90868", Offset = "0xA90868", VA = "0xA90868")]
	private void ToggleSwitch()
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0xA90768", Offset = "0xA90768", VA = "0xA90768")]
	private void SetSwitch(bool _isActivated)
	{
	}

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0xA9091C", Offset = "0xA9091C", VA = "0xA9091C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0xA90A18", Offset = "0xA90A18", VA = "0xA90A18")]
	public void TellCollision(string which)
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0xA90AEC", Offset = "0xA90AEC", VA = "0xA90AEC")]
	public SwitchButton()
	{
	}
}
[Token(Token = "0x20003EF")]
public class SwitchButtonCollider : MonoBehaviour
{
	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButton buttonMain;

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0xA90AF4", Offset = "0xA90AF4", VA = "0xA90AF4")]
	public SwitchButtonCollider()
	{
	}
}
[Token(Token = "0x20003F0")]
public class SwitchButtonPhysical : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	public delegate void OnGroupButtonChangeDelegate(SwitchButtonPhysical _lever, string _groupID, bool mode);

	[Token(Token = "0x20003F2")]
	[CompilerGenerated]
	private sealed class <CollisionDisable>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchButtonPhysical <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xA91CE4", Offset = "0xA91CE4", VA = "0xA91CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xA91D2C", Offset = "0xA91D2C", VA = "0xA91D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xA916A0", Offset = "0xA916A0", VA = "0xA916A0")]
		[DebuggerHidden]
		public <CollisionDisable>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xA91B9C", Offset = "0xA91B9C", VA = "0xA91B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xA91BA0", Offset = "0xA91BA0", VA = "0xA91BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xA91CEC", Offset = "0xA91CEC", VA = "0xA91CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string LeverSound;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string buttonID;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string groupID;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool groupDeactivate;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string offText;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string onText;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro offTextTM;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro onTextTM;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HingeJoint hinge;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isActivated;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject activatedButton;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useMotor;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxAngle;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startRotation;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float startAngle;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Rigidbody rb;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool lastActivated;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool activatedTarget;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool switchLock;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private JointSpring js;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JointMotor m;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float targetAngle;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float pressThreshold;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float pressThresholdOverride;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool onDown;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool offDown;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool releaseAfterSwitch;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnEvent;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OffEvent;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isInitialised;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool useType;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool snapBack;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	[Header("can be moved but not activated")]
	public bool lockSwitch;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool callFirstActivation;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool grabbedOnlyActivation;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Grabbable switchGrabbable;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool useHingeGrabbable;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool useSpring;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool detachTentaclesOnForceLimit;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float forceLimit;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator collisionTimeout;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool suppressInitAudio;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool logging;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int dir;

	[Token(Token = "0x14000076")]
	public static event OnGroupButtonChangeDelegate OnGroupButtonChange
	{
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xA90AFC", Offset = "0xA90AFC", VA = "0xA90AFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xA90BB4", Offset = "0xA90BB4", VA = "0xA90BB4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0xA90C6C", Offset = "0xA90C6C", VA = "0xA90C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0xA91164", Offset = "0xA91164", VA = "0xA91164")]
	[ContextMenu("LanguageChange")]
	private void LanguageChange()
	{
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0xA911E4", Offset = "0xA911E4", VA = "0xA911E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0xA913C4", Offset = "0xA913C4", VA = "0xA913C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xA91490", Offset = "0xA91490", VA = "0xA91490")]
	public void SetStartValues()
	{
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xA914C4", Offset = "0xA914C4", VA = "0xA914C4")]
	[ContextMenu("Toggle")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xA914E0", Offset = "0xA914E0", VA = "0xA914E0")]
	public void MultiLeverSwitchOff(bool _which, SwitchButtonPhysical caller)
	{
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xA914FC", Offset = "0xA914FC", VA = "0xA914FC")]
	private void GroupButtonChange(SwitchButtonPhysical _lever, string _groupID, bool _which)
	{
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xA90ED8", Offset = "0xA90ED8", VA = "0xA90ED8")]
	public void SetSwitch(bool _isActivated, bool noEventCall = false)
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xA915BC", Offset = "0xA915BC", VA = "0xA915BC")]
	private void AudioEvent()
	{
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xA91620", Offset = "0xA91620", VA = "0xA91620")]
	private void SetToOff()
	{
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xA9162C", Offset = "0xA9162C", VA = "0xA9162C")]
	[IteratorStateMachine(typeof(<CollisionDisable>d__59))]
	private IEnumerator CollisionDisable()
	{
		return null;
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0xA916C8", Offset = "0xA916C8", VA = "0xA916C8")]
	private void SetCollision(bool which)
	{
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xA917A8", Offset = "0xA917A8", VA = "0xA917A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xA919F4", Offset = "0xA919F4", VA = "0xA919F4")]
	public SwitchButtonPhysical()
	{
	}
}
[Token(Token = "0x20003F3")]
public class SwitchButtonPhysical3States : MonoBehaviour
{
	[Token(Token = "0x20003F4")]
	public delegate void OnLeverUpdateDelegate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps);

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string offText;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string onText;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro speedStepType;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro offTextTM;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro onTextTM;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HingeJoint hinge;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startAngle;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useMotor;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxAngle;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody rb;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private JointMotor m;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float targetAngle;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int dir;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pullDir;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float vel;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float handoverValue;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useType;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int ID;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int maxSpeedSteps;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int speedFactor;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int minStart;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float force;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float newTargetVelocity;

	[Token(Token = "0x14000077")]
	public static event OnLeverUpdateDelegate OnLeverUpdate
	{
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xA91D34", Offset = "0xA91D34", VA = "0xA91D34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001903")]
		[Address(RVA = "0xA91DEC", Offset = "0xA91DEC", VA = "0xA91DEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0xA91EA4", Offset = "0xA91EA4", VA = "0xA91EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0xA92060", Offset = "0xA92060", VA = "0xA92060")]
	private void SetSpeedFactorVis()
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0xA92110", Offset = "0xA92110", VA = "0xA92110")]
	public void StepSpeedFactor()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0xA92130", Offset = "0xA92130", VA = "0xA92130")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0xA92298", Offset = "0xA92298", VA = "0xA92298")]
	public SwitchButtonPhysical3States()
	{
	}
}
[Token(Token = "0x20003F5")]
public class TentacleTriggerButton : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	public delegate void TentacleTriggerButtonDelegate(TentacleTriggerButton button, string id, bool isUp);

	[Token(Token = "0x20003F7")]
	[CompilerGenerated]
	private sealed class <ButtonCooldown>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xA936BC", Offset = "0xA936BC", VA = "0xA936BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xA93704", Offset = "0xA93704", VA = "0xA93704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xA929FC", Offset = "0xA929FC", VA = "0xA929FC")]
		[DebuggerHidden]
		public <ButtonCooldown>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xA935E4", Offset = "0xA935E4", VA = "0xA935E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xA935E8", Offset = "0xA935E8", VA = "0xA935E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xA936C4", Offset = "0xA936C4", VA = "0xA936C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	[CompilerGenerated]
	private sealed class <ButtonPopup>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xA937E4", Offset = "0xA937E4", VA = "0xA937E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xA9382C", Offset = "0xA9382C", VA = "0xA9382C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xA92A98", Offset = "0xA92A98", VA = "0xA92A98")]
		[DebuggerHidden]
		public <ButtonPopup>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xA9370C", Offset = "0xA9370C", VA = "0xA9370C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xA93710", Offset = "0xA93710", VA = "0xA93710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xA937EC", Offset = "0xA937EC", VA = "0xA937EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xA93A10", Offset = "0xA93A10", VA = "0xA93A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xA93A58", Offset = "0xA93A58", VA = "0xA93A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xA92E4C", Offset = "0xA92E4C", VA = "0xA92E4C")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xA93834", Offset = "0xA93834", VA = "0xA93834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xA93838", Offset = "0xA93838", VA = "0xA93838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xA93A18", Offset = "0xA93A18", VA = "0xA93A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonOff;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonOn;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool buttonIsOn;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool blocked;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool tentacleActivatedOnly;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool ignoreTriggers;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool momentarySwitch;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent ButtonDown;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent ButtonUp;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool wasDownBefore;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool useHapticFeedback;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool cameraNeedsToLookAt;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float cameraNeedsToLookAtAngle;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string buttonID;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string customSFX;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool playSFX;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRControllerMapper controller;

	[Token(Token = "0x14000078")]
	public static event TentacleTriggerButtonDelegate OnButtonPressed
	{
		[Token(Token = "0x600190D")]
		[Address(RVA = "0xA924F4", Offset = "0xA924F4", VA = "0xA924F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600190E")]
		[Address(RVA = "0xA925AC", Offset = "0xA925AC", VA = "0xA925AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xA92664", Offset = "0xA92664", VA = "0xA92664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xA92980", Offset = "0xA92980", VA = "0xA92980")]
	public void SetButtonState(bool _which)
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xA92988", Offset = "0xA92988", VA = "0xA92988")]
	[IteratorStateMachine(typeof(<ButtonCooldown>d__23))]
	private IEnumerator ButtonCooldown()
	{
		return null;
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0xA92A24", Offset = "0xA92A24", VA = "0xA92A24")]
	[IteratorStateMachine(typeof(<ButtonPopup>d__24))]
	private IEnumerator ButtonPopup()
	{
		return null;
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0xA92AC0", Offset = "0xA92AC0", VA = "0xA92AC0")]
	[ContextMenu("SimCallOn")]
	public void SimCallOn()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0xA92ACC", Offset = "0xA92ACC", VA = "0xA92ACC")]
	private void CallEvents()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0xA92C4C", Offset = "0xA92C4C", VA = "0xA92C4C")]
	private void DoHapticFeedback(GameObject _go)
	{
	}

	[Token(Token = "0x6001916")]
	[Address(RVA = "0xA92DD8", Offset = "0xA92DD8", VA = "0xA92DD8")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__29))]
	private IEnumerator ButtonHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6001917")]
	[Address(RVA = "0xA926F4", Offset = "0xA926F4", VA = "0xA926F4")]
	private void CheckForTentacles(bool _initForceOn = false)
	{
	}

	[Token(Token = "0x6001918")]
	[Address(RVA = "0xA92E74", Offset = "0xA92E74", VA = "0xA92E74")]
	private bool LookAtCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0xA930EC", Offset = "0xA930EC", VA = "0xA930EC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600191A")]
	[Address(RVA = "0xA93280", Offset = "0xA93280", VA = "0xA93280")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xA9336C", Offset = "0xA9336C", VA = "0xA9336C")]
	public TentacleTriggerButton()
	{
	}
}
[Token(Token = "0x20003FA")]
public class UniversalRemote : MonoBehaviour
{
	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent pressEvent;

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xA93A60", Offset = "0xA93A60", VA = "0xA93A60")]
	public void Press()
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xA93A7C", Offset = "0xA93A7C", VA = "0xA93A7C")]
	public UniversalRemote()
	{
	}
}
[Token(Token = "0x20003FB")]
public class UIOnScreenConvo : MonoBehaviour
{
	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextMeshPro textMesh;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro localTextMesh;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform targetTrans;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camTrans;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color clr;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetDiffAngle;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minDist;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxDist;

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xA93A84", Offset = "0xA93A84", VA = "0xA93A84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xA93B0C", Offset = "0xA93B0C", VA = "0xA93B0C")]
	public static void SetText(Transform _talker, string _text)
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0xA93B90", Offset = "0xA93B90", VA = "0xA93B90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001937")]
	[Address(RVA = "0xA93EB4", Offset = "0xA93EB4", VA = "0xA93EB4")]
	public UIOnScreenConvo()
	{
	}
}
[Token(Token = "0x20003FC")]
public class UnlockTrigger : MonoBehaviour
{
	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideIfUnlocked;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Entity entity;

	[Token(Token = "0x6001938")]
	[Address(RVA = "0xA93ED0", Offset = "0xA93ED0", VA = "0xA93ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0xA93FEC", Offset = "0xA93FEC", VA = "0xA93FEC")]
	public void TriggerUnlock()
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0xA940AC", Offset = "0xA940AC", VA = "0xA940AC")]
	public UnlockTrigger()
	{
	}
}
[Token(Token = "0x20003FD")]
public class UnparentOnStart : MonoBehaviour
{
	[Token(Token = "0x600193B")]
	[Address(RVA = "0xA940BC", Offset = "0xA940BC", VA = "0xA940BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0xA940E0", Offset = "0xA940E0", VA = "0xA940E0")]
	public UnparentOnStart()
	{
	}
}
[Token(Token = "0x20003FE")]
public class AssetHelper
{
	[Token(Token = "0x20003FF")]
	[CompilerGenerated]
	private sealed class <LoadAllAssets>d__0<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable where T : UnityEngine.Object
	{
		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x170001B0")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001943")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001945")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001940")]
		[DebuggerHidden]
		public <LoadAllAssets>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001941")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001942")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001946")]
		[DebuggerHidden]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x600193D")]
	[IteratorStateMachine(typeof(<LoadAllAssets>d__0<>))]
	public static IEnumerable<T> LoadAllAssets<T>() where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x600193E")]
	public static void MarkAllAssetsAsDirty<T>() where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0xA940E8", Offset = "0xA940E8", VA = "0xA940E8")]
	public AssetHelper()
	{
	}
}
[Token(Token = "0x2000400")]
public class PSScanner : MonoBehaviour
{
	[Token(Token = "0x6001948")]
	[Address(RVA = "0xA940F0", Offset = "0xA940F0", VA = "0xA940F0")]
	public PSScanner()
	{
	}
}
[Token(Token = "0x2000401")]
[RequireComponent(typeof(Material))]
public class UVAnimator : MonoBehaviour
{
	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2[] UVSpeeds;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6001949")]
	[Address(RVA = "0xA940F8", Offset = "0xA940F8", VA = "0xA940F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0xA940FC", Offset = "0xA940FC", VA = "0xA940FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0xA94248", Offset = "0xA94248", VA = "0xA94248")]
	public UVAnimator()
	{
	}
}
[Token(Token = "0x2000402")]
public class VaultLogic : MonoBehaviour
{
	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isTriggered;

	[Token(Token = "0x600194C")]
	[Address(RVA = "0xA94250", Offset = "0xA94250", VA = "0xA94250")]
	private void Awake()
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0xA94270", Offset = "0xA94270", VA = "0xA94270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0xA942F0", Offset = "0xA942F0", VA = "0xA942F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xA94370", Offset = "0xA94370", VA = "0xA94370")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0xA94438", Offset = "0xA94438", VA = "0xA94438")]
	public void UnlockPlug()
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0xA94530", Offset = "0xA94530", VA = "0xA94530")]
	public void VaultJointBreak()
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0xA94534", Offset = "0xA94534", VA = "0xA94534")]
	public VaultLogic()
	{
	}
}
[Token(Token = "0x2000403")]
public class C_HelicopterManagerDeliverMagnets : MonoBehaviour
{
	[Token(Token = "0x2000404")]
	public delegate void OnDroneSpawnedDelegate(Drone _drone);

	[Token(Token = "0x2000405")]
	public enum State
	{
		[Token(Token = "0x4001932")]
		none,
		[Token(Token = "0x4001933")]
		init,
		[Token(Token = "0x4001934")]
		routeTo,
		[Token(Token = "0x4001935")]
		deliveryWait,
		[Token(Token = "0x4001936")]
		routeBack
	}

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] waypoints;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public State routeState;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helicopterPrefab;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Drone helicopter;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool loopWayPoints;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool stopAtLastWaypoint;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject payloadPrefab;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool delegatesInit;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 hingeAxis;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool lockAngularLimits;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool dropPayloadOnDesinationReached;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool usePayload;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool randomWaypoint;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float manualMassAddon;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform exitTarget;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int startingWaypoint;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool enableCollisionWithPayload;

	[Token(Token = "0x14000079")]
	public event OnDroneSpawnedDelegate OnDroneSpawned
	{
		[Token(Token = "0x6001953")]
		[Address(RVA = "0xA9453C", Offset = "0xA9453C", VA = "0xA9453C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xA945D8", Offset = "0xA945D8", VA = "0xA945D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001955")]
	[Address(RVA = "0xA94674", Offset = "0xA94674", VA = "0xA94674")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0xA94678", Offset = "0xA94678", VA = "0xA94678")]
	private void Start()
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0xA94A80", Offset = "0xA94A80", VA = "0xA94A80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0xA9493C", Offset = "0xA9493C", VA = "0xA9493C")]
	private void SetRoute()
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0xA94690", Offset = "0xA94690", VA = "0xA94690")]
	private void LoadChopper()
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xA94E3C", Offset = "0xA94E3C", VA = "0xA94E3C")]
	public void OnTargetReached(Transform t)
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0xA94F64", Offset = "0xA94F64", VA = "0xA94F64")]
	public void OnPackageDelivered(GameObject go)
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0xA950AC", Offset = "0xA950AC", VA = "0xA950AC")]
	public C_HelicopterManagerDeliverMagnets()
	{
	}
}
[Token(Token = "0x2000406")]
public class DamageMaterials : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	public enum State
	{
		[Token(Token = "0x400193E")]
		regular,
		[Token(Token = "0x400193F")]
		damaged,
		[Token(Token = "0x4001940")]
		burned
	}

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material regular;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material damaged;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material burned;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State materialState;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MaterialManager matManager;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyDamageMaterial;

	[Token(Token = "0x6001961")]
	[Address(RVA = "0xA95224", Offset = "0xA95224", VA = "0xA95224")]
	private void Start()
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0xA952D4", Offset = "0xA952D4", VA = "0xA952D4")]
	public void SetDamageMaterial(State _state)
	{
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0xA953F8", Offset = "0xA953F8", VA = "0xA953F8")]
	[ContextMenu("SetDamaged")]
	public void SetDamaged()
	{
	}

	[Token(Token = "0x6001964")]
	[Address(RVA = "0xA95400", Offset = "0xA95400", VA = "0xA95400")]
	[ContextMenu("SetBurned")]
	public void SetBurned()
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0xA95408", Offset = "0xA95408", VA = "0xA95408")]
	public DamageMaterials()
	{
	}
}
[Token(Token = "0x2000408")]
public class Drone : CollisionColliderBase
{
	[Token(Token = "0x2000409")]
	public delegate void OnTargetReachedDelegate(Transform target);

	[Token(Token = "0x200040A")]
	public delegate void OnTargetReachedStaticDelegate(Transform target);

	[Token(Token = "0x200040B")]
	[CompilerGenerated]
	private sealed class <GrabbedCheck>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drone <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0xA99C40", Offset = "0xA99C40", VA = "0xA99C40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xA99C88", Offset = "0xA99C88", VA = "0xA99C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xA99B34", Offset = "0xA99B34", VA = "0xA99B34")]
		[DebuggerHidden]
		public <GrabbedCheck>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xA99B5C", Offset = "0xA99B5C", VA = "0xA99B5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xA99B60", Offset = "0xA99B60", VA = "0xA99B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xA99C48", Offset = "0xA99C48", VA = "0xA99C48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float power;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float realPower;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float turnSpeed;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxTurnSpeed;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minSpeedForMinTurnSpeed;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxVelocity;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 targetOffset;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float forceRangeMax;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minDistForForce;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float powerDistForceFactor;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxPitchAngle;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxRollAngle;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rollToTurnRateFactor;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rollSpeed;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool heliThrust;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float groundEvasionBelow;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float waypointTreshold;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool stopAtWaypoint;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform target;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform[] targetWaypoints;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject waypointGroup;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject visual;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentWaypoint;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool IsGrabbed;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool RandomizeWaypoints;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool allowSameRandomWaypoint;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	public bool loopWaypoints;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool randomFirstWaypoint;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float speedForceFactorMax;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float velocityDebug;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Rigidbody rb;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform trans;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 rot;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 rotDiff;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform flyTrans;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float targetVelocityFactor;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float currentVisualZRot;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float rollToTurnRate;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 dir;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Quaternion qRot;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float dist;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float turnSpeedFactor;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float autoControlTimer;

	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float startDrag;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 visualRotStore;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 visualRotStoreLocal;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float unGrabSelfSteerWait;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float verticalAdjustSpeed;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PayloadManager payloadManager;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool pauseFlight;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool lookTowardsWP;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	public bool stopAtLastWaypoint;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Vector3 sway;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector3 maxSway;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool destroyed;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject[] deactivateOnDisabled;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Header("only relveant as start condition")]
	public bool justHover;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float mass;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<DroneRotors> rotorsList;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int damagedRotors;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int rotors;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool deactivateInWater;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Rigidbody[] attachedRBs;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool ignorePayloadDamage;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform noWPHelper;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool deactivated;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool isInWater;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 realVector;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private FloatRigidbody frb;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Grabbable grabbable;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 modTarget;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public Vector3 torqueTarget;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float uprightTorque;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float steerTorque;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 steerVec;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Quaternion torqueRot;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 torque;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 localRot;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float testRot;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float rotorDamageFactor;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float collisionVelocityDamageFactor;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float heloVelocityDamageTreshhold;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 rotDir;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float speedForceFactor;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Vector3 firstDir;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Vector3 forw;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float distForceFactor;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float powerDistForceFactorStore;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private Vector3 verticalPointAt;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 nrml;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 samePlaneTarget;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float vertDistForceFactor;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float step;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Vector3 newDir;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float targetSpeed;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float temp;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float visRotZTarget;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float rotVAlue;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private Vector3 crossProd;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector3 applyForce;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string lastWaypointCall;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private List<int> wpIndexes;

	[Token(Token = "0x1400007A")]
	public event OnTargetReachedDelegate OnTargetReached
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xA94D9C", Offset = "0xA94D9C", VA = "0xA94D9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xA94B84", Offset = "0xA94B84", VA = "0xA94B84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007B")]
	public static event OnTargetReachedStaticDelegate OnTargetReachedStatic
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xA95418", Offset = "0xA95418", VA = "0xA95418")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001969")]
		[Address(RVA = "0xA954D0", Offset = "0xA954D0", VA = "0xA954D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xA95588", Offset = "0xA95588", VA = "0xA95588")]
	private void Awake()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xA955F8", Offset = "0xA955F8", VA = "0xA955F8")]
	private void GroupCheck()
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xA95814", Offset = "0xA95814", VA = "0xA95814")]
	private void Start()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xA95B88", Offset = "0xA95B88", VA = "0xA95B88")]
	private void SetDeactivates(bool _mode)
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0xA95E50", Offset = "0xA95E50", VA = "0xA95E50")]
	public void RegisterRotor(DroneRotors _rotor)
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0xA95F38", Offset = "0xA95F38", VA = "0xA95F38")]
	public void ReportRotorsDamage(DroneRotors _rotor)
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0xA960E4", Offset = "0xA960E4", VA = "0xA960E4")]
	public void DamageRotors()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0xA9623C", Offset = "0xA9623C", VA = "0xA9623C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xA9650C", Offset = "0xA9650C", VA = "0xA9650C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xA967DC", Offset = "0xA967DC", VA = "0xA967DC")]
	private void PayloadmanagerPackageLoaded(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xA96954", Offset = "0xA96954", VA = "0xA96954")]
	private void PayloadmanagerPackageUnLoaded(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xA96A74", Offset = "0xA96A74", VA = "0xA96A74")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xA96B34", Offset = "0xA96B34", VA = "0xA96B34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xA96BF8", Offset = "0xA96BF8", VA = "0xA96BF8")]
	public void VehicleDamageDestroyCallback()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0xA96A90", Offset = "0xA96A90", VA = "0xA96A90")]
	private void WaterCrash()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0xA96C9C", Offset = "0xA96C9C", VA = "0xA96C9C")]
	private void DisableValues()
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0xA96CE0", Offset = "0xA96CE0", VA = "0xA96CE0")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xA96EAC", Offset = "0xA96EAC", VA = "0xA96EAC")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xA96F7C", Offset = "0xA96F7C", VA = "0xA96F7C")]
	[IteratorStateMachine(typeof(<GrabbedCheck>d__97))]
	private IEnumerator GrabbedCheck()
	{
		return null;
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0xA96FF0", Offset = "0xA96FF0", VA = "0xA96FF0")]
	private void ResetOrientations()
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0xA97028", Offset = "0xA97028", VA = "0xA97028")]
	private void FlightDamage()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0xA97218", Offset = "0xA97218", VA = "0xA97218")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0xA94C24", Offset = "0xA94C24", VA = "0xA94C24")]
	public void AddWayoints(Transform[] _waypoints)
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0xA94D20", Offset = "0xA94D20", VA = "0xA94D20")]
	[ContextMenu("StartRoute")]
	public void StartRoute()
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0xA95CA4", Offset = "0xA95CA4", VA = "0xA95CA4")]
	public void PickRandomWaypoint()
	{
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0xA984D0", Offset = "0xA984D0", VA = "0xA984D0")]
	private void NextWaypoint()
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0xA983E0", Offset = "0xA983E0", VA = "0xA983E0")]
	private void CheckWaypointReached()
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xA986F0", Offset = "0xA986F0", VA = "0xA986F0")]
	public Drone()
	{
	}
}
[Token(Token = "0x200040C")]
public class LoadCompensation : MonoBehaviour
{
	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float debugMass;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useDebugMass;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6001994")]
	[Address(RVA = "0xA99C90", Offset = "0xA99C90", VA = "0xA99C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0xA99CE8", Offset = "0xA99CE8", VA = "0xA99CE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0xA99D50", Offset = "0xA99D50", VA = "0xA99D50")]
	public LoadCompensation()
	{
	}
}
[Token(Token = "0x200040D")]
public class MultiPayload : MonoBehaviour
{
	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PayloadManager[] payloadManagers;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xA99D58", Offset = "0xA99D58", VA = "0xA99D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xA9A3EC", Offset = "0xA9A3EC", VA = "0xA9A3EC")]
	public MultiPayload()
	{
	}
}
[Token(Token = "0x200040E")]
public class PayloadManager : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	public delegate void OnPackageGrabbedDelegate(GameObject package);

	[Token(Token = "0x2000410")]
	public delegate void OnPackageLoadedDelegate(GameObject package);

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint hinge;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform heliAttachPoint;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform loadAttach;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody myRB;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody attachToRB;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody loadRB;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject payload;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject payloadPrefab;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isLoaded;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isDrone;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Drone myDrone;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool unloadOnGrab;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float manualMassAddon;

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float originalMass;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool enableCollision;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool useLine;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float massAdder;

	[Token(Token = "0x1400007C")]
	public event OnPackageGrabbedDelegate OnPackageGrabbed
	{
		[Token(Token = "0x6001999")]
		[Address(RVA = "0xA9A3F4", Offset = "0xA9A3F4", VA = "0xA9A3F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600199A")]
		[Address(RVA = "0xA9A490", Offset = "0xA9A490", VA = "0xA9A490")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007D")]
	public event OnPackageLoadedDelegate OnPackageLoaded
	{
		[Token(Token = "0x600199B")]
		[Address(RVA = "0xA9A52C", Offset = "0xA9A52C", VA = "0xA9A52C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xA9A5C8", Offset = "0xA9A5C8", VA = "0xA9A5C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0xA9A664", Offset = "0xA9A664", VA = "0xA9A664")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0xA9A764", Offset = "0xA9A764", VA = "0xA9A764")]
	[ContextMenu("DetachLoad")]
	public void DetachLoad()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0xA9A8CC", Offset = "0xA9A8CC", VA = "0xA9A8CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0xA9A9A0", Offset = "0xA9A9A0", VA = "0xA9A9A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0xA9AA74", Offset = "0xA9AA74", VA = "0xA9AA74")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0xA9AAFC", Offset = "0xA9AAFC", VA = "0xA9AAFC")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0xA9AB94", Offset = "0xA9AB94", VA = "0xA9AB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0xA99DE8", Offset = "0xA99DE8", VA = "0xA99DE8")]
	public void AddPayload(GameObject _payloadPrefab, bool _create = true, [Optional] Vector3 hingeAxis, bool lockAngularLimits = true, float _manualMassAddon = 0f, float limits = 150f)
	{
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0xA9AD1C", Offset = "0xA9AD1C", VA = "0xA9AD1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0xA9AE68", Offset = "0xA9AE68", VA = "0xA9AE68")]
	private void Update()
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0xA9ACBC", Offset = "0xA9ACBC", VA = "0xA9ACBC")]
	private void SetAnchors()
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0xA9AFAC", Offset = "0xA9AFAC", VA = "0xA9AFAC")]
	public PayloadManager()
	{
	}
}
[Token(Token = "0x2000411")]
public class TrafficLight : MonoBehaviour
{
	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject green;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject red;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSetA;

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xA9B1AC", Offset = "0xA9B1AC", VA = "0xA9B1AC")]
	public void SetLight(bool _setAOn)
	{
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xA9B204", Offset = "0xA9B204", VA = "0xA9B204")]
	public TrafficLight()
	{
	}
}
[Token(Token = "0x2000412")]
public class Vehicle : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	public delegate void WaypointReachedDelegate(Vehicle thisVehicle, VehicleWaypoint _waypoint);

	[Token(Token = "0x2000414")]
	public enum VELSTATE
	{
		[Token(Token = "0x4001A50")]
		zero,
		[Token(Token = "0x4001A51")]
		max,
		[Token(Token = "0x4001A52")]
		half,
		[Token(Token = "0x4001A53")]
		car
	}

	[Token(Token = "0x2000415")]
	public enum EngineType
	{
		[Token(Token = "0x4001A55")]
		car,
		[Token(Token = "0x4001A56")]
		bus,
		[Token(Token = "0x4001A57")]
		mofa,
		[Token(Token = "0x4001A58")]
		none
	}

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("A boat is a boat")]
	public bool isBoat;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool justDriveAhead;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("debug")]
	public VELSTATE velocityMode;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("car turnspeeds randomized from base value")]
	public float turnSpeed;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeedRndFactor;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("cars use velocity / boats addForce")]
	public float maxSpeed;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("look ahead on path to wp")]
	public float lookAheadTargetFactor;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float acceleration;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deceleration;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float brakeForce;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetSpeed;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("if not overridden by wp value")]
	public float waypointThreshold;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTreshhold;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody rb;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform trans;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform target;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform source;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 distanceToTarget;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 driveTo;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentVelocity;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 vehicleDistToLastWaypoint;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 dirSourceToTarget;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 posOnPath;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float speedToTurnSpeedFactor;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool initPositioning;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private VehicleWaypoint vehicleWaypoint;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform[] sensors;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("collision raycast distance")]
	public float minForwardCheckDistance;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("rythm of movement: RND * 1.5")]
	public float rayCheckWait;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool allowLaneChangeAfterBacktrack;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float targetSpeedFactor;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int rayLookAtWaitCount;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool fakeCornerRounding;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("wait stuff")]
	public int blockedWaitBacktrack;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int blockedWaitBacktrackMax;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int backTrackAmountMin;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int backTrackAmountMax;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int afterBacktrackWaitMin;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int afterBacktrackWaitMax;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool endReached;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool useBrakes;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int waterCollisions;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("debug")]
	public bool noSteering;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool isGrabbed;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Grabbable grabbable;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool hasTriggerWaypoint;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private VehicleWaypoint newTriggerWaypoint;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<VehicleWaypoint> newTriggerWaypointList;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool hasWaypoint;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 driveToCorrected;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("debug")]
	public bool noDriving;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int rayRobin;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int blockedCount;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int clearCount;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int forwardDir;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int backTrackAmount;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int afterBacktrackWait;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[Header("stop at blockers tag --> Stop ")]
	public bool trafficLightStop;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool isLoopEnd;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<Rigidbody, Vehicle> vehicleDict;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform helperTrans;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool allowTriggerChange;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float torqueFactor;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentTorqueFactor;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float torqueIncrease;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float maxTorqueFactor;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Header("multliplier for boat force applied")]
	public float boatMotorPower;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float lastWaypointDistance;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool allowBoatsDistanceCheat;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool boatKeepWaypointOnExitTrigger;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int tentacleContacts;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float turnValue;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool turnedOver;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObject smoke;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject fire;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool inWater;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public EngineType engineType;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private EventInstance engineInstance;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private EventDescription speedEventDescription;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PARAMETER_ID speedParameterId;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private EventInstance hornInstance;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float timeInAir;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Header("Use ToggleVehicle()")]
	public bool vehicleOn;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	[Header("No  touch pause / still on grab")]
	public bool ignoreTentacleTouching;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[HideInInspector]
	public int myGroundCollisions;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool allowNoBackwardsForBoats;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	public bool useEvasion;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float evasionDistance;

	[Token(Token = "0x4001A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool allowLastWaypoint;

	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float chanceOfLastWaypoint;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[EventRef]
	public string vehicleOnSfx;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool lookingForNewWaypoint;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int framesForCheat;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool distanceCheatOn;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float setEngineVel;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float engineTresh;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float engineFactor;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool engineRunning;

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float currentEngineFactor;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float forwardAngle;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 toOther;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 velRed;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool blockRollout;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
	private bool justReleased;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
	private bool lastOnGround;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23F")]
	private bool rollout;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool onGround;

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool backforceRollout;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private int temper;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int realTemper;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 forward;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float signed;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float torqueValue;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float signedB;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private int backTrackCount;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool isBackTracking;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float collAngle;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Vector3 hitNormal;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int evasionCheck;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Rigidbody hitRB;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float hitDistance;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private bool hasCarInFront;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private RaycastHit hit;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float checkDistance;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Transform checkSensor;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vehicle vehicleInFront;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private Ray myRay;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float crashAngle;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Rigidbody collisionRB;

	[Token(Token = "0x1400007E")]
	public static event WaypointReachedDelegate OnWaypointReached
	{
		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xA9B214", Offset = "0xA9B214", VA = "0xA9B214")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xA9B2CC", Offset = "0xA9B2CC", VA = "0xA9B2CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0xA9B384", Offset = "0xA9B384", VA = "0xA9B384")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0xA9B764", Offset = "0xA9B764", VA = "0xA9B764")]
	[ContextMenu("ClearWaypoint")]
	public void ClearWaypoint()
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xA9B770", Offset = "0xA9B770", VA = "0xA9B770")]
	public void ToggleVehicle(bool _which)
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xA9BB94", Offset = "0xA9BB94", VA = "0xA9BB94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xA9BBD0", Offset = "0xA9BBD0", VA = "0xA9BBD0")]
	public void VehicleDamageDestroyCallback()
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xA9BC54", Offset = "0xA9BC54", VA = "0xA9BC54")]
	private void InitCarSFX()
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xA9BDFC", Offset = "0xA9BDFC", VA = "0xA9BDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xA9BE00", Offset = "0xA9BE00", VA = "0xA9BE00")]
	public static void ClearVehicleDict()
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xA9BE90", Offset = "0xA9BE90", VA = "0xA9BE90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xA9C370", Offset = "0xA9C370", VA = "0xA9C370")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xA9C668", Offset = "0xA9C668", VA = "0xA9C668")]
	private void WaterStatusChange(bool _inWater)
	{
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0xA9C674", Offset = "0xA9C674", VA = "0xA9C674")]
	public void TriggerSetNewTarget(VehicleWaypoint _vehicleWaypoint)
	{
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0xA9C9C0", Offset = "0xA9C9C0", VA = "0xA9C9C0")]
	public void TriggerRemove(VehicleWaypoint _vehicleWaypoint)
	{
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0xA9CB08", Offset = "0xA9CB08", VA = "0xA9CB08")]
	private void WaypointCheck()
	{
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xA9D080", Offset = "0xA9D080", VA = "0xA9D080")]
	private void PickWaypoint()
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0xA9C80C", Offset = "0xA9C80C", VA = "0xA9C80C")]
	private void NextTarget(VehicleWaypoint _nextWaypoint)
	{
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0xA9D0DC", Offset = "0xA9D0DC", VA = "0xA9D0DC")]
	private void AttachEngineSFX()
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0xA9B910", Offset = "0xA9B910", VA = "0xA9B910")]
	private void EngineSFX()
	{
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0xA9B830", Offset = "0xA9B830", VA = "0xA9B830")]
	private void SetSpeeds()
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0xA9D138", Offset = "0xA9D138", VA = "0xA9D138")]
	private void CheckForwardDir()
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0xA9D2A4", Offset = "0xA9D2A4", VA = "0xA9D2A4")]
	private void Honk(bool _isVehicle)
	{
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0xA9D364", Offset = "0xA9D364", VA = "0xA9D364")]
	public void SetOverrideTarget(Transform newTarget, bool active, float _targetSpeedFactor = 1f, bool _allowTriggerChange = false)
	{
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0xA9D3F0", Offset = "0xA9D3F0", VA = "0xA9D3F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xA9EE14", Offset = "0xA9EE14", VA = "0xA9EE14")]
	private void CheckAngle()
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xA9F330", Offset = "0xA9F330", VA = "0xA9F330")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0xA9E8C8", Offset = "0xA9E8C8", VA = "0xA9E8C8")]
	private void Evasion()
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0xA9F348", Offset = "0xA9F348", VA = "0xA9F348")]
	private void CheckObstacles()
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xA9F680", Offset = "0xA9F680", VA = "0xA9F680")]
	private bool CheckForCollisions()
	{
		return default(bool);
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xA9FDD8", Offset = "0xA9FDD8", VA = "0xA9FDD8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xA9FEC0", Offset = "0xA9FEC0", VA = "0xA9FEC0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xA9FFA8", Offset = "0xA9FFA8", VA = "0xA9FFA8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xAA00EC", Offset = "0xAA00EC", VA = "0xAA00EC")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xAA01B4", Offset = "0xAA01B4", VA = "0xAA01B4")]
	[ContextMenu("Log VehicleDict")]
	public void LogVehicleDict()
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xAA036C", Offset = "0xAA036C", VA = "0xAA036C")]
	public Vehicle()
	{
	}
}
[Token(Token = "0x2000416")]
public class VehicleDamage : MonoBehaviour
{
	[Token(Token = "0x2000417")]
	public delegate void DestroyObjectDelegate();

	[Token(Token = "0x2000418")]
	public delegate void VehicleDamageStatusChangeDelegate(VehicleDamage vehic, Status damageStatus);

	[Token(Token = "0x2000419")]
	public enum Status
	{
		[Token(Token = "0x4001A8F")]
		regular,
		[Token(Token = "0x4001A90")]
		damaged,
		[Token(Token = "0x4001A91")]
		smoking,
		[Token(Token = "0x4001A92")]
		burning,
		[Token(Token = "0x4001A93")]
		exploded,
		[Token(Token = "0x4001A94")]
		water
	}

	[Token(Token = "0x200041A")]
	public enum VType
	{
		[Token(Token = "0x4001A96")]
		car,
		[Token(Token = "0x4001A97")]
		boat,
		[Token(Token = "0x4001A98")]
		plane,
		[Token(Token = "0x4001A99")]
		helicopter,
		[Token(Token = "0x4001A9A")]
		prop
	}

	[Token(Token = "0x200041B")]
	[CompilerGenerated]
	private sealed class <ExplosionForces>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VehicleDamage <>4__this;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <skip>5__3;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody>.Enumerator <>7__wrap3;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xAA3B10", Offset = "0xAA3B10", VA = "0xAA3B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xAA3B58", Offset = "0xAA3B58", VA = "0xAA3B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xAA1DB4", Offset = "0xAA1DB4", VA = "0xAA1DB4")]
		[DebuggerHidden]
		public <ExplosionForces>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xAA2D4C", Offset = "0xAA2D4C", VA = "0xAA2D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xAA2D78", Offset = "0xAA2D78", VA = "0xAA2D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xAA3798", Offset = "0xAA3798", VA = "0xAA3798")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xAA3B18", Offset = "0xAA3B18", VA = "0xAA3B18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform trans;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] smoke;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] fire;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject fx;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody collisionRB;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inWater;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Status damageStatus;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Grabbable grabbable;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isGrabbed;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float hitDamageProgressionCounter;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hitBlock;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float hitFactor;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float damage;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float exploRadius;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float vFXScaleFactor;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask explosionLayers;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float exploPower;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float[] exploPowerMinMax;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DamageMaterials damageMaterials;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool burningStopped;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Damage progress----------------------------")]
	[Space]
	public float[] damageSteps;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float burntime;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float exploUpForce;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float instaExplodeFactor;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Space]
	private float currentBurntime;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float targetBurnTime;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("--------------------------------------------")]
	public VType vehicleType;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] deactivateOnDestruction;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] activateOnDestruction;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform[] VFXattaches;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool replaceOnDestruction;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] replacementenPrefabs;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool swapEntityDefinitionOnDestroyed;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public EntityDefinition destroyedEntityDefinition;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool endBurningInwater;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	public bool showDebugSphere;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Passengers----------------------------")]
	public int[] minMaxPassengers;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SpawnResources.HumanType passengerType;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float chanceToSpawnPassengers;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool useParachute;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool invincible;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float totalDamage;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float timedCheckStep;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 explosionPosition;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool explosionStarted;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float minCol;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float maxCol;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float lastColSFX;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float[] minMaxWeight;

	[Token(Token = "0x1400007F")]
	public event DestroyObjectDelegate OnDestroyObject
	{
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xA9C2D4", Offset = "0xA9C2D4", VA = "0xA9C2D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xA9C530", Offset = "0xA9C530", VA = "0xA9C530")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000080")]
	public static event VehicleDamageStatusChangeDelegate OnVehicleDamageStatusChange
	{
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xAA0594", Offset = "0xAA0594", VA = "0xAA0594")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xAA064C", Offset = "0xAA064C", VA = "0xAA064C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0xAA0704", Offset = "0xAA0704", VA = "0xAA0704")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0xAA0AFC", Offset = "0xAA0AFC", VA = "0xAA0AFC")]
	private void DestroyArray(GameObject[] go)
	{
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0xAA0BEC", Offset = "0xAA0BEC", VA = "0xAA0BEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0xAA0D7C", Offset = "0xAA0D7C", VA = "0xAA0D7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0xAA0BE0", Offset = "0xAA0BE0", VA = "0xAA0BE0")]
	private void SetBurntime()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0xAA0ED4", Offset = "0xAA0ED4", VA = "0xAA0ED4")]
	private void WaterStatus(GameObject _which, bool _inWater)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0xAA100C", Offset = "0xAA100C", VA = "0xAA100C")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0xAA1358", Offset = "0xAA1358", VA = "0xAA1358")]
	private void HitCountEnable()
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0xAA1360", Offset = "0xAA1360", VA = "0xAA1360")]
	private GameObject[] CreateVFX(GameObject _prefab)
	{
		return null;
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0xAA1030", Offset = "0xAA1030", VA = "0xAA1030")]
	private void DamageHandling()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0xAA0FD8", Offset = "0xAA0FD8", VA = "0xAA0FD8")]
	private void EndBurning()
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0xAA1B04", Offset = "0xAA1B04", VA = "0xAA1B04")]
	private void SpawnPassengers()
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0xAA1644", Offset = "0xAA1644", VA = "0xAA1644")]
	[ContextMenu("Explode")]
	public void Explode()
	{
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0xAA1D40", Offset = "0xAA1D40", VA = "0xAA1D40")]
	[IteratorStateMachine(typeof(<ExplosionForces>d__70))]
	private IEnumerator ExplosionForces()
	{
		return null;
	}

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0xAA1DDC", Offset = "0xAA1DDC", VA = "0xAA1DDC")]
	private void HitEval(Collision collision)
	{
	}

	[Token(Token = "0x60019EE")]
	[Address(RVA = "0xAA25C8", Offset = "0xAA25C8", VA = "0xAA25C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60019EF")]
	[Address(RVA = "0xAA261C", Offset = "0xAA261C", VA = "0xAA261C")]
	public void SpeedUpBurning(float speedUpfactor)
	{
	}

	[Token(Token = "0x60019F0")]
	[Address(RVA = "0xAA2638", Offset = "0xAA2638", VA = "0xAA2638")]
	public void HazardDamage(float _timeInc)
	{
	}

	[Token(Token = "0x60019F1")]
	[Address(RVA = "0xAA27C4", Offset = "0xAA27C4", VA = "0xAA27C4")]
	public void ExplosionAddDamage(float _damage)
	{
	}

	[Token(Token = "0x60019F2")]
	[Address(RVA = "0xAA270C", Offset = "0xAA270C", VA = "0xAA270C")]
	public void AddDamage(float _damage)
	{
	}

	[Token(Token = "0x60019F3")]
	[Address(RVA = "0xAA2950", Offset = "0xAA2950", VA = "0xAA2950")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0xAA2990", Offset = "0xAA2990", VA = "0xAA2990")]
	public VehicleDamage()
	{
	}
}
[Token(Token = "0x200041C")]
public class VehicleSpawner : MonoBehaviour
{
	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnInterval;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] spawnPrefabs;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool looping;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 prefabRotation;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool random;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int poolsize;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float spawnTime;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vehicle> vehiclesPool;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool manualSpawnOnly;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0xAA3B60", Offset = "0xAA3B60", VA = "0xAA3B60")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0xAA3E3C", Offset = "0xAA3E3C", VA = "0xAA3E3C")]
	public void InstantiateSpawn()
	{
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0xAA401C", Offset = "0xAA401C", VA = "0xAA401C")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0xAA413C", Offset = "0xAA413C", VA = "0xAA413C")]
	private GameObject GetObjectFromList()
	{
		return null;
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0xAA3C10", Offset = "0xAA3C10", VA = "0xAA3C10")]
	private GameObject CreateAndAdd()
	{
		return null;
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xAA4268", Offset = "0xAA4268", VA = "0xAA4268")]
	public void cleanPool()
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xAA4370", Offset = "0xAA4370", VA = "0xAA4370")]
	public void SwapPrefab(GameObject A, GameObject B, Color col)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xAA4564", Offset = "0xAA4564", VA = "0xAA4564")]
	public VehicleSpawner()
	{
	}
}
[Token(Token = "0x200041D")]
public class VehicleTrafficLightSwitch : MonoBehaviour
{
	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightsA;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lightsB;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waitTime;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lightsAStart;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrafficLight[] lightsVisuals;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform sensors;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool lightsAOn;

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xAA45F4", Offset = "0xAA45F4", VA = "0xAA45F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xAA4664", Offset = "0xAA4664", VA = "0xAA4664")]
	private void HideRenderers()
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0xAA4770", Offset = "0xAA4770", VA = "0xAA4770")]
	private void ToggleLights()
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0xAA481C", Offset = "0xAA481C", VA = "0xAA481C")]
	public VehicleTrafficLightSwitch()
	{
	}
}
[Token(Token = "0x200041E")]
[ExecuteInEditMode]
public class VehicleWaypoint : MonoBehaviour
{
	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VehicleWaypoint myWaypoint;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform myWaypointTransform;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VehicleWaypoint myNextWaypoint;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VehicleWaypoint myPreviousWaypoint;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject triggerVolume;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject roadVis;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer renderer;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lengthThing;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float roadWidthOverride;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float roadWidth;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WaypointGroup myGroup;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float targetSpeedFactor;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool hideRoad;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool allowLaneChange;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float thresholdOverride;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int laneChangeID;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float laneChangeChance;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool noChangingOnThis;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool disableVehicle;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vehicle vehicle;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody colRB;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 pos;

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0xAA4834", Offset = "0xAA4834", VA = "0xAA4834")]
	public void RemoveThisWaypoint()
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0xAA4838", Offset = "0xAA4838", VA = "0xAA4838")]
	public void RedrawTrigger()
	{
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0xAA49A0", Offset = "0xAA49A0", VA = "0xAA49A0")]
	private void SetPos(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0xAA4C58", Offset = "0xAA4C58", VA = "0xAA4C58")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0xAA4E58", Offset = "0xAA4E58", VA = "0xAA4E58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0xAA5044", Offset = "0xAA5044", VA = "0xAA5044")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0xAA53CC", Offset = "0xAA53CC", VA = "0xAA53CC")]
	public VehicleWaypoint()
	{
	}
}
[Token(Token = "0x200041F")]
[ExecuteInEditMode]
public class WaypointGroup : MonoBehaviour
{
	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VehicleWaypoint[] allWaypoints;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> waypoints;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool looping;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int groupID;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color wpColor;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool showGizmos;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isBoatWaypoint;

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0xAA5408", Offset = "0xAA5408", VA = "0xAA5408")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0xAA5A38", Offset = "0xAA5A38", VA = "0xAA5A38")]
	public GameObject GetPreviousWaypoint(VehicleWaypoint wp)
	{
		return null;
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0xAA5AE8", Offset = "0xAA5AE8", VA = "0xAA5AE8")]
	public void RedrawWaypointTriggers()
	{
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0xAA58E4", Offset = "0xAA58E4", VA = "0xAA58E4")]
	private void HideRenderers()
	{
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0xAA5BE8", Offset = "0xAA5BE8", VA = "0xAA5BE8")]
	public void ReverseOrder()
	{
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0xAA5438", Offset = "0xAA5438", VA = "0xAA5438")]
	public void CheckChildrenWaypoints()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0xAA5DC4", Offset = "0xAA5DC4", VA = "0xAA5DC4")]
	public void PlaceToGround()
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0xAA5FAC", Offset = "0xAA5FAC", VA = "0xAA5FAC")]
	public WaypointGroup()
	{
	}
}
[Token(Token = "0x2000420")]
public class WeightCounterForce : MonoBehaviour
{
	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable grabbable;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float counterFactor;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float diff;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetHeight;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ForceMode forceMode;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speedFactor;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 sway;

	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 maxSway;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool allowGrabbedHeightChange;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool useSpawnHeigt;

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0xAA5FBC", Offset = "0xAA5FBC", VA = "0xAA5FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0xAA6108", Offset = "0xAA6108", VA = "0xAA6108")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0xAA6240", Offset = "0xAA6240", VA = "0xAA6240")]
	public WeightCounterForce()
	{
	}
}
[Token(Token = "0x2000421")]
[CreateAssetMenu(fileName = "Version", menuName = "Version", order = 1)]
public class VersionNumber : ScriptableObject
{
	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pcVersionNumber;

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0xAA6274", Offset = "0xAA6274", VA = "0xAA6274")]
	public VersionNumber()
	{
	}
}
[Token(Token = "0x2000422")]
public class VersionSign : MonoBehaviour
{
	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xAA627C", Offset = "0xAA627C", VA = "0xAA627C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xAA6300", Offset = "0xAA6300", VA = "0xAA6300")]
	public VersionSign()
	{
	}
}
[Token(Token = "0x2000423")]
public class VoiceParameterArea : CollisionBase
{
	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string voiceParameter;

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0xAA6308", Offset = "0xAA6308", VA = "0xAA6308", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0xAA6414", Offset = "0xAA6414", VA = "0xAA6414")]
	public VoiceParameterArea()
	{
	}
}
[Token(Token = "0x2000424")]
public class Vortex : MonoBehaviour
{
	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cam;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0xAA641C", Offset = "0xAA641C", VA = "0xAA641C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0xAA64A4", Offset = "0xAA64A4", VA = "0xAA64A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0xAA663C", Offset = "0xAA663C", VA = "0xAA663C")]
	public Vortex()
	{
	}
}
[Token(Token = "0x2000425")]
public class VRCameraLookHelper : MonoBehaviour
{
	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform VRlookHelper;

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0xAA6644", Offset = "0xAA6644", VA = "0xAA6644")]
	private void CreateLookHelper()
	{
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0xAA6734", Offset = "0xAA6734", VA = "0xAA6734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0xAA6738", Offset = "0xAA6738", VA = "0xAA6738")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0xAA6870", Offset = "0xAA6870", VA = "0xAA6870")]
	public VRCameraLookHelper()
	{
	}
}
[Token(Token = "0x2000426")]
public class VRCameraViewSmoothing : MonoBehaviour
{
	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int middleAmount;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float followFactor;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform helper;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 dir;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> middledPosition;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform transformToSmooth;

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xAA6878", Offset = "0xAA6878", VA = "0xAA6878")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0xAA6988", Offset = "0xAA6988", VA = "0xAA6988")]
	private void ForcePos()
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0xAA6A2C", Offset = "0xAA6A2C", VA = "0xAA6A2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0xAA6C68", Offset = "0xAA6C68", VA = "0xAA6C68")]
	public VRCameraViewSmoothing()
	{
	}
}
[Token(Token = "0x2000427")]
public class VRCameraViewSmoothingIDP : TimeScaleIndependentUpdate
{
	[Token(Token = "0x2000428")]
	[CompilerGenerated]
	private sealed class <ShowTitle>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRCameraViewSmoothingIDP <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xAA73D0", Offset = "0xAA73D0", VA = "0xAA73D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xAA7418", Offset = "0xAA7418", VA = "0xAA7418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xAA6E64", Offset = "0xAA6E64", VA = "0xAA6E64")]
		[DebuggerHidden]
		public <ShowTitle>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xAA7264", Offset = "0xAA7264", VA = "0xAA7264", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xAA7268", Offset = "0xAA7268", VA = "0xAA7268", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xAA73D8", Offset = "0xAA73D8", VA = "0xAA73D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform VRCamera;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 offset;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int middleAmount;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float followFactor;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 dir;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> middledPosition;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform transformToSmooth;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float newDeltaTime;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform trans;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool initialised;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startPosition;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x6001A32")]
	[Address(RVA = "0xAA6D00", Offset = "0xAA6D00", VA = "0xAA6D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A33")]
	[Address(RVA = "0xAA6D38", Offset = "0xAA6D38", VA = "0xAA6D38")]
	private void Init()
	{
	}

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0xAA6DF0", Offset = "0xAA6DF0", VA = "0xAA6DF0")]
	[IteratorStateMachine(typeof(<ShowTitle>d__13))]
	private IEnumerator ShowTitle()
	{
		return null;
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0xAA6E8C", Offset = "0xAA6E8C", VA = "0xAA6E8C")]
	public void StopReveal()
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0xAA6E94", Offset = "0xAA6E94", VA = "0xAA6E94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0xAA6EBC", Offset = "0xAA6EBC", VA = "0xAA6EBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0xAA6EF4", Offset = "0xAA6EF4", VA = "0xAA6EF4")]
	public void ForcePos()
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0xAA6FE0", Offset = "0xAA6FE0", VA = "0xAA6FE0")]
	private void OverlayUpdate()
	{
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0xAA71A4", Offset = "0xAA71A4", VA = "0xAA71A4", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0xAA71D0", Offset = "0xAA71D0", VA = "0xAA71D0")]
	public VRCameraViewSmoothingIDP()
	{
	}
}
[Token(Token = "0x2000429")]
public class VRInputOculusOpenXR : VRInputOpenXR
{
	[Token(Token = "0x6001A42")]
	[Address(RVA = "0xAA7420", Offset = "0xAA7420", VA = "0xAA7420")]
	public VRInputOculusOpenXR()
	{
	}
}
[Token(Token = "0x200042A")]
public class VRInputOpenXR : MonoBehaviour
{
	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRControllerMapper vrControllerMapper;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerMapper.actionType action;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputActionReference inputActionReference;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hand;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool buttonDown;

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0xAA7430", Offset = "0xAA7430", VA = "0xAA7430", Slot = "4")]
	public virtual void Init(int _hand, VRControllerMapper.actionType _action, InputActionReference _inputActionReference)
	{
	}

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0xAA7474", Offset = "0xAA7474", VA = "0xAA7474", Slot = "5")]
	public virtual void Action(bool _mode)
	{
	}

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0xAA74BC", Offset = "0xAA74BC", VA = "0xAA74BC", Slot = "6")]
	public virtual void Action(Vector2 _dir)
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0xAA74E0", Offset = "0xAA74E0", VA = "0xAA74E0", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0xAA7428", Offset = "0xAA7428", VA = "0xAA7428")]
	public VRInputOpenXR()
	{
	}
}
[Token(Token = "0x200042B")]
public class CalculateVolume : MonoBehaviour
{
	[Token(Token = "0x6001A48")]
	[Address(RVA = "0xAA75A4", Offset = "0xAA75A4", VA = "0xAA75A4")]
	public static float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(float);
	}

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0xAA7600", Offset = "0xAA7600", VA = "0xAA7600")]
	public static float VolumeOfMesh(Mesh mesh)
	{
		return default(float);
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0xAA7730", Offset = "0xAA7730", VA = "0xAA7730")]
	public CalculateVolume()
	{
	}
}
[Token(Token = "0x200042C")]
public class DelayedEnableCollisions : MonoBehaviour
{
	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0xAA7738", Offset = "0xAA7738", VA = "0xAA7738")]
	public void Init(Rigidbody _rb, float delay = 1f)
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0xAA77C4", Offset = "0xAA77C4", VA = "0xAA77C4")]
	private void EnableCollision()
	{
	}

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0xAA77E4", Offset = "0xAA77E4", VA = "0xAA77E4")]
	public DelayedEnableCollisions()
	{
	}
}
[Token(Token = "0x200042D")]
public class FloatingObjectsManager : MonoBehaviour
{
	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FloatRigidbody> floatRigidbodies;

	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int maxFloatRBs;

	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int minPrio;

	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0xAA77EC", Offset = "0xAA77EC", VA = "0xAA77EC")]
	public static void ResetManager()
	{
	}

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0xAA78A8", Offset = "0xAA78A8", VA = "0xAA78A8")]
	public static void ClearList()
	{
	}

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0xAA7940", Offset = "0xAA7940", VA = "0xAA7940")]
	public static void ResetMinPrio()
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0xAA7988", Offset = "0xAA7988", VA = "0xAA7988")]
	public static void SetMinPrio(int _minPrio)
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xAA79D4", Offset = "0xAA79D4", VA = "0xAA79D4")]
	public static int Floaters()
	{
		return default(int);
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xAA7A38", Offset = "0xAA7A38", VA = "0xAA7A38")]
	private static bool RemoveFloater(int _checkPrio)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xAA7D2C", Offset = "0xAA7D2C", VA = "0xAA7D2C")]
	[ContextMenu("Log floatRigidbodies")]
	private void LogFloaters()
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0xAA7E94", Offset = "0xAA7E94", VA = "0xAA7E94")]
	public static void WaterStatusChange(FloatRigidbody _floatRB, bool _inWater)
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0xAA80C8", Offset = "0xAA80C8", VA = "0xAA80C8")]
	public FloatingObjectsManager()
	{
	}
}
[Token(Token = "0x200042E")]
public class FloatRigidbody : MonoBehaviour
{
	[Token(Token = "0x200042F")]
	public delegate void FloaterWaterStatusChangeDelegate(bool _which);

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool overrideColliderFloatType;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FloatingObject.FLOATTYPE overrideType;

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numberOfColliders;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float totalVolume;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatingObject> colliders;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideSecondsToFloat;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float secondsToFloat;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeToFullSink;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool quickSinkOnExit;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool overrideSkipStep;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int skipStep;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool overrideDynamicFactor;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float groupDynamicFactor;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float defaultDynamicFactor;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isInWater;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool wasInWater;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool optimiseDeactivatePossible;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool noWaterTriggerBasedOptimisation;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int startSkipStep;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int outOfWaterWait;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int outOfWaterWaitMax;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool overrideFluidDensity;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float fluidDensity;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool floaterTouchingWater;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int sinkPriority;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool sleepEnabled;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool forceSink;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool useIntertiaTensorHack;

	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float intertiaTensorFactor;

	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int SkipStepInc;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool lastTouchingWater;

	[Token(Token = "0x14000081")]
	public event FloaterWaterStatusChangeDelegate OnFloaterWaterStatusChange
	{
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xA9C190", Offset = "0xA9C190", VA = "0xA9C190")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xA9C5CC", Offset = "0xA9C5CC", VA = "0xA9C5CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0xAA80D0", Offset = "0xAA80D0", VA = "0xAA80D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0xAA846C", Offset = "0xAA846C", VA = "0xAA846C")]
	public void ForceFloatPrioGamePlayObjects()
	{
	}

	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0xAA8484", Offset = "0xAA8484", VA = "0xAA8484")]
	public void FloatPrioGamePlayObjects()
	{
	}

	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0xAA84A4", Offset = "0xAA84A4", VA = "0xAA84A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0xAA8520", Offset = "0xAA8520", VA = "0xAA8520")]
	public void AddFloatingColliders(FloatingObject _obj, float _volume)
	{
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0xAA8644", Offset = "0xAA8644", VA = "0xAA8644")]
	public void SetManualWaterSurface(bool isTrue, Transform _surfaceTransform, bool skipStepKill)
	{
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0xAA37E8", Offset = "0xAA37E8", VA = "0xAA37E8")]
	[ContextMenu("UpdateFloatingObjects")]
	public void UpdateFloatingObjects()
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0xAA87E8", Offset = "0xAA87E8", VA = "0xAA87E8")]
	private void SetFloatersActive(bool _which)
	{
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0xAA8940", Offset = "0xAA8940", VA = "0xAA8940")]
	public void WaterManagerStatusChangeMessage(GameObject _go, bool _inWater)
	{
	}

	[Token(Token = "0x6001A62")]
	[Address(RVA = "0xAA8A4C", Offset = "0xAA8A4C", VA = "0xAA8A4C")]
	public void TimerSink()
	{
	}

	[Token(Token = "0x6001A63")]
	[Address(RVA = "0xAA7BC0", Offset = "0xAA7BC0", VA = "0xAA7BC0")]
	public void ForceSink(float _timeToFullSink = 10f)
	{
	}

	[Token(Token = "0x6001A64")]
	[Address(RVA = "0xAA8A54", Offset = "0xAA8A54", VA = "0xAA8A54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0xAA8BD8", Offset = "0xAA8BD8", VA = "0xAA8BD8")]
	private void InertiaTensorHack()
	{
	}

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0xAA8C50", Offset = "0xAA8C50", VA = "0xAA8C50")]
	private void CheckInsideWater()
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0xAA9390", Offset = "0xAA9390", VA = "0xAA9390")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0xAA9394", Offset = "0xAA9394", VA = "0xAA9394")]
	public FloatRigidbody()
	{
	}
}
[Token(Token = "0x2000430")]
public class NoFloatScript : MonoBehaviour
{
	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xAA9514", Offset = "0xAA9514", VA = "0xAA9514")]
	public NoFloatScript()
	{
	}
}
[Token(Token = "0x2000431")]
public class WaterExitLadder : MonoBehaviour
{
	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HumansInteraction> myCollisionRBs;

	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x4001B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4001B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform checkPoint;

	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 uptarget;

	[Token(Token = "0x4001B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion rot;

	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float uprightTorque;

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xAA951C", Offset = "0xAA951C", VA = "0xAA951C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xAA963C", Offset = "0xAA963C", VA = "0xAA963C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0xAA98EC", Offset = "0xAA98EC", VA = "0xAA98EC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xAA9B2C", Offset = "0xAA9B2C", VA = "0xAA9B2C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0xAA9CE8", Offset = "0xAA9CE8", VA = "0xAA9CE8")]
	public WaterExitLadder()
	{
	}
}
[Token(Token = "0x2000432")]
public class WaterFloatingDetection : MonoBehaviour
{
	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autoAttachComponent;

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0xAA9D18", Offset = "0xAA9D18", VA = "0xAA9D18")]
	private void CheckForColliders(Transform _child, Rigidbody _rb, FloatRigidbody frb)
	{
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0xAA9EC0", Offset = "0xAA9EC0", VA = "0xAA9EC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0xAAA0BC", Offset = "0xAAA0BC", VA = "0xAAA0BC")]
	public WaterFloatingDetection()
	{
	}
}
[Token(Token = "0x2000433")]
public class WaterGroundDeactivate : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	public delegate void OnWaterGroundDeactivateDelegate(Rigidbody _rb);

	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject waterSystem;

	[Token(Token = "0x14000082")]
	public static event OnWaterGroundDeactivateDelegate OnWaterGroundDeactivate
	{
		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xAAA0CC", Offset = "0xAAA0CC", VA = "0xAAA0CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xAAA184", Offset = "0xAAA184", VA = "0xAAA184")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0xAAA23C", Offset = "0xAAA23C", VA = "0xAAA23C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0xAAA510", Offset = "0xAAA510", VA = "0xAAA510")]
	public WaterGroundDeactivate()
	{
	}
}
[Token(Token = "0x2000435")]
public class WaterManager : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	public delegate void WaterStatusChange(GameObject _gameObjectInWater, bool _which);

	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tentacleLast;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Rigidbody, FloatRigidbody> myFloatingDict;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject splashFX;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rippleFX;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] Splashes;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve SplashesFalloff;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject waterFX;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int numObjectsWater;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WaterInterface waterInterface;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject fx;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string waterSFX;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTime;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastTimesfx;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lastTimeRetriggerObject;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float cooldown;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float nextTrigger;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isCollisionSound;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string waterSoftSFX;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string waterMedSFX;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	public string waterStrongSFX;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool audioSystemSwitch;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int staggeredCheckIndex;

	[Token(Token = "0x4001B4A")]
	private const float velocityMaxOut = 4f;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float vel;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float SplashScale;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float splashDelay;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaterManager _instance;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody outCheckRB;

	[Token(Token = "0x4001B50")]
	private const float maxMass = 20000f;

	[Token(Token = "0x4001B51")]
	private const float maxVel = 5f;

	[Token(Token = "0x170001B8")]
	public static WaterManager Instance
	{
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xAA8298", Offset = "0xAA8298", VA = "0xAA8298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000083")]
	public static event WaterStatusChange OnWaterStatusChange
	{
		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xAA0CC4", Offset = "0xAA0CC4", VA = "0xAA0CC4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xAA0E1C", Offset = "0xAA0E1C", VA = "0xAA0E1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0xAAA668", Offset = "0xAAA668", VA = "0xAAA668")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xAAA854", Offset = "0xAAA854", VA = "0xAAA854")]
	private void OutSideCheck()
	{
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xAAAA64", Offset = "0xAAAA64", VA = "0xAAAA64")]
	public void DoParticleWaterEffects(Rigidbody _colRB, Vector3 _position)
	{
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0xAA8F28", Offset = "0xAA8F28", VA = "0xAA8F28")]
	public void DoWaterFX(Rigidbody _colRB)
	{
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0xAAA98C", Offset = "0xAAA98C", VA = "0xAAA98C")]
	private bool InsideLimits(Rigidbody _colRB)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0xAA8414", Offset = "0xAA8414", VA = "0xAA8414")]
	public bool InWater(Rigidbody _rb)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0xAAAE80", Offset = "0xAAAE80", VA = "0xAAAE80")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0xAAB194", Offset = "0xAAB194", VA = "0xAAB194")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0xAAB344", Offset = "0xAAB344", VA = "0xAAB344")]
	public WaterManager()
	{
	}
}
[Token(Token = "0x2000437")]
public class WaterTrigger : MonoBehaviour
{
	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xAAB4D8", Offset = "0xAAB4D8", VA = "0xAAB4D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0xAAB4FC", Offset = "0xAAB4FC", VA = "0xAAB4FC")]
	public WaterTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x2000438")]
public class WeightGameRound
{
	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public GameObject[] Weights;

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0xAAB504", Offset = "0xAAB504", VA = "0xAAB504")]
	public WeightGameRound()
	{
	}
}
[Token(Token = "0x2000439")]
public class WeightGame : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	[CompilerGenerated]
	private sealed class <DelayedSpawn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeightGame <>4__this;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xAAC1B4", Offset = "0xAAC1B4", VA = "0xAAC1B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xAAC1FC", Offset = "0xAAC1FC", VA = "0xAAC1FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xAABD8C", Offset = "0xAABD8C", VA = "0xAABD8C")]
		[DebuggerHidden]
		public <DelayedSpawn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xAABE44", Offset = "0xAABE44", VA = "0xAABE44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xAABE48", Offset = "0xAABE48", VA = "0xAABE48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xAAC1BC", Offset = "0xAAC1BC", VA = "0xAAC1BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeightGameRound[] Rounds;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ConstructionTargetManual> targets;

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeightWatcher[] Scales;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] masses;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int miniGameRound;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] SpawnPoints;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Transform> SpawnPointsCopy;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> SpawnedWeights;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float tresh;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool roundRunning;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelDirector_C116_WeightWatchers LevelDirector;

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0xAAB50C", Offset = "0xAAB50C", VA = "0xAAB50C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0xAAB684", Offset = "0xAAB684", VA = "0xAAB684")]
	[ContextMenu("checkweight")]
	public void CheckWeight()
	{
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xAAB518", Offset = "0xAAB518", VA = "0xAAB518")]
	[ContextMenu("SpawnTargets")]
	public void SpawnRoundTargets()
	{
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xAAB8B8", Offset = "0xAAB8B8", VA = "0xAAB8B8")]
	[ContextMenu("StartNextRound")]
	public void StartRound()
	{
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0xAAB9A4", Offset = "0xAAB9A4", VA = "0xAAB9A4")]
	private void CleanOldRound()
	{
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0xAABCCC", Offset = "0xAABCCC", VA = "0xAABCCC")]
	private void SpawnRoundObjects()
	{
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0xAABD18", Offset = "0xAABD18", VA = "0xAABD18")]
	[IteratorStateMachine(typeof(<DelayedSpawn>d__17))]
	private IEnumerator DelayedSpawn()
	{
		return null;
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0xAABDB4", Offset = "0xAABDB4", VA = "0xAABDB4")]
	public WeightGame()
	{
	}
}
[Token(Token = "0x200043B")]
public class WeightWatcher : MonoBehaviour
{
	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int combinedWeight;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable grabbable;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CollisionKeeper collisionKeeper;

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0xAAC204", Offset = "0xAAC204", VA = "0xAAC204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0xAAB8AC", Offset = "0xAAB8AC", VA = "0xAAB8AC")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0xAAC294", Offset = "0xAAC294", VA = "0xAAC294")]
	private void CheckWeights()
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0xAAC5D4", Offset = "0xAAC5D4", VA = "0xAAC5D4")]
	public WeightWatcher()
	{
	}
}
[Token(Token = "0x200043C")]
public class WoodenBoxExplosion : MonoBehaviour
{
	[Token(Token = "0x200043D")]
	[CompilerGenerated]
	private sealed class <Remove>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WoodenBoxExplosion <>4__this;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xAAC8AC", Offset = "0xAAC8AC", VA = "0xAAC8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xAAC8F4", Offset = "0xAAC8F4", VA = "0xAAC8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xAAC724", Offset = "0xAAC724", VA = "0xAAC724")]
		[DebuggerHidden]
		public <Remove>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xAAC754", Offset = "0xAAC754", VA = "0xAAC754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xAAC758", Offset = "0xAAC758", VA = "0xAAC758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xAAC8B4", Offset = "0xAAC8B4", VA = "0xAAC8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] Pieces;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Center;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Radius;

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0xAAC5DC", Offset = "0xAAC5DC", VA = "0xAAC5DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0xAAC5E0", Offset = "0xAAC5E0", VA = "0xAAC5E0")]
	[ContextMenu("Explode")]
	public void Explode()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0xAAC6B0", Offset = "0xAAC6B0", VA = "0xAAC6B0")]
	[IteratorStateMachine(typeof(<Remove>d__6))]
	private IEnumerator Remove()
	{
		return null;
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0xAAC74C", Offset = "0xAAC74C", VA = "0xAAC74C")]
	public WoodenBoxExplosion()
	{
	}
}
[Token(Token = "0x200043E")]
public class WreckSplitter : MonoBehaviour
{
	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] wreckParts;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int chanceOfSeperation;

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0xAAC8FC", Offset = "0xAAC8FC", VA = "0xAAC8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0xAACAAC", Offset = "0xAACAAC", VA = "0xAACAAC")]
	public WreckSplitter()
	{
	}
}
[Token(Token = "0x200043F")]
public class AnimateRadar : MonoBehaviour
{
	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rim;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool AnimatingRim;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.001f, 1f)]
	public float RimMargin;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RimSpeed;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AnimatingNoise;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 NoiseSpeed;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material Mat;

	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float RimWidth;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float RimFalloff;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 NoiseOffset;

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0xAACABC", Offset = "0xAACABC", VA = "0xAACABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0xAACB84", Offset = "0xAACB84", VA = "0xAACB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0xAACBCC", Offset = "0xAACBCC", VA = "0xAACBCC")]
	public void AnimateRim(bool animate, float margin, float speed)
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0xAACC94", Offset = "0xAACC94", VA = "0xAACC94")]
	public void AnimateNoise(bool animate, Vector3 NoiseOffset)
	{
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0xAACD30", Offset = "0xAACD30", VA = "0xAACD30")]
	public AnimateRadar()
	{
	}
}
[Token(Token = "0x2000440")]
public class SROptions : INotifyPropertyChanged
{
	[Token(Token = "0x2000441")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	public sealed class DisplayNameAttribute : System.ComponentModel.DisplayNameAttribute
	{
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xAB1C3C", Offset = "0xAB1C3C", VA = "0xAB1C3C")]
		public DisplayNameAttribute(string displayName)
		{
		}
	}

	[Token(Token = "0x2000442")]
	[AttributeUsage(AttributeTargets.Property)]
	public sealed class IncrementAttribute : SRDebugger.IncrementAttribute
	{
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xAB1CA4", Offset = "0xAB1CA4", VA = "0xAB1CA4")]
		public IncrementAttribute(double increment)
		{
		}
	}

	[Token(Token = "0x2000443")]
	[AttributeUsage(AttributeTargets.Property)]
	public sealed class NumberRangeAttribute : SRDebugger.NumberRangeAttribute
	{
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xAB1CAC", Offset = "0xAB1CAC", VA = "0xAB1CAC")]
		public NumberRangeAttribute(double min, double max)
		{
		}
	}

	[Token(Token = "0x2000444")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	public sealed class SortAttribute : SRDebugger.SortAttribute
	{
		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xAB1CB4", Offset = "0xAB1CB4", VA = "0xAB1CB4")]
		public SortAttribute(int priority)
		{
		}
	}

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly SROptions _current;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _levelNumber;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _storyNumber;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _questNumber;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _currentLevel;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minDist;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxDist;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _storyString;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _levelString;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _testFloat;

	[Token(Token = "0x170001BD")]
	public static SROptions Current
	{
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xAACD3C", Offset = "0xAACD3C", VA = "0xAACD3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	[Category("!!!CURRENT.navigation")]
	public string CurrentLevel_________________________________
	{
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xAADEBC", Offset = "0xAADEBC", VA = "0xAADEBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	[Category("!!STORY.navigation")]
	public string STORY_____________________
	{
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xAAE580", Offset = "0xAAE580", VA = "0xAAE580")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xAAE598", Offset = "0xAAE598", VA = "0xAAE598")]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	[Category("!LEVEL.navigation")]
	public string LEVEL_____________________
	{
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xAAE718", Offset = "0xAAE718", VA = "0xAAE718")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xAAE730", Offset = "0xAAE730", VA = "0xAAE730")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	[Category("capture")]
	public bool BubbleIconsHidden
	{
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xAAE840", Offset = "0xAAE840", VA = "0xAAE840")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xAAE888", Offset = "0xAAE888", VA = "0xAAE888")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	[Category("capture1")]
	[Sort(0)]
	public bool ToggleSmoothCaptureCam
	{
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xAAE914", Offset = "0xAAE914", VA = "0xAAE914")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xAAE934", Offset = "0xAAE934", VA = "0xAAE934")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	[Sort(0)]
	[Category("capture2")]
	public bool ToggleFlyCam
	{
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xAAE9E4", Offset = "0xAAE9E4", VA = "0xAAE9E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xAAEA04", Offset = "0xAAEA04", VA = "0xAAEA04")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	[NumberRange(0.0, 150.0)]
	[Category("capture2")]
	public int FlyCamSpeed
	{
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xAAEAA0", Offset = "0xAAEAA0", VA = "0xAAEAA0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xAAEB24", Offset = "0xAAEB24", VA = "0xAAEB24")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	[NumberRange(0.0, 150.0)]
	[Category("capture2")]
	public int FlyCamRiseSpeed
	{
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xAAEBF8", Offset = "0xAAEBF8", VA = "0xAAEBF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xAAEC7C", Offset = "0xAAEC7C", VA = "0xAAEC7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	[NumberRange(0.0, 150.0)]
	[Category("capture2")]
	public int FlyCamYawSpeed
	{
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xAAED50", Offset = "0xAAED50", VA = "0xAAED50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xAAEDD4", Offset = "0xAAEDD4", VA = "0xAAEDD4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	[Category("capture2")]
	[NumberRange(0.0, 150.0)]
	public int FlyCamPitchSpeed
	{
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xAAEEA8", Offset = "0xAAEEA8", VA = "0xAAEEA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xAAEF2C", Offset = "0xAAEF2C", VA = "0xAAEF2C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	[Category("capture.screenshots")]
	public bool Screenshots
	{
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xAAF044", Offset = "0xAAF044", VA = "0xAAF044")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xAAF08C", Offset = "0xAAF08C", VA = "0xAAF08C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	[Category("capture.Humans")]
	public bool TalkingTools
	{
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xAAF094", Offset = "0xAAF094", VA = "0xAAF094")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xAAF0B4", Offset = "0xAAF0B4", VA = "0xAAF0B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	[Category("capture1")]
	[Sort(0)]
	public bool RollLock
	{
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xAAF0DC", Offset = "0xAAF0DC", VA = "0xAAF0DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xAAF0FC", Offset = "0xAAF0FC", VA = "0xAAF0FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	[Category("capture1")]
	[Sort(0)]
	public bool PitchLock
	{
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xAAF1C8", Offset = "0xAAF1C8", VA = "0xAAF1C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xAAF1E8", Offset = "0xAAF1E8", VA = "0xAAF1E8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	[Category("capture1")]
	[Sort(0)]
	[NumberRange(1.0, 150.0)]
	public int FOV
	{
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xAAF2B4", Offset = "0xAAF2B4", VA = "0xAAF2B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xAAF338", Offset = "0xAAF338", VA = "0xAAF338")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	[NumberRange(1.0, 30.0)]
	[Sort(0)]
	[Category("capture1")]
	public float PositionSmooth
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xAAF3F8", Offset = "0xAAF3F8", VA = "0xAAF3F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xAAF418", Offset = "0xAAF418", VA = "0xAAF418")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	[Category("capture1")]
	[Sort(0)]
	[NumberRange(1.0, 30.0)]
	public float RotationSmooth
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xAAF4D8", Offset = "0xAAF4D8", VA = "0xAAF4D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xAAF4F8", Offset = "0xAAF4F8", VA = "0xAAF4F8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	[Category("testing.skybox")]
	public bool ToggleSkybox
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xAAF5E0", Offset = "0xAAF5E0", VA = "0xAAF5E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xAAF614", Offset = "0xAAF614", VA = "0xAAF614")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	[Category("testing")]
	public bool SuppressSave
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xAAF7C0", Offset = "0xAAF7C0", VA = "0xAAF7C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xAAF818", Offset = "0xAAF818", VA = "0xAAF818")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	[Category("movement")]
	public bool ToggleVerticalMove
	{
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xAAFC5C", Offset = "0xAAFC5C", VA = "0xAAFC5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xAAFC7C", Offset = "0xAAFC7C", VA = "0xAAFC7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	[Category("movement")]
	public bool ToggleSmoothTurning
	{
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xAAFCC0", Offset = "0xAAFCC0", VA = "0xAAFCC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xAAFCE0", Offset = "0xAAFCE0", VA = "0xAAFCE0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	[Category("movement")]
	public bool Blinders
	{
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xAAFD40", Offset = "0xAAFD40", VA = "0xAAFD40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xAAFD60", Offset = "0xAAFD60", VA = "0xAAFD60")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	[Category("options")]
	public bool Typewriter
	{
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xAAFE88", Offset = "0xAAFE88", VA = "0xAAFE88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xAAFEA8", Offset = "0xAAFEA8", VA = "0xAAFEA8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	[Category("movement")]
	public bool SnapTurningAllowed
	{
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xAAFF9C", Offset = "0xAAFF9C", VA = "0xAAFF9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xAAFFE4", Offset = "0xAAFFE4", VA = "0xAAFFE4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	[Category("movement")]
	public bool UseLimits
	{
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xAB0034", Offset = "0xAB0034", VA = "0xAB0034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xAB007C", Offset = "0xAB007C", VA = "0xAB007C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	[Category("testing.performance")]
	public bool ToggleLightProbes
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xAB0804", Offset = "0xAB0804", VA = "0xAB0804")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xAB085C", Offset = "0xAB085C", VA = "0xAB085C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	[Category("testing.performance")]
	public bool GlobalShakeDeactivated
	{
		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xAB0CF8", Offset = "0xAB0CF8", VA = "0xAB0CF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xAB0D40", Offset = "0xAB0D40", VA = "0xAB0D40")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	[Category("testing.performance")]
	public bool Fog
	{
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xAB0D90", Offset = "0xAB0D90", VA = "0xAB0D90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xAB0D98", Offset = "0xAB0D98", VA = "0xAB0D98")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	[Category("sandbox.performance")]
	[DisplayName("Entites Spawned")]
	public int TotalEntites
	{
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xAB187C", Offset = "0xAB187C", VA = "0xAB187C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001DB")]
	[Category("sandbox.performance")]
	[DisplayName("Entites Max")]
	public int Maxobjects
	{
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xAB18C4", Offset = "0xAB18C4", VA = "0xAB18C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000084")]
	public event SROptionsPropertyChanged PropertyChanged
	{
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xAACE74", Offset = "0xAACE74", VA = "0xAACE74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xAACF10", Offset = "0xAACF10", VA = "0xAACF10")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000085")]
	private event PropertyChangedEventHandler InterfacePropertyChangedEventHandler
	{
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xAAD064", Offset = "0xAAD064", VA = "0xAAD064")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xAAD100", Offset = "0xAAD100", VA = "0xAAD100")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000086")]
	private event PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	{
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xAAD19C", Offset = "0xAAD19C", VA = "0xAAD19C", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xAAD1A0", Offset = "0xAAD1A0", VA = "0xAAD1A0", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0xAACD94", Offset = "0xAACD94", VA = "0xAACD94")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)]
	public static void OnStartup()
	{
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0xAACFAC", Offset = "0xAACFAC", VA = "0xAACFAC")]
	public void OnPropertyChanged(string propertyName)
	{
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0xAAD1A4", Offset = "0xAAD1A4", VA = "0xAAD1A4")]
	[Category("bossfight.testing")]
	public void Boss_Unchained()
	{
	}

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0xAAD234", Offset = "0xAAD234", VA = "0xAAD234")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint1_Destroyed()
	{
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0xAAD2C4", Offset = "0xAAD2C4", VA = "0xAAD2C4")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint2_Destroyed()
	{
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0xAAD354", Offset = "0xAAD354", VA = "0xAAD354")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint3_Destroyed()
	{
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0xAAD3E4", Offset = "0xAAD3E4", VA = "0xAAD3E4")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter1_Destroyed()
	{
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0xAAD474", Offset = "0xAAD474", VA = "0xAAD474")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter2_Destroyed()
	{
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0xAAD504", Offset = "0xAAD504", VA = "0xAAD504")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter3_Destroyed()
	{
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0xAAD594", Offset = "0xAAD594", VA = "0xAAD594")]
	[Category("heist.testing")]
	public void EnableCrane()
	{
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0xAAD624", Offset = "0xAAD624", VA = "0xAAD624")]
	[Category("heist.testing")]
	public void StartFactory()
	{
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0xAAD6B4", Offset = "0xAAD6B4", VA = "0xAAD6B4")]
	[Category("heist.testing")]
	public void SedateSharks()
	{
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0xAAD744", Offset = "0xAAD744", VA = "0xAAD744")]
	[Category("heist.testing")]
	public void DrainPool()
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0xAAD7D4", Offset = "0xAAD7D4", VA = "0xAAD7D4")]
	[Category("heist.testing")]
	public void ProfessorInVault()
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0xAAD864", Offset = "0xAAD864", VA = "0xAAD864")]
	[Category("heist.testing")]
	public void StartGas()
	{
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0xAAD8F4", Offset = "0xAAD8F4", VA = "0xAAD8F4")]
	[Category("Building Texture.testing")]
	[DisplayName("8k")]
	public void SwitchTo8K()
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0xAAD95C", Offset = "0xAAD95C", VA = "0xAAD95C")]
	[DisplayName("4k")]
	[Category("Building Texture.testing")]
	public void SwitchTo4K()
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0xAAD9C4", Offset = "0xAAD9C4", VA = "0xAAD9C4")]
	[DisplayName("1k")]
	[Category("Building Texture.testing")]
	public void SwitchTo1K()
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0xAADA2C", Offset = "0xAADA2C", VA = "0xAADA2C")]
	[Category("Building Texture.testing")]
	public void EnableFakeMips()
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0xAADA94", Offset = "0xAADA94", VA = "0xAADA94")]
	[Category("Building Texture.testing")]
	public void DisableFakeMips()
	{
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0xAADB0C", Offset = "0xAADB0C", VA = "0xAADB0C")]
	[Category("Building Texture range.testing")]
	public void VisualizeTexture()
	{
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0xAADBBC", Offset = "0xAADBBC", VA = "0xAADBBC")]
	[Category("Building Texture range.testing")]
	public void VisualizeMinMax()
	{
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0xAADC6C", Offset = "0xAADC6C", VA = "0xAADC6C")]
	[DisplayName("Max -")]
	[Category("Building Texture range.testing")]
	public void DecreaseMax()
	{
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0xAADD00", Offset = "0xAADD00", VA = "0xAADD00")]
	[Category("Building Texture range.testing")]
	[DisplayName("Max +")]
	public void IncreaseMax()
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0xAADD94", Offset = "0xAADD94", VA = "0xAADD94")]
	[Category("Building Texture range.testing")]
	[DisplayName("Min -")]
	public void DecreaseMin()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0xAADE28", Offset = "0xAADE28", VA = "0xAADE28")]
	[Category("Building Texture range.testing")]
	[DisplayName("Min +")]
	public void IncreaseMin()
	{
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0xAAE21C", Offset = "0xAAE21C", VA = "0xAAE21C")]
	[Category("!!!CURRENT.navigation")]
	public void _()
	{
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0xAAE1A0", Offset = "0xAAE1A0", VA = "0xAAE1A0")]
	private string GetTitle(Story story)
	{
		return null;
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xAAE220", Offset = "0xAAE220", VA = "0xAAE220")]
	[Category("!!STORY.navigation")]
	[DisplayName("<")]
	public void Previous()
	{
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0xAAE4DC", Offset = "0xAAE4DC", VA = "0xAAE4DC")]
	[DisplayName(">")]
	[Category("!!STORY.navigation")]
	public void Next()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0xAAE600", Offset = "0xAAE600", VA = "0xAAE600")]
	[Category("!LEVEL.navigation")]
	[DisplayName("<")]
	public void DecLevel()
	{
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0xAAE614", Offset = "0xAAE614", VA = "0xAAE614")]
	[Category("!LEVEL.navigation")]
	[DisplayName(">")]
	public void IncLevel()
	{
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0xAAE794", Offset = "0xAAE794", VA = "0xAAE794")]
	[Category("LEVEL.navigation")]
	public void LoadSelectedLevel()
	{
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0xAAE2C0", Offset = "0xAAE2C0", VA = "0xAAE2C0")]
	private void GetStoryName()
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0xAAF000", Offset = "0xAAF000", VA = "0xAAF000")]
	[Category("capture2")]
	public void FlyCamPosReset()
	{
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0xAAF5B8", Offset = "0xAAF5B8", VA = "0xAAF5B8")]
	[Category("testing.performance")]
	public void HideObjects()
	{
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0xAAF5D8", Offset = "0xAAF5D8", VA = "0xAAF5D8")]
	[Category("testing.skybox")]
	public void ClearSkybox()
	{
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0xAAF6A0", Offset = "0xAAF6A0", VA = "0xAAF6A0")]
	[Category("testing")]
	public void ToggleWaterRendering()
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0xAAF6C0", Offset = "0xAAF6C0", VA = "0xAAF6C0")]
	[Category("testing")]
	public void DefaultSurface()
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0xAAF6E0", Offset = "0xAAF6E0", VA = "0xAAF6E0")]
	[Category("testing")]
	public void SurfaceNoCull()
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0xAAF700", Offset = "0xAAF700", VA = "0xAAF700")]
	[Category("testing")]
	public void ToggleFoamline()
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0xAAF720", Offset = "0xAAF720", VA = "0xAAF720")]
	[Category("testing")]
	public void SurfaceFoamNoise()
	{
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0xAAF740", Offset = "0xAAF740", VA = "0xAAF740")]
	[Category("testing")]
	public void SurfaceReflectionNoise()
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0xAAF760", Offset = "0xAAF760", VA = "0xAAF760")]
	[Category("testing")]
	public void SurfaceNoNoise()
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0xAAF780", Offset = "0xAAF780", VA = "0xAAF780")]
	[Category("testing")]
	public void SurfaceQuestNoise()
	{
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0xAAF7A0", Offset = "0xAAF7A0", VA = "0xAAF7A0")]
	[Category("testing")]
	public void DebugTryFindSolution()
	{
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0xAAF8DC", Offset = "0xAAF8DC", VA = "0xAAF8DC")]
	[Category("testing")]
	public void SpawnLevelEndBalloon()
	{
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0xAAF8FC", Offset = "0xAAF8FC", VA = "0xAAF8FC")]
	[Category("testing.font")]
	[DisplayName("F>>")]
	public void IncFontZBig()
	{
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0xAAFA50", Offset = "0xAAFA50", VA = "0xAAFA50")]
	[Category("testing.font")]
	[DisplayName("F<<")]
	public void DecFontZBig()
	{
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0xAAFA5C", Offset = "0xAAFA5C", VA = "0xAAFA5C")]
	[Category("testing.font")]
	[DisplayName("F>")]
	public void IncFontZSmall()
	{
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0xAAFA68", Offset = "0xAAFA68", VA = "0xAAFA68")]
	[Category("testing.font")]
	[DisplayName("F<")]
	public void DecFontZSmall()
	{
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0xAAFA74", Offset = "0xAAFA74", VA = "0xAAFA74")]
	[DisplayName("B>>")]
	[Category("testing.font")]
	public void IncBubbleZBig()
	{
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0xAAFBC8", Offset = "0xAAFBC8", VA = "0xAAFBC8")]
	[Category("testing.font")]
	[DisplayName("B<<")]
	public void DecBubbleZBig()
	{
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0xAAFBD4", Offset = "0xAAFBD4", VA = "0xAAFBD4")]
	[DisplayName("B>")]
	[Category("testing.font")]
	public void IncBubbleZSmall()
	{
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0xAAFBE0", Offset = "0xAAFBE0", VA = "0xAAFBE0")]
	[Category("testing.font")]
	[DisplayName("B<")]
	public void DecBubbleZSmall()
	{
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0xAAF908", Offset = "0xAAF908", VA = "0xAAF908")]
	private void ChangeFontZ(float amount)
	{
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0xAAFA80", Offset = "0xAAFA80", VA = "0xAAFA80")]
	private void ChangeBubbleZ(float amount)
	{
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0xAAFBEC", Offset = "0xAAFBEC", VA = "0xAAFBEC")]
	[Category("movement")]
	public void RigUp()
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0xAAFC24", Offset = "0xAAFC24", VA = "0xAAFC24")]
	[Category("movement")]
	public void RigDown()
	{
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0xAAFDD4", Offset = "0xAAFDD4", VA = "0xAAFDD4")]
	[Category("options.save")]
	public void LoadSlot1()
	{
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0xAAFDE0", Offset = "0xAAFDE0", VA = "0xAAFDE0")]
	[Category("options.save")]
	public void LoadSlot2()
	{
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0xAAFDEC", Offset = "0xAAFDEC", VA = "0xAAFDEC")]
	[Category("options.save")]
	public void LoadSlot3()
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0xAAFDF8", Offset = "0xAAFDF8", VA = "0xAAFDF8")]
	[Category("options.save")]
	public void LoadSlot4()
	{
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0xAAFE04", Offset = "0xAAFE04", VA = "0xAAFE04")]
	[Category("options.save")]
	public void LoadSlot5()
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0xAAFE10", Offset = "0xAAFE10", VA = "0xAAFE10")]
	[Category("options.Language")]
	public void English()
	{
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0xAAFE1C", Offset = "0xAAFE1C", VA = "0xAAFE1C")]
	[Category("options.Language")]
	public void German()
	{
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0xAAFE28", Offset = "0xAAFE28", VA = "0xAAFE28")]
	[Category("options.Language")]
	public void French()
	{
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0xAAFE34", Offset = "0xAAFE34", VA = "0xAAFE34")]
	[Category("options.Language")]
	public void Spanish()
	{
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0xAAFE40", Offset = "0xAAFE40", VA = "0xAAFE40")]
	[Category("options.Language")]
	public void Russian()
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0xAAFE4C", Offset = "0xAAFE4C", VA = "0xAAFE4C")]
	[Category("options.Language")]
	public void BrasilPortoguese()
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0xAAFE58", Offset = "0xAAFE58", VA = "0xAAFE58")]
	[Category("options.Language")]
	public void Japanese()
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0xAAFE64", Offset = "0xAAFE64", VA = "0xAAFE64")]
	[Category("options.Language")]
	public void Korean()
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0xAAFE70", Offset = "0xAAFE70", VA = "0xAAFE70")]
	[Category("options.Language")]
	public void SimplifiedChinese()
	{
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0xAAFE7C", Offset = "0xAAFE7C", VA = "0xAAFE7C")]
	[Category("options.Language")]
	public void TraditionalChinese()
	{
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0xAAFF18", Offset = "0xAAFF18", VA = "0xAAFF18")]
	[Category("options")]
	public void ToggleCanvas()
	{
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0xAAFF7C", Offset = "0xAAFF7C", VA = "0xAAFF7C")]
	[Category("options")]
	public void DeleteOptions()
	{
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0xAB0084", Offset = "0xAB0084", VA = "0xAB0084")]
	[Category("navigation")]
	public void ReplayIsland()
	{
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0xAB0138", Offset = "0xAB0138", VA = "0xAB0138")]
	[Category("progression")]
	public void UnlockAllToMenu()
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0xAB01F0", Offset = "0xAB01F0", VA = "0xAB01F0")]
	[Category("progression")]
	public void UnlockAllAndResetLevel()
	{
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0xAB02A8", Offset = "0xAB02A8", VA = "0xAB02A8")]
	[Category("navigation")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0xAB02CC", Offset = "0xAB02CC", VA = "0xAB02CC")]
	[Category("navigation")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0xAB02F0", Offset = "0xAB02F0", VA = "0xAB02F0")]
	[Category("navigation")]
	public void PreviousLevel()
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0xAB0310", Offset = "0xAB0310", VA = "0xAB0310")]
	[Category("navigation")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0xAB0348", Offset = "0xAB0348", VA = "0xAB0348")]
	[Category("progression")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0xAB0404", Offset = "0xAB0404", VA = "0xAB0404")]
	[Category("progression")]
	public void SetLevelComplete()
	{
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0xAB0428", Offset = "0xAB0428", VA = "0xAB0428")]
	[Category("progression")]
	public void MarkThisLevelAsComplete()
	{
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0xAB0448", Offset = "0xAB0448", VA = "0xAB0448")]
	[Category("progression")]
	public void LogQuestStatus()
	{
	}

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0xAB0468", Offset = "0xAB0468", VA = "0xAB0468")]
	[Category("progression")]
	public void LogActiveScenes()
	{
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0xAB0578", Offset = "0xAB0578", VA = "0xAB0578")]
	[Category("options.MS")]
	public void KillWaveMovement()
	{
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0xAB05A8", Offset = "0xAB05A8", VA = "0xAB05A8")]
	[Category("options.MS")]
	public void KillFoamMovement()
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0xAB05D8", Offset = "0xAB05D8", VA = "0xAB05D8")]
	[Category("testing.performance")]
	public void LogCanvasPresent()
	{
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0xAB0694", Offset = "0xAB0694", VA = "0xAB0694")]
	[Category("testing.performance")]
	public void DestroyAllCanvases()
	{
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0xAB06B4", Offset = "0xAB06B4", VA = "0xAB06B4")]
	[Category("testing.performance")]
	public void DefaultFixedUpdate()
	{
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0xAB0704", Offset = "0xAB0704", VA = "0xAB0704")]
	[Category("testing.performance")]
	public void DecreaseFixedUpate()
	{
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0xAB075C", Offset = "0xAB075C", VA = "0xAB075C")]
	[Category("testing.performance")]
	public void IncreaseFixedUpate()
	{
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0xAB07B4", Offset = "0xAB07B4", VA = "0xAB07B4")]
	[Category("testing.performance")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0xAB0920", Offset = "0xAB0920", VA = "0xAB0920")]
	[Category("testing.performance")]
	public void AAX0()
	{
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0xAB092C", Offset = "0xAB092C", VA = "0xAB092C")]
	[Category("testing.performance")]
	public void AAX2()
	{
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0xAB0938", Offset = "0xAB0938", VA = "0xAB0938")]
	[Category("testing.performance")]
	public void AAX4()
	{
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0xAB0944", Offset = "0xAB0944", VA = "0xAB0944")]
	[Category("testing.performance")]
	public void AAX8()
	{
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0xAB0950", Offset = "0xAB0950", VA = "0xAB0950")]
	[Category("testing.performance")]
	public void LogAA()
	{
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xAB09F8", Offset = "0xAB09F8", VA = "0xAB09F8")]
	[Category("testing.performance")]
	public void LogShadows()
	{
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0xAB0AC8", Offset = "0xAB0AC8", VA = "0xAB0AC8")]
	[Category("testing.performance")]
	public void IncOversampling()
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0xAB0B8C", Offset = "0xAB0B8C", VA = "0xAB0B8C")]
	[Category("testing.performance")]
	public void DecOversampling()
	{
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0xAB0C50", Offset = "0xAB0C50", VA = "0xAB0C50")]
	[Category("testing.performance")]
	public void LogOversampling()
	{
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0xAB0DB8", Offset = "0xAB0DB8", VA = "0xAB0DB8")]
	[Category("testing.performance")]
	public void Quest90FPS()
	{
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0xAB0F94", Offset = "0xAB0F94", VA = "0xAB0F94")]
	[Category("testing.performance")]
	public void Quest72FPS()
	{
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0xAB1170", Offset = "0xAB1170", VA = "0xAB1170")]
	[Category("testing.color")]
	public void ColorGamut_Adobe_RGB()
	{
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0xAB11C4", Offset = "0xAB11C4", VA = "0xAB11C4")]
	[Category("testing.color")]
	public void ColorGamut_P3()
	{
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0xAB1218", Offset = "0xAB1218", VA = "0xAB1218")]
	[Category("testing.color")]
	public void ColorGamut_QUEST()
	{
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0xAB126C", Offset = "0xAB126C", VA = "0xAB126C")]
	[Category("testing.color")]
	public void ColorGamut_Rec_2020()
	{
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0xAB12C0", Offset = "0xAB12C0", VA = "0xAB12C0")]
	[Category("testing.color")]
	public void ColorGamut_Rec_709()
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0xAB1314", Offset = "0xAB1314", VA = "0xAB1314")]
	[Category("testing.color")]
	public void ColorGamut_Rift_CV1()
	{
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0xAB1368", Offset = "0xAB1368", VA = "0xAB1368")]
	[Category("testing.color")]
	public void ColorGamut_Rift_S()
	{
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0xAB13BC", Offset = "0xAB13BC", VA = "0xAB13BC")]
	[Category("testing.color")]
	public void ColorGamut_Unknown()
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0xAB1410", Offset = "0xAB1410", VA = "0xAB1410")]
	[Category("testing.color")]
	public void ColorGamut_Unmanaged()
	{
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0xAB1464", Offset = "0xAB1464", VA = "0xAB1464")]
	[Category("testing.EMO")]
	public void EMO_Talk()
	{
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0xAB14CC", Offset = "0xAB14CC", VA = "0xAB14CC")]
	[Category("testing.EMO")]
	public void EMO_Question()
	{
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0xAB1534", Offset = "0xAB1534", VA = "0xAB1534")]
	[Category("testing.EMO")]
	public void EMO_Hello()
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0xAB159C", Offset = "0xAB159C", VA = "0xAB159C")]
	[Category("testing.EMO")]
	public void EMO_Fear()
	{
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0xAB1604", Offset = "0xAB1604", VA = "0xAB1604")]
	[Category("testing.EMO")]
	public void EMO_Angry()
	{
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0xAB166C", Offset = "0xAB166C", VA = "0xAB166C")]
	[Category("testing.EMO")]
	public void EMO_Cheer()
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0xAB16D4", Offset = "0xAB16D4", VA = "0xAB16D4")]
	[Category("testing.EMO")]
	public void EMO_Cough()
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0xAB173C", Offset = "0xAB173C", VA = "0xAB173C")]
	[Category("testing.EMO")]
	public void EMO_Sympathy()
	{
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0xAB17A4", Offset = "0xAB17A4", VA = "0xAB17A4")]
	[Category("testing.EMO")]
	public void EMO_Disgust()
	{
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0xAB180C", Offset = "0xAB180C", VA = "0xAB180C")]
	[Category("testing.EMO")]
	public void EMO_Test()
	{
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0xAB1874", Offset = "0xAB1874", VA = "0xAB1874")]
	[Category("sandbox")]
	public void ToggleEditorReplicator()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0xAB190C", Offset = "0xAB190C", VA = "0xAB190C")]
	[DisplayName("EntitesMax -")]
	[Category("sandbox.performance")]
	public void EntitesDec()
	{
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0xAB1A04", Offset = "0xAB1A04", VA = "0xAB1A04")]
	[DisplayName("EntitesMax +")]
	[Category("sandbox.performance")]
	public void EntitesInc()
	{
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0xAB1AF8", Offset = "0xAB1AF8", VA = "0xAB1AF8")]
	[Category("sandbox")]
	public void SaveSandbox()
	{
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0xAB1B1C", Offset = "0xAB1B1C", VA = "0xAB1B1C")]
	[Category("sandbox")]
	public void SandboxReload()
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0xAB1B3C", Offset = "0xAB1B3C", VA = "0xAB1B3C")]
	[Category("sandbox")]
	public void JSONFieldLoad()
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0xAAE5FC", Offset = "0xAAE5FC", VA = "0xAAE5FC")]
	private void OnValueChanged(string n, object newValue)
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0xAB1B5C", Offset = "0xAB1B5C", VA = "0xAB1B5C")]
	public SROptions()
	{
	}
}
[Token(Token = "0x2000445")]
public delegate void SROptionsPropertyChanged(object sender, string propertyName);
[Token(Token = "0x2000446")]
public class WaterWaveModifier : MonoBehaviour
{
	[Token(Token = "0x2000447")]
	private struct Wave
	{
		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 position;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float progress;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float height;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float radius;

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xAB20EC", Offset = "0xAB20EC", VA = "0xAB20EC")]
		public Vector4 ToVector4()
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x4001B84")]
	private const int MaxWavesCount = 2;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int wavesProperty;

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Wave> waves;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector4[] wavesUniformArray;

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0xAB1E18", Offset = "0xAB1E18", VA = "0xAB1E18")]
	public static void AddWave(Vector3 position, float radius, float height)
	{
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0xAB1F24", Offset = "0xAB1F24", VA = "0xAB1F24")]
	public static float GetWaves(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0xAB210C", Offset = "0xAB210C", VA = "0xAB210C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0xAB2124", Offset = "0xAB2124", VA = "0xAB2124")]
	private void UpdateWaves()
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0xAB22E4", Offset = "0xAB22E4", VA = "0xAB22E4")]
	private void UpdateUniforms()
	{
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0xAB244C", Offset = "0xAB244C", VA = "0xAB244C")]
	public WaterWaveModifier()
	{
	}
}
namespace Water
{
	[Token(Token = "0x2000448")]
	public static class Gerstner
	{
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xAB2578", Offset = "0xAB2578", VA = "0xAB2578")]
		public static void Apply(ref Vector3 point, WaterPreset preset, float time)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xAB2624", Offset = "0xAB2624", VA = "0xAB2624")]
		private static float GetNoise(Vector2 x)
		{
			return default(float);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xAB28BC", Offset = "0xAB28BC", VA = "0xAB28BC")]
		private static float GetHash(float n)
		{
			return default(float);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xAB2904", Offset = "0xAB2904", VA = "0xAB2904")]
		private static float Frac(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xAB2864", Offset = "0xAB2864", VA = "0xAB2864")]
		private static Vector2 Frac(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xAB2938", Offset = "0xAB2938", VA = "0xAB2938")]
		private static float Floor(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xAB2814", Offset = "0xAB2814", VA = "0xAB2814")]
		private static Vector2 Floor(Vector2 v)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000449")]
	[ExecuteInEditMode]
	public class WaterPreset : MonoBehaviour
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Min(0f)]
		[Header("Shape")]
		public float scale;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Min(0f)]
		public float steepness;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Min(0f)]
		public float length;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Min(0f)]
		public float height;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Min(0f)]
		public float speed;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Min(0f)]
		public float stretch;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 360f)]
		public float direction;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Surface Appearance")]
		public Color surfaceColor;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(1f, 16f)]
		public float surfaceFresnelAngle;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 0.1f)]
		public float surfaceFresnelFade;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color surfaceFresnelColor;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(1f, 16f)]
		public float surfaceSpecularStrength;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Surface Reflections")]
		[Min(0.1f)]
		public float surfaceReflectionsScale;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Min(0f)]
		public float surfaceReflectionsSpeed;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0f, 1f)]
		public float surfaceReflectionsLight;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0f, 1f)]
		public float surfaceReflectionsSpecular;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color surfaceReflectionsColor;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 1f)]
		[Header("Surface Foam")]
		public float surfaceFoamWavesSticking;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Min(0f)]
		public float surfaceFoamSpeed;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Range(0f, 1f)]
		public float surfaceFoamDensity;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Min(0.1f)]
		public float surfaceFoamScale;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color surfaceFoamColor;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Shore Foam")]
		public Color shoreFoamColor;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Min(0f)]
		public float shoreFoamDistance;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Range(0f, 1f)]
		public float shoreFoamIntensity;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Min(0f)]
		[Header("Shore Foam HQ")]
		public float shoreFoamFrequency;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Min(0f)]
		public float shoreFoamDensity;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Min(0f)]
		public float shoreFoamSpeed;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[Range(0f, 10f)]
		[Header("Underwater Appearance")]
		public float absorption;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color absorptionColor;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Min(0f)]
		public float refractionStrength;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Min(0f)]
		public float refractionIntensity;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Vector4 directionData;

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xAB2968", Offset = "0xAB2968", VA = "0xAB2968")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xAB29C0", Offset = "0xAB29C0", VA = "0xAB29C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xAB2B30", Offset = "0xAB2B30", VA = "0xAB2B30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xAB2A18", Offset = "0xAB2A18", VA = "0xAB2A18")]
		private void UpdateDirection()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xAB2BE4", Offset = "0xAB2BE4", VA = "0xAB2BE4")]
		public WaterPreset()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public static class WaterSystem
	{
		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WaterPreset preset;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float heightOffset;

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xAB2CD4", Offset = "0xAB2CD4", VA = "0xAB2CD4")]
		public static float GetWaterHeight(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xAB2A70", Offset = "0xAB2A70", VA = "0xAB2A70")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xAB2D68", Offset = "0xAB2D68", VA = "0xAB2D68")]
		private static void UpdateGlobalUniforms()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public static class WaterUniform
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Time;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int Scale;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int Length;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int Height;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int Speed;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int Stretch;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int Direction;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int Offset;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int SurfaceColor;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int SurfaceFresnelAngle;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int SurfaceFresnelFade;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int SurfaceFresnelColor;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int SurfaceSpecularStrength;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int SurfaceReflectionsScale;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int SurfaceReflectionsSpeed;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int SurfaceReflectionsLight;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int SurfaceReflectionsSpecular;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int SurfaceReflectionsColor;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int SurfaceFoamWavesSticking;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int SurfaceFoamSpeed;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static int SurfaceFoamDensity;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static int SurfaceFoamScale;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int SurfaceFoamColor;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int ShoreFoamColor;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static int ShoreFoamDistance;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static int ShoreFoamIntensity;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int ShoreFoamFrequency;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static int ShoreFoamDensity;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int ShoreFoamSpeed;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int Absorption;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static int AbsorptionColor;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static int RefractionStrength;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static int RefractionIntensity;
	}
}
namespace Technie.VirtualConsole
{
	[Token(Token = "0x200044C")]
	public class AutoBreakPanel : DebugPanel
	{
		[Token(Token = "0x200044D")]
		[CompilerGenerated]
		private sealed class <BreakTimerRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoBreakPanel <>4__this;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x170001DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BA8")]
				[Address(RVA = "0xAB3E9C", Offset = "0xAB3E9C", VA = "0xAB3E9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BAA")]
				[Address(RVA = "0xAB3EE4", Offset = "0xAB3EE4", VA = "0xAB3EE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xAB3CA4", Offset = "0xAB3CA4", VA = "0xAB3CA4")]
			[DebuggerHidden]
			public <BreakTimerRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xAB3CE4", Offset = "0xAB3CE4", VA = "0xAB3CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xAB3CE8", Offset = "0xAB3CE8", VA = "0xAB3CE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xAB3EA4", Offset = "0xAB3EA4", VA = "0xAB3EA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float breakTimerDelaySecs;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text countdownDisplay;

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xAB3A14", Offset = "0xAB3A14", VA = "0xAB3A14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xAB3AC0", Offset = "0xAB3AC0", VA = "0xAB3AC0", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xAB3AC4", Offset = "0xAB3AC4", VA = "0xAB3AC4", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xAB3AC8", Offset = "0xAB3AC8", VA = "0xAB3AC8", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xAB3ACC", Offset = "0xAB3ACC", VA = "0xAB3ACC")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xAB3B1C", Offset = "0xAB3B1C", VA = "0xAB3B1C")]
		public void OnIncBreakTimer()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xAB3B8C", Offset = "0xAB3B8C", VA = "0xAB3B8C")]
		public void OnDecBreakTimer()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xAB3C04", Offset = "0xAB3C04", VA = "0xAB3C04")]
		public void OnStartBreakTimer()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xAB3C30", Offset = "0xAB3C30", VA = "0xAB3C30")]
		[IteratorStateMachine(typeof(<BreakTimerRoutine>d__11))]
		private IEnumerator BreakTimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xAB3CCC", Offset = "0xAB3CCC", VA = "0xAB3CCC")]
		public AutoBreakPanel()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class AutoScreenshot : DebugPanel
	{
		[Token(Token = "0x200044F")]
		[CompilerGenerated]
		private sealed class <TimerRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoScreenshot <>4__this;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <path>5__3;

			[Token(Token = "0x170001DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BBE")]
				[Address(RVA = "0xAB4A28", Offset = "0xAB4A28", VA = "0xAB4A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC0")]
				[Address(RVA = "0xAB4A70", Offset = "0xAB4A70", VA = "0xAB4A70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xAB431C", Offset = "0xAB431C", VA = "0xAB431C")]
			[DebuggerHidden]
			public <TimerRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xAB43B4", Offset = "0xAB43B4", VA = "0xAB43B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xAB43B8", Offset = "0xAB43B8", VA = "0xAB43B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xAB4A30", Offset = "0xAB4A30", VA = "0xAB4A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string screenshotOutputFolder;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float screenshotTimerDelaySecs;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int supersamplingAmount;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hidePanelsOnScreenshot;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text countdownDisplay;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text lastScreenshotPathDisplay;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text captureModeDisplay;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Toggle hidePanelsToggle;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject[] captureModeUiElements;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandAbstraction handAbstraction;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PanelManager panelManager;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ScreenCapture.StereoScreenCaptureMode captureMode;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xAB3EEC", Offset = "0xAB3EEC", VA = "0xAB3EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xAB409C", Offset = "0xAB409C", VA = "0xAB409C", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xAB40A0", Offset = "0xAB40A0", VA = "0xAB40A0", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xAB40A4", Offset = "0xAB40A4", VA = "0xAB40A4", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xAB40A8", Offset = "0xAB40A8", VA = "0xAB40A8")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xAB40F8", Offset = "0xAB40F8", VA = "0xAB40F8")]
		public void OnIncTimer()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xAB4168", Offset = "0xAB4168", VA = "0xAB4168")]
		public void OnDecTimer()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xAB41E0", Offset = "0xAB41E0", VA = "0xAB41E0")]
		public void OnIncSupersampling()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xAB41FC", Offset = "0xAB41FC", VA = "0xAB41FC")]
		public void OnDecSupersampling()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xAB4214", Offset = "0xAB4214", VA = "0xAB4214")]
		public void OnHidePanelsToggled()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xAB4234", Offset = "0xAB4234", VA = "0xAB4234")]
		public void OnNextCaptureMode()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xAB4258", Offset = "0xAB4258", VA = "0xAB4258")]
		public void OnPrevCaptureMode()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xAB3FD0", Offset = "0xAB3FD0", VA = "0xAB3FD0")]
		private void UpdateCaptureModeDisplay()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xAB427C", Offset = "0xAB427C", VA = "0xAB427C")]
		public void OnStartTimer()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xAB42A8", Offset = "0xAB42A8", VA = "0xAB42A8")]
		[IteratorStateMachine(typeof(<TimerRoutine>d__27))]
		private IEnumerator TimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xAB4344", Offset = "0xAB4344", VA = "0xAB4344")]
		public AutoScreenshot()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class DebugPanel : MonoBehaviour
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string panelName;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrDebugDisplay vrDisplay;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAttached;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xAB4A78", Offset = "0xAB4A78", VA = "0xAB4A78")]
		public bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xAB4A80", Offset = "0xAB4A80", VA = "0xAB4A80")]
		public void NotifyOnAttach(VrDebugDisplay _vrDisplay)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xAB4AAC", Offset = "0xAB4AAC", VA = "0xAB4AAC")]
		public void NotifyOnDetach()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xAB4ABC", Offset = "0xAB4ABC", VA = "0xAB4ABC", Slot = "4")]
		public virtual void OnAttach()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xAB4AC0", Offset = "0xAB4AC0", VA = "0xAB4AC0", Slot = "5")]
		public virtual void OnDetach()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xAB4AC4", Offset = "0xAB4AC4", VA = "0xAB4AC4", Slot = "6")]
		public virtual void OnResized(VrDebugDisplay.State _size = VrDebugDisplay.State.NormalSize)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xAB3CDC", Offset = "0xAB3CDC", VA = "0xAB3CDC")]
		public DebugPanel()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class ErrorExample : HandTrigger
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numErrorsTriggered;

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xAB4AC8", Offset = "0xAB4AC8", VA = "0xAB4AC8", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xAB5204", Offset = "0xAB5204", VA = "0xAB5204")]
		public ErrorExample()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class ExceptionExample : HandTrigger
	{
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xAB5214", Offset = "0xAB5214", VA = "0xAB5214", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xAB5328", Offset = "0xAB5328", VA = "0xAB5328")]
		public ExceptionExample()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class HandTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxCollider area;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XrNodeRig xrRig;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasInBox;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xAB5330", Offset = "0xAB5330", VA = "0xAB5330")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xAB53A8", Offset = "0xAB53A8", VA = "0xAB53A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xAB5490", Offset = "0xAB5490", VA = "0xAB5490")]
		private bool IsInBox(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xAB556C", Offset = "0xAB556C", VA = "0xAB556C", Slot = "4")]
		public virtual void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xAB520C", Offset = "0xAB520C", VA = "0xAB520C")]
		public HandTrigger()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class InfoExample : HandTrigger
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int nextBallNumber;

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xAB5570", Offset = "0xAB5570", VA = "0xAB5570", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xAB5764", Offset = "0xAB5764", VA = "0xAB5764")]
		public InfoExample()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class WarningExample : HandTrigger
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numWarningsTriggered;

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xAB5774", Offset = "0xAB5774", VA = "0xAB5774", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xAB587C", Offset = "0xAB587C", VA = "0xAB587C")]
		public WarningExample()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public enum HandType
	{
		[Token(Token = "0x4001BF3")]
		Invalid,
		[Token(Token = "0x4001BF4")]
		Left,
		[Token(Token = "0x4001BF5")]
		Right
	}
	[Token(Token = "0x2000457")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandType type;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackedTransform;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xAB5884", Offset = "0xAB5884", VA = "0xAB5884")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xAB5888", Offset = "0xAB5888", VA = "0xAB5888")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xAB5A14", Offset = "0xAB5A14", VA = "0xAB5A14")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class HandAbstraction : MonoBehaviour
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualConsole virtualConsole;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material laserMaterial;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite cursorSprite;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material cursorMaterial;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PanelManager panelManager;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WandInputModule wandInputModule;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hand leftHand;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hand rightHand;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UiStylus leftStylus;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UiStylus rightStylus;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool wasLeftDown;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool wasRightDown;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float findHandsTimer;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xAB5A1C", Offset = "0xAB5A1C", VA = "0xAB5A1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xAB5A20", Offset = "0xAB5A20", VA = "0xAB5A20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xAB5A24", Offset = "0xAB5A24", VA = "0xAB5A24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xAB5A28", Offset = "0xAB5A28", VA = "0xAB5A28")]
		private void FindHands()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xAB6478", Offset = "0xAB6478", VA = "0xAB6478")]
		private UiLaser CreateLaser()
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xAB5DF4", Offset = "0xAB5DF4", VA = "0xAB5DF4")]
		private UiStylus CreateStylus(HandType type, Transform handTransform, WandInputModule inputModule)
		{
			return null;
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xAB5F00", Offset = "0xAB5F00", VA = "0xAB5F00")]
		private void SetStylusPosition(UiStylus stylus, HandType hand, StylusPosition stylusPosition, Vector3 customStylusPosition)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xAB6690", Offset = "0xAB6690", VA = "0xAB6690")]
		public GameObject GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xAB6698", Offset = "0xAB6698", VA = "0xAB6698")]
		public GameObject GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xAB66A0", Offset = "0xAB66A0", VA = "0xAB66A0")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xAB67D4", Offset = "0xAB67D4", VA = "0xAB67D4")]
		public void TriggerInput(HandType targetHand, bool which)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xAB47B0", Offset = "0xAB47B0", VA = "0xAB47B0")]
		public void SetStylusVisible(bool visible)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xAB695C", Offset = "0xAB695C", VA = "0xAB695C")]
		public HandAbstraction()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class IsolatedEventSystem : EventSystem
	{
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xAB6964", Offset = "0xAB6964", VA = "0xAB6964", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xAB696C", Offset = "0xAB696C", VA = "0xAB696C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xAB6970", Offset = "0xAB6970", VA = "0xAB6970", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xAB69EC", Offset = "0xAB69EC", VA = "0xAB69EC")]
		public IsolatedEventSystem()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class PanelManager : MonoBehaviour
	{
		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrDebugDisplay templateDisplay;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugPanel[] panels;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VrDebugDisplay> displays;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInitialised;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timer;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool minimized;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xAB6A44", Offset = "0xAB6A44", VA = "0xAB6A44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xAB6AD8", Offset = "0xAB6AD8", VA = "0xAB6AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xAB6154", Offset = "0xAB6154", VA = "0xAB6154")]
		public void OnHandsDetected(Camera eventCamera)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xAB70D0", Offset = "0xAB70D0", VA = "0xAB70D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xAB6ADC", Offset = "0xAB6ADC", VA = "0xAB6ADC")]
		private void CreateDisplay(HandType handType, Transform targetHand, Camera eventCamera)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xAB6D10", Offset = "0xAB6D10", VA = "0xAB6D10")]
		private VrDebugDisplay FindDisplay(HandType type)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xAB719C", Offset = "0xAB719C", VA = "0xAB719C")]
		private DebugPanel FindPanel(string panelName)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xAB6E74", Offset = "0xAB6E74", VA = "0xAB6E74")]
		private void AttachPanel(VrDebugDisplay display, DebugPanel panel)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xAB75A4", Offset = "0xAB75A4", VA = "0xAB75A4")]
		public void ChangePanel(int direction, VrDebugDisplay display, DebugPanel currentPanel)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xAB48D4", Offset = "0xAB48D4", VA = "0xAB48D4")]
		public void SetDisplaysVisible(bool visible)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xAB7770", Offset = "0xAB7770", VA = "0xAB7770")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xAB77F8", Offset = "0xAB77F8", VA = "0xAB77F8")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class SRDebuggerPanel : DebugPanel
	{
		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RectTransform rt;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool reStrip;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timer;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrDebugDisplay.State size;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xAB7800", Offset = "0xAB7800", VA = "0xAB7800")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xAB7EA8", Offset = "0xAB7EA8", VA = "0xAB7EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xAB7820", Offset = "0xAB7820", VA = "0xAB7820")]
		private void Strip()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xAB7F00", Offset = "0xAB7F00", VA = "0xAB7F00", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xAB7F04", Offset = "0xAB7F04", VA = "0xAB7F04", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State _size = VrDebugDisplay.State.NormalSize)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xAB827C", Offset = "0xAB827C", VA = "0xAB827C")]
		public SRDebuggerPanel()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class UiIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xAB828C", Offset = "0xAB828C", VA = "0xAB828C", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xAB8294", Offset = "0xAB8294", VA = "0xAB8294")]
		public UiIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class UiLaser : MonoBehaviour
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WandInputModule inputModule;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject cylinder;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastDistance;

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xAB829C", Offset = "0xAB829C", VA = "0xAB829C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xAB655C", Offset = "0xAB655C", VA = "0xAB655C")]
		public void CreateBeam(Material material)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xAB8388", Offset = "0xAB8388", VA = "0xAB8388")]
		public void OnHandDetected(int index, GameObject handObj, WandInputModule wandInputModule)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xAB83BC", Offset = "0xAB83BC", VA = "0xAB83BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xAB88B8", Offset = "0xAB88B8", VA = "0xAB88B8")]
		private float CalcOpacity()
		{
			return default(float);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xAB892C", Offset = "0xAB892C", VA = "0xAB892C")]
		private float CalcOpacity(VrDebugDisplay display)
		{
			return default(float);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xAB8850", Offset = "0xAB8850", VA = "0xAB8850")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xAB89FC", Offset = "0xAB89FC", VA = "0xAB89FC")]
		private bool IsPointingAtPanel(VrDebugDisplay display)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xAB8BBC", Offset = "0xAB8BBC", VA = "0xAB8BBC")]
		public UiLaser()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class UiStylus : MonoBehaviour
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material laserMaterial;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WandInputModule inputModule;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject sphereObj;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject laserObj;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float distanceToPanel;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isButtonDown;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xAB8BD0", Offset = "0xAB8BD0", VA = "0xAB8BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xAB8ED8", Offset = "0xAB8ED8", VA = "0xAB8ED8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xAB93CC", Offset = "0xAB93CC", VA = "0xAB93CC")]
		private void SetVisualEnabled(bool visible)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xAB9188", Offset = "0xAB9188", VA = "0xAB9188")]
		private VrDebugDisplay FindClosestDisplay()
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xAB6768", Offset = "0xAB6768", VA = "0xAB6768")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xAB93EC", Offset = "0xAB93EC", VA = "0xAB93EC")]
		public UiStylus()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public enum StylusPosition
	{
		[Token(Token = "0x4001C21")]
		Bottom,
		[Token(Token = "0x4001C22")]
		Left,
		[Token(Token = "0x4001C23")]
		Right,
		[Token(Token = "0x4001C24")]
		Top,
		[Token(Token = "0x4001C25")]
		Custom
	}
	[Token(Token = "0x2000461")]
	public enum CameraDetectionMode
	{
		[Token(Token = "0x4001C27")]
		Automatic,
		[Token(Token = "0x4001C28")]
		UseExplicitCameraReference,
		[Token(Token = "0x4001C29")]
		UseExplicitCameraName
	}
	[Token(Token = "0x2000462")]
	public class VirtualConsole : MonoBehaviour
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Stylus Locations")]
		public StylusPosition leftStylusPosition;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StylusPosition rightStylusPosition;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Custom Locations")]
		public Vector3 customLeftStylusPosition;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 customRightStylusPosition;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Camera Detection")]
		public CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera explicitVrCameraReference;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string explicitVrCameraName;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject sub;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualConsole instance;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HandAbstraction handAbstraction;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XrNodeRig xrNodeRig;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool isActive;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] menuDown;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool disableVRDebugger;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float downCounter;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool buttonsUp;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float waitTime;

		[Token(Token = "0x170001E0")]
		public static VirtualConsole Instance
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xAB9400", Offset = "0xAB9400", VA = "0xAB9400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xAB9448", Offset = "0xAB9448", VA = "0xAB9448")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xAB9704", Offset = "0xAB9704", VA = "0xAB9704")]
		private void InitSRDEBUG()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xAB9578", Offset = "0xAB9578", VA = "0xAB9578")]
		public void SetVirtualConsole(bool which)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xAB9728", Offset = "0xAB9728", VA = "0xAB9728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xAB992C", Offset = "0xAB992C", VA = "0xAB992C")]
		private void SecondButtonDown(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xAB9968", Offset = "0xAB9968", VA = "0xAB9968")]
		private void SecondButtonUp(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xAB99A0", Offset = "0xAB99A0", VA = "0xAB99A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xAB9AC4", Offset = "0xAB9AC4", VA = "0xAB9AC4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xAB9B80", Offset = "0xAB9B80", VA = "0xAB9B80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xAB9C08", Offset = "0xAB9C08", VA = "0xAB9C08")]
		public GameObject GetHand(HandType hand)
		{
			return null;
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xAB9C80", Offset = "0xAB9C80", VA = "0xAB9C80")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xAB9D18", Offset = "0xAB9D18", VA = "0xAB9D18")]
		private void TriggerDown(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xAB9DD4", Offset = "0xAB9DD4", VA = "0xAB9DD4")]
		private void TriggerUp(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xAB9D38", Offset = "0xAB9D38", VA = "0xAB9D38")]
		public void TriggerInput(HandType targetHand, bool which)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xAB9DF4", Offset = "0xAB9DF4", VA = "0xAB9DF4")]
		public VirtualConsole()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class VrConsole : DebugPanel
	{
		[Token(Token = "0x2000464")]
		private struct LogMessage
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LogType type;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int sequenceNumber;

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xABB258", Offset = "0xABB258", VA = "0xABB258")]
			public LogMessage(string t, string trace, LogType type, int seqNum)
			{
			}
		}

		[Token(Token = "0x2000465")]
		private struct LogLine
		{
			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color colour;

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xABB33C", Offset = "0xABB33C", VA = "0xABB33C")]
			public LogLine(string s, Color c)
			{
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xABB96C", Offset = "0xABB96C", VA = "0xABB96C")]
			public string AsRichText()
			{
				return null;
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xABC0A4", Offset = "0xABC0A4", VA = "0xABC0A4")]
			private static string ToHex(float val)
			{
				return null;
			}
		}

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text consoleArea;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button infoToggleButton;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button warningToggleButton;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button errorToggleButton;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text infoButtonText;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text warningButtonText;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text errorButtonText;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object mutex;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LogMessage> infoMessages;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<LogMessage> warningMessages;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<LogMessage> errorMessages;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int numInfos;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int numWarnings;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int numErrors;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int nextSequenceNumber;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool hasMessagesChanged;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool showInfo;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool showWarnings;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool showErrors;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int maxLines;

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xAB9E68", Offset = "0xAB9E68", VA = "0xAB9E68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xAB9EE8", Offset = "0xAB9EE8", VA = "0xAB9EE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xAB9F68", Offset = "0xAB9F68", VA = "0xAB9F68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xABAFA4", Offset = "0xABAFA4", VA = "0xABAFA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xABAFB4", Offset = "0xABAFB4", VA = "0xABAFB4", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xABAFB8", Offset = "0xABAFB8", VA = "0xABAFB8", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xABAFBC", Offset = "0xABAFBC", VA = "0xABAFBC", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xABAFC0", Offset = "0xABAFC0", VA = "0xABAFC0")]
		private void HandleLog(string text, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xAB9F80", Offset = "0xAB9F80", VA = "0xAB9F80")]
		private void UpdateLogVisual()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xABB770", Offset = "0xABB770", VA = "0xABB770")]
		private bool TryGenerateConsoleText(List<LogLine> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xABB2A0", Offset = "0xABB2A0", VA = "0xABB2A0")]
		private List<LogMessage> FindList(LogType type)
		{
			return null;
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xABB2E8", Offset = "0xABB2E8", VA = "0xABB2E8")]
		private void IncLogCount(LogType type)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xABBA80", Offset = "0xABBA80", VA = "0xABBA80")]
		private int SequenceComparator(LogMessage lhs, LogMessage rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xABB37C", Offset = "0xABB37C", VA = "0xABB37C")]
		private bool ParseTrace(string traceLine, out string namespaceName, out string className, out string methodName, out string fileName, out int lineNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xABBAA0", Offset = "0xABBAA0", VA = "0xABBAA0")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xABBC68", Offset = "0xABBC68", VA = "0xABBC68")]
		public void ToggleInfo()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xABBC80", Offset = "0xABBC80", VA = "0xABBC80")]
		public void ToggleWarnings()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xABBC98", Offset = "0xABBC98", VA = "0xABBC98")]
		public void ToggleErrors()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xABAE5C", Offset = "0xABAE5C", VA = "0xABAE5C")]
		private void UpdateButtonColours()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xABBD50", Offset = "0xABBD50", VA = "0xABBD50")]
		private static void SetColour(Button button, Color col)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xABBDBC", Offset = "0xABBDBC", VA = "0xABBDBC")]
		private static void SetText(Text text, int count)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xABBE10", Offset = "0xABBE10", VA = "0xABBE10")]
		public VrConsole()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class VrDebugDisplay : MonoBehaviour
	{
		[Token(Token = "0x2000467")]
		public enum State
		{
			[Token(Token = "0x4001C66")]
			Collapsed,
			[Token(Token = "0x4001C67")]
			NormalSize,
			[Token(Token = "0x4001C68")]
			LargeSize
		}

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas collapsedCanvas;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform center;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform panelAttach;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float panelScale;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text titleText;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text maximiseText;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PanelManager panelManager;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public Camera eventCamera;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public State state;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private State prevState;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DebugPanel attachedPanel;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool disableCanvasWhenNotInView;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xABC1DC", Offset = "0xABC1DC", VA = "0xABC1DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xABC310", Offset = "0xABC310", VA = "0xABC310")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xABC314", Offset = "0xABC314", VA = "0xABC314")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xABC5C4", Offset = "0xABC5C4", VA = "0xABC5C4")]
		public void AllowDisableCanvasWhenNotInView(bool allow)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xAB6F28", Offset = "0xAB6F28", VA = "0xAB6F28")]
		public void OnToggleSize(bool forceLarge = false)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xAB7144", Offset = "0xAB7144", VA = "0xAB7144")]
		public void OnCollapse()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xABC5D0", Offset = "0xABC5D0", VA = "0xABC5D0")]
		public void OnRestore()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xABC638", Offset = "0xABC638", VA = "0xABC638")]
		public void OnNextPanel()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xABC65C", Offset = "0xABC65C", VA = "0xABC65C")]
		public void OnPrevPanel()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xAB9330", Offset = "0xAB9330", VA = "0xAB9330")]
		public float DistanceTo(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xAB92A4", Offset = "0xAB92A4", VA = "0xAB92A4")]
		public Vector3 FindClosestPoint(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xABC680", Offset = "0xABC680", VA = "0xABC680")]
		private Vector3 ClosestPoint(Vector3 worldPosition, Canvas canvas, Vector2 canvasSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xAB721C", Offset = "0xAB721C", VA = "0xAB721C")]
		public void Attach(DebugPanel newPanel)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xAB772C", Offset = "0xAB772C", VA = "0xAB772C")]
		public void SetDisplayVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xABC730", Offset = "0xABC730", VA = "0xABC730")]
		public VrDebugDisplay()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class VrDebugStats : DebugPanel
	{
		[Token(Token = "0x2000469")]
		private class StatPage
		{
			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, string> stats;

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xABDA54", Offset = "0xABDA54", VA = "0xABDA54")]
			public StatPage(string cat)
			{
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xABD9EC", Offset = "0xABD9EC", VA = "0xABD9EC")]
			public void SetStat(string name, string value)
			{
			}

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xABD1B8", Offset = "0xABD1B8", VA = "0xABD1B8")]
			public void GetStats(List<string> keys, List<string> values)
			{
			}
		}

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text pageTitle;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text fullPanelText;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text leftCollumnText;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text rightCollumnText;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool allowLogging;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, StatPage> pages;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<string> categories;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool hasStatsChanged;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentCategory;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool useTwoCollumns;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xABC748", Offset = "0xABC748", VA = "0xABC748")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xABC7F8", Offset = "0xABC7F8", VA = "0xABC7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xABCE50", Offset = "0xABCE50", VA = "0xABCE50", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xABCEAC", Offset = "0xABCEAC", VA = "0xABCEAC", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xABCEB0", Offset = "0xABCEB0", VA = "0xABCEB0", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xABC87C", Offset = "0xABC87C", VA = "0xABC87C")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xABD454", Offset = "0xABD454", VA = "0xABD454")]
		private bool TryGenerateConsoleText(List<string> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xABD5D8", Offset = "0xABD5D8", VA = "0xABD5D8")]
		public void ClearStats()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xABD710", Offset = "0xABD710", VA = "0xABD710")]
		public void PrevCategory()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xABD8E0", Offset = "0xABD8E0", VA = "0xABD8E0")]
		public void NextCateogry()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xABD718", Offset = "0xABD718", VA = "0xABD718")]
		private void ChangeCategory(int direction)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xABD8E8", Offset = "0xABD8E8", VA = "0xABD8E8")]
		public static void AllowLogging(bool allow)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xAB52A0", Offset = "0xAB52A0", VA = "0xAB52A0")]
		public static void SetStat(string category, string name, bool value)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xAB5180", Offset = "0xAB5180", VA = "0xAB5180")]
		public static void SetStat(string category, string name, int value)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xABD944", Offset = "0xABD944", VA = "0xABD944")]
		public static void SetStat(string category, string name, string value)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xABCF9C", Offset = "0xABCF9C", VA = "0xABCF9C")]
		private static StatPage FindPage(string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xABDADC", Offset = "0xABDADC", VA = "0xABDADC")]
		public VrDebugStats()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class WandInputModule : BaseInputModule
	{
		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WandInputModule Instance;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header(" [Cursor setup]")]
		public Sprite CursorSprite;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material CursorMaterial;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float NormalCursorScale;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Header(" [Runtime variables]")]
		[Space(10f)]
		[Tooltip("Indicates whether or not the gui was hit by any controller this frame")]
		public bool guiHit;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[Tooltip("Indicates whether or not a button was used this frame")]
		public bool ButtonUsed;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Generated cursors")]
		public RectTransform[] Cursors;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Generated non rendering camera (used for raycasting ui)")]
		public Camera ControllerCamera;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color[] cursorColours;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool ignoreOverlayCanvases;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform[] raycastOrigin;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool[] raycastActive;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] CurrentRaycastPosition;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Ray[] LastRays;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool[] latchedDownEdges;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool[] latchedUpEdges;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool Initialized;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xABDC24", Offset = "0xABDC24", VA = "0xABDC24", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xABDC2C", Offset = "0xABDC2C", VA = "0xABDC2C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xAB6150", Offset = "0xAB6150", VA = "0xAB6150")]
		public void OnHandsDetected(HandAbstraction hands)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xAB6024", Offset = "0xAB6024", VA = "0xAB6024")]
		public void SetRaycastOrigins(Transform leftOrigin, Transform rightOrigin)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xAB925C", Offset = "0xAB925C", VA = "0xAB925C")]
		public void SetRaycastActive(HandType hand, bool isActive)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xABDC34", Offset = "0xABDC34", VA = "0xABDC34")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xABE538", Offset = "0xABE538", VA = "0xABE538")]
		public Camera GetControllerCamera()
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xABE540", Offset = "0xABE540", VA = "0xABE540")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xABEAA8", Offset = "0xABEAA8", VA = "0xABEAA8")]
		private static Canvas FindParentCanvas(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xABEBC0", Offset = "0xABEBC0", VA = "0xABEBC0")]
		private void UpdateCursor(int index, PointerEventData pointData)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xABEF68", Offset = "0xABEF68", VA = "0xABEF68")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xABEFF4", Offset = "0xABEFF4", VA = "0xABEFF4")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xABF0D8", Offset = "0xABF0D8", VA = "0xABF0D8")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xABF220", Offset = "0xABF220", VA = "0xABF220")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xABF2BC", Offset = "0xABF2BC", VA = "0xABF2BC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xABFF90", Offset = "0xABFF90", VA = "0xABFF90")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xABFFD4", Offset = "0xABFFD4", VA = "0xABFFD4")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xAB6880", Offset = "0xAB6880", VA = "0xAB6880")]
		public void LatchButtonDown(int index)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xAB68B4", Offset = "0xAB68B4", VA = "0xAB68B4")]
		public void LatchButtonUp(int index)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xAB8784", Offset = "0xAB8784", VA = "0xAB8784")]
		public bool HasCurrentPointTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xAB8814", Offset = "0xAB8814", VA = "0xAB8814")]
		public Vector3 GetCurrentPointPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xAC0018", Offset = "0xAC0018", VA = "0xAC0018")]
		public bool HasLeftPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xAC0090", Offset = "0xAC0090", VA = "0xAC0090")]
		public bool HasRightPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xAB68E8", Offset = "0xAB68E8", VA = "0xAB68E8")]
		public void SetCursorsVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xAC010C", Offset = "0xAC010C", VA = "0xAC010C")]
		public WandInputModule()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class XrNodeRig : MonoBehaviour
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform headTransform;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHandTransform;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTransform;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera explicitVrCameraReference;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string explicitVrCameraName;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera vrCamera;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hasShowExplicitCameraWarning;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xAB9540", Offset = "0xAB9540", VA = "0xAB9540")]
		public void SetCameraDetection(CameraDetectionMode mode, Camera explicitRef, string explicitName)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xAC0128", Offset = "0xAC0128", VA = "0xAC0128")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xAC0980", Offset = "0xAC0980", VA = "0xAC0980")]
		private void Sync(XRNodeState node, Transform destTransform)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xAC0610", Offset = "0xAC0610", VA = "0xAC0610")]
		private bool IsVrCameraValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xAC06B0", Offset = "0xAC06B0", VA = "0xAC06B0")]
		private void FindVrCamera()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xAC0A44", Offset = "0xAC0A44", VA = "0xAC0A44")]
		public XrNodeRig()
		{
		}
	}
}
namespace MK.XRay
{
	[Token(Token = "0x200046C")]
	public class AutoEnableObjects : MonoBehaviour
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle xRayToggle;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject basic;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject xray;

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xAC0A54", Offset = "0xAC0A54", VA = "0xAC0A54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xAC0AB8", Offset = "0xAC0AB8", VA = "0xAC0AB8")]
		public AutoEnableObjects()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class InfoTextDisable : MonoBehaviour
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject objectToDestroy;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xAC0AC0", Offset = "0xAC0AC0", VA = "0xAC0AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xAC0B50", Offset = "0xAC0B50", VA = "0xAC0B50")]
		public InfoTextDisable()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class MKXRayCopyPropertiesRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material src;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] dst;

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xAC0B58", Offset = "0xAC0B58", VA = "0xAC0B58")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xAC0D18", Offset = "0xAC0D18", VA = "0xAC0D18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xAC101C", Offset = "0xAC101C", VA = "0xAC101C")]
		public MKXRayCopyPropertiesRuntime()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class MKXRayDemoControl : MonoBehaviour
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool settingsUsed;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int currentModel;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Material> baseMaterials;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> currentMaterials;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> gameObjects;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider emissionIntensitySlider;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float emissionIntensity;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider xRayInsideSlider;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float xRayInside;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Slider xRayRimSizeSlider;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float xRayRimSize;

		[Token(Token = "0x170001E1")]
		public static bool SettingsUsed
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xAC1024", Offset = "0xAC1024", VA = "0xAC1024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		public static int CurrentModel
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xAC107C", Offset = "0xAC107C", VA = "0xAC107C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public float EmissionIntensity
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xAC10D4", Offset = "0xAC10D4", VA = "0xAC10D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xAC10DC", Offset = "0xAC10DC", VA = "0xAC10DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public float XRayInside
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xAC11B0", Offset = "0xAC11B0", VA = "0xAC11B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xAC11B8", Offset = "0xAC11B8", VA = "0xAC11B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public float XRayRimSize
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xAC1254", Offset = "0xAC1254", VA = "0xAC1254")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xAC125C", Offset = "0xAC125C", VA = "0xAC125C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xAC12F8", Offset = "0xAC12F8", VA = "0xAC12F8")]
		private void SetupMaterials()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xAC17C0", Offset = "0xAC17C0", VA = "0xAC17C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xAC17D8", Offset = "0xAC17D8", VA = "0xAC17D8")]
		public void ChangeModel()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xAC1B00", Offset = "0xAC1B00", VA = "0xAC1B00")]
		private void SetMaterialSettingsToSliders()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xAC1A18", Offset = "0xAC1A18", VA = "0xAC1A18")]
		private void SetValuesFromMaterial()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xAC1B64", Offset = "0xAC1B64", VA = "0xAC1B64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xAC1CA4", Offset = "0xAC1CA4", VA = "0xAC1CA4")]
		public MKXRayDemoControl()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class MKXRayDemoMouseOrbitImproved : MonoBehaviour
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float x;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float y;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 lastPosTouch;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 currentPosTouch;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastX;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastY;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xAC1E4C", Offset = "0xAC1E4C", VA = "0xAC1E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xAC1F20", Offset = "0xAC1F20", VA = "0xAC1F20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xAC2350", Offset = "0xAC2350", VA = "0xAC2350")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xAC238C", Offset = "0xAC238C", VA = "0xAC238C")]
		public MKXRayDemoMouseOrbitImproved()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public static class MKXRayFreeMaterialHelper
	{
		[Token(Token = "0x2000472")]
		public static class PropertyNames
		{
			[Token(Token = "0x4001CB2")]
			public const string SHOW_MAIN_BEHAVIOR = "_MKEditorShowMainBehavior";

			[Token(Token = "0x4001CB3")]
			public const string SHOW_XRAY_BEHAVIOR = "_MKEditorShowXRayBehavior";

			[Token(Token = "0x4001CB4")]
			public const string MAIN_COLOR = "_MainColor";

			[Token(Token = "0x4001CB5")]
			public const string XRAY_RIM_COLOR = "_XRayRimColor";

			[Token(Token = "0x4001CB6")]
			public const string XRAY_RIM_SIZE = "_XRayRimSize";

			[Token(Token = "0x4001CB7")]
			public const string XRAY_INSIDE = "_XRayInside";

			[Token(Token = "0x4001CB8")]
			public const string EMISSION_COLOR = "_EmissionColor";

			[Token(Token = "0x4001CB9")]
			public const string EMISSION = "_Emission";
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xAC23B4", Offset = "0xAC23B4", VA = "0xAC23B4")]
		public static void SetMainColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xAC2438", Offset = "0xAC2438", VA = "0xAC2438")]
		public static Color MainColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xAC248C", Offset = "0xAC248C", VA = "0xAC248C")]
		public static void SetXRayRimColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xAC2510", Offset = "0xAC2510", VA = "0xAC2510")]
		public static Color GetXRayRimColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xAC0FB8", Offset = "0xAC0FB8", VA = "0xAC0FB8")]
		public static void SetXRayRimSize(Material material, float size)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xAC0F64", Offset = "0xAC0F64", VA = "0xAC0F64")]
		public static float GetXRayRimSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xAC0F00", Offset = "0xAC0F00", VA = "0xAC0F00")]
		public static void SetXRayInside(Material material, float v)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xAC0EAC", Offset = "0xAC0EAC", VA = "0xAC0EAC")]
		public static float GetXRayInside(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xAC0E28", Offset = "0xAC0E28", VA = "0xAC0E28")]
		public static void SetEmissionColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xAC0DD4", Offset = "0xAC0DD4", VA = "0xAC0DD4")]
		public static Color GetEmissionColor(Material material)
		{
			return default(Color);
		}
	}
}
namespace Stacked
{
	[Token(Token = "0x2000473")]
	public class Timer : MonoBehaviour
	{
		[Token(Token = "0x2000474")]
		[CompilerGenerated]
		private sealed class <CountDownTimerTick>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timer <>4__this;

			[Token(Token = "0x170001E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAC")]
				[Address(RVA = "0xAC2D20", Offset = "0xAC2D20", VA = "0xAC2D20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAE")]
				[Address(RVA = "0xAC2D68", Offset = "0xAC2D68", VA = "0xAC2D68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xAC2AF4", Offset = "0xAC2AF4", VA = "0xAC2AF4")]
			[DebuggerHidden]
			public <CountDownTimerTick>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xAC2BC8", Offset = "0xAC2BC8", VA = "0xAC2BC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xAC2BCC", Offset = "0xAC2BCC", VA = "0xAC2BCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xAC2D28", Offset = "0xAC2D28", VA = "0xAC2D28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000475")]
		[CompilerGenerated]
		private sealed class <TimerTick>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timer <>4__this;

			[Token(Token = "0x170001E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB2")]
				[Address(RVA = "0xAC2E94", Offset = "0xAC2E94", VA = "0xAC2E94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB4")]
				[Address(RVA = "0xAC2EDC", Offset = "0xAC2EDC", VA = "0xAC2EDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xAC2B1C", Offset = "0xAC2B1C", VA = "0xAC2B1C")]
			[DebuggerHidden]
			public <TimerTick>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xAC2D70", Offset = "0xAC2D70", VA = "0xAC2D70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xAC2D74", Offset = "0xAC2D74", VA = "0xAC2D74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xAC2E9C", Offset = "0xAC2E9C", VA = "0xAC2E9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite[] DigitsSprite;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] Digits;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Columm;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite ColumnOn;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite ColumnOff;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int TimeSeconds;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool CountDown;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool Paused;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool IsTimeOver;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent TimeOver;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float timeFloat;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xAC2564", Offset = "0xAC2564", VA = "0xAC2564")]
		public void StopTimer()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xAC29B0", Offset = "0xAC29B0", VA = "0xAC29B0")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xAC2AEC", Offset = "0xAC2AEC", VA = "0xAC2AEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xAC2588", Offset = "0xAC2588", VA = "0xAC2588")]
		private int GetTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xAC2A04", Offset = "0xAC2A04", VA = "0xAC2A04")]
		[IteratorStateMachine(typeof(<CountDownTimerTick>d__15))]
		public IEnumerator CountDownTimerTick()
		{
			return null;
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xAC2A78", Offset = "0xAC2A78", VA = "0xAC2A78")]
		[IteratorStateMachine(typeof(<TimerTick>d__16))]
		public IEnumerator TimerTick()
		{
			return null;
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xAC2B44", Offset = "0xAC2B44", VA = "0xAC2B44")]
		private void Reset(int seconds)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xAC2B7C", Offset = "0xAC2B7C", VA = "0xAC2B7C")]
		private void Dash()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xAC2668", Offset = "0xAC2668", VA = "0xAC2668")]
		private void ClockDisplay(int time)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xAC2BB8", Offset = "0xAC2BB8", VA = "0xAC2BB8")]
		public Timer()
		{
		}
	}
}
namespace GameQuest
{
	[Token(Token = "0x2000476")]
	[CreateAssetMenu(fileName = "New Level", menuName = "Quest System/Level", order = 1)]
	public class Level : ScriptableObject
	{
		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneReference MainScene;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneReference[] Dependecies;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Story parentStory;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D photo;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsMenuLevel;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool IsOptionsLevel;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int CrystalThreatLevel;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string localisationPlaceID;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool noNavigationScene;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[Header("spawn zeppelin -> can be set via levelDirector?")]
		public bool spawnNextButtonAfterLevelDone;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool sceneHasLightProbes;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool myTempBlockNextButtonAfterLevelDone;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("do transition after level done -> can be set via levelDirector?")]
		public bool autoLoadNextLevelAfterLevelDone;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool completionCountEnabled;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool isSandbox;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[Header("dispenser autospawn & moving around")]
		public bool positionsDispenser;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("replicator autospawn & moving around")]
		public bool positionsReplicator;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[Header("Resetti asks or just talks?")]
		public bool resettiAsksQuestion;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[Header("Then the image/drawing needs to be set")]
		public bool resettiMakesDrawing;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Resetti draws this image")]
		public Texture2D resettiDrawing;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool resettiEmptyConvoOnLevelDone;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		[Header("default locaID From story if empty - override can be any ID")]
		public string overrideTitleLocationID;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool noTitleBeforeLevel;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool overrideTransitionColors;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color transitionColor1;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color transitionColor2;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Space]
		public float levelEndSFXParameterValue;

		[NonSerialized]
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int timesLoadedPerSession;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int tipPhase;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool enableSeagullSFX;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[EventRef]
		public string boomboxTrack;

		[Token(Token = "0x170001EA")]
		public bool Completed
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xAC2EE4", Offset = "0xAC2EE4", VA = "0xAC2EE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xAC2FA4", Offset = "0xAC2FA4", VA = "0xAC2FA4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public bool TempBlockNextButtonAfterLevelDone
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xAC31CC", Offset = "0xAC31CC", VA = "0xAC31CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xAC31D4", Offset = "0xAC31D4", VA = "0xAC31D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public List<Achievement> AchievementToUnlock
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xAC31E0", Offset = "0xAC31E0", VA = "0xAC31E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xAC31E8", Offset = "0xAC31E8", VA = "0xAC31E8")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xAC31F0", Offset = "0xAC31F0", VA = "0xAC31F0")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xAC3254", Offset = "0xAC3254", VA = "0xAC3254")]
		public int GetPosition()
		{
			return default(int);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xAC32AC", Offset = "0xAC32AC", VA = "0xAC32AC")]
		[ContextMenu("Mark this level as completed")]
		public void MarkAsCompleted()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xAC350C", Offset = "0xAC350C", VA = "0xAC350C")]
		[ContextMenu("Mark this level as LAST completed")]
		public void MarkAsLastCompleted()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xAC36B4", Offset = "0xAC36B4", VA = "0xAC36B4")]
		public Level()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000477")]
	[CreateAssetMenu(fileName = "New Quest", menuName = "Quest System/Quest", order = 3)]
	public class Quest : ScriptableObject
	{
		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Story[] Stories;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Obsolete]
		public SceneReference[] Dependecies;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ForceActive;

		[NonSerialized]
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] lazy_level_ordered;

		[Token(Token = "0x170001ED")]
		public static string MainQuestID
		{
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xAC3798", Offset = "0xAC3798", VA = "0xAC3798")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public bool Active
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xAC37F0", Offset = "0xAC37F0", VA = "0xAC37F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xAC38F0", Offset = "0xAC38F0", VA = "0xAC38F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xAC396C", Offset = "0xAC396C", VA = "0xAC396C")]
		public string[] levels()
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xAC3B20", Offset = "0xAC3B20", VA = "0xAC3B20")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xAC3B84", Offset = "0xAC3B84", VA = "0xAC3B84")]
		[ContextMenu("Update parent Story")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xAC3BE8", Offset = "0xAC3BE8", VA = "0xAC3BE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xAC3BEC", Offset = "0xAC3BEC", VA = "0xAC3BEC")]
		[ContextMenu("Set Quest Active = True")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xAC3BF4", Offset = "0xAC3BF4", VA = "0xAC3BF4")]
		[ContextMenu("Reset Quest")]
		public void ResetQuest()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xAC3D60", Offset = "0xAC3D60", VA = "0xAC3D60")]
		public Quest()
		{
		}
	}
	[Token(Token = "0x2000478")]
	[CreateAssetMenu(fileName = "The Quest System", menuName = "Quest System/Quest System", order = 4)]
	public class QuestSystem : ScriptableObject
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static QuestSystem instance;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quest[] Quests;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		[Space]
		public Level MenuLevel;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public SceneReference[] DefaultScenes;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject DefaultLightingPrefab;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Level startScene;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Level optionsScene;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Story DemoEndsAfterMyCompletion;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space]
		public SceneReference loader;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SceneReference emptyScene;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SceneReference SteamVRSetup;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SceneReference OculusStoreSetup;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SceneReference PSVR2Setup;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SceneReference PicoSetup;

		[Token(Token = "0x170001EF")]
		public static QuestSystem Instance
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xAC3EA4", Offset = "0xAC3EA4", VA = "0xAC3EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xAC3F80", Offset = "0xAC3F80", VA = "0xAC3F80")]
		public SceneReference GetVRScene()
		{
			return null;
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xAC3F88", Offset = "0xAC3F88", VA = "0xAC3F88")]
		public static string GetQuestSystemPath()
		{
			return null;
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xAC3FC8", Offset = "0xAC3FC8", VA = "0xAC3FC8")]
		public static string GetQuestSystemPathEditor()
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xAC4008", Offset = "0xAC4008", VA = "0xAC4008")]
		public void SetAllQuests(bool _mode, bool saveStatus = true, bool mainQuestOnly = false)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xAC435C", Offset = "0xAC435C", VA = "0xAC435C")]
		[ContextMenu("Log Progress")]
		private void LogProgress()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xAC4D2C", Offset = "0xAC4D2C", VA = "0xAC4D2C")]
		[ContextMenu("CheckForDuplicateIDs")]
		private void CheckForDuplicateIDs()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xAC52D8", Offset = "0xAC52D8", VA = "0xAC52D8")]
		[ContextMenu("ListStoryIDs")]
		private void ListStoryIDs()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xAC57A4", Offset = "0xAC57A4", VA = "0xAC57A4")]
		[ContextMenu("GetCompletionStatus")]
		public int[] GetCompletionStatus()
		{
			return null;
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xAC5904", Offset = "0xAC5904", VA = "0xAC5904")]
		[ContextMenu("GetMainQuestComplete")]
		public bool GetMainQuestComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xAC59A8", Offset = "0xAC59A8", VA = "0xAC59A8")]
		[ContextMenu("Reset all quests")]
		public void DoResetAllQuests()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xAC5A50", Offset = "0xAC5A50", VA = "0xAC5A50")]
		public void ResetAllQuests(bool saveStatus = true)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xAC5A60", Offset = "0xAC5A60", VA = "0xAC5A60")]
		public void DeleteAllSandboxSaves()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xAC5E78", Offset = "0xAC5E78", VA = "0xAC5E78")]
		[ContextMenu("Unlock all quests")]
		public void UnlockAllQuests()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xAC5E88", Offset = "0xAC5E88", VA = "0xAC5E88")]
		[ContextMenu("Unlock MAIN quests ONLY")]
		public void UnlockAllMainQuests()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xAC5E98", Offset = "0xAC5E98", VA = "0xAC5E98")]
		public Level GetNextUncompletedLevelInQuest(string questID)
		{
			return null;
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xAC6148", Offset = "0xAC6148", VA = "0xAC6148")]
		public int GetAmountLevelsInQuest(string questID)
		{
			return default(int);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xAC616C", Offset = "0xAC616C", VA = "0xAC616C")]
		public int GetAmountLevelsInStory(Story story)
		{
			return default(int);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xAC61EC", Offset = "0xAC61EC", VA = "0xAC61EC")]
		public Story GetLatestStory(Quest quest)
		{
			return null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xAC6284", Offset = "0xAC6284", VA = "0xAC6284")]
		public Story GetNextStoryMainQuest(Story currentStory)
		{
			return null;
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xAC6350", Offset = "0xAC6350", VA = "0xAC6350")]
		public Level GetLastUncompleteLevelInStory(Story story)
		{
			return null;
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xAC63E8", Offset = "0xAC63E8", VA = "0xAC63E8")]
		public Level GetFirstLevelInStory(Story story)
		{
			return null;
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xAC6480", Offset = "0xAC6480", VA = "0xAC6480")]
		public Level IsStartScreen(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xAC64C0", Offset = "0xAC64C0", VA = "0xAC64C0")]
		public Level IsOptionsScene(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xAC6500", Offset = "0xAC6500", VA = "0xAC6500")]
		public Level GetLevelFromScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xAC6814", Offset = "0xAC6814", VA = "0xAC6814")]
		public Story GetStoryFromScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xAC6888", Offset = "0xAC6888", VA = "0xAC6888")]
		public Story GetStoryFromLevelScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xAC5F2C", Offset = "0xAC5F2C", VA = "0xAC5F2C")]
		public Quest GetQuest(string questID)
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xAC43C4", Offset = "0xAC43C4", VA = "0xAC43C4")]
		public string DataStructureAsText()
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xAC5FC4", Offset = "0xAC5FC4", VA = "0xAC5FC4")]
		private Level[] GetAllLevelsFromQuest(Quest q)
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xAC6A10", Offset = "0xAC6A10", VA = "0xAC6A10")]
		public bool IsAvailableInDemo(Story checkStory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xAC430C", Offset = "0xAC430C", VA = "0xAC430C")]
		[ContextMenu("Save to file")]
		public void Save()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xAC6B40", Offset = "0xAC6B40", VA = "0xAC6B40")]
		public QuestSystem()
		{
		}
	}
	[Token(Token = "0x2000479")]
	[CreateAssetMenu(fileName = "New Story", menuName = "Quest System/Story", order = 2)]
	public class Story : ScriptableObject
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string isCompleted;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("STORY NAME FOR MENU AND TITLE")]
		public string localisationID;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("default location ID - can be overwritten by level")]
		public string titlePlaceID;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Only for Main Quest")]
		public Level MenuNavigationLevel;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Level[] Levels;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quest ParentQuest;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Quest to unlock after completion")]
		public Quest[] Unlock;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Entities to unlock after completion")]
		public EntityDefinition[] EntityUnlock;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showTitleUnlockMessage;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool backToCityAfterStory;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite cartridgeImage;

		[Token(Token = "0x170001F0")]
		public bool Completed
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xAC5954", Offset = "0xAC5954", VA = "0xAC5954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xAC6B48", Offset = "0xAC6B48", VA = "0xAC6B48")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xAC6BAC", Offset = "0xAC6BAC", VA = "0xAC6BAC")]
		[ContextMenu("Update parent Story")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xAC6C10", Offset = "0xAC6C10", VA = "0xAC6C10")]
		[ContextMenu("Mark this Story as LAST completed")]
		public void MarkAsLastCompleted()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xAC4238", Offset = "0xAC4238", VA = "0xAC4238")]
		[ContextMenu("Mark this Story as completed")]
		public void MarkAsCompleted()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xAC6D1C", Offset = "0xAC6D1C", VA = "0xAC6D1C")]
		public bool IsMainQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xAC6DC0", Offset = "0xAC6DC0", VA = "0xAC6DC0")]
		public int GetPosition()
		{
			return default(int);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xAC6E18", Offset = "0xAC6E18", VA = "0xAC6E18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xAC33A0", Offset = "0xAC33A0", VA = "0xAC33A0")]
		public bool IsLastLevelInStory(Level _level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xAC3418", Offset = "0xAC3418", VA = "0xAC3418")]
		public void SetUnlocksCompleted()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xAC6E1C", Offset = "0xAC6E1C", VA = "0xAC6E1C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xAC6E5C", Offset = "0xAC6E5C", VA = "0xAC6E5C")]
		public Story()
		{
		}
	}
}
namespace GoogleSheetsDataStructures
{
	[Serializable]
	[Token(Token = "0x200047A")]
	public class ChaptersLocalization
	{
		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tabID;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Localization> IDRows;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xAC6ED4", Offset = "0xAC6ED4", VA = "0xAC6ED4")]
		public ChaptersLocalization()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047B")]
	public class StripppedLocalization
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DE;

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xAC6EDC", Offset = "0xAC6EDC", VA = "0xAC6EDC")]
		public StripppedLocalization()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047C")]
	public class Localization
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TAB;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string EN;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DE;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FR;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SC;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string JP;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string KR;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string RU;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string ES;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string TC;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string PT;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xAC6F34", Offset = "0xAC6F34", VA = "0xAC6F34")]
		public string LookUp(Languages _language)
		{
			return null;
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xAC6FF0", Offset = "0xAC6FF0", VA = "0xAC6FF0")]
		public void SetLanguageValue(Languages _language, string value)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xAC7070", Offset = "0xAC7070", VA = "0xAC7070")]
		public Localization()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public enum Languages
	{
		[Token(Token = "0x4001D1C")]
		english,
		[Token(Token = "0x4001D1D")]
		german,
		[Token(Token = "0x4001D1E")]
		french,
		[Token(Token = "0x4001D1F")]
		chinese,
		[Token(Token = "0x4001D20")]
		japanese,
		[Token(Token = "0x4001D21")]
		korean,
		[Token(Token = "0x4001D22")]
		russian,
		[Token(Token = "0x4001D23")]
		spanish,
		[Token(Token = "0x4001D24")]
		traditionalChinese,
		[Token(Token = "0x4001D25")]
		brazilianPortoguese
	}
	[Serializable]
	[Token(Token = "0x200047E")]
	public class LanguageFontAssets
	{
		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Languages language;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Asset[] fontAssets;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string defaultCharacters;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string characters;

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xAC7178", Offset = "0xAC7178", VA = "0xAC7178")]
		public LanguageFontAssets()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class LocalizationDataSO : ScriptableObject
	{
		[Token(Token = "0x2000480")]
		public delegate void OnUpdateDoneDelegate(bool successful);

		[Token(Token = "0x2000481")]
		public enum Network
		{
			[Token(Token = "0x4001D4F")]
			none,
			[Token(Token = "0x4001D50")]
			pending,
			[Token(Token = "0x4001D51")]
			success,
			[Token(Token = "0x4001D52")]
			error
		}

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset baseFontAsset;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageFontAssets[] languageFontAssets;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[Header("Master sheet")]
		[Space]
		public string googleSheetID;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Network networkStatus;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string missingTranslation;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string missingKey;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string mainTab;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string> localizationTableNameQueue;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Localization> tabsLookUpList;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool errorsInImportAndValidate;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string englishCharacters;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChaptersLocalization localizationDataTables;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ChaptersLocalization localizationDataTablesClone;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ChaptersLocalization downloadedLocalizationDataTables;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Non English language to import")]
		[Space]
		[Space]
		public Languages languageToImport;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Localization locaSheetID;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Results")]
		[Space]
		public Localization locaDateDownloaded;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Localization locaNumKeysMissing;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Localization locaMissingKeys;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Localization locaFontMissingCharacters;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Localization localanguageCellsFilled;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string summaryNumMissingKeys;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string summaryCellsFilled;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Space]
		[Space]
		[Header("Content & Validation")]
		public int maxCharactersPerBubble;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<string> ignoreKeysList;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int uploadStart;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int uploadCount;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Languages uploadLanguage;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float startTime;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		[SerializeField]
		private List<string> messages;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Languages requestedLanguage;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string requestedSheetID;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool doNotCloneOtherLanguages;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Dictionary<Languages, int> keyFound;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> steam_achievement_id_lookup;

		[Token(Token = "0x170001F1")]
		public Network NetworkStatus
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xAC7330", Offset = "0xAC7330", VA = "0xAC7330")]
			get
			{
				return default(Network);
			}
		}

		[Token(Token = "0x170001F2")]
		public List<string> Messages
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xAC7338", Offset = "0xAC7338", VA = "0xAC7338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000087")]
		public static event OnUpdateDoneDelegate OnUpdateDone
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xAC7180", Offset = "0xAC7180", VA = "0xAC7180")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xAC7258", Offset = "0xAC7258", VA = "0xAC7258")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xAC7340", Offset = "0xAC7340", VA = "0xAC7340")]
		public static LocalizationDataSO GetLocalisationData()
		{
			return null;
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xAC73D0", Offset = "0xAC73D0", VA = "0xAC73D0")]
		private void UploadLanguage()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xAC7A68", Offset = "0xAC7A68", VA = "0xAC7A68")]
		[ContextMenu("TestUpload")]
		private void TestUploadKorean()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xAC7AD0", Offset = "0xAC7AD0", VA = "0xAC7AD0")]
		[ContextMenu("StopUpload")]
		private void StopUpload()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xAC7A98", Offset = "0xAC7A98", VA = "0xAC7A98")]
		private void UploadLanguageToMaster(Languages _language)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xAC7AE0", Offset = "0xAC7AE0", VA = "0xAC7AE0")]
		private void HandleDriveResponseUpload(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xAC7D70", Offset = "0xAC7D70", VA = "0xAC7D70")]
		public string MapLanguage(Languages _language, string _key)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xAC7EA0", Offset = "0xAC7EA0", VA = "0xAC7EA0")]
		private void AddMessage(string newMessage)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xAC7FE8", Offset = "0xAC7FE8", VA = "0xAC7FE8")]
		[ContextMenu("RetrieveCustomLanguage")]
		private void RetrieveCustomLanguage()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xAC851C", Offset = "0xAC851C", VA = "0xAC851C")]
		[ContextMenu("RetrieveMasterLanguage")]
		private void RetrieveMasterLanguage()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xAC8528", Offset = "0xAC8528", VA = "0xAC8528")]
		[ContextMenu("RetrieveMasterLanguageNoOtherLanguages")]
		private void RetrieveMasterLanguageNoOtherLanguages()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xAC7FF4", Offset = "0xAC7FF4", VA = "0xAC7FF4")]
		public void RetrieveAllCloudData(Languages _lang = Languages.english)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xAC8538", Offset = "0xAC8538", VA = "0xAC8538")]
		private void ErrorCallback(string _response)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xAC86F8", Offset = "0xAC86F8", VA = "0xAC86F8")]
		private void HandleDriveResponseAllTabs(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xAC9130", Offset = "0xAC9130", VA = "0xAC9130")]
		private void TransferLanguage(Languages _language, ChaptersLocalization source, ChaptersLocalization master, bool writeDate = false)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xAC9540", Offset = "0xAC9540", VA = "0xAC9540")]
		[ContextMenu("CheckCharacters")]
		private void CheckCharacters()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xACA4A0", Offset = "0xACA4A0", VA = "0xACA4A0")]
		private string WriteCharactersForLanguage(Languages _language)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xACAA4C", Offset = "0xACAA4C", VA = "0xACAA4C")]
		[ContextMenu("CheckForBubbleContentIssues")]
		private void CheckForBubbleContentIssues()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xACAACC", Offset = "0xACAACC", VA = "0xACAACC")]
		private void CheckContentForLanguage(Languages _language)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xACA0E4", Offset = "0xACA0E4", VA = "0xACA0E4")]
		private void CreateMissingLocaDict()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xACB904", Offset = "0xACB904", VA = "0xACB904")]
		[ContextMenu("Generate Achievement Language Translation Files")]
		public void ListAchievementLanguages()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xACBA68", Offset = "0xACBA68", VA = "0xACBA68")]
		private static void WritOculusTranslations(List<Localization> achievement_locas)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xACC318", Offset = "0xACC318", VA = "0xACC318")]
		private static void WritSteamTranslations(List<Localization> achievement_locas)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xACD544", Offset = "0xACD544", VA = "0xACD544")]
		private static string get_language_string(Languages language, Localization loca)
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xACD484", Offset = "0xACD484", VA = "0xACD484")]
		private static void sb_append(int indent, StringBuilder sb_all, StringBuilder sb_lang, string str)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xACD3CC", Offset = "0xACD3CC", VA = "0xACD3CC")]
		private static void sb_append_qoutify(int indent, StringBuilder sb_1, StringBuilder sb_2, string str)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xACD694", Offset = "0xACD694", VA = "0xACD694")]
		public LocalizationDataSO()
		{
		}
	}
}
namespace Humans
{
	[Token(Token = "0x2000484")]
	public class Human : MonoBehaviour
	{
		[Token(Token = "0x2000485")]
		[CompilerGenerated]
		private sealed class <RandomizeBlinking>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Human <>4__this;

			[Token(Token = "0x170001F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D35")]
				[Address(RVA = "0xACEEF8", Offset = "0xACEEF8", VA = "0xACEEF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D37")]
				[Address(RVA = "0xACEF40", Offset = "0xACEF40", VA = "0xACEF40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0xACE534", Offset = "0xACE534", VA = "0xACE534")]
			[DebuggerHidden]
			public <RandomizeBlinking>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xACEDD0", Offset = "0xACEDD0", VA = "0xACEDD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xACEDD4", Offset = "0xACEDD4", VA = "0xACEDD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xACEF00", Offset = "0xACEF00", VA = "0xACEF00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation Mouth;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation Eyes;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Head;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform TargetPos;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LookAt;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool UseIdle;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 idleOffset;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float idleTimer;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float idleWait;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float maxTurn;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HumanAesthetic humanAesthetic;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float gestureWait;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int lookAroundMin;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int lookAroundMax;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 rot;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float dur;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] gestureAnglesR;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] gestureAnglesL;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xACE368", Offset = "0xACE368", VA = "0xACE368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xACE4C0", Offset = "0xACE4C0", VA = "0xACE4C0")]
		[IteratorStateMachine(typeof(<RandomizeBlinking>d__15))]
		private IEnumerator RandomizeBlinking()
		{
			return null;
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xACE44C", Offset = "0xACE44C", VA = "0xACE44C")]
		private void NextIdle()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xACE55C", Offset = "0xACE55C", VA = "0xACE55C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xACE984", Offset = "0xACE984", VA = "0xACE984")]
		private void Idle()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xACEA44", Offset = "0xACEA44", VA = "0xACEA44")]
		private void Talk()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xACEACC", Offset = "0xACEACC", VA = "0xACEACC")]
		private void DoTalkGestures()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xACE3A4", Offset = "0xACE3A4", VA = "0xACE3A4")]
		public void ExpressEmotion(Emotion feel)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xACE93C", Offset = "0xACE93C", VA = "0xACE93C")]
		private float ClampAngle(float angle, float from, float to)
		{
			return default(float);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xACEC4C", Offset = "0xACEC4C", VA = "0xACEC4C")]
		public Human()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public enum Emotion
	{
		[Token(Token = "0x4001D6D")]
		Idle,
		[Token(Token = "0x4001D6E")]
		Panic,
		[Token(Token = "0x4001D6F")]
		Talk,
		[Token(Token = "0x4001D70")]
		ClimbLadder
	}
	[Token(Token = "0x2000487")]
	public class HumanAesthetic : MonoBehaviour
	{
		[Token(Token = "0x2000488")]
		public enum ColorType
		{
			[Token(Token = "0x4001D85")]
			skin,
			[Token(Token = "0x4001D86")]
			hair,
			[Token(Token = "0x4001D87")]
			color1,
			[Token(Token = "0x4001D88")]
			color2,
			[Token(Token = "0x4001D89")]
			color3,
			[Token(Token = "0x4001D8A")]
			all
		}

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanAestheticScriptableObject Features;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Space(30f)]
		private bool RandomColors;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("BodyParts")]
		public MeshFilter Head;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter Body;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter LeftArm;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter RightArm;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshFilter Eyes;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshFilter CLosedEyes;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshFilter LeftEyebrows;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshFilter RightEyebrows;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshFilter Mouth;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter Hat;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshFilter Accessory;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int shaderColorArrayLenght;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int currentSkinColorIndex;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int currentHairColorIndex;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int currentColor1;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int currentColor2;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int currentColor3;

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xACEF48", Offset = "0xACEF48", VA = "0xACEF48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xACEF4C", Offset = "0xACEF4C", VA = "0xACEF4C")]
		public void SetFeatures()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xACFB98", Offset = "0xACFB98", VA = "0xACFB98")]
		private Mesh ChangeMeshVertexColor(Color col, Mesh msh)
		{
			return null;
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xACFD04", Offset = "0xACFD04", VA = "0xACFD04")]
		public void SetFeatures(ColorType _colorType = ColorType.all)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xACFD08", Offset = "0xACFD08", VA = "0xACFD08")]
		public HumanAesthetic()
		{
		}
	}
	[Token(Token = "0x2000489")]
	[CreateAssetMenu(fileName = "Human", menuName = "Human/Create Human", order = 1)]
	public class HumanAestheticScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Head Head;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh Body;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh LeftArm;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh RightArm;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh Eyes;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh EyesClosed;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh LeftEyebrows;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh RightEyebrows;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh Mouth;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Skin;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int Hair;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Color1;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Color2;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int Color3;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int VoiceType;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExtraPart Hat;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ExtraPart Accessory;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HumanDataScriptableObject Data;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isGroup;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float RandomAccessoryProbability;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float RandamHatProbability;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HumanAestheticScriptableObject[] group;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HumanEmoSFX humanEmoSFX;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool IsDog;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 TailOffset;

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xACFD18", Offset = "0xACFD18", VA = "0xACFD18")]
		public HumanAestheticScriptableObject()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class HumanDataScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Palette SkinColors;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Palette HairColor;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Palette OtherColors;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Head[] Heads;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh[] Eyes;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh[] Mouth;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Body[] Bodies;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Eyebrows[] Eyebrows;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ExtraPart[] Hats;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ExtraPart[] Accessories;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xACFD2C", Offset = "0xACFD2C", VA = "0xACFD2C")]
		public HumanDataScriptableObject()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class RandomHumanCreator : MonoBehaviour
	{
		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int head_ID;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int Body_ID;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int Eyes_ID;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int eyebrows_ID;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int Mouths_ID;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int hat_ID;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int Accessory_ID;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int Populationsize;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] VoiceTypes;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int VoiceType_ID;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int voiceType;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HumanAesthetic candidateHuman;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CategoryDefinition peopleCategory;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public HumanDataScriptableObject HumanData;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HumanAestheticScriptableObject[] HumansAlreadyAvailable;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HumanAestheticScriptableObject currentLoadedAesthetics;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int CurrentHumanIDFromList;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public string currentHumanName;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xACFD34", Offset = "0xACFD34", VA = "0xACFD34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xACFDC8", Offset = "0xACFDC8", VA = "0xACFDC8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xACFD38", Offset = "0xACFD38", VA = "0xACFD38")]
		public void LoadHumansFromResources()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xACFDCC", Offset = "0xACFDCC", VA = "0xACFDCC")]
		public HumanAestheticScriptableObject ShiftLoadedHumanPosition(int _offset = 1)
		{
			return null;
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xACFE7C", Offset = "0xACFE7C", VA = "0xACFE7C")]
		public HumanAestheticScriptableObject CopyHuman(HumanAestheticScriptableObject _candidate)
		{
			return null;
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xACFFC8", Offset = "0xACFFC8", VA = "0xACFFC8")]
		public void CopyToSO(HumanAestheticScriptableObject _candidate)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xAD0194", Offset = "0xAD0194", VA = "0xAD0194")]
		public HumanAestheticScriptableObject RandomHuman()
		{
			return null;
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xAD0610", Offset = "0xAD0610", VA = "0xAD0610")]
		public void SwapHead(int offset)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xAD06AC", Offset = "0xAD06AC", VA = "0xAD06AC")]
		public void SwapBody(int offset)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xAD07D8", Offset = "0xAD07D8", VA = "0xAD07D8")]
		public void SwapEyes(int offset)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xAD086C", Offset = "0xAD086C", VA = "0xAD086C")]
		public void SwapEyebrows(int offset)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xAD0950", Offset = "0xAD0950", VA = "0xAD0950")]
		public void SwapMouth(int offset)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xAD09E4", Offset = "0xAD09E4", VA = "0xAD09E4")]
		public void SwapSkinColor(int offset)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xAD0A58", Offset = "0xAD0A58", VA = "0xAD0A58")]
		public void SwapHairColor(int offset)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xAD0ACC", Offset = "0xAD0ACC", VA = "0xAD0ACC")]
		public void SwapColor1(int offset)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xAD0B40", Offset = "0xAD0B40", VA = "0xAD0B40")]
		public void SwapColor2(int offset)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xAD0BB4", Offset = "0xAD0BB4", VA = "0xAD0BB4")]
		public void SwapColor3(int offset)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xAD0C28", Offset = "0xAD0C28", VA = "0xAD0C28")]
		public void SwapHat(int offset)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xAD0CBC", Offset = "0xAD0CBC", VA = "0xAD0CBC")]
		public void SwapAccessories(int offset)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xAD0D50", Offset = "0xAD0D50", VA = "0xAD0D50")]
		public RandomHumanCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public class Head
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Mesh;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xAD0DB0", Offset = "0xAD0DB0", VA = "0xAD0DB0")]
		public Head()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048D")]
	public class Body
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Torso;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh LeftArm;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh RightArm;

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xAD0DB8", Offset = "0xAD0DB8", VA = "0xAD0DB8")]
		public Body()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048E")]
	public class Eyebrows
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Left;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Right;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xAD0DC0", Offset = "0xAD0DC0", VA = "0xAD0DC0")]
		public Eyebrows()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048F")]
	public class ExtraPart
	{
		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSpecialItem;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Mesh;

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xAD0DC8", Offset = "0xAD0DC8", VA = "0xAD0DC8")]
		public ExtraPart()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000490")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000088")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xAD0DD0", Offset = "0xAD0DD0", VA = "0xAD0DD0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xAD0E88", Offset = "0xAD0E88", VA = "0xAD0E88")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xAD0F40", Offset = "0xAD0F40", VA = "0xAD0F40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xAD0FFC", Offset = "0xAD0FFC", VA = "0xAD0FFC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xAD10B8", Offset = "0xAD10B8", VA = "0xAD10B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xAD14E8", Offset = "0xAD14E8", VA = "0xAD14E8")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xAD126C", Offset = "0xAD126C", VA = "0xAD126C")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xAD1518", Offset = "0xAD1518", VA = "0xAD1518")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Sandbox
{
	[Token(Token = "0x2000491")]
	public class SandboxPersistence : MonoBehaviour
	{
		[Token(Token = "0x2000492")]
		public delegate void ObjectLoadedDelegate(Rigidbody rigidBody);

		[Token(Token = "0x2000493")]
		public delegate void SceneSavedDelegate();

		[Token(Token = "0x2000494")]
		[CompilerGenerated]
		private sealed class <DelaySceneDefaults>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SandboxPersistence <>4__this;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool noFile;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D91")]
				[Address(RVA = "0xAD4718", Offset = "0xAD4718", VA = "0xAD4718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D93")]
				[Address(RVA = "0xAD4760", Offset = "0xAD4760", VA = "0xAD4760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xAD1EC8", Offset = "0xAD1EC8", VA = "0xAD1EC8")]
			[DebuggerHidden]
			public <DelaySceneDefaults>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xAD4468", Offset = "0xAD4468", VA = "0xAD4468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xAD446C", Offset = "0xAD446C", VA = "0xAD446C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xAD4720", Offset = "0xAD4720", VA = "0xAD4720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000495")]
		[CompilerGenerated]
		private sealed class <ReadCreateEntities>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SandboxPersistence <>4__this;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ObjectSaveData> _save;

			[Token(Token = "0x170001F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D97")]
				[Address(RVA = "0xAD5C78", Offset = "0xAD5C78", VA = "0xAD5C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D99")]
				[Address(RVA = "0xAD5CC0", Offset = "0xAD5CC0", VA = "0xAD5CC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xAD2C14", Offset = "0xAD2C14", VA = "0xAD2C14")]
			[DebuggerHidden]
			public <ReadCreateEntities>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xAD4768", Offset = "0xAD4768", VA = "0xAD4768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xAD476C", Offset = "0xAD476C", VA = "0xAD476C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xAD5C80", Offset = "0xAD5C80", VA = "0xAD5C80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Entity> saveEntities;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> spawns;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string sandBoxEditorFile;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float lastSaveTimeSeconds;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityLookup eLookUp;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string session;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int snap;

		[Token(Token = "0x4001DD5")]
		[Space]
		[Space]
		public const string saveFileEnding = ".dat";

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string fileName;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string jSonSave;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject movablesSaveSpecial;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform editorLoadRoot;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SaveID[] staticSaveIDs;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<SaveID> instantiatedSaveIDs;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool loadOnStart;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool onlySaveEditorReplicatorSpawned;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SandboxPersistence _instance;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ObjectSaveData> loadData;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ObjectSaveData debugOSD;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConstructionData constructionData;

		[Token(Token = "0x170001F5")]
		public static SandboxPersistence Instance
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xAD1810", Offset = "0xAD1810", VA = "0xAD1810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008A")]
		public static event ObjectLoadedDelegate OnObjectLoaded
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xAD1528", Offset = "0xAD1528", VA = "0xAD1528")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xAD15E0", Offset = "0xAD15E0", VA = "0xAD15E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public static event SceneSavedDelegate OnSceneSaved
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xAD1698", Offset = "0xAD1698", VA = "0xAD1698")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xAD1754", Offset = "0xAD1754", VA = "0xAD1754")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xAD198C", Offset = "0xAD198C", VA = "0xAD198C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xAD1E40", Offset = "0xAD1E40", VA = "0xAD1E40")]
		[IteratorStateMachine(typeof(<DelaySceneDefaults>d__28))]
		private IEnumerator DelaySceneDefaults(bool noFile)
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xAD1EF0", Offset = "0xAD1EF0", VA = "0xAD1EF0")]
		public void ScanSaveJson()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xAD23F0", Offset = "0xAD23F0", VA = "0xAD23F0")]
		public void ScanAndSave(bool immediateFileSave = false)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xAD2548", Offset = "0xAD2548", VA = "0xAD2548")]
		public static float TimeSinceLastSave()
		{
			return default(float);
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xAD259C", Offset = "0xAD259C", VA = "0xAD259C")]
		public void ClearButton()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xAD25A4", Offset = "0xAD25A4", VA = "0xAD25A4")]
		[ContextMenu("Reload")]
		public void Reload()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xAD25A0", Offset = "0xAD25A0", VA = "0xAD25A0")]
		public void ClearSave()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xAD25C8", Offset = "0xAD25C8", VA = "0xAD25C8")]
		private void DeleteSaveFile()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xAD1BB4", Offset = "0xAD1BB4", VA = "0xAD1BB4")]
		private string GetFullFilePath()
		{
			return null;
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xAC5C28", Offset = "0xAC5C28", VA = "0xAC5C28")]
		public static string GetFullFilePathForLevel(string levelName)
		{
			return null;
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xAD1F14", Offset = "0xAD1F14", VA = "0xAD1F14")]
		public void RegisterSaveEntities()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xAD2810", Offset = "0xAD2810", VA = "0xAD2810")]
		private void RegisterStartEntities()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xAD2958", Offset = "0xAD2958", VA = "0xAD2958")]
		private bool SaveFileCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xAD296C", Offset = "0xAD296C", VA = "0xAD296C")]
		public void ReadFromSO(ObjectSaveData[] _save)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xAD2B84", Offset = "0xAD2B84", VA = "0xAD2B84")]
		[IteratorStateMachine(typeof(<ReadCreateEntities>d__43))]
		private IEnumerator ReadCreateEntities(List<ObjectSaveData> _save)
		{
			return null;
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xAD2B28", Offset = "0xAD2B28", VA = "0xAD2B28")]
		public void ReadFromSO(List<ObjectSaveData> _save)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xAD2C3C", Offset = "0xAD2C3C", VA = "0xAD2C3C")]
		private Rigidbody FindJointRB(int instanceID)
		{
			return null;
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xAD2E4C", Offset = "0xAD2E4C", VA = "0xAD2E4C")]
		private ObjectSaveData FindSaveObjectByID(List<ObjectSaveData> _list, int _id)
		{
			return null;
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xAD2FF4", Offset = "0xAD2FF4", VA = "0xAD2FF4")]
		public ConstructionData SaveParseEntities()
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xAD3714", Offset = "0xAD3714", VA = "0xAD3714")]
		private ObjectSaveData GetData(GameObject _gameObject, Glue _glue)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xAD3D64", Offset = "0xAD3D64", VA = "0xAD3D64")]
		public void RegisterGrabbable(Grabbable _grabbable)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xAD2658", Offset = "0xAD2658", VA = "0xAD2658")]
		public void RegisterEntity(Entity _entity)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xAD3DC4", Offset = "0xAD3DC4", VA = "0xAD3DC4")]
		public void SaveData(ConstructionData _saveData)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xAD3E80", Offset = "0xAD3E80", VA = "0xAD3E80")]
		public ConstructionData LoadData()
		{
			return null;
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xAD2064", Offset = "0xAD2064", VA = "0xAD2064")]
		[ContextMenu("GenerateSaveData")]
		public void GenerateSaveData()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xAD2478", Offset = "0xAD2478", VA = "0xAD2478")]
		public void BinaryDataSave()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xAD3F84", Offset = "0xAD3F84", VA = "0xAD3F84")]
		public void BinaryDataLoad()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xAD40D0", Offset = "0xAD40D0", VA = "0xAD40D0")]
		[ContextMenu("GetJsonSave")]
		private void GetJsonSave()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xAD40D4", Offset = "0xAD40D4", VA = "0xAD40D4")]
		public string GetJsonSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xAD20E8", Offset = "0xAD20E8", VA = "0xAD20E8")]
		public void SaveJson(ConstructionData _saveData)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xAD4138", Offset = "0xAD4138", VA = "0xAD4138")]
		public void JSONLoad()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xAD4140", Offset = "0xAD4140", VA = "0xAD4140")]
		public void JSONLoad(string _json)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xAD41D0", Offset = "0xAD41D0", VA = "0xAD41D0")]
		public SandboxPersistence()
		{
		}
	}
}
namespace Sound
{
	[Token(Token = "0x2000496")]
	public class ImpactSFX : MonoBehaviour
	{
		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactSFXScriptableObject materialSFXSO;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool onlyPlayHighestForceSFX;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("debug only")]
		[Space]
		public float debugHitForce;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool debugSoundKeyEnabled;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float minImpactVal;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float CoolTime;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] LastTimePlayed;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastImpact;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool usePosition;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rb;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 collisionPosition;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventInstance[] impactInstances;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventDescription impactEventDescription;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PARAMETER_ID impactParameterId;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventInstance fakeOneShotimpactInstance;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool initialised;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float LastTimePlayedNew;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] userProperties;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float minMass;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float maxMass;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float maxMassFactor;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float combinedMass;

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xAD5CC8", Offset = "0xAD5CC8", VA = "0xAD5CC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xAD6020", Offset = "0xAD6020", VA = "0xAD6020")]
		public void CollisionEvent(Collision _collision, float manualHitForce = -1f)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xAD64F4", Offset = "0xAD64F4", VA = "0xAD64F4")]
		public void CollisionEventFMOD(Collision _collision, float manualHitForce = -1f)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xAD6A34", Offset = "0xAD6A34", VA = "0xAD6A34")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xAD5F2C", Offset = "0xAD5F2C", VA = "0xAD5F2C")]
		private float[] CacheVelocityProperties()
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xAD6A64", Offset = "0xAD6A64", VA = "0xAD6A64")]
		public ImpactSFX()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000497")]
	[CreateAssetMenu(fileName = "ImpactSFXSet", menuName = "Sound/ImpactSet", order = 1)]
	public class ImpactSFXScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactSFXSet[] impactSets;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[TextArea]
		public string Notes;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[EventRef]
		public string materialEvent;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool newSystem;

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xAD7A90", Offset = "0xAD7A90", VA = "0xAD7A90")]
		public ImpactSFXScriptableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000498")]
	public class ImpactSFXSet
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[EventRef]
		public string impactSFX;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float impactTriggerVelocity;

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xAD7AE8", Offset = "0xAD7AE8", VA = "0xAD7AE8")]
		public ImpactSFXSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000499")]
	[CreateAssetMenu(fileName = "MouthSFXScriptableObject", menuName = "Sound/MouthSFX", order = 1)]
	public class MouthSFXScriptableObject : ScriptableObject
	{
		[Token(Token = "0x200049A")]
		public delegate void MouthEventDelegate(MouthSFXSet set, Entity entity, string ID, Transform mouth);

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MouthSFXSet[] mouthReactionSets;

		[Token(Token = "0x1400008C")]
		public static event MouthEventDelegate OnMouthEvent
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xAD7AF0", Offset = "0xAD7AF0", VA = "0xAD7AF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xAD7BA8", Offset = "0xAD7BA8", VA = "0xAD7BA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xAD7C60", Offset = "0xAD7C60", VA = "0xAD7C60")]
		public void CheckSFXEvent(Collider collider, Transform mouth)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xAD7D54", Offset = "0xAD7D54", VA = "0xAD7D54")]
		private void CheckEvent(MouthSFXSet set, Entity entity, Transform mouth, Collider collider)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xAD7E94", Offset = "0xAD7E94", VA = "0xAD7E94")]
		private void CallEvent(MouthSFXSet set, Entity e, Transform mouth)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xAD8104", Offset = "0xAD8104", VA = "0xAD8104")]
		public MouthSFXScriptableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049B")]
	public class MouthSFXSet
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("NEW MOUTH EVENT------------------------------------")]
		[Space]
		public string eventID;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventRef]
		public string mouthSFX;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tag;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EntityDefinition entityDefinition;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useCategory;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CategoryDefinition categoryDefinition;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Achievement achievement;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject spawnPrefab;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useHeadPositionForParticles;

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xAD826C", Offset = "0xAD826C", VA = "0xAD826C")]
		public MouthSFXSet()
		{
		}
	}
}
namespace PixelArsenal
{
	[Token(Token = "0x200049C")]
	public class PixelArsenalBeamStatic : MonoBehaviour
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Prefabs")]
		public GameObject beamLineRendererPrefab;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamStartPrefab;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beamEndPrefab;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject beamStart;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamEnd;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beam;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer line;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Beam Options")]
		public bool alwaysOn;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool beamCollides;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float beamLength;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float beamEndOffset;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xAD82CC", Offset = "0xAD82CC", VA = "0xAD82CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xAD82D0", Offset = "0xAD82D0", VA = "0xAD82D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xAD85B0", Offset = "0xAD85B0", VA = "0xAD85B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xAD86C8", Offset = "0xAD86C8", VA = "0xAD86C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xAD82E0", Offset = "0xAD82E0", VA = "0xAD82E0")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xAD85B4", Offset = "0xAD85B4", VA = "0xAD85B4")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xAD8ACC", Offset = "0xAD8ACC", VA = "0xAD8ACC")]
		public PixelArsenalBeamStatic()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class PixelArsenalLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Seconds to dim the light")]
		public float life;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xAD8AEC", Offset = "0xAD8AEC", VA = "0xAD8AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xAD8C08", Offset = "0xAD8C08", VA = "0xAD8C08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xAD8D44", Offset = "0xAD8D44", VA = "0xAD8D44")]
		public PixelArsenalLightFade()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class PixelArsenalLoopScript : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PixelArsenalLoopScript <>4__this;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBE")]
				[Address(RVA = "0xAD9028", Offset = "0xAD9028", VA = "0xAD9028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC0")]
				[Address(RVA = "0xAD9070", Offset = "0xAD9070", VA = "0xAD9070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xAD8E24", Offset = "0xAD8E24", VA = "0xAD8E24")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xAD8E5C", Offset = "0xAD8E5C", VA = "0xAD8E5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xAD8E60", Offset = "0xAD8E60", VA = "0xAD8E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xAD9030", Offset = "0xAD9030", VA = "0xAD9030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xAD8D60", Offset = "0xAD8D60", VA = "0xAD8D60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xAD8D64", Offset = "0xAD8D64", VA = "0xAD8D64")]
		public void PlayLoopingPEffect()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xAD8DB0", Offset = "0xAD8DB0", VA = "0xAD8DB0")]
		[IteratorStateMachine(typeof(<EffectLoop>d__4))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xAD8E4C", Offset = "0xAD8E4C", VA = "0xAD8E4C")]
		public PixelArsenalLoopScript()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class PixelArsenalRotation : MonoBehaviour
	{
		[Token(Token = "0x20004A1")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001E2B")]
			Local,
			[Token(Token = "0x4001E2C")]
			World
		}

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rotate axises by degrees per second")]
		public Vector3 rotateVector;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xAD9078", Offset = "0xAD9078", VA = "0xAD9078")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xAD907C", Offset = "0xAD907C", VA = "0xAD907C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xAD9150", Offset = "0xAD9150", VA = "0xAD9150")]
		public PixelArsenalRotation()
		{
		}
	}
}
namespace RoadNetwork
{
	[Serializable]
	[Token(Token = "0x20004A2")]
	public class ListWrapper
	{
		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> List;

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xAD91B0", Offset = "0xAD91B0", VA = "0xAD91B0")]
		public ListWrapper()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	[SelectionBase]
	public class RoadPiece : MonoBehaviour
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int PosX;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PosY;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RoadRoot Root;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter MyMeshFilter;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoadScriptableObject Data;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Geometry;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int North;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int West;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int East;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int South;

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xAD91B8", Offset = "0xAD91B8", VA = "0xAD91B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xAD9210", Offset = "0xAD9210", VA = "0xAD9210")]
		public void Resolve(int i)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xAD93A8", Offset = "0xAD93A8", VA = "0xAD93A8")]
		public RoadPiece()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	[ExecuteInEditMode]
	public class RoadRoot : MonoBehaviour
	{
		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TileSize;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RoadPiece> Pieces;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Inizialized;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xAD93B0", Offset = "0xAD93B0", VA = "0xAD93B0")]
		public RoadRoot()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public enum Direction
	{
		[Token(Token = "0x4001E3C")]
		UP,
		[Token(Token = "0x4001E3D")]
		DOWN,
		[Token(Token = "0x4001E3E")]
		LEFT,
		[Token(Token = "0x4001E3F")]
		RIGHT
	}
	[Token(Token = "0x20004A6")]
	public enum TileType
	{
		[Token(Token = "0x4001E41")]
		Empty,
		[Token(Token = "0x4001E42")]
		Road,
		[Token(Token = "0x4001E43")]
		Filler
	}
}
namespace GoogleSheetsForUnity
{
	[Token(Token = "0x20004A7")]
	[DisallowMultipleComponent]
	public class ConsoleExample : MonoBehaviour
	{
		[Token(Token = "0x20004A8")]
		public struct LogMsg
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string logString;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logType;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string logNumber;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sessionId;
		}

		[Token(Token = "0x20004A9")]
		public enum TABLE_HEADERS
		{
			[Token(Token = "0x4001E50")]
			logNumber,
			[Token(Token = "0x4001E51")]
			logType,
			[Token(Token = "0x4001E52")]
			logString,
			[Token(Token = "0x4001E53")]
			stackTrace,
			[Token(Token = "0x4001E54")]
			sessionId
		}

		[Token(Token = "0x20004AA")]
		[CompilerGenerated]
		private sealed class <ProcessQueue>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConsoleExample <>4__this;

			[Token(Token = "0x170001FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD5")]
				[Address(RVA = "0xADA624", Offset = "0xADA624", VA = "0xADA624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD7")]
				[Address(RVA = "0xADA66C", Offset = "0xADA66C", VA = "0xADA66C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xADA270", Offset = "0xADA270", VA = "0xADA270")]
			[DebuggerHidden]
			public <ProcessQueue>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xADA2A0", Offset = "0xADA2A0", VA = "0xADA2A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xADA2A4", Offset = "0xADA2A4", VA = "0xADA2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xADA62C", Offset = "0xADA62C", VA = "0xADA62C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E44")]
		public const string TABLE_NAME = "ConsoleLog";

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LogMsg> _logMsgQueue;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _processing;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _interval;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _logCounter;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string sessionUuid;

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xAD93C0", Offset = "0xAD93C0", VA = "0xAD93C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xAD9470", Offset = "0xAD9470", VA = "0xAD9470")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xAD9524", Offset = "0xAD9524", VA = "0xAD9524")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xAD9638", Offset = "0xAD9638", VA = "0xAD9638")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xAD99A4", Offset = "0xAD99A4", VA = "0xAD99A4")]
		public void CreateConsoleLogTable()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xAD9A98", Offset = "0xAD9A98", VA = "0xAD9A98")]
		public void TestConsoleMessages()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xAD9FF8", Offset = "0xAD9FF8", VA = "0xAD9FF8")]
		private void AddToQueue(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xADA1FC", Offset = "0xADA1FC", VA = "0xADA1FC")]
		[IteratorStateMachine(typeof(<ProcessQueue>d__15))]
		private IEnumerator ProcessQueue()
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xADA298", Offset = "0xADA298", VA = "0xADA298")]
		public ConsoleExample()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class FilesExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AC")]
		public struct PlayerInfo
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _filePath;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cloudFileID;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _binaryFileName;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _textFileName;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerInfo _playerData;

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xADA674", Offset = "0xADA674", VA = "0xADA674")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xADA7A0", Offset = "0xADA7A0", VA = "0xADA7A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xADA8CC", Offset = "0xADA8CC", VA = "0xADA8CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xADA9E4", Offset = "0xADA9E4", VA = "0xADA9E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xADBD60", Offset = "0xADBD60", VA = "0xADBD60")]
		private void SaveLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xADBF50", Offset = "0xADBF50", VA = "0xADBF50")]
		private void LoadLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xADBC38", Offset = "0xADBC38", VA = "0xADBC38")]
		private void SaveLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xADBE3C", Offset = "0xADBE3C", VA = "0xADBE3C")]
		private void LoadLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xADC8FC", Offset = "0xADC8FC", VA = "0xADC8FC")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xADC01C", Offset = "0xADC01C", VA = "0xADC01C")]
		private void UploadBinaryFile()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xADC154", Offset = "0xADC154", VA = "0xADC154")]
		private void UploadTextFile()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xADC4F8", Offset = "0xADC4F8", VA = "0xADC4F8")]
		private void OutputData(string source)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xADD318", Offset = "0xADD318", VA = "0xADD318")]
		public FilesExample()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class ImagesExample : MonoBehaviour
	{
		[Token(Token = "0x20004AE")]
		[CompilerGenerated]
		private sealed class <TakeScreenshotManually>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImagesExample <>4__this;

			[Token(Token = "0x170001FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0xADE9F4", Offset = "0xADE9F4", VA = "0xADE9F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF2")]
				[Address(RVA = "0xADEA3C", Offset = "0xADEA3C", VA = "0xADEA3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xADE53C", Offset = "0xADE53C", VA = "0xADE53C")]
			[DebuggerHidden]
			public <TakeScreenshotManually>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xADE874", Offset = "0xADE874", VA = "0xADE874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xADE878", Offset = "0xADE878", VA = "0xADE878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xADE9FC", Offset = "0xADE9FC", VA = "0xADE9FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect _texturePos;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _text2d;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _cloudFileID;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _imagePath;

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xADD39C", Offset = "0xADD39C", VA = "0xADD39C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xADD4C8", Offset = "0xADD4C8", VA = "0xADD4C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xADD5F4", Offset = "0xADD5F4", VA = "0xADD5F4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xADDFF4", Offset = "0xADDFF4", VA = "0xADDFF4")]
		private void TakeScreenshot()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xADE4C8", Offset = "0xADE4C8", VA = "0xADE4C8")]
		[IteratorStateMachine(typeof(<TakeScreenshotManually>d__8))]
		private IEnumerator TakeScreenshotManually()
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xADDF40", Offset = "0xADDF40", VA = "0xADDF40")]
		private void LoadPNGFromFile(string filePath)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xADE564", Offset = "0xADE564", VA = "0xADE564")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xADE7B0", Offset = "0xADE7B0", VA = "0xADE7B0")]
		public ImagesExample()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class LoginSessionExample : MonoBehaviour
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D clock;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string credentialsTableName;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _usernameText;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _passwdText;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _mailText;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _lastLogon;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _signupDate;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _showRegistrationForm;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isLoggedIn;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _waitingForServerResponse;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xADEA44", Offset = "0xADEA44", VA = "0xADEA44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xADEC40", Offset = "0xADEC40", VA = "0xADEC40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xADEE3C", Offset = "0xADEE3C", VA = "0xADEE3C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xAE0744", Offset = "0xAE0744", VA = "0xAE0744")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xAE09EC", Offset = "0xAE09EC", VA = "0xAE09EC")]
		private void HandleErrorResponse(string errorMsg)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xAE09F4", Offset = "0xAE09F4", VA = "0xAE09F4")]
		public LoginSessionExample()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class SpreadsheetsExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B1")]
		public struct PlayerInfo
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerInfo _playerData;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _tableName;

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xAE0A78", Offset = "0xAE0A78", VA = "0xAE0A78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xAE0BA4", Offset = "0xAE0BA4", VA = "0xAE0BA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xAE0CD0", Offset = "0xAE0CD0", VA = "0xAE0CD0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xAE1AC0", Offset = "0xAE1AC0", VA = "0xAE1AC0")]
		private void CreatePlayerTable()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xAE1D0C", Offset = "0xAE1D0C", VA = "0xAE1D0C")]
		private void SavePlayer()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xAE1E1C", Offset = "0xAE1E1C", VA = "0xAE1E1C")]
		private void UpdatePlayer(bool create)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xAE1F5C", Offset = "0xAE1F5C", VA = "0xAE1F5C")]
		private void RetrievePlayer()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xAE201C", Offset = "0xAE201C", VA = "0xAE201C")]
		private void GetAllPlayers()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xAE20D4", Offset = "0xAE20D4", VA = "0xAE20D4")]
		private void GetAllTables()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xAE2804", Offset = "0xAE2804", VA = "0xAE2804")]
		public void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xAE337C", Offset = "0xAE337C", VA = "0xAE337C")]
		public SpreadsheetsExample()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[CreateAssetMenu(fileName = "ConnectionData", menuName = "Google Sheets For Unity/Connection Data Asset", order = 0)]
	public class ConnectionData : ScriptableObject
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("URL of the webapp deployed on Google Drive.")]
		public string webServiceUrl;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Id of the spreadsheet to be used for the objects & tables operations. If more than one spreadsheet are required, different connections can be made, or the spreadsheet Ids manually stated on the requests forms.")]
		public string spreadsheetId;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The password to use on the individual queries. Will not be used if the connection is set to useSessionContext.")]
		public string servicePassword;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The time in seconds before declaring the connection as timed out.")]
		public float timeOutLimit;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("WWW Request type: true will use POST and false will use GET.")]
		public bool usePOST;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[Tooltip("When checked, instead of stateless independent queries that use a password, the queries will depend on the session context for authorization. See Login Session Example for more info on how to use sessions.")]
		public bool useSessionContext;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The session duration time, in seconds. The minimum recommended is 7200 seconds (2 hours) and the maximum possible is 21600 seconds (6 hours).")]
		public int sessionTime;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Username for the login session.")]
		public string sessionUser;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Password for the login session.")]
		public string sessionPassword;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the table where the credentials data is holded.")]
		public string tableName;

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xAE3460", Offset = "0xAE3460", VA = "0xAE3460")]
		public ConnectionData()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public static class Drive
	{
		[Token(Token = "0x20004B4")]
		public enum QueryType
		{
			[Token(Token = "0x4001E8B")]
			createObject,
			[Token(Token = "0x4001E8C")]
			createObjects,
			[Token(Token = "0x4001E8D")]
			createTable,
			[Token(Token = "0x4001E8E")]
			createBinaryFile,
			[Token(Token = "0x4001E8F")]
			createTextFile,
			[Token(Token = "0x4001E90")]
			createImageFile,
			[Token(Token = "0x4001E91")]
			createFolder,
			[Token(Token = "0x4001E92")]
			getObjectsByField,
			[Token(Token = "0x4001E93")]
			getCellValue,
			[Token(Token = "0x4001E94")]
			getTable,
			[Token(Token = "0x4001E95")]
			getAllTables,
			[Token(Token = "0x4001E96")]
			getBinaryFile,
			[Token(Token = "0x4001E97")]
			getTextFile,
			[Token(Token = "0x4001E98")]
			getImageFile,
			[Token(Token = "0x4001E99")]
			updateObjects,
			[Token(Token = "0x4001E9A")]
			setCellValue,
			[Token(Token = "0x4001E9B")]
			deleteObjects,
			[Token(Token = "0x4001E9C")]
			deleteFile,
			[Token(Token = "0x4001E9D")]
			deleteFolderByName,
			[Token(Token = "0x4001E9E")]
			deleteFolderById,
			[Token(Token = "0x4001E9F")]
			signup,
			[Token(Token = "0x4001EA0")]
			login,
			[Token(Token = "0x4001EA1")]
			logout
		}

		[Serializable]
		[Token(Token = "0x20004B5")]
		public struct DataContainer
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string query;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string result;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string payload;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objType;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string column;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string row;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string fileId;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fileName;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string folderId;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string folderName;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string searchField;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string searchValue;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string value;

			[Token(Token = "0x17000201")]
			public QueryType QueryType
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0xADCD5C", Offset = "0xADCD5C", VA = "0xADCD5C")]
				get
				{
					return default(QueryType);
				}
			}
		}

		[Token(Token = "0x20004B6")]
		public class SessionContextData
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string userId;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string userName;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string userEmail;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sessionToken;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string lastLogon;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string registrationDate;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int sessionTime;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DateTime sessionStart;

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xAE5BA4", Offset = "0xAE5BA4", VA = "0xAE5BA4")]
			public SessionContextData()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		public delegate void OnResponseDelegate(bool success);

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SessionContextData _sessionContext;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ConnectionData _connectionData;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _currentStatus;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool debugMode;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DriveConnection driveConnectorRuntime;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction<DataContainer> responseCallback;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction<string> errorResponseCallback;

		[Token(Token = "0x17000200")]
		public static SessionContextData SessionContext
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xAE34F0", Offset = "0xAE34F0", VA = "0xAE34F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xAE3548", Offset = "0xAE3548", VA = "0xAE3548")]
			set
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public static event OnResponseDelegate OnResponse
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xAE35B0", Offset = "0xAE35B0", VA = "0xAE35B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xAE368C", Offset = "0xAE368C", VA = "0xAE368C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xADA480", Offset = "0xADA480", VA = "0xADA480")]
		public static void CreateObject(string jsonObject, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xAE3F28", Offset = "0xAE3F28", VA = "0xAE3F28")]
		public static void CreateObject(Dictionary<string, string> fields, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xAE409C", Offset = "0xAE409C", VA = "0xAE409C")]
		public static void CreateObjects(string jsonObjects, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xAD9DB4", Offset = "0xAD9DB4", VA = "0xAD9DB4")]
		public static void CreateTable(string[] headers, string tableTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xAE23B0", Offset = "0xAE23B0", VA = "0xAE23B0")]
		public static void GetObjectsByField(string objTypeName, string searchFieldName, string searchValue, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xAE4244", Offset = "0xAE4244", VA = "0xAE4244")]
		public static void GetCellValue(string objTypeName, string column, string row, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xAE2570", Offset = "0xAE2570", VA = "0xAE2570")]
		public static void GetTable(string tableTypeName, bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xAE26D4", Offset = "0xAE26D4", VA = "0xAE26D4")]
		public static void GetAllTables(bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xAE2180", Offset = "0xAE2180", VA = "0xAE2180")]
		public static void UpdateObjects(string objTypeName, string searchFieldName, string searchValue, string jsonObject, bool create, bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xAE441C", Offset = "0xAE441C", VA = "0xAE441C")]
		public static void SetCellValue(string objTypeName, string column, string row, string value, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xAE4620", Offset = "0xAE4620", VA = "0xAE4620")]
		public static void DeleteObjects(string objTypeName, string searchFieldName, string searchValue, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xADC210", Offset = "0xADC210", VA = "0xADC210")]
		public static void GetBinaryFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xADC384", Offset = "0xADC384", VA = "0xADC384")]
		public static void GetTextFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xADE354", Offset = "0xADE354", VA = "0xADE354")]
		public static void GetImageFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xADE018", Offset = "0xADE018", VA = "0xADE018")]
		public static void CreateImageFile(Texture2D texture, string name, bool usePNG = true, int jpgQuality = 90, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xADCE58", Offset = "0xADCE58", VA = "0xADCE58")]
		public static void CreateBinaryFile(byte[] fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xADD0D0", Offset = "0xADD0D0", VA = "0xADD0D0")]
		public static void CreateTextFile(string fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xAE47E0", Offset = "0xAE47E0", VA = "0xAE47E0")]
		public static void DeleteFile(string fileId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xAE4954", Offset = "0xAE4954", VA = "0xAE4954")]
		public static void CreateFolder(string folderName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xAE4AC8", Offset = "0xAE4AC8", VA = "0xAE4AC8")]
		public static void DeleteFolderByName(string folderName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xAE4C3C", Offset = "0xAE4C3C", VA = "0xAE4C3C")]
		public static void DeleteFolderById(string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xADFE74", Offset = "0xADFE74", VA = "0xADFE74")]
		public static void CreateCredentialsTable(string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xAE04B0", Offset = "0xAE04B0", VA = "0xAE04B0")]
		public static void Signup(string userName, string email, string pass, string id, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xAE02D8", Offset = "0xAE02D8", VA = "0xAE02D8")]
		public static void Login(string userName, string pass, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xAE0198", Offset = "0xAE0198", VA = "0xAE0198")]
		public static void Logout(bool runtime = true)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xAE4DB0", Offset = "0xAE4DB0", VA = "0xAE4DB0")]
		private static void SetConnectionData(bool runtime, string googleSheetID)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xAE52E8", Offset = "0xAE52E8", VA = "0xAE52E8")]
		private static Dictionary<string, string> CompleteForm(Dictionary<string, string> form)
		{
			return null;
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xAE3768", Offset = "0xAE3768", VA = "0xAE3768")]
		private static void CreateRequest(Dictionary<string, string> dataForm, bool runtime, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xAE55F0", Offset = "0xAE55F0", VA = "0xAE55F0")]
		public static void ProcessResponse(string response, float time)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xAE5A00", Offset = "0xAE5A00", VA = "0xAE5A00")]
		public static void HandleError(string response, float time)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xAE5210", Offset = "0xAE5210", VA = "0xAE5210")]
		public static void UpdateStatus(params string[] statusDetails)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class JsonHelper
	{
		[Serializable]
		[Token(Token = "0x20004B9")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001E32")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x6001E2F")]
		public static T[] ArrayFromJson<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		public static string ToJson<T>(T[] array, bool prettyPrint = false)
		{
			return null;
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xAE5D08", Offset = "0xAE5D08", VA = "0xAE5D08")]
		public JsonHelper()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class DriveConnection : MonoBehaviour
	{
		[Token(Token = "0x20004BB")]
		[CompilerGenerated]
		private sealed class <CoExecuteRequest>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest www;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveConnection <>4__this;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000202")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0xAE5FD4", Offset = "0xAE5FD4", VA = "0xAE5FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000203")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0xAE601C", Offset = "0xAE601C", VA = "0xAE601C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xAE5DA0", Offset = "0xAE5DA0", VA = "0xAE5DA0")]
			[DebuggerHidden]
			public <CoExecuteRequest>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xAE5DD0", Offset = "0xAE5DD0", VA = "0xAE5DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xAE5DD4", Offset = "0xAE5DD4", VA = "0xAE5DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xAE5FDC", Offset = "0xAE5FDC", VA = "0xAE5FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConnectionData connectionData;

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xAE55D0", Offset = "0xAE55D0", VA = "0xAE55D0")]
		public void ExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xAE5D10", Offset = "0xAE5D10", VA = "0xAE5D10")]
		[IteratorStateMachine(typeof(<CoExecuteRequest>d__2))]
		private IEnumerator CoExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
			return null;
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xAE5DC8", Offset = "0xAE5DC8", VA = "0xAE5DC8")]
		public DriveConnection()
		{
		}
	}
}
namespace GameAnalyticsSDK
{
	[Token(Token = "0x20004BC")]
	public enum GAErrorSeverity
	{
		[Token(Token = "0x4001EC0")]
		Undefined,
		[Token(Token = "0x4001EC1")]
		Debug,
		[Token(Token = "0x4001EC2")]
		Info,
		[Token(Token = "0x4001EC3")]
		Warning,
		[Token(Token = "0x4001EC4")]
		Error,
		[Token(Token = "0x4001EC5")]
		Critical
	}
	[Token(Token = "0x20004BD")]
	public enum GAProgressionStatus
	{
		[Token(Token = "0x4001EC7")]
		Undefined,
		[Token(Token = "0x4001EC8")]
		Start,
		[Token(Token = "0x4001EC9")]
		Complete,
		[Token(Token = "0x4001ECA")]
		Fail
	}
	[Token(Token = "0x20004BE")]
	public enum GAResourceFlowType
	{
		[Token(Token = "0x4001ECC")]
		Undefined,
		[Token(Token = "0x4001ECD")]
		Source,
		[Token(Token = "0x4001ECE")]
		Sink
	}
	[Token(Token = "0x20004BF")]
	public enum GAAdAction
	{
		[Token(Token = "0x4001ED0")]
		Undefined,
		[Token(Token = "0x4001ED1")]
		Clicked,
		[Token(Token = "0x4001ED2")]
		Show,
		[Token(Token = "0x4001ED3")]
		FailedShow,
		[Token(Token = "0x4001ED4")]
		RewardReceived,
		[Token(Token = "0x4001ED5")]
		Request,
		[Token(Token = "0x4001ED6")]
		Loaded
	}
	[Token(Token = "0x20004C0")]
	public enum GAAdType
	{
		[Token(Token = "0x4001ED8")]
		Undefined,
		[Token(Token = "0x4001ED9")]
		Video,
		[Token(Token = "0x4001EDA")]
		RewardedVideo,
		[Token(Token = "0x4001EDB")]
		Playable,
		[Token(Token = "0x4001EDC")]
		Interstitial,
		[Token(Token = "0x4001EDD")]
		OfferWall,
		[Token(Token = "0x4001EDE")]
		Banner
	}
	[Token(Token = "0x20004C1")]
	public enum GAAdError
	{
		[Token(Token = "0x4001EE0")]
		Undefined,
		[Token(Token = "0x4001EE1")]
		Unknown,
		[Token(Token = "0x4001EE2")]
		Offline,
		[Token(Token = "0x4001EE3")]
		NoFill,
		[Token(Token = "0x4001EE4")]
		InternalError,
		[Token(Token = "0x4001EE5")]
		InvalidRequest,
		[Token(Token = "0x4001EE6")]
		UnableToPrecache
	}
	[Token(Token = "0x20004C2")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(GA_SpecialEvents))]
	public class GameAnalytics : MonoBehaviour
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameAnalyticsSDK.Setup.Settings _settings;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameAnalytics _instance;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _hasInitializeBeenCalled;

		[Token(Token = "0x17000204")]
		public static GameAnalyticsSDK.Setup.Settings SettingsGA
		{
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xAE6024", Offset = "0xAE6024", VA = "0xAE6024")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xAE62E0", Offset = "0xAE62E0", VA = "0xAE62E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public static event Action OnRemoteConfigsUpdatedEvent
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xAE8DF8", Offset = "0xAE8DF8", VA = "0xAE8DF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xAE8EB4", Offset = "0xAE8EB4", VA = "0xAE8EB4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xAE6338", Offset = "0xAE6338", VA = "0xAE6338")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xAE63B4", Offset = "0xAE63B4", VA = "0xAE63B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xAE6430", Offset = "0xAE6430", VA = "0xAE6430")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xAE6598", Offset = "0xAE6598", VA = "0xAE6598")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xAE6644", Offset = "0xAE6644", VA = "0xAE6644")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xAE60B4", Offset = "0xAE60B4", VA = "0xAE60B4")]
		private static void InitAPI()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xAE6870", Offset = "0xAE6870", VA = "0xAE6870")]
		private static void InternalInitialize()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xAE7464", Offset = "0xAE7464", VA = "0xAE7464")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xAE76F0", Offset = "0xAE76F0", VA = "0xAE76F0")]
		public static void NewBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xAE7860", Offset = "0xAE7860", VA = "0xAE7860")]
		public static void NewBusinessEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xAE7A38", Offset = "0xAE7A38", VA = "0xAE7A38")]
		public static void NewDesignEvent(string eventName)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xAE7AEC", Offset = "0xAE7AEC", VA = "0xAE7AEC")]
		public static void NewDesignEvent(string eventName, float eventValue)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xAE7C28", Offset = "0xAE7C28", VA = "0xAE7C28")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xAE7D00", Offset = "0xAE7D00", VA = "0xAE7D00")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xAE7DD8", Offset = "0xAE7DD8", VA = "0xAE7DD8")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xAE7EBC", Offset = "0xAE7EBC", VA = "0xAE7EBC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, int score)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xAE8008", Offset = "0xAE8008", VA = "0xAE8008")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xAE8174", Offset = "0xAE8174", VA = "0xAE8174")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xAE82EC", Offset = "0xAE82EC", VA = "0xAE82EC")]
		public static void NewResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xAE8468", Offset = "0xAE8468", VA = "0xAE8468")]
		public static void NewErrorEvent(GAErrorSeverity severity, string message)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xAE8524", Offset = "0xAE8524", VA = "0xAE8524")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xAE8680", Offset = "0xAE8680", VA = "0xAE8680")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xAE87DC", Offset = "0xAE87DC", VA = "0xAE87DC")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xAE8928", Offset = "0xAE8928", VA = "0xAE8928")]
		public static void SetCustomId(string userId)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xAE7410", Offset = "0xAE7410", VA = "0xAE7410")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xAE8A88", Offset = "0xAE8A88", VA = "0xAE8A88")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xAE8B30", Offset = "0xAE8B30", VA = "0xAE8B30")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xAE8C10", Offset = "0xAE8C10", VA = "0xAE8C10")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xAE8CF0", Offset = "0xAE8CF0", VA = "0xAE8CF0")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xAE8D48", Offset = "0xAE8D48", VA = "0xAE8D48")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xAE8DA0", Offset = "0xAE8DA0", VA = "0xAE8DA0")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xAE8F70", Offset = "0xAE8F70", VA = "0xAE8F70")]
		public void OnRemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xAE8FD4", Offset = "0xAE8FD4", VA = "0xAE8FD4")]
		public static void RemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xAE9038", Offset = "0xAE9038", VA = "0xAE9038")]
		public static string GetRemoteConfigsValueAsString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xAE9040", Offset = "0xAE9040", VA = "0xAE9040")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xAE9108", Offset = "0xAE9108", VA = "0xAE9108")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xAE91A0", Offset = "0xAE91A0", VA = "0xAE91A0")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xAE9238", Offset = "0xAE9238", VA = "0xAE9238")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xAE92D0", Offset = "0xAE92D0", VA = "0xAE92D0")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xAE9368", Offset = "0xAE9368", VA = "0xAE9368")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xAE9410", Offset = "0xAE9410", VA = "0xAE9410")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xAE94B8", Offset = "0xAE94B8", VA = "0xAE94B8")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xAE9560", Offset = "0xAE9560", VA = "0xAE9560")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xAE9608", Offset = "0xAE9608", VA = "0xAE9608")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xAE96A0", Offset = "0xAE96A0", VA = "0xAE96A0")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xAE9738", Offset = "0xAE9738", VA = "0xAE9738")]
		public static void SubscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xAE97D0", Offset = "0xAE97D0", VA = "0xAE97D0")]
		public static void SubscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xAE9868", Offset = "0xAE9868", VA = "0xAE9868")]
		public static void SubscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xAE9900", Offset = "0xAE9900", VA = "0xAE9900")]
		public static void RequestTrackingAuthorization(IGameAnalyticsATTListener listener)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xAE6E5C", Offset = "0xAE6E5C", VA = "0xAE6E5C")]
		private static string GetUnityVersion()
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xAE6CD8", Offset = "0xAE6CD8", VA = "0xAE6CD8")]
		private static int GetPlatformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xAE9904", Offset = "0xAE9904", VA = "0xAE9904")]
		public static void SetBuildAllPlatforms(string build)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xAE99A0", Offset = "0xAE99A0", VA = "0xAE99A0")]
		public GameAnalytics()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public interface IGameAnalyticsATTListener
	{
		[Token(Token = "0x6001E75")]
		void GameAnalyticsATTListenerNotDetermined();

		[Token(Token = "0x6001E76")]
		void GameAnalyticsATTListenerRestricted();

		[Token(Token = "0x6001E77")]
		void GameAnalyticsATTListenerDenied();

		[Token(Token = "0x6001E78")]
		void GameAnalyticsATTListenerAuthorized();
	}
}
namespace GameAnalyticsSDK.Wrapper
{
	[Token(Token = "0x20004C4")]
	public class GA_Wrapper
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AndroidJavaClass GA;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly AndroidJavaClass UNITY_GA;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly AndroidJavaClass GA_IMEI;

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xAE99A8", Offset = "0xAE99A8", VA = "0xAE99A8")]
		private static void configureAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xAE9E2C", Offset = "0xAE9E2C", VA = "0xAE9E2C")]
		private static void configureAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xAEA2A4", Offset = "0xAEA2A4", VA = "0xAEA2A4")]
		private static void configureAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xAEA71C", Offset = "0xAEA71C", VA = "0xAEA71C")]
		private static void configureAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xAEAB94", Offset = "0xAEAB94", VA = "0xAEAB94")]
		private static void configureAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xAEB00C", Offset = "0xAEB00C", VA = "0xAEB00C")]
		private static void configureSdkGameEngineVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xAEB0FC", Offset = "0xAEB0FC", VA = "0xAEB0FC")]
		private static void configureGameEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xAEB1EC", Offset = "0xAEB1EC", VA = "0xAEB1EC")]
		private static void configureBuild(string build)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xAEB2DC", Offset = "0xAEB2DC", VA = "0xAEB2DC")]
		private static void configureUserId(string userId)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xAEB3CC", Offset = "0xAEB3CC", VA = "0xAEB3CC")]
		private static void configureAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xAEB4F0", Offset = "0xAEB4F0", VA = "0xAEB4F0")]
		private static void initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xAEB974", Offset = "0xAEB974", VA = "0xAEB974")]
		private static void setCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xAEBA64", Offset = "0xAEBA64", VA = "0xAEBA64")]
		private static void setCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xAEBB54", Offset = "0xAEBB54", VA = "0xAEBB54")]
		private static void setCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xAEBC44", Offset = "0xAEBC44", VA = "0xAEBC44")]
		private static void addBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, string fields)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xAEBE58", Offset = "0xAEBE58", VA = "0xAEBE58")]
		private static void addBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, string fields)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xAEC124", Offset = "0xAEC124", VA = "0xAEC124")]
		private static void addResourceEvent(int flowType, string currency, float amount, string itemType, string itemId, string fields)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xAEC360", Offset = "0xAEC360", VA = "0xAEC360")]
		private static void addProgressionEvent(int progressionStatus, string progression01, string progression02, string progression03, string fields)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xAEC53C", Offset = "0xAEC53C", VA = "0xAEC53C")]
		private static void addProgressionEventWithScore(int progressionStatus, string progression01, string progression02, string progression03, int score, string fields)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xAEC784", Offset = "0xAEC784", VA = "0xAEC784")]
		private static void addDesignEvent(string eventId, string fields)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xAEC874", Offset = "0xAEC874", VA = "0xAEC874")]
		private static void addDesignEventWithValue(string eventId, float value, string fields)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xAEC9E4", Offset = "0xAEC9E4", VA = "0xAEC9E4")]
		private static void addErrorEvent(int severity, string message, string fields)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xAECB48", Offset = "0xAECB48", VA = "0xAECB48")]
		private static void addAdEventWithDuration(int adAction, int adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xAECDA0", Offset = "0xAECDA0", VA = "0xAECDA0")]
		private static void addAdEventWithReason(int adAction, int adType, string adSdkName, string adPlacement, int noAdReason)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xAECFE4", Offset = "0xAECFE4", VA = "0xAECFE4")]
		private static void addAdEvent(int adAction, int adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xAED1D4", Offset = "0xAED1D4", VA = "0xAED1D4")]
		private static void setEnabledInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xAED2F8", Offset = "0xAED2F8", VA = "0xAED2F8")]
		private static void setEnabledVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xAED41C", Offset = "0xAED41C", VA = "0xAED41C")]
		private static void setManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xAED540", Offset = "0xAED540", VA = "0xAED540")]
		private static void setEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xAED664", Offset = "0xAED664", VA = "0xAED664")]
		private static void gameAnalyticsStartSession()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xAED73C", Offset = "0xAED73C", VA = "0xAED73C")]
		private static void gameAnalyticsEndSession()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xAED814", Offset = "0xAED814", VA = "0xAED814")]
		private static string getRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xAED958", Offset = "0xAED958", VA = "0xAED958")]
		private static bool isRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xAEDA44", Offset = "0xAEDA44", VA = "0xAEDA44")]
		private static string getRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xAEDB30", Offset = "0xAEDB30", VA = "0xAEDB30")]
		private static string getABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xAEDC1C", Offset = "0xAEDC1C", VA = "0xAEDC1C")]
		private static string getABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xAEDD08", Offset = "0xAEDD08", VA = "0xAEDD08")]
		private static void startTimer(string key)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xAEDDF8", Offset = "0xAEDDF8", VA = "0xAEDDF8")]
		private static void pauseTimer(string key)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xAEDEE8", Offset = "0xAEDEE8", VA = "0xAEDEE8")]
		private static void resumeTimer(string key)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xAEDFD8", Offset = "0xAEDFD8", VA = "0xAEDFD8")]
		private static long stopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xAEE0DC", Offset = "0xAEE0DC", VA = "0xAEE0DC")]
		private static void subscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xAEE158", Offset = "0xAEE158", VA = "0xAEE158")]
		private static void MopubImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xAEE15C", Offset = "0xAEE15C", VA = "0xAEE15C")]
		private static void subscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xAEE1D8", Offset = "0xAEE1D8", VA = "0xAEE1D8")]
		private static void FyberImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xAEE1DC", Offset = "0xAEE1DC", VA = "0xAEE1DC")]
		private static void subscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xAEE258", Offset = "0xAEE258", VA = "0xAEE258")]
		private static void IronSourceImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xAEE25C", Offset = "0xAEE25C", VA = "0xAEE25C")]
		private static void subscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xAEE2D8", Offset = "0xAEE2D8", VA = "0xAEE2D8")]
		private static void TopOnImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xAEE2DC", Offset = "0xAEE2DC", VA = "0xAEE2DC")]
		private static void subscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xAEE358", Offset = "0xAEE358", VA = "0xAEE358")]
		private static void MaxImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xAEE35C", Offset = "0xAEE35C", VA = "0xAEE35C")]
		public static void SetAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xAEE3B0", Offset = "0xAEE3B0", VA = "0xAEE3B0")]
		public static void SetAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xAEE404", Offset = "0xAEE404", VA = "0xAEE404")]
		public static void SetAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xAEE458", Offset = "0xAEE458", VA = "0xAEE458")]
		public static void SetAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xAEE4AC", Offset = "0xAEE4AC", VA = "0xAEE4AC")]
		public static void SetAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xAE6E08", Offset = "0xAE6E08", VA = "0xAE6E08")]
		public static void SetUnitySdkVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xAE6FF4", Offset = "0xAE6FF4", VA = "0xAE6FF4")]
		public static void SetUnityEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xAE709C", Offset = "0xAE709C", VA = "0xAE709C")]
		public static void SetBuild(string build)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xAE89E0", Offset = "0xAE89E0", VA = "0xAE89E0")]
		public static void SetCustomUserId(string userId)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xAE8A34", Offset = "0xAE8A34", VA = "0xAE8A34")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xAE8ADC", Offset = "0xAE8ADC", VA = "0xAE8ADC")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xAE7048", Offset = "0xAE7048", VA = "0xAE7048")]
		public static void SetAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xAE8B7C", Offset = "0xAE8B7C", VA = "0xAE8B7C")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xAE8C5C", Offset = "0xAE8C5C", VA = "0xAE8C5C")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xAE768C", Offset = "0xAE768C", VA = "0xAE768C")]
		public static void Initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xAEE554", Offset = "0xAEE554", VA = "0xAEE554")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xAEE5A8", Offset = "0xAEE5A8", VA = "0xAEE5A8")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xAEE5FC", Offset = "0xAEE5FC", VA = "0xAEE5FC")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xAEE650", Offset = "0xAEE650", VA = "0xAEE650")]
		public static void AddBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xAEEA38", Offset = "0xAEEA38", VA = "0xAEEA38")]
		public static void AddBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xAEEAD0", Offset = "0xAEEAD0", VA = "0xAEEAD0")]
		public static void AddResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xAEEB68", Offset = "0xAEEB68", VA = "0xAEEB68")]
		public static void AddProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xAEEBF0", Offset = "0xAEEBF0", VA = "0xAEEBF0")]
		public static void AddProgressionEventWithScore(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xAEEC88", Offset = "0xAEEC88", VA = "0xAEEC88")]
		public static void AddDesignEvent(string eventID, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xAEED00", Offset = "0xAEED00", VA = "0xAEED00")]
		public static void AddDesignEvent(string eventID, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xAEED68", Offset = "0xAEED68", VA = "0xAEED68")]
		public static void AddErrorEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xAEEDD8", Offset = "0xAEEDD8", VA = "0xAEEDD8")]
		public static void AddAdEventWithDuration(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xAEEE5C", Offset = "0xAEEE5C", VA = "0xAEEE5C")]
		public static void AddAdEventWithReason(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xAEEEE0", Offset = "0xAEEEE0", VA = "0xAEEEE0")]
		public static void AddAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xAEEF5C", Offset = "0xAEEF5C", VA = "0xAEEF5C")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xAEEFB0", Offset = "0xAEEFB0", VA = "0xAEEFB0")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xAE90A4", Offset = "0xAE90A4", VA = "0xAE90A4")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xAE9154", Offset = "0xAE9154", VA = "0xAE9154")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xAE91EC", Offset = "0xAE91EC", VA = "0xAE91EC")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xAE9284", Offset = "0xAE9284", VA = "0xAE9284")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xAE931C", Offset = "0xAE931C", VA = "0xAE931C")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xAEE708", Offset = "0xAEE708", VA = "0xAEE708")]
		private static string DictionaryToJsonString(IDictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xAE93BC", Offset = "0xAE93BC", VA = "0xAE93BC")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xAE9464", Offset = "0xAE9464", VA = "0xAE9464")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xAE950C", Offset = "0xAE950C", VA = "0xAE950C")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xAE95B4", Offset = "0xAE95B4", VA = "0xAE95B4")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xAE9654", Offset = "0xAE9654", VA = "0xAE9654")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xAE96EC", Offset = "0xAE96EC", VA = "0xAE96EC")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xAE9784", Offset = "0xAE9784", VA = "0xAE9784")]
		public static void SubscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xAE981C", Offset = "0xAE981C", VA = "0xAE981C")]
		public static void SubscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xAE98B4", Offset = "0xAE98B4", VA = "0xAE98B4")]
		public static void SubscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xAEF008", Offset = "0xAEF008", VA = "0xAEF008")]
		public GA_Wrapper()
		{
		}
	}
}
namespace GameAnalyticsSDK.Utilities
{
	[Token(Token = "0x20004C5")]
	public class GA_MiniJSON
	{
		[Token(Token = "0x20004C6")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20004C7")]
			private enum TOKEN
			{
				[Token(Token = "0x4001EF1")]
				NONE,
				[Token(Token = "0x4001EF2")]
				CURLY_OPEN,
				[Token(Token = "0x4001EF3")]
				CURLY_CLOSE,
				[Token(Token = "0x4001EF4")]
				SQUARED_OPEN,
				[Token(Token = "0x4001EF5")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001EF6")]
				COLON,
				[Token(Token = "0x4001EF7")]
				COMMA,
				[Token(Token = "0x4001EF8")]
				STRING,
				[Token(Token = "0x4001EF9")]
				NUMBER,
				[Token(Token = "0x4001EFA")]
				TRUE,
				[Token(Token = "0x4001EFB")]
				FALSE,
				[Token(Token = "0x4001EFC")]
				NULL
			}

			[Token(Token = "0x4001EEE")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000205")]
			private char PeekChar
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0xAEFEA8", Offset = "0xAEFEA8", VA = "0xAEFEA8")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000206")]
			private char NextChar
			{
				[Token(Token = "0x6001EEA")]
				[Address(RVA = "0xAEFCE0", Offset = "0xAEFCE0", VA = "0xAEFCE0")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000207")]
			private string NextWord
			{
				[Token(Token = "0x6001EEB")]
				[Address(RVA = "0xAEFD58", Offset = "0xAEFD58", VA = "0xAEFD58")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000208")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6001EEC")]
				[Address(RVA = "0xAEF5DC", Offset = "0xAEF5DC", VA = "0xAEF5DC")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xAEF34C", Offset = "0xAEF34C", VA = "0xAEF34C")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xAEF3E8", Offset = "0xAEF3E8", VA = "0xAEF3E8")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xAEF134", Offset = "0xAEF134", VA = "0xAEF134")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xAEF488", Offset = "0xAEF488", VA = "0xAEF488", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xAEF4B8", Offset = "0xAEF4B8", VA = "0xAEF4B8")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xAEFA00", Offset = "0xAEFA00", VA = "0xAEFA00")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xAEF46C", Offset = "0xAEF46C", VA = "0xAEF46C")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xAEFB28", Offset = "0xAEFB28", VA = "0xAEFB28")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xAEF7A0", Offset = "0xAEF7A0", VA = "0xAEF7A0")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xAEFC10", Offset = "0xAEFC10", VA = "0xAEFC10")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xAEFE04", Offset = "0xAEFE04", VA = "0xAEFE04")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20004C8")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xAEFF20", Offset = "0xAEFF20", VA = "0xAEFF20")]
			private Serializer()
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xAEF2D0", Offset = "0xAEF2D0", VA = "0xAEF2D0")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xAEFF94", Offset = "0xAEFF94", VA = "0xAEFF94")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xAF0780", Offset = "0xAF0780", VA = "0xAF0780")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xAF0420", Offset = "0xAF0420", VA = "0xAF0420")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xAF0164", Offset = "0xAF0164", VA = "0xAF0164")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xAF0C0C", Offset = "0xAF0C0C", VA = "0xAF0C0C")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xAE9E20", Offset = "0xAE9E20", VA = "0xAE9E20")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xAEF004", Offset = "0xAEF004", VA = "0xAEF004")]
		public static string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xAEF344", Offset = "0xAEF344", VA = "0xAEF344")]
		public GA_MiniJSON()
		{
		}
	}
}
namespace GameAnalyticsSDK.State
{
	[Token(Token = "0x20004C9")]
	internal static class GAState
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameAnalyticsSDK.Setup.Settings _settings;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xAE6648", Offset = "0xAE6648", VA = "0xAE6648")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xAF0E88", Offset = "0xAF0E88", VA = "0xAF0E88")]
		private static bool ListContainsString(List<string> _list, string _string)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xAEE500", Offset = "0xAEE500", VA = "0xAEE500")]
		public static bool IsManualSessionHandlingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xAF0EE0", Offset = "0xAF0EE0", VA = "0xAF0EE0")]
		public static bool HasAvailableResourceCurrency(string _currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xAF0F3C", Offset = "0xAF0F3C", VA = "0xAF0F3C")]
		public static bool HasAvailableResourceItemType(string _itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xAF0F98", Offset = "0xAF0F98", VA = "0xAF0F98")]
		public static bool HasAvailableCustomDimensions01(string _dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xAF0FF4", Offset = "0xAF0FF4", VA = "0xAF0FF4")]
		public static bool HasAvailableCustomDimensions02(string _dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xAF1050", Offset = "0xAF1050", VA = "0xAF1050")]
		public static bool HasAvailableCustomDimensions03(string _dimension03)
		{
			return default(bool);
		}
	}
}
namespace GameAnalyticsSDK.Setup
{
	[Token(Token = "0x20004CA")]
	public class Settings : ScriptableObject
	{
		[Token(Token = "0x20004CB")]
		public enum HelpTypes
		{
			[Token(Token = "0x4001F59")]
			None,
			[Token(Token = "0x4001F5A")]
			IncludeSystemSpecsHelp,
			[Token(Token = "0x4001F5B")]
			ProvideCustomUserID
		}

		[Token(Token = "0x20004CC")]
		public enum MessageTypes
		{
			[Token(Token = "0x4001F5D")]
			None,
			[Token(Token = "0x4001F5E")]
			Error,
			[Token(Token = "0x4001F5F")]
			Info,
			[Token(Token = "0x4001F60")]
			Warning
		}

		[Token(Token = "0x20004CD")]
		public struct HelpInfo
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Message;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MessageTypes MsgType;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HelpTypes HelpType;
		}

		[Token(Token = "0x20004CE")]
		public enum InspectorStates
		{
			[Token(Token = "0x4001F65")]
			Account,
			[Token(Token = "0x4001F66")]
			Basic,
			[Token(Token = "0x4001F67")]
			Debugging,
			[Token(Token = "0x4001F68")]
			Pref
		}

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static string VERSION;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static bool CheckingForUpdates;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalMessagesSubmitted;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TotalMessagesFailed;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DesignMessagesSubmitted;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DesignMessagesFailed;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int QualityMessagesSubmitted;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int QualityMessagesFailed;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ErrorMessagesSubmitted;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int ErrorMessagesFailed;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int BusinessMessagesSubmitted;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int BusinessMessagesFailed;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int UserMessagesSubmitted;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int UserMessagesFailed;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string CustomArea;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> gameKey;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<string> secretKey;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public List<string> Build;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<string> SelectedPlatformOrganization;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<string> SelectedPlatformStudio;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<string> SelectedPlatformGame;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<int> SelectedPlatformGameID;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public List<int> SelectedOrganization;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public List<int> SelectedStudio;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<int> SelectedGame;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string NewVersion;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string Changes;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool SignUpOpen;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string StudioName;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string GameName;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string OrganizationName;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string OrganizationIdentifier;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string EmailGA;

		[NonSerialized]
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string PasswordGA;

		[NonSerialized]
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string TokenGA;

		[NonSerialized]
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string ExpireTime;

		[NonSerialized]
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string LoginStatus;

		[NonSerialized]
		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool JustSignedUp;

		[NonSerialized]
		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool HideSignupWarning;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IntroScreen;

		[NonSerialized]
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<Organization> Organizations;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool InfoLogEditor;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool InfoLogBuild;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool VerboseLogBuild;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool UseManualSessionHandling;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool SendExampleGameDataToMyGame;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool UseIMEI;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		public bool InternetConnectivity;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<string> CustomDimensions01;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<string> CustomDimensions02;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<string> CustomDimensions03;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<string> ResourceItemTypes;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<string> ResourceCurrencies;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public RuntimePlatform LastCreatedGamePlatform;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<RuntimePlatform> Platforms;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public InspectorStates CurrentInspectorState;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<HelpTypes> ClosedHints;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool DisplayHints;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Vector2 DisplayHintsScrollState;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Texture2D Logo;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Texture2D UpdateIcon;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Texture2D InfoIcon;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Texture2D DeleteIcon;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Texture2D GameIcon;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D HomeIcon;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D InstrumentIcon;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D QuestionIcon;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Texture2D UserIcon;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Texture2D AmazonIcon;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Texture2D GooglePlayIcon;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Texture2D iosIcon;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Texture2D macIcon;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Texture2D windowsPhoneIcon;

		[NonSerialized]
		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GUIStyle SignupButton;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool UsePlayerSettingsBuildNumber;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public bool SubmitErrors;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public int MaxErrorCount;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool SubmitFpsAverage;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool SubmitFpsCritical;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool IncludeGooglePlay;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public int FpsCriticalThreshold;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int FpsCirticalSubmitInterval;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public List<bool> PlatformFoldOut;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public bool CustomDimensions01FoldOut;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		public bool CustomDimensions02FoldOut;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		public bool CustomDimensions03FoldOut;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		public bool ResourceItemTypesFoldOut;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool ResourceCurrenciesFoldOut;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RuntimePlatform[] AvailablePlatforms;

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xAF10AC", Offset = "0xAF10AC", VA = "0xAF10AC")]
		public void SetCustomUserID(string customID)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xAF1100", Offset = "0xAF1100", VA = "0xAF1100")]
		public void RemovePlatformAtIndex(int index)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xAF12A0", Offset = "0xAF12A0", VA = "0xAF12A0")]
		public void AddPlatform(RuntimePlatform platform)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xAF17E4", Offset = "0xAF17E4", VA = "0xAF17E4")]
		public string[] GetAvailablePlatforms()
		{
			return null;
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xAF1AE8", Offset = "0xAF1AE8", VA = "0xAF1AE8")]
		public bool IsGameKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xAF1BAC", Offset = "0xAF1BAC", VA = "0xAF1BAC")]
		public bool IsSecretKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xAF1C70", Offset = "0xAF1C70", VA = "0xAF1C70")]
		public void UpdateGameKey(int index, string value)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xAF1D74", Offset = "0xAF1D74", VA = "0xAF1D74")]
		public void UpdateSecretKey(int index, string value)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xAE75DC", Offset = "0xAE75DC", VA = "0xAE75DC")]
		public string GetGameKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xAE7634", Offset = "0xAE7634", VA = "0xAE7634")]
		public string GetSecretKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xAF1E78", Offset = "0xAF1E78", VA = "0xAF1E78")]
		public void SetCustomArea(string customArea)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xAF1E7C", Offset = "0xAF1E7C", VA = "0xAF1E7C")]
		public void SetKeys(string gamekey, string secretkey)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xAF1E80", Offset = "0xAF1E80", VA = "0xAF1E80")]
		public Settings()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class Organization
	{
		[Token(Token = "0x17000209")]
		public string Name
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xAF2480", Offset = "0xAF2480", VA = "0xAF2480")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xAF2488", Offset = "0xAF2488", VA = "0xAF2488")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public string ID
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xAF2490", Offset = "0xAF2490", VA = "0xAF2490")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xAF2498", Offset = "0xAF2498", VA = "0xAF2498")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public List<Studio> Studios
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xAF24A0", Offset = "0xAF24A0", VA = "0xAF24A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xAF24A8", Offset = "0xAF24A8", VA = "0xAF24A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xAF24B0", Offset = "0xAF24B0", VA = "0xAF24B0")]
		public Organization(string name, string id)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xAF2568", Offset = "0xAF2568", VA = "0xAF2568")]
		public static string[] GetOrganizationNames(List<Organization> organizations, bool addFirstEmpty = true)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D0")]
	public class Studio
	{
		[Token(Token = "0x1700020C")]
		public string Name
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xAF2848", Offset = "0xAF2848", VA = "0xAF2848")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xAF2850", Offset = "0xAF2850", VA = "0xAF2850")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public string ID
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xAF2858", Offset = "0xAF2858", VA = "0xAF2858")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xAF2860", Offset = "0xAF2860", VA = "0xAF2860")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public string OrganizationID
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xAF2868", Offset = "0xAF2868", VA = "0xAF2868")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xAF2870", Offset = "0xAF2870", VA = "0xAF2870")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public List<Game> Games
		{
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xAF2878", Offset = "0xAF2878", VA = "0xAF2878")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xAF2880", Offset = "0xAF2880", VA = "0xAF2880")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xAF2888", Offset = "0xAF2888", VA = "0xAF2888")]
		public Studio(string name, string id, string orgId, List<Game> games)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xAF28FC", Offset = "0xAF28FC", VA = "0xAF28FC")]
		public static string[] GetStudioNames(List<Studio> studios, bool addFirstEmpty = true)
		{
			return null;
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xAF2BDC", Offset = "0xAF2BDC", VA = "0xAF2BDC")]
		public static string[] GetGameNames(int index, List<Studio> studios)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D1")]
	public class Game
	{
		[Token(Token = "0x17000210")]
		public string Name
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xAF2E9C", Offset = "0xAF2E9C", VA = "0xAF2E9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xAF2EA4", Offset = "0xAF2EA4", VA = "0xAF2EA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public int ID
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xAF2EAC", Offset = "0xAF2EAC", VA = "0xAF2EAC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xAF2EB4", Offset = "0xAF2EB4", VA = "0xAF2EB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public string GameKey
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xAF2EBC", Offset = "0xAF2EBC", VA = "0xAF2EBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xAF2EC4", Offset = "0xAF2EC4", VA = "0xAF2EC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public string SecretKey
		{
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xAF2ECC", Offset = "0xAF2ECC", VA = "0xAF2ECC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xAF2ED4", Offset = "0xAF2ED4", VA = "0xAF2ED4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xAF2EDC", Offset = "0xAF2EDC", VA = "0xAF2EDC")]
		public Game(string name, int id, string gameKey, string secretKey)
		{
		}
	}
}
namespace GameAnalyticsSDK.Events
{
	[Token(Token = "0x20004D2")]
	public static class GA_Ads
	{
		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xAE85FC", Offset = "0xAE85FC", VA = "0xAE85FC")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xAE8758", Offset = "0xAE8758", VA = "0xAE8758")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xAE88AC", Offset = "0xAE88AC", VA = "0xAE88AC")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public static class GA_Business
	{
		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xAE7968", Offset = "0xAE7968", VA = "0xAE7968")]
		public static void NewEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xAE77CC", Offset = "0xAE77CC", VA = "0xAE77CC")]
		public static void NewEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public static class GA_Debug
	{
		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaxErrorCount;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _errorCount;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _showLogOnGUI;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<string> Messages;

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xAF2F44", Offset = "0xAF2F44", VA = "0xAF2F44")]
		public static void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xAF32C0", Offset = "0xAF32C0", VA = "0xAF32C0")]
		private static void SubmitError(string message, LogType type)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xAF32EC", Offset = "0xAF32EC", VA = "0xAF32EC")]
		public static void EnabledLog()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public static class GA_Design
	{
		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xAE7BA4", Offset = "0xAE7BA4", VA = "0xAE7BA4")]
		public static void NewEvent(string eventName, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xAE7AE0", Offset = "0xAE7AE0", VA = "0xAE7AE0")]
		public static void NewEvent(string eventName, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xAF339C", Offset = "0xAF339C", VA = "0xAF339C")]
		private static void CreateNewEvent(string eventName, float? eventValue, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public static class GA_Error
	{
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xAE8520", Offset = "0xAE8520", VA = "0xAE8520")]
		public static void NewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xAF3488", Offset = "0xAF3488", VA = "0xAF3488")]
		private static void CreateNewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public static class GA_Progression
	{
		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xAE7CEC", Offset = "0xAE7CEC", VA = "0xAE7CEC")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xAE7DC8", Offset = "0xAE7DC8", VA = "0xAE7DC8")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xAE7EB0", Offset = "0xAE7EB0", VA = "0xAE7EB0")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xAE7F7C", Offset = "0xAE7F7C", VA = "0xAE7F7C")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xAE80DC", Offset = "0xAE80DC", VA = "0xAE80DC")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xAE8250", Offset = "0xAE8250", VA = "0xAE8250")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xAF34F4", Offset = "0xAF34F4", VA = "0xAF34F4")]
		private static void CreateEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int? score, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public static class GA_Resource
	{
		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xAE83D4", Offset = "0xAE83D4", VA = "0xAE83D4")]
		public static void NewEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public static class GA_Setup
	{
		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xAE70F0", Offset = "0xAE70F0", VA = "0xAE70F0")]
		public static void SetAvailableCustomDimensions01(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xAE7190", Offset = "0xAE7190", VA = "0xAE7190")]
		public static void SetAvailableCustomDimensions02(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xAE7230", Offset = "0xAE7230", VA = "0xAE7230")]
		public static void SetAvailableCustomDimensions03(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xAE7370", Offset = "0xAE7370", VA = "0xAE7370")]
		public static void SetAvailableResourceCurrencies(List<string> resourceCurrencies)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xAE72D0", Offset = "0xAE72D0", VA = "0xAE72D0")]
		public static void SetAvailableResourceItemTypes(List<string> resourceItemTypes)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xAE6C30", Offset = "0xAE6C30", VA = "0xAE6C30")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xAE6C84", Offset = "0xAE6C84", VA = "0xAE6C84")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xAE8CF4", Offset = "0xAE8CF4", VA = "0xAE8CF4")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xAE8D4C", Offset = "0xAE8D4C", VA = "0xAE8D4C")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xAE8DA4", Offset = "0xAE8DA4", VA = "0xAE8DA4")]
		public static void SetCustomDimension03(string customDimension)
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class GA_SpecialEvents : MonoBehaviour
	{
		[Token(Token = "0x20004DB")]
		[CompilerGenerated]
		private sealed class <SubmitFPSRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F50")]
				[Address(RVA = "0xAF3ED8", Offset = "0xAF3ED8", VA = "0xAF3ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F52")]
				[Address(RVA = "0xAF3F20", Offset = "0xAF3F20", VA = "0xAF3F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xAF39D0", Offset = "0xAF39D0", VA = "0xAF39D0")]
			[DebuggerHidden]
			public <SubmitFPSRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xAF3DCC", Offset = "0xAF3DCC", VA = "0xAF3DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0xAF3DD0", Offset = "0xAF3DD0", VA = "0xAF3DD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xAF3EE0", Offset = "0xAF3EE0", VA = "0xAF3EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		[CompilerGenerated]
		private sealed class <CheckCriticalFPSRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GA_SpecialEvents <>4__this;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F56")]
				[Address(RVA = "0xAF4048", Offset = "0xAF4048", VA = "0xAF4048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F58")]
				[Address(RVA = "0xAF4090", Offset = "0xAF4090", VA = "0xAF4090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xAF39F8", Offset = "0xAF39F8", VA = "0xAF39F8")]
			[DebuggerHidden]
			public <CheckCriticalFPSRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xAF3F28", Offset = "0xAF3F28", VA = "0xAF3F28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xAF3F2C", Offset = "0xAF3F2C", VA = "0xAF3F2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xAF4050", Offset = "0xAF4050", VA = "0xAF4050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _frameCountAvg;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _lastUpdateAvg;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameCountCrit;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastUpdateCrit;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _criticalFpsCount;

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xAF38C4", Offset = "0xAF38C4", VA = "0xAF38C4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xAF38FC", Offset = "0xAF38FC", VA = "0xAF38FC")]
		[IteratorStateMachine(typeof(<SubmitFPSRoutine>d__6))]
		private IEnumerator SubmitFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xAF395C", Offset = "0xAF395C", VA = "0xAF395C")]
		[IteratorStateMachine(typeof(<CheckCriticalFPSRoutine>d__7))]
		private IEnumerator CheckCriticalFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xAF3A20", Offset = "0xAF3A20", VA = "0xAF3A20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xAF3B18", Offset = "0xAF3B18", VA = "0xAF3B18")]
		public static void SubmitFPS()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xAF3CC0", Offset = "0xAF3CC0", VA = "0xAF3CC0")]
		public void CheckCriticalFPS()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xAF3DC4", Offset = "0xAF3DC4", VA = "0xAF3DC4")]
		public GA_SpecialEvents()
		{
		}
	}
}
namespace GameAnalyticsSDK.Validators
{
	[Token(Token = "0x20004DD")]
	internal static class GAValidator
	{
		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xAF4098", Offset = "0xAF4098", VA = "0xAF4098")]
		public static bool StringMatch(string s, string pattern)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xAF4110", Offset = "0xAF4110", VA = "0xAF4110")]
		public static bool ValidateBusinessEvent(string currency, int amount, string cartType, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xAF43F8", Offset = "0xAF43F8", VA = "0xAF43F8")]
		public static bool ValidateResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xAF4664", Offset = "0xAF4664", VA = "0xAF4664")]
		public static bool ValidateProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xAF4904", Offset = "0xAF4904", VA = "0xAF4904")]
		public static bool ValidateDesignEvent(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xAF4A98", Offset = "0xAF4A98", VA = "0xAF4A98")]
		public static bool ValidateErrorEvent(GAErrorSeverity severity, string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xAF4BAC", Offset = "0xAF4BAC", VA = "0xAF4BAC")]
		public static bool ValidateAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xAF4D34", Offset = "0xAF4D34", VA = "0xAF4D34")]
		public static bool ValidateSdkErrorEvent(string gameKey, string gameSecret, GAErrorSeverity type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xAF4DD4", Offset = "0xAF4DD4", VA = "0xAF4DD4")]
		public static bool ValidateKeys(string gameKey, string gameSecret)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xAF4298", Offset = "0xAF4298", VA = "0xAF4298")]
		public static bool ValidateCurrency(string currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xAF4358", Offset = "0xAF4358", VA = "0xAF4358")]
		public static bool ValidateEventPartLength(string eventPart, bool allowNull)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xAF43B0", Offset = "0xAF43B0", VA = "0xAF43B0")]
		public static bool ValidateEventPartCharacters(string eventPart)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xAF49C8", Offset = "0xAF49C8", VA = "0xAF49C8")]
		public static bool ValidateEventIdLength(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xAF4A30", Offset = "0xAF4A30", VA = "0xAF4A30")]
		public static bool ValidateEventIdCharacters(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xAF4E60", Offset = "0xAF4E60", VA = "0xAF4E60")]
		public static bool ValidateBuild(string build)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xAF4E68", Offset = "0xAF4E68", VA = "0xAF4E68")]
		public static bool ValidateUserId(string uId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xAF4300", Offset = "0xAF4300", VA = "0xAF4300")]
		public static bool ValidateShortString(string shortString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xAF4CDC", Offset = "0xAF4CDC", VA = "0xAF4CDC")]
		public static bool ValidateString(string s, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xAF4B54", Offset = "0xAF4B54", VA = "0xAF4B54")]
		public static bool ValidateLongString(string longString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xAF4EF4", Offset = "0xAF4EF4", VA = "0xAF4EF4")]
		public static bool ValidateConnectionType(string connectionType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xAF3608", Offset = "0xAF3608", VA = "0xAF3608")]
		public static bool ValidateCustomDimensions(params string[] customDimensions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xAF365C", Offset = "0xAF365C", VA = "0xAF365C")]
		public static bool ValidateResourceCurrencies(params string[] resourceCurrencies)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xAF379C", Offset = "0xAF379C", VA = "0xAF379C")]
		public static bool ValidateResourceItemTypes(params string[] resourceItemTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xAF5460", Offset = "0xAF5460", VA = "0xAF5460")]
		public static bool ValidateDimension01(string dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xAF553C", Offset = "0xAF553C", VA = "0xAF553C")]
		public static bool ValidateDimension02(string dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xAF5618", Offset = "0xAF5618", VA = "0xAF5618")]
		public static bool ValidateDimension03(string dimension03)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xAF4F3C", Offset = "0xAF4F3C", VA = "0xAF4F3C")]
		public static bool ValidateArrayOfStrings(long maxCount, long maxStringLength, bool allowNoValues, string logTag, params string[] arrayOfStrings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xAF56F4", Offset = "0xAF56F4", VA = "0xAF56F4")]
		public static bool ValidateClientTs(long clientTs)
		{
			return default(bool);
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20004DE")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xB19148", Offset = "0xB19148", VA = "0xB19148")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xB19168", Offset = "0xB19168", VA = "0xB19168")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xB191CC", Offset = "0xB191CC", VA = "0xB191CC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xB19230", Offset = "0xB19230", VA = "0xB19230")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xB19238", Offset = "0xB19238", VA = "0xB19238")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class MeshContainer
	{
		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xB19240", Offset = "0xB19240", VA = "0xB19240")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xB192B0", Offset = "0xB192B0", VA = "0xB192B0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xB192E8", Offset = "0xB192E8", VA = "0xB192E8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xB193E4", Offset = "0xB193E4", VA = "0xB193E4")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xB196F4", Offset = "0xB196F4", VA = "0xB196F4")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xB197A8", Offset = "0xB197A8", VA = "0xB197A8")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xB19900", Offset = "0xB19900", VA = "0xB19900")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xB1A174", Offset = "0xB1A174", VA = "0xB1A174")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xB1A1CC", Offset = "0xB1A1CC", VA = "0xB1A1CC")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xB1A2AC", Offset = "0xB1A2AC", VA = "0xB1A2AC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xB1A310", Offset = "0xB1A310", VA = "0xB1A310")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xB19ABC", Offset = "0xB19ABC", VA = "0xB19ABC")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xB1A374", Offset = "0xB1A374", VA = "0xB1A374")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xB1A628", Offset = "0xB1A628", VA = "0xB1A628")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xB1A3D4", Offset = "0xB1A3D4", VA = "0xB1A3D4")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xB1A794", Offset = "0xB1A794", VA = "0xB1A794")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xB1A478", Offset = "0xB1A478", VA = "0xB1A478")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xB1A7B4", Offset = "0xB1A7B4", VA = "0xB1A7B4")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	[RequireComponent(typeof(WaterBase))]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xB1A824", Offset = "0xB1A824", VA = "0xB1A824")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xB1A94C", Offset = "0xB1A94C", VA = "0xB1A94C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xB1AB64", Offset = "0xB1AB64", VA = "0xB1AB64")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x20004E4")]
		public enum WaterMode
		{
			[Token(Token = "0x4001F9F")]
			Simple,
			[Token(Token = "0x4001FA0")]
			Reflective,
			[Token(Token = "0x4001FA1")]
			Refractive
		}

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xB1AB6C", Offset = "0xB1AB6C", VA = "0xB1AB6C")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xB1C4A0", Offset = "0xB1C4A0", VA = "0xB1C4A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xB1C808", Offset = "0xB1C808", VA = "0xB1C808")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xB1C020", Offset = "0xB1C020", VA = "0xB1C020")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xB1B6B4", Offset = "0xB1B6B4", VA = "0xB1B6B4")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xB1B6A0", Offset = "0xB1B6A0", VA = "0xB1B6A0")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xB1B540", Offset = "0xB1B540", VA = "0xB1B540")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xB1C2F0", Offset = "0xB1C2F0", VA = "0xB1C2F0")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xB1C25C", Offset = "0xB1C25C", VA = "0xB1C25C")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xB1CAB4", Offset = "0xB1CAB4", VA = "0xB1CAB4")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public enum WaterQuality
	{
		[Token(Token = "0x4001FA3")]
		High = 2,
		[Token(Token = "0x4001FA4")]
		Medium = 1,
		[Token(Token = "0x4001FA5")]
		Low = 0
	}
	[Token(Token = "0x20004E6")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xB1CBB4", Offset = "0xB1CBB4", VA = "0xB1CBB4")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xB1CD2C", Offset = "0xB1CD2C", VA = "0xB1CD2C")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xB1CDD0", Offset = "0xB1CDD0", VA = "0xB1CDD0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xB1CE44", Offset = "0xB1CE44", VA = "0xB1CE44")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xB1CE5C", Offset = "0xB1CE5C", VA = "0xB1CE5C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xB1CE60", Offset = "0xB1CE60", VA = "0xB1CE60")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xB1D020", Offset = "0xB1D020", VA = "0xB1D020")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xB1D104", Offset = "0xB1D104", VA = "0xB1D104")]
		public WaterTile()
		{
		}
	}
}
namespace MIConvexHull
{
	[Token(Token = "0x20004E8")]
	internal static class Constants
	{
		[Token(Token = "0x4001FAB")]
		internal const double DefaultPlaneDistanceTolerance = 1E-10;

		[Token(Token = "0x4001FAC")]
		internal const double StartingDeltaDotProductInSimplex = 0.5;

		[Token(Token = "0x4001FAD")]
		internal const int ConnectorTableSize = 2017;
	}
	[Token(Token = "0x20004E9")]
	public static class ConvexHull
	{
		[Token(Token = "0x6001FA1")]
		public static ConvexHull<TVertex, TFace> Create<TVertex, TFace>(IList<TVertex> data, double PlaneDistanceTolerance = 1E-10) where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		public static ConvexHull<TVertex, DefaultConvexFace<TVertex>> Create<TVertex>(IList<TVertex> data, double PlaneDistanceTolerance = 1E-10) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xB1D10C", Offset = "0xB1D10C", VA = "0xB1D10C")]
		public static ConvexHull<DefaultVertex, DefaultConvexFace<DefaultVertex>> Create(IList<double[]> data, double PlaneDistanceTolerance = 1E-10)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EB")]
	public class ConvexHull<TVertex, TFace> where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
	{
		[Token(Token = "0x17000218")]
		public IEnumerable<TVertex> Points
		{
			[Token(Token = "0x6001FA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FA9")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public IEnumerable<TFace> Faces
		{
			[Token(Token = "0x6001FAA")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAB")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001FA7")]
		internal ConvexHull()
		{
		}

		[Token(Token = "0x6001FAC")]
		public static ConvexHull<TVertex, TFace> Create(IList<TVertex> data, double PlaneDistanceTolerance)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EC")]
	internal class SimpleList<T>
	{
		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int capacity;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] items;

		[Token(Token = "0x1700021A")]
		public T this[int i]
		{
			[Token(Token = "0x6001FAD")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001FAE")]
			set
			{
			}
		}

		[Token(Token = "0x6001FAF")]
		private void EnsureCapacity()
		{
		}

		[Token(Token = "0x6001FB0")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001FB1")]
		public void Push(T item)
		{
		}

		[Token(Token = "0x6001FB2")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x6001FB3")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001FB4")]
		public SimpleList()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	internal class IndexBuffer : SimpleList<int>
	{
		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xB1D344", Offset = "0xB1D344", VA = "0xB1D344")]
		public IndexBuffer()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	internal sealed class FaceList
	{
		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConvexFaceInternal last;

		[Token(Token = "0x1700021B")]
		public ConvexFaceInternal First
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0xB1D38C", Offset = "0xB1D38C", VA = "0xB1D38C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xB1D394", Offset = "0xB1D394", VA = "0xB1D394")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xB1D39C", Offset = "0xB1D39C", VA = "0xB1D39C")]
		private void AddFirst(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xB1D3F8", Offset = "0xB1D3F8", VA = "0xB1D3F8")]
		public void Add(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xB1D51C", Offset = "0xB1D51C", VA = "0xB1D51C")]
		public void Remove(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xB1D5B8", Offset = "0xB1D5B8", VA = "0xB1D5B8")]
		public FaceList()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	internal sealed class ConnectorList
	{
		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FaceConnector last;

		[Token(Token = "0x1700021C")]
		public FaceConnector First
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xB1D5C0", Offset = "0xB1D5C0", VA = "0xB1D5C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xB1D5C8", Offset = "0xB1D5C8", VA = "0xB1D5C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xB1D5D0", Offset = "0xB1D5D0", VA = "0xB1D5D0")]
		private void AddFirst(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xB1D620", Offset = "0xB1D620", VA = "0xB1D620")]
		public void Add(FaceConnector element)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xB1D6A4", Offset = "0xB1D6A4", VA = "0xB1D6A4")]
		public void Remove(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xB1D728", Offset = "0xB1D728", VA = "0xB1D728")]
		public ConnectorList()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public abstract class ConvexFace<TVertex, TFace> where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>
	{
		[Token(Token = "0x1700021D")]
		public TFace[] Adjacency
		{
			[Token(Token = "0x6001FC2")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC3")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public TVertex[] Vertices
		{
			[Token(Token = "0x6001FC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public double[] Normal
		{
			[Token(Token = "0x6001FC6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001FC8")]
		protected ConvexFace()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class DefaultConvexFace<TVertex> : ConvexFace<TVertex, DefaultConvexFace<TVertex>> where TVertex : IVertex
	{
		[Token(Token = "0x6001FC9")]
		public DefaultConvexFace()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	internal class ConvexHullAlgorithm
	{
		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly int NumOfDimensions;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly bool IsLifted;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly double PlaneDistanceTolerance;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IVertex[] Vertices;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] Positions;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool[] VertexVisited;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int NumberOfVertices;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ConvexFaceInternal[] FacePool;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal bool[] AffectedFaceFlags;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ConvexHullSize;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly FaceList UnprocessedFaces;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly IndexBuffer ConvexFaces;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int CurrentVertex;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double MaxDistance;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int FurthestVertex;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly double[] Center;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] UpdateBuffer;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] UpdateIndices;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly IndexBuffer TraverseStack;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly IndexBuffer EmptyBuffer;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IndexBuffer BeyondBuffer;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly IndexBuffer AffectedFaceBuffer;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly SimpleList<DeferredFace> ConeFaceBuffer;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly HashSet<int> SingularVertices;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ConnectorList[] ConnectorTable;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly ObjectManager ObjectManager;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly MathHelper MathHelper;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<int>[] boundingBoxPoints;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int indexOfDimensionWithLeastExtremes;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly double[] minima;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly double[] maxima;

		[Token(Token = "0x6001FCA")]
		internal static ConvexHull<TVertex, TFace> GetConvexHull<TVertex, TFace>(IList<TVertex> data, double PlaneDistanceTolerance) where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xB1D730", Offset = "0xB1D730", VA = "0xB1D730")]
		private ConvexHullAlgorithm(IVertex[] vertices, bool lift, double PlaneDistanceTolerance)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xB1DD60", Offset = "0xB1DD60", VA = "0xB1DD60")]
		private int DetermineDimension()
		{
			return default(int);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xB1E230", Offset = "0xB1E230", VA = "0xB1E230")]
		private void GetConvexHull()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xB1E380", Offset = "0xB1E380", VA = "0xB1E380")]
		private void SerializeVerticesToPositions()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xB1E628", Offset = "0xB1E628", VA = "0xB1E628")]
		private void FindBoundingBoxPoints()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xB1EBD0", Offset = "0xB1EBD0", VA = "0xB1EBD0")]
		private void ShiftAndScalePositions()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xB1EF8C", Offset = "0xB1EF8C", VA = "0xB1EF8C")]
		private void CreateInitialSimplex()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xB1FDF4", Offset = "0xB1FDF4", VA = "0xB1FDF4")]
		private List<int> FindInitialPoints()
		{
			return null;
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xB20B18", Offset = "0xB20B18", VA = "0xB20B18")]
		private void UpdateAdjacency(ConvexFaceInternal l, ConvexFaceInternal r)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xB20D28", Offset = "0xB20D28", VA = "0xB20D28")]
		private void FindBeyondVertices(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xB1F4B8", Offset = "0xB1F4B8", VA = "0xB1F4B8")]
		private void TagAffectedFaces(ConvexFaceInternal currentFace)
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xB210E0", Offset = "0xB210E0", VA = "0xB210E0")]
		private void TraverseAffectedFaces(int currentFace)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xB21374", Offset = "0xB21374", VA = "0xB21374")]
		private DeferredFace MakeDeferredFace(ConvexFaceInternal face, int faceIndex, ConvexFaceInternal pivot, int pivotIndex, ConvexFaceInternal oldFace)
		{
			return null;
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xB21490", Offset = "0xB21490", VA = "0xB21490")]
		private void ConnectFace(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xB1F544", Offset = "0xB1F544", VA = "0xB1F544")]
		private bool CreateCone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xB1F958", Offset = "0xB1F958", VA = "0xB1F958")]
		private void CommitCone()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xB21000", Offset = "0xB21000", VA = "0xB21000")]
		private void IsBeyond(ConvexFaceInternal face, IndexBuffer beyondVertices, int v)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xB21D78", Offset = "0xB21D78", VA = "0xB21D78")]
		private int LexCompare(int u, int v)
		{
			return default(int);
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xB219BC", Offset = "0xB219BC", VA = "0xB219BC")]
		private void FindBeyondVertices(ConvexFaceInternal face, IndexBuffer beyond, IndexBuffer beyond1)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xB2189C", Offset = "0xB2189C", VA = "0xB2189C")]
		private void FindBeyondVertices(ConvexFaceInternal face, IndexBuffer beyond)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xB1F3C4", Offset = "0xB1F3C4", VA = "0xB1F3C4")]
		private void UpdateCenter()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xB21E3C", Offset = "0xB21E3C", VA = "0xB21E3C")]
		private void RollbackCenter()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xB1FC18", Offset = "0xB1FC18", VA = "0xB1FC18")]
		private void HandleSingular()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xB1FDBC", Offset = "0xB1FDBC", VA = "0xB1FDBC")]
		private double GetCoordinate(int vIndex, int dimension)
		{
			return default(double);
		}

		[Token(Token = "0x6001FE3")]
		private TVertex[] GetHullVertices<TVertex>(IList<TVertex> data)
		{
			return null;
		}

		[Token(Token = "0x6001FE4")]
		private TFace[] GetConvexFaces<TVertex, TFace>() where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FE5")]
		internal static TCell[] GetDelaunayTriangulation<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xB21F40", Offset = "0xB21F40", VA = "0xB21F40")]
		private void RemoveUpperFaces()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	internal sealed class DeferredFace
	{
		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConvexFaceInternal Face;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConvexFaceInternal Pivot;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConvexFaceInternal OldFace;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FaceIndex;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int PivotIndex;

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xB22300", Offset = "0xB22300", VA = "0xB22300")]
		public DeferredFace()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	internal sealed class FaceConnector
	{
		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int EdgeIndex;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConvexFaceInternal Face;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint HashCode;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FaceConnector Next;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FaceConnector Previous;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] Vertices;

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xB22308", Offset = "0xB22308", VA = "0xB22308")]
		public FaceConnector(int dimension)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xB21784", Offset = "0xB21784", VA = "0xB21784")]
		public void Update(ConvexFaceInternal face, int edgeIndex, int dim)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xB21594", Offset = "0xB21594", VA = "0xB21594")]
		public static bool AreConnectable(FaceConnector a, FaceConnector b, int dim)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xB21620", Offset = "0xB21620", VA = "0xB21620")]
		public static void Connect(FaceConnector a, FaceConnector b)
		{
		}
	}
	[Token(Token = "0x20004F8")]
	internal sealed class ConvexFaceInternal
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] AdjacentFaces;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int FurthestVertex;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Index;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool InList;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsNormalFlipped;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConvexFaceInternal Next;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double[] Normal;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double Offset;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConvexFaceInternal Previous;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int Tag;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] Vertices;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IndexBuffer VerticesBeyond;

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xB22378", Offset = "0xB22378", VA = "0xB22378")]
		public ConvexFaceInternal(int dimension, int index, IndexBuffer beyondList)
		{
		}
	}
	[Token(Token = "0x20004F9")]
	internal class MathHelper
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int Dimension;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int[] matrixPivots;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly double[] nDMatrix;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly double[] nDNormalHelperVector;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly double[] ntX;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly double[] ntY;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly double[] ntZ;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly double[] PositionData;

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xB1E0FC", Offset = "0xB1E0FC", VA = "0xB1E0FC")]
		internal MathHelper(int dimension, double[] positions)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xB2096C", Offset = "0xB2096C", VA = "0xB2096C")]
		internal bool CalculateFacePlane(ConvexFaceInternal face, double[] center)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xB212E0", Offset = "0xB212E0", VA = "0xB212E0")]
		internal double GetVertexDistance(int v, ConvexFaceInternal f)
		{
			return default(double);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xB20DCC", Offset = "0xB20DCC", VA = "0xB20DCC")]
		internal double[] VectorBetweenVertices(int toIndex, int fromIndex)
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xB22484", Offset = "0xB22484", VA = "0xB22484")]
		private void VectorBetweenVertices(int toIndex, int fromIndex, double[] target)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xB22458", Offset = "0xB22458", VA = "0xB22458")]
		private void FindNormalVector(int[] vertices, double[] normalData)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xB22514", Offset = "0xB22514", VA = "0xB22514")]
		private void FindNormalVector2D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xB225F8", Offset = "0xB225F8", VA = "0xB225F8")]
		private void FindNormalVector3D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xB2276C", Offset = "0xB2276C", VA = "0xB2276C")]
		private void FindNormalVector4D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xB229F4", Offset = "0xB229F4", VA = "0xB229F4")]
		private void FindNormalVectorND(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xB20E44", Offset = "0xB20E44", VA = "0xB20E44")]
		internal double GetSimplexVolume(double[][] edgeVectors, int lastIndex, double bigNumber)
		{
			return default(double);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xB23010", Offset = "0xB23010", VA = "0xB23010")]
		private double DeterminantDestructive(double[] A)
		{
			return default(double);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xB22C38", Offset = "0xB22C38", VA = "0xB22C38")]
		private static void LUFactor(double[] data, int order, int[] ipiv, double[] vecLUcolj)
		{
		}
	}
	[Token(Token = "0x20004FA")]
	internal class ObjectManager
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int Dimension;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FaceConnector ConnectorStack;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly SimpleList<DeferredFace> DeferredFaceStack;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly SimpleList<IndexBuffer> EmptyBufferStack;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConvexFaceInternal[] FacePool;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int FacePoolSize;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int FacePoolCapacity;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IndexBuffer FreeFaceIndices;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ConvexHullAlgorithm Hull;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xB1DFA4", Offset = "0xB1DFA4", VA = "0xB1DFA4")]
		public ObjectManager(ConvexHullAlgorithm hull)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xB21CBC", Offset = "0xB21CBC", VA = "0xB21CBC")]
		public void DepositFace(int faceIndex)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xB231F4", Offset = "0xB231F4", VA = "0xB231F4")]
		private void ReallocateFacePool()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xB232FC", Offset = "0xB232FC", VA = "0xB232FC")]
		private int CreateFace()
		{
			return default(int);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xB20900", Offset = "0xB20900", VA = "0xB20900")]
		public int GetFace()
		{
			return default(int);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xB21694", Offset = "0xB21694", VA = "0xB21694")]
		public void DepositConnector(FaceConnector connector)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xB216F0", Offset = "0xB216F0", VA = "0xB216F0")]
		public FaceConnector GetConnector()
		{
			return null;
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xB21BE8", Offset = "0xB21BE8", VA = "0xB21BE8")]
		public void DepositVertexBuffer(IndexBuffer buffer)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xB233E8", Offset = "0xB233E8", VA = "0xB233E8")]
		public IndexBuffer GetVertexBuffer()
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xB21C64", Offset = "0xB21C64", VA = "0xB21C64")]
		public void DepositDeferredFace(DeferredFace face)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xB213FC", Offset = "0xB213FC", VA = "0xB213FC")]
		public DeferredFace GetDeferredFace()
		{
			return null;
		}
	}
	[Token(Token = "0x20004FB")]
	public interface IVertex
	{
		[Token(Token = "0x17000220")]
		double[] Position
		{
			[Token(Token = "0x600200E")]
			get;
		}
	}
	[Token(Token = "0x20004FC")]
	public class DefaultVertex : IVertex
	{
		[Token(Token = "0x17000221")]
		public double[] Position
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0xB23478", Offset = "0xB23478", VA = "0xB23478", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002010")]
			[Address(RVA = "0xB23480", Offset = "0xB23480", VA = "0xB23480")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xB1D33C", Offset = "0xB1D33C", VA = "0xB1D33C")]
		public DefaultVertex()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public interface ITriangulation<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
	{
		[Token(Token = "0x17000222")]
		IEnumerable<TCell> Cells
		{
			[Token(Token = "0x6002012")]
			get;
		}
	}
	[Token(Token = "0x20004FE")]
	public static class Triangulation
	{
		[Token(Token = "0x6002013")]
		public static ITriangulation<TVertex, DefaultTriangulationCell<TVertex>> CreateDelaunay<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xB23488", Offset = "0xB23488", VA = "0xB23488")]
		public static ITriangulation<DefaultVertex, DefaultTriangulationCell<DefaultVertex>> CreateDelaunay(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x6002015")]
		public static ITriangulation<TVertex, TFace> CreateDelaunay<TVertex, TFace>(IList<TVertex> data) where TVertex : IVertex where TFace : TriangulationCell<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6002016")]
		public static VoronoiMesh<TVertex, TCell, TEdge> CreateVoronoi<TVertex, TCell, TEdge>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x6002017")]
		public static VoronoiMesh<TVertex, DefaultTriangulationCell<TVertex>, VoronoiEdge<TVertex, DefaultTriangulationCell<TVertex>>> CreateVoronoi<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xB235C0", Offset = "0xB235C0", VA = "0xB235C0")]
		public static VoronoiMesh<DefaultVertex, DefaultTriangulationCell<DefaultVertex>, VoronoiEdge<DefaultVertex, DefaultTriangulationCell<DefaultVertex>>> CreateVoronoi(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x6002019")]
		public static VoronoiMesh<TVertex, TCell, VoronoiEdge<TVertex, TCell>> CreateVoronoi<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}
	}
	[Token(Token = "0x2000500")]
	public class DelaunayTriangulation<TVertex, TCell> : ITriangulation<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
	{
		[Token(Token = "0x17000223")]
		public IEnumerable<TCell> Cells
		{
			[Token(Token = "0x600201F")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002020")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600201E")]
		private DelaunayTriangulation()
		{
		}

		[Token(Token = "0x6002021")]
		public static DelaunayTriangulation<TVertex, TCell> Create(IList<TVertex> data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000501")]
	public abstract class TriangulationCell<TVertex, TCell> : ConvexFace<TVertex, TCell> where TVertex : IVertex where TCell : ConvexFace<TVertex, TCell>
	{
		[Token(Token = "0x6002022")]
		protected TriangulationCell()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class DefaultTriangulationCell<TVertex> : TriangulationCell<TVertex, DefaultTriangulationCell<TVertex>> where TVertex : IVertex
	{
		[Token(Token = "0x6002023")]
		public DefaultTriangulationCell()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class VoronoiEdge<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>
	{
		[Token(Token = "0x17000224")]
		public TCell Source
		{
			[Token(Token = "0x6002026")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002027")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public TCell Target
		{
			[Token(Token = "0x6002028")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002029")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6002024")]
		public VoronoiEdge()
		{
		}

		[Token(Token = "0x6002025")]
		public VoronoiEdge(TCell source, TCell target)
		{
		}

		[Token(Token = "0x600202A")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600202B")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000504")]
	public static class VoronoiMesh
	{
		[Token(Token = "0x600202C")]
		public static VoronoiMesh<TVertex, TCell, TEdge> Create<TVertex, TCell, TEdge>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x600202D")]
		public static VoronoiMesh<TVertex, DefaultTriangulationCell<TVertex>, VoronoiEdge<TVertex, DefaultTriangulationCell<TVertex>>> Create<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xB23870", Offset = "0xB23870", VA = "0xB23870")]
		public static VoronoiMesh<DefaultVertex, DefaultTriangulationCell<DefaultVertex>, VoronoiEdge<DefaultVertex, DefaultTriangulationCell<DefaultVertex>>> Create(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x600202F")]
		public static VoronoiMesh<TVertex, TCell, VoronoiEdge<TVertex, TCell>> Create<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}
	}
	[Token(Token = "0x2000506")]
	public class VoronoiMesh<TVertex, TCell, TEdge> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
	{
		[Token(Token = "0x2000507")]
		private class EdgeComparer : IEqualityComparer<TEdge>
		{
			[Token(Token = "0x6002039")]
			public bool Equals(TEdge x, TEdge y)
			{
				return default(bool);
			}

			[Token(Token = "0x600203A")]
			public int GetHashCode(TEdge obj)
			{
				return default(int);
			}

			[Token(Token = "0x600203B")]
			public EdgeComparer()
			{
			}
		}

		[Token(Token = "0x17000226")]
		public IEnumerable<TCell> Vertices
		{
			[Token(Token = "0x6002034")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002035")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public IEnumerable<TEdge> Edges
		{
			[Token(Token = "0x6002036")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002037")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002033")]
		private VoronoiMesh()
		{
		}

		[Token(Token = "0x6002038")]
		public static VoronoiMesh<TVertex, TCell, TEdge> Create(IList<TVertex> data)
		{
			return null;
		}
	}
}
namespace NWH
{
	[Token(Token = "0x2000508")]
	public class Comparer : IComparer
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vert vx;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vert vy;

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xB23AB0", Offset = "0xB23AB0", VA = "0xB23AB0", Slot = "4")]
		public int Compare(object x, object y)
		{
			return default(int);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xB23C20", Offset = "0xB23C20", VA = "0xB23C20")]
		public Comparer()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class History
	{
		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> removedTriangles;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ArrayList> replacedVertex;

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xB23C28", Offset = "0xB23C28", VA = "0xB23C28")]
		public void RemovedTriangle(int f)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xB23CD0", Offset = "0xB23CD0", VA = "0xB23CD0")]
		public void ReplaceVertex(int f, int u, int v, Vector3 normal, Vector2 uv, int newV, Vector3 newNormal, Vector2 newUv)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xB23FC4", Offset = "0xB23FC4", VA = "0xB23FC4")]
		public History()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class MeshDecimate
	{
		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ratio;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float smoothAngle;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float smoothAngleDot;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool lockSelPoint;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> selectedVertices;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bRecalculateNormals;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lodDataSize;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tri[] myTriangles;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vert[] myLODVertices;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private History[] collapseHistory;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vert> cache;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int cacheSize;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triOrder;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] originalTriangles;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] originalVertices;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2[] originalUVs;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] originalNormals;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] sharedTriangles;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] sharedVertices;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3[] finalVertices;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3[] finalNormals;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2[] finalUVs;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int[] finalTriangles;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool preCalculateDone;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int lastTarget;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentcnt;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int searchIndex;

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xB2409C", Offset = "0xB2409C", VA = "0xB2409C")]
		private float ComputeEdgeCollapseCosts(Vert u, Vert v)
		{
			return default(float);
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xB2474C", Offset = "0xB2474C", VA = "0xB2474C")]
		private void ComputeEdgeCostAtVertex(Vert v)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xB24880", Offset = "0xB24880", VA = "0xB24880")]
		private void ComputeAllEdgeCollapseCosts()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xB2493C", Offset = "0xB2493C", VA = "0xB2493C")]
		private void UnCollapse(History his)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xB24E1C", Offset = "0xB24E1C", VA = "0xB24E1C")]
		private void Collapse(History his)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xB25300", Offset = "0xB25300", VA = "0xB25300")]
		private void CollapseTest()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xB25FD0", Offset = "0xB25FD0", VA = "0xB25FD0")]
		private void SortRight(Vert v)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xB25E58", Offset = "0xB25E58", VA = "0xB25E58")]
		private void SortLeft(Vert v)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xB26150", Offset = "0xB26150", VA = "0xB26150")]
		public void PreCalculate(Mesh tmpMesh)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xB26E50", Offset = "0xB26E50", VA = "0xB26E50")]
		public void Calculate(Mesh tmpMesh)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xB266E8", Offset = "0xB266E8", VA = "0xB266E8")]
		private void ComputeProgressiveMesh()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xB27824", Offset = "0xB27824", VA = "0xB27824")]
		private void ProgressiveMesh(float ratio)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xB27B9C", Offset = "0xB27B9C", VA = "0xB27B9C")]
		private void RecalculateNormal()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xB282D4", Offset = "0xB282D4", VA = "0xB282D4")]
		public MeshDecimate()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class Tri
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vert v0;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vert v1;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vert v2;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int defaultIndex0;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int defaultIndex1;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int defaultIndex2;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 uv0;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 uv1;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 uv2;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 vn0;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 vn1;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 vn2;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 normal;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool deleted;

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xB27A68", Offset = "0xB27A68", VA = "0xB27A68")]
		public Tri(int id, Vert v0, Vert v1, Vert v2, Vector2 uv0, Vector2 uv1, Vector2 uv2)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xB27B90", Offset = "0xB27B90", VA = "0xB27B90")]
		public void SetDefaultIndices(int n0, int n1, int n2)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xB259A4", Offset = "0xB259A4", VA = "0xB259A4")]
		public void RemoveTriangle(History his)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xB24650", Offset = "0xB24650", VA = "0xB24650")]
		public Vector2 uvAt(Vert v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xB25A68", Offset = "0xB25A68", VA = "0xB25A68")]
		public Vector3 normalAt(Vert v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xB28988", Offset = "0xB28988", VA = "0xB28988")]
		public void setUV(Vert v, Vector2 newuv)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xB28A78", Offset = "0xB28A78", VA = "0xB28A78")]
		public void setVN(Vert v, Vector3 newNormal)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xB2444C", Offset = "0xB2444C", VA = "0xB2444C")]
		public bool HasVertex(Vert v)
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xB28450", Offset = "0xB28450", VA = "0xB28450")]
		public void RecalculateNormal()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xB27C10", Offset = "0xB27C10", VA = "0xB27C10")]
		public void RecalculateAvgNormals(float smoothAngleDot)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xB25B60", Offset = "0xB25B60", VA = "0xB25B60")]
		public void ReplaceVertex(Vert vo, Vert vnew, Vector2 newUV, Vector3 newVN, History his)
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class Vert
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Tri> face;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vert> neighbor;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cost;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vert collapse;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool selected;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool deleted;

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xB27940", Offset = "0xB27940", VA = "0xB27940")]
		public Vert(Vector3 position, int id, bool selected)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xB258D8", Offset = "0xB258D8", VA = "0xB258D8")]
		public void RemoveVert()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xB24520", Offset = "0xB24520", VA = "0xB24520")]
		public bool IsBorder()
		{
			return default(bool);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xB28608", Offset = "0xB28608", VA = "0xB28608")]
		public void AddFace(Tri f)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xB287E4", Offset = "0xB287E4", VA = "0xB287E4")]
		public void RemoveFace(Tri f)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xB286B8", Offset = "0xB286B8", VA = "0xB286B8")]
		public void AddNeighbor(Vert v)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xB2883C", Offset = "0xB2883C", VA = "0xB2883C")]
		public void RemoveIfNonNeighbor(Vert v)
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class VertexData
	{
		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float dist;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int index;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xB28B64", Offset = "0xB28B64", VA = "0xB28B64")]
		public VertexData()
		{
		}
	}
	[Token(Token = "0x200050F")]
	[RequireComponent(typeof(Text))]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4002054")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4002058")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xB28B6C", Offset = "0xB28B6C", VA = "0xB28B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xB28BD8", Offset = "0xB28BD8", VA = "0xB28BD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xB28CCC", Offset = "0xB28CCC", VA = "0xB28CCC")]
		public FPSCounter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000510")]
	public class InputHandler
	{
		[Token(Token = "0x2000511")]
		public enum InputMode
		{
			[Token(Token = "0x4002061")]
			Mouse,
			[Token(Token = "0x4002062")]
			Keyboard
		}

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputMode inputMode;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool shiftUp;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool shiftDown;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xAxis;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yAxis;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool handbrake;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xB28CD4", Offset = "0xB28CD4", VA = "0xB28CD4")]
		public void Update()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xB28D64", Offset = "0xB28D64", VA = "0xB28D64")]
		private float xMouse()
		{
			return default(float);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xB28DDC", Offset = "0xB28DDC", VA = "0xB28DDC")]
		private float yMouse()
		{
			return default(float);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xB28E54", Offset = "0xB28E54", VA = "0xB28E54")]
		public InputHandler()
		{
		}
	}
}
namespace Wilberforce.VAO
{
	[Token(Token = "0x2000512")]
	[HelpURL("https://projectwilberforce.github.io/vaomanual/")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	[AddComponentMenu("Image Effects/Rendering/Volumetric Ambient Occlusion")]
	public class VAOEffect : VAOEffectCommandBuffer
	{
		[Token(Token = "0x600206C")]
		[Address(RVA = "0xB28E5C", Offset = "0xB28E5C", VA = "0xB28E5C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xB28E64", Offset = "0xB28E64", VA = "0xB28E64")]
		public VAOEffect()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[HelpURL("https://projectwilberforce.github.io/vaomanual/")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class VAOEffectCommandBuffer : MonoBehaviour
	{
		[Token(Token = "0x2000514")]
		public enum EffectMode
		{
			[Token(Token = "0x40020FA")]
			Simple = 1,
			[Token(Token = "0x40020FB")]
			ColorTint,
			[Token(Token = "0x40020FC")]
			ColorBleed
		}

		[Token(Token = "0x2000515")]
		public enum LuminanceModeType
		{
			[Token(Token = "0x40020FE")]
			Luma = 1,
			[Token(Token = "0x40020FF")]
			HSVValue
		}

		[Token(Token = "0x2000516")]
		public enum GiBlurAmmount
		{
			[Token(Token = "0x4002101")]
			Auto = 1,
			[Token(Token = "0x4002102")]
			Less,
			[Token(Token = "0x4002103")]
			More
		}

		[Token(Token = "0x2000517")]
		public enum CullingPrepassModeType
		{
			[Token(Token = "0x4002105")]
			Off,
			[Token(Token = "0x4002106")]
			Greedy,
			[Token(Token = "0x4002107")]
			Careful
		}

		[Token(Token = "0x2000518")]
		public enum AdaptiveSamplingType
		{
			[Token(Token = "0x4002109")]
			Disabled,
			[Token(Token = "0x400210A")]
			EnabledAutomatic,
			[Token(Token = "0x400210B")]
			EnabledManual
		}

		[Token(Token = "0x2000519")]
		public enum BlurModeType
		{
			[Token(Token = "0x400210D")]
			Disabled,
			[Token(Token = "0x400210E")]
			Basic,
			[Token(Token = "0x400210F")]
			Enhanced
		}

		[Token(Token = "0x200051A")]
		public enum BlurQualityType
		{
			[Token(Token = "0x4002111")]
			Fast,
			[Token(Token = "0x4002112")]
			Precise
		}

		[Token(Token = "0x200051B")]
		public enum ColorBleedSelfOcclusionFixLevelType
		{
			[Token(Token = "0x4002114")]
			Off,
			[Token(Token = "0x4002115")]
			Soft,
			[Token(Token = "0x4002116")]
			Hard
		}

		[Token(Token = "0x200051C")]
		public enum ScreenTextureFormat
		{
			[Token(Token = "0x4002118")]
			Auto,
			[Token(Token = "0x4002119")]
			ARGB32,
			[Token(Token = "0x400211A")]
			ARGBHalf,
			[Token(Token = "0x400211B")]
			ARGBFloat,
			[Token(Token = "0x400211C")]
			Default,
			[Token(Token = "0x400211D")]
			DefaultHDR
		}

		[Token(Token = "0x200051D")]
		public enum FarPlaneSourceType
		{
			[Token(Token = "0x400211F")]
			ProjectionParams,
			[Token(Token = "0x4002120")]
			Camera
		}

		[Token(Token = "0x200051E")]
		public enum DistanceFalloffModeType
		{
			[Token(Token = "0x4002122")]
			Off,
			[Token(Token = "0x4002123")]
			Absolute,
			[Token(Token = "0x4002124")]
			Relative
		}

		[Token(Token = "0x200051F")]
		public enum VAOCameraEventType
		{
			[Token(Token = "0x4002126")]
			AfterLighting,
			[Token(Token = "0x4002127")]
			BeforeReflections,
			[Token(Token = "0x4002128")]
			BeforeImageEffectsOpaque
		}

		[Token(Token = "0x2000520")]
		public enum HierarchicalBufferStateType
		{
			[Token(Token = "0x400212A")]
			Off,
			[Token(Token = "0x400212B")]
			On,
			[Token(Token = "0x400212C")]
			Auto
		}

		[Token(Token = "0x2000521")]
		public enum NormalsSourceType
		{
			[Token(Token = "0x400212E")]
			GBuffer = 1,
			[Token(Token = "0x400212F")]
			Calculate
		}

		[Token(Token = "0x2000522")]
		public enum DetailQualityType
		{
			[Token(Token = "0x4002131")]
			Medium = 1,
			[Token(Token = "0x4002132")]
			High
		}

		[Token(Token = "0x2000523")]
		public enum AlgorithmType
		{
			[Token(Token = "0x4002134")]
			StandardVAO = 1,
			[Token(Token = "0x4002135")]
			RaycastAO
		}

		[Token(Token = "0x2000524")]
		private enum ShaderPass
		{
			[Token(Token = "0x4002137")]
			CullingPrepass,
			[Token(Token = "0x4002138")]
			MainPass,
			[Token(Token = "0x4002139")]
			MainPassDoubleRadius,
			[Token(Token = "0x400213A")]
			MainPassTripleRadius,
			[Token(Token = "0x400213B")]
			MainPassDoubleRadiusHQ,
			[Token(Token = "0x400213C")]
			MainPassTripleRadiusHQ
		}

		[Token(Token = "0x2000525")]
		private enum ShaderFinalPass
		{
			[Token(Token = "0x400213E")]
			StandardBlurUniform,
			[Token(Token = "0x400213F")]
			StandardBlurUniformMultiplyBlend,
			[Token(Token = "0x4002140")]
			StandardBlurUniformFast,
			[Token(Token = "0x4002141")]
			StandardBlurUniformFastMultiplyBlend,
			[Token(Token = "0x4002142")]
			EnhancedBlurFirstPass,
			[Token(Token = "0x4002143")]
			EnhancedBlurSecondPass,
			[Token(Token = "0x4002144")]
			EnhancedBlurSecondPassMultiplyBlend,
			[Token(Token = "0x4002145")]
			Mixing,
			[Token(Token = "0x4002146")]
			MixingMultiplyBlend,
			[Token(Token = "0x4002147")]
			DownscaleDepthNormalsPass,
			[Token(Token = "0x4002148")]
			Copy,
			[Token(Token = "0x4002149")]
			BlendAfterLightingLog,
			[Token(Token = "0x400214A")]
			TexCopyImageEffectSPSR,
			[Token(Token = "0x400214B")]
			CalculateNormals,
			[Token(Token = "0x400214C")]
			TexCopyTemporalSPSR
		}

		[Token(Token = "0x2000526")]
		private enum ShaderBeforeReflectionsBlendPass
		{
			[Token(Token = "0x400214E")]
			BlendBeforeReflections,
			[Token(Token = "0x400214F")]
			BlendBeforeReflectionsLog
		}

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Power;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Presence;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Thickness;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float BordersIntensity;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DetailAmountVAO;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DetailQualityType DetailQuality;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DetailAmountRaycast;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Quality;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float SSAOBias;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool MaxRadiusEnabled;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaxRadius;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlgorithmType Algorithm;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public DistanceFalloffModeType DistanceFalloffMode;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float DistanceFalloffStartAbsolute;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DistanceFalloffStartRelative;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float DistanceFalloffSpeedAbsolute;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float DistanceFalloffSpeedRelative;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AdaptiveSamplingType AdaptiveType;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AdaptiveQualityCoefficient;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CullingPrepassModeType CullingPrepassMode;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Downsampling;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HierarchicalBufferStateType HierarchicalBufferState;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool CommandBufferEnabled;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool UseGBuffer;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool UsePreciseDepthBuffer;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public bool EnableTemporalFiltering;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VAOCameraEventType VaoCameraEvent;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public FarPlaneSourceType FarPlaneSource;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsLumaSensitive;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public LuminanceModeType LuminanceMode;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float LumaThreshold;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float LumaKneeWidth;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float LumaKneeLinearity;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public EffectMode Mode;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color ColorTint;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float ColorBleedPower;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float ColorBleedPresence;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ScreenTextureFormat IntermediateScreenTextureFormat;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool ColorbleedHueSuppresionEnabled;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float ColorBleedHueSuppresionThreshold;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float ColorBleedHueSuppresionWidth;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float ColorBleedHueSuppresionSaturationThreshold;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float ColorBleedHueSuppresionSaturationWidth;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float ColorBleedHueSuppresionBrightness;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int ColorBleedQuality;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ColorBleedSelfOcclusionFixLevelType ColorBleedSelfOcclusionFixLevel;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool GiBackfaces;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BlurQualityType BlurQuality;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public BlurModeType BlurMode;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int EnhancedBlurSize;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float EnhancedBlurDeviation;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool OutputAOOnly;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public NormalsSourceType NormalsSource;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float HierarchicalBufferPixelsPerLevel;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int CullingPrepassDownsamplingFactor;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float AdaptiveQuality;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float AdaptiveMin;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float AdaptiveMax;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool lumaFoldout;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool colorBleedFoldout;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		public bool optimizationFoldout;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		public bool radiusLimitsFoldout;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool pipelineFoldout;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool blurFoldout;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool aboutFoldout;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<CameraEvent, CommandBuffer> cameraEventsRegistered;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isCommandBufferAlive;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Mesh screenQuad;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int destinationWidth;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int destinationHeight;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool onDestroyCalled;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Shader vaoMainShader;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Shader vaoMainColorbleedShader;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Shader raycastMainShader;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Shader raycastMainColorbleedShader;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Shader vaoFinalPassShader;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Shader vaoBeforeReflectionsBlendShader;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera myCamera;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool isSupported;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material VAOMaterial;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material VAOColorbleedMaterial;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material VAOFinalPassMaterial;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material RaycastMaterial;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Material RaycastColorbleedMaterial;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Material BeforeReflectionsBlendMaterial;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public bool ForcedSwitchPerformed;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public bool ForcedSwitchPerformedSinglePassStereo;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public bool ForcedSwitchPerformedSinglePassStereoGBuffer;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int lastDownsampling;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int lastAlgorithm;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private AdaptiveSamplingType lastAdaptiveType;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private CameraEvent? lastOverrideCameraEvent;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool lastEnableTemporalFiltering;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int? lastOverrideWidth;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int? lastOverrideHeight;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int lastQuality;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CullingPrepassModeType lastcullingPrepassType;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int lastCullingPrepassDownsamplingFactor;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private BlurModeType lastBlurMode;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private BlurQualityType lastBlurQuality;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int lastMainPass;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private EffectMode lastMode;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool lastUseGBuffer;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		private bool lastOutputAOOnly;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private CameraEvent lastCameraEvent;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool lastIsHDR;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		private bool lastIsSPSR;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		private bool lastIsMPSR;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int lastScreenTextureWidth;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int lastScreenTextureHeight;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool isHDR;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
		public bool isSPSR;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x206")]
		public bool isMPSR;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ScreenTextureFormat lastIntermediateScreenTextureFormat;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int lastCmdBufferEnhancedBlurSize;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool lastHierarchicalBufferEnabled;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		public bool historyReady;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Matrix4x4 previousCameraToWorldMatrix;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Matrix4x4 previousProjectionMatrix;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private Matrix4x4 previousCameraToWorldMatrixLeft;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private Matrix4x4 previousProjectionMatrixLeft;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Texture2D noiseTexture;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Texture2D temporalSamplesTexture;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int frameNumber;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private bool isEvenFrame;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Vector4[] adaptiveSamples;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector4[] carefulCache;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture[] aoHistory;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int aoHistoryCurrentIdx;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector4[] gaussian;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Vector4[] gaussianBuffer;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private Vector4[] samplesLarge;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private int lastSamplesLength;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int lastEnhancedBlurSize;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float gaussianWeight;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float lastDeviation;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public CameraEvent? OverrideCameraEvent;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public int? OverrideWidth;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public int? OverrideHeight;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Vector4[] samplesPacked;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] noiseSamples;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector4[] samp2;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector4[] samp4;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector4[] samp8;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4[] samp16;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector4[] samp32;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector4[] samp64;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector4[] packedSamples;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Color[] temporalSamplesPacked;

		[Token(Token = "0x17000228")]
		public bool HierarchicalBufferEnabled
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0xB110F0", Offset = "0xB110F0", VA = "0xB110F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xB0B9C8", Offset = "0xB0B9C8", VA = "0xB0B9C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xB0CB40", Offset = "0xB0CB40", VA = "0xB0CB40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xB0CF8C", Offset = "0xB0CF8C", VA = "0xB0CF8C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xB0CFC8", Offset = "0xB0CFC8", VA = "0xB0CFC8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xB0FEAC", Offset = "0xB0FEAC", VA = "0xB0FEAC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xB10180", Offset = "0xB10180", VA = "0xB10180")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xB10184", Offset = "0xB10184", VA = "0xB10184")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xB101A0", Offset = "0xB101A0", VA = "0xB101A0")]
		private ShaderPass GetMainPass(AlgorithmType algorithm, bool doQuarterRadius, bool doHalfRadius)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xB101E0", Offset = "0xB101E0", VA = "0xB101E0")]
		private Material getAlgorithmMaterial()
		{
			return null;
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xB10224", Offset = "0xB10224", VA = "0xB10224")]
		protected void PerformOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xB0FDAC", Offset = "0xB0FDAC", VA = "0xB0FDAC")]
		private void EnsureCommandBuffer(bool settingsDirty = false)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xB11374", Offset = "0xB11374", VA = "0xB11374")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xB0CBB8", Offset = "0xB0CBB8", VA = "0xB0CBB8")]
		private void TeardownCommandBuffer()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xB13E98", Offset = "0xB13E98", VA = "0xB13E98")]
		protected Mesh GetScreenQuad()
		{
			return null;
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xB13D6C", Offset = "0xB13D6C", VA = "0xB13D6C")]
		private CameraEvent GetCameraEvent(VAOCameraEventType vaoCameraEvent)
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xB11118", Offset = "0xB11118", VA = "0xB11118")]
		private void DoShaderBlitCopy(Texture sourceTexture, RenderTexture destinationTexture)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xB140B0", Offset = "0xB140B0", VA = "0xB140B0")]
		protected void DoMixingBlit(CommandBuffer commandBuffer, int? source, int? primaryTarget, RenderTargetIdentifier secondaryTarget, int pass, Material material)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xB14184", Offset = "0xB14184", VA = "0xB14184")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, int target, int pass, Material material)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xB142E8", Offset = "0xB142E8", VA = "0xB142E8")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, RenderTargetIdentifier target, int pass, Material material)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xB0D4E4", Offset = "0xB0D4E4", VA = "0xB0D4E4")]
		private void TrySetUniforms()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xB111FC", Offset = "0xB111FC", VA = "0xB111FC")]
		private void prepareAoHistory(int screenTextureWidth, int screenTextureHeight)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xB11004", Offset = "0xB11004", VA = "0xB11004")]
		private void releaseAoHistory()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xB147C8", Offset = "0xB147C8", VA = "0xB147C8")]
		private Vector4[] GetCombinedSamples(Vector4[] a, Vector4[] b, [Optional] Vector4[] c, [Optional] Vector4[] d)
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xB14950", Offset = "0xB14950", VA = "0xB14950")]
		private Vector4[] selectSampleSet(int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xB14A8C", Offset = "0xB14A8C", VA = "0xB14A8C")]
		private int getAdaptiveSamplesOffset(int samplesCount)
		{
			return default(int);
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xB14524", Offset = "0xB14524", VA = "0xB14524")]
		private void SetKeywords(Material material, string offState, string onState, bool state)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xB0C1E0", Offset = "0xB0C1E0", VA = "0xB0C1E0")]
		private void EnsureMaterials()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xB14AD4", Offset = "0xB14AD4", VA = "0xB14AD4")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xB14B80", Offset = "0xB14B80", VA = "0xB14B80")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xB14568", Offset = "0xB14568", VA = "0xB14568")]
		private void SetVectorArrayNoBuffer(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xB14744", Offset = "0xB14744", VA = "0xB14744")]
		private void SetVectorArray(string name, Material Material, Vector4[] samples, ref Vector4[] samplesBuffer, ref int lastBufferLength, bool needsUpdate)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xB14C04", Offset = "0xB14C04", VA = "0xB14C04")]
		private void SetSampleSet(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xB14D2C", Offset = "0xB14D2C", VA = "0xB14D2C")]
		private Vector4[] GetAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xB0CA14", Offset = "0xB0CA14", VA = "0xB0CA14")]
		private Vector4[] GenerateAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xB0C774", Offset = "0xB0C774", VA = "0xB0C774")]
		private void EnsureNoiseTexture()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xB0C8B8", Offset = "0xB0C8B8", VA = "0xB0C8B8")]
		private void EnsureTemporalSamplesTexture()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xB14584", Offset = "0xB14584", VA = "0xB14584")]
		private static Vector4[] GenerateGaussian(int size, float d, out float weight, bool normalize = true)
		{
			return null;
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xB14428", Offset = "0xB14428", VA = "0xB14428")]
		private float GetDepthForScreenSize(Camera camera, float sizeOnScreen)
		{
			return default(float);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xB14D60", Offset = "0xB14D60", VA = "0xB14D60")]
		public bool ShouldUseHierarchicalBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xB14478", Offset = "0xB14478", VA = "0xB14478")]
		public bool ShouldUseGBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xB0D1E0", Offset = "0xB0D1E0", VA = "0xB0D1E0")]
		protected void EnsureVAOVersion()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xB0F978", Offset = "0xB0F978", VA = "0xB0F978")]
		private bool CheckSettingsChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xB13E68", Offset = "0xB13E68", VA = "0xB13E68")]
		private RenderTextureFormat GetRenderTextureFormat(ScreenTextureFormat format, bool isHDR)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xB0C134", Offset = "0xB0C134", VA = "0xB0C134")]
		private void ReportError(string error)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xB151FC", Offset = "0xB151FC", VA = "0xB151FC")]
		private void ReportWarning(string error)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xB0CEE8", Offset = "0xB0CEE8", VA = "0xB0CEE8")]
		private bool isCameraSPSR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xB15178", Offset = "0xB15178", VA = "0xB15178")]
		private bool isCameraHDR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xB14470", Offset = "0xB14470", VA = "0xB14470")]
		private bool MustForceFlip(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xB14E64", Offset = "0xB14E64", VA = "0xB14E64")]
		protected List<KeyValuePair<FieldInfo, object>> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xB15010", Offset = "0xB15010", VA = "0xB15010")]
		protected void SetParameters(List<KeyValuePair<FieldInfo, object>> parameters)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xB152A8", Offset = "0xB152A8", VA = "0xB152A8")]
		public VAOEffectCommandBuffer()
		{
		}
	}
}
