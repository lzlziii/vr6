using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using Assets._Code.Audio;
using Assets._Code.Basketball;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Empyrean.AssetMapping;
using Il2CppDummyDll;
using Newtonsoft.Json;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using Valve.VR;
using _Code.Achievement;
using _Code.Appraisers;
using _Code.Dirts;
using _Code.FX;
using _Code.Fonts;
using _Code.FunMechanics;
using _Code.FunMechanics.RemoteControlCar;
using _Code.Interactions;
using _Code.Interactions.Assembly;
using _Code.Interactions.Initialisers;
using _Code.Interactions.Installations;
using _Code.ItemVariants;
using _Code.Miscellaneous;
using _Code.Pickupables;
using _Code.Quests;
using _Code.Raycaster;
using _Code.SceneLoad;
using _Code.Systems;
using _Code.Systems.Fx;
using _Code.Systems.InteractionSystem;
using _Code.Systems.InteractionSystem.Actions;
using _Code.Systems.InteractionSystem.Interactions;
using _Code.Systems.InteractionSystem.ProgressHandlers;
using _Code.Systems.MasterSystem;
using _Code.Systems.MasterSystem.Handlers;
using _Code.Systems.MasterSystem.Interfaces;
using _Code.Systems.Scene_Systems;
using _Code.Systems.Scene_Systems.LineConditions;
using _Code.Systems.Sub_Systems.Narrator;
using _Code.Teleport;
using _Code.TheFirstTutorialScene;
using _Code.Tools;
using _Code.Trash;
using _Code.Tutorial;
using _Code.UI;
using _Code.UI.MainMenu;
using _Code.UI_Tablet;
using _Code.UI_Tablet_Screens;
using _Code.VR.InputSystem;
using _Code.VR.InputSystem.InputActions;
using _Code.VertexPainting;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA331D4", Offset = "0xA331D4")]
public class BusinessmanAppraiser : Appraiser
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA341F4", Offset = "0xA341F4")]
	private sealed class <GetProposition>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BusinessmanAppraiser <>4__this;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AppraiserData data;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xD0AB88", Offset = "0xD0AB88", VA = "0xD0AB88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xD0ABF4", Offset = "0xD0ABF4", VA = "0xD0ABF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xD0AA1C", Offset = "0xD0AA1C", VA = "0xD0AA1C")]
		[DebuggerHidden]
		public <GetProposition>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xD0AA60", Offset = "0xD0AA60", VA = "0xD0AA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xD0AA64", Offset = "0xD0AA64", VA = "0xD0AA64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD0AB90", Offset = "0xD0AB90", VA = "0xD0AB90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float baseBid;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float favouriteHouseBid;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xD0A988", Offset = "0xD0A988", VA = "0xD0A988", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CA0C", Offset = "0xA3CA0C")]
	public override IEnumerator GetProposition(AppraiserData data)
	{
		return null;
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xD0AA48", Offset = "0xD0AA48", VA = "0xD0AA48")]
	public BusinessmanAppraiser()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33220", Offset = "0xA33220")]
public class StudentAppraiser : Appraiser
{
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34204", Offset = "0xA34204")]
	private sealed class <GetProposition>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StudentAppraiser <>4__this;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AppraiserData data;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0xC0EE4C", Offset = "0xC0EE4C", VA = "0xC0EE4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xC0EEB8", Offset = "0xC0EEB8", VA = "0xC0EEB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC0EC5C", Offset = "0xC0EC5C", VA = "0xC0EC5C")]
		[DebuggerHidden]
		public <GetProposition>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC0ECCC", Offset = "0xC0ECCC", VA = "0xC0ECCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC0ECD0", Offset = "0xC0ECD0", VA = "0xC0ECD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC0EE54", Offset = "0xC0EE54", VA = "0xC0EE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float maxBid;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float favouriteHouseBid;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float regularHouseAdditionalExpense;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float favouriteHouseAdditionalExpense;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xC0EBC8", Offset = "0xC0EBC8", VA = "0xC0EBC8", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CA70", Offset = "0xA3CA70")]
	public override IEnumerator GetProposition(AppraiserData data)
	{
		return null;
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xC0EC88", Offset = "0xC0EC88", VA = "0xC0EC88")]
	public StudentAppraiser()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA3326C", Offset = "0xA3326C")]
public sealed class GetComponentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isAssigned;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xC45234", Offset = "0xC45234", VA = "0xC45234")]
	public GetComponentAttribute()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33280", Offset = "0xA33280")]
public class AudioConfiguration : ScriptableObject
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] generatedArrayWithDuplicateClipsToPlay;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip itemPlaced;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip itemPickedUp;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rng;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD09A94", Offset = "0xD09A94", VA = "0xD09A94")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CAD4", Offset = "0xA3CAD4")]
	public AudioClip[] GetRandomizedClipCollection()
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD09B08", Offset = "0xD09B08", VA = "0xD09B08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CB0C", Offset = "0xA3CB0C")]
	private void GenerateClipCollectionToPlay()
	{
	}

	[Token(Token = "0x6000008")]
	private static T[] Shuffle<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD09B74", Offset = "0xD09B74", VA = "0xD09B74")]
	public AudioConfiguration()
	{
	}
}
[Token(Token = "0x2000006")]
public class Carpet : Item
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float randomYPos;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xD0CFB8", Offset = "0xD0CFB8", VA = "0xD0CFB8", Slot = "24")]
	public override void RefreshIntersections()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xD0D1C8", Offset = "0xD0D1C8", VA = "0xD0D1C8", Slot = "32")]
	public override void InitItem(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, MovingObjectsConfiguration movingObjectsConfig, CollisionDetectionConfiguration config, bool onSceneLoaded = false)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xD0D27C", Offset = "0xD0D27C", VA = "0xD0D27C", Slot = "33")]
	protected override void Snap(SnapArgs snapArgs, Vector3 vertOffset)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xD0D4C4", Offset = "0xD0D4C4", VA = "0xD0D4C4", Slot = "14")]
	public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xD0D504", Offset = "0xD0D504", VA = "0xD0D504", Slot = "16")]
	public override void PutDown(_Code.Tools.Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xD0D5B4", Offset = "0xD0D5B4", VA = "0xD0D5B4")]
	public Carpet()
	{
	}
}
[Token(Token = "0x2000007")]
public class CockroachNest : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34214", Offset = "0xA34214")]
	private sealed class <StartupBoundsCleanCor>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CockroachNest <>4__this;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xD0FD5C", Offset = "0xD0FD5C", VA = "0xD0FD5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xD0FDC8", Offset = "0xD0FDC8", VA = "0xD0FDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xD0F5E8", Offset = "0xD0F5E8", VA = "0xD0F5E8")]
		[DebuggerHidden]
		public <StartupBoundsCleanCor>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xD0FBF0", Offset = "0xD0FBF0", VA = "0xD0FBF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xD0FBF4", Offset = "0xD0FBF4", VA = "0xD0FBF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xD0FD64", Offset = "0xD0FD64", VA = "0xD0FD64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34224", Offset = "0xA34224")]
	private sealed class <CleanCor>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CockroachNest <>4__this;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xD0FB7C", Offset = "0xD0FB7C", VA = "0xD0FB7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xD0FBE8", Offset = "0xD0FBE8", VA = "0xD0FBE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xD0F614", Offset = "0xD0F614", VA = "0xD0F614")]
		[DebuggerHidden]
		public <CleanCor>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xD0FA5C", Offset = "0xD0FA5C", VA = "0xD0FA5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xD0FA60", Offset = "0xD0FA60", VA = "0xD0FA60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xD0FB84", Offset = "0xD0FB84", VA = "0xD0FB84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34234", Offset = "0xA34234")]
	private sealed class <BoundsCheckInterval>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CockroachNest <>4__this;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bounds bounds;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool cleaningBrush;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool audio;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0xD0F9E8", Offset = "0xD0F9E8", VA = "0xD0F9E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xD0FA54", Offset = "0xD0FA54", VA = "0xD0FA54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xD0F6F0", Offset = "0xD0F6F0", VA = "0xD0F6F0")]
		[DebuggerHidden]
		public <BoundsCheckInterval>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xD0F930", Offset = "0xD0F930", VA = "0xD0F930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xD0F934", Offset = "0xD0F934", VA = "0xD0F934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xD0F9F0", Offset = "0xD0F9F0", VA = "0xD0F9F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000E")]
	private const float CLEANER_AREA_SIZE = 0.3f;

	[Token(Token = "0x400000F")]
	private const int NUMBER_OF_ROACHES_TO_AUTO_CLEAN = 20;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem ps;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystemRenderer pRenderer;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 boundsSize;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 boundsCenter;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CleaningTool cleaner;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CleaningSprayTool sprayCleaner;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3580C", Offset = "0xA3580C")]
	[SerializeField]
	private RoachParticleSetting roachSetting;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35858", Offset = "0xA35858")]
	[SerializeField]
	private RoachParticleSetting glassSetting;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Bounds bounds;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Bounds cleanerBounds;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly WaitForSeconds boundsCheckInterval;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly WaitForSeconds cleanInterval;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int count;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool exterminated;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine cleanCor;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine outOfBoundsCleanCor;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float cleanClipLength;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastTimeCleanClipWasPlayed;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource source;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioClip cleanClip;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool roachesOff;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private QuestSceneSystem questSys;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool questNotified;

	[Token(Token = "0x17000001")]
	public bool Exterminated
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0xD0E898", Offset = "0xD0E898", VA = "0xD0E898")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xD0E8A0", Offset = "0xD0E8A0", VA = "0xD0E8A0")]
	public void Initialize(QuestSceneSystem questSys, Tool[] toolInstances, AudioClip cleanClip, AudioClip roachClip, AudioSource source)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xD0EC54", Offset = "0xD0EC54", VA = "0xD0EC54")]
	private void HandleGameSettingsChanged()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xD0F08C", Offset = "0xD0F08C", VA = "0xD0F08C")]
	private void HandleSprayUsed()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xD0F308", Offset = "0xD0F308", VA = "0xD0F308")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xD0F520", Offset = "0xD0F520", VA = "0xD0F520")]
	private void HandleToolPickup()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xD0F5D4", Offset = "0xD0F5D4", VA = "0xD0F5D4")]
	private void HandleToolPutDown()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xD0EF78", Offset = "0xD0EF78", VA = "0xD0EF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CB44", Offset = "0xA3CB44")]
	private IEnumerator StartupBoundsCleanCor()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xD0F560", Offset = "0xD0F560", VA = "0xD0F560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CBA8", Offset = "0xA3CBA8")]
	private IEnumerator CleanCor()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xD0F640", Offset = "0xD0F640", VA = "0xD0F640")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CC0C", Offset = "0xA3CC0C")]
	private IEnumerator BoundsCheckInterval(Bounds bounds, bool cleaningBrush, bool audio)
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xD0F1AC", Offset = "0xD0F1AC", VA = "0xD0F1AC")]
	private void CleanInArea(Bounds bounds, bool cleaningToolUsed, bool audio)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xD0F774", Offset = "0xD0F774", VA = "0xD0F774")]
	private void TryToUpdateQuest()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xD0F71C", Offset = "0xD0F71C", VA = "0xD0F71C")]
	private void PlayCleanAudio()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xD0F834", Offset = "0xD0F834", VA = "0xD0F834")]
	public void LoadSave(CockroachSaveData save)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD0EFEC", Offset = "0xD0EFEC", VA = "0xD0EFEC")]
	private void FetchParticles()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD0F89C", Offset = "0xD0F89C", VA = "0xD0F89C")]
	public CockroachNest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000008")]
public class RoachParticleSetting
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material mat;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yOffset;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 rotation;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC0BD08", Offset = "0xC0BD08", VA = "0xC0BD08")]
	public RoachParticleSetting()
	{
	}
}
[Token(Token = "0x2000009")]
public class CockroachSceneSystem : MonoBehaviour, ISystem, ISavableSystem<List<CockroachSaveData>>, IRequirePlayerSubsystems, IRequireSceneSystems, ISceneSystemInitialiseLast
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CockroachNest[] nests;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip cleanClip;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip roachClip;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private QuestSceneSystem questSys;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ToolBelt toolbelt;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358F4", Offset = "0xA358F4")]
	private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

	[Token(Token = "0x17000002")]
	public SceneSystemsInitialiser SceneSystemsInitialiser
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xD103FC", Offset = "0xD103FC", VA = "0xD103FC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CC70", Offset = "0xA3CC70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xD10404", Offset = "0xD10404", VA = "0xD10404", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CC80", Offset = "0xA3CC80")]
		set
		{
		}
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD1040C", Offset = "0xD1040C", VA = "0xD1040C", Slot = "6")]
	public void Initialise()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD10410", Offset = "0xD10410", VA = "0xD10410", Slot = "12")]
	public void InitialiseLast()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD104A0", Offset = "0xD104A0", VA = "0xD104A0")]
	public void CollectRefs()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD10514", Offset = "0xD10514", VA = "0xD10514", Slot = "7")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD1051C", Offset = "0xD1051C", VA = "0xD1051C", Slot = "8")]
	public List<CockroachSaveData> GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD10624", Offset = "0xD10624", VA = "0xD10624", Slot = "9")]
	public void LoadSaveData(List<CockroachSaveData> saveData)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xD106FC", Offset = "0xD106FC", VA = "0xD106FC", Slot = "10")]
	public void AssignRequiredObject(Subsystems subsystems)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xD1071C", Offset = "0xD1071C", VA = "0xD1071C", Slot = "11")]
	public void AssignRequiredObject(SceneSystems sceneSystems)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD1073C", Offset = "0xD1073C", VA = "0xD1073C")]
	public CockroachSceneSystem()
	{
	}
}
[Token(Token = "0x200000A")]
public class CockroachSaveData
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool exterminated;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD1035C", Offset = "0xD1035C", VA = "0xD1035C")]
	public CockroachSaveData(CockroachNest nest)
	{
	}
}
[Token(Token = "0x200000B")]
[DisallowMultipleComponent]
public class Chicken : Interaction
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float grilledProgress;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RenderItemAndColorIndexData[] colorIgnore;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35934", Offset = "0xA35934")]
	[SerializeField]
	private ChickenColorGroup colors;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool notifiedAboutBeingCooked;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private QuestSceneSystem questSystem;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderingSceneSystem renderingSystem;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderItemContainer renderItemContainer;

	[Token(Token = "0x17000003")]
	public bool IsCooked
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0xD0E478", Offset = "0xD0E478", VA = "0xD0E478")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000004")]
	public Item Item
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0xD0E490", Offset = "0xD0E490", VA = "0xD0E490")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xD0E498", Offset = "0xD0E498", VA = "0xD0E498", Slot = "4")]
	public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xD0E624", Offset = "0xD0E624", VA = "0xD0E624", Slot = "5")]
	public override void BreakInteraction()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xD0E628", Offset = "0xD0E628", VA = "0xD0E628")]
	public bool Cook(Cooker cooker, float val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD0E4FC", Offset = "0xD0E4FC", VA = "0xD0E4FC")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD0E70C", Offset = "0xD0E70C", VA = "0xD0E70C")]
	public Chicken()
	{
	}
}
[Serializable]
[Token(Token = "0x200000C")]
internal struct ChickenColorGroup
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color raw;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color grilled;
}
[Serializable]
[Token(Token = "0x200000D")]
public struct RenderItemAndColorIndexData
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int renderItemIndex;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int colorIndex;
}
[Token(Token = "0x200000E")]
public class Cooker : Interaction
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DoorRotationInteraction doorsInteraction;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BoxCollider bakingArea;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RenderItemAndColorIndexData glassDoorsRenderData;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GlassDoorsColorGroup colors;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource doneCookingSound;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Chicken> foundChickens;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderItemContainer renderItemGroup;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderingSceneSystem renderingSystem;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool cookerIsClosed;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool foodIsCooking;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string bakableFoodTag;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xD13628", Offset = "0xD13628", VA = "0xD13628", Slot = "4")]
	public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xD136D0", Offset = "0xD136D0", VA = "0xD136D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xD13A00", Offset = "0xD13A00", VA = "0xD13A00")]
	private void OnChickensCooked()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xD13968", Offset = "0xD13968", VA = "0xD13968")]
	private void SetTurnedOnColor()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xD13B70", Offset = "0xD13B70", VA = "0xD13B70")]
	private void SetTurnedOffColor()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xD13C08", Offset = "0xD13C08", VA = "0xD13C08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xD13D7C", Offset = "0xD13D7C", VA = "0xD13D7C", Slot = "5")]
	public override void BreakInteraction()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xD13D80", Offset = "0xD13D80", VA = "0xD13D80")]
	public Cooker()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
internal struct GlassDoorsColorGroup
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color lightTurnedOff;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color lightTurnedOn;
}
[Token(Token = "0x2000010")]
public class BoardItem : Item
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private Board board;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private SceneSystems sceneSystems;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xD09BE8", Offset = "0xD09BE8", VA = "0xD09BE8", Slot = "32")]
	public override void InitItem(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, MovingObjectsConfiguration movingConfig, CollisionDetectionConfiguration config, bool onSceneLoaded = false)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xD09C78", Offset = "0xD09C78", VA = "0xD09C78")]
	public Board GetBoard()
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xD09C80", Offset = "0xD09C80", VA = "0xD09C80")]
	public void PartialDisable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD09E0C", Offset = "0xD09E0C", VA = "0xD09E0C", Slot = "7")]
	public override void SelfDisable(bool skipAnimation = false)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xD09E3C", Offset = "0xD09E3C", VA = "0xD09E3C")]
	public BoardItem()
	{
	}
}
[Token(Token = "0x2000011")]
public class EggCollisionTrigger : CollisionTrigger
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34244", Offset = "0xA34244")]
	private sealed class <GoDown>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EggCollisionTrigger <>4__this;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <waitTime>5__3;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <fallingSpeed>5__4;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0xC44580", Offset = "0xC44580", VA = "0xC44580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xC445EC", Offset = "0xC445EC", VA = "0xC445EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC441E8", Offset = "0xC441E8", VA = "0xC441E8")]
		[DebuggerHidden]
		public <GoDown>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC44324", Offset = "0xC44324", VA = "0xC44324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC44328", Offset = "0xC44328", VA = "0xC44328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC44588", Offset = "0xC44588", VA = "0xC44588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform completeModel;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform destroyedPartsParent;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Transform> destroyedParts;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ParticleSystem[] fxs;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private RandomSoundPlayer soundPlayer;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly Vector3 brokenEggScale;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int defaultLayerID;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int wallLayerID;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int teleportLayerID;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine cor;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isBroken;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isOnWall;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC43A64", Offset = "0xC43A64", VA = "0xC43A64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC43B78", Offset = "0xC43B78", VA = "0xC43B78")]
	private void CollisionLogic(Collision other)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC44128", Offset = "0xC44128", VA = "0xC44128")]
	private void ResetCor()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC44174", Offset = "0xC44174", VA = "0xC44174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CC90", Offset = "0xA3CC90")]
	private IEnumerator GoDown()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC44214", Offset = "0xC44214", VA = "0xC44214")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC442C0", Offset = "0xC442C0", VA = "0xC442C0")]
	public EggCollisionTrigger()
	{
	}
}
[Token(Token = "0x2000012")]
public class PlateCollisionTrigger : CollisionTrigger
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject completeModel;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Collider collider;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem[] fxs;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int defaultLayerID;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int wallLayerID;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int teleportLayerID;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine cor;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isBroken;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD4B6F4", Offset = "0xD4B6F4", VA = "0xD4B6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD4B808", Offset = "0xD4B808", VA = "0xD4B808")]
	private void CollisionLogic(Collision other)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD4B9AC", Offset = "0xD4B9AC", VA = "0xD4B9AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD4BA58", Offset = "0xD4BA58", VA = "0xD4BA58")]
	public PlateCollisionTrigger()
	{
	}
}
[Token(Token = "0x2000013")]
[DisallowMultipleComponent]
public class ToiletButtonInteraction : Interaction
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VirtualButton button;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem[] Fxs;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource audioFx;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AssemblyManager assemblyManager;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool notifiedAboutFlushedToilet;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isInited;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private QuestSceneSystem questSystem;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Subsystems playerSubsystems;

	[Token(Token = "0x17000005")]
	public Item Item
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xC13790", Offset = "0xC13790", VA = "0xC13790")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC13798", Offset = "0xC13798", VA = "0xC13798", Slot = "4")]
	public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC139FC", Offset = "0xC139FC", VA = "0xC139FC")]
	private void SetInited()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC13AB4", Offset = "0xC13AB4", VA = "0xC13AB4", Slot = "5")]
	public override void BreakInteraction()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC13AB8", Offset = "0xC13AB8", VA = "0xC13AB8")]
	private void OnButtonPress()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xC13BAC", Offset = "0xC13BAC", VA = "0xC13BAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xC13B54", Offset = "0xC13B54", VA = "0xC13B54")]
	private void NotifyQuestSystemOnce()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xC13BF4", Offset = "0xC13BF4", VA = "0xC13BF4")]
	public ToiletButtonInteraction()
	{
	}
}
[Token(Token = "0x2000014")]
public class FxCache : Cache<Fx>
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0xC44ED8", Offset = "0xC44ED8", VA = "0xC44ED8")]
	public FxCache()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteAlways]
public class TapWaterFxHandler : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34254", Offset = "0xA34254")]
	private sealed class <EnableFX>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TapWaterFxHandler <>4__this;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xC0F570", Offset = "0xC0F570", VA = "0xC0F570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0xC0F5DC", Offset = "0xC0F5DC", VA = "0xC0F5DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC0F218", Offset = "0xC0F218", VA = "0xC0F218")]
		[DebuggerHidden]
		public <EnableFX>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC0F46C", Offset = "0xC0F46C", VA = "0xC0F46C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC0F470", Offset = "0xC0F470", VA = "0xC0F470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC0F578", Offset = "0xC0F578", VA = "0xC0F578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34264", Offset = "0xA34264")]
	private sealed class <DisableFX>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TapWaterFxHandler <>4__this;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0xC0F3F8", Offset = "0xC0F3F8", VA = "0xC0F3F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0xC0F464", Offset = "0xC0F464", VA = "0xC0F464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC0F244", Offset = "0xC0F244", VA = "0xC0F244")]
		[DebuggerHidden]
		public <DisableFX>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC0F298", Offset = "0xC0F298", VA = "0xC0F298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC0F29C", Offset = "0xC0F29C", VA = "0xC0F29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC0F400", Offset = "0xC0F400", VA = "0xC0F400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35AF0", Offset = "0xA35AF0")]
	private bool <waterIsRunning>k__BackingField;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float runningWaterMaxHeight;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waterPlaneMaxY;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform container;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform particleFX;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform runningWater;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform waterPlane;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource waterSound;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine enableCor;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine disableCor;

	[Token(Token = "0x17000006")]
	public bool waterIsRunning
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xC0EEC0", Offset = "0xC0EEC0", VA = "0xC0EEC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CCF4", Offset = "0xA3CCF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xC0EEC8", Offset = "0xC0EEC8", VA = "0xC0EEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CD04", Offset = "0xA3CD04")]
		private set
		{
		}
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xC0EED4", Offset = "0xC0EED4", VA = "0xC0EED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xC0EFA0", Offset = "0xC0EFA0", VA = "0xC0EFA0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CD14", Offset = "0xA3CD14")]
	public void Enable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xC0F0E8", Offset = "0xC0F0E8", VA = "0xC0F0E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CD4C", Offset = "0xA3CD4C")]
	public void Disable()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xC0F074", Offset = "0xC0F074", VA = "0xC0F074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CD84", Offset = "0xA3CD84")]
	private IEnumerator EnableFX()
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xC0F1A4", Offset = "0xC0F1A4", VA = "0xC0F1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CDE8", Offset = "0xA3CDE8")]
	private IEnumerator DisableFX()
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xC0F270", Offset = "0xC0F270", VA = "0xC0F270")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xC0F278", Offset = "0xC0F278", VA = "0xC0F278")]
	public TapWaterFxHandler()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA332EC", Offset = "0xA332EC")]
public class HouseAsset : SceneAsset, IHasSprite
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int buyPrice;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int itemsValue;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite thumbnail;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35B70", Offset = "0xA35B70")]
	[SerializeField]
	private string localizationKey;

	[Token(Token = "0x17000007")]
	public Sprite Sprite
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xC4D454", Offset = "0xC4D454", VA = "0xC4D454", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public string LocalizedName
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0xC4D45C", Offset = "0xC4D45C", VA = "0xC4D45C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public string LocalizedFormalDescription
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xC4D4C4", Offset = "0xC4D4C4", VA = "0xC4D4C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public string LocalizedDescription
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xC4D534", Offset = "0xC4D534", VA = "0xC4D534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public string LocalizationKey
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0xC4D5A4", Offset = "0xC4D5A4", VA = "0xC4D5A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xC4D5AC", Offset = "0xC4D5AC", VA = "0xC4D5AC")]
	public HouseAsset()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33328", Offset = "0xA33328")]
public class JobAsset : SceneAsset, IHasLocalizedName
{
	[Serializable]
	[Token(Token = "0x200028A")]
	public class QuestItems
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private CategoryItems[] categories;

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xD9A314", Offset = "0xD9A314", VA = "0xD9A314")]
		public QuestItems()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xD9A414", Offset = "0xD9A414", VA = "0xD9A414")]
		public List<Item> GetCategoryItems(ItemCategory category)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xD9A460", Offset = "0xD9A460", VA = "0xD9A460")]
		public void AddItemToCategory(ItemCategory category, Item item)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200028B")]
	public class CategoryItems
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemCategory category;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Item> items;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xD9A290", Offset = "0xD9A290", VA = "0xD9A290")]
		public CategoryItems(ItemCategory category)
		{
		}
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35BBC", Offset = "0xA35BBC")]
	[SerializeField]
	private float reward;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float estimatedReward;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35C18", Offset = "0xA35C18")]
	public Item[] itemsToUnlock;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Item[] itemsToUnlockOnSceneEnter;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public QuestItems questItems;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35C60", Offset = "0xA35C60")]
	[SerializeField]
	private string localizationKey;

	[Token(Token = "0x1700000C")]
	public string LocalizedName
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xD9A128", Offset = "0xD9A128", VA = "0xD9A128", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public string LocalizedDescription
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0xD9A190", Offset = "0xD9A190", VA = "0xD9A190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public string LocalizedDescriptionClear
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0xD9A200", Offset = "0xD9A200", VA = "0xD9A200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public string LocalizationKey
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xD9A270", Offset = "0xD9A270", VA = "0xD9A270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public float Reward
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xD9A278", Offset = "0xD9A278", VA = "0xD9A278")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000011")]
	public float EstimatedReward
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xD9A280", Offset = "0xD9A280", VA = "0xD9A280")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD9A288", Offset = "0xD9A288", VA = "0xD9A288")]
	public JobAsset()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33364", Offset = "0xA33364")]
public class ModuleDefinitions : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200028C")]
	public class ModuleDefinition
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moduleName;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xDA06C8", Offset = "0xDA06C8", VA = "0xDA06C8")]
		public ModuleDefinition()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string moduleGroupName;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ModuleDefinition> modules;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xDA0658", Offset = "0xDA0658", VA = "0xDA0658")]
	public ModuleDefinitions()
	{
	}
}
[Token(Token = "0x2000019")]
public class ModuleEditorUtils
{
	[Token(Token = "0x600006D")]
	[Address(RVA = "0xDA06D0", Offset = "0xDA06D0", VA = "0xDA06D0")]
	public ModuleEditorUtils()
	{
	}
}
[Token(Token = "0x200001A")]
public class SceneAsset : ScriptableObject
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private int id;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string sceneName;

	[Token(Token = "0x17000012")]
	public int Id
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xC0BD10", Offset = "0xC0BD10", VA = "0xC0BD10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public string SceneName
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xC0BD18", Offset = "0xC0BD18", VA = "0xC0BD18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC0BD20", Offset = "0xC0BD20", VA = "0xC0BD20")]
	public void AssignId(int id)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC0BD28", Offset = "0xC0BD28", VA = "0xC0BD28")]
	public SceneAsset()
	{
	}
}
[Token(Token = "0x200001B")]
public class InteractiveLamp : MonoBehaviour
{
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34274", Offset = "0xA34274")]
	private sealed class <LerpBackToPositionCor>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractiveLamp <>4__this;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xD99858", Offset = "0xD99858", VA = "0xD99858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xD998C4", Offset = "0xD998C4", VA = "0xD998C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xD98F0C", Offset = "0xD98F0C", VA = "0xD98F0C")]
		[DebuggerHidden]
		public <LerpBackToPositionCor>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xD996A8", Offset = "0xD996A8", VA = "0xD996A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xD996AC", Offset = "0xD996AC", VA = "0xD996AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xD99860", Offset = "0xD99860", VA = "0xD99860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform light;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rotationParent;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform rotationParentHelper;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float lerpSpeed;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve restorePositionCurve;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RenderItemContainer rendContainer;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int bulbContainerIndex;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool burned;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform bulbSocket;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ItemTag bulbTag;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderingSceneSystem renderingSystem;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ItemSceneSystem itemSceneSystem;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private QuestSceneSystem questSceneSystem;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Vector3 bulbTriggerCenter;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private readonly Vector3 bulbTriggerSize;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Vector3 helperDownEulerAngles;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool lightSocketIsEmpty;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private InputSystem inputSys;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HandInteractions handInteractions;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private VRObjects vrObjects;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool initialised;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool grabbed;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float timeSinceLastUnGrab;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool playerGrippedDownInLampArea;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine lerpBackCor;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Bounds triggerBounds;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Item bulb;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool holdingBulb;

	[Token(Token = "0x17000014")]
	public bool Burned
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xD98534", Offset = "0xD98534", VA = "0xD98534")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	private RenderingSceneSystem RenderingSystem
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xD9853C", Offset = "0xD9853C", VA = "0xD9853C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xD985B8", Offset = "0xD985B8", VA = "0xD985B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xD9868C", Offset = "0xD9868C", VA = "0xD9868C")]
	private void CollectAudioSource()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xD986E4", Offset = "0xD986E4", VA = "0xD986E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xD987CC", Offset = "0xD987CC", VA = "0xD987CC")]
	public void Setup(ItemSceneSystem itemSys, QuestSceneSystem questSys, RenderingSceneSystem rendSys)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xD987D8", Offset = "0xD987D8", VA = "0xD987D8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CE4C", Offset = "0xA3CE4C")]
	public void PutBulbInside(bool save = false)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xD98924", Offset = "0xD98924", VA = "0xD98924")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3CE84", Offset = "0xA3CE84")]
	public void BurnBulb()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xD98A30", Offset = "0xD98A30", VA = "0xD98A30")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xD98E98", Offset = "0xD98E98", VA = "0xD98E98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CEBC", Offset = "0xA3CEBC")]
	private IEnumerator LerpBackToPositionCor()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xD98E10", Offset = "0xD98E10", VA = "0xD98E10")]
	private bool InInteractionRange(Vector3 controllerPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xD98F38", Offset = "0xD98F38", VA = "0xD98F38")]
	private float GetDistance(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xD99008", Offset = "0xD99008", VA = "0xD99008")]
	public void Initialise(InputSystem inputSystem, VRObjects vrObjs, HandInteractions handInteractions)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xD99200", Offset = "0xD99200", VA = "0xD99200")]
	private void OnGripUp(GeneralArgs obj)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xD992E8", Offset = "0xD992E8", VA = "0xD992E8")]
	private void OnGripped(GeneralArgs obj)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xD9942C", Offset = "0xD9942C", VA = "0xD9942C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xD99434", Offset = "0xD99434", VA = "0xD99434")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xD99598", Offset = "0xD99598", VA = "0xD99598")]
	public InteractiveLamp()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xD99668", Offset = "0xD99668", VA = "0xD99668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CF20", Offset = "0xA3CF20")]
	private void <Update>g__HideBulb|40_0()
	{
	}
}
[Token(Token = "0x200001C")]
public static class BoundsExtensions
{
	[Token(Token = "0x6000085")]
	[Address(RVA = "0xD09E44", Offset = "0xD09E44", VA = "0xD09E44")]
	public static bool ContainBounds(this Bounds bounds, Bounds target)
	{
		return default(bool);
	}
}
[Token(Token = "0x200001D")]
public abstract class Cache<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected T prefab;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private List<T> initialElements;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool initialised;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Stack<T> cachedElements;

	[Token(Token = "0x6000086")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6000088")]
	private void DisposeOfInitialList()
	{
	}

	[Token(Token = "0x6000089")]
	public T Pick(out bool newInstantiated)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	protected virtual T Instantiate()
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	private void PushElement(T element)
	{
	}

	[Token(Token = "0x600008C")]
	public void Restore(T element)
	{
	}

	[Token(Token = "0x600008D")]
	public void Restore(List<T> elements)
	{
	}

	[Token(Token = "0x600008E")]
	protected Cache()
	{
	}
}
[Token(Token = "0x200001E")]
public static class ColorExtensions
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0xD13244", Offset = "0xD13244", VA = "0xD13244")]
	public static bool EqualTo(this Color firstColor, Color secondColor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xD13284", Offset = "0xD13284", VA = "0xD13284")]
	public static bool EqualRgbTo(this Color firstColor, Color secondColor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xD13304", Offset = "0xD13304", VA = "0xD13304")]
	public static bool ApproximatelyTheSame(this Color firstColor, Color secondColor, float maxDeviation)
	{
		return default(bool);
	}
}
[Token(Token = "0x200001F")]
public static class FloatExtensions
{
	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC44E50", Offset = "0xC44E50", VA = "0xC44E50")]
	public static bool ApproximatelyTheSame(this float number, float other, float maxDifference)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000020")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text fpsTextField;

	[Token(Token = "0x40000AC")]
	private const float MEASURE_PERIOD = 0.5f;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int fpsAccumulator;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nextPeriod;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentFps;

	[Token(Token = "0x40000B0")]
	private const string DISPLAY_FORMAT = "{0} FPS";

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC44BB8", Offset = "0xC44BB8", VA = "0xC44BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC44BE8", Offset = "0xC44BE8", VA = "0xC44BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC44CD0", Offset = "0xC44CD0", VA = "0xC44CD0")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000021")]
public static class GameObjectExtensions
{
	[Serializable]
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34284", Offset = "0xA34284")]
	private sealed class <>c__0<T>
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__0<T> <>9;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Type, bool> <>9__0_1;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<MonoBehaviour, bool> <>9__0_0;

		[Token(Token = "0x6001474")]
		public <>c__0()
		{
		}

		[Token(Token = "0x6001475")]
		internal bool <GetInterfaces>b__0_0(MonoBehaviour x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		internal bool <GetInterfaces>b__0_1(Type y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34294", Offset = "0xA34294")]
	private sealed class <GetInterfaces>d__0<T> : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gObj;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<MonoBehaviour> <>7__wrap1;

		[Token(Token = "0x1700021A")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600147B")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600147D")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001477")]
		[DebuggerHidden]
		public <GetInterfaces>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001478")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001479")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600147C")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342A4", Offset = "0xA342A4")]
	private sealed class <>c__1<T>
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__1<T> <>9;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Type, bool> <>9__1_1;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<MonoBehaviour, bool> <>9__1_0;

		[Token(Token = "0x600147F")]
		public <>c__1()
		{
		}

		[Token(Token = "0x6001480")]
		internal bool <GetInterfacesInChildren>b__1_0(MonoBehaviour x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		internal bool <GetInterfacesInChildren>b__1_1(Type y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342B4", Offset = "0xA342B4")]
	private sealed class <GetInterfacesInChildren>d__1<T> : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gObj;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<MonoBehaviour> <>7__wrap1;

		[Token(Token = "0x1700021C")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001486")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001488")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001482")]
		[DebuggerHidden]
		public <GetInterfacesInChildren>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001483")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001484")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001487")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342C4", Offset = "0xA342C4")]
	private sealed class <>c__DisplayClass2_0<T>
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gObj;

		[Token(Token = "0x6001489")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600148A")]
		internal bool <GetInterfacesInChildrenOnly>b__0(MonoBehaviour a)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342D4", Offset = "0xA342D4")]
	private sealed class <>c__2<T>
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__2<T> <>9;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Type, bool> <>9__2_2;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<MonoBehaviour, T> <>9__2_1;

		[Token(Token = "0x600148C")]
		public <>c__2()
		{
		}

		[Token(Token = "0x600148D")]
		internal bool <GetInterfacesInChildrenOnly>b__2_2(Type k)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		internal T <GetInterfacesInChildrenOnly>b__2_1(MonoBehaviour a)
		{
			return (T)null;
		}
	}

	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342E4", Offset = "0xA342E4")]
	private sealed class <>c__DisplayClass3_0<T>
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gObj;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<MonoBehaviour, bool> <>9__0;

		[Token(Token = "0x600148F")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001490")]
		internal bool <GetInterfacesInChildrenOnlyIEnumerable>b__0(MonoBehaviour x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA342F4", Offset = "0xA342F4")]
	private sealed class <>c__3<T>
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__3<T> <>9;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Type, bool> <>9__3_1;

		[Token(Token = "0x6001492")]
		public <>c__3()
		{
		}

		[Token(Token = "0x6001493")]
		internal bool <GetInterfacesInChildrenOnlyIEnumerable>b__3_1(Type y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34304", Offset = "0xA34304")]
	private sealed class <GetInterfacesInChildrenOnlyIEnumerable>d__3<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject gObj;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject <>3__gObj;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<MonoBehaviour> <>7__wrap1;

		[Token(Token = "0x1700021E")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001498")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600149A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001494")]
		[DebuggerHidden]
		public <GetInterfacesInChildrenOnlyIEnumerable>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001495")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001496")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001499")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600149B")]
		[DebuggerHidden]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x6000096")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CF80", Offset = "0xA3CF80")]
	public static IEnumerator<T> GetInterfaces<T>(this GameObject gObj)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CFF4", Offset = "0xA3CFF4")]
	public static IEnumerator<T> GetInterfacesInChildren<T>(this GameObject gObj)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	public static T[] GetInterfacesInChildrenOnly<T>(this GameObject gObj)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D078", Offset = "0xA3D078")]
	public static IEnumerable<T> GetInterfacesInChildrenOnlyIEnumerable<T>(this GameObject gObj)
	{
		return null;
	}
}
[Token(Token = "0x2000022")]
public class GrassLasagnaMaker : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshFilter meshFilter;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float grassHeight;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int layerCount;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float windPower;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material transparentGrassMaterial;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int[] newIndices;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xC46044", Offset = "0xC46044", VA = "0xC46044")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D0EC", Offset = "0xA3D0EC")]
	public void Execute()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xC46048", Offset = "0xC46048", VA = "0xC46048")]
	private void MakeLayeredMesh()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xC464AC", Offset = "0xC464AC", VA = "0xC464AC")]
	public GrassLasagnaMaker()
	{
	}
}
[Token(Token = "0x2000023")]
public static class IntExtensions
{
	[Token(Token = "0x600009D")]
	[Address(RVA = "0xD984B0", Offset = "0xD984B0", VA = "0xD984B0")]
	public static bool ApproximatelyTheSame(this int x, int other, int maxDifference)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33400", Offset = "0xA33400")]
public class LanguageDataBase : ScriptableObject
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageData[] languages;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xD9B344", Offset = "0xD9B344", VA = "0xD9B344")]
	public int GetIndexByName(string name)
	{
		return default(int);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xD9B3D0", Offset = "0xD9B3D0", VA = "0xD9B3D0")]
	public LanguageDataBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public struct LanguageData : IHasSprite
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string name;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private string nativeName;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Sprite flag;

	[Token(Token = "0x17000016")]
	public string Name
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xAEE9A8", Offset = "0xAEE9A8", VA = "0xAEE9A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public string NativeName
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xAEE9B0", Offset = "0xAEE9B0", VA = "0xAEE9B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000018")]
	public Sprite Sprite
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xAEE9B8", Offset = "0xAEE9B8", VA = "0xAEE9B8", Slot = "4")]
		get
		{
			return null;
		}
	}
}
[Token(Token = "0x2000026")]
public static class MathUtility
{
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xD9EFE8", Offset = "0xD9EFE8", VA = "0xD9EFE8")]
	public static float MapFrom01(float x, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xD9EFF8", Offset = "0xD9EFF8", VA = "0xD9EFF8")]
	public static float ClampTo0(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xD9F004", Offset = "0xD9F004", VA = "0xD9F004")]
	public static float Clamp(float x, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xD9F020", Offset = "0xD9F020", VA = "0xD9F020")]
	public static float Mod(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xD9F09C", Offset = "0xD9F09C", VA = "0xD9F09C")]
	public static float LerpHsv(float from, float to, float t)
	{
		return default(float);
	}
}
[Token(Token = "0x2000027")]
public class PhotoRefHandler : MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera rtCamera;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform itemsContainer;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item currentItem;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text itemNameText;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string relativePrefabsPath;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string relativeOutputFolder;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xD4A134", Offset = "0xD4A134", VA = "0xD4A134")]
	public PhotoRefHandler()
	{
	}
}
[Token(Token = "0x2000028")]
public class PrizeAwardSystem : MonoBehaviour, IRequirePlayerSubsystems, IRequireVRObjects
{
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34314", Offset = "0xA34314")]
	private sealed class <AnimateTrophyDown>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trophyTransform;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Item item;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PrizeAwardSystem <>4__this;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetPosition>5__3;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xD4CCD8", Offset = "0xD4CCD8", VA = "0xD4CCD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xD4CD44", Offset = "0xD4CD44", VA = "0xD4CD44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD4C6CC", Offset = "0xD4C6CC", VA = "0xD4C6CC")]
		[DebuggerHidden]
		public <AnimateTrophyDown>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD4CAC4", Offset = "0xD4CAC4", VA = "0xD4CAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD4CAC8", Offset = "0xD4CAC8", VA = "0xD4CAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD4CCE0", Offset = "0xD4CCE0", VA = "0xD4CCE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34324", Offset = "0xA34324")]
	private sealed class <FinishCor>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrizeAwardSystem <>4__this;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Item item;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xD4CE94", Offset = "0xD4CE94", VA = "0xD4CE94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xD4CF00", Offset = "0xD4CF00", VA = "0xD4CF00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD4C778", Offset = "0xD4C778", VA = "0xD4C778")]
		[DebuggerHidden]
		public <FinishCor>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD4CD4C", Offset = "0xD4CD4C", VA = "0xD4CD4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD4CD50", Offset = "0xD4CD50", VA = "0xD4CD50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD4CE9C", Offset = "0xD4CE9C", VA = "0xD4CE9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34334", Offset = "0xA34334")]
	private sealed class <PlayFireworksExplosionSound>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrizeAwardSystem <>4__this;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xD4D074", Offset = "0xD4D074", VA = "0xD4D074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xD4D0E0", Offset = "0xD4D0E0", VA = "0xD4D0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD4C8E8", Offset = "0xD4C8E8", VA = "0xD4C8E8")]
		[DebuggerHidden]
		public <PlayFireworksExplosionSound>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD4CF08", Offset = "0xD4CF08", VA = "0xD4CF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD4CF0C", Offset = "0xD4CF0C", VA = "0xD4CF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD4D07C", Offset = "0xD4D07C", VA = "0xD4D07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34344", Offset = "0xA34344")]
	private sealed class <UpdateParticleCountToPlaySound>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrizeAwardSystem <>4__this;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xD4D174", Offset = "0xD4D174", VA = "0xD4D174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xD4D1E0", Offset = "0xD4D1E0", VA = "0xD4D1E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD4C914", Offset = "0xD4C914", VA = "0xD4C914")]
		[DebuggerHidden]
		public <UpdateParticleCountToPlaySound>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD4D0E8", Offset = "0xD4D0E8", VA = "0xD4D0E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD4D0EC", Offset = "0xD4D0EC", VA = "0xD4D0EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD4D17C", Offset = "0xD4D17C", VA = "0xD4D17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C1")]
	private const float TROPHY_DESCENDING_TIME = 8.25f;

	[Token(Token = "0x40000C2")]
	private const float FIREWORKS_SOUND__MIN_INTERVAL = 0.1f;

	[Token(Token = "0x40000C3")]
	private const float CREDITS_SHOW_TIME = 4f;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ItemSceneSystem itemSceneSystem;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform playerStartPosition;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Item prize;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform prizePosition;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform playerPosition;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem fireWorks;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NarratorSceneSystem narratorSceneSystem;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSceneSystem audioSystem;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip fireworkSound;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip fireworkExplosionSound;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreditsOverlay creditsOverlay;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VRObjects vrObjs;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool shouldAwardPlayer;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _currentFireworkCount;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastFireWorkSoundTime;

	[Token(Token = "0x17000019")]
	private int CurrentFireworkCount
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xD4C0C8", Offset = "0xD4C0C8", VA = "0xD4C0C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xD4C0D0", Offset = "0xD4C0D0", VA = "0xD4C0D0")]
		set
		{
		}
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xD4C168", Offset = "0xD4C168", VA = "0xD4C168")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xD4C204", Offset = "0xD4C204", VA = "0xD4C204")]
	private void DetermineIfShouldAwardPlayer()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xD4C324", Offset = "0xD4C324", VA = "0xD4C324")]
	private void AwardThePrizeIfGameIsFinished()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xD4C514", Offset = "0xD4C514", VA = "0xD4C514")]
	private void SetWatchesEnabled(bool value)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xD4C644", Offset = "0xD4C644", VA = "0xD4C644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D134", Offset = "0xA3D134")]
	private IEnumerator AnimateTrophyDown(Transform trophyTransform, Item item)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xD4C6F8", Offset = "0xD4C6F8", VA = "0xD4C6F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D198", Offset = "0xA3D198")]
	private IEnumerator FinishCor(Item item)
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xD4C7A4", Offset = "0xD4C7A4", VA = "0xD4C7A4")]
	private void EnableFireworks()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xD4C874", Offset = "0xD4C874", VA = "0xD4C874")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D1FC", Offset = "0xA3D1FC")]
	private IEnumerator PlayFireworksExplosionSound()
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xD4C800", Offset = "0xD4C800", VA = "0xD4C800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D260", Offset = "0xA3D260")]
	private IEnumerator UpdateParticleCountToPlaySound()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xD4C108", Offset = "0xD4C108", VA = "0xD4C108")]
	private void PlayFireworkSound()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xD4C940", Offset = "0xD4C940", VA = "0xD4C940")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D2C4", Offset = "0xA3D2C4")]
	private void CollectRefs()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xD4C9F4", Offset = "0xD4C9F4", VA = "0xD4C9F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xD4CA94", Offset = "0xD4CA94", VA = "0xD4CA94", Slot = "4")]
	public void AssignRequiredObject(Subsystems subsystems)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xD4CAB4", Offset = "0xD4CAB4", VA = "0xD4CAB4", Slot = "5")]
	public void AssignRequiredObject(VRObjects vrObjects)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xD4CABC", Offset = "0xD4CABC", VA = "0xD4CABC")]
	public PrizeAwardSystem()
	{
	}
}
[Token(Token = "0x2000029")]
public class RenderItemSubmeshIndexData : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderItemContainer renderItemGroup;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IndexData[] data;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC0BD00", Offset = "0xC0BD00", VA = "0xC0BD00")]
	public RenderItemSubmeshIndexData()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public struct IndexData
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int renderItemIndex;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int submeshIndex;
}
[Token(Token = "0x200002B")]
public class ScreenshotHandler : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resWidth;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int resHeight;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool takeHiResShot;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera camera;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xC0BD64", Offset = "0xC0BD64", VA = "0xC0BD64")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xC0BF30", Offset = "0xC0BF30", VA = "0xC0BF30")]
	public void TakeHiResShot()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xC0BF3C", Offset = "0xC0BF3C", VA = "0xC0BF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xC0BF94", Offset = "0xC0BF94", VA = "0xC0BF94")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D2FC", Offset = "0xA3D2FC")]
	public void Shot()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xC0C18C", Offset = "0xC0C18C", VA = "0xC0C18C")]
	public ScreenshotHandler()
	{
	}
}
[Token(Token = "0x200002C")]
public class SetCorrectCameraHeight : MonoBehaviour
{
	[Token(Token = "0x200029B")]
	private enum TrackingSpace
	{
		[Token(Token = "0x400109B")]
		Stationary,
		[Token(Token = "0x400109C")]
		RoomScale
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA35F24", Offset = "0xA35F24")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA35F24", Offset = "0xA35F24")]
	private TrackingSpace m_TrackingSpace;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA35F94", Offset = "0xA35F94")]
	private float m_StationaryCameraYOffset;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA35FE0", Offset = "0xA35FE0")]
	private GameObject m_CameraFloorOffsetObject;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC0C94C", Offset = "0xC0C94C", VA = "0xC0C94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC0CA04", Offset = "0xC0CA04", VA = "0xC0CA04")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC0CA08", Offset = "0xC0CA08", VA = "0xC0CA08")]
	private void SetCameraHeight()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC0CBC4", Offset = "0xC0CBC4", VA = "0xC0CBC4")]
	public SetCorrectCameraHeight()
	{
	}
}
[Token(Token = "0x200002D")]
public static class StringExtensions
{
	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xC0EA9C", Offset = "0xC0EA9C", VA = "0xC0EA9C")]
	public static string ToRelativeUnityPath(this string path)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xC0EB3C", Offset = "0xC0EB3C", VA = "0xC0EB3C")]
	public static string ToSystemPath(this string relativePath)
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public class TreeAnimation : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34354", Offset = "0xA34354")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TreeAnimation <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xC13F7C", Offset = "0xC13F7C", VA = "0xC13F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xC13FE8", Offset = "0xC13FE8", VA = "0xC13FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC13E70", Offset = "0xC13E70", VA = "0xC13E70")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC13EA4", Offset = "0xC13EA4", VA = "0xC13EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC13EA8", Offset = "0xC13EA8", VA = "0xC13EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC13F84", Offset = "0xC13F84", VA = "0xC13F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xC13DFC", Offset = "0xC13DFC", VA = "0xC13DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D354", Offset = "0xA3D354")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xC13E9C", Offset = "0xC13E9C", VA = "0xC13E9C")]
	public TreeAnimation()
	{
	}
}
[Token(Token = "0x200002F")]
public static class Vector3Extensions
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xC13FF0", Offset = "0xC13FF0", VA = "0xC13FF0")]
	public static Vector3 Round(this Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xC141F0", Offset = "0xC141F0", VA = "0xC141F0")]
	public static Vector3 MultiplyEachAxisBy(this Vector3 vector, Vector3 multiplier)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xC14230", Offset = "0xC14230", VA = "0xC14230")]
	public static Vector3 TranslateLocalPositionBy(this Vector3 vector, Vector3 translation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xC14270", Offset = "0xC14270", VA = "0xC14270")]
	public static Vector3 RoundToFloatingPoint(this Vector3 vector, int digits = 4)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xC14358", Offset = "0xC14358", VA = "0xC14358")]
	public static bool IsAnyLesser(this Vector3 vector, float value)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xC14380", Offset = "0xC14380", VA = "0xC14380")]
	public static bool ApproximatelyEulerAngles(this Vector3 vector, Vector3 other, float tolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xC14520", Offset = "0xC14520", VA = "0xC14520")]
	public static Vector3 RoundToGrid(this Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xC14580", Offset = "0xC14580", VA = "0xC14580")]
	public static Vector3 RoundCoordinatesToTheNearestMultipleOf(this Vector3 vector, float multiple)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xC14794", Offset = "0xC14794", VA = "0xC14794")]
	public static bool ApproximatelyTheSame(this Vector3 vector, Vector3 vector2, float maxDeviation)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000030")]
[SelectionBase]
public class NerfBullet : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34364", Offset = "0xA34364")]
	private sealed class <MoveCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NerfBullet <>4__this;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bulletIsHittingSomething;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <progress>5__2;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x11B947C", Offset = "0x11B947C", VA = "0x11B947C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x11B94E8", Offset = "0x11B94E8", VA = "0x11B94E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x11B912C", Offset = "0x11B912C", VA = "0x11B912C")]
		[DebuggerHidden]
		public <MoveCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x11B9234", Offset = "0x11B9234", VA = "0x11B9234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x11B9238", Offset = "0x11B9238", VA = "0x11B9238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x11B9484", Offset = "0x11B9484", VA = "0x11B9484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject myGameObject;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform myTransform;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Fx hitFx;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private NerfGunItem owner;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA360B4", Offset = "0xA360B4")]
	private float impulseForce;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA360F8", Offset = "0xA360F8")]
	private float moveSpeed;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine moveToCoroutine;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 startPos;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 finalMovePosition;

	[Token(Token = "0x40000EA")]
	private const float threshold = 15f;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distanceToFinalMovePosition;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool needToParent;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isInMove;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool isMoveCoroutineRunning;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform newParent;

	[Token(Token = "0x1700001A")]
	public bool IsInMove
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x11B8D90", Offset = "0x11B8D90", VA = "0x11B8D90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public Transform Transform
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x11B8D98", Offset = "0x11B8D98", VA = "0x11B8D98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x11B8DA0", Offset = "0x11B8DA0", VA = "0x11B8DA0")]
	public void AssignGunOwner(NerfGunItem owner)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x11B8DA8", Offset = "0x11B8DA8", VA = "0x11B8DA8")]
	public void StartMovement(BulletMovementArgs args, Transform newParent)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x11B8E6C", Offset = "0x11B8E6C", VA = "0x11B8E6C")]
	public void StartMovement(BulletMovementArgs args)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x11B8FF0", Offset = "0x11B8FF0", VA = "0x11B8FF0")]
	public void StartMove()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x11B90F0", Offset = "0x11B90F0", VA = "0x11B90F0")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x11B910C", Offset = "0x11B910C", VA = "0x11B910C")]
	public void Disable()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x11B8F68", Offset = "0x11B8F68", VA = "0x11B8F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D448", Offset = "0xA3D448")]
	private IEnumerator MoveCoroutine(bool bulletIsHittingSomething)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x11B9158", Offset = "0x11B9158", VA = "0x11B9158")]
	private void Stop()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x11B8F1C", Offset = "0x11B8F1C", VA = "0x11B8F1C")]
	private void ResetValues()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x11B9224", Offset = "0x11B9224", VA = "0x11B9224")]
	public NerfBullet()
	{
	}
}
[Token(Token = "0x2000031")]
public struct BulletMovementArgs
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 targetPosition;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float distance;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isHittingSomething;
}
[Token(Token = "0x2000032")]
public class NerfGunItem : Item
{
	[Token(Token = "0x40000F3")]
	private const int RAYCAST_LENGTH = 20;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private Transform shootTransform;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private NerfBullet[] bullets;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Stack<NerfBullet> readyBullets;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private List<NerfBullet> activeBullets;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private int raycastLayers;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x11B94F0", Offset = "0x11B94F0", VA = "0x11B94F0", Slot = "13")]
	public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x11B95F4", Offset = "0x11B95F4", VA = "0x11B95F4")]
	private void InitialiseDarts(SceneSystems sceneSystems)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x11B9700", Offset = "0x11B9700", VA = "0x11B9700")]
	private void AddDartsToRenderingSystem()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x11B977C", Offset = "0x11B977C", VA = "0x11B977C", Slot = "28")]
	public override void MoveAndRotate(RaycastArgs args)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x11B9780", Offset = "0x11B9780", VA = "0x11B9780", Slot = "25")]
	protected override void AttachTo(Transform t)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x11B9880", Offset = "0x11B9880", VA = "0x11B9880", Slot = "26")]
	protected override void Detach()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x11B98C4", Offset = "0x11B98C4", VA = "0x11B98C4", Slot = "27")]
	public override void UseOneTime()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x11B9C30", Offset = "0x11B9C30", VA = "0x11B9C30")]
	private NerfBullet GetNerfBullet()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x11B9CF4", Offset = "0x11B9CF4", VA = "0x11B9CF4", Slot = "7")]
	public override void SelfDisable(bool skipAnimation = false)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x11B91A0", Offset = "0x11B91A0", VA = "0x11B91A0")]
	public void PushBulletIntoStack(NerfBullet bullet)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x11B9D78", Offset = "0x11B9D78", VA = "0x11B9D78")]
	public NerfGunItem()
	{
	}
}
[Token(Token = "0x2000033")]
public enum AttachmentSurface
{
	[Token(Token = "0x40000FA")]
	Floor,
	[Token(Token = "0x40000FB")]
	Wall,
	[Token(Token = "0x40000FC")]
	Ceiling
}
[Token(Token = "0x2000034")]
public class CollidersIntersectionDetector
{
	[Serializable]
	[Token(Token = "0x200029E")]
	public class AttachedItem
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform itemTransform;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicalObject physicalObject;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 worldPos;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion worldRot;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 startChildPosition;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion startParentRotation;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion startChildRotation;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform parent;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Matrix4x4 parentMatrix;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xD11F04", Offset = "0xD11F04", VA = "0xD11F04")]
		public AttachedItem(PhysicalObject physicalObject)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xD12C14", Offset = "0xD12C14", VA = "0xD12C14")]
		public void CalculateRelativePositionTo(Transform parent)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xD12E08", Offset = "0xD12E08", VA = "0xD12E08")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xD12E48", Offset = "0xD12E48", VA = "0xD12E48")]
		public void RestoreRelativeToParentPositionAndRotation(Transform parent)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD13064", Offset = "0xD13064", VA = "0xD13064")]
		public void Deparent()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD13088", Offset = "0xD13088", VA = "0xD13088")]
		public void TemporarilyTurnOnPhysics()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD13170", Offset = "0xD13170", VA = "0xD13170")]
		public void Parent(Transform newParent)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD131B4", Offset = "0xD131B4", VA = "0xD131B4")]
		public void ApplyPosRot()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD130D4", Offset = "0xD130D4", VA = "0xD130D4")]
		public bool IsBeingHeld()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34374", Offset = "0xA34374")]
	private sealed class <GetIntersectingObjects>d__17 : IEnumerable<PhysicalObject>, IEnumerable, IEnumerator<PhysicalObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicalObject <>2__current;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool UpTranslation;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool <>3__UpTranslation;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 center;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 <>3__center;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 boundsSize;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 <>3__boundsSize;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float boundsMultiplier;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float <>3__boundsMultiplier;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rotation;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LayerMask mask;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public LayerMask <>3__mask;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] <>7__wrap1;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int <>7__wrap2;

		[Token(Token = "0x1700022C")]
		private PhysicalObject System.Collections.Generic.IEnumerator<_Code.Interactions.PhysicalObject>.Current
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xD12388", Offset = "0xD12388", VA = "0xD12388", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xD123F4", Offset = "0xD123F4", VA = "0xD123F4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD10F90", Offset = "0xD10F90", VA = "0xD10F90")]
		[DebuggerHidden]
		public <GetIntersectingObjects>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xD1213C", Offset = "0xD1213C", VA = "0xD1213C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xD12140", Offset = "0xD12140", VA = "0xD12140", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD12390", Offset = "0xD12390", VA = "0xD12390", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD123FC", Offset = "0xD123FC", VA = "0xD123FC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<PhysicalObject> System.Collections.Generic.IEnumerable<_Code.Interactions.PhysicalObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD124F4", Offset = "0xD124F4", VA = "0xD124F4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34384", Offset = "0xA34384")]
	private sealed class <GetObjectsOnTop>d__18 : IEnumerable<PhysicalObject>, IEnumerable, IEnumerator<PhysicalObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicalObject <>2__current;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 <>3__center;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 boundsSize;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 <>3__boundsSize;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion rotation;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private LayerMask mask;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask <>3__mask;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Collider[] <>7__wrap1;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int <>7__wrap2;

		[Token(Token = "0x1700022E")]
		private PhysicalObject System.Collections.Generic.IEnumerator<_Code.Interactions.PhysicalObject>.Current
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xD12728", Offset = "0xD12728", VA = "0xD12728", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xD12794", Offset = "0xD12794", VA = "0xD12794", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xD1109C", Offset = "0xD1109C", VA = "0xD1109C")]
		[DebuggerHidden]
		public <GetObjectsOnTop>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xD124F8", Offset = "0xD124F8", VA = "0xD124F8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xD124FC", Offset = "0xD124FC", VA = "0xD124FC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xD12730", Offset = "0xD12730", VA = "0xD12730", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xD1279C", Offset = "0xD1279C", VA = "0xD1279C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<PhysicalObject> System.Collections.Generic.IEnumerable<_Code.Interactions.PhysicalObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xD12884", Offset = "0xD12884", VA = "0xD12884", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34394", Offset = "0xA34394")]
	private sealed class <GetObjectsOnTop>d__19 : IEnumerable<PhysicalObject>, IEnumerable, IEnumerator<PhysicalObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicalObject <>2__current;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 <>3__center;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 boundsSize;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 <>3__boundsSize;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float boundsMultiplier;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float <>3__boundsMultiplier;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion rotation;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private LayerMask mask;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask <>3__mask;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] <>7__wrap1;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int <>7__wrap2;

		[Token(Token = "0x17000230")]
		private PhysicalObject System.Collections.Generic.IEnumerator<_Code.Interactions.PhysicalObject>.Current
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xD12AAC", Offset = "0xD12AAC", VA = "0xD12AAC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xD12B18", Offset = "0xD12B18", VA = "0xD12B18", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD111B0", Offset = "0xD111B0", VA = "0xD111B0")]
		[DebuggerHidden]
		public <GetObjectsOnTop>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD12888", Offset = "0xD12888", VA = "0xD12888", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD1288C", Offset = "0xD1288C", VA = "0xD1288C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD12AB4", Offset = "0xD12AB4", VA = "0xD12AB4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD12B20", Offset = "0xD12B20", VA = "0xD12B20", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<PhysicalObject> System.Collections.Generic.IEnumerable<_Code.Interactions.PhysicalObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD12C10", Offset = "0xD12C10", VA = "0xD12C10", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343A4", Offset = "0xA343A4")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicalObject physicalObject;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD11EFC", Offset = "0xD11EFC", VA = "0xD11EFC")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD12024", Offset = "0xD12024", VA = "0xD12024")]
		internal bool <GetPhysicalObjectsInBounds>b__0(AttachedItem x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343B4", Offset = "0xA343B4")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicalObject physicalObject;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD11FA8", Offset = "0xD11FA8", VA = "0xD11FA8")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD120B0", Offset = "0xD120B0", VA = "0xD120B0")]
		internal bool <GetPhysicalObjectsCompletelyInsideBounds>b__0(AttachedItem x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Collider[] colliders;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Collider[] collisionColliders;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Bounds bounds;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Transform mainTransform;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Collider mainCollider;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Transform[] transforms;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly LayerMask physicsReloadObjectsLayers;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly LayerMask carpetCollisionLayers;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly LayerMask itemAndCarriedLayer;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly VRObjects vrObjs;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<PhysicalObject, List<AttachedItem>> pickupableToObjectsOnTop;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD10744", Offset = "0xD10744", VA = "0xD10744")]
	public CollidersIntersectionDetector(Transform mainTransform, VRObjects vrObjs, Collider[] colliders, Collider[] collisionColliders, Collider mainCollider, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD0D034", Offset = "0xD0D034", VA = "0xD0D034")]
	public bool IntersectsWithWallsOfDefaultLayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD10A80", Offset = "0xD10A80", VA = "0xD10A80")]
	public bool IntersectsWithAnything()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD10C14", Offset = "0xD10C14", VA = "0xD10C14")]
	public bool IntersectsWithAnythingWhileIgnoringANumberOfIntersections(int numberOfObjectsToIgnore)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD10DA4", Offset = "0xD10DA4", VA = "0xD10DA4")]
	public bool ExtendedBoundsIntersectWithAnything(float boundsMultiplier)
	{
		return default(bool);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xD108A0", Offset = "0xD108A0", VA = "0xD108A0")]
	private bool CollidingWithOtherThanSelf(int count, Collider[] results, int numbersOfCollidersToIgnore = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xD10EA0", Offset = "0xD10EA0", VA = "0xD10EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D4AC", Offset = "0xA3D4AC")]
	public static IEnumerable<PhysicalObject> GetIntersectingObjects(Vector3 boundsSize, Vector3 center, Quaternion rotation, bool UpTranslation, float boundsMultiplier, LayerMask mask)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xD10FC8", Offset = "0xD10FC8", VA = "0xD10FC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D510", Offset = "0xA3D510")]
	public static IEnumerable<PhysicalObject> GetObjectsOnTop(Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD110D4", Offset = "0xD110D4", VA = "0xD110D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D574", Offset = "0xA3D574")]
	public static IEnumerable<PhysicalObject> GetObjectsOnTop(Vector3 boundsSize, Vector3 center, Quaternion rotation, float boundsMultiplier, LayerMask mask)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD111E8", Offset = "0xD111E8", VA = "0xD111E8")]
	public static IEnumerable<AttachedItem> GetObjectsOnTopStorageItem(PhysicalObject pickupable, Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask, float boundsMultiplier = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD117D8", Offset = "0xD117D8", VA = "0xD117D8")]
	public static IEnumerable<AttachedItem> GetObjectsOnTopRegularItem(PhysicalObject pickupable, Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask, float yOffset = 0.75f, float boundsMultiplier = 0.95f)
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD11914", Offset = "0xD11914", VA = "0xD11914")]
	public static IEnumerable<AttachedItem> GetObjectsInsideStorage(PhysicalObject pickupable, Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask, float boundsMultiplier = 0.85f)
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD11DDC", Offset = "0xD11DDC", VA = "0xD11DDC")]
	public static List<AttachedItem> GetAttachedItemsFor(PhysicalObject pickupable, out bool found)
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD11318", Offset = "0xD11318", VA = "0xD11318")]
	private static List<AttachedItem> GetPhysicalObjectsInBounds(PhysicalObject pickupable, Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD11A3C", Offset = "0xD11A3C", VA = "0xD11A3C")]
	private static List<AttachedItem> GetPhysicalObjectsCompletelyInsideBounds(PhysicalObject pickupable, Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask)
	{
		return null;
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA3346C", Offset = "0xA3346C")]
public class ItemManipulationConfiguration : ScriptableObject
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int circleSegments;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float width;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float radiusMultiply;

	[Token(Token = "0x1700001C")]
	public int CircleSegments
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xD998CC", Offset = "0xD998CC", VA = "0xD998CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public float Width
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xD998D4", Offset = "0xD998D4", VA = "0xD998D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001E")]
	public float RadiusMultiply
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xD998DC", Offset = "0xD998DC", VA = "0xD998DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xD998E4", Offset = "0xD998E4", VA = "0xD998E4")]
	public ItemManipulationConfiguration()
	{
	}
}
[Token(Token = "0x2000036")]
public class ItemManipulationGizmo : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ItemManipulationConfiguration config;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer verticalLineRenderer;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LineRenderer circleRenderer;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool active;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xD99908", Offset = "0xD99908", VA = "0xD99908")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xD99A6C", Offset = "0xD99A6C", VA = "0xD99A6C")]
	public void UpdateGizmo(_Code.Tools.Hand hand, Item item)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD99C24", Offset = "0xD99C24", VA = "0xD99C24")]
	private Vector3 GetYOffset(Item item)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD99D20", Offset = "0xD99D20", VA = "0xD99D20")]
	private void Draw(Vector3 center, Vector3 extents, int circleSegments, Transform handTransform)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD99A04", Offset = "0xD99A04", VA = "0xD99A04")]
	public void HideGizmo()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD9A118", Offset = "0xD9A118", VA = "0xD9A118")]
	public ItemManipulationGizmo()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA334B8", Offset = "0xA334B8")]
public class MovingObjectsConfiguration : ScriptableObject
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve speedCurve;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve pickupSpeedCurve;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve itemsValueToMultiplier;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minObjectFromControllerDistance;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxObjectFromControllerDistance;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float stickForwardBackDeadzone;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float stickLeftRightDeadzone;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float wallRaycastLength;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float cellingRaycastLength;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private LayerMask wallLayer;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask wallAndDefaultLayers;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private LayerMask cellingLayer;

	[Token(Token = "0x1700001F")]
	public float MinObjectFromControllerDistance
	{
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x11B7BDC", Offset = "0x11B7BDC", VA = "0x11B7BDC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000020")]
	public float MaxObjectFromControllerDistance
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x11B7BE4", Offset = "0x11B7BE4", VA = "0x11B7BE4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000021")]
	public float RotationSpeed
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x11B7BEC", Offset = "0x11B7BEC", VA = "0x11B7BEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000022")]
	public float StickForwardBackDeadzone
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x11B7BF4", Offset = "0x11B7BF4", VA = "0x11B7BF4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000023")]
	public float StickLeftRightDeadzone
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x11B7BFC", Offset = "0x11B7BFC", VA = "0x11B7BFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000024")]
	public float WallRaycastLength
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x11B7C04", Offset = "0x11B7C04", VA = "0x11B7C04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	public float CellingRaycastLength
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x11B7C0C", Offset = "0x11B7C0C", VA = "0x11B7C0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public LayerMask WallLayer
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x11B7C14", Offset = "0x11B7C14", VA = "0x11B7C14")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x17000027")]
	public LayerMask WallAndDefaultLayers
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x11B7C1C", Offset = "0x11B7C1C", VA = "0x11B7C1C")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x17000028")]
	public LayerMask CellingLayer
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x11B7C24", Offset = "0x11B7C24", VA = "0x11B7C24")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11B7C2C", Offset = "0x11B7C2C", VA = "0x11B7C2C")]
	public float GetSpeed(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11B7C48", Offset = "0x11B7C48", VA = "0x11B7C48")]
	public float GetRemotePickupSpeed(float diagonal)
	{
		return default(float);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x11B7C64", Offset = "0x11B7C64", VA = "0x11B7C64")]
	public float GetHouseValueMultiplier(float itemsValue)
	{
		return default(float);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11B7C80", Offset = "0x11B7C80", VA = "0x11B7C80")]
	public MovingObjectsConfiguration()
	{
	}
}
[Token(Token = "0x2000038")]
public class HardLinkedItem : Item
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private Vector3 TARGET_IN_HAND_POSITION;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[SerializeField]
	private Vector3 TARGET_IN_HAND_ANGLES;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Transform parent;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC4D280", Offset = "0xC4D280", VA = "0xC4D280", Slot = "13")]
	public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xC4D2CC", Offset = "0xC4D2CC", VA = "0xC4D2CC", Slot = "25")]
	protected override void AttachTo(Transform t)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xC4D330", Offset = "0xC4D330", VA = "0xC4D330", Slot = "27")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D5D8", Offset = "0xA3D5D8")]
	public override void UseOneTime()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xC4D380", Offset = "0xC4D380", VA = "0xC4D380", Slot = "26")]
	protected override void Detach()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xC4D3B8", Offset = "0xC4D3B8", VA = "0xC4D3B8")]
	public HardLinkedItem()
	{
	}
}
[Token(Token = "0x2000039")]
public class MusicalInstrumentItem : Item
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA362C0", Offset = "0xA362C0")]
	private MusicalInstrumentSoundTrigger instrumentSoundTrigger;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x11B7CA0", Offset = "0x11B7CA0", VA = "0x11B7CA0", Slot = "13")]
	public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x11B7CFC", Offset = "0x11B7CFC", VA = "0x11B7CFC", Slot = "14")]
	public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x11B7D44", Offset = "0x11B7D44", VA = "0x11B7D44", Slot = "16")]
	public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x11B7D88", Offset = "0x11B7D88", VA = "0x11B7D88")]
	public MusicalInstrumentItem()
	{
	}
}
[Token(Token = "0x200003A")]
public class MusicalInstrumentSoundTrigger : MonoBehaviour
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool initialised;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected _Code.VR.InputSystem.Hand holdingHand;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x11B7D90", Offset = "0x11B7D90", VA = "0x11B7D90", Slot = "4")]
	public virtual void Init(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x11B7D9C", Offset = "0x11B7D9C", VA = "0x11B7D9C")]
	public void SetHoldingHand(_Code.VR.InputSystem.Hand newHoldingHand)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x11B7DA4", Offset = "0x11B7DA4", VA = "0x11B7DA4")]
	public MusicalInstrumentSoundTrigger()
	{
	}
}
[Token(Token = "0x200003B")]
public class RemoteGrabGizmo : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fingerPoint;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform orbPrefab;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer line;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scaleScale;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] alphas;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] elements;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] homeLerpParams;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] targetLerpParams;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int activeOrbsCount;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Gradient defaultGradient;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Gradient selectedItemLineGradient;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC0AF64", Offset = "0xC0AF64", VA = "0xC0AF64")]
	public void Setup()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC0B360", Offset = "0xC0B360", VA = "0xC0B360")]
	public void ShowProgress(float progress, Pickupable target)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC0B69C", Offset = "0xC0B69C", VA = "0xC0B69C")]
	public void ShowAiming(Vector3 hitPoint)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC0B73C", Offset = "0xC0B73C", VA = "0xC0B73C")]
	private void UpdateOrb(Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC0B6A0", Offset = "0xC0B6A0", VA = "0xC0B6A0")]
	private void UpdateLine(Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC0B328", Offset = "0xC0B328", VA = "0xC0B328")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC0B5FC", Offset = "0xC0B5FC", VA = "0xC0B5FC")]
	private void SetActiveOrbsCount(int count)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC0B84C", Offset = "0xC0B84C", VA = "0xC0B84C")]
	public void SetSelectedLineAlpha()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC0B870", Offset = "0xC0B870", VA = "0xC0B870")]
	public void SetDefaultLineAlpha()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC0B894", Offset = "0xC0B894", VA = "0xC0B894")]
	public RemoteGrabGizmo()
	{
	}
}
[Token(Token = "0x200003C")]
[DisallowMultipleComponent]
public class PlantToWater : Interaction
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform waterableArea;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform wateredFxPosition;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float wateredFxScale;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool needsWatering;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RenderItemContainer renderItemContainer;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int[] leavesColorIndices;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private int leavesRenderItemIndex;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA36374", Offset = "0xA36374")]
	[SerializeField]
	private PlantColorGroup[] colors;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlantSceneSystem plantSceneSystem;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderingSceneSystem renderingSceneSystem;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float dryness;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float wateringSpeedMultiplier;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inSinkArea;

	[Token(Token = "0x400013C")]
	private const float FLOAT_ERROR_MARGIN = 0.001f;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TapWaterFxHandler foundSink;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool initialised;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xD4ABAC", Offset = "0xD4ABAC", VA = "0xD4ABAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xD4ABB0", Offset = "0xD4ABB0", VA = "0xD4ABB0", Slot = "4")]
	public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xD4ACE4", Offset = "0xD4ACE4", VA = "0xD4ACE4")]
	private void HandleSceneLoaded()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD4AE0C", Offset = "0xD4AE0C", VA = "0xD4AE0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD4AEB4", Offset = "0xD4AEB4", VA = "0xD4AEB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD4B108", Offset = "0xD4B108", VA = "0xD4B108", Slot = "5")]
	public override void BreakInteraction()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD4A7D4", Offset = "0xD4A7D4", VA = "0xD4A7D4")]
	public void SetWatered()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD4B2C8", Offset = "0xD4B2C8", VA = "0xD4B2C8")]
	public float GetDryness()
	{
		return default(float);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD4B2D0", Offset = "0xD4B2D0", VA = "0xD4B2D0")]
	public bool NeedsWatering()
	{
		return default(bool);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD4AFB8", Offset = "0xD4AFB8", VA = "0xD4AFB8")]
	public void Water(float waterAmount)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD4B10C", Offset = "0xD4B10C", VA = "0xD4B10C")]
	private void UpdateLeavesColor()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD4AD08", Offset = "0xD4AD08", VA = "0xD4AD08")]
	private void UpdateWateredState()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD4ACC8", Offset = "0xD4ACC8", VA = "0xD4ACC8")]
	private void ResetDryness()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xD4AD74", Offset = "0xD4AD74", VA = "0xD4AD74")]
	private void UpdateColorAfterInitOfRenderingSystem()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xD4B2D8", Offset = "0xD4B2D8", VA = "0xD4B2D8")]
	private void CheckIfProperlyInitialized()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xD4B588", Offset = "0xD4B588", VA = "0xD4B588")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xD4B640", Offset = "0xD4B640", VA = "0xD4B640")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xD4B6D8", Offset = "0xD4B6D8", VA = "0xD4B6D8")]
	public PlantToWater()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
internal struct PlantColorGroup
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color dry;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color watered;
}
[Token(Token = "0x200003E")]
public class WateringVessel : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform waterSurface;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float wateringSpeed;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float wateringSpillSpeed;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem spillingWaterFx;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve cupCurve;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool isFilledOnStart;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform myTransform;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlantToWater closestPlant;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TapWaterFxHandler closestSink;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 topWaterPosition;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly Vector3 topWaterScale;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Vector3 bottomWaterScale;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float waterBottomYCoord;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool plantFound;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isInWaterableArea;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool inSinkArea;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool isFacingDownwards;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool waterSpillingFxIsPlaying;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool waterSurfaceIsHidden;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float waterFillAmount;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC163C0", Offset = "0xC163C0", VA = "0xC163C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC16698", Offset = "0xC16698", VA = "0xC16698")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC16884", Offset = "0xC16884", VA = "0xC16884")]
	private void Slosh()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC16A34", Offset = "0xC16A34", VA = "0xC16A34")]
	private float Clamp(float value, float difference)
	{
		return default(float);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC16464", Offset = "0xC16464", VA = "0xC16464")]
	private void UpdateWaterSurfaceVisibility()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC16508", Offset = "0xC16508", VA = "0xC16508")]
	private void UpdateWaterSurfaceTransform()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC16AE4", Offset = "0xC16AE4", VA = "0xC16AE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC16C5C", Offset = "0xC16C5C", VA = "0xC16C5C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC16638", Offset = "0xC16638", VA = "0xC16638")]
	private void SetWaterFx(bool value)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC16D18", Offset = "0xC16D18", VA = "0xC16D18")]
	public void FillWithWater(float amount)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC16D28", Offset = "0xC16D28", VA = "0xC16D28")]
	public WateringVessel()
	{
	}
}
[Token(Token = "0x200003F")]
public class BulbChangeQuest : Quest, ISimpleActivityQuest
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractiveLamp lamp;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xD0A6AC", Offset = "0xD0A6AC", VA = "0xD0A6AC", Slot = "6")]
	public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD0A828", Offset = "0xD0A828", VA = "0xD0A828", Slot = "7")]
	protected override int GetProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD0A854", Offset = "0xD0A854", VA = "0xD0A854", Slot = "9")]
	public override QuestData GetData()
	{
		return default(QuestData);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD0A960", Offset = "0xD0A960", VA = "0xD0A960", Slot = "10")]
	public void MarkAsFinished()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD0A980", Offset = "0xD0A980", VA = "0xD0A980")]
	public BulbChangeQuest()
	{
	}
}
[Token(Token = "0x2000040")]
public class CockroachQuest : Quest
{
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343C4", Offset = "0xA343C4")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds bounds;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD0FF0C", Offset = "0xD0FF0C", VA = "0xD0FF0C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD10310", Offset = "0xD10310", VA = "0xD10310")]
		internal bool <CollectRefs>b__0(CockroachNest x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CockroachNest[] nests;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private QuestSceneSystem questSys;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float finished;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool roachesOff;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD0FDD0", Offset = "0xD0FDD0", VA = "0xD0FDD0", Slot = "6")]
	public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xD0FF14", Offset = "0xD0FF14", VA = "0xD0FF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xD0FFB0", Offset = "0xD0FFB0", VA = "0xD0FFB0")]
	private void HandleGameSettingsChanged()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xD100D0", Offset = "0xD100D0", VA = "0xD100D0", Slot = "7")]
	protected override int GetProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xD1016C", Offset = "0xD1016C", VA = "0xD1016C", Slot = "9")]
	public override QuestData GetData()
	{
		return default(QuestData);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xD10274", Offset = "0xD10274", VA = "0xD10274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xD10308", Offset = "0xD10308", VA = "0xD10308")]
	public CockroachQuest()
	{
	}
}
[Token(Token = "0x2000041")]
public interface IContainSprites
{
	[Token(Token = "0x600014F")]
	IEnumerable<Sprite> GetSprites();
}
[Token(Token = "0x2000042")]
public class CurvedArrow : MonoBehaviour
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform startTransform;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform endTransform;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36450", Offset = "0xA36450")]
	private bool <ShouldUpdate>k__BackingField;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] points;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform arrowTransform;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float middlePointHeightOffset;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float endingCurveHeightOffset;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA364A0", Offset = "0xA364A0")]
	private float curveMiddlePointPosition;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public readonly int lineSteps;

	[Token(Token = "0x17000029")]
	public bool ShouldUpdate
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xD14A1C", Offset = "0xD14A1C", VA = "0xD14A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D610", Offset = "0xA3D610")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xD14A24", Offset = "0xD14A24", VA = "0xD14A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D620", Offset = "0xA3D620")]
		private set
		{
		}
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xD14A30", Offset = "0xD14A30", VA = "0xD14A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xD14BDC", Offset = "0xD14BDC", VA = "0xD14BDC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D630", Offset = "0xA3D630")]
	public void GenerateCurvePointsForLineRenderer(bool updateArrowTransform = false)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD14E20", Offset = "0xD14E20", VA = "0xD14E20")]
	public void UpdateCurve()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD15018", Offset = "0xD15018", VA = "0xD15018")]
	public void Show(Transform from, Transform to)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD1504C", Offset = "0xD1504C", VA = "0xD1504C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD14FB0", Offset = "0xD14FB0", VA = "0xD14FB0")]
	public void UpdatePointPosition(int index, Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD15078", Offset = "0xD15078", VA = "0xD15078")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD151F0", Offset = "0xD151F0", VA = "0xD151F0")]
	public Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD14D64", Offset = "0xD14D64", VA = "0xD14D64")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD15308", Offset = "0xD15308", VA = "0xD15308")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD15500", Offset = "0xD15500", VA = "0xD15500")]
	public CurvedArrow()
	{
	}
}
[Token(Token = "0x2000043")]
public class CurvedArrowCache : Cache<CurvedArrow>
{
	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD15578", Offset = "0xD15578", VA = "0xD15578")]
	public CurvedArrowCache()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class GrassGenerator : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	private const float MAX_DENSITY = 5f;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float grassHeightVariable;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float grassDiscardRadius;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 center;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int chunksDimensionCount;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA36520", Offset = "0xA36520")]
	private float sampleDensity;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float grassWidth;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float grassHeight;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float grassHeightWariation;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float areaWidth;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BoxCollider[] excludedAreas;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material grassMaterial;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh mesh;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform[] chunkGrassContainers;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int chunksTotalCount;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float chunkWidth;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Vector3[] defaultGrassBladeVertices;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Vector2[] defaultGrassBladeUVs;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly int[] defaultGrassBladeTriangles;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xC4523C", Offset = "0xC4523C", VA = "0xC4523C")]
	private float GetGrassHeight(float x)
	{
		return default(float);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC452D4", Offset = "0xC452D4", VA = "0xC452D4")]
	private void GenerateGrassArea(Vector3 originPosition)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC453BC", Offset = "0xC453BC", VA = "0xC453BC")]
	private Transform GetChunkContainingPosition(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC454A8", Offset = "0xC454A8", VA = "0xC454A8")]
	private GameObject GenerateGrassBlade(float width, float height, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xC45770", Offset = "0xC45770", VA = "0xC45770")]
	private void SetMeshMaterial(Transform container)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xC456AC", Offset = "0xC456AC", VA = "0xC456AC")]
	private Mesh CreateGrassBladeMesh(Vector3[] vertices, Vector2[] uv, int[] triangles)
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xC4584C", Offset = "0xC4584C", VA = "0xC4584C")]
	private void CombineMeshesInto(Transform parent)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xC45AD4", Offset = "0xC45AD4", VA = "0xC45AD4")]
	public GrassGenerator()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xC45D74", Offset = "0xC45D74", VA = "0xC45D74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D668", Offset = "0xA3D668")]
	private void <GenerateGrassArea>b__20_0(Vector3 samplePosition)
	{
	}
}
[Token(Token = "0x2000045")]
[DisallowMultipleComponent]
public class RenderItemContainer : MonoBehaviour
{
	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderItem[] renderItems;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderingSceneSystem renderingSystem;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xC0BA10", Offset = "0xC0BA10", VA = "0xC0BA10")]
	public void SetRenderingSystem(RenderingSceneSystem renderingSystem)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xC0BA18", Offset = "0xC0BA18", VA = "0xC0BA18")]
	public void InitialiseVariantData()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xC0BA1C", Offset = "0xC0BA1C", VA = "0xC0BA1C")]
	public void ApplyColors(VariantColorSetup.ItemVariant variant, bool editor = false)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xC0BBE8", Offset = "0xC0BBE8", VA = "0xC0BBE8")]
	private void SetDefaultColors(RenderItem renderItem)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xC0BC74", Offset = "0xC0BC74", VA = "0xC0BC74")]
	private void SetDefaultColorAtlasTextureBlendValues(RenderItem renderItem)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xC0BCE0", Offset = "0xC0BCE0", VA = "0xC0BCE0")]
	public RenderItemContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class RenderItem : IEquatable<RenderItem>
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool isColorChangeAllowed;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	public bool isActive;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform group;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	public short materialsCount;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Renderer renderer;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Color[] colors;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3663C", Offset = "0xA3663C")]
	public float[] colorAtlasTextureBlends;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public Vector4[] lightPositions;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC0B89C", Offset = "0xC0B89C", VA = "0xC0B89C")]
	public RenderItem(Renderer renderer)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC0B8D0", Offset = "0xC0B8D0", VA = "0xC0B8D0")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xC0B8EC", Offset = "0xC0B8EC", VA = "0xC0B8EC", Slot = "4")]
	public bool Equals(RenderItem other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC0B9AC", Offset = "0xC0B9AC", VA = "0xC0B9AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000047")]
[DisallowMultipleComponent]
public class RenderItemStationaryData : MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] lights;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3668C", Offset = "0xA3668C")]
	public float[] lightOffset;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xC0BCE8", Offset = "0xC0BCE8", VA = "0xC0BCE8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D678", Offset = "0xA3D678")]
	public void GenerateLightPositionSlots()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC0BCEC", Offset = "0xC0BCEC", VA = "0xC0BCEC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3D6B0", Offset = "0xA3D6B0")]
	public void GenerateLightOffsetSlots()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xC0BCF0", Offset = "0xC0BCF0", VA = "0xC0BCF0")]
	public RenderItemStationaryData()
	{
	}
}
[Token(Token = "0x2000048")]
public class RenderItemSubContainer : MonoBehaviour
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] renderItemRenderers;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xC0BCF8", Offset = "0xC0BCF8", VA = "0xC0BCF8")]
	public RenderItemSubContainer()
	{
	}
}
[Token(Token = "0x2000049")]
public class Wobble : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xC16DE0", Offset = "0xC16DE0", VA = "0xC16DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xC16E38", Offset = "0xC16E38", VA = "0xC16E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xC17160", Offset = "0xC17160", VA = "0xC17160")]
	public Wobble()
	{
	}
}
[Token(Token = "0x200004A")]
public class StackingPhysicalObjectsHandler : MonoBehaviour
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider collider;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xC0E668", Offset = "0xC0E668", VA = "0xC0E668")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xC0E758", Offset = "0xC0E758", VA = "0xC0E758")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xC0E7DC", Offset = "0xC0E7DC", VA = "0xC0E7DC")]
	public StackingPhysicalObjectsHandler()
	{
	}
}
[Token(Token = "0x200004B")]
public class CleanedDirtFx : TriggeredFx
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particle;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform thisTransform;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD0E714", Offset = "0xD0E714", VA = "0xD0E714")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD0E73C", Offset = "0xD0E73C", VA = "0xD0E73C", Slot = "4")]
	public override void Display()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD0E78C", Offset = "0xD0E78C", VA = "0xD0E78C", Slot = "5")]
	public override void UpdateEffect(float distance)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD0E790", Offset = "0xD0E790", VA = "0xD0E790", Slot = "6")]
	public override void Hide()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD0E7AC", Offset = "0xD0E7AC", VA = "0xD0E7AC", Slot = "7")]
	public override void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD0E7B0", Offset = "0xD0E7B0", VA = "0xD0E7B0", Slot = "8")]
	public override void PutInSocket(Transform socket)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD0E890", Offset = "0xD0E890", VA = "0xD0E890")]
	public CleanedDirtFx()
	{
	}
}
[Token(Token = "0x200004C")]
public class ConfettiFx : TriggeredFx
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform thisTransform;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD13398", Offset = "0xD13398", VA = "0xD13398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD133C0", Offset = "0xD133C0", VA = "0xD133C0", Slot = "4")]
	public override void Display()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD13438", Offset = "0xD13438", VA = "0xD13438", Slot = "5")]
	public override void UpdateEffect(float distance)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xD1343C", Offset = "0xD1343C", VA = "0xD1343C", Slot = "6")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xD134B4", Offset = "0xD134B4", VA = "0xD134B4")]
	public bool CanPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xD1353C", Offset = "0xD1353C", VA = "0xD1353C", Slot = "7")]
	public override void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xD13540", Offset = "0xD13540", VA = "0xD13540", Slot = "8")]
	public override void PutInSocket(Transform socket)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xD13620", Offset = "0xD13620", VA = "0xD13620")]
	public ConfettiFx()
	{
	}
}
[Token(Token = "0x200004D")]
public class GameSettings
{
	[Serializable]
	[Token(Token = "0x20002A5")]
	public enum PlayAreaMode
	{
		[Token(Token = "0x40010DF")]
		Room,
		[Token(Token = "0x40010E0")]
		Standing,
		[Token(Token = "0x40010E1")]
		SingleHandLocomotion,
		[Token(Token = "0x40010E2")]
		SmoothLocomotion
	}

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerHeight;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool leftHanded;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ambientVolume;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float soundsVolume;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isVibrationsEnabled;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isVignetteEnabled;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool seatedMode;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int elevation;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool roachesOff;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PlayAreaMode playAreaMode;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MovementComponent.SnapAngle snapAngle;

	[Token(Token = "0x1700002A")]
	[JsonIgnore]
	public bool IsStandingModeEnabled
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xC44F78", Offset = "0xC44F78", VA = "0xC44F78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002B")]
	[JsonIgnore]
	public bool IsLocomotionEnabled
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xC44F88", Offset = "0xC44F88", VA = "0xC44F88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xC44F28", Offset = "0xC44F28", VA = "0xC44F28")]
	public GameSettings()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xC44F9C", Offset = "0xC44F9C", VA = "0xC44F9C")]
	public string GetCurrentPlayAreaModeLocKey()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xC4506C", Offset = "0xC4506C", VA = "0xC4506C")]
	public string GetCurrentSnapAngleTranslation()
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xC451C8", Offset = "0xC451C8", VA = "0xC451C8")]
	public string GetCurrentPlayAreaModeDescriptionLocKey()
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xC45004", Offset = "0xC45004", VA = "0xC45004")]
	public string PlayAreaModeToLocKey(PlayAreaMode mode)
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public class HouseState
{
	[Token(Token = "0x20002A6")]
	public enum Status
	{
		[Token(Token = "0x40010E4")]
		NeverOwned,
		[Token(Token = "0x40010E5")]
		OwnedFirstTime,
		[Token(Token = "0x40010E6")]
		OwnedAgain,
		[Token(Token = "0x40010E7")]
		Sold
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int sellPrice;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bid;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentItemsValue;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Status status;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC4D5B4", Offset = "0xC4D5B4", VA = "0xC4D5B4")]
	public HouseState()
	{
	}
}
[Token(Token = "0x200004F")]
public static class HQ
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerProfile PlayerProfile;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameSettings GameSettings;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameContentMapper GameContentMapper;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly JsonSerializerSettings SerializerSettings;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string PlayerProfilePath;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string GameSettingsPath;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static VR_SDK vrSdk;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static VRDevice vrDevice;

	[Token(Token = "0x40001B1")]
	private const VRDevice DEFAULT_OCULUS_VR_DEVICE = VRDevice.OculusRift;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static PlayerReferenceHandler playerReferences;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static ItemSceneSystem itemsSys;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static CockroachSceneSystem cockroachSys;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static WallsSceneSystem wallsSys;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static TrashSceneSystem trashSys;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static DirtSceneSystem dirtSys;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static QuestSceneSystem questSys;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static InstallationSceneSystem installationSys;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static RenderingSceneSystem renderingSys;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static MasterSystem masterSystem;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static DartSceneSystem dartSys;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static PlantSceneSystem plantSys;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static BasicTutorialSceneSystem basicTutorialSystem;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static HashSet<TutorialSubSystem.TutorialType> finishedTutorials;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static HashSet<TutorialSubSystem.TutorialType> FinishedTutorials;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string startSceneName;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static bool playerProfileLoaded;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36724", Offset = "0xA36724")]
	private static SceneUnlocksInfo <SceneUnlocksInfo>k__BackingField;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static bool AuctionRunning;

	[Token(Token = "0x1700002C")]
	public static SceneUnlocksInfo SceneUnlocksInfo
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC4757C", Offset = "0xC4757C", VA = "0xC4757C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D788", Offset = "0xA3D788")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xC475E4", Offset = "0xC475E4", VA = "0xC475E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D798", Offset = "0xA3D798")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool PlayerProfileLoaded
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xC47650", Offset = "0xC47650", VA = "0xC47650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static int PlayerMoney
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xC476B8", Offset = "0xC476B8", VA = "0xC476B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xC47730", Offset = "0xC47730", VA = "0xC47730")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public static List<int> AcquiredSkills
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xC477C8", Offset = "0xC477C8", VA = "0xC477C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xC47840", Offset = "0xC47840", VA = "0xC47840")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public static int SkillPointsAvailable
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xC478BC", Offset = "0xC478BC", VA = "0xC478BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC47934", Offset = "0xC47934", VA = "0xC47934")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public static List<string> ItemsNotSeenInShop
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xC479B0", Offset = "0xC479B0", VA = "0xC479B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public static VR_SDK VRSdk
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xC47A28", Offset = "0xC47A28", VA = "0xC47A28")]
		get
		{
			return default(VR_SDK);
		}
	}

	[Token(Token = "0x17000033")]
	public static VRDevice VRDevice
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xC47A90", Offset = "0xC47A90", VA = "0xC47A90")]
		get
		{
			return default(VRDevice);
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action PlayerMoneyChangedEvent
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xC46C1C", Offset = "0xC46C1C", VA = "0xC46C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D6E8", Offset = "0xA3D6E8")]
		add
		{
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xC46D0C", Offset = "0xC46D0C", VA = "0xC46D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D6F8", Offset = "0xA3D6F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action GameSettingsChangedEvent
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xC46DFC", Offset = "0xC46DFC", VA = "0xC46DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D708", Offset = "0xA3D708")]
		add
		{
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xC46EEC", Offset = "0xC46EEC", VA = "0xC46EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D718", Offset = "0xA3D718")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action AfterSceneLoadedEvent
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xC46FDC", Offset = "0xC46FDC", VA = "0xC46FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D728", Offset = "0xA3D728")]
		add
		{
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xC470CC", Offset = "0xC470CC", VA = "0xC470CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D738", Offset = "0xA3D738")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action SceneLoadStartEvent
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xC471BC", Offset = "0xC471BC", VA = "0xC471BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D748", Offset = "0xA3D748")]
		add
		{
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xC472AC", Offset = "0xC472AC", VA = "0xC472AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D758", Offset = "0xA3D758")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action OnPlayerProfileCreated
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xC4739C", Offset = "0xC4739C", VA = "0xC4739C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D768", Offset = "0xA3D768")]
		add
		{
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xC4748C", Offset = "0xC4748C", VA = "0xC4748C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D778", Offset = "0xA3D778")]
		remove
		{
		}
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC47AF8", Offset = "0xC47AF8", VA = "0xC47AF8")]
	public static void AddItemNotSeenInShop(Item item)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC47C80", Offset = "0xC47C80", VA = "0xC47C80")]
	public static void RemoveItemNotSeenInShop(Item item)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC47DE4", Offset = "0xC47DE4", VA = "0xC47DE4")]
	public static void AssignSceneSystems(SceneSystems sceneSystems)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC47EE0", Offset = "0xC47EE0", VA = "0xC47EE0")]
	public static void AssignMasterSystem(MasterSystem _masterSystem)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC47F4C", Offset = "0xC47F4C", VA = "0xC47F4C")]
	public static void AssignPlayerReferences(PlayerReferenceHandler playerReference)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC47FB8", Offset = "0xC47FB8", VA = "0xC47FB8")]
	static HQ()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC48488", Offset = "0xC48488", VA = "0xC48488")]
	public static void AssignVRData()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC484F8", Offset = "0xC484F8", VA = "0xC484F8")]
	private static void AssignPcData()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC482A4", Offset = "0xC482A4", VA = "0xC482A4")]
	private static void SubscribeToHmdEvents()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC487B8", Offset = "0xC487B8", VA = "0xC487B8")]
	private static void UnsubscribeFromEvents()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC489FC", Offset = "0xC489FC", VA = "0xC489FC")]
	private static void PauseGame()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC48B08", Offset = "0xC48B08", VA = "0xC48B08")]
	private static void UnpauseGame()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC48C38", Offset = "0xC48C38", VA = "0xC48C38")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC48CA8", Offset = "0xC48CA8", VA = "0xC48CA8")]
	public static void SaveTutorialAsFinished(TutorialSubSystem.TutorialType tutorialType)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC48D60", Offset = "0xC48D60", VA = "0xC48D60")]
	public static HashSet<ToolBelt.ToolType> GetUnlockedTools()
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC48DD8", Offset = "0xC48DD8", VA = "0xC48DD8")]
	public static void AddUnlockedTool(ToolBelt.ToolType tool)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC480F4", Offset = "0xC480F4", VA = "0xC480F4")]
	private static JsonSerializerSettings MakeDefaultSerializerSettings()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC48EBC", Offset = "0xC48EBC", VA = "0xC48EBC")]
	public static void LoadOrCreatePlayerProfile()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xC49590", Offset = "0xC49590", VA = "0xC49590")]
	public static void LoadGameContentMapper(GameContentMapper mapper)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC495FC", Offset = "0xC495FC", VA = "0xC495FC")]
	public static void UpdateCurrentHouseValue()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC496D0", Offset = "0xC496D0", VA = "0xC496D0")]
	public static void MarkPlayerProfileAsLoaded()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC4973C", Offset = "0xC4973C", VA = "0xC4973C")]
	public static void AppendVisitedJobs(JobAsset jobAsset)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC490C8", Offset = "0xC490C8", VA = "0xC490C8")]
	public static void CreatePlayerProfile()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC494DC", Offset = "0xC494DC", VA = "0xC494DC")]
	public static void AssignDataFromPlayerProgress()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC49824", Offset = "0xC49824", VA = "0xC49824")]
	public static void SavePlayerProgress()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC49960", Offset = "0xC49960", VA = "0xC49960")]
	public static void LoadOrCreateGameSettings()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC49AF8", Offset = "0xC49AF8", VA = "0xC49AF8")]
	public static void ApplyGameSettingsChanges()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC49BD4", Offset = "0xC49BD4", VA = "0xC49BD4")]
	public static void StartGameOnCurrentScene()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC4A0B8", Offset = "0xC4A0B8", VA = "0xC4A0B8")]
	public static void LogStartOnScene()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xC4A418", Offset = "0xC4A418", VA = "0xC4A418")]
	public static void GotoJob(JobAsset job)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xC4A56C", Offset = "0xC4A56C", VA = "0xC4A56C")]
	public static void GotoHouse(HouseAsset house)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC4A60C", Offset = "0xC4A60C", VA = "0xC4A60C")]
	public static void GotoOffice(bool performSaveOnCurrentScene = true)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC4A69C", Offset = "0xC4A69C", VA = "0xC4A69C")]
	public static void GotoMainMenu()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC4A4B8", Offset = "0xC4A4B8", VA = "0xC4A4B8")]
	private static void GotoScene(string sceneName, bool performSave = true)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC4A724", Offset = "0xC4A724", VA = "0xC4A724")]
	public static void SaveScene()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC4AE08", Offset = "0xC4AE08", VA = "0xC4AE08")]
	public static void LoadSceneData()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC4B85C", Offset = "0xC4B85C", VA = "0xC4B85C")]
	public static void ResetScene()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC4B910", Offset = "0xC4B910", VA = "0xC4B910")]
	private static bool TryDeleteSceneSaveFile(string sceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC4B9A0", Offset = "0xC4B9A0", VA = "0xC4B9A0")]
	public static void ResetGame()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC492B0", Offset = "0xC492B0", VA = "0xC492B0")]
	private static void LockItems()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC4B598", Offset = "0xC4B598", VA = "0xC4B598")]
	private static void UnlockItems()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC4BA08", Offset = "0xC4BA08", VA = "0xC4BA08")]
	public static void DeletePlayerData()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC4BB48", Offset = "0xC4BB48", VA = "0xC4BB48")]
	private static void DeletePlayerAndSceneSystemsDataExceptOfTutorialData()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC4BAC0", Offset = "0xC4BAC0", VA = "0xC4BAC0")]
	public static void DeleteSceneSystemsData()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC4AD84", Offset = "0xC4AD84", VA = "0xC4AD84")]
	private static string GetSceneSavePath(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC4AD30", Offset = "0xC4AD30", VA = "0xC4AD30")]
	private static string GetSavingFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC4BD1C", Offset = "0xC4BD1C", VA = "0xC4BD1C")]
	public static void SellHouse(HouseAsset houseAsset)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC4BED0", Offset = "0xC4BED0", VA = "0xC4BED0")]
	public static int GetHouseValue(HouseAsset house, HouseState houseState)
	{
		return default(int);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC4BF04", Offset = "0xC4BF04", VA = "0xC4BF04")]
	public static void SetHouseBidValue(HouseState houseState, int value)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC4BF8C", Offset = "0xC4BF8C", VA = "0xC4BF8C")]
	public static void BuyHouse(HouseAsset houseAsset)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xC4C05C", Offset = "0xC4C05C", VA = "0xC4C05C")]
	public static void SaveJobProgress(JobAsset job)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xC4C12C", Offset = "0xC4C12C", VA = "0xC4C12C")]
	public static void FinishStoryJob(JobAsset job)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xC4C420", Offset = "0xC4C420", VA = "0xC4C420")]
	public static void FinishFullyCompletedJob()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xC4C4EC", Offset = "0xC4C4EC", VA = "0xC4C4EC")]
	public static void FinishPartiallyCompletedJob(JobAsset job)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xC4C694", Offset = "0xC4C694", VA = "0xC4C694")]
	public static void DeleteJobSceneSave(JobAsset job)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xC4C730", Offset = "0xC4C730", VA = "0xC4C730")]
	public static void DeleteJobSceneSaveAndProgress(JobAsset job)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xC4C8B0", Offset = "0xC4C8B0", VA = "0xC4C8B0")]
	public static bool PlayerCanAfford(Item item)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xC4C934", Offset = "0xC4C934", VA = "0xC4C934")]
	public static void SaveAndQuitGame()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xC4BE70", Offset = "0xC4BE70", VA = "0xC4BE70")]
	private static void UnlockSellHouseAchievements()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC4CA24", Offset = "0xC4CA24", VA = "0xC4CA24")]
	private static void CheckSuperSellerAchievement()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC4C998", Offset = "0xC4C998", VA = "0xC4C998")]
	private static void CheckFirstFlipAchievement()
	{
	}
}
[Token(Token = "0x2000050")]
public class SceneUnlocksInfo
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool newJobAvailable;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool lastJobExists;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JobAsset lastJob;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xC0BD38", Offset = "0xC0BD38", VA = "0xC0BD38")]
	public void Set(bool noMoreJobs, JobAsset job)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC0BD54", Offset = "0xC0BD54", VA = "0xC0BD54")]
	public void Reset()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC0BD5C", Offset = "0xC0BD5C", VA = "0xC0BD5C")]
	public SceneUnlocksInfo()
	{
	}
}
[Token(Token = "0x2000051")]
public enum SceneType
{
	[Token(Token = "0x40001CE")]
	MainMenu,
	[Token(Token = "0x40001CF")]
	Office,
	[Token(Token = "0x40001D0")]
	Job,
	[Token(Token = "0x40001D1")]
	House
}
[Token(Token = "0x2000052")]
public interface IReadableQuest<T>
{
	[Token(Token = "0x60001E8")]
	T GetData();
}
[Token(Token = "0x2000053")]
public interface ISavableSystem<T>
{
	[Token(Token = "0x60001E9")]
	T GetSaveData();

	[Token(Token = "0x60001EA")]
	void LoadSaveData(T saveData);
}
[Token(Token = "0x2000054")]
public interface ISceneSystemInitialiseLast
{
	[Token(Token = "0x60001EB")]
	void InitialiseLast();
}
[Token(Token = "0x2000055")]
public class PlayerProfile
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int money;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int skillPointsAvailable;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int housesOwned;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SceneType activeSceneType;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int activeHouseIndex;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int activeJobIndex;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentStoryJobIndex;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool allStoryJobsDone;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool gameRewardCollected;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool tabletLessonLearned;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool basicTutorialComplete;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool extendedBasicTutorialComplete;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int currentLoadingScreenHint;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int currentLoadingScreenFunLine;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> jobsVisited;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<ToolBelt.ToolType> unlockedTools;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> acquiredSkills;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HashSet<NarratorLine> playedNarratorLines;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<TutorialSubSystem.TutorialType> finishedTutorials;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<HouseState> houseProgressList;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<JobState> jobStates;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> newItemsSeenInShop;

	[Token(Token = "0x17000034")]
	[JsonIgnore]
	public bool BasicTutorialFullyComplete
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xD4BA60", Offset = "0xD4BA60", VA = "0xD4BA60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD4BA80", Offset = "0xD4BA80", VA = "0xD4BA80")]
	public (bool, HouseState) GetHouseProgress(int houseID)
	{
		return default((bool, HouseState));
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD4BBFC", Offset = "0xD4BBFC", VA = "0xD4BBFC")]
	public bool IsHouseOwned(HouseAsset houseAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD4BC48", Offset = "0xD4BC48", VA = "0xD4BC48")]
	public bool WasJobVisited(JobAsset jobAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD4BCB8", Offset = "0xD4BCB8", VA = "0xD4BCB8")]
	public bool CanPlayerAfford(HouseAsset houseAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD4BCE0", Offset = "0xD4BCE0", VA = "0xD4BCE0")]
	public HouseState GetOrMakeHouseProgress(HouseAsset houseAsset)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD4BDA0", Offset = "0xD4BDA0", VA = "0xD4BDA0")]
	public void UpdateHouseItemsValue(int houseId, int value)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD4BE88", Offset = "0xD4BE88", VA = "0xD4BE88")]
	public void CreateNewJobStates()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD4BF98", Offset = "0xD4BF98", VA = "0xD4BF98")]
	public PlayerProfile()
	{
	}
}
[Token(Token = "0x2000056")]
public static class Translator
{
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xC13BFC", Offset = "0xC13BFC", VA = "0xC13BFC")]
	public static string Translate(this string key)
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xC13CC4", Offset = "0xC13CC4", VA = "0xC13CC4")]
	public static string ReplaceDuplicatedSlashes(this string line)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC13D84", Offset = "0xC13D84", VA = "0xC13D84")]
	public static string ToNiceTranslationKey(this string streeng)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public class DartSceneSystem : MonoBehaviour, ISystem, ISavableSystem<DartSaveData>
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BoardItem> dartBoardItems;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int highScore;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36744", Offset = "0xA36744")]
	private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

	[Token(Token = "0x17000035")]
	public SceneSystemsInitialiser SceneSystemsInitialiser
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xC40558", Offset = "0xC40558", VA = "0xC40558", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D7D8", Offset = "0xA3D7D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xC40560", Offset = "0xC40560", VA = "0xC40560", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D7E8", Offset = "0xA3D7E8")]
		set
		{
		}
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xC40568", Offset = "0xC40568", VA = "0xC40568", Slot = "6")]
	public void Initialise()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC4056C", Offset = "0xC4056C", VA = "0xC4056C")]
	public void NotifyAboutStartingMinigame(BoardItem boardItem)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC4066C", Offset = "0xC4066C", VA = "0xC4066C")]
	public void NotifyAboutSceneChange()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC4070C", Offset = "0xC4070C", VA = "0xC4070C")]
	public bool NotifyAboutEndingMinigame(int minigameScore)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC4072C", Offset = "0xC4072C", VA = "0xC4072C")]
	public void AddBoardItem(BoardItem boardItem)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC40794", Offset = "0xC40794", VA = "0xC40794")]
	public void RemoveBoardItem(BoardItem boardItem)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC407FC", Offset = "0xC407FC", VA = "0xC407FC")]
	public void CollectRefs()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC40880", Offset = "0xC40880", VA = "0xC40880", Slot = "7")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xC40888", Offset = "0xC40888", VA = "0xC40888", Slot = "8")]
	public DartSaveData GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xC408FC", Offset = "0xC408FC", VA = "0xC408FC", Slot = "9")]
	public void LoadSaveData(DartSaveData saveData)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC4091C", Offset = "0xC4091C", VA = "0xC4091C")]
	public DartSceneSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class DartSaveData
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int highScore;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC40550", Offset = "0xC40550", VA = "0xC40550")]
	public DartSaveData()
	{
	}
}
[Token(Token = "0x2000059")]
public class QuestsFinishedCondition : NarratorLineCondition
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Quest[] questPrerequisites;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xD4D3C8", Offset = "0xD4D3C8", VA = "0xD4D3C8", Slot = "5")]
	protected override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xD4D468", Offset = "0xD4D468", VA = "0xD4D468")]
	public QuestsFinishedCondition()
	{
	}
}
[Token(Token = "0x200005A")]
public class PlantSceneSystem : MonoBehaviour, ISystem, IRequireSceneSystems, ISavableSystem<List<PlantSaveData>>
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343D4", Offset = "0xA343D4")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantToWater plant;

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD4A3A4", Offset = "0xD4A3A4", VA = "0xD4A3A4")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD4A8B8", Offset = "0xD4A8B8", VA = "0xD4A8B8")]
		internal bool <GetEntry>b__0(ScenePlantToWaterEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343E4", Offset = "0xA343E4")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantSaveData plantSave;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD4A7CC", Offset = "0xD4A7CC", VA = "0xD4A7CC")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD4A944", Offset = "0xD4A944", VA = "0xD4A944")]
		internal bool <LoadPlant>b__0(ScenePlantToWaterEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343F4", Offset = "0xA343F4")]
	private sealed class <DelayedDisablePlantFx>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantSceneSystem <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xD4AB38", Offset = "0xD4AB38", VA = "0xD4AB38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xD4ABA4", Offset = "0xD4ABA4", VA = "0xD4ABA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD4A854", Offset = "0xD4A854", VA = "0xD4A854")]
		[DebuggerHidden]
		public <DelayedDisablePlantFx>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD4A9FC", Offset = "0xD4A9FC", VA = "0xD4A9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD4AA00", Offset = "0xD4AA00", VA = "0xD4AA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xD4AB40", Offset = "0xD4AB40", VA = "0xD4AB40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlantToWater> plantsToWater;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ScenePlantToWaterEntry> plantEntries;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FxSceneSystem fxSystem;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private QuestSceneSystem questSystem;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CleanedDirtFx wateredPlantFx;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine delayedDisablePlantFxCoroutine;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367B4", Offset = "0xA367B4")]
	private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

	[Token(Token = "0x17000036")]
	public SceneSystemsInitialiser SceneSystemsInitialiser
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xD4A1A4", Offset = "0xD4A1A4", VA = "0xD4A1A4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D7F8", Offset = "0xA3D7F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xD4A1AC", Offset = "0xD4A1AC", VA = "0xD4A1AC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D808", Offset = "0xA3D808")]
		set
		{
		}
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD4A1B4", Offset = "0xD4A1B4", VA = "0xD4A1B4", Slot = "6")]
	public void Initialise()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xD4A1D4", Offset = "0xD4A1D4", VA = "0xD4A1D4")]
	public void CollectRefs()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xD4A1D8", Offset = "0xD4A1D8", VA = "0xD4A1D8")]
	public void NotifyAboutWateredPlant(PlantToWater plant)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD4A2E0", Offset = "0xD4A2E0", VA = "0xD4A2E0")]
	private ScenePlantToWaterEntry GetEntry(PlantToWater plant)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD4A3AC", Offset = "0xD4A3AC", VA = "0xD4A3AC", Slot = "9")]
	public List<PlantSaveData> GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD4A4F8", Offset = "0xD4A4F8", VA = "0xD4A4F8")]
	private static PlantSaveData SavePlant(ScenePlantToWaterEntry plantEntry)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD4A580", Offset = "0xD4A580", VA = "0xD4A580", Slot = "10")]
	public void LoadSaveData(List<PlantSaveData> saveData)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD4A684", Offset = "0xD4A684", VA = "0xD4A684")]
	private ScenePlantToWaterEntry LoadPlant(PlantSaveData plantSave)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD4A7E0", Offset = "0xD4A7E0", VA = "0xD4A7E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D818", Offset = "0xA3D818")]
	private IEnumerator DelayedDisablePlantFx()
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD4A880", Offset = "0xD4A880", VA = "0xD4A880", Slot = "7")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD4A294", Offset = "0xD4A294", VA = "0xD4A294")]
	private void RestartDelayedDisablePlantFxCoroutine()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD4A888", Offset = "0xD4A888", VA = "0xD4A888", Slot = "8")]
	public void AssignRequiredObject(SceneSystems sceneSystems)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xD4A8B0", Offset = "0xD4A8B0", VA = "0xD4A8B0")]
	public PlantSceneSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class ScenePlantToWaterEntry
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlantToWater plant;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string instanceID;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xC0BD30", Offset = "0xC0BD30", VA = "0xC0BD30")]
	public ScenePlantToWaterEntry()
	{
	}
}
[Serializable]
[Token(Token = "0x200005C")]
public class PlantSaveData
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string instanceID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool needsWatering;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD4A19C", Offset = "0xD4A19C", VA = "0xD4A19C")]
	public PlantSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class QuestsSaveData
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<int> finishedQuestsIndexes;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC0AEF4", Offset = "0xC0AEF4", VA = "0xC0AEF4")]
	public QuestsSaveData()
	{
	}
}
[Token(Token = "0x200005E")]
public class FishHouseAchievementUnlocker : AchievementUnLocker
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DirtSceneSystem dirtSceneSystem;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AchievementSceneSystem achievementSceneSystem;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC44CD8", Offset = "0xC44CD8", VA = "0xC44CD8", Slot = "4")]
	public override void Initialise(AchievementSceneSystem achievementSystem, DirtSceneSystem dirtSystem)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC44D7C", Offset = "0xC44D7C", VA = "0xC44D7C")]
	private void HandleAllDirtsCleaned()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC44DA0", Offset = "0xC44DA0", VA = "0xC44DA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xC44E48", Offset = "0xC44E48", VA = "0xC44E48")]
	public FishHouseAchievementUnlocker()
	{
	}
}
[Token(Token = "0x200005F")]
public class JohnyTheDog : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Item item;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AchievementSystem achievementSystem;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD9A558", Offset = "0xD9A558", VA = "0xD9A558")]
	private void Start()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD9A628", Offset = "0xD9A628", VA = "0xD9A628")]
	private void HandlePickUp(Item item)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD9A640", Offset = "0xD9A640", VA = "0xD9A640")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD9A6D8", Offset = "0xD9A6D8", VA = "0xD9A6D8")]
	public JohnyTheDog()
	{
	}
}
[Token(Token = "0x2000060")]
public class WallSpawner : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wall;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material simplestMaterial;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material oldMaterial;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material optimizedMaterial;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputSystem inputSystem;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int wallCount;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer wallRenderer;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int selectedMaterialIndex;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material selectedMaterial;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Text text;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> walls;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Renderer> instanceRenderers;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC15A04", Offset = "0xC15A04", VA = "0xC15A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC15ED4", Offset = "0xC15ED4", VA = "0xC15ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC160DC", Offset = "0xC160DC", VA = "0xC160DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC15B70", Offset = "0xC15B70", VA = "0xC15B70")]
	private void InitializeVariables()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC15C88", Offset = "0xC15C88", VA = "0xC15C88")]
	private void GenerateWallsAndSetShaders()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC1620C", Offset = "0xC1620C", VA = "0xC1620C")]
	private void DestroyWalls()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC16344", Offset = "0xC16344", VA = "0xC16344")]
	private void ChangeMaterialAndSetText(GeneralArgs args)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC16348", Offset = "0xC16348", VA = "0xC16348")]
	private void AddWall(GeneralArgs args)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC16378", Offset = "0xC16378", VA = "0xC16378")]
	private void RemoveWall(GeneralArgs args)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC15F3C", Offset = "0xC15F3C", VA = "0xC15F3C")]
	private void ChangeMaterialAndUpdateText()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC163B0", Offset = "0xC163B0", VA = "0xC163B0")]
	public WallSpawner()
	{
	}
}
[Token(Token = "0x2000061")]
public class SellerTool : Tool
{
	[Token(Token = "0x4000209")]
	private const int RANGE = 5;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Transform raycastOrigin;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private SpriteRenderer renderer;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private TextMeshPro priceText;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private AudioSource audio;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Color cannotBeSoldColor;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private LayerMask raycastLayers;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private ItemSceneSystem itemSystem;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private NarratorSubsystem narratorSystem;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 rayScale;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Item item;

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC0C1A0", Offset = "0xC0C1A0", VA = "0xC0C1A0", Slot = "13")]
	public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, CollisionDetectionConfiguration config)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC0C3C0", Offset = "0xC0C3C0", VA = "0xC0C3C0", Slot = "14")]
	public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC0C3FC", Offset = "0xC0C3FC", VA = "0xC0C3FC", Slot = "16")]
	public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC0C4EC", Offset = "0xC0C4EC", VA = "0xC0C4EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC0C448", Offset = "0xC0C448", VA = "0xC0C448")]
	private void ClearDisplayData()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC0C7C8", Offset = "0xC0C7C8", VA = "0xC0C7C8", Slot = "29")]
	public override void Use()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC0C7CC", Offset = "0xC0C7CC", VA = "0xC0C7CC", Slot = "27")]
	public override void UseOneTime()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xC0C8D0", Offset = "0xC0C8D0", VA = "0xC0C8D0")]
	public SellerTool()
	{
	}
}
[Token(Token = "0x2000062")]
public class CreditsOverlay : MonoBehaviour, IRequireVRObjects, IRequirePlayerSubsystems
{
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34404", Offset = "0xA34404")]
	private sealed class <FadeInCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsOverlay <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xD145E8", Offset = "0xD145E8", VA = "0xD145E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xD14654", Offset = "0xD14654", VA = "0xD14654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD14288", Offset = "0xD14288", VA = "0xD14288")]
		[DebuggerHidden]
		public <FadeInCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD14508", Offset = "0xD14508", VA = "0xD14508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xD1450C", Offset = "0xD1450C", VA = "0xD1450C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xD145F0", Offset = "0xD145F0", VA = "0xD145F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34414", Offset = "0xA34414")]
	private sealed class <FadeInOverlayCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsOverlay <>4__this;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xD1471C", Offset = "0xD1471C", VA = "0xD1471C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xD14788", Offset = "0xD14788", VA = "0xD14788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xD14328", Offset = "0xD14328", VA = "0xD14328")]
		[DebuggerHidden]
		public <FadeInOverlayCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xD1465C", Offset = "0xD1465C", VA = "0xD1465C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xD14660", Offset = "0xD14660", VA = "0xD14660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xD14724", Offset = "0xD14724", VA = "0xD14724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34424", Offset = "0xA34424")]
	private sealed class <FadeOutCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsOverlay <>4__this;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xD14868", Offset = "0xD14868", VA = "0xD14868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xD148D4", Offset = "0xD148D4", VA = "0xD148D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xD14354", Offset = "0xD14354", VA = "0xD14354")]
		[DebuggerHidden]
		public <FadeOutCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD14790", Offset = "0xD14790", VA = "0xD14790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD14794", Offset = "0xD14794", VA = "0xD14794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xD14870", Offset = "0xD14870", VA = "0xD14870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34434", Offset = "0xA34434")]
	private sealed class <FadeOutOverlayCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsOverlay <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xD149A8", Offset = "0xD149A8", VA = "0xD149A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xD14A14", Offset = "0xD14A14", VA = "0xD14A14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xD143F4", Offset = "0xD143F4", VA = "0xD143F4")]
		[DebuggerHidden]
		public <FadeOutOverlayCoroutine>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xD148DC", Offset = "0xD148DC", VA = "0xD148DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xD148E0", Offset = "0xD148E0", VA = "0xD148E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD149B0", Offset = "0xD149B0", VA = "0xD149B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject popup;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform popupTransform;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject overlay;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform overlayTransform;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Renderer overlayRenderer;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer backgroundRenderer;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer[] contentRenderers;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRObjects vrObjects;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color blackOverlayColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine fadeInCoroutine;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine fadeOutCoroutine;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int colorId;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isActive;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly WaitForSeconds waitShowTextDelay;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material material;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Subsystems playerSubsystems;

	[Token(Token = "0x17000037")]
	public bool IsActive
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xD13DE4", Offset = "0xD13DE4", VA = "0xD13DE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD13DEC", Offset = "0xD13DEC", VA = "0xD13DEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD13F00", Offset = "0xD13F00", VA = "0xD13F00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD13FA0", Offset = "0xD13FA0", VA = "0xD13FA0")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD13F58", Offset = "0xD13F58", VA = "0xD13F58")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD14128", Offset = "0xD14128", VA = "0xD14128")]
	private void SetupPopupPosition()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD14204", Offset = "0xD14204", VA = "0xD14204")]
	private void SetupOverlayPosition()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD14250", Offset = "0xD14250", VA = "0xD14250")]
	private void SetOverlayAlpha(float alpha)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD13FE8", Offset = "0xD13FE8", VA = "0xD13FE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D87C", Offset = "0xA3D87C")]
	private IEnumerator FadeInCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xD142B4", Offset = "0xD142B4", VA = "0xD142B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D8E0", Offset = "0xA3D8E0")]
	private IEnumerator FadeInOverlayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD140B4", Offset = "0xD140B4", VA = "0xD140B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D944", Offset = "0xA3D944")]
	private IEnumerator FadeOutCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD14380", Offset = "0xD14380", VA = "0xD14380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D9A8", Offset = "0xA3D9A8")]
	private IEnumerator FadeOutOverlayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD14420", Offset = "0xD14420", VA = "0xD14420", Slot = "4")]
	public void AssignRequiredObject(VRObjects vrObjects)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD14428", Offset = "0xD14428", VA = "0xD14428", Slot = "5")]
	public void AssignRequiredObject(Subsystems subsystems)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD1405C", Offset = "0xD1405C", VA = "0xD1405C")]
	private void RestartCoroutine(ref Coroutine coroutine, IEnumerator routine)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD14430", Offset = "0xD14430", VA = "0xD14430")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD1449C", Offset = "0xD1449C", VA = "0xD1449C")]
	public CreditsOverlay()
	{
	}
}
[Token(Token = "0x2000063")]
public class QuestInfoLineCache : Cache<QuestInfoLine>
{
	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD4D1E8", Offset = "0xD4D1E8", VA = "0xD4D1E8", Slot = "4")]
	protected override QuestInfoLine Instantiate()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD4D378", Offset = "0xD4D378", VA = "0xD4D378")]
	public QuestInfoLineCache()
	{
	}
}
[Token(Token = "0x2000064")]
[SelectionBase]
public class VirtualButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isAlwaysTracked;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA368B4", Offset = "0xA368B4")]
	[SerializeField]
	private GameObject thisGameObject;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro label;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer theRenderer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshFilter meshFilter;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected SpriteRenderer image;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA36920", Offset = "0xA36920")]
	public Bounds interactionBounds;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pressDepth;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 imagePadding;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Vector3 highlightedScale;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isActive;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool transformCached;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float clickTime;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canChangeBackgroundColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Action onClick;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Action additionalOnClickAction;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action onHover;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform buttonTransform;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VirtualButtonCallbackParameters.ButtonDecoration highlightDecoration;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private VirtualButtonCallbackParameters.ButtonDecoration desaturateImageDecoration;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private VirtualButtonCallbackParameters.ColorButtonDecoration colorChangeDecoration;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color[] vertexColors;

	[Token(Token = "0x400023B")]
	private const float CLICK_TIME_DELAY = 0.15f;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color BlueBackgroundColor;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Color BlueDarkBackgroundColor;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Color BrightBackgroundColor;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Color DesaturatedBackgroundColor;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Color HighlightedBackgroundColor;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Color QuestItemBackgroundColor;

	[Token(Token = "0x17000038")]
	public bool IsActive
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xC148B8", Offset = "0xC148B8", VA = "0xC148B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000039")]
	public bool IsTimeToClick
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xC148C0", Offset = "0xC148C0", VA = "0xC148C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public bool IsAlwaysTracked
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xC148FC", Offset = "0xC148FC", VA = "0xC148FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	private Transform ButtonTransform
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xC14904", Offset = "0xC14904", VA = "0xC14904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC1491C", Offset = "0xC1491C", VA = "0xC1491C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC1390C", Offset = "0xC1390C", VA = "0xC1390C")]
	public void Init()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC14920", Offset = "0xC14920", VA = "0xC14920")]
	public void SetBackgroundColor(Color color)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC0DDF4", Offset = "0xC0DDF4", VA = "0xC0DDF4")]
	public void SetOnClickCallback(Action action, bool clearTitle = false)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC0DE80", Offset = "0xC0DE80", VA = "0xC0DE80")]
	public void RemoveCallBack()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC149DC", Offset = "0xC149DC", VA = "0xC149DC")]
	public void SetAdditionalCallback(Action action)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xC149E4", Offset = "0xC149E4", VA = "0xC149E4")]
	public void SetOnClickCallback(Action action, string buttonTitle)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xC14A14", Offset = "0xC14A14", VA = "0xC14A14")]
	public void SetOnClickCallback(Action action, Sprite sprite, bool clearTitle = false)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC14AFC", Offset = "0xC14AFC", VA = "0xC14AFC")]
	public void SetOnClickCallback(Action action, string buttonTitle, Sprite sprite)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xC14B44", Offset = "0xC14B44", VA = "0xC14B44")]
	public void SetOnClickCallback(VirtualButtonCallbackParameters param)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xC14C38", Offset = "0xC14C38", VA = "0xC14C38")]
	private void SetButtonDecorations(VirtualButtonCallbackParameters param)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xC14E54", Offset = "0xC14E54", VA = "0xC14E54")]
	public void SetImageDesaturateDecoration(VirtualButtonCallbackParameters.ButtonDecoration decoration)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xC14D48", Offset = "0xC14D48", VA = "0xC14D48")]
	public void SetHighlightDecoration(VirtualButtonCallbackParameters.ButtonDecoration decoration)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xC14C84", Offset = "0xC14C84", VA = "0xC14C84")]
	public void SetColorDecoration(VirtualButtonCallbackParameters.ColorButtonDecoration decoration)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xC14ED4", Offset = "0xC14ED4", VA = "0xC14ED4")]
	public void SetOnHoverCallback(Action action)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xC149C0", Offset = "0xC149C0", VA = "0xC149C0")]
	private void SetTitle(string buttonTitle)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xC14ABC", Offset = "0xC14ABC", VA = "0xC14ABC")]
	private void SetSprite(Sprite sprite)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xC14EDC", Offset = "0xC14EDC", VA = "0xC14EDC")]
	private void AdjustImageSize(Sprite spr)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xC15030", Offset = "0xC15030", VA = "0xC15030")]
	public void SetHighlighted(bool highlighted)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC15164", Offset = "0xC15164", VA = "0xC15164")]
	private void RemoveDecorations()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC152A8", Offset = "0xC152A8", VA = "0xC152A8")]
	public bool IsInInteractionBounds(Vector3 globalPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC15314", Offset = "0xC15314", VA = "0xC15314")]
	public bool IsInPressedBounds(Vector3 globalPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xC153B0", Offset = "0xC153B0", VA = "0xC153B0")]
	public void CallCallback()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xC0D778", Offset = "0xC0D778", VA = "0xC0D778")]
	public void SetActive(bool value)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC15400", Offset = "0xC15400", VA = "0xC15400")]
	public void SetActiveState(bool newState)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC1540C", Offset = "0xC1540C", VA = "0xC1540C")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC155B0", Offset = "0xC155B0", VA = "0xC155B0")]
	public void PlayPushButtonAnimation()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC156F8", Offset = "0xC156F8", VA = "0xC156F8", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC156FC", Offset = "0xC156FC", VA = "0xC156FC")]
	public VirtualButton()
	{
	}
}
[Token(Token = "0x2000065")]
public class SingleItemScreen : TabletScreen
{
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34444", Offset = "0xA34444")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SingleItemScreen <>4__this;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int variantIndex;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xC0E02C", Offset = "0xC0E02C", VA = "0xC0E02C")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xC0E3EC", Offset = "0xC0E3EC", VA = "0xC0E3EC")]
		internal void <SetVariant>b__0()
		{
		}
	}

	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34454", Offset = "0xA34454")]
	private sealed class <GetVirtualButtons>d__36 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VirtualButton <>2__current;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SingleItemScreen <>4__this;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VariantButton[] <>7__wrap1;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x1700023C")]
		private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xC0E540", Offset = "0xC0E540", VA = "0xC0E540", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xC0E5AC", Offset = "0xC0E5AC", VA = "0xC0E5AC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xC0E3AC", Offset = "0xC0E3AC", VA = "0xC0E3AC")]
		[DebuggerHidden]
		public <GetVirtualButtons>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xC0E448", Offset = "0xC0E448", VA = "0xC0E448", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xC0E44C", Offset = "0xC0E44C", VA = "0xC0E44C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xC0E548", Offset = "0xC0E548", VA = "0xC0E548", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xC0E5B4", Offset = "0xC0E5B4", VA = "0xC0E5B4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xC0E664", Offset = "0xC0E664", VA = "0xC0E664", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000242")]
	private const int NUMBER_OF_VARIANT_BUTTONS_IN_LINE = 5;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject variantPanel;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform highlight;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro itemName;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro seriesName;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform pivot;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro itemPrice;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIVariableWidthController itemPricePlate;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VariantButton[] variantButtons;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VirtualButton backButton;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VirtualButton forwardButton;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Item itemPrefab;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Item itemInstance;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentPage;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int totalPages;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastIndex;

	[Token(Token = "0x1700003C")]
	public override TabletScreen BackScreen
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xC0D5FC", Offset = "0xC0D5FC", VA = "0xC0D5FC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public override bool FlatDisplay
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xC0D61C", Offset = "0xC0D61C", VA = "0xC0D61C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public override string ScreenTitle
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xC0D624", Offset = "0xC0D624", VA = "0xC0D624", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public override bool ShowBottomBar
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xC0D674", Offset = "0xC0D674", VA = "0xC0D674", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC0D67C", Offset = "0xC0D67C", VA = "0xC0D67C", Slot = "12")]
	public override void OnShow()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xC0D6B8", Offset = "0xC0D6B8", VA = "0xC0D6B8", Slot = "13")]
	public override void OnHide()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xC0D7B4", Offset = "0xC0D7B4", VA = "0xC0D7B4")]
	public void LoadItem(Item itemPrefab)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC0DBC0", Offset = "0xC0DBC0", VA = "0xC0DBC0")]
	private void LoadPage(int currentPage)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC0DD48", Offset = "0xC0DD48", VA = "0xC0DD48")]
	private Action SetVariant(int variantIndex)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xC0E034", Offset = "0xC0E034", VA = "0xC0E034")]
	private void HighLightButton(int index)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xC0DE88", Offset = "0xC0DE88", VA = "0xC0DE88")]
	private void ManagePageArrows(int currentPage)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xC0E11C", Offset = "0xC0E11C", VA = "0xC0E11C")]
	private void SelectNextPage()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xC0E150", Offset = "0xC0E150", VA = "0xC0E150")]
	private void SelectPreviousPage()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC0D8E4", Offset = "0xC0D8E4", VA = "0xC0D8E4")]
	private void SpawnItemInstance()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC0E184", Offset = "0xC0E184", VA = "0xC0E184")]
	private void HandlePrePickUp()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xC0E2B4", Offset = "0xC0E2B4", VA = "0xC0E2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xC0E328", Offset = "0xC0E328", VA = "0xC0E328", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DA0C", Offset = "0xA3DA0C")]
	public override IEnumerable<VirtualButton> GetVirtualButtons()
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC0E3E4", Offset = "0xC0E3E4", VA = "0xC0E3E4")]
	public SingleItemScreen()
	{
	}
}
[Token(Token = "0x2000066")]
public class AnimatedHand : MonoBehaviour
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA369A8", Offset = "0xA369A8")]
	[SerializeField]
	private SteamVR_Input_Sources hand;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SteamVR_Action_Boolean grip;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SteamVR_Action_Boolean thumbTouch;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SteamVR_Action_Single trigger;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canPoint;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool canThumbsUp;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float pointBlend;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float thumbsUpBlend;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int pointLayerIndex;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexDefaultLayerIndex;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int mainGripIndexLayer;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int indexGripLayerIndex;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int flexParameterIndex;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int poseParameterIndex;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int pitchParameterIndex;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int pointBlendParameterIndex;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int thumbUpBlendParameterIndex;

	[Token(Token = "0x4000265")]
	private const string DEFAULT_LAYER_NAME = "Default Layer";

	[Token(Token = "0x4000266")]
	private const string MAIN_GRIP_LAYER_NAME = "Main Grip";

	[Token(Token = "0x4000267")]
	private const string POINT_LAYER_NAME = "Point Layer";

	[Token(Token = "0x4000268")]
	private const string INDEX_GRIP_LAYER_NAME = "Index Grip";

	[Token(Token = "0x4000269")]
	private const string FLEX_PARAMETER_NAME = "Flex";

	[Token(Token = "0x400026A")]
	private const string POSE_PARAMETER_NAME = "Pose";

	[Token(Token = "0x400026B")]
	private const string PINCH_PARAMETER_NAME = "Pinch";

	[Token(Token = "0x400026C")]
	private const string POINT_BLEND_PARAMETER_NAME = "PointBlend";

	[Token(Token = "0x400026D")]
	private const string THUMB_UP_BLEND_PARAMETER_NAME = "ThumbUpBlend";

	[Token(Token = "0x400026E")]
	private const float INPUT_RATE_CHANGE = 5f;

	[Token(Token = "0x400026F")]
	private const float MIN_INDEX_BEND = 0.3f;

	[Token(Token = "0x4000270")]
	private const float MAX_INDEX_BEND = 0.85f;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xD0728C", Offset = "0xD0728C", VA = "0xD0728C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xD073F4", Offset = "0xD073F4", VA = "0xD073F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xD075E0", Offset = "0xD075E0", VA = "0xD075E0")]
	private void AssignBlends()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xD07420", Offset = "0xD07420", VA = "0xD07420")]
	private void CheckForTouchAndAssignContainers()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD07620", Offset = "0xD07620", VA = "0xD07620")]
	private void UpdateAnimator()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xD07954", Offset = "0xD07954", VA = "0xD07954")]
	private static float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xD079F4", Offset = "0xD079F4", VA = "0xD079F4")]
	public AnimatedHand()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33564", Offset = "0xA33564")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD0B124", Offset = "0xD0B124", VA = "0xD0B124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD0B130", Offset = "0xD0B130", VA = "0xD0B130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xD0B248", Offset = "0xD0B248", VA = "0xD0B248")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000068")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34464", Offset = "0xA34464")]
	private sealed class <>c
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xD0C0B4", Offset = "0xD0C0B4", VA = "0xD0C0B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xD0C0BC", Offset = "0xD0C0BC", VA = "0xD0C0BC")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34474", Offset = "0xA34474")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xD0C278", Offset = "0xD0C278", VA = "0xD0C278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xD0C2E4", Offset = "0xD0C2E4", VA = "0xD0C2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xD0BFB4", Offset = "0xD0BFB4", VA = "0xD0BFB4")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xD0C114", Offset = "0xD0C114", VA = "0xD0C114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xD0C118", Offset = "0xD0C118", VA = "0xD0C118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xD0C280", Offset = "0xD0C280", VA = "0xD0C280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA36A24", Offset = "0xA36A24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA36A24", Offset = "0xA36A24")]
	public Image slowMoBtn;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA36A5C", Offset = "0xA36A5C")]
	public Text EffectLabel;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xD0B258", Offset = "0xD0B258", VA = "0xD0B258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xD0B5BC", Offset = "0xD0B5BC", VA = "0xD0B5BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xD0BC80", Offset = "0xD0BC80", VA = "0xD0BC80")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xD0BD64", Offset = "0xD0BD64", VA = "0xD0BD64")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xD0BE6C", Offset = "0xD0BE6C", VA = "0xD0BE6C")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xD0BF38", Offset = "0xD0BF38", VA = "0xD0BF38")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xD0BF3C", Offset = "0xD0BF3C", VA = "0xD0BF3C")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xD0B480", Offset = "0xD0B480", VA = "0xD0B480")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xD0BA9C", Offset = "0xD0BA9C", VA = "0xD0BA9C")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xD0BF40", Offset = "0xD0BF40", VA = "0xD0BF40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DA70", Offset = "0xA3DA70")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xD0B8DC", Offset = "0xD0B8DC", VA = "0xD0B8DC")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD0B918", Offset = "0xD0B918", VA = "0xD0B918")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xD0B950", Offset = "0xD0B950", VA = "0xD0B950")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xD0BFE0", Offset = "0xD0BFE0", VA = "0xD0BFE0")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000069")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xD0C2EC", Offset = "0xD0C2EC", VA = "0xD0C2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xD0C3A4", Offset = "0xD0C3A4", VA = "0xD0C3A4")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200006A")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xD0C438", Offset = "0xD0C438", VA = "0xD0C438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xD0C59C", Offset = "0xD0C59C", VA = "0xD0C59C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD0C71C", Offset = "0xD0C71C", VA = "0xD0C71C")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200006B")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xD0C7AC", Offset = "0xD0C7AC", VA = "0xD0C7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xD0C8F8", Offset = "0xD0C8F8", VA = "0xD0C8F8")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200006C")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xD0C95C", Offset = "0xD0C95C", VA = "0xD0C95C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD0CA38", Offset = "0xD0CA38", VA = "0xD0CA38")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD0CB24", Offset = "0xD0CB24", VA = "0xD0CB24")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA335C8", Offset = "0xA335C8")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34484", Offset = "0xA34484")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xD0AFDC", Offset = "0xD0AFDC", VA = "0xD0AFDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xD0B048", Offset = "0xD0B048", VA = "0xD0B048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xD0AE28", Offset = "0xD0AE28", VA = "0xD0AE28")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xD0AE5C", Offset = "0xD0AE5C", VA = "0xD0AE5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xD0AE60", Offset = "0xD0AE60", VA = "0xD0AE60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xD0AFE4", Offset = "0xD0AFE4", VA = "0xD0AFE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xD0AD60", Offset = "0xD0AD60", VA = "0xD0AD60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xD0ADB4", Offset = "0xD0ADB4", VA = "0xD0ADB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DAD4", Offset = "0xA3DAD4")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xD0AE54", Offset = "0xD0AE54", VA = "0xD0AE54")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200006E")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xD0B050", Offset = "0xD0B050", VA = "0xD0B050")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xD0B114", Offset = "0xD0B114", VA = "0xD0B114")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3362C", Offset = "0xA3362C")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xD0CBB4", Offset = "0xD0CBB4", VA = "0xD0CBB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xD0CC1C", Offset = "0xD0CC1C", VA = "0xD0CC1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xD0CC30", Offset = "0xD0CC30", VA = "0xD0CC30")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xD0CD04", Offset = "0xD0CD04", VA = "0xD0CD04")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33690", Offset = "0xA33690")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xD0CD14", Offset = "0xD0CD14", VA = "0xD0CD14")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xD0CD7C", Offset = "0xD0CD7C", VA = "0xD0CD7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xD0CE00", Offset = "0xD0CE00", VA = "0xD0CE00")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xD0CFA8", Offset = "0xD0CFA8", VA = "0xD0CFA8")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000071")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20002B3")]
	public delegate void OnClick();

	[Token(Token = "0x20002B4")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002B5")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002B6")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34494", Offset = "0xA34494")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC419B8", Offset = "0xC419B8", VA = "0xC419B8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xC42374", Offset = "0xC42374", VA = "0xC42374")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344A4", Offset = "0xA344A4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xC41C3C", Offset = "0xC41C3C", VA = "0xC41C3C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC425A8", Offset = "0xC425A8", VA = "0xC425A8")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344B4", Offset = "0xA344B4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC41E58", Offset = "0xC41E58", VA = "0xC41E58")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC4280C", Offset = "0xC4280C", VA = "0xC4280C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344C4", Offset = "0xA344C4")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC41FF0", Offset = "0xC41FF0", VA = "0xC41FF0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC42BE4", Offset = "0xC42BE4", VA = "0xC42BE4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344D4", Offset = "0xA344D4")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC4224C", Offset = "0xC4224C", VA = "0xC4224C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC42C08", Offset = "0xC42C08", VA = "0xC42C08")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002A2")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002A3")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002A4")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002B1")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002B2")]
	private const float marginH = 16f;

	[Token(Token = "0x40002B3")]
	private const float marginV = 16f;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC40924", Offset = "0xC40924", VA = "0xC40924")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC40D2C", Offset = "0xC40D2C", VA = "0xC40D2C")]
	public void Show()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC4130C", Offset = "0xC4130C", VA = "0xC4130C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xC410B0", Offset = "0xC410B0", VA = "0xC410B0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xC414CC", Offset = "0xC414CC", VA = "0xC414CC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xC41784", Offset = "0xC41784", VA = "0xC41784")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xC419C0", Offset = "0xC419C0", VA = "0xC419C0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xC41AA8", Offset = "0xC41AA8", VA = "0xC41AA8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xC41C44", Offset = "0xC41C44", VA = "0xC41C44")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xC41CE0", Offset = "0xC41CE0", VA = "0xC41CE0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xC41E60", Offset = "0xC41E60", VA = "0xC41E60")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xC41FF8", Offset = "0xC41FF8", VA = "0xC41FF8")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xC42254", Offset = "0xC42254", VA = "0xC42254")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xC42304", Offset = "0xC42304", VA = "0xC42304")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000072")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xC4CC18", Offset = "0xC4CC18", VA = "0xC4CC18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xC4CCA0", Offset = "0xC4CCA0", VA = "0xC4CCA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xC4CD68", Offset = "0xC4CD68", VA = "0xC4CD68")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xC4CDA8", Offset = "0xC4CDA8", VA = "0xC4CDA8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000073")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20002BC")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001113")]
		On,
		[Token(Token = "0x4001114")]
		Off,
		[Token(Token = "0x4001115")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000040")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xD9B41C", Offset = "0xD9B41C", VA = "0xD9B41C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xD9B3D8", Offset = "0xD9B3D8", VA = "0xD9B3D8")]
		set
		{
		}
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD9B424", Offset = "0xD9B424", VA = "0xD9B424")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xD9B47C", Offset = "0xD9B47C", VA = "0xD9B47C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xD9B594", Offset = "0xD9B594", VA = "0xD9B594", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xD9B5B0", Offset = "0xD9B5B0", VA = "0xD9B5B0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xD9B608", Offset = "0xD9B608", VA = "0xD9B608")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xD9B86C", Offset = "0xD9B86C", VA = "0xD9B86C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD9B980", Offset = "0xD9B980", VA = "0xD9B980")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD9BA14", Offset = "0xD9BA14", VA = "0xD9BA14")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD9BAE4", Offset = "0xD9BAE4", VA = "0xD9BAE4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xD9BB9C", Offset = "0xD9BB9C", VA = "0xD9BB9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xD9BC68", Offset = "0xD9BC68", VA = "0xD9BC68")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000074")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xD09FB8", Offset = "0xD09FB8", VA = "0xD09FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xD0A1C8", Offset = "0xD0A1C8", VA = "0xD0A1C8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xD0A6A4", Offset = "0xD0A6A4", VA = "0xD0A6A4")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000075")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC464CC", Offset = "0xC464CC", VA = "0xC464CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC46604", Offset = "0xC46604", VA = "0xC46604")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC46860", Offset = "0xC46860", VA = "0xC46860")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000076")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000041")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xC4690C", Offset = "0xC4690C", VA = "0xC4690C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000006")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xC46560", Offset = "0xC46560", VA = "0xC46560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB38", Offset = "0xA3DB38")]
		add
		{
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xC46868", Offset = "0xC46868", VA = "0xC46868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB48", Offset = "0xA3DB48")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC46918", Offset = "0xC46918", VA = "0xC46918")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC46A84", Offset = "0xC46A84", VA = "0xC46A84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC46C04", Offset = "0xC46C04", VA = "0xC46C04")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC46C0C", Offset = "0xC46C0C", VA = "0xC46C0C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000077")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36B1C", Offset = "0xA36B1C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36B54", Offset = "0xA36B54")]
	public bool EnableCollision;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36B8C", Offset = "0xA36B8C")]
	public float MaxFade;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36BC4", Offset = "0xA36BC4")]
	public float FadeMinDistance;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36BFC", Offset = "0xA36BFC")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xD0D5BC", Offset = "0xD0D5BC", VA = "0xD0D5BC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xD0D644", Offset = "0xD0D644", VA = "0xD0D644")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xD0D6B4", Offset = "0xD0D6B4", VA = "0xD0D6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xD0D6B8", Offset = "0xD0D6B8", VA = "0xD0D6B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD0D6DC", Offset = "0xD0D6DC", VA = "0xD0D6DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xD0D700", Offset = "0xD0D700", VA = "0xD0D700")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000078")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD9BC78", Offset = "0xD9BC78", VA = "0xD9BC78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD9BD24", Offset = "0xD9BD24", VA = "0xD9BD24")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000079")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20002BD")]
	public enum States
	{
		[Token(Token = "0x4001117")]
		Ready,
		[Token(Token = "0x4001118")]
		Aim,
		[Token(Token = "0x4001119")]
		CancelAim,
		[Token(Token = "0x400111A")]
		PreTeleport,
		[Token(Token = "0x400111B")]
		CancelTeleport,
		[Token(Token = "0x400111C")]
		Teleporting,
		[Token(Token = "0x400111D")]
		PostTeleport
	}

	[Token(Token = "0x20002BE")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400111F")]
		None,
		[Token(Token = "0x4001120")]
		Aim,
		[Token(Token = "0x4001121")]
		PreTeleport,
		[Token(Token = "0x4001122")]
		Teleport
	}

	[Token(Token = "0x20002BF")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001124")]
		Point,
		[Token(Token = "0x4001125")]
		Sphere,
		[Token(Token = "0x4001126")]
		Capsule
	}

	[Token(Token = "0x20002C0")]
	public class AimData
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C974", Offset = "0xA3C974")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000242")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xD9EF74", Offset = "0xD9EF74", VA = "0xD9EF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44BA8", Offset = "0xA44BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600153F")]
			[Address(RVA = "0xD9EF7C", Offset = "0xD9EF7C", VA = "0xD9EF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44BB8", Offset = "0xA44BB8")]
			private set
			{
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xD9EF00", Offset = "0xD9EF00", VA = "0xD9EF00")]
		public AimData()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xD9EF84", Offset = "0xD9EF84", VA = "0xD9EF84")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344E4", Offset = "0xA344E4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0xD9ED40", Offset = "0xD9ED40", VA = "0xD9ED40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0xD9EDAC", Offset = "0xD9EDAC", VA = "0xD9EDAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xD9D210", Offset = "0xD9D210", VA = "0xD9D210")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xD9EC54", Offset = "0xD9EC54", VA = "0xD9EC54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xD9EC58", Offset = "0xD9EC58", VA = "0xD9EC58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xD9ED48", Offset = "0xD9ED48", VA = "0xD9ED48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344F4", Offset = "0xA344F4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0xD9E710", Offset = "0xD9E710", VA = "0xD9E710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0xD9E77C", Offset = "0xD9E77C", VA = "0xD9E77C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xD9D6FC", Offset = "0xD9D6FC", VA = "0xD9D6FC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xD9E5D4", Offset = "0xD9E5D4", VA = "0xD9E5D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xD9E5D8", Offset = "0xD9E5D8", VA = "0xD9E5D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xD9E718", Offset = "0xD9E718", VA = "0xD9E718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34504", Offset = "0xA34504")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xD9E824", Offset = "0xD9E824", VA = "0xD9E824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xD9E890", Offset = "0xD9E890", VA = "0xD9E890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xD9D8E4", Offset = "0xD9D8E4", VA = "0xD9D8E4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xD9E784", Offset = "0xD9E784", VA = "0xD9E784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xD9E788", Offset = "0xD9E788", VA = "0xD9E788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xD9E82C", Offset = "0xD9E82C", VA = "0xD9E82C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34514", Offset = "0xA34514")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xD9EBE0", Offset = "0xD9EBE0", VA = "0xD9EBE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xD9EC4C", Offset = "0xD9EC4C", VA = "0xD9EC4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xD9DACC", Offset = "0xD9DACC", VA = "0xD9DACC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xD9EB04", Offset = "0xD9EB04", VA = "0xD9EB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xD9EB08", Offset = "0xD9EB08", VA = "0xD9EB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xD9EBE8", Offset = "0xD9EBE8", VA = "0xD9EBE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34524", Offset = "0xA34524")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xD9E938", Offset = "0xD9E938", VA = "0xD9E938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xD9E9A4", Offset = "0xD9E9A4", VA = "0xD9E9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD9DCB4", Offset = "0xD9DCB4", VA = "0xD9DCB4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD9E898", Offset = "0xD9E898", VA = "0xD9E898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xD9E89C", Offset = "0xD9E89C", VA = "0xD9E89C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xD9E940", Offset = "0xD9E940", VA = "0xD9E940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34534", Offset = "0xA34534")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0xD9EE8C", Offset = "0xD9EE8C", VA = "0xD9EE8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xD9EEF8", Offset = "0xD9EEF8", VA = "0xD9EEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD9DE9C", Offset = "0xD9DE9C", VA = "0xD9DE9C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xD9EDB4", Offset = "0xD9EDB4", VA = "0xD9EDB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xD9EDB8", Offset = "0xD9EDB8", VA = "0xD9EDB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD9EE94", Offset = "0xD9EE94", VA = "0xD9EE94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34544", Offset = "0xA34544")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0xD9EA90", Offset = "0xD9EA90", VA = "0xD9EA90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0xD9EAFC", Offset = "0xD9EAFC", VA = "0xD9EAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD9E084", Offset = "0xD9E084", VA = "0xD9E084")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xD9E9AC", Offset = "0xD9E9AC", VA = "0xD9E9AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD9E9B0", Offset = "0xD9E9B0", VA = "0xD9E9B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD9EA98", Offset = "0xD9EA98", VA = "0xD9EA98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36C34", Offset = "0xA36C34")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36C6C", Offset = "0xA36C6C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36CA4", Offset = "0xA36CA4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36CDC", Offset = "0xA36CDC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36D14", Offset = "0xA36D14")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36D4C", Offset = "0xA36D4C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36D84", Offset = "0xA36D84")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36DBC", Offset = "0xA36DBC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DF4", Offset = "0xA36DF4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36E04", Offset = "0xA36E04")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36E3C", Offset = "0xA36E3C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E84", Offset = "0xA36E84")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36E94", Offset = "0xA36E94")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36ECC", Offset = "0xA36ECC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36F04", Offset = "0xA36F04")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA36F3C", Offset = "0xA36F3C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000042")]
	public States CurrentState
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xD9C738", Offset = "0xD9C738", VA = "0xD9C738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB58", Offset = "0xA3DB58")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xD9C740", Offset = "0xD9C740", VA = "0xD9C740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB68", Offset = "0xA3DB68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xD9C970", Offset = "0xD9C970", VA = "0xD9C970")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000044")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xD9C99C", Offset = "0xD9C99C", VA = "0xD9C99C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB98", Offset = "0xA3DB98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xD9C9A4", Offset = "0xD9C9A4", VA = "0xD9C9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DBA8", Offset = "0xA3DBA8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xD9C748", Offset = "0xD9C748", VA = "0xD9C748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB78", Offset = "0xA3DB78")]
		add
		{
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xD9C7EC", Offset = "0xD9C7EC", VA = "0xD9C7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DB88", Offset = "0xA3DB88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xD9D0C8", Offset = "0xD9D0C8", VA = "0xD9D0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DBF0", Offset = "0xA3DBF0")]
		add
		{
		}
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xD9D16C", Offset = "0xD9D16C", VA = "0xD9D16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DC00", Offset = "0xA3DC00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xD9D23C", Offset = "0xD9D23C", VA = "0xD9D23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DC74", Offset = "0xA3DC74")]
		add
		{
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xD9D2E0", Offset = "0xD9D2E0", VA = "0xD9D2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DC84", Offset = "0xA3DC84")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xD9D384", Offset = "0xD9D384", VA = "0xD9D384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DC94", Offset = "0xA3DC94")]
		add
		{
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xD9D428", Offset = "0xD9D428", VA = "0xD9D428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DCA4", Offset = "0xA3DCA4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xD9D540", Offset = "0xD9D540", VA = "0xD9D540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DCB4", Offset = "0xA3DCB4")]
		add
		{
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xD9D5E4", Offset = "0xD9D5E4", VA = "0xD9D5E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DCC4", Offset = "0xA3DCC4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xD9D728", Offset = "0xD9D728", VA = "0xD9D728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DD38", Offset = "0xA3DD38")]
		add
		{
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xD9D7CC", Offset = "0xD9D7CC", VA = "0xD9D7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DD48", Offset = "0xA3DD48")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xD9D910", Offset = "0xD9D910", VA = "0xD9D910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DDBC", Offset = "0xA3DDBC")]
		add
		{
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xD9D9B4", Offset = "0xD9D9B4", VA = "0xD9D9B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DDCC", Offset = "0xA3DDCC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xD9DAF8", Offset = "0xD9DAF8", VA = "0xD9DAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DE40", Offset = "0xA3DE40")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xD9DB9C", Offset = "0xD9DB9C", VA = "0xD9DB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DE50", Offset = "0xA3DE50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xD9DCE0", Offset = "0xD9DCE0", VA = "0xD9DCE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DEC4", Offset = "0xA3DEC4")]
		add
		{
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xD9DD84", Offset = "0xD9DD84", VA = "0xD9DD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DED4", Offset = "0xA3DED4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xD9DEC8", Offset = "0xD9DEC8", VA = "0xD9DEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF48", Offset = "0xA3DF48")]
		add
		{
		}
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xD9DF6C", Offset = "0xD9DF6C", VA = "0xD9DF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF58", Offset = "0xA3DF58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xD9E0B0", Offset = "0xD9E0B0", VA = "0xD9E0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DFCC", Offset = "0xA3DFCC")]
		add
		{
		}
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xD9E154", Offset = "0xD9E154", VA = "0xD9E154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DFDC", Offset = "0xA3DFDC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD9C3F0", Offset = "0xD9C3F0", VA = "0xD9C3F0")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD9C414", Offset = "0xD9C414", VA = "0xD9C414")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD9C890", Offset = "0xD9C890", VA = "0xD9C890")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD9C9AC", Offset = "0xD9C9AC", VA = "0xD9C9AC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD9CD0C", Offset = "0xD9CD0C", VA = "0xD9CD0C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA3DBB8", Offset = "0xA3DBB8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD9CDC4", Offset = "0xD9CDC4", VA = "0xD9CDC4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD9CE90", Offset = "0xD9CE90", VA = "0xD9CE90")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD9CEAC", Offset = "0xD9CEAC", VA = "0xD9CEAC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD9CF78", Offset = "0xD9CF78", VA = "0xD9CF78")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD9CFC0", Offset = "0xD9CFC0", VA = "0xD9CFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD9D01C", Offset = "0xD9D01C", VA = "0xD9D01C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD9D0C0", Offset = "0xD9D0C0", VA = "0xD9D0C0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD9D04C", Offset = "0xD9D04C", VA = "0xD9D04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DC10", Offset = "0xA3DC10")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xD9D4CC", Offset = "0xD9D4CC", VA = "0xD9D4CC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xD9D688", Offset = "0xD9D688", VA = "0xD9D688")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DCD4", Offset = "0xA3DCD4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xD9D870", Offset = "0xD9D870", VA = "0xD9D870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DD58", Offset = "0xA3DD58")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xD9DA58", Offset = "0xD9DA58", VA = "0xD9DA58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DDDC", Offset = "0xA3DDDC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD9DC40", Offset = "0xD9DC40", VA = "0xD9DC40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DE60", Offset = "0xA3DE60")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD9DE28", Offset = "0xD9DE28", VA = "0xD9DE28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DEE4", Offset = "0xA3DEE4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD9E010", Offset = "0xD9E010", VA = "0xD9E010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DF68", Offset = "0xA3DF68")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD9E1F8", Offset = "0xD9E1F8", VA = "0xD9E1F8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD9E340", Offset = "0xD9E340", VA = "0xD9E340")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD9E378", Offset = "0xD9E378", VA = "0xD9E378")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD9E494", Offset = "0xD9E494", VA = "0xD9E494")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xD9E5C4", Offset = "0xD9E5C4", VA = "0xD9E5C4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200007A")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000012")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xC0CBD8", Offset = "0xC0CBD8", VA = "0xC0CBD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DFEC", Offset = "0xA3DFEC")]
		add
		{
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xC0CC7C", Offset = "0xC0CC7C", VA = "0xC0CC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DFFC", Offset = "0xA3DFFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xC0CD20", Offset = "0xC0CD20", VA = "0xC0CD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E00C", Offset = "0xA3E00C")]
		add
		{
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xC0CDC4", Offset = "0xC0CDC4", VA = "0xC0CDC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E01C", Offset = "0xA3E01C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC0CE68", Offset = "0xC0CE68", VA = "0xC0CE68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC0CF10", Offset = "0xC0CF10", VA = "0xC0CF10")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC0CF14", Offset = "0xC0CF14", VA = "0xC0CF14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC0CF88", Offset = "0xC0CF88", VA = "0xC0CF88")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC0D0FC", Offset = "0xC0D0FC", VA = "0xC0D0FC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC0D3E4", Offset = "0xC0D3E4", VA = "0xC0D3E4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC0D5DC", Offset = "0xC0D5DC", VA = "0xC0D5DC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200007B")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC0F5E4", Offset = "0xC0F5E4", VA = "0xC0F5E4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC0F67C", Offset = "0xC0F67C", VA = "0xC0F67C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000321")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC0F750", Offset = "0xC0F750", VA = "0xC0F750")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200007C")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37034", Offset = "0xA37034")]
	public float Range;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC0F760", Offset = "0xC0F760", VA = "0xC0F760", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC0F8C0", Offset = "0xC0F8C0", VA = "0xC0F8C0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200007D")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3706C", Offset = "0xA3706C")]
	public float Range;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA370A4", Offset = "0xA370A4")]
	public float MinimumElevation;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA370DC", Offset = "0xA370DC")]
	public float Gravity;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37114", Offset = "0xA37114")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37114", Offset = "0xA37114")]
	public float AimVelocity;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37170", Offset = "0xA37170")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37170", Offset = "0xA37170")]
	public float AimStep;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC0F8D0", Offset = "0xC0F8D0", VA = "0xC0F8D0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC0FB20", Offset = "0xC0FB20", VA = "0xC0FB20")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200007E")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA371C8", Offset = "0xA371C8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC0FB34", Offset = "0xC0FB34", VA = "0xC0FB34")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC0FC18", Offset = "0xC0FC18", VA = "0xC0FC18")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC0FC48", Offset = "0xC0FC48", VA = "0xC0FC48")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC0FC78", Offset = "0xC0FC78", VA = "0xC0FC78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC0FD18", Offset = "0xC0FD18", VA = "0xC0FD18", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC0FD84", Offset = "0xC0FD84", VA = "0xC0FD84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC0FDEC", Offset = "0xC0FDEC", VA = "0xC0FDEC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200007F")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37200", Offset = "0xA37200")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37210", Offset = "0xA37210")]
	public Transform PositionIndicator;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37248", Offset = "0xA37248")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37280", Offset = "0xA37280")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000045")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xC0FF10", Offset = "0xC0FF10", VA = "0xC0FF10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E02C", Offset = "0xA3E02C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xC0FF18", Offset = "0xC0FF18", VA = "0xC0FF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E03C", Offset = "0xA3E03C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xC100D0", Offset = "0xC100D0", VA = "0xC100D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E04C", Offset = "0xA3E04C")]
		add
		{
		}
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xC10174", Offset = "0xC10174", VA = "0xC10174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E05C", Offset = "0xA3E05C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC0FF24", Offset = "0xC0FF24", VA = "0xC0FF24")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC0FFB4", Offset = "0xC0FFB4", VA = "0xC0FFB4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC1008C", Offset = "0xC1008C", VA = "0xC1008C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC100CC", Offset = "0xC100CC", VA = "0xC100CC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC10218", Offset = "0xC10218", VA = "0xC10218")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC10280", Offset = "0xC10280", VA = "0xC10280")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC102A4", Offset = "0xC102A4", VA = "0xC102A4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000080")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34554", Offset = "0xA34554")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xC1099C", Offset = "0xC1099C", VA = "0xC1099C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0xC10A08", Offset = "0xC10A08", VA = "0xC10A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC106D8", Offset = "0xC106D8", VA = "0xC106D8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xC10908", Offset = "0xC10908", VA = "0xC10908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xC1090C", Offset = "0xC1090C", VA = "0xC1090C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xC109A4", Offset = "0xC109A4", VA = "0xC109A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34564", Offset = "0xA34564")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xC10894", Offset = "0xC10894", VA = "0xC10894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xC10900", Offset = "0xC10900", VA = "0xC10900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xC10778", Offset = "0xC10778", VA = "0xC10778")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xC107FC", Offset = "0xC107FC", VA = "0xC107FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xC10800", Offset = "0xC10800", VA = "0xC10800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xC1089C", Offset = "0xC1089C", VA = "0xC1089C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC1049C", Offset = "0xC1049C", VA = "0xC1049C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC10548", Offset = "0xC10548", VA = "0xC10548", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC105A4", Offset = "0xC105A4", VA = "0xC105A4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC10664", Offset = "0xC10664", VA = "0xC10664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E06C", Offset = "0xA3E06C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC10704", Offset = "0xC10704", VA = "0xC10704")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E0D0", Offset = "0xA3E0D0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600033F")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC107A4", Offset = "0xC107A4", VA = "0xC107A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E134", Offset = "0xA3E134")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC107D0", Offset = "0xC107D0", VA = "0xC107D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E144", Offset = "0xA3E144")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000081")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA372C8", Offset = "0xA372C8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA372D8", Offset = "0xA372D8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37310", Offset = "0xA37310")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37348", Offset = "0xA37348")]
	public bool FastTeleport;

	[Token(Token = "0x17000046")]
	public Transform Pointer
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0xC10A10", Offset = "0xC10A10", VA = "0xC10A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E154", Offset = "0xA3E154")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000343")]
		[Address(RVA = "0xC10A18", Offset = "0xC10A18", VA = "0xC10A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E164", Offset = "0xA3E164")]
		private set
		{
		}
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC10A20", Offset = "0xC10A20", VA = "0xC10A20", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC10B80", Offset = "0xC10B80", VA = "0xC10B80", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC10C3C", Offset = "0xC10C3C", VA = "0xC10C3C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000082")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20002CA")]
	public enum InputModes
	{
		[Token(Token = "0x4001148")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001149")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400114A")]
		ThumbstickTeleport,
		[Token(Token = "0x400114B")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20002CB")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400114D")]
		A,
		[Token(Token = "0x400114E")]
		B,
		[Token(Token = "0x400114F")]
		LeftTrigger,
		[Token(Token = "0x4001150")]
		LeftThumbstick,
		[Token(Token = "0x4001151")]
		RightTrigger,
		[Token(Token = "0x4001152")]
		RightThumbstick,
		[Token(Token = "0x4001153")]
		X,
		[Token(Token = "0x4001154")]
		Y
	}

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37380", Offset = "0xA37380")]
	public InputModes InputMode;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA373B8", Offset = "0xA373B8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA373F0", Offset = "0xA373F0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37428", Offset = "0xA37428")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC10C40", Offset = "0xC10C40", VA = "0xC10C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC10C44", Offset = "0xC10C44", VA = "0xC10C44", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC11094", Offset = "0xC11094", VA = "0xC11094", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC11158", Offset = "0xC11158", VA = "0xC11158")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000083")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20002CC")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001156")]
		HeadRelative,
		[Token(Token = "0x4001157")]
		ForwardFacing
	}

	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34574", Offset = "0xA34574")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xC115F4", Offset = "0xC115F4", VA = "0xC115F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xC11660", Offset = "0xC11660", VA = "0xC11660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xC113C8", Offset = "0xC113C8", VA = "0xC113C8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC11548", Offset = "0xC11548", VA = "0xC11548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xC1154C", Offset = "0xC1154C", VA = "0xC1154C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC115FC", Offset = "0xC115FC", VA = "0xC115FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC11204", Offset = "0xC11204", VA = "0xC11204")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC112B8", Offset = "0xC112B8", VA = "0xC112B8")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC112C0", Offset = "0xC112C0", VA = "0xC112C0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC1130C", Offset = "0xC1130C", VA = "0xC1130C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC11354", Offset = "0xC11354", VA = "0xC11354")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E174", Offset = "0xA3E174")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000351")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC113F4", Offset = "0xC113F4", VA = "0xC113F4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC1151C", Offset = "0xC1151C", VA = "0xC1151C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E1D8", Offset = "0xA3E1D8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000084")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC11668", Offset = "0xC11668", VA = "0xC11668", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC1166C", Offset = "0xC1166C", VA = "0xC1166C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC116EC", Offset = "0xC116EC", VA = "0xC116EC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000085")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37460", Offset = "0xA37460")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37498", Offset = "0xA37498")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA374D0", Offset = "0xA374D0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37508", Offset = "0xA37508")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC116F0", Offset = "0xC116F0", VA = "0xC116F0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC11760", Offset = "0xC11760", VA = "0xC11760", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC11BE8", Offset = "0xC11BE8", VA = "0xC11BE8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000086")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37540", Offset = "0xA37540")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37578", Offset = "0xA37578")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA375B0", Offset = "0xA375B0")]
	public float RotateStickThreshold;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC11BEC", Offset = "0xC11BEC", VA = "0xC11BEC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC11C30", Offset = "0xC11C30", VA = "0xC11C30", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC120A4", Offset = "0xC120A4", VA = "0xC120A4")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000087")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC120B4", Offset = "0xC120B4", VA = "0xC120B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC120B8", Offset = "0xC120B8", VA = "0xC120B8")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC120C0", Offset = "0xC120C0", VA = "0xC120C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC121A8", Offset = "0xC121A8", VA = "0xC121A8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC121D0", Offset = "0xC121D0", VA = "0xC121D0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375E8", Offset = "0xA375E8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000047")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xC121E8", Offset = "0xC121E8", VA = "0xC121E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E1E8", Offset = "0xA3E1E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xC121F0", Offset = "0xC121F0", VA = "0xC121F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E1F8", Offset = "0xA3E1F8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC0F618", Offset = "0xC0F618", VA = "0xC0F618", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC0F724", Offset = "0xC0F724", VA = "0xC0F724", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC121F8", Offset = "0xC121F8", VA = "0xC121F8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA3E208", Offset = "0xA3E208")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC0FD78", Offset = "0xC0FD78", VA = "0xC0FD78", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC0FDE4", Offset = "0xC0FDE4", VA = "0xC0FDE4", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC0F758", Offset = "0xC0F758", VA = "0xC0F758")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000089")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34584", Offset = "0xA34584")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xC1285C", Offset = "0xC1285C", VA = "0xC1285C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xC128C8", Offset = "0xC128C8", VA = "0xC128C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC12454", Offset = "0xC12454", VA = "0xC12454")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xC125F0", Offset = "0xC125F0", VA = "0xC125F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xC125F4", Offset = "0xC125F4", VA = "0xC125F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xC12864", Offset = "0xC12864", VA = "0xC12864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA375F8", Offset = "0xA375F8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400034C")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC122C0", Offset = "0xC122C0", VA = "0xC122C0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC12384", Offset = "0xC12384", VA = "0xC12384", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC123B4", Offset = "0xC123B4", VA = "0xC123B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC123E0", Offset = "0xC123E0", VA = "0xC123E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E240", Offset = "0xA3E240")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC12480", Offset = "0xC12480", VA = "0xC12480", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600036F")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xC1249C", Offset = "0xC1249C", VA = "0xC1249C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC125C4", Offset = "0xC125C4", VA = "0xC125C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E2A4", Offset = "0xA3E2A4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008A")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC128D0", Offset = "0xC128D0", VA = "0xC128D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC12930", Offset = "0xC12930", VA = "0xC12930", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC12AB8", Offset = "0xC12AB8", VA = "0xC12AB8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC12BA8", Offset = "0xC12BA8", VA = "0xC12BA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA3E2B4", Offset = "0xA3E2B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC12BAC", Offset = "0xC12BAC", VA = "0xC12BAC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200008B")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37630", Offset = "0xA37630")]
	public float LOSOffset;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37668", Offset = "0xA37668")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC12BB8", Offset = "0xC12BB8", VA = "0xC12BB8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC12DEC", Offset = "0xC12DEC", VA = "0xC12DEC")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200008C")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC12DF8", Offset = "0xC12DF8", VA = "0xC12DF8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC12F80", Offset = "0xC12F80", VA = "0xC12F80")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200008D")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC12F84", Offset = "0xC12F84", VA = "0xC12F84", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC13024", Offset = "0xC13024", VA = "0xC13024", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600037D")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC130C0", Offset = "0xC130C0", VA = "0xC130C0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34594", Offset = "0xA34594")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000259")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xC13438", Offset = "0xC13438", VA = "0xC13438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xC134A4", Offset = "0xC134A4", VA = "0xC134A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xC13168", Offset = "0xC13168", VA = "0xC13168")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xC13334", Offset = "0xC13334", VA = "0xC13334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xC13338", Offset = "0xC13338", VA = "0xC13338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xC13440", Offset = "0xC13440", VA = "0xC13440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA376A0", Offset = "0xA376A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA376A0", Offset = "0xA376A0")]
	public float TransitionDuration;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA376F8", Offset = "0xA376F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA376F8", Offset = "0xA376F8")]
	public float TeleportDelay;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3774C", Offset = "0xA3774C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC130C8", Offset = "0xC130C8", VA = "0xC130C8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC130F4", Offset = "0xC130F4", VA = "0xC130F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E2EC", Offset = "0xA3E2EC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC13194", Offset = "0xC13194", VA = "0xC13194")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC134AC", Offset = "0xC134AC", VA = "0xC134AC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC134C8", Offset = "0xC134C8", VA = "0xC134C8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345A4", Offset = "0xA345A4")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700025B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xC1371C", Offset = "0xC1371C", VA = "0xC1371C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xC13788", Offset = "0xC13788", VA = "0xC13788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xC13570", Offset = "0xC13570", VA = "0xC13570")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xC135E4", Offset = "0xC135E4", VA = "0xC135E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xC135E8", Offset = "0xC135E8", VA = "0xC135E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xC13724", Offset = "0xC13724", VA = "0xC13724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37784", Offset = "0xA37784")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37784", Offset = "0xA37784")]
	public float TransitionDuration;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xC134D0", Offset = "0xC134D0", VA = "0xC134D0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xC134FC", Offset = "0xC134FC", VA = "0xC134FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E350", Offset = "0xA3E350")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC1359C", Offset = "0xC1359C", VA = "0xC1359C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000091")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000048")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x11B7DAC", Offset = "0x11B7DAC", VA = "0x11B7DAC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000049")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x11B8068", Offset = "0x11B8068", VA = "0x11B8068")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700004A")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x11B82B4", Offset = "0x11B82B4", VA = "0x11B82B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x11B831C", Offset = "0x11B831C", VA = "0x11B831C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	public static long Duration
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x11B840C", Offset = "0x11B840C", VA = "0x11B840C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x11B8500", Offset = "0x11B8500", VA = "0x11B8500")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x11B85F4", Offset = "0x11B85F4", VA = "0x11B85F4")]
		set
		{
		}
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x11B6B64", Offset = "0x11B6B64", VA = "0x11B6B64")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x11B873C", Offset = "0x11B873C", VA = "0x11B873C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x11B8830", Offset = "0x11B8830", VA = "0x11B8830")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x11B8924", Offset = "0x11B8924", VA = "0x11B8924")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x11B8A18", Offset = "0x11B8A18", VA = "0x11B8A18")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x11B6D60", Offset = "0x11B6D60", VA = "0x11B6D60")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x11B8B68", Offset = "0x11B8B68", VA = "0x11B8B68")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000092")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000015")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xD0ABFC", Offset = "0xD0ABFC", VA = "0xD0ABFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E3B4", Offset = "0xA3E3B4")]
		add
		{
		}
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xD0ACA0", Offset = "0xD0ACA0", VA = "0xD0ACA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E3C4", Offset = "0xA3E3C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xD0AD44", Offset = "0xD0AD44", VA = "0xD0AD44", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xD0AD58", Offset = "0xD0AD58", VA = "0xD0AD58")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000093")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20002D1")]
	public enum ButtonType
	{
		[Token(Token = "0x400116A")]
		Play,
		[Token(Token = "0x400116B")]
		Pause,
		[Token(Token = "0x400116C")]
		FastForward,
		[Token(Token = "0x400116D")]
		Rewind,
		[Token(Token = "0x400116E")]
		SkipForward,
		[Token(Token = "0x400116F")]
		SkipBack,
		[Token(Token = "0x4001170")]
		Stop
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700004E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xD9F0F4", Offset = "0xD9F0F4", VA = "0xD9F0F4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xD9F0FC", Offset = "0xD9F0FC", VA = "0xD9F0FC")]
		set
		{
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD9F120", Offset = "0xD9F120", VA = "0xD9F120", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xDA05F0", Offset = "0xDA05F0", VA = "0xDA05F0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000094")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20002D2")]
	public enum VideoShape
	{
		[Token(Token = "0x4001172")]
		_360,
		[Token(Token = "0x4001173")]
		_180,
		[Token(Token = "0x4001174")]
		Quad
	}

	[Token(Token = "0x20002D3")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001176")]
		Mono,
		[Token(Token = "0x4001177")]
		TopBottom,
		[Token(Token = "0x4001178")]
		LeftRight
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345B4", Offset = "0xA345B4")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700025D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x11B706C", Offset = "0x11B706C", VA = "0x11B706C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x11B70D8", Offset = "0x11B70D8", VA = "0x11B70D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x11B6EAC", Offset = "0x11B6EAC", VA = "0x11B6EAC")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x11B6ED8", Offset = "0x11B6ED8", VA = "0x11B6ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x11B6EDC", Offset = "0x11B6EDC", VA = "0x11B6EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x11B7074", Offset = "0x11B7074", VA = "0x11B7074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345C4", Offset = "0xA345C4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x11B6A84", Offset = "0x11B6A84", VA = "0x11B6A84")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x11B6A8C", Offset = "0x11B6A8C", VA = "0x11B6A8C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3780C", Offset = "0xA3780C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3781C", Offset = "0xA3781C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3782C", Offset = "0xA3782C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700004F")]
	public bool IsPlaying
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xDA0A20", Offset = "0xDA0A20", VA = "0xDA0A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E3D4", Offset = "0xA3E3D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xDA0A28", Offset = "0xDA0A28", VA = "0xDA0A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E3E4", Offset = "0xA3E3E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public long Duration
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xDA0A34", Offset = "0xDA0A34", VA = "0xDA0A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E3F4", Offset = "0xA3E3F4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xDA0A3C", Offset = "0xDA0A3C", VA = "0xDA0A3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E404", Offset = "0xA3E404")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xDA0A44", Offset = "0xDA0A44", VA = "0xDA0A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E414", Offset = "0xA3E414")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xDA0A4C", Offset = "0xDA0A4C", VA = "0xDA0A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E424", Offset = "0xA3E424")]
		private set
		{
		}
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDA0A54", Offset = "0xDA0A54", VA = "0xDA0A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDA0C78", Offset = "0xDA0C78", VA = "0xDA0C78")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDA0CE4", Offset = "0xDA0CE4", VA = "0xDA0CE4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDA0F38", Offset = "0xDA0F38", VA = "0xDA0F38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E434", Offset = "0xA3E434")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xDA0FAC", Offset = "0xDA0FAC", VA = "0xDA0FAC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xDA11EC", Offset = "0xDA11EC", VA = "0xDA11EC")]
	public void Play()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xDA1288", Offset = "0xDA1288", VA = "0xDA1288")]
	public void Pause()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xDA1320", Offset = "0xDA1320", VA = "0xDA1320")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDA1420", Offset = "0xDA1420", VA = "0xDA1420")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDA1974", Offset = "0xDA1974", VA = "0xDA1974")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xDA1A54", Offset = "0xDA1A54", VA = "0xDA1A54")]
	public void Stop()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDA1AEC", Offset = "0xDA1AEC", VA = "0xDA1AEC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDA1BD4", Offset = "0xDA1BD4", VA = "0xDA1BD4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000095")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20002D6")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001180")]
		Playing,
		[Token(Token = "0x4001181")]
		Paused,
		[Token(Token = "0x4001182")]
		Rewinding,
		[Token(Token = "0x4001183")]
		FastForwarding
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x11B70E0", Offset = "0x11B70E0", VA = "0x11B70E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x11B73A0", Offset = "0x11B73A0", VA = "0x11B73A0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x11B74DC", Offset = "0x11B74DC", VA = "0x11B74DC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x11B7608", Offset = "0x11B7608", VA = "0x11B7608")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11B76FC", Offset = "0x11B76FC", VA = "0x11B76FC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x11B75D4", Offset = "0x11B75D4", VA = "0x11B75D4")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11B77C8", Offset = "0x11B77C8", VA = "0x11B77C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11B728C", Offset = "0x11B728C", VA = "0x11B728C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11B7BCC", Offset = "0x11B7BCC", VA = "0x11B7BCC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000096")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA336F4", Offset = "0xA336F4")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	private enum CubeFace
	{
		[Token(Token = "0x4001185")]
		Right,
		[Token(Token = "0x4001186")]
		Left,
		[Token(Token = "0x4001187")]
		Top,
		[Token(Token = "0x4001188")]
		Bottom,
		[Token(Token = "0x4001189")]
		Front,
		[Token(Token = "0x400118A")]
		Back,
		[Token(Token = "0x400118B")]
		COUNT
	}

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x11CC718", Offset = "0x11CC718", VA = "0x11CC718")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x11CC878", Offset = "0x11CC878", VA = "0x11CC878")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11CCA34", Offset = "0x11CCA34", VA = "0x11CCA34")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11CCF20", Offset = "0x11CCF20", VA = "0x11CCF20")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x11CD1F8", Offset = "0x11CD1F8", VA = "0x11CD1F8")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x11CE478", Offset = "0x11CE478", VA = "0x11CE478")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x11CE4D8", Offset = "0x11CE4D8", VA = "0x11CE4D8")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x11CD578", Offset = "0x11CD578", VA = "0x11CD578")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x11CE5C0", Offset = "0x11CE5C0", VA = "0x11CE5C0")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11CE7AC", Offset = "0x11CE7AC", VA = "0x11CE7AC")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x11CDA40", Offset = "0x11CDA40", VA = "0x11CDA40")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x11CDD74", Offset = "0x11CDD74", VA = "0x11CDD74")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x11CE0D0", Offset = "0x11CE0D0", VA = "0x11CE0D0")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x11CE968", Offset = "0x11CE968", VA = "0x11CE968")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000097")]
public static class VectorUtil
{
	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xC14824", Offset = "0xC14824", VA = "0xC14824")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000098")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC42FFC", Offset = "0xC42FFC", VA = "0xC42FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC433F4", Offset = "0xC433F4", VA = "0xC433F4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC434B0", Offset = "0xC434B0", VA = "0xC434B0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC436B8", Offset = "0xC436B8", VA = "0xC436B8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC437A4", Offset = "0xC437A4", VA = "0xC437A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC43880", Offset = "0xC43880", VA = "0xC43880")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC438EC", Offset = "0xC438EC", VA = "0xC438EC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC438F4", Offset = "0xC438F4", VA = "0xC438F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E4A8", Offset = "0xA3E4A8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC43950", Offset = "0xC43950", VA = "0xC43950")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E4B8", Offset = "0xA3E4B8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC439AC", Offset = "0xC439AC", VA = "0xC439AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E4C8", Offset = "0xA3E4C8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC43A08", Offset = "0xC43A08", VA = "0xC43A08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E4D8", Offset = "0xA3E4D8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000099")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345D4", Offset = "0xA345D4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xC4D20C", Offset = "0xC4D20C", VA = "0xC4D20C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0xC4D278", Offset = "0xC4D278", VA = "0xC4D278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xC4D0B8", Offset = "0xC4D0B8", VA = "0xC4D0B8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xC4D0EC", Offset = "0xC4D0EC", VA = "0xC4D0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xC4D0F0", Offset = "0xC4D0F0", VA = "0xC4D0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xC4D214", Offset = "0xC4D214", VA = "0xC4D214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC4CDB0", Offset = "0xC4CDB0", VA = "0xC4CDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC4CEB4", Offset = "0xC4CEB4", VA = "0xC4CEB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC4CE40", Offset = "0xC4CE40", VA = "0xC4CE40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E4E8", Offset = "0xA3E4E8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC4D0E4", Offset = "0xC4D0E4", VA = "0xC4D0E4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200009A")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3784C", Offset = "0xA3784C")]
	public int SubdivisionsU;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37868", Offset = "0xA37868")]
	public int SubdivisionsV;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xD0D9B0", Offset = "0xD0D9B0", VA = "0xD0D9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xD0E470", Offset = "0xD0E470", VA = "0xD0E470")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200009B")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000052")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD9BD2C", Offset = "0xD9BD2C", VA = "0xD9BD2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xD9BD84", Offset = "0xD9BD84", VA = "0xD9BD84")]
	public void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xD9C0D4", Offset = "0xD9C0D4", VA = "0xD9C0D4")]
	public void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xD9C1B8", Offset = "0xD9C1B8", VA = "0xD9C1B8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA3E54C", Offset = "0xA3E54C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60003DF")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60003E1")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60003E2")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60003E3")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60003E4")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60003E5")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60003E6")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD9C220", Offset = "0xD9C220", VA = "0xD9C220")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD9C260", Offset = "0xD9C260", VA = "0xD9C260")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD9C2D4", Offset = "0xD9C2D4", VA = "0xD9C2D4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD9C438", Offset = "0xD9C438", VA = "0xD9C438")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xD9C518", Offset = "0xD9C518", VA = "0xD9C518")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xD9BFD8", Offset = "0xD9BFD8", VA = "0xD9BFD8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xD9C5DC", Offset = "0xD9C5DC", VA = "0xD9C5DC")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xD9C64C", Offset = "0xD9C64C", VA = "0xD9C64C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xD9C730", Offset = "0xD9C730", VA = "0xD9C730")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33788", Offset = "0xA33788")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	public enum DrawMode
	{
		[Token(Token = "0x4001190")]
		Opaque,
		[Token(Token = "0x4001191")]
		OpaqueWithClip,
		[Token(Token = "0x4001192")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001193")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000053")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x11CC4F4", Offset = "0x11CC4F4", VA = "0x11CC4F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x11CC588", Offset = "0x11CC588", VA = "0x11CC588")]
		set
		{
		}
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x11CAE6C", Offset = "0x11CAE6C", VA = "0x11CAE6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x11CBAE8", Offset = "0x11CBAE8", VA = "0x11CBAE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x11CBB6C", Offset = "0x11CBB6C", VA = "0x11CBB6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x11CBC60", Offset = "0x11CBC60", VA = "0x11CBC60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x11CBD54", Offset = "0x11CBD54", VA = "0x11CBD54", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x11CBF5C", Offset = "0x11CBF5C", VA = "0x11CBF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x11CC664", Offset = "0x11CC664", VA = "0x11CC664")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200009D")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345E4", Offset = "0xA345E4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xC0E98C", Offset = "0xC0E98C", VA = "0xC0E98C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC0EA7C", Offset = "0xC0EA7C", VA = "0xC0EA7C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC0E7E4", Offset = "0xC0E7E4", VA = "0xC0E7E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC0E994", Offset = "0xC0E994", VA = "0xC0E994")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC0EA74", Offset = "0xC0EA74", VA = "0xC0EA74")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA337EC", Offset = "0xA337EC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20002DB")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001197")]
		MouseXAndY,
		[Token(Token = "0x4001198")]
		MouseX,
		[Token(Token = "0x4001199")]
		MouseY
	}

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDA06D8", Offset = "0xDA06D8", VA = "0xDA06D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDA0940", Offset = "0xDA0940", VA = "0xDA0940")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xDA0A00", Offset = "0xDA0A00", VA = "0xDA0A00")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200009F")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000A0")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x11CA6D8", Offset = "0x11CA6D8", VA = "0x11CA6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x11CA6DC", Offset = "0x11CA6DC", VA = "0x11CA6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x11CA6E0", Offset = "0x11CA6E0", VA = "0x11CA6E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x11CA850", Offset = "0x11CA850", VA = "0x11CA850")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x11CA730", Offset = "0x11CA730", VA = "0x11CA730")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x11CA7C4", Offset = "0x11CA7C4", VA = "0x11CA7C4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x11CA8A0", Offset = "0x11CA8A0", VA = "0x11CA8A0")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x11CA938", Offset = "0x11CA938", VA = "0x11CA938")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x11CAAA0", Offset = "0x11CAAA0", VA = "0x11CAAA0")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x11CAC08", Offset = "0x11CAC08", VA = "0x11CAC08")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20002DC")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40003EB")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003F1")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD47DF8", Offset = "0xD47DF8", VA = "0xD47DF8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xD47E30", Offset = "0xD47E30", VA = "0xD47E30")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xD48000", Offset = "0xD48000", VA = "0xD48000")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD480B4", Offset = "0xD480B4", VA = "0xD480B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD481C0", Offset = "0xD481C0", VA = "0xD481C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xD48B9C", Offset = "0xD48B9C", VA = "0xD48B9C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000411")]
	[Address(RVA = "0xD48094", Offset = "0xD48094", VA = "0xD48094")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000412")]
	[Address(RVA = "0xD48118", Offset = "0xD48118", VA = "0xD48118")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000413")]
	[Address(RVA = "0xD48898", Offset = "0xD48898", VA = "0xD48898")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000414")]
	[Address(RVA = "0xD48930", Offset = "0xD48930", VA = "0xD48930")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000415")]
	[Address(RVA = "0xD489CC", Offset = "0xD489CC", VA = "0xD489CC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000416")]
	[Address(RVA = "0xD48A68", Offset = "0xD48A68", VA = "0xD48A68")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000417")]
	[Address(RVA = "0xD48B00", Offset = "0xD48B00", VA = "0xD48B00")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000418")]
	[Address(RVA = "0xD499D8", Offset = "0xD499D8", VA = "0xD499D8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000419")]
	[Address(RVA = "0xD49A98", Offset = "0xD49A98", VA = "0xD49A98")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xD49B58", Offset = "0xD49B58", VA = "0xD49B58")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000A2")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20002DD")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400119B")]
		Uninitialized = -1,
		[Token(Token = "0x400119C")]
		NotEnabled,
		[Token(Token = "0x400119D")]
		Success,
		[Token(Token = "0x400119E")]
		StreamError,
		[Token(Token = "0x400119F")]
		ProcessError,
		[Token(Token = "0x40011A0")]
		MaxStatValue
	}

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000054")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x11B9E28", Offset = "0x11B9E28", VA = "0x11B9E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x11B9E30", Offset = "0x11B9E30", VA = "0x11B9E30")]
		set
		{
		}
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x11B9E3C", Offset = "0x11B9E3C", VA = "0x11B9E3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x11BA05C", Offset = "0x11BA05C", VA = "0x11BA05C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x11BA2BC", Offset = "0x11BA2BC", VA = "0x11BA2BC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	private enum Parameters
	{
		[Token(Token = "0x40011A2")]
		P_GAIN,
		[Token(Token = "0x40011A3")]
		P_USEINVSQR,
		[Token(Token = "0x40011A4")]
		P_NEAR,
		[Token(Token = "0x40011A5")]
		P_FAR,
		[Token(Token = "0x40011A6")]
		P_RADIUS,
		[Token(Token = "0x40011A7")]
		P_DISABLE_RFL,
		[Token(Token = "0x40011A8")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40011A9")]
		P_AMBISTAT,
		[Token(Token = "0x40011AA")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40011AB")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40011AC")]
		P_SENDLEVEL,
		[Token(Token = "0x40011AD")]
		P_NUM
	}

	[Token(Token = "0x40003F7")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000055")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x11BA658", Offset = "0x11BA658", VA = "0x11BA658")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x11BA660", Offset = "0x11BA660", VA = "0x11BA660")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float Gain
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x11BA66C", Offset = "0x11BA66C", VA = "0x11BA66C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x11BA674", Offset = "0x11BA674", VA = "0x11BA674")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x11BA6F8", Offset = "0x11BA6F8", VA = "0x11BA6F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x11BA700", Offset = "0x11BA700", VA = "0x11BA700")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float Near
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x11BA70C", Offset = "0x11BA70C", VA = "0x11BA70C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x11BA714", Offset = "0x11BA714", VA = "0x11BA714")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float Far
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x11BA79C", Offset = "0x11BA79C", VA = "0x11BA79C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x11BA7A4", Offset = "0x11BA7A4", VA = "0x11BA7A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x11BA82C", Offset = "0x11BA82C", VA = "0x11BA82C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x11BA834", Offset = "0x11BA834", VA = "0x11BA834")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public float ReverbSend
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x11BA8BC", Offset = "0x11BA8BC", VA = "0x11BA8BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x11BA8C4", Offset = "0x11BA8C4", VA = "0x11BA8C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x11BA94C", Offset = "0x11BA94C", VA = "0x11BA94C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x11BA954", Offset = "0x11BA954", VA = "0x11BA954")]
		set
		{
		}
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x11BA340", Offset = "0x11BA340", VA = "0x11BA340")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3E584", Offset = "0xA3E584")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000423")]
	[Address(RVA = "0x11BA560", Offset = "0x11BA560", VA = "0x11BA560")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x11BA960", Offset = "0x11BA960", VA = "0x11BA960")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x11BAAD8", Offset = "0x11BAAD8", VA = "0x11BAAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x11BAADC", Offset = "0x11BAADC", VA = "0x11BAADC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x11BA9CC", Offset = "0x11BA9CC", VA = "0x11BA9CC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x11BABA8", Offset = "0x11BABA8", VA = "0x11BABA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x11BB008", Offset = "0x11BB008", VA = "0x11BB008")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600043A")]
	[Address(RVA = "0x11BA4C8", Offset = "0x11BA4C8", VA = "0x11BA4C8")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x11BB0D8", Offset = "0x11BB0D8", VA = "0x11BB0D8")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000402")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000404")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x11BB0F8", Offset = "0x11BB0F8", VA = "0x11BB0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x11BB104", Offset = "0x11BB104", VA = "0x11BB104")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600043F")]
	[Address(RVA = "0x11BB1D4", Offset = "0x11BB1D4", VA = "0x11BB1D4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000440")]
	[Address(RVA = "0x11BB13C", Offset = "0x11BB13C", VA = "0x11BB13C")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x11BB26C", Offset = "0x11BB26C", VA = "0x11BB26C")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A5")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20002DF")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20002E0")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400040B")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700005D")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x11BE134", Offset = "0x11BE134", VA = "0x11BE134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public string filePath
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x11BE1C0", Offset = "0x11BE1C0", VA = "0x11BE1C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x11BE238", Offset = "0x11BE238", VA = "0x11BE238")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x11BE374", Offset = "0x11BE374", VA = "0x11BE374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x11BE378", Offset = "0x11BE378", VA = "0x11BE378")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x11BE8E8", Offset = "0x11BE8E8", VA = "0x11BE8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x11BEC8C", Offset = "0x11BEC8C", VA = "0x11BEC8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x11BEDEC", Offset = "0x11BEDEC", VA = "0x11BEDEC")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x11BF4B4", Offset = "0x11BF4B4", VA = "0x11BF4B4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x11BF500", Offset = "0x11BF500", VA = "0x11BF500")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x11C0E70", Offset = "0x11C0E70", VA = "0x11C0E70")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x11C0D44", Offset = "0x11C0D44", VA = "0x11C0D44")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x11BE71C", Offset = "0x11BE71C", VA = "0x11BE71C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x11BE548", Offset = "0x11BE548", VA = "0x11BE548")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x11C1484", Offset = "0x11C1484", VA = "0x11C1484")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x11C18CC", Offset = "0x11C18CC", VA = "0x11C18CC")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000A6")]
internal class ONSPPropagation
{
	[Token(Token = "0x20002E1")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40011B4")]
		Int8,
		[Token(Token = "0x40011B5")]
		UInt8,
		[Token(Token = "0x40011B6")]
		Int16,
		[Token(Token = "0x40011B7")]
		UInt16,
		[Token(Token = "0x40011B8")]
		Int32,
		[Token(Token = "0x40011B9")]
		UInt32,
		[Token(Token = "0x40011BA")]
		Int64,
		[Token(Token = "0x40011BB")]
		UInt64,
		[Token(Token = "0x40011BC")]
		Float16,
		[Token(Token = "0x40011BD")]
		Float32,
		[Token(Token = "0x40011BE")]
		Float64
	}

	[Token(Token = "0x20002E2")]
	public class ClientType
	{
		[Token(Token = "0x40011BF")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40011C0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40011C1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40011C2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40011C3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40011C4")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40011C5")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40011C6")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40011C7")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40011C8")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40011C9")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40011CA")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40011CB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40011CC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40011CD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x11BB758", Offset = "0x11BB758", VA = "0x11BB758")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20002E3")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60015A4")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60015A5")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60015A6")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60015A7")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60015A8")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60015A9")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60015AA")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60015AB")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015AC")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015AD")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60015AE")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60015AF")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60015B0")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60015B1")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60015B2")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20002E4")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40011CE")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000261")]
		private IntPtr context
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x11BC51C", Offset = "0x11BC51C", VA = "0x11BC51C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x11BC580", Offset = "0x11BC580", VA = "0x11BC580")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x11BC628", Offset = "0x11BC628", VA = "0x11BC628")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x11BC6D0", Offset = "0x11BC6D0", VA = "0x11BC6D0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x11BC6F4", Offset = "0x11BC6F4", VA = "0x11BC6F4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x11BC79C", Offset = "0x11BC79C", VA = "0x11BC79C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x11BC7C0", Offset = "0x11BC7C0", VA = "0x11BC7C0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x11BC864", Offset = "0x11BC864", VA = "0x11BC864", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x11BC888", Offset = "0x11BC888", VA = "0x11BC888")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x11BC920", Offset = "0x11BC920", VA = "0x11BC920", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x11BC928", Offset = "0x11BC928", VA = "0x11BC928")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x11BCA4C", Offset = "0x11BCA4C", VA = "0x11BCA4C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x11BCB44", Offset = "0x11BCB44", VA = "0x11BCB44")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x11BCBF4", Offset = "0x11BCBF4", VA = "0x11BCBF4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x11BCC00", Offset = "0x11BCC00", VA = "0x11BCC00")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x11BCD44", Offset = "0x11BCD44", VA = "0x11BCD44", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x11BCD50", Offset = "0x11BCD50", VA = "0x11BCD50")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x11BCE14", Offset = "0x11BCE14", VA = "0x11BCE14", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x11BCE20", Offset = "0x11BCE20", VA = "0x11BCE20")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x11BCEE4", Offset = "0x11BCEE4", VA = "0x11BCEE4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x11BCEF0", Offset = "0x11BCEF0", VA = "0x11BCEF0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x11BCFB4", Offset = "0x11BCFB4", VA = "0x11BCFB4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x11BCFC0", Offset = "0x11BCFC0", VA = "0x11BCFC0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x11BD064", Offset = "0x11BD064", VA = "0x11BD064", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x11BD088", Offset = "0x11BD088", VA = "0x11BD088")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x11BD120", Offset = "0x11BD120", VA = "0x11BD120", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x11BD128", Offset = "0x11BD128", VA = "0x11BD128")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x11BD1E8", Offset = "0x11BD1E8", VA = "0x11BD1E8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x11BD1F4", Offset = "0x11BD1F4", VA = "0x11BD1F4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x11BD2B4", Offset = "0x11BD2B4", VA = "0x11BD2B4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x11BD2C4", Offset = "0x11BD2C4", VA = "0x11BD2C4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x11BD36C", Offset = "0x11BD36C", VA = "0x11BD36C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x11BB704", Offset = "0x11BB704", VA = "0x11BB704")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40011D0")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000262")]
		private IntPtr context
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x11BD378", Offset = "0x11BD378", VA = "0x11BD378")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x11BB51C", Offset = "0x11BB51C", VA = "0x11BB51C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x11BD3DC", Offset = "0x11BD3DC", VA = "0x11BD3DC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x11BD484", Offset = "0x11BD484", VA = "0x11BD484", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x11BD4A8", Offset = "0x11BD4A8", VA = "0x11BD4A8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x11BD550", Offset = "0x11BD550", VA = "0x11BD550", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x11BD574", Offset = "0x11BD574", VA = "0x11BD574")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x11BD61C", Offset = "0x11BD61C", VA = "0x11BD61C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x11BD640", Offset = "0x11BD640", VA = "0x11BD640")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x11BD6D8", Offset = "0x11BD6D8", VA = "0x11BD6D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x11BD6E0", Offset = "0x11BD6E0", VA = "0x11BD6E0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x11BD804", Offset = "0x11BD804", VA = "0x11BD804", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x11BD8FC", Offset = "0x11BD8FC", VA = "0x11BD8FC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x11BD9AC", Offset = "0x11BD9AC", VA = "0x11BD9AC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x11BD9B8", Offset = "0x11BD9B8", VA = "0x11BD9B8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x11BDAFC", Offset = "0x11BDAFC", VA = "0x11BDAFC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x11BDB08", Offset = "0x11BDB08", VA = "0x11BDB08")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x11BDBCC", Offset = "0x11BDBCC", VA = "0x11BDBCC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x11BDBD8", Offset = "0x11BDBD8", VA = "0x11BDBD8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x11BDC9C", Offset = "0x11BDC9C", VA = "0x11BDC9C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x11BDCA8", Offset = "0x11BDCA8", VA = "0x11BDCA8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x11BDD6C", Offset = "0x11BDD6C", VA = "0x11BDD6C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x11BDD78", Offset = "0x11BDD78", VA = "0x11BDD78")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x11BDE20", Offset = "0x11BDE20", VA = "0x11BDE20", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x11BDE44", Offset = "0x11BDE44", VA = "0x11BDE44")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x11BDEDC", Offset = "0x11BDEDC", VA = "0x11BDEDC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x11BDEE4", Offset = "0x11BDEE4", VA = "0x11BDEE4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x11BDFA4", Offset = "0x11BDFA4", VA = "0x11BDFA4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x11BDFB0", Offset = "0x11BDFB0", VA = "0x11BDFB0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x11BE070", Offset = "0x11BE070", VA = "0x11BE070", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x11BE080", Offset = "0x11BE080", VA = "0x11BE080")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x11BE128", Offset = "0x11BE128", VA = "0x11BE128", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x11BB5C4", Offset = "0x11BB5C4", VA = "0x11BB5C4")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40011D2")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000263")]
		private IntPtr context
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x11BB760", Offset = "0x11BB760", VA = "0x11BB760")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x11BB610", Offset = "0x11BB610", VA = "0x11BB610")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x11BB7C4", Offset = "0x11BB7C4", VA = "0x11BB7C4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x11BB86C", Offset = "0x11BB86C", VA = "0x11BB86C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x11BB890", Offset = "0x11BB890", VA = "0x11BB890")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x11BB938", Offset = "0x11BB938", VA = "0x11BB938", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x11BB95C", Offset = "0x11BB95C", VA = "0x11BB95C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x11BBA04", Offset = "0x11BBA04", VA = "0x11BBA04", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x11BBA28", Offset = "0x11BBA28", VA = "0x11BBA28")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x11BBAC0", Offset = "0x11BBAC0", VA = "0x11BBAC0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x11BBAC8", Offset = "0x11BBAC8", VA = "0x11BBAC8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x11BBBEC", Offset = "0x11BBBEC", VA = "0x11BBBEC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001601")]
		[Address(RVA = "0x11BBCE4", Offset = "0x11BBCE4", VA = "0x11BBCE4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x11BBD94", Offset = "0x11BBD94", VA = "0x11BBD94", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001603")]
		[Address(RVA = "0x11BBDA0", Offset = "0x11BBDA0", VA = "0x11BBDA0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x11BBEE4", Offset = "0x11BBEE4", VA = "0x11BBEE4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x11BBEF0", Offset = "0x11BBEF0", VA = "0x11BBEF0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x11BBFB4", Offset = "0x11BBFB4", VA = "0x11BBFB4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001607")]
		[Address(RVA = "0x11BBFC0", Offset = "0x11BBFC0", VA = "0x11BBFC0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x11BC084", Offset = "0x11BC084", VA = "0x11BC084", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x11BC090", Offset = "0x11BC090", VA = "0x11BC090")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x11BC154", Offset = "0x11BC154", VA = "0x11BC154", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x11BC160", Offset = "0x11BC160", VA = "0x11BC160")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x11BC208", Offset = "0x11BC208", VA = "0x11BC208", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160D")]
		[Address(RVA = "0x11BC22C", Offset = "0x11BC22C", VA = "0x11BC22C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x11BC2C4", Offset = "0x11BC2C4", VA = "0x11BC2C4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x11BC2CC", Offset = "0x11BC2CC", VA = "0x11BC2CC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x11BC38C", Offset = "0x11BC38C", VA = "0x11BC38C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001611")]
		[Address(RVA = "0x11BC398", Offset = "0x11BC398", VA = "0x11BC398")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x11BC458", Offset = "0x11BC458", VA = "0x11BC458", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001613")]
		[Address(RVA = "0x11BC468", Offset = "0x11BC468", VA = "0x11BC468")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x11BC510", Offset = "0x11BC510", VA = "0x11BC510", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x11BB6B8", Offset = "0x11BB6B8", VA = "0x11BB6B8")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005F")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x11BB27C", Offset = "0x11BB27C", VA = "0x11BB27C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x11BB2EC", Offset = "0x11BB2EC", VA = "0x11BB2EC")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x11BB750", Offset = "0x11BB750", VA = "0x11BB750")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	public enum Preset
	{
		[Token(Token = "0x40011D5")]
		Custom,
		[Token(Token = "0x40011D6")]
		AcousticTile,
		[Token(Token = "0x40011D7")]
		Brick,
		[Token(Token = "0x40011D8")]
		BrickPainted,
		[Token(Token = "0x40011D9")]
		Carpet,
		[Token(Token = "0x40011DA")]
		CarpetHeavy,
		[Token(Token = "0x40011DB")]
		CarpetHeavyPadded,
		[Token(Token = "0x40011DC")]
		CeramicTile,
		[Token(Token = "0x40011DD")]
		Concrete,
		[Token(Token = "0x40011DE")]
		ConcreteRough,
		[Token(Token = "0x40011DF")]
		ConcreteBlock,
		[Token(Token = "0x40011E0")]
		ConcreteBlockPainted,
		[Token(Token = "0x40011E1")]
		Curtain,
		[Token(Token = "0x40011E2")]
		Foliage,
		[Token(Token = "0x40011E3")]
		Glass,
		[Token(Token = "0x40011E4")]
		GlassHeavy,
		[Token(Token = "0x40011E5")]
		Grass,
		[Token(Token = "0x40011E6")]
		Gravel,
		[Token(Token = "0x40011E7")]
		GypsumBoard,
		[Token(Token = "0x40011E8")]
		PlasterOnBrick,
		[Token(Token = "0x40011E9")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40011EA")]
		Soil,
		[Token(Token = "0x40011EB")]
		SoundProof,
		[Token(Token = "0x40011EC")]
		Snow,
		[Token(Token = "0x40011ED")]
		Steel,
		[Token(Token = "0x40011EE")]
		Water,
		[Token(Token = "0x40011EF")]
		WoodThin,
		[Token(Token = "0x40011F0")]
		WoodThick,
		[Token(Token = "0x40011F1")]
		WoodFloor,
		[Token(Token = "0x40011F2")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20002E8")]
	public sealed class Point
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x11C9F8C", Offset = "0x11C9F8C", VA = "0x11C9F8C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x11CA0D4", Offset = "0x11CA0D4", VA = "0x11CA0D4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x11CA144", Offset = "0x11CA144", VA = "0x11CA144")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA345F4", Offset = "0xA345F4")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3570C", Offset = "0xA3570C")]
		private sealed class <>c
		{
			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x11CA5B8", Offset = "0x11CA5B8", VA = "0x11CA5B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x11CA5C0", Offset = "0x11CA5C0", VA = "0x11CA5C0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0x11CA5DC", Offset = "0x11CA5DC", VA = "0x11CA5DC")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000264")]
		public float Item
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x11CA17C", Offset = "0x11CA17C", VA = "0x11CA17C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x11CA05C", Offset = "0x11CA05C", VA = "0x11CA05C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37984", Offset = "0xA37984")]
	public Spectrum absorption;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA379BC", Offset = "0xA379BC")]
	public Spectrum transmission;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA379F4", Offset = "0xA379F4")]
	public Spectrum scattering;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000060")]
	public Preset preset
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x11C19A4", Offset = "0x11C19A4", VA = "0x11C19A4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x11C19AC", Offset = "0x11C19AC", VA = "0x11C19AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x11C19D4", Offset = "0x11C19D4", VA = "0x11C19D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x11C1314", Offset = "0x11C1314", VA = "0x11C1314")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x11C1FDC", Offset = "0x11C1FDC", VA = "0x11C1FDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x11C1FE0", Offset = "0x11C1FE0", VA = "0x11C1FE0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x11C19D8", Offset = "0x11C19D8", VA = "0x11C19D8")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x11C0BB0", Offset = "0x11C0BB0", VA = "0x11C0BB0")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x11C20C4", Offset = "0x11C20C4", VA = "0x11C20C4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x11C2564", Offset = "0x11C2564", VA = "0x11C2564")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x11C2A0C", Offset = "0x11C2A0C", VA = "0x11C2A0C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x11C2EB4", Offset = "0x11C2EB4", VA = "0x11C2EB4")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x11C3360", Offset = "0x11C3360", VA = "0x11C3360")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x11C3804", Offset = "0x11C3804", VA = "0x11C3804")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x11C3CA8", Offset = "0x11C3CA8", VA = "0x11C3CA8")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x11C4154", Offset = "0x11C4154", VA = "0x11C4154")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x11C4600", Offset = "0x11C4600", VA = "0x11C4600")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x11C4AA8", Offset = "0x11C4AA8", VA = "0x11C4AA8")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x11C4F54", Offset = "0x11C4F54", VA = "0x11C4F54")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x11C5400", Offset = "0x11C5400", VA = "0x11C5400")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x11C58A4", Offset = "0x11C58A4", VA = "0x11C58A4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x11C5D48", Offset = "0x11C5D48", VA = "0x11C5D48")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x11C61EC", Offset = "0x11C61EC", VA = "0x11C61EC")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x11C6698", Offset = "0x11C6698", VA = "0x11C6698")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x11C6A04", Offset = "0x11C6A04", VA = "0x11C6A04")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x11C6D68", Offset = "0x11C6D68", VA = "0x11C6D68")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x11C7214", Offset = "0x11C7214", VA = "0x11C7214")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x11C76BC", Offset = "0x11C76BC", VA = "0x11C76BC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x11C7B64", Offset = "0x11C7B64", VA = "0x11C7B64")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x11C7ECC", Offset = "0x11C7ECC", VA = "0x11C7ECC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x11C8028", Offset = "0x11C8028", VA = "0x11C8028")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x11C838C", Offset = "0x11C838C", VA = "0x11C838C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x11C8834", Offset = "0x11C8834", VA = "0x11C8834")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x11C8CE0", Offset = "0x11C8CE0", VA = "0x11C8CE0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x11C9188", Offset = "0x11C9188", VA = "0x11C9188")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x11C9634", Offset = "0x11C9634", VA = "0x11C9634")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x11C9AE0", Offset = "0x11C9AE0", VA = "0x11C9AE0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x11C9FC4", Offset = "0x11C9FC4", VA = "0x11C9FC4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x11CA5F8", Offset = "0x11CA5F8", VA = "0x11CA5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11CA6C8", Offset = "0x11CA6C8", VA = "0x11CA6C8")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000A9")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000061")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x11BA3B4", Offset = "0x11BA3B4", VA = "0x11BA3B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11CAC90", Offset = "0x11CAC90", VA = "0x11CAC90")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000416")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11CACA0", Offset = "0x11CACA0", VA = "0x11CACA0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11CAD50", Offset = "0x11CAD50", VA = "0x11CAD50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x11CAE5C", Offset = "0x11CAE5C", VA = "0x11CAE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x11CAE60", Offset = "0x11CAE60", VA = "0x11CAE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x11CAE64", Offset = "0x11CAE64", VA = "0x11CAE64")]
	public ONSPVersion()
	{
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000AB")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000418")]
		TRIANGLES,
		[Token(Token = "0x4000419")]
		QUADS
	}
	[Token(Token = "0x20000AC")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400041B")]
		ABSORPTION,
		[Token(Token = "0x400041C")]
		TRANSMISSION,
		[Token(Token = "0x400041D")]
		SCATTERING
	}
	[Token(Token = "0x20000AD")]
	public struct MeshGroup
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000AE")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000062")]
		public bool Highlight
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0xD37608", Offset = "0xD37608", VA = "0xD37608")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000486")]
			[Address(RVA = "0xD37610", Offset = "0xD37610", VA = "0xD37610")]
			set
			{
			}
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xD3761C", Offset = "0xD3761C", VA = "0xD3761C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xD377F4", Offset = "0xD377F4", VA = "0xD377F4", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xD3781C", Offset = "0xD3781C", VA = "0xD3781C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xD37844", Offset = "0xD37844", VA = "0xD37844")]
		private void Awake()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xD376E8", Offset = "0xD376E8", VA = "0xD376E8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xD37AB8", Offset = "0xD37AB8", VA = "0xD37AB8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000063")]
		public bool InRange
		{
			[Token(Token = "0x600048E")]
			[Address(RVA = "0xD38250", Offset = "0xD38250", VA = "0xD38250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048F")]
			[Address(RVA = "0xD38258", Offset = "0xD38258", VA = "0xD38258")]
			set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public bool Targeted
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0xD383E8", Offset = "0xD383E8", VA = "0xD383E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000491")]
			[Address(RVA = "0xD383F0", Offset = "0xD383F0", VA = "0xD383F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xD383FC", Offset = "0xD383FC", VA = "0xD383FC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xD38264", Offset = "0xD38264", VA = "0xD38264")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xD385D0", Offset = "0xD385D0", VA = "0xD385D0")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xD38614", Offset = "0xD38614", VA = "0xD38614")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xD38674", Offset = "0xD38674", VA = "0xD38674")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33824", Offset = "0xA33824")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000065")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0xD3867C", Offset = "0xD3867C", VA = "0xD3867C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000498")]
			[Address(RVA = "0xD38684", Offset = "0xD38684", VA = "0xD38684")]
			set
			{
			}
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xD386A0", Offset = "0xD386A0", VA = "0xD386A0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xD38828", Offset = "0xD38828", VA = "0xD38828", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xD391E4", Offset = "0xD391E4", VA = "0xD391E4", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xD397A8", Offset = "0xD397A8", VA = "0xD397A8", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xD39B90", Offset = "0xD39B90", VA = "0xD39B90")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xD38AF8", Offset = "0xD38AF8", VA = "0xD38AF8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xD39C70", Offset = "0xD39C70", VA = "0xD39C70")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xD3A0B0", Offset = "0xD3A0B0", VA = "0xD3A0B0", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xD3A0C8", Offset = "0xD3A0C8", VA = "0xD3A0C8", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xD3A0D0", Offset = "0xD3A0D0", VA = "0xD3A0D0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002EA")]
		public enum CrosshairState
		{
			[Token(Token = "0x40011F8")]
			Disabled,
			[Token(Token = "0x40011F9")]
			Enabled,
			[Token(Token = "0x40011FA")]
			Targeted
		}

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xD3BD0C", Offset = "0xD3BD0C", VA = "0xD3BD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xD38534", Offset = "0xD38534", VA = "0xD38534")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xD3BD74", Offset = "0xD3BD74", VA = "0xD3BD74")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xD3BDC0", Offset = "0xD3BDC0", VA = "0xD3BDC0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xD3BBA0", Offset = "0xD3BBA0", VA = "0xD3BBA0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xD3BC54", Offset = "0xD3BC54", VA = "0xD3BC54")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xD3BD04", Offset = "0xD3BD04", VA = "0xD3BD04")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xD40D40", Offset = "0xD40D40", VA = "0xD40D40")]
		private void Start()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xD40E0C", Offset = "0xD40E0C", VA = "0xD40E0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xD40E18", Offset = "0xD40E18", VA = "0xD40E18")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xD40E24", Offset = "0xD40E24", VA = "0xD40E24")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xD35FE0", Offset = "0xD35FE0", VA = "0xD35FE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xD36038", Offset = "0xD36038", VA = "0xD36038")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xD362E4", Offset = "0xD362E4", VA = "0xD362E4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xD363D8", Offset = "0xD363D8", VA = "0xD363D8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xD3603C", Offset = "0xD3603C", VA = "0xD3603C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xD364CC", Offset = "0xD364CC", VA = "0xD364CC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002EB")]
		public enum ContactTest
		{
			[Token(Token = "0x40011FC")]
			PerpenTest,
			[Token(Token = "0x40011FD")]
			BackwardsPress
		}

		[Token(Token = "0x4000446")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000447")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000066")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0xD36564", Offset = "0xD36564", VA = "0xD36564", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000067")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0xD3656C", Offset = "0xD3656C", VA = "0xD3656C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xD36578", Offset = "0xD36578", VA = "0xD36578", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xD366D0", Offset = "0xD366D0", VA = "0xD366D0")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xD368D4", Offset = "0xD368D4", VA = "0xD368D4")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xD36A34", Offset = "0xD36A34", VA = "0xD36A34")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xD36B94", Offset = "0xD36B94", VA = "0xD36B94", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xD37064", Offset = "0xD37064", VA = "0xD37064")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xD371F4", Offset = "0xD371F4", VA = "0xD371F4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xD372EC", Offset = "0xD372EC", VA = "0xD372EC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xD3741C", Offset = "0xD3741C", VA = "0xD3741C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37B8C", Offset = "0xA37B8C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37B9C", Offset = "0xA37B9C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000068")]
		public Collider Collider
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xD3750C", Offset = "0xD3750C", VA = "0xD3750C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E598", Offset = "0xA3E598")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0xD37514", Offset = "0xD37514", VA = "0xD37514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E5A8", Offset = "0xA3E5A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0xD3751C", Offset = "0xD3751C", VA = "0xD3751C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E5B8", Offset = "0xA3E5B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0xD37524", Offset = "0xD37524", VA = "0xD37524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E5C8", Offset = "0xA3E5C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0xD3752C", Offset = "0xD3752C", VA = "0xD3752C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xD37580", Offset = "0xD37580", VA = "0xD37580")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xD37600", Offset = "0xD37600", VA = "0xD37600")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700006B")]
		Collider Collider
		{
			[Token(Token = "0x60004C6")]
			get;
		}

		[Token(Token = "0x1700006C")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60004C7")]
			get;
		}

		[Token(Token = "0x1700006D")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60004C8")]
			get;
		}
	}
	[Token(Token = "0x20000B8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xD36830", Offset = "0xD36830", VA = "0xD36830")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public enum InteractionType
	{
		[Token(Token = "0x400045B")]
		Enter,
		[Token(Token = "0x400045C")]
		Stay,
		[Token(Token = "0x400045D")]
		Exit
	}
	[Token(Token = "0x20000BA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002EC")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40011FF")]
			Mesh,
			[Token(Token = "0x4001200")]
			Skeleton,
			[Token(Token = "0x4001201")]
			Both
		}

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3462C", Offset = "0xA3462C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600161E")]
				[Address(RVA = "0xD3CD18", Offset = "0xD3CD18", VA = "0xD3CD18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001620")]
				[Address(RVA = "0xD3CD84", Offset = "0xD3CD84", VA = "0xD3CD84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600161B")]
			[Address(RVA = "0xD3C804", Offset = "0xD3C804", VA = "0xD3C804")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600161C")]
			[Address(RVA = "0xD3CAF0", Offset = "0xD3CAF0", VA = "0xD3CAF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0xD3CAF4", Offset = "0xD3CAF4", VA = "0xD3CAF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0xD3CD20", Offset = "0xD3CD20", VA = "0xD3CD20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400045E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37BCC", Offset = "0xA37BCC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700006E")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0xD3AC4C", Offset = "0xD3AC4C", VA = "0xD3AC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0xD3BDC8", Offset = "0xD3BDC8", VA = "0xD3BDC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xD3B814", Offset = "0xD3B814", VA = "0xD3B814")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xD3BE34", Offset = "0xD3BE34", VA = "0xD3BE34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0xD3BEA0", Offset = "0xD3BEA0", VA = "0xD3BEA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xD3BEE0", Offset = "0xD3BEE0", VA = "0xD3BEE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xD3BF4C", Offset = "0xD3BF4C", VA = "0xD3BF4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xD3BF8C", Offset = "0xD3BF8C", VA = "0xD3BF8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0xD3BFF8", Offset = "0xD3BFF8", VA = "0xD3BFF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xD3C038", Offset = "0xD3C038", VA = "0xD3C038")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0xD3AC10", Offset = "0xD3AC10", VA = "0xD3AC10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0xD3C0A4", Offset = "0xD3C0A4", VA = "0xD3C0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0xD3B7D8", Offset = "0xD3B7D8", VA = "0xD3B7D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xD3C10C", Offset = "0xD3C10C", VA = "0xD3C10C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0xD3C174", Offset = "0xD3C174", VA = "0xD3C174")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0xD3C1B0", Offset = "0xD3C1B0", VA = "0xD3C1B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0xD3C218", Offset = "0xD3C218", VA = "0xD3C218")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0xD3C254", Offset = "0xD3C254", VA = "0xD3C254")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0xD3C2BC", Offset = "0xD3C2BC", VA = "0xD3C2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0xD3C2F8", Offset = "0xD3C2F8", VA = "0xD3C2F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0xD3C360", Offset = "0xD3C360", VA = "0xD3C360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E5D8", Offset = "0xA3E5D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0xD3C3B0", Offset = "0xD3C3B0", VA = "0xD3C3B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E5E8", Offset = "0xA3E5E8")]
			private set
			{
			}
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xD3C404", Offset = "0xD3C404", VA = "0xD3C404")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xD3C77C", Offset = "0xD3C77C", VA = "0xD3C77C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xD3C708", Offset = "0xD3C708", VA = "0xD3C708")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E5F8", Offset = "0xA3E5F8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xD380A0", Offset = "0xD380A0", VA = "0xD380A0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xD3C830", Offset = "0xD3C830", VA = "0xD3C830")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xD3B854", Offset = "0xD3B854", VA = "0xD3B854")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xD3AA80", Offset = "0xD3AA80", VA = "0xD3AA80")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xD3CA10", Offset = "0xD3CA10", VA = "0xD3CA10")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002EE")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0xD3D4D4", Offset = "0xD3D4D4", VA = "0xD3D4D4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000079")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xD3CD8C", Offset = "0xD3CD8C", VA = "0xD3CD8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xD3CD94", Offset = "0xD3CD94", VA = "0xD3CD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0xD3CD9C", Offset = "0xD3CD9C", VA = "0xD3CD9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xD3CDA4", Offset = "0xD3CDA4", VA = "0xD3CDA4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0xD3CDAC", Offset = "0xD3CDAC", VA = "0xD3CDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E65C", Offset = "0xA3E65C")]
			add
			{
			}
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0xD3CE50", Offset = "0xD3CE50", VA = "0xD3CE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E66C", Offset = "0xA3E66C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0xD3CF68", Offset = "0xD3CF68", VA = "0xD3CF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E67C", Offset = "0xA3E67C")]
			add
			{
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0xD3D00C", Offset = "0xD3D00C", VA = "0xD3D00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E68C", Offset = "0xA3E68C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0xD3D124", Offset = "0xD3D124", VA = "0xD3D124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E69C", Offset = "0xA3E69C")]
			add
			{
			}
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0xD3D1C8", Offset = "0xD3D1C8", VA = "0xD3D1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E6AC", Offset = "0xA3E6AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xD3CEF4", Offset = "0xD3CEF4", VA = "0xD3CEF4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xD3D0B0", Offset = "0xD3D0B0", VA = "0xD3D0B0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xD3D26C", Offset = "0xD3D26C", VA = "0xD3D26C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60004F5")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xD3666C", Offset = "0xD3666C", VA = "0xD3666C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xD3D3A8", Offset = "0xD3D3A8", VA = "0xD3D3A8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xD37504", Offset = "0xD37504", VA = "0xD37504")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000476")]
		None,
		[Token(Token = "0x4000477")]
		Proximity,
		[Token(Token = "0x4000478")]
		Contact,
		[Token(Token = "0x4000479")]
		Action
	}
	[Token(Token = "0x20000BD")]
	public enum InteractableState
	{
		[Token(Token = "0x400047B")]
		Default,
		[Token(Token = "0x400047C")]
		ProximityState,
		[Token(Token = "0x400047D")]
		ContactState,
		[Token(Token = "0x400047E")]
		ActionState
	}
	[Token(Token = "0x20000BE")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xD37150", Offset = "0xD37150", VA = "0xD37150")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700007D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0xD3D524", Offset = "0xD3D524", VA = "0xD3D524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xD3D2E0", Offset = "0xD3D2E0", VA = "0xD3D2E0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xD3D40C", Offset = "0xD3D40C", VA = "0xD3D40C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xD3D58C", Offset = "0xD3D58C", VA = "0xD3D58C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3463C", Offset = "0xA3463C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001626")]
				[Address(RVA = "0xD3E674", Offset = "0xD3E674", VA = "0xD3E674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001628")]
				[Address(RVA = "0xD3E6E0", Offset = "0xD3E6E0", VA = "0xD3E6E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001622")]
			[Address(RVA = "0xD3E12C", Offset = "0xD3E12C", VA = "0xD3E12C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001623")]
			[Address(RVA = "0xD3E260", Offset = "0xD3E260", VA = "0xD3E260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0xD3E2D4", Offset = "0xD3E2D4", VA = "0xD3E2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xD3E27C", Offset = "0xD3E27C", VA = "0xD3E27C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0xD3E67C", Offset = "0xD3E67C", VA = "0xD3E67C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xD3E020", Offset = "0xD3E020", VA = "0xD3E020")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xD3E09C", Offset = "0xD3E09C", VA = "0xD3E09C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E6BC", Offset = "0xA3E6BC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xD3E158", Offset = "0xD3E158", VA = "0xD3E158")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xD3E258", Offset = "0xD3E258", VA = "0xD3E258")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700007E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0xD3A4A4", Offset = "0xD3A4A4", VA = "0xD3A4A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xD3A60C", Offset = "0xD3A60C", VA = "0xD3A60C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xD3E6E8", Offset = "0xD3E6E8", VA = "0xD3E6E8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xD3E79C", Offset = "0xD3E79C", VA = "0xD3E79C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xD3EA60", Offset = "0xD3EA60", VA = "0xD3EA60")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xD3EAA8", Offset = "0xD3EAA8", VA = "0xD3EAA8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xD3ED20", Offset = "0xD3ED20", VA = "0xD3ED20")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xD3EE5C", Offset = "0xD3EE5C", VA = "0xD3EE5C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3464C", Offset = "0xA3464C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162C")]
				[Address(RVA = "0xD3BA68", Offset = "0xD3BA68", VA = "0xD3BA68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162E")]
				[Address(RVA = "0xD3BAD4", Offset = "0xD3BAD4", VA = "0xD3BAD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xD3A734", Offset = "0xD3A734", VA = "0xD3A734")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0xD3B44C", Offset = "0xD3B44C", VA = "0xD3B44C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162B")]
			[Address(RVA = "0xD3B450", Offset = "0xD3B450", VA = "0xD3B450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162D")]
			[Address(RVA = "0xD3BA70", Offset = "0xD3BA70", VA = "0xD3BA70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400048E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700007F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xD3A380", Offset = "0xD3A380", VA = "0xD3A380", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000080")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600050C")]
			[Address(RVA = "0xD3A388", Offset = "0xD3A388", VA = "0xD3A388", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000081")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0xD3A390", Offset = "0xD3A390", VA = "0xD3A390", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public override bool EnableState
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0xD3A398", Offset = "0xD3A398", VA = "0xD3A398", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600050F")]
			[Address(RVA = "0xD3A3C4", Offset = "0xD3A3C4", VA = "0xD3A3C4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xD3A400", Offset = "0xD3A400", VA = "0xD3A400", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xD3A6C0", Offset = "0xD3A6C0", VA = "0xD3A6C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E720", Offset = "0xA3E720")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xD3A760", Offset = "0xD3A760", VA = "0xD3A760")]
		private void Update()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xD3AC8C", Offset = "0xD3AC8C", VA = "0xD3AC8C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xD3AF10", Offset = "0xD3AF10", VA = "0xD3AF10")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xD3B05C", Offset = "0xD3B05C", VA = "0xD3B05C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xD3B320", Offset = "0xD3B320", VA = "0xD3B320", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xD3B324", Offset = "0xD3B324", VA = "0xD3B324", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xD3B328", Offset = "0xD3B328", VA = "0xD3B328")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37C5C", Offset = "0xA37C5C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37C6C", Offset = "0xA37C6C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37C7C", Offset = "0xA37C7C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000083")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0xD3BADC", Offset = "0xD3BADC", VA = "0xD3BADC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E784", Offset = "0xA3E784")]
			get
			{
				return null;
			}
			[Token(Token = "0x600051A")]
			[Address(RVA = "0xD3BAE4", Offset = "0xD3BAE4", VA = "0xD3BAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E794", Offset = "0xA3E794")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public bool EnableState
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0xD3BAEC", Offset = "0xD3BAEC", VA = "0xD3BAEC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600051C")]
			[Address(RVA = "0xD3BB08", Offset = "0xD3BB08", VA = "0xD3BB08", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0xD3BB28", Offset = "0xD3BB28", VA = "0xD3BB28", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7A4", Offset = "0xA3E7A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600051E")]
			[Address(RVA = "0xD3BB30", Offset = "0xD3BB30", VA = "0xD3BB30", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7B4", Offset = "0xA3E7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public float SphereRadius
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0xD3BB3C", Offset = "0xD3BB3C", VA = "0xD3BB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7C4", Offset = "0xA3E7C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000520")]
			[Address(RVA = "0xD3BB44", Offset = "0xD3BB44", VA = "0xD3BB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7D4", Offset = "0xA3E7D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xD3BB4C", Offset = "0xD3BB4C", VA = "0xD3BB4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xD3BB94", Offset = "0xD3BB94", VA = "0xD3BB94", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xD3BB98", Offset = "0xD3BB98", VA = "0xD3BB98")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400049E")]
		None = 0,
		[Token(Token = "0x400049F")]
		Ray = 1,
		[Token(Token = "0x40004A0")]
		Poke = 4,
		[Token(Token = "0x40004A1")]
		All = -1
	}
	[Token(Token = "0x20000C5")]
	public enum ToolInputState
	{
		[Token(Token = "0x40004A3")]
		Inactive,
		[Token(Token = "0x40004A4")]
		PrimaryInputDown,
		[Token(Token = "0x40004A5")]
		PrimaryInputDownStay,
		[Token(Token = "0x40004A6")]
		PrimaryInputUp
	}
	[Token(Token = "0x20000C6")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xD3B2DC", Offset = "0xD3B2DC", VA = "0xD3B2DC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37C8C", Offset = "0xA37C8C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37C9C", Offset = "0xA37C9C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37CAC", Offset = "0xA37CAC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000087")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xD37414", Offset = "0xD37414", VA = "0xD37414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0xD3D608", Offset = "0xD3D608", VA = "0xD3D608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7E4", Offset = "0xA3E7E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000527")]
			[Address(RVA = "0xD3D610", Offset = "0xD3D610", VA = "0xD3D610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E7F4", Offset = "0xA3E7F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000528")]
			get;
		}

		[Token(Token = "0x1700008A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000529")]
			get;
		}

		[Token(Token = "0x1700008B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600052A")]
			get;
		}

		[Token(Token = "0x1700008C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0xD3D61C", Offset = "0xD3D61C", VA = "0xD3D61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E804", Offset = "0xA3E804")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600052C")]
			[Address(RVA = "0xD3D628", Offset = "0xD3D628", VA = "0xD3D628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E814", Offset = "0xA3E814")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0xD3D634", Offset = "0xD3D634", VA = "0xD3D634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E824", Offset = "0xA3E824")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600052E")]
			[Address(RVA = "0xD3D640", Offset = "0xD3D640", VA = "0xD3D640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E834", Offset = "0xA3E834")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000533")]
			get;
			[Token(Token = "0x6000534")]
			set;
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xD3D64C", Offset = "0xD3D64C", VA = "0xD3D64C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000530")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000531")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000532")]
		public abstract void DeFocus();

		[Token(Token = "0x6000535")]
		public abstract void Initialize();

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xD3D654", Offset = "0xD3D654", VA = "0xD3D654")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xD3D6A4", Offset = "0xD3D6A4", VA = "0xD3D6A4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xD3D6FC", Offset = "0xD3D6FC", VA = "0xD3D6FC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xD3D950", Offset = "0xD3D950", VA = "0xD3D950", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xD3B33C", Offset = "0xD3B33C", VA = "0xD3B33C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700008F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600053B")]
			get;
		}

		[Token(Token = "0x17000090")]
		bool EnableState
		{
			[Token(Token = "0x600053D")]
			get;
			[Token(Token = "0x600053E")]
			set;
		}

		[Token(Token = "0x17000091")]
		bool ToolActivateState
		{
			[Token(Token = "0x600053F")]
			get;
			[Token(Token = "0x6000540")]
			set;
		}

		[Token(Token = "0x600053C")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20000C9")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002F1")]
		private enum PinchState
		{
			[Token(Token = "0x4001212")]
			None,
			[Token(Token = "0x4001213")]
			PinchDown,
			[Token(Token = "0x4001214")]
			PinchStay,
			[Token(Token = "0x4001215")]
			PinchUp
		}

		[Token(Token = "0x40004B3")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000092")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0xD40E2C", Offset = "0xD40E2C", VA = "0xD40E2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0xD40EB8", Offset = "0xD40EB8", VA = "0xD40EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xD40F44", Offset = "0xD40F44", VA = "0xD40F44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xD40FD0", Offset = "0xD40FD0", VA = "0xD40FD0")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xD40FFC", Offset = "0xD40FFC", VA = "0xD40FFC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40004B6")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40004B7")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40004B8")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40004B9")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40004BA")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37CCC", Offset = "0xA37CCC")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000095")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xD412A4", Offset = "0xD412A4", VA = "0xD412A4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000096")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000547")]
			[Address(RVA = "0xD412AC", Offset = "0xD412AC", VA = "0xD412AC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000097")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0xD41314", Offset = "0xD41314", VA = "0xD41314", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000098")]
		public override bool EnableState
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0xD4131C", Offset = "0xD4131C", VA = "0xD4131C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054A")]
			[Address(RVA = "0xD41350", Offset = "0xD41350", VA = "0xD41350", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xD413C4", Offset = "0xD413C4", VA = "0xD413C4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xD41424", Offset = "0xD41424", VA = "0xD41424")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xD414C0", Offset = "0xD414C0", VA = "0xD414C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xD417C8", Offset = "0xD417C8", VA = "0xD417C8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xD418C4", Offset = "0xD418C4", VA = "0xD418C4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xD41C34", Offset = "0xD41C34", VA = "0xD41C34")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xD41DF4", Offset = "0xD41DF4", VA = "0xD41DF4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xD41F1C", Offset = "0xD41F1C", VA = "0xD41F1C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xD42260", Offset = "0xD42260", VA = "0xD42260")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xD4267C", Offset = "0xD4267C", VA = "0xD4267C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xD42758", Offset = "0xD42758", VA = "0xD42758", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xD4278C", Offset = "0xD4278C", VA = "0xD4278C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004C6")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40004C7")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37D40", Offset = "0xA37D40")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000099")]
		public bool EnableState
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xD41334", Offset = "0xD41334", VA = "0xD41334", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000558")]
			[Address(RVA = "0xD4136C", Offset = "0xD4136C", VA = "0xD4136C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0xD42844", Offset = "0xD42844", VA = "0xD42844", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600055A")]
			[Address(RVA = "0xD4178C", Offset = "0xD4178C", VA = "0xD4178C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0xD42A80", Offset = "0xD42A80", VA = "0xD42A80", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E844", Offset = "0xA3E844")]
			get
			{
				return null;
			}
			[Token(Token = "0x600055D")]
			[Address(RVA = "0xD42A88", Offset = "0xD42A88", VA = "0xD42A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E854", Offset = "0xA3E854")]
			set
			{
			}
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xD4284C", Offset = "0xD4284C", VA = "0xD4284C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xD426B4", Offset = "0xD426B4", VA = "0xD426B4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xD42A90", Offset = "0xD42A90", VA = "0xD42A90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xD42DC8", Offset = "0xD42DC8", VA = "0xD42DC8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xD42FB8", Offset = "0xD42FB8", VA = "0xD42FB8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700009C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0xD3A0F0", Offset = "0xD3A0F0", VA = "0xD3A0F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000563")]
			[Address(RVA = "0xD3A0F8", Offset = "0xD3A0F8", VA = "0xD3A0F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xD3A188", Offset = "0xD3A188", VA = "0xD3A188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000565")]
			[Address(RVA = "0xD3A190", Offset = "0xD3A190", VA = "0xD3A190")]
			set
			{
			}
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xD3A200", Offset = "0xD3A200", VA = "0xD3A200")]
		private void Start()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xD3A358", Offset = "0xD3A358", VA = "0xD3A358")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xD3A368", Offset = "0xD3A368", VA = "0xD3A368")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xD3A378", Offset = "0xD3A378", VA = "0xD3A378")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xD37BB4", Offset = "0xD37BB4", VA = "0xD37BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xD37BB8", Offset = "0xD37BB8", VA = "0xD37BB8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xD37C3C", Offset = "0xD37C3C", VA = "0xD37C3C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xD37D30", Offset = "0xD37D30", VA = "0xD37D30")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xD37E24", Offset = "0xD37E24", VA = "0xD37E24")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xD37EE8", Offset = "0xD37EE8", VA = "0xD37EE8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xD37FDC", Offset = "0xD37FDC", VA = "0xD37FDC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xD38028", Offset = "0xD38028", VA = "0xD38028")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xD38188", Offset = "0xD38188", VA = "0xD38188")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xD381FC", Offset = "0xD381FC", VA = "0xD381FC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xD38204", Offset = "0xD38204", VA = "0xD38204")]
		private void Start()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xD38208", Offset = "0xD38208", VA = "0xD38208")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xD381C0", Offset = "0xD381C0", VA = "0xD381C0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xD38248", Offset = "0xD38248", VA = "0xD38248")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3465C", Offset = "0xA3465C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001632")]
				[Address(RVA = "0xD40CCC", Offset = "0xD40CCC", VA = "0xD40CCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001634")]
				[Address(RVA = "0xD40D38", Offset = "0xD40D38", VA = "0xD40D38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600162F")]
			[Address(RVA = "0xD409F0", Offset = "0xD409F0", VA = "0xD409F0")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0xD40AD4", Offset = "0xD40AD4", VA = "0xD40AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0xD40AD8", Offset = "0xD40AD8", VA = "0xD40AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001633")]
			[Address(RVA = "0xD40CD4", Offset = "0xD40CD4", VA = "0xD40CD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004D7")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40004D8")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xD405FC", Offset = "0xD405FC", VA = "0xD405FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xD40694", Offset = "0xD40694", VA = "0xD40694")]
		private void Update()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xD40928", Offset = "0xD40928", VA = "0xD40928")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xD408B4", Offset = "0xD408B4", VA = "0xD408B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E864", Offset = "0xA3E864")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xD40A1C", Offset = "0xD40A1C", VA = "0xD40A1C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002F3")]
		public enum SelectionState
		{
			[Token(Token = "0x400121D")]
			Off,
			[Token(Token = "0x400121E")]
			Selected,
			[Token(Token = "0x400121F")]
			Highlighted
		}

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700009E")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xD43018", Offset = "0xD43018", VA = "0xD43018")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600057E")]
			[Address(RVA = "0xD43020", Offset = "0xD43020", VA = "0xD43020")]
			set
			{
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xD431B4", Offset = "0xD431B4", VA = "0xD431B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xD43380", Offset = "0xD43380", VA = "0xD43380")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xD430A8", Offset = "0xD430A8", VA = "0xD430A8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xD43468", Offset = "0xD43468", VA = "0xD43468")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002F4")]
		public enum SegmentType
		{
			[Token(Token = "0x4001221")]
			Straight,
			[Token(Token = "0x4001222")]
			LeftTurn,
			[Token(Token = "0x4001223")]
			RightTurn,
			[Token(Token = "0x4001224")]
			Switch
		}

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40004ED")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40004EE")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37E20", Offset = "0xA37E20")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700009F")]
		public float StartDistance
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0xD434D4", Offset = "0xD434D4", VA = "0xD434D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E8C8", Offset = "0xA3E8C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000585")]
			[Address(RVA = "0xD434DC", Offset = "0xD434DC", VA = "0xD434DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E8D8", Offset = "0xA3E8D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public float GridSize
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0xD434E4", Offset = "0xD434E4", VA = "0xD434E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000587")]
			[Address(RVA = "0xD434EC", Offset = "0xD434EC", VA = "0xD434EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public int SubDivCount
		{
			[Token(Token = "0x6000588")]
			[Address(RVA = "0xD434F4", Offset = "0xD434F4", VA = "0xD434F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000589")]
			[Address(RVA = "0xD434FC", Offset = "0xD434FC", VA = "0xD434FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public SegmentType Type
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xD43504", Offset = "0xD43504", VA = "0xD43504")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000A3")]
		public Pose EndPose
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xD4350C", Offset = "0xD4350C", VA = "0xD4350C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public float Radius
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0xD439A4", Offset = "0xD439A4", VA = "0xD439A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A5")]
		public float SegmentLength
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xD43574", Offset = "0xD43574", VA = "0xD43574")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xD439B4", Offset = "0xD439B4", VA = "0xD439B4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xD439CC", Offset = "0xD439CC", VA = "0xD439CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xD435B4", Offset = "0xD435B4", VA = "0xD435B4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xD439D0", Offset = "0xD439D0", VA = "0xD439D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xD439D4", Offset = "0xD439D4", VA = "0xD439D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xD43A40", Offset = "0xD43A40", VA = "0xD43A40")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xD445D4", Offset = "0xD445D4", VA = "0xD445D4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xD448EC", Offset = "0xD448EC", VA = "0xD448EC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3466C", Offset = "0xA3466C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001638")]
				[Address(RVA = "0xD45538", Offset = "0xD45538", VA = "0xD45538", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600163A")]
				[Address(RVA = "0xD455A4", Offset = "0xD455A4", VA = "0xD455A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0xD45288", Offset = "0xD45288", VA = "0xD45288")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0xD45384", Offset = "0xD45384", VA = "0xD45384", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0xD45388", Offset = "0xD45388", VA = "0xD45388", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001639")]
			[Address(RVA = "0xD45540", Offset = "0xD45540", VA = "0xD45540", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004F4")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40004F5")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xD44990", Offset = "0xD44990", VA = "0xD44990")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xD44A40", Offset = "0xD44A40", VA = "0xD44A40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xD44AF4", Offset = "0xD44AF4", VA = "0xD44AF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xD44C24", Offset = "0xD44C24", VA = "0xD44C24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xD44D98", Offset = "0xD44D98", VA = "0xD44D98")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xD44F38", Offset = "0xD44F38", VA = "0xD44F38")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xD451BC", Offset = "0xD451BC", VA = "0xD451BC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xD45054", Offset = "0xD45054", VA = "0xD45054")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xD45068", Offset = "0xD45068", VA = "0xD45068")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xD45214", Offset = "0xD45214", VA = "0xD45214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E8E8", Offset = "0xA3E8E8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xD452B4", Offset = "0xD452B4", VA = "0xD452B4")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000A6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0xD455AC", Offset = "0xD455AC", VA = "0xD455AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD455BC", Offset = "0xD455BC", VA = "0xD455BC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD455C4", Offset = "0xD455C4", VA = "0xD455C4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xD45A48", Offset = "0xD45A48", VA = "0xD45A48")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000508")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000509")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37F20", Offset = "0xA37F20")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000A7")]
		public float Distance
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0xD45B40", Offset = "0xD45B40", VA = "0xD45B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E94C", Offset = "0xA3E94C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xD45B48", Offset = "0xD45B48", VA = "0xD45B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E95C", Offset = "0xA3E95C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public float Scale
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0xD45B50", Offset = "0xD45B50", VA = "0xD45B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0xD45B58", Offset = "0xD45B58", VA = "0xD45B58")]
			set
			{
			}
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xD455C0", Offset = "0xD455C0", VA = "0xD455C0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xD45B60", Offset = "0xD45B60", VA = "0xD45B60")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xD45614", Offset = "0xD45614", VA = "0xD45614")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xD458F4", Offset = "0xD458F4", VA = "0xD458F4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60005AD")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xD45AB8", Offset = "0xD45AB8", VA = "0xD45AB8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3467C", Offset = "0xA3467C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600163E")]
				[Address(RVA = "0xD46544", Offset = "0xD46544", VA = "0xD46544", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001640")]
				[Address(RVA = "0xD465B0", Offset = "0xD465B0", VA = "0xD465B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xD4615C", Offset = "0xD4615C", VA = "0xD4615C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0xD46300", Offset = "0xD46300", VA = "0xD46300", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600163D")]
			[Address(RVA = "0xD46304", Offset = "0xD46304", VA = "0xD46304", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600163F")]
			[Address(RVA = "0xD4654C", Offset = "0xD4654C", VA = "0xD4654C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xD45D40", Offset = "0xD45D40", VA = "0xD45D40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xD45D94", Offset = "0xD45D94", VA = "0xD45D94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xD45EA0", Offset = "0xD45EA0", VA = "0xD45EA0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xD45FF8", Offset = "0xD45FF8", VA = "0xD45FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xD45F00", Offset = "0xD45F00", VA = "0xD45F00")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xD460D8", Offset = "0xD460D8", VA = "0xD460D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E96C", Offset = "0xA3E96C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xD46188", Offset = "0xD46188", VA = "0xD46188")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xD46240", Offset = "0xD46240", VA = "0xD46240")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xD462A0", Offset = "0xD462A0", VA = "0xD462A0")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002F7")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001237")]
			Start,
			[Token(Token = "0x4001238")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001239")]
			Stop
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3468C", Offset = "0xA3468C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001644")]
				[Address(RVA = "0xD46F00", Offset = "0xD46F00", VA = "0xD46F00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001646")]
				[Address(RVA = "0xD46F6C", Offset = "0xD46F6C", VA = "0xD46F6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xD4688C", Offset = "0xD4688C", VA = "0xD4688C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xD46CDC", Offset = "0xD46CDC", VA = "0xD46CDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001643")]
			[Address(RVA = "0xD46CE0", Offset = "0xD46CE0", VA = "0xD46CE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001645")]
			[Address(RVA = "0xD46F08", Offset = "0xD46F08", VA = "0xD46F08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400051C")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400051D")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400051E")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400051F")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37F80", Offset = "0xA37F80")]
		protected float _initialSpeed;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xD465B8", Offset = "0xD465B8", VA = "0xD465B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xD4671C", Offset = "0xD4671C", VA = "0xD4671C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xD46728", Offset = "0xD46728", VA = "0xD46728", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xD37BF0", Offset = "0xD37BF0", VA = "0xD37BF0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xD46694", Offset = "0xD46694", VA = "0xD46694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E9D0", Offset = "0xA3E9D0")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xD468B8", Offset = "0xD468B8", VA = "0xD468B8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xD46824", Offset = "0xD46824", VA = "0xD46824")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xD37C74", Offset = "0xD37C74", VA = "0xD37C74")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xD37D68", Offset = "0xD37D68", VA = "0xD37D68")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xD46AF8", Offset = "0xD46AF8", VA = "0xD46AF8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xD46BE8", Offset = "0xD46BE8", VA = "0xD46BE8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xD37E5C", Offset = "0xD37E5C", VA = "0xD37E5C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xD37F20", Offset = "0xD37F20", VA = "0xD37F20")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xD38018", Offset = "0xD38018", VA = "0xD38018")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xD46C70", Offset = "0xD46C70", VA = "0xD46C70")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000A9")]
		public float TrackLength
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0xD46F74", Offset = "0xD46F74", VA = "0xD46F74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xD46F7C", Offset = "0xD46F7C", VA = "0xD46F7C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xD46F84", Offset = "0xD46F84", VA = "0xD46F84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xD45BE4", Offset = "0xD45BE4", VA = "0xD45BE4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xD46F88", Offset = "0xD46F88", VA = "0xD46F88")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xD4718C", Offset = "0xD4718C", VA = "0xD4718C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xD472B0", Offset = "0xD472B0", VA = "0xD472B0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class Pose
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xD41188", Offset = "0xD41188", VA = "0xD41188")]
		public Pose()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xD41234", Offset = "0xD41234", VA = "0xD41234")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3469C", Offset = "0xA3469C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600164A")]
				[Address(RVA = "0xD478A4", Offset = "0xD478A4", VA = "0xD478A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600164C")]
				[Address(RVA = "0xD47910", Offset = "0xD47910", VA = "0xD47910", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xD47560", Offset = "0xD47560", VA = "0xD47560")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xD476C4", Offset = "0xD476C4", VA = "0xD476C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0xD476C8", Offset = "0xD476C8", VA = "0xD476C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600164B")]
			[Address(RVA = "0xD478AC", Offset = "0xD478AC", VA = "0xD478AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346AC", Offset = "0xA346AC")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001650")]
				[Address(RVA = "0xD479E4", Offset = "0xD479E4", VA = "0xD479E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001652")]
				[Address(RVA = "0xD47A50", Offset = "0xD47A50", VA = "0xD47A50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xD47624", Offset = "0xD47624", VA = "0xD47624")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xD47918", Offset = "0xD47918", VA = "0xD47918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600164F")]
			[Address(RVA = "0xD4791C", Offset = "0xD4791C", VA = "0xD4791C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0xD479EC", Offset = "0xD479EC", VA = "0xD479EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000542")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38168", Offset = "0xA38168")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000AA")]
		public bool IsMoving
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xD472CC", Offset = "0xD472CC", VA = "0xD472CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EA34", Offset = "0xA3EA34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0xD472D4", Offset = "0xD472D4", VA = "0xD472D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EA44", Offset = "0xA3EA44")]
			private set
			{
			}
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xD472E0", Offset = "0xD472E0", VA = "0xD472E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xD4731C", Offset = "0xD4731C", VA = "0xD4731C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xD47474", Offset = "0xD47474", VA = "0xD47474")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xD474DC", Offset = "0xD474DC", VA = "0xD474DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EA54", Offset = "0xA3EA54")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xD4758C", Offset = "0xD4758C", VA = "0xD4758C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EAB8", Offset = "0xA3EAB8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xD47650", Offset = "0xD47650", VA = "0xD47650")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xD476BC", Offset = "0xD476BC", VA = "0xD476BC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xD47A58", Offset = "0xD47A58", VA = "0xD47A58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xD47AC0", Offset = "0xD47AC0", VA = "0xD47AC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xD47B80", Offset = "0xD47B80", VA = "0xD47B80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xD47C88", Offset = "0xD47C88", VA = "0xD47C88")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xD47D08", Offset = "0xD47D08", VA = "0xD47D08")]
		private void Update()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xD47DE8", Offset = "0xD47DE8", VA = "0xD47DE8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000553")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000554")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000555")]
		EUDT_None,
		[Token(Token = "0x4000556")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000DC")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346BC", Offset = "0xA346BC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001656")]
				[Address(RVA = "0xD40588", Offset = "0xD40588", VA = "0xD40588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001658")]
				[Address(RVA = "0xD405F4", Offset = "0xD405F4", VA = "0xD405F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001653")]
			[Address(RVA = "0xD3FBF8", Offset = "0xD3FBF8", VA = "0xD3FBF8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001654")]
			[Address(RVA = "0xD40338", Offset = "0xD40338", VA = "0xD40338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001655")]
			[Address(RVA = "0xD4033C", Offset = "0xD4033C", VA = "0xD4033C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001657")]
			[Address(RVA = "0xD40590", Offset = "0xD40590", VA = "0xD40590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000558")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000559")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400055A")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA381A8", Offset = "0xA381A8")]
		public GameObject mainCamera;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA381E0", Offset = "0xA381E0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xD3EF1C", Offset = "0xD3EF1C", VA = "0xD3EF1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xD3F70C", Offset = "0xD3F70C", VA = "0xD3F70C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xD3F84C", Offset = "0xD3F84C", VA = "0xD3F84C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xD3F97C", Offset = "0xD3F97C", VA = "0xD3F97C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xD3FAAC", Offset = "0xD3FAAC", VA = "0xD3FAAC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xD3F820", Offset = "0xD3F820", VA = "0xD3F820")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xD3FB84", Offset = "0xD3FB84", VA = "0xD3FB84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EB1C", Offset = "0xA3EB1C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xD3FC24", Offset = "0xD3FC24", VA = "0xD3FC24")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xD3F290", Offset = "0xD3F290", VA = "0xD3F290")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xD3FD4C", Offset = "0xD3FD4C", VA = "0xD3FD4C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xD3FC58", Offset = "0xD3FC58", VA = "0xD3FC58")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xD400F0", Offset = "0xD400F0", VA = "0xD400F0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xD401CC", Offset = "0xD401CC", VA = "0xD401CC")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xD40248", Offset = "0xD40248", VA = "0xD40248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EB80", Offset = "0xA3EB80")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xD40298", Offset = "0xD40298", VA = "0xD40298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EB90", Offset = "0xA3EB90")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xD402E8", Offset = "0xD402E8", VA = "0xD402E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EBA0", Offset = "0xA3EBA0")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33898", Offset = "0xA33898")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346CC", Offset = "0xA346CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600165A")]
			[Address(RVA = "0xD35C64", Offset = "0xD35C64", VA = "0xD35C64")]
			public <>c()
			{
			}

			[Token(Token = "0x600165B")]
			[Address(RVA = "0xD35C6C", Offset = "0xD35C6C", VA = "0xD35C6C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400056F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000570")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000571")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000572")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000573")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000574")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000575")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000576")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000577")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000578")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000579")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x11CEDCC", Offset = "0x11CEDCC", VA = "0x11CEDCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x11CEE24", Offset = "0x11CEE24", VA = "0x11CEE24")]
		private void Start()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x11CF234", Offset = "0x11CF234", VA = "0x11CF234")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x11CF300", Offset = "0x11CF300", VA = "0x11CF300")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x11CF410", Offset = "0x11CF410", VA = "0x11CF410")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x11CF74C", Offset = "0x11CF74C", VA = "0x11CF74C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x11CF8BC", Offset = "0x11CF8BC", VA = "0x11CF8BC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x11CFA0C", Offset = "0x11CFA0C", VA = "0x11CFA0C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x11CF4AC", Offset = "0x11CF4AC", VA = "0x11CF4AC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x11CF54C", Offset = "0x11CF54C", VA = "0x11CF54C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x11CF088", Offset = "0x11CF088", VA = "0x11CF088")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x11CFB30", Offset = "0x11CFB30", VA = "0x11CFB30")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public enum HandPoseId
	{
		[Token(Token = "0x400058C")]
		Default,
		[Token(Token = "0x400058D")]
		Generic,
		[Token(Token = "0x400058E")]
		PingPongBall,
		[Token(Token = "0x400058F")]
		Controller
	}
	[Token(Token = "0x20000DF")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000AB")]
		public bool AllowPointing
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xD35C9C", Offset = "0xD35C9C", VA = "0xD35C9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0xD35CA4", Offset = "0xD35CA4", VA = "0xD35CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AD")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xD35CAC", Offset = "0xD35CAC", VA = "0xD35CAC")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xD35CB4", Offset = "0xD35CB4", VA = "0xD35CB4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xD35CBC", Offset = "0xD35CBC", VA = "0xD35CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xD35F34", Offset = "0xD35F34", VA = "0xD35F34")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xD35F90", Offset = "0xD35F90", VA = "0xD35F90")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xD35FD8", Offset = "0xD35FD8", VA = "0xD35FD8")]
		public TouchController()
		{
		}
	}
}
namespace LUTColorGrading
{
	[Token(Token = "0x20000E1")]
	public class LUTColorGrading : MonoBehaviour
	{
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture lut;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xD9A6E0", Offset = "0xD9A6E0", VA = "0xD9A6E0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xD9A7C0", Offset = "0xD9A7C0", VA = "0xD9A7C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xD9A830", Offset = "0xD9A830", VA = "0xD9A830")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xD9A8E4", Offset = "0xD9A8E4", VA = "0xD9A8E4")]
		public LUTColorGrading()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class LUTGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LUTColorGrading colorGrading;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool debug;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D origin;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RenderTexture lut0;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RenderTexture lut1;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int current;

		[Token(Token = "0x170000AE")]
		public RenderTexture source
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xD9A8EC", Offset = "0xD9A8EC", VA = "0xD9A8EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public RenderTexture destination
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xD9A908", Offset = "0xD9A908", VA = "0xD9A908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xD9A924", Offset = "0xD9A924", VA = "0xD9A924")]
		private Texture2D CreateLUT(int resolution = 32)
		{
			return null;
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xD9AAA0", Offset = "0xD9AAA0", VA = "0xD9AAA0")]
		private RenderTexture CreateRT(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xD9AB84", Offset = "0xD9AB84", VA = "0xD9AB84")]
		private void UpdateLUT()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xD9AC58", Offset = "0xD9AC58", VA = "0xD9AC58")]
		private void Swap()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xD9AC6C", Offset = "0xD9AC6C", VA = "0xD9AC6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xD9AD28", Offset = "0xD9AD28", VA = "0xD9AD28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xD9AE34", Offset = "0xD9AE34", VA = "0xD9AE34")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xD9AC70", Offset = "0xD9AC70", VA = "0xD9AC70")]
		private void Setup()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xD9ADB0", Offset = "0xD9ADB0", VA = "0xD9ADB0")]
		private void Clear()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xD9AE58", Offset = "0xD9AE58", VA = "0xD9AE58")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xD9AF70", Offset = "0xD9AF70", VA = "0xD9AF70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3EBB0", Offset = "0xA3EBB0")]
		public void SaveTexture()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xD9AFD8", Offset = "0xD9AFD8", VA = "0xD9AFD8")]
		private Texture2D ConvertToTexture2D(RenderTexture renderTex)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xD9B10C", Offset = "0xD9B10C", VA = "0xD9B10C")]
		public LUTGenerator()
		{
		}
	}
}
namespace LUTColorGrading.Test
{
	[Token(Token = "0x20000E3")]
	public class OutputTexture : MonoBehaviour
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D texture;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xD9B114", Offset = "0xD9B114", VA = "0xD9B114")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xD9B1A0", Offset = "0xD9B1A0", VA = "0xD9B1A0")]
		private void CheckInit()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xD9B27C", Offset = "0xD9B27C", VA = "0xD9B27C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xD9B324", Offset = "0xD9B324", VA = "0xD9B324")]
		public OutputTexture()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20000E4")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0xC4E7D8", Offset = "0xC4E7D8", VA = "0xC4E7D8")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xC4E8C0", Offset = "0xC4E8C0", VA = "0xC4E8C0")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xC4EDF8", Offset = "0xC4EDF8", VA = "0xC4EDF8")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xC4EEE8", Offset = "0xC4EEE8", VA = "0xC4EEE8")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xC4EF30", Offset = "0xC4EF30", VA = "0xC4EF30")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xC4EE40", Offset = "0xC4EE40", VA = "0xC4EE40")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xC4EF78", Offset = "0xC4EF78", VA = "0xC4EF78")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0xA38308", Offset = "0xA38308")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xC4EF80", Offset = "0xC4EF80", VA = "0xC4EF80")]
		public void Start()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xC4F26C", Offset = "0xC4F26C", VA = "0xC4F26C")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xC4F274", Offset = "0xC4F274", VA = "0xC4F274", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xC4F324", Offset = "0xC4F324", VA = "0xC4F324")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xD8DAC8", Offset = "0xD8DAC8", VA = "0xD8DAC8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xD8E0C8", Offset = "0xD8E0C8", VA = "0xD8E0C8")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xD8E2EC", Offset = "0xD8E2EC", VA = "0xD8E2EC")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xD8E380", Offset = "0xD8E380", VA = "0xD8E380")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xD8E194", Offset = "0xD8E194", VA = "0xD8E194")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xD8E5A0", Offset = "0xD8E5A0", VA = "0xD8E5A0")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xD8E798", Offset = "0xD8E798", VA = "0xD8E798")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xD8E7A0", Offset = "0xD8E7A0", VA = "0xD8E7A0")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xD8E7A8", Offset = "0xD8E7A8", VA = "0xD8E7A8")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xD8E7B0", Offset = "0xD8E7B0", VA = "0xD8E7B0")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xD8E820", Offset = "0xD8E820", VA = "0xD8E820")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xD8EBF4", Offset = "0xD8EBF4", VA = "0xD8EBF4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xD8EC58", Offset = "0xD8EC58", VA = "0xD8EC58", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xD8EC60", Offset = "0xD8EC60", VA = "0xD8EC60")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0xD96B8C", Offset = "0xD96B8C", VA = "0xD96B8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xD96BE4", Offset = "0xD96BE4", VA = "0xD96BE4")]
		private void test()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xD96C98", Offset = "0xD96C98", VA = "0xD96C98")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20002FD")]
		public enum eFileType
		{
			[Token(Token = "0x4001255")]
			Raw,
			[Token(Token = "0x4001256")]
			Persistent,
			[Token(Token = "0x4001257")]
			Temporal,
			[Token(Token = "0x4001258")]
			Streaming
		}

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xD8AFB0", Offset = "0xD8AFB0", VA = "0xD8AFB0")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xD8B060", Offset = "0xD8B060", VA = "0xD8B060")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xD8B110", Offset = "0xD8B110", VA = "0xD8B110")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xD8B1B8", Offset = "0xD8B1B8", VA = "0xD8B1B8")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xD8B260", Offset = "0xD8B260", VA = "0xD8B260")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xD8B2F8", Offset = "0xD8B2F8", VA = "0xD8B2F8")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xD8B390", Offset = "0xD8B390", VA = "0xD8B390")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xD8B458", Offset = "0xD8B458", VA = "0xD8B458")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xD8B518", Offset = "0xD8B518", VA = "0xD8B518")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xD8B5D8", Offset = "0xD8B5D8", VA = "0xD8B5D8")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EC")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xEDD758", Offset = "0xEDD758", VA = "0xEDD758", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xEDDA04", Offset = "0xEDDA04", VA = "0xEDDA04", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xEDDC40", Offset = "0xEDDC40", VA = "0xEDDC40", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xEDDE48", Offset = "0xEDDE48", VA = "0xEDDE48", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xEDDE50", Offset = "0xEDDE50", VA = "0xEDDE50", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xEDDE5C", Offset = "0xEDDE5C", VA = "0xEDDE5C", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xEDDE64", Offset = "0xEDDE64", VA = "0xEDDE64")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xEDDF10", Offset = "0xEDDF10", VA = "0xEDDF10", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xEDE170", Offset = "0xEDE170", VA = "0xEDE170", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xEDE3C4", Offset = "0xEDE3C4", VA = "0xEDE3C4", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xEDE604", Offset = "0xEDE604", VA = "0xEDE604", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xEDE844", Offset = "0xEDE844", VA = "0xEDE844")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xEDE84C", Offset = "0xEDE84C", VA = "0xEDE84C")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xC4E2D8", Offset = "0xC4E2D8", VA = "0xC4E2D8", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xC4E6C8", Offset = "0xC4E6C8", VA = "0xC4E6C8", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xC4E72C", Offset = "0xC4E72C", VA = "0xC4E72C", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xC4E7D0", Offset = "0xC4E7D0", VA = "0xC4E7D0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xD95230", Offset = "0xD95230", VA = "0xD95230")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xD95260", Offset = "0xD95260", VA = "0xD95260")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xD9544C", Offset = "0xD9544C", VA = "0xD9544C")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xD95738", Offset = "0xD95738", VA = "0xD95738")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xD9555C", Offset = "0xD9555C", VA = "0xD9555C")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xD95AAC", Offset = "0xD95AAC", VA = "0xD95AAC")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F0")]
	public class EventCallback
	{
		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xC4EC9C", Offset = "0xC4EC9C", VA = "0xC4EC9C")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xC4ED04", Offset = "0xC4ED04", VA = "0xC4ED04")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xC4ED98", Offset = "0xC4ED98", VA = "0xC4ED98")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public enum ePluralType
	{
		[Token(Token = "0x40005AF")]
		Zero,
		[Token(Token = "0x40005B0")]
		One,
		[Token(Token = "0x40005B1")]
		Two,
		[Token(Token = "0x40005B2")]
		Few,
		[Token(Token = "0x40005B3")]
		Many,
		[Token(Token = "0x40005B4")]
		Plural
	}
	[Token(Token = "0x20000F2")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20002FE")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xC4F32C", Offset = "0xC4F32C", VA = "0xC4F32C")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xC4F6D0", Offset = "0xC4F6D0", VA = "0xC4F6D0")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xC4F570", Offset = "0xC4F570", VA = "0xC4F570")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xC4FB90", Offset = "0xC4FB90", VA = "0xC4FB90")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xC4FCC8", Offset = "0xC4FCC8", VA = "0xC4FCC8")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xC4FD90", Offset = "0xC4FD90", VA = "0xC4FD90")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xC4FED4", Offset = "0xC4FED4", VA = "0xC4FED4")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xC5004C", Offset = "0xC5004C", VA = "0xC5004C")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xC502E0", Offset = "0xC502E0", VA = "0xC502E0")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xC50478", Offset = "0xC50478", VA = "0xC50478")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xC505E8", Offset = "0xC505E8", VA = "0xC505E8")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC50774", Offset = "0xC50774", VA = "0xC50774")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xC508F8", Offset = "0xC508F8", VA = "0xC508F8")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xC51008", Offset = "0xC51008", VA = "0xC51008")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xC50FF0", Offset = "0xC50FF0", VA = "0xC50FF0")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F3")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346DC", Offset = "0xA346DC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<string, string> OnTranslationReady;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x600165C")]
			[Address(RVA = "0xEDCEA0", Offset = "0xEDCEA0", VA = "0xEDCEA0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600165D")]
			[Address(RVA = "0xEDCEA8", Offset = "0xEDCEA8", VA = "0xEDCEA8")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346EC", Offset = "0xA346EC")]
		private sealed class <WaitForTranslations>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001661")]
				[Address(RVA = "0xEDD16C", Offset = "0xEDD16C", VA = "0xEDD16C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001663")]
				[Address(RVA = "0xEDD1D8", Offset = "0xEDD1D8", VA = "0xEDD1D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600165E")]
			[Address(RVA = "0xEDCFA8", Offset = "0xEDCFA8", VA = "0xEDCFA8")]
			[DebuggerHidden]
			public <WaitForTranslations>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600165F")]
			[Address(RVA = "0xEDCFD4", Offset = "0xEDCFD4", VA = "0xEDCFD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001660")]
			[Address(RVA = "0xEDCFD8", Offset = "0xEDCFD8", VA = "0xEDCFD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001662")]
			[Address(RVA = "0xEDD174", Offset = "0xEDD174", VA = "0xEDD174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xC55470", Offset = "0xC55470", VA = "0xC55470")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC55528", Offset = "0xC55528", VA = "0xC55528")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, Action<string, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xC559AC", Offset = "0xC559AC", VA = "0xC559AC")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xC55918", Offset = "0xC55918", VA = "0xC55918")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xC55F38", Offset = "0xC55F38", VA = "0xC55F38")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xC55FC4", Offset = "0xC55FC4", VA = "0xC55FC4")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xC55E68", Offset = "0xC55E68", VA = "0xC55E68")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xC564DC", Offset = "0xC564DC", VA = "0xC564DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EBE8", Offset = "0xA3EBE8")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xC5653C", Offset = "0xC5653C", VA = "0xC5653C")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC56BB0", Offset = "0xC56BB0", VA = "0xC56BB0")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC56C68", Offset = "0xC56C68", VA = "0xC56C68")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xC5574C", Offset = "0xC5574C", VA = "0xC5574C")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xC56DE8", Offset = "0xC56DE8", VA = "0xC56DE8")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xC55AEC", Offset = "0xC55AEC", VA = "0xC55AEC")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xC57790", Offset = "0xC57790", VA = "0xC57790")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xC56978", Offset = "0xC56978", VA = "0xC56978")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xC5705C", Offset = "0xC5705C", VA = "0xC5705C")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xC57220", Offset = "0xC57220", VA = "0xC57220")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xC570F4", Offset = "0xC570F4", VA = "0xC570F4")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xC57884", Offset = "0xC57884", VA = "0xC57884")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xC56B10", Offset = "0xC56B10", VA = "0xC56B10")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xC57308", Offset = "0xC57308", VA = "0xC57308")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC55D50", Offset = "0xC55D50", VA = "0xC55D50")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC57958", Offset = "0xC57958", VA = "0xC57958")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC57BAC", Offset = "0xC57BAC", VA = "0xC57BAC")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xC57EF8", Offset = "0xC57EF8", VA = "0xC57EF8")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC56424", Offset = "0xC56424", VA = "0xC56424")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F4")]
	public struct TranslationQuery
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20000F5")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x2000301")]
		public enum eJobState
		{
			[Token(Token = "0x4001264")]
			Running,
			[Token(Token = "0x4001265")]
			Succeeded,
			[Token(Token = "0x4001266")]
			Failed
		}

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xD96CA0", Offset = "0xD96CA0", VA = "0xD96CA0", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xD96CA8", Offset = "0xD96CA8", VA = "0xD96CA8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xD96CAC", Offset = "0xD96CAC", VA = "0xD96CAC")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xD98480", Offset = "0xD98480", VA = "0xD98480", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xD96D54", Offset = "0xD96D54", VA = "0xD96D54")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<Dictionary<string, TranslationQuery>, string> _OnTranslationReady;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xD96CB4", Offset = "0xD96CB4", VA = "0xD96CB4")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xD96D5C", Offset = "0xD96D5C", VA = "0xD96D5C")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xD96E40", Offset = "0xD96E40", VA = "0xD96E40", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xD96EE8", Offset = "0xD96EE8", VA = "0xD96EE8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Dictionary<string, TranslationQuery>, string> _OnTranslationReady;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xD97000", Offset = "0xD97000", VA = "0xD97000")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xD971DC", Offset = "0xD971DC", VA = "0xD971DC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xD97390", Offset = "0xD97390", VA = "0xD97390", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<Dictionary<string, TranslationQuery>, string> _OnTranslationReady;

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xD97084", Offset = "0xD97084", VA = "0xD97084")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xD973DC", Offset = "0xD973DC", VA = "0xD973DC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xD97474", Offset = "0xD97474", VA = "0xD97474")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346FC", Offset = "0xA346FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6001665")]
			[Address(RVA = "0xD982B0", Offset = "0xD982B0", VA = "0xD982B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001666")]
			[Address(RVA = "0xD982B8", Offset = "0xD982B8", VA = "0xD982B8")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0xD9831C", Offset = "0xD9831C", VA = "0xD9831C")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x6001668")]
			[Address(RVA = "0xD983D0", Offset = "0xD983D0", VA = "0xD983D0")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<Dictionary<string, TranslationQuery>, string> _OnTranslationReady;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xD97578", Offset = "0xD97578", VA = "0xD97578")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, Action<Dictionary<string, TranslationQuery>, string> OnTranslationReady)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xD975BC", Offset = "0xD975BC", VA = "0xD975BC")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xD9788C", Offset = "0xD9788C", VA = "0xD9788C")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xD97BCC", Offset = "0xD97BCC", VA = "0xD97BCC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xD97C74", Offset = "0xD97C74", VA = "0xD97C74")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xD97D98", Offset = "0xD97D98", VA = "0xD97D98")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FB")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x40005D4")]
		DISABLED = 1,
		[Token(Token = "0x40005D5")]
		KEEP_LOADED = 2,
		[Token(Token = "0x40005D6")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class LanguageData
	{
		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xEDF3FC", Offset = "0xEDF3FC", VA = "0xEDF3FC")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xEDF40C", Offset = "0xEDF40C", VA = "0xEDF40C")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xEDF428", Offset = "0xEDF428", VA = "0xEDF428")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xEDF438", Offset = "0xEDF438", VA = "0xEDF438")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xEDF448", Offset = "0xEDF448", VA = "0xEDF448")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xEDF468", Offset = "0xEDF468", VA = "0xEDF468")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xEDF488", Offset = "0xEDF488", VA = "0xEDF488")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA338FC", Offset = "0xA338FC")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x14000019")]
		public event Action<LanguageSourceData, bool, string> Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0xEDF490", Offset = "0xEDF490", VA = "0xEDF490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EC4C", Offset = "0xA3EC4C")]
			add
			{
			}
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0xEDF534", Offset = "0xEDF534", VA = "0xEDF534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EC5C", Offset = "0xA3EC5C")]
			remove
			{
			}
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xEDF5D8", Offset = "0xEDF5D8", VA = "0xEDF5D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xEDF684", Offset = "0xEDF684", VA = "0xEDF684")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xEDF708", Offset = "0xEDF708", VA = "0xEDF708")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xEDF804", Offset = "0xEDF804", VA = "0xEDF804", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xEDF810", Offset = "0xEDF810", VA = "0xEDF810", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xEDFDA8", Offset = "0xEDFDA8", VA = "0xEDFDA8")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33948", Offset = "0xA33948")]
	public class LanguageSourceAsset : ScriptableObject
	{
		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xEDFEA8", Offset = "0xEDFEA8", VA = "0xEDFEA8")]
		public LanguageSourceAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA3399C", Offset = "0xA3399C")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x2000303")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x400126C")]
			Empty,
			[Token(Token = "0x400126D")]
			Fallback,
			[Token(Token = "0x400126E")]
			ShowWarning,
			[Token(Token = "0x400126F")]
			ShowTerm
		}

		[Token(Token = "0x2000304")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4001271")]
			Never,
			[Token(Token = "0x4001272")]
			OnlyInDevice,
			[Token(Token = "0x4001273")]
			EditorAndDevice
		}

		[Token(Token = "0x2000305")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4001275")]
			Always,
			[Token(Token = "0x4001276")]
			Never,
			[Token(Token = "0x4001277")]
			Daily,
			[Token(Token = "0x4001278")]
			Weekly,
			[Token(Token = "0x4001279")]
			Monthly,
			[Token(Token = "0x400127A")]
			OnlyOnce
		}

		[Serializable]
		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3470C", Offset = "0xA3470C")]
		private sealed class <>c
		{
			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__34_0;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__34_1;

			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__34_2;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__34_3;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__38_0;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__42_0;

			[Token(Token = "0x600166A")]
			[Address(RVA = "0xEE79A0", Offset = "0xEE79A0", VA = "0xEE79A0")]
			public <>c()
			{
			}

			[Token(Token = "0x600166B")]
			[Address(RVA = "0xEE79A8", Offset = "0xEE79A8", VA = "0xEE79A8")]
			internal bool <UpdateAssetDictionary>b__34_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x600166C")]
			[Address(RVA = "0xEE7A14", Offset = "0xEE7A14", VA = "0xEE7A14")]
			internal string <UpdateAssetDictionary>b__34_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600166D")]
			[Address(RVA = "0xEE7A34", Offset = "0xEE7A34", VA = "0xEE7A34")]
			internal string <UpdateAssetDictionary>b__34_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600166E")]
			[Address(RVA = "0xEE7AE4", Offset = "0xEE7AE4", VA = "0xEE7AE4")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__34_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600166F")]
			[Address(RVA = "0xEE7B34", Offset = "0xEE7B34", VA = "0xEE7B34")]
			internal int <Export_I2CSV>b__38_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6001670")]
			[Address(RVA = "0xEE7B60", Offset = "0xEE7B60", VA = "0xEE7B60")]
			internal int <Export_CSV>b__42_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3471C", Offset = "0xA3471C")]
		private sealed class <Import_Google_Coroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001674")]
				[Address(RVA = "0xEE7EC4", Offset = "0xEE7EC4", VA = "0xEE7EC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001676")]
				[Address(RVA = "0xEE7F30", Offset = "0xEE7F30", VA = "0xEE7F30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001671")]
			[Address(RVA = "0xEE5854", Offset = "0xEE5854", VA = "0xEE5854")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001672")]
			[Address(RVA = "0xEE7B8C", Offset = "0xEE7B8C", VA = "0xEE7B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001673")]
			[Address(RVA = "0xEE7B90", Offset = "0xEE7B90", VA = "0xEE7B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001675")]
			[Address(RVA = "0xEE7ECC", Offset = "0xEE7ECC", VA = "0xEE7ECC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object owner;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x1400001A")]
		public event Action<LanguageSourceData, bool, string> Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0xEDFD04", Offset = "0xEDFD04", VA = "0xEDFD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EC6C", Offset = "0xA3EC6C")]
			add
			{
			}
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0xEDFF0C", Offset = "0xEDFF0C", VA = "0xEDFF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EC7C", Offset = "0xA3EC7C")]
			remove
			{
			}
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xEDF604", Offset = "0xEDF604", VA = "0xEDF604")]
		public void Awake()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xEDF6A4", Offset = "0xEDF6A4", VA = "0xEDF6A4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xEE093C", Offset = "0xEE093C", VA = "0xEE093C")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xEE0E78", Offset = "0xEE0E78", VA = "0xEE0E78")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xEE0F90", Offset = "0xEE0F90", VA = "0xEE0F90")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xEE1030", Offset = "0xEE1030", VA = "0xEE1030")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xEE04A8", Offset = "0xEE04A8", VA = "0xEE04A8")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xEE1038", Offset = "0xEE1038", VA = "0xEE1038")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xEE1100", Offset = "0xEE1100", VA = "0xEE1100")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xEE1168", Offset = "0xEE1168", VA = "0xEE1168")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xEE1208", Offset = "0xEE1208", VA = "0xEE1208")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xEE182C", Offset = "0xEE182C", VA = "0xEE182C")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xEE1AB0", Offset = "0xEE1AB0", VA = "0xEE1AB0")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xEE1B88", Offset = "0xEE1B88", VA = "0xEE1B88")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xEE20D4", Offset = "0xEE20D4", VA = "0xEE20D4")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xEE2914", Offset = "0xEE2914", VA = "0xEE2914")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xEE27E0", Offset = "0xEE27E0", VA = "0xEE27E0")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xEE2BAC", Offset = "0xEE2BAC", VA = "0xEE2BAC")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xEE2D00", Offset = "0xEE2D00", VA = "0xEE2D00")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xEE2E90", Offset = "0xEE2E90", VA = "0xEE2E90")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xEE3440", Offset = "0xEE3440", VA = "0xEE3440")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xEE3F74", Offset = "0xEE3F74", VA = "0xEE3F74")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xEE3564", Offset = "0xEE3564", VA = "0xEE3564")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xEE4164", Offset = "0xEE4164", VA = "0xEE4164")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xEE457C", Offset = "0xEE457C", VA = "0xEE457C")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xEE481C", Offset = "0xEE481C", VA = "0xEE481C")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xEE4A48", Offset = "0xEE4A48", VA = "0xEE4A48")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xEE4BFC", Offset = "0xEE4BFC", VA = "0xEE4BFC")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xEE4F54", Offset = "0xEE4F54", VA = "0xEE4F54")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xEE5558", Offset = "0xEE5558", VA = "0xEE5558")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xEE4E38", Offset = "0xEE4E38", VA = "0xEE4E38")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xEE57CC", Offset = "0xEE57CC", VA = "0xEE57CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EC8C", Offset = "0xA3EC8C")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xEE5880", Offset = "0xEE5880", VA = "0xEE5880")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xEE59D0", Offset = "0xEE59D0", VA = "0xEE59D0")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xEE4FE4", Offset = "0xEE4FE4", VA = "0xEE4FE4")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xEE0AA0", Offset = "0xEE0AA0", VA = "0xEE0AA0")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xEE5C4C", Offset = "0xEE5C4C", VA = "0xEE5C4C")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xEE5CF0", Offset = "0xEE5CF0", VA = "0xEE5CF0")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xEE4210", Offset = "0xEE4210", VA = "0xEE4210")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xEE5A78", Offset = "0xEE5A78", VA = "0xEE5A78")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xEE5DA4", Offset = "0xEE5DA4", VA = "0xEE5DA4")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xEE5E40", Offset = "0xEE5E40", VA = "0xEE5E40")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xEE5EEC", Offset = "0xEE5EEC", VA = "0xEE5EEC")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xEE5F74", Offset = "0xEE5F74", VA = "0xEE5F74")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xEE60EC", Offset = "0xEE60EC", VA = "0xEE60EC")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xEE63CC", Offset = "0xEE63CC", VA = "0xEE63CC")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xEE64FC", Offset = "0xEE64FC", VA = "0xEE64FC")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xEE6694", Offset = "0xEE6694", VA = "0xEE6694")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xEE6744", Offset = "0xEE6744", VA = "0xEE6744")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xEE67FC", Offset = "0xEE67FC", VA = "0xEE67FC")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xEE680C", Offset = "0xEE680C", VA = "0xEE680C")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xEE69DC", Offset = "0xEE69DC", VA = "0xEE69DC")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xEE6DAC", Offset = "0xEE6DAC", VA = "0xEE6DAC")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xEE6B74", Offset = "0xEE6B74", VA = "0xEE6B74")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xEE46F8", Offset = "0xEE46F8", VA = "0xEE46F8")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xEE4650", Offset = "0xEE4650", VA = "0xEE4650")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xEE3250", Offset = "0xEE3250", VA = "0xEE3250")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xEE6F54", Offset = "0xEE6F54", VA = "0xEE6F54")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xEE6E44", Offset = "0xEE6E44", VA = "0xEE6E44")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xEE703C", Offset = "0xEE703C", VA = "0xEE703C")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xEE01BC", Offset = "0xEE01BC", VA = "0xEE01BC")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xEE7174", Offset = "0xEE7174", VA = "0xEE7174")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xEE7220", Offset = "0xEE7220", VA = "0xEE7220")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xEE1E1C", Offset = "0xEE1E1C", VA = "0xEE1E1C")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xEE742C", Offset = "0xEE742C", VA = "0xEE742C")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xEE0C90", Offset = "0xEE0C90", VA = "0xEE0C90")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xEE75CC", Offset = "0xEE75CC", VA = "0xEE75CC")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xEE75EC", Offset = "0xEE75EC", VA = "0xEE75EC")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xEE7438", Offset = "0xEE7438", VA = "0xEE7438")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xEE77B0", Offset = "0xEE77B0", VA = "0xEE77B0")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xEE43D4", Offset = "0xEE43D4", VA = "0xEE43D4")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xEDFB0C", Offset = "0xEDFB0C", VA = "0xEDFB0C")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x400060B")]
		None,
		[Token(Token = "0x400060C")]
		Replace,
		[Token(Token = "0x400060D")]
		Merge,
		[Token(Token = "0x400060E")]
		AddNewTerms
	}
	[Token(Token = "0x2000101")]
	public class LocalizationReader
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xEEF338", Offset = "0xEEF338", VA = "0xEEF338")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xEEF58C", Offset = "0xEEF58C", VA = "0xEEF58C")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xEEF938", Offset = "0xEEF938", VA = "0xEEF938")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xEE3488", Offset = "0xEE3488", VA = "0xEE3488")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xEEFAD4", Offset = "0xEEFAD4", VA = "0xEEFAD4")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xEEFCBC", Offset = "0xEEFCBC", VA = "0xEEFCBC")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xEE3FB8", Offset = "0xEE3FB8", VA = "0xEE3FB8")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xEEF89C", Offset = "0xEEF89C", VA = "0xEEF89C")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xEEFDE4", Offset = "0xEEFDE4", VA = "0xEEFDE4")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xEEF800", Offset = "0xEEF800", VA = "0xEEF800")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xEEFEB8", Offset = "0xEEFEB8", VA = "0xEEFEB8")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA339E8", Offset = "0xA339E8")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x2000308")]
		public enum TermModification
		{
			[Token(Token = "0x4001288")]
			DontModify,
			[Token(Token = "0x4001289")]
			ToUpper,
			[Token(Token = "0x400128A")]
			ToLower,
			[Token(Token = "0x400128B")]
			ToUpperFirst,
			[Token(Token = "0x400128C")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3472C", Offset = "0xA3472C")]
		private sealed class <>c
		{
			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<UnityEngine.Object, string> <>9__49_2;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_3;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_4;

			[Token(Token = "0x6001678")]
			[Address(RVA = "0xEF0FCC", Offset = "0xEF0FCC", VA = "0xEF0FCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001679")]
			[Address(RVA = "0xEF0FD4", Offset = "0xEF0FD4", VA = "0xEF0FD4")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x600167A")]
			[Address(RVA = "0xEF1040", Offset = "0xEF1040", VA = "0xEF1040")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600167B")]
			[Address(RVA = "0xEF1060", Offset = "0xEF1060", VA = "0xEF1060")]
			internal string <UpdateAssetDictionary>b__49_2(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600167C")]
			[Address(RVA = "0xEF1080", Offset = "0xEF1080", VA = "0xEF1080")]
			internal string <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600167D")]
			[Address(RVA = "0xEF1130", Offset = "0xEF1130", VA = "0xEF1130")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_4(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170000B0")]
		public string Term
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0xEEFEC0", Offset = "0xEEFEC0", VA = "0xEEFEC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xEEFEC8", Offset = "0xEEFEC8", VA = "0xEEFEC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0xEEFF0C", Offset = "0xEEFF0C", VA = "0xEEFF0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000706")]
			[Address(RVA = "0xEEFF14", Offset = "0xEEFF14", VA = "0xEEFF14")]
			set
			{
			}
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xEEFF78", Offset = "0xEEFF78", VA = "0xEEFF78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xEF0870", Offset = "0xEF0870", VA = "0xEF0870")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xEF0878", Offset = "0xEF0878", VA = "0xEF0878")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xEED3A0", Offset = "0xEED3A0", VA = "0xEED3A0")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xEF0380", Offset = "0xEF0380", VA = "0xEF0380")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xEF08CC", Offset = "0xEF08CC", VA = "0xEF08CC")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xEF0A28", Offset = "0xEF0A28", VA = "0xEF0A28")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xEF0B00", Offset = "0xEF0B00", VA = "0xEF0B00")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xEEFECC", Offset = "0xEEFECC", VA = "0xEEFECC")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xEEFF24", Offset = "0xEEFF24", VA = "0xEEFF24")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6000711")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xEEFFBC", Offset = "0xEEFFBC", VA = "0xEEFFBC")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6000713")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000714")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xEF0B48", Offset = "0xEF0B48", VA = "0xEF0B48")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6000716")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xEF0C40", Offset = "0xEF0C40", VA = "0xEF0C40")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xEF0CD8", Offset = "0xEF0CD8", VA = "0xEF0CD8")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xEF0D78", Offset = "0xEF0D78", VA = "0xEF0D78")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xEF0DDC", Offset = "0xEF0DDC", VA = "0xEF0DDC")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA33A20", Offset = "0xA33A20")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xEF1180", Offset = "0xEF1180", VA = "0xEF1180")]
		public void Start()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xEF1310", Offset = "0xEF1310", VA = "0xEF1310")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xEF13A0", Offset = "0xEF13A0", VA = "0xEF13A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xEF1218", Offset = "0xEF1218", VA = "0xEF1218")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xEF1404", Offset = "0xEF1404", VA = "0xEF1404")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xEF15A4", Offset = "0xEF15A4", VA = "0xEF15A4")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xEF196C", Offset = "0xEF196C", VA = "0xEF196C")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xEF17E4", Offset = "0xEF17E4", VA = "0xEF17E4")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xEF1BA0", Offset = "0xEF1BA0", VA = "0xEF1BA0")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public static class LocalizationManager
	{
		[Token(Token = "0x200030A")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x200030B")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3473C", Offset = "0xA3473C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6001686")]
			[Address(RVA = "0xEE9F04", Offset = "0xEE9F04", VA = "0xEE9F04")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0xEEE954", Offset = "0xEEE954", VA = "0xEEE954")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3474C", Offset = "0xA3474C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6001688")]
			[Address(RVA = "0xEEA10C", Offset = "0xEEA10C", VA = "0xEEA10C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0xEEE9C8", Offset = "0xEEE9C8", VA = "0xEEE9C8")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3475C", Offset = "0xA3475C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__40_0;

			[Token(Token = "0x600168B")]
			[Address(RVA = "0xEEE8E4", Offset = "0xEEE8E4", VA = "0xEEE8E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600168C")]
			[Address(RVA = "0xEEE8EC", Offset = "0xEEE8EC", VA = "0xEEE8EC")]
			internal object <ApplyLocalizationParams>b__40_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3476C", Offset = "0xA3476C")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600168D")]
			[Address(RVA = "0xEEAA30", Offset = "0xEEAA30", VA = "0xEEAA30")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600168E")]
			[Address(RVA = "0xEEEA3C", Offset = "0xEEEA3C", VA = "0xEEEA3C")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3477C", Offset = "0xA3477C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x600168F")]
			[Address(RVA = "0xEEAB0C", Offset = "0xEEAB0C", VA = "0xEEAB0C")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001690")]
			[Address(RVA = "0xEEEAB4", Offset = "0xEEEAB4", VA = "0xEEEAB4")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3478C", Offset = "0xA3478C")]
		private sealed class <Delayed_Import_Google>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001694")]
				[Address(RVA = "0xEEED70", Offset = "0xEEED70", VA = "0xEEED70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001696")]
				[Address(RVA = "0xEEEDDC", Offset = "0xEEEDDC", VA = "0xEEEDDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001691")]
			[Address(RVA = "0xEEBF34", Offset = "0xEEBF34", VA = "0xEEBF34")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001692")]
			[Address(RVA = "0xEEECB8", Offset = "0xEEECB8", VA = "0xEEECB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001693")]
			[Address(RVA = "0xEEECBC", Offset = "0xEEECBC", VA = "0xEEECBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001695")]
			[Address(RVA = "0xEEED78", Offset = "0xEEED78", VA = "0xEEED78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3479C", Offset = "0xA3479C")]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6001697")]
			[Address(RVA = "0xEEC9E4", Offset = "0xEEC9E4", VA = "0xEEC9E4")]
			public <>c__DisplayClass67_0()
			{
			}

			[Token(Token = "0x6001698")]
			[Address(RVA = "0xEEEB34", Offset = "0xEEEB34", VA = "0xEEEB34")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347AC", Offset = "0xA347AC")]
		private sealed class <Coroutine_LocalizeAll>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600169C")]
				[Address(RVA = "0xEEEC44", Offset = "0xEEEC44", VA = "0xEEEC44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600169E")]
				[Address(RVA = "0xEEECB0", Offset = "0xEEECB0", VA = "0xEEECB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001699")]
			[Address(RVA = "0xEED374", Offset = "0xEED374", VA = "0xEED374")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x600169A")]
			[Address(RVA = "0xEEEB64", Offset = "0xEEEB64", VA = "0xEEEB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600169B")]
			[Address(RVA = "0xEEEB68", Offset = "0xEEEB68", VA = "0xEEEB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600169D")]
			[Address(RVA = "0xEEEC4C", Offset = "0xEEEC4C", VA = "0xEEEC4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170000B2")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xEE4B90", Offset = "0xEE4B90", VA = "0xEE4B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000729")]
			[Address(RVA = "0xEE8570", Offset = "0xEE8570", VA = "0xEE8570")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xEE8ED0", Offset = "0xEE8ED0", VA = "0xEE8ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xEE8F3C", Offset = "0xEE8F3C", VA = "0xEE8F3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public static string CurrentRegion
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xEE9228", Offset = "0xEE9228", VA = "0xEE9228")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xEE9384", Offset = "0xEE9384", VA = "0xEE9384")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xEE951C", Offset = "0xEE951C", VA = "0xEE951C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072F")]
			[Address(RVA = "0xEE95E8", Offset = "0xEE95E8", VA = "0xEE95E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xEE96F4", Offset = "0xEE96F4", VA = "0xEE96F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001B")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0xEEC9EC", Offset = "0xEEC9EC", VA = "0xEEC9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3ED54", Offset = "0xA3ED54")]
			add
			{
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xEECADC", Offset = "0xEECADC", VA = "0xEECADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3ED64", Offset = "0xA3ED64")]
			remove
			{
			}
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xEE7F38", Offset = "0xEE7F38", VA = "0xEE7F38")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xEE8528", Offset = "0xEE8528", VA = "0xEE8528")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xEE5A70", Offset = "0xEE5A70", VA = "0xEE5A70")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xEE3078", Offset = "0xEE3078", VA = "0xEE3078")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xEE8CD0", Offset = "0xEE8CD0", VA = "0xEE8CD0")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xEE975C", Offset = "0xEE975C", VA = "0xEE975C")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xEE9970", Offset = "0xEE9970", VA = "0xEE9970")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xEE985C", Offset = "0xEE985C", VA = "0xEE985C")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xEE809C", Offset = "0xEE809C", VA = "0xEE809C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xEE9AD8", Offset = "0xEE9AD8", VA = "0xEE9AD8")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xEE8660", Offset = "0xEE8660", VA = "0xEE8660")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xEE8AE8", Offset = "0xEE8AE8", VA = "0xEE8AE8")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xEE9030", Offset = "0xEE9030", VA = "0xEE9030")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xEE9CE0", Offset = "0xEE9CE0", VA = "0xEE9CE0")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xEE9F0C", Offset = "0xEE9F0C", VA = "0xEE9F0C")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xEEA114", Offset = "0xEEA114", VA = "0xEEA114")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xEEA220", Offset = "0xEEA220", VA = "0xEEA220")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xEEA370", Offset = "0xEEA370", VA = "0xEEA370")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xEEA458", Offset = "0xEEA458", VA = "0xEEA458")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xEEA95C", Offset = "0xEEA95C", VA = "0xEEA95C")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xEEAA38", Offset = "0xEEAA38", VA = "0xEEAA38")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xEEA570", Offset = "0xEEA570", VA = "0xEEA570")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xEEB044", Offset = "0xEEB044", VA = "0xEEB044")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xEEB2F8", Offset = "0xEEB2F8", VA = "0xEEB2F8")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xEEB4D0", Offset = "0xEEB4D0", VA = "0xEEB4D0")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xEEB53C", Offset = "0xEEB53C", VA = "0xEEB53C")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xEEB928", Offset = "0xEEB928", VA = "0xEEB928")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xEE98E8", Offset = "0xEE98E8", VA = "0xEE98E8")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xEE8010", Offset = "0xEE8010", VA = "0xEE8010")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xEEB9DC", Offset = "0xEEB9DC", VA = "0xEEB9DC")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xEEBCD0", Offset = "0xEEBCD0", VA = "0xEEBCD0")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xEEBB1C", Offset = "0xEEBB1C", VA = "0xEEBB1C")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xEDFFB0", Offset = "0xEDFFB0", VA = "0xEDFFB0")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xEEBE9C", Offset = "0xEEBE9C", VA = "0xEEBE9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ECF0", Offset = "0xA3ECF0")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xEE08B8", Offset = "0xEE08B8", VA = "0xEE08B8")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xEEBF60", Offset = "0xEEBF60", VA = "0xEEBF60")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xEEBFE8", Offset = "0xEEBFE8", VA = "0xEEBFE8")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xEEC1D8", Offset = "0xEEC1D8", VA = "0xEEC1D8")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xEE9A24", Offset = "0xEE9A24", VA = "0xEE9A24")]
		public static string GetCurrentDeviceLanguage()
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xEEC318", Offset = "0xEEC318", VA = "0xEEC318")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xEEC7BC", Offset = "0xEEC7BC", VA = "0xEEC7BC")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xEECBCC", Offset = "0xEECBCC", VA = "0xEECBCC")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xEECE90", Offset = "0xEECE90", VA = "0xEECE90")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xEECC90", Offset = "0xEECC90", VA = "0xEECC90")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x600075B")]
		public static T GetTranslatedObject<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xEECF3C", Offset = "0xEECF3C", VA = "0xEECF3C")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xEE07B0", Offset = "0xEE07B0", VA = "0xEE07B0")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xEED314", Offset = "0xEED314", VA = "0xEED314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ED74", Offset = "0xA3ED74")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xEED190", Offset = "0xEED190", VA = "0xEED190")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xEEDE54", Offset = "0xEEDE54", VA = "0xEEDE54")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xEEDF78", Offset = "0xEEDF78", VA = "0xEEDF78")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xEEE1C0", Offset = "0xEEE1C0", VA = "0xEEE1C0")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xEEAED0", Offset = "0xEEAED0", VA = "0xEEAED0")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000105")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6000765")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6000766")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6000767")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6000768")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6000769")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x600076A")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x600076B")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x600076C")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xEDF3EC", Offset = "0xEDF3EC", VA = "0xEDF3EC")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x600076E")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6000770")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6000771")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6000772")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xEDF3F4", Offset = "0xEDF3F4", VA = "0xEDF3F4")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6000774")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6000777")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000778")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000779")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xEF1CF4", Offset = "0xEF1CF4", VA = "0xEF1CF4")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xEF1CF8", Offset = "0xEF1CF8", VA = "0xEF1CF8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EDD8", Offset = "0xA3EDD8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xEF1DA0", Offset = "0xEF1DA0", VA = "0xEF1DA0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xEF1DA8", Offset = "0xEF1DA8", VA = "0xEF1DA8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xEF1DB0", Offset = "0xEF1DB0", VA = "0xEF1DB0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xEF1DB8", Offset = "0xEF1DB8", VA = "0xEF1DB8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xEF1DC0", Offset = "0xEF1DC0", VA = "0xEF1DC0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xEF1DC8", Offset = "0xEF1DC8", VA = "0xEF1DC8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xEF1EDC", Offset = "0xEF1EDC", VA = "0xEF1EDC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xEF24F8", Offset = "0xEF24F8", VA = "0xEF24F8")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xEF2790", Offset = "0xEF2790", VA = "0xEF2790")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xEF23EC", Offset = "0xEF23EC", VA = "0xEF23EC")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xEF2664", Offset = "0xEF2664", VA = "0xEF2664")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xEF29A4", Offset = "0xEF29A4", VA = "0xEF29A4")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xEF2A08", Offset = "0xEF2A08", VA = "0xEF2A08")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xEF2A0C", Offset = "0xEF2A0C", VA = "0xEF2A0C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EDEC", Offset = "0xA3EDEC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xEF2AB4", Offset = "0xEF2AB4", VA = "0xEF2AB4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xEF2ABC", Offset = "0xEF2ABC", VA = "0xEF2ABC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xEF2AC4", Offset = "0xEF2AC4", VA = "0xEF2AC4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xEF2ACC", Offset = "0xEF2ACC", VA = "0xEF2ACC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xEF2AD4", Offset = "0xEF2AD4", VA = "0xEF2AD4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xEF2ADC", Offset = "0xEF2ADC", VA = "0xEF2ADC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xEF2BF0", Offset = "0xEF2BF0", VA = "0xEF2BF0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xEF3100", Offset = "0xEF3100", VA = "0xEF3100")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6000792")]
		[Address(RVA = "0xEF3164", Offset = "0xEF3164", VA = "0xEF3164")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xEF3168", Offset = "0xEF3168", VA = "0xEF3168")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE00", Offset = "0xA3EE00")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xEF3210", Offset = "0xEF3210", VA = "0xEF3210", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xEF3218", Offset = "0xEF3218", VA = "0xEF3218", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xEF3220", Offset = "0xEF3220", VA = "0xEF3220", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xEF3228", Offset = "0xEF3228", VA = "0xEF3228", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xEF3230", Offset = "0xEF3230", VA = "0xEF3230", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xEF3238", Offset = "0xEF3238", VA = "0xEF3238", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xEF3310", Offset = "0xEF3310", VA = "0xEF3310", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xEF3494", Offset = "0xEF3494", VA = "0xEF3494")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0xEF1C10", Offset = "0xEF1C10", VA = "0xEF1C10", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xEF1C4C", Offset = "0xEF1C4C", VA = "0xEF1C4C")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0xEF34E4", Offset = "0xEF34E4", VA = "0xEF34E4")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xEF34E8", Offset = "0xEF34E8", VA = "0xEF34E8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE14", Offset = "0xA3EE14")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xEF3584", Offset = "0xEF3584", VA = "0xEF3584", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xEF35C0", Offset = "0xEF35C0", VA = "0xEF35C0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xEF35C8", Offset = "0xEF35C8", VA = "0xEF35C8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xEF35D0", Offset = "0xEF35D0", VA = "0xEF35D0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xEF35D8", Offset = "0xEF35D8", VA = "0xEF35D8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xEF35E0", Offset = "0xEF35E0", VA = "0xEF35E0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xEF35E8", Offset = "0xEF35E8", VA = "0xEF35E8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xEF3628", Offset = "0xEF3628", VA = "0xEF3628", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xEF3788", Offset = "0xEF3788", VA = "0xEF3788")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class LocalizeTarget_UnityStandard_GUIText : LocalizeTarget<GUIText>
	{
		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xEF37D8", Offset = "0xEF37D8", VA = "0xEF37D8")]
		static LocalizeTarget_UnityStandard_GUIText()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xEF37DC", Offset = "0xEF37DC", VA = "0xEF37DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE28", Offset = "0xA3EE28")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xEF3884", Offset = "0xEF3884", VA = "0xEF3884", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xEF388C", Offset = "0xEF388C", VA = "0xEF388C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xEF3894", Offset = "0xEF3894", VA = "0xEF3894", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xEF389C", Offset = "0xEF389C", VA = "0xEF389C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xEF38A4", Offset = "0xEF38A4", VA = "0xEF38A4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xEF38AC", Offset = "0xEF38AC", VA = "0xEF38AC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xEF39E0", Offset = "0xEF39E0", VA = "0xEF39E0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xEF3C38", Offset = "0xEF3C38", VA = "0xEF3C38")]
		public LocalizeTarget_UnityStandard_GUIText()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class LocalizeTarget_UnityStandard_GUITexture : LocalizeTarget<GUITexture>
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xEF3C98", Offset = "0xEF3C98", VA = "0xEF3C98")]
		static LocalizeTarget_UnityStandard_GUITexture()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xEF3C9C", Offset = "0xEF3C9C", VA = "0xEF3C9C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE3C", Offset = "0xA3EE3C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xEF3D44", Offset = "0xEF3D44", VA = "0xEF3D44", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xEF3D4C", Offset = "0xEF3D4C", VA = "0xEF3D4C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xEF3D54", Offset = "0xEF3D54", VA = "0xEF3D54", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xEF3D5C", Offset = "0xEF3D5C", VA = "0xEF3D5C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xEF3D64", Offset = "0xEF3D64", VA = "0xEF3D64", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xEF3D6C", Offset = "0xEF3D6C", VA = "0xEF3D6C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xEF3E44", Offset = "0xEF3E44", VA = "0xEF3E44", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xEF3F4C", Offset = "0xEF3F4C", VA = "0xEF3F4C")]
		public LocalizeTarget_UnityStandard_GUITexture()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xEF1C9C", Offset = "0xEF1C9C", VA = "0xEF1C9C", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xEF1CA4", Offset = "0xEF1CA4", VA = "0xEF1CA4")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xEF3F9C", Offset = "0xEF3F9C", VA = "0xEF3F9C")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xEF3FA0", Offset = "0xEF3FA0", VA = "0xEF3FA0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE4C", Offset = "0xA3EE4C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xEF403C", Offset = "0xEF403C", VA = "0xEF403C", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xEF4044", Offset = "0xEF4044", VA = "0xEF4044", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xEF404C", Offset = "0xEF404C", VA = "0xEF404C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xEF4054", Offset = "0xEF4054", VA = "0xEF4054", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xEF405C", Offset = "0xEF405C", VA = "0xEF405C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xEF4064", Offset = "0xEF4064", VA = "0xEF4064", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xEF406C", Offset = "0xEF406C", VA = "0xEF406C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xEF40AC", Offset = "0xEF40AC", VA = "0xEF40AC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xEF42DC", Offset = "0xEF42DC", VA = "0xEF42DC")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xEF4490", Offset = "0xEF4490", VA = "0xEF4490")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xEF44E0", Offset = "0xEF44E0", VA = "0xEF44E0")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xEF44E4", Offset = "0xEF44E4", VA = "0xEF44E4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE60", Offset = "0xA3EE60")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xEF458C", Offset = "0xEF458C", VA = "0xEF458C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xEF4594", Offset = "0xEF4594", VA = "0xEF4594", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xEF459C", Offset = "0xEF459C", VA = "0xEF459C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xEF45A4", Offset = "0xEF45A4", VA = "0xEF45A4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xEF45AC", Offset = "0xEF45AC", VA = "0xEF45AC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xEF45B4", Offset = "0xEF45B4", VA = "0xEF45B4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xEF4690", Offset = "0xEF4690", VA = "0xEF4690", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xEF4798", Offset = "0xEF4798", VA = "0xEF4798")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xEF47E8", Offset = "0xEF47E8", VA = "0xEF47E8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xEF47EC", Offset = "0xEF47EC", VA = "0xEF47EC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE74", Offset = "0xA3EE74")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xEF4894", Offset = "0xEF4894", VA = "0xEF4894", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xEF489C", Offset = "0xEF489C", VA = "0xEF489C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xEF48A4", Offset = "0xEF48A4", VA = "0xEF48A4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xEF48AC", Offset = "0xEF48AC", VA = "0xEF48AC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xEF48B4", Offset = "0xEF48B4", VA = "0xEF48B4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xEF48BC", Offset = "0xEF48BC", VA = "0xEF48BC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xEF49F0", Offset = "0xEF49F0", VA = "0xEF49F0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xEF4C68", Offset = "0xEF4C68", VA = "0xEF4C68")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xEF4CC8", Offset = "0xEF4CC8", VA = "0xEF4CC8")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xEF4CCC", Offset = "0xEF4CCC", VA = "0xEF4CCC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE88", Offset = "0xA3EE88")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xEF4D74", Offset = "0xEF4D74", VA = "0xEF4D74", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xEF4D7C", Offset = "0xEF4D7C", VA = "0xEF4D7C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xEF4D84", Offset = "0xEF4D84", VA = "0xEF4D84", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xEF4D8C", Offset = "0xEF4D8C", VA = "0xEF4D8C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xEF4E20", Offset = "0xEF4E20", VA = "0xEF4E20", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xEF4E28", Offset = "0xEF4E28", VA = "0xEF4E28", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xEF4FB4", Offset = "0xEF4FB4", VA = "0xEF4FB4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xEF50AC", Offset = "0xEF50AC", VA = "0xEF50AC")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xEF50FC", Offset = "0xEF50FC", VA = "0xEF50FC")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xEF5100", Offset = "0xEF5100", VA = "0xEF5100")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EE9C", Offset = "0xA3EE9C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xEF51A8", Offset = "0xEF51A8", VA = "0xEF51A8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xEF51B0", Offset = "0xEF51B0", VA = "0xEF51B0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xEF51B8", Offset = "0xEF51B8", VA = "0xEF51B8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xEF51C0", Offset = "0xEF51C0", VA = "0xEF51C0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xEF51C8", Offset = "0xEF51C8", VA = "0xEF51C8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xEF51D0", Offset = "0xEF51D0", VA = "0xEF51D0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xEF52B0", Offset = "0xEF52B0", VA = "0xEF52B0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xEF53A8", Offset = "0xEF53A8", VA = "0xEF53A8")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xD8A830", Offset = "0xD8A830", VA = "0xD8A830")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xD8A834", Offset = "0xD8A834", VA = "0xD8A834")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA3EEB0", Offset = "0xA3EEB0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xD8A8E0", Offset = "0xD8A8E0", VA = "0xD8A8E0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xD8A8E8", Offset = "0xD8A8E8", VA = "0xD8A8E8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xD8A8F0", Offset = "0xD8A8F0", VA = "0xD8A8F0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xD8A8F8", Offset = "0xD8A8F8", VA = "0xD8A8F8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xD8A900", Offset = "0xD8A900", VA = "0xD8A900", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xD8A908", Offset = "0xD8A908", VA = "0xD8A908", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xD8AA38", Offset = "0xD8AA38", VA = "0xD8AA38", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xD8AD6C", Offset = "0xD8AD6C", VA = "0xD8AD6C")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xD8AE2C", Offset = "0xD8AE2C", VA = "0xD8AE2C")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public enum eTermType
	{
		[Token(Token = "0x4000657")]
		Text,
		[Token(Token = "0x4000658")]
		Font,
		[Token(Token = "0x4000659")]
		Texture,
		[Token(Token = "0x400065A")]
		AudioClip,
		[Token(Token = "0x400065B")]
		GameObject,
		[Token(Token = "0x400065C")]
		Sprite,
		[Token(Token = "0x400065D")]
		Material,
		[Token(Token = "0x400065E")]
		Child,
		[Token(Token = "0x400065F")]
		TextMeshPFont,
		[Token(Token = "0x4000660")]
		Object
	}
	[Token(Token = "0x2000119")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4000662")]
		Normal = 1,
		[Token(Token = "0x4000663")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x200011A")]
	public class TermData
	{
		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xD961EC", Offset = "0xD961EC", VA = "0xD961EC")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xD96308", Offset = "0xD96308", VA = "0xD96308")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xD96404", Offset = "0xD96404", VA = "0xD96404")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xD96468", Offset = "0xD96468", VA = "0xD96468")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xD965E4", Offset = "0xD965E4", VA = "0xD965E4")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xD9662C", Offset = "0xD9662C", VA = "0xD9662C")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xD96854", Offset = "0xD96854", VA = "0xD96854")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xD968EC", Offset = "0xD968EC", VA = "0xD968EC")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xD969D4", Offset = "0xD969D4", VA = "0xD969D4")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xD96AC0", Offset = "0xD96AC0", VA = "0xD96AC0")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38390", Offset = "0xA38390")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x170000B7")]
		public string Filter
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xD96B7C", Offset = "0xD96B7C", VA = "0xD96B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EEC4", Offset = "0xA3EEC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xD96B84", Offset = "0xD96B84", VA = "0xD96B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EED4", Offset = "0xA3EED4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xD96B50", Offset = "0xD96B50", VA = "0xD96B50")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xC4E26C", Offset = "0xC4E26C", VA = "0xC4E26C")]
		public void Start()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xC4E2D0", Offset = "0xC4E2D0", VA = "0xC4E2D0")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170000B8")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xC4E8C8", Offset = "0xC4E8C8", VA = "0xC4E8C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xC4E9F4", Offset = "0xC4E9F4", VA = "0xC4E9F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xC4EA88", Offset = "0xC4EA88", VA = "0xC4EA88")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xC4EAB8", Offset = "0xC4EAB8", VA = "0xC4EAB8")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA33A58", Offset = "0xA33A58")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xC4EAC0", Offset = "0xC4EAC0", VA = "0xC4EAC0")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xC4EB84", Offset = "0xC4EB84", VA = "0xC4EB84")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xC4EC18", Offset = "0xC4EC18", VA = "0xC4EC18")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC4EC34", Offset = "0xC4EC34", VA = "0xC4EC34")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347BC", Offset = "0xA347BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xEDD744", Offset = "0xEDD744", VA = "0xEDD744")]
			public <>c()
			{
			}

			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xEDD74C", Offset = "0xEDD74C", VA = "0xEDD74C")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xEDD1E0", Offset = "0xEDD1E0", VA = "0xEDD1E0")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xEDD6D8", Offset = "0xEDD6D8", VA = "0xEDD6D8")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public static class I2Utils
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347CC", Offset = "0xA347CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool allowCategory;

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xEDEA54", Offset = "0xEDEA54", VA = "0xEDEA54")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xEDF34C", Offset = "0xEDF34C", VA = "0xEDF34C")]
			internal char <RemoveNonASCII>b__0(char c)
			{
				return default(char);
			}
		}

		[Serializable]
		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347DC", Offset = "0xA347DC")]
		private sealed class <>c
		{
			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__2_0;

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xEDF338", Offset = "0xEDF338", VA = "0xEDF338")]
			public <>c()
			{
			}

			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xEDF340", Offset = "0xEDF340", VA = "0xEDF340")]
			internal bool <SplitLine>b__2_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xEDE854", Offset = "0xEDE854", VA = "0xEDE854")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xEDE934", Offset = "0xEDE934", VA = "0xEDE934")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xEDEA5C", Offset = "0xEDEA5C", VA = "0xEDEA5C")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xEDED10", Offset = "0xEDED10", VA = "0xEDED10")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xEDEE5C", Offset = "0xEDEE5C", VA = "0xEDEE5C")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xEDEE64", Offset = "0xEDEE64", VA = "0xEDEE64")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xEDEF3C", Offset = "0xEDEF3C", VA = "0xEDEF3C")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xEDEF68", Offset = "0xEDEF68", VA = "0xEDEF68")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xEDF0C4", Offset = "0xEDF0C4", VA = "0xEDF0C4")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xEDF20C", Offset = "0xEDF20C", VA = "0xEDF20C")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xEDF2BC", Offset = "0xEDF2BC", VA = "0xEDF2BC")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x2000121")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6000823")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x2000122")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000317")]
		public struct ParamValue
		{
			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xEEEE64", Offset = "0xEEEE64", VA = "0xEEEE64", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xEEEF54", Offset = "0xEEEF54", VA = "0xEEEF54")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xEEF0B8", Offset = "0xEEF0B8", VA = "0xEEF0B8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xEEF168", Offset = "0xEEF168", VA = "0xEEF168", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xEEF16C", Offset = "0xEEF16C", VA = "0xEEF16C")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xEEF244", Offset = "0xEEF244", VA = "0xEEF244")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xEEF2C8", Offset = "0xEEF2C8", VA = "0xEEF2C8")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000123")]
	public struct LocalizedString
	{
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xD8AE8C", Offset = "0xD8AE8C", VA = "0xD8AE8C")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xD8AF60", Offset = "0xD8AF60", VA = "0xD8AF60")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xAEE8D4", Offset = "0xAEE8D4", VA = "0xAEE8D4")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xAEE918", Offset = "0xAEE918", VA = "0xAEE918", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0xD8EC68", Offset = "0xD8EC68", VA = "0xD8EC68", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xD8ED44", Offset = "0xD8ED44", VA = "0xD8ED44", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xD8EDC8", Offset = "0xD8EDC8", VA = "0xD8EDC8", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xD8EDD0", Offset = "0xD8EDD0", VA = "0xD8EDD0")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6000833")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x2000126")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170000B9")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0xD8E8B8", Offset = "0xD8E8B8", VA = "0xD8E8B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xD8EDD8", Offset = "0xD8EDD8", VA = "0xD8EDD8")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000836")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xD8EEB4", Offset = "0xD8EEB4", VA = "0xD8EEB4")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xD8F000", Offset = "0xD8F000", VA = "0xD8F000")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000839")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600083A")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xD8EE48", Offset = "0xD8EE48", VA = "0xD8EE48")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xD8F070", Offset = "0xD8F070", VA = "0xD8F070")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class RTLFixer
	{
		[Token(Token = "0x600083D")]
		[Address(RVA = "0xD8B69C", Offset = "0xD8B69C", VA = "0xD8B69C")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xD8B93C", Offset = "0xD8B93C", VA = "0xD8B93C")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xD8B6A8", Offset = "0xD8B6A8", VA = "0xD8B6A8")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xD8C8B8", Offset = "0xD8C8B8", VA = "0xD8C8B8")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x2000128")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4000678")]
		Hamza = 65152,
		[Token(Token = "0x4000679")]
		Alef = 65165,
		[Token(Token = "0x400067A")]
		AlefHamza = 65155,
		[Token(Token = "0x400067B")]
		WawHamza = 65157,
		[Token(Token = "0x400067C")]
		AlefMaksoor = 65159,
		[Token(Token = "0x400067D")]
		AlefMaksora = 64508,
		[Token(Token = "0x400067E")]
		HamzaNabera = 65161,
		[Token(Token = "0x400067F")]
		Ba = 65167,
		[Token(Token = "0x4000680")]
		Ta = 65173,
		[Token(Token = "0x4000681")]
		Tha2 = 65177,
		[Token(Token = "0x4000682")]
		Jeem = 65181,
		[Token(Token = "0x4000683")]
		H7aa = 65185,
		[Token(Token = "0x4000684")]
		Khaa2 = 65189,
		[Token(Token = "0x4000685")]
		Dal = 65193,
		[Token(Token = "0x4000686")]
		Thal = 65195,
		[Token(Token = "0x4000687")]
		Ra2 = 65197,
		[Token(Token = "0x4000688")]
		Zeen = 65199,
		[Token(Token = "0x4000689")]
		Seen = 65201,
		[Token(Token = "0x400068A")]
		Sheen = 65205,
		[Token(Token = "0x400068B")]
		S9a = 65209,
		[Token(Token = "0x400068C")]
		Dha = 65213,
		[Token(Token = "0x400068D")]
		T6a = 65217,
		[Token(Token = "0x400068E")]
		T6ha = 65221,
		[Token(Token = "0x400068F")]
		Ain = 65225,
		[Token(Token = "0x4000690")]
		Gain = 65229,
		[Token(Token = "0x4000691")]
		Fa = 65233,
		[Token(Token = "0x4000692")]
		Gaf = 65237,
		[Token(Token = "0x4000693")]
		Kaf = 65241,
		[Token(Token = "0x4000694")]
		Lam = 65245,
		[Token(Token = "0x4000695")]
		Meem = 65249,
		[Token(Token = "0x4000696")]
		Noon = 65253,
		[Token(Token = "0x4000697")]
		Ha = 65257,
		[Token(Token = "0x4000698")]
		Waw = 65261,
		[Token(Token = "0x4000699")]
		Ya = 65265,
		[Token(Token = "0x400069A")]
		AlefMad = 65153,
		[Token(Token = "0x400069B")]
		TaMarboota = 65171,
		[Token(Token = "0x400069C")]
		PersianPe = 64342,
		[Token(Token = "0x400069D")]
		PersianChe = 64378,
		[Token(Token = "0x400069E")]
		PersianZe = 64394,
		[Token(Token = "0x400069F")]
		PersianGaf = 64402,
		[Token(Token = "0x40006A0")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x2000129")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40006A2")]
		Hamza = 1569,
		[Token(Token = "0x40006A3")]
		Alef = 1575,
		[Token(Token = "0x40006A4")]
		AlefHamza = 1571,
		[Token(Token = "0x40006A5")]
		WawHamza = 1572,
		[Token(Token = "0x40006A6")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40006A7")]
		AlefMagsora = 1609,
		[Token(Token = "0x40006A8")]
		HamzaNabera = 1574,
		[Token(Token = "0x40006A9")]
		Ba = 1576,
		[Token(Token = "0x40006AA")]
		Ta = 1578,
		[Token(Token = "0x40006AB")]
		Tha2 = 1579,
		[Token(Token = "0x40006AC")]
		Jeem = 1580,
		[Token(Token = "0x40006AD")]
		H7aa = 1581,
		[Token(Token = "0x40006AE")]
		Khaa2 = 1582,
		[Token(Token = "0x40006AF")]
		Dal = 1583,
		[Token(Token = "0x40006B0")]
		Thal = 1584,
		[Token(Token = "0x40006B1")]
		Ra2 = 1585,
		[Token(Token = "0x40006B2")]
		Zeen = 1586,
		[Token(Token = "0x40006B3")]
		Seen = 1587,
		[Token(Token = "0x40006B4")]
		Sheen = 1588,
		[Token(Token = "0x40006B5")]
		S9a = 1589,
		[Token(Token = "0x40006B6")]
		Dha = 1590,
		[Token(Token = "0x40006B7")]
		T6a = 1591,
		[Token(Token = "0x40006B8")]
		T6ha = 1592,
		[Token(Token = "0x40006B9")]
		Ain = 1593,
		[Token(Token = "0x40006BA")]
		Gain = 1594,
		[Token(Token = "0x40006BB")]
		Fa = 1601,
		[Token(Token = "0x40006BC")]
		Gaf = 1602,
		[Token(Token = "0x40006BD")]
		Kaf = 1603,
		[Token(Token = "0x40006BE")]
		Lam = 1604,
		[Token(Token = "0x40006BF")]
		Meem = 1605,
		[Token(Token = "0x40006C0")]
		Noon = 1606,
		[Token(Token = "0x40006C1")]
		Ha = 1607,
		[Token(Token = "0x40006C2")]
		Waw = 1608,
		[Token(Token = "0x40006C3")]
		Ya = 1610,
		[Token(Token = "0x40006C4")]
		AlefMad = 1570,
		[Token(Token = "0x40006C5")]
		TaMarboota = 1577,
		[Token(Token = "0x40006C6")]
		PersianPe = 1662,
		[Token(Token = "0x40006C7")]
		PersianChe = 1670,
		[Token(Token = "0x40006C8")]
		PersianZe = 1688,
		[Token(Token = "0x40006C9")]
		PersianGaf = 1711,
		[Token(Token = "0x40006CA")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x200012A")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xC4D5BC", Offset = "0xC4D5BC", VA = "0xC4D5BC")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x200012B")]
	internal class ArabicTable
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170000BA")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0xC4E0DC", Offset = "0xC4E0DC", VA = "0xC4E0DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xC4D5F4", Offset = "0xC4D5F4", VA = "0xC4D5F4")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xC4E154", Offset = "0xC4E154", VA = "0xC4E154")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200012C")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xD8CE68", Offset = "0xD8CE68", VA = "0xD8CE68")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x200012D")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xD8C8C0", Offset = "0xD8C8C0", VA = "0xD8C8C0")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xD8CEA4", Offset = "0xD8CEA4", VA = "0xD8CEA4")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xD8BB80", Offset = "0xD8BB80", VA = "0xD8BB80")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xD8D0A8", Offset = "0xD8D0A8", VA = "0xD8D0A8")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xD8D71C", Offset = "0xD8D71C", VA = "0xD8D71C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xD8D5B0", Offset = "0xD8D5B0", VA = "0xD8D5B0")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xD8D224", Offset = "0xD8D224", VA = "0xD8D224")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xD8DA60", Offset = "0xD8DA60", VA = "0xD8DA60")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA33AA0", Offset = "0xA33AA0")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xD8F17C", Offset = "0xD8F17C", VA = "0xD8F17C")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xD8F180", Offset = "0xD8F180", VA = "0xD8F180")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xD8F23C", Offset = "0xD8F23C", VA = "0xD8F23C")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA33AD8", Offset = "0xA33AD8")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6000852")]
		[Address(RVA = "0xD8F244", Offset = "0xD8F244", VA = "0xD8F244")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xD8F474", Offset = "0xD8F474", VA = "0xD8F474")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xD8F568", Offset = "0xD8F568", VA = "0xD8F568")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class StringObfucator
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xD95CA0", Offset = "0xD95CA0", VA = "0xD95CA0")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xD95FF4", Offset = "0xD95FF4", VA = "0xD95FF4")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xD95F60", Offset = "0xD95F60", VA = "0xD95F60")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xD960D8", Offset = "0xD960D8", VA = "0xD960D8")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xD95D84", Offset = "0xD95D84", VA = "0xD95D84")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xD96178", Offset = "0xD96178", VA = "0xD96178")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x2000131")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x40006D6")]
		Array = 1,
		[Token(Token = "0x40006D7")]
		Class,
		[Token(Token = "0x40006D8")]
		Value,
		[Token(Token = "0x40006D9")]
		IntValue,
		[Token(Token = "0x40006DA")]
		DoubleValue,
		[Token(Token = "0x40006DB")]
		BoolValue,
		[Token(Token = "0x40006DC")]
		FloatValue
	}
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA33B10", Offset = "0xA33B10")]
	public class JSONNode
	{
		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347EC", Offset = "0xA347EC")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000281")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60016AA")]
				[Address(RVA = "0xD949DC", Offset = "0xD949DC", VA = "0xD949DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016AC")]
				[Address(RVA = "0xD94A48", Offset = "0xD94A48", VA = "0xD94A48", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xD9366C", Offset = "0xD9366C", VA = "0xD9366C")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xD949C0", Offset = "0xD949C0", VA = "0xD949C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xD949C4", Offset = "0xD949C4", VA = "0xD949C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xD949E4", Offset = "0xD949E4", VA = "0xD949E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xD94A50", Offset = "0xD94A50", VA = "0xD94A50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xD94AE8", Offset = "0xD94AE8", VA = "0xD94AE8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA347FC", Offset = "0xA347FC")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000283")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60016B4")]
				[Address(RVA = "0xD95108", Offset = "0xD95108", VA = "0xD95108", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B6")]
				[Address(RVA = "0xD95174", Offset = "0xD95174", VA = "0xD95174", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xD93728", Offset = "0xD93728", VA = "0xD93728")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xD94AEC", Offset = "0xD94AEC", VA = "0xD94AEC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xD94CE4", Offset = "0xD94CE4", VA = "0xD94CE4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xD94C24", Offset = "0xD94C24", VA = "0xD94C24")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xD94B64", Offset = "0xD94B64", VA = "0xD94B64")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xD95110", Offset = "0xD95110", VA = "0xD95110", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xD9517C", Offset = "0xD9517C", VA = "0xD9517C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xD9522C", Offset = "0xD9522C", VA = "0xD9522C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xD93510", Offset = "0xD93510", VA = "0xD93510", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xD93518", Offset = "0xD93518", VA = "0xD93518", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xD9351C", Offset = "0xD9351C", VA = "0xD9351C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xD93524", Offset = "0xD93524", VA = "0xD93524", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public virtual string Value
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xD93528", Offset = "0xD93528", VA = "0xD93528", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xD93570", Offset = "0xD93570", VA = "0xD93570", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public virtual int Count
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xD93574", Offset = "0xD93574", VA = "0xD93574", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000BF")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xD935FC", Offset = "0xD935FC", VA = "0xD935FC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EEF4", Offset = "0xA3EEF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xD936A4", Offset = "0xD936A4", VA = "0xD936A4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EF58", Offset = "0xA3EF58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public virtual int AsInt
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xD937F0", Offset = "0xD937F0", VA = "0xD937F0", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xD93830", Offset = "0xD93830", VA = "0xD93830", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public virtual float AsFloat
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xD93870", Offset = "0xD93870", VA = "0xD93870", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xD938B4", Offset = "0xD938B4", VA = "0xD938B4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xD938F4", Offset = "0xD938F4", VA = "0xD938F4", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xD93998", Offset = "0xD93998", VA = "0xD93998", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xD939D8", Offset = "0xD939D8", VA = "0xD939D8", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xD93AA0", Offset = "0xD93AA0", VA = "0xD93AA0", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xD93B20", Offset = "0xD93B20", VA = "0xD93B20", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xD93BA0", Offset = "0xD93BA0", VA = "0xD93BA0", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xD9350C", Offset = "0xD9350C", VA = "0xD9350C", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xD9357C", Offset = "0xD9357C", VA = "0xD9357C", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xD935E4", Offset = "0xD935E4", VA = "0xD935E4", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xD935EC", Offset = "0xD935EC", VA = "0xD935EC", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xD935F4", Offset = "0xD935F4", VA = "0xD935F4", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xD93760", Offset = "0xD93760", VA = "0xD93760", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xD937A8", Offset = "0xD937A8", VA = "0xD937A8", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xD93C20", Offset = "0xD93C20", VA = "0xD93C20")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xD93C84", Offset = "0xD93C84", VA = "0xD93C84")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xD920EC", Offset = "0xD920EC", VA = "0xD920EC")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xD93CD4", Offset = "0xD93CD4", VA = "0xD93CD4")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xD93CF0", Offset = "0xD93CF0", VA = "0xD93CF0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xD92F74", Offset = "0xD92F74", VA = "0xD92F74", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xD91868", Offset = "0xD91868", VA = "0xD91868")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xD8F574", Offset = "0xD8F574", VA = "0xD8F574")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xD93CFC", Offset = "0xD93CFC", VA = "0xD93CFC", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xD93D00", Offset = "0xD93D00", VA = "0xD93D00")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xD93D80", Offset = "0xD93D80", VA = "0xD93D80")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xD93DF0", Offset = "0xD93DF0", VA = "0xD93DF0")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xD93E60", Offset = "0xD93E60", VA = "0xD93E60")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xD93ED0", Offset = "0xD93ED0", VA = "0xD93ED0")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xD9403C", Offset = "0xD9403C", VA = "0xD9403C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xD941D8", Offset = "0xD941D8", VA = "0xD941D8")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xD9456C", Offset = "0xD9456C", VA = "0xD9456C")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xD945DC", Offset = "0xD945DC", VA = "0xD945DC")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xD9464C", Offset = "0xD9464C", VA = "0xD9464C")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xD946BC", Offset = "0xD946BC", VA = "0xD946BC")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xD947EC", Offset = "0xD947EC", VA = "0xD947EC")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xD94908", Offset = "0xD94908", VA = "0xD94908")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xD90680", Offset = "0xD90680", VA = "0xD90680")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA33B48", Offset = "0xA33B48")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3480C", Offset = "0xA3480C")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000285")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60016BD")]
				[Address(RVA = "0xD90A94", Offset = "0xD90A94", VA = "0xD90A94", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016BF")]
				[Address(RVA = "0xD90B00", Offset = "0xD90B00", VA = "0xD90B00", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xD900B0", Offset = "0xD900B0", VA = "0xD900B0")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xD908C8", Offset = "0xD908C8", VA = "0xD908C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xD9093C", Offset = "0xD9093C", VA = "0xD9093C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xD908E4", Offset = "0xD908E4", VA = "0xD908E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xD90A9C", Offset = "0xD90A9C", VA = "0xD90A9C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xD90B08", Offset = "0xD90B08", VA = "0xD90B08", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xD90BB8", Offset = "0xD90BB8", VA = "0xD90BB8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3481C", Offset = "0xA3481C")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016C6")]
				[Address(RVA = "0xD90854", Offset = "0xD90854", VA = "0xD90854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C8")]
				[Address(RVA = "0xD908C0", Offset = "0xD908C0", VA = "0xD908C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xD9015C", Offset = "0xD9015C", VA = "0xD9015C")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xD90688", Offset = "0xD90688", VA = "0xD90688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xD906FC", Offset = "0xD906FC", VA = "0xD906FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xD906A4", Offset = "0xD906A4", VA = "0xD906A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xD9085C", Offset = "0xD9085C", VA = "0xD9085C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170000C7")]
		public override JSONNode Item
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xD8FC08", Offset = "0xD8FC08", VA = "0xD8FC08", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xD8FCE0", Offset = "0xD8FCE0", VA = "0xD8FCE0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public override JSONNode Item
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xD8FD84", Offset = "0xD8FD84", VA = "0xD8FD84", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xD8FDE8", Offset = "0xD8FDE8", VA = "0xD8FDE8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public override int Count
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xD8FE50", Offset = "0xD8FE50", VA = "0xD8FE50", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CA")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0xD9002C", Offset = "0xD9002C", VA = "0xD9002C", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EFBC", Offset = "0xA3EFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xD8FEA4", Offset = "0xD8FEA4", VA = "0xD8FEA4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xD8FF0C", Offset = "0xD8FF0C", VA = "0xD8FF0C", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xD8FFBC", Offset = "0xD8FFBC", VA = "0xD8FFBC", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xD900E8", Offset = "0xD900E8", VA = "0xD900E8", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F020", Offset = "0xA3F020")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xD90188", Offset = "0xD90188", VA = "0xD90188", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xD90330", Offset = "0xD90330", VA = "0xD90330", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xD9052C", Offset = "0xD9052C", VA = "0xD9052C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xD90610", Offset = "0xD90610", VA = "0xD90610")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA33B80", Offset = "0xA33B80")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3482C", Offset = "0xA3482C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xD9135C", Offset = "0xD9135C", VA = "0xD9135C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xD92098", Offset = "0xD92098", VA = "0xD92098")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3483C", Offset = "0xA3483C")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000289")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60016CF")]
				[Address(RVA = "0xD925C4", Offset = "0xD925C4", VA = "0xD925C4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D1")]
				[Address(RVA = "0xD92630", Offset = "0xD92630", VA = "0xD92630", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xD913E8", Offset = "0xD913E8", VA = "0xD913E8")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xD923EC", Offset = "0xD923EC", VA = "0xD923EC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xD92460", Offset = "0xD92460", VA = "0xD92460", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xD92408", Offset = "0xD92408", VA = "0xD92408")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xD925CC", Offset = "0xD925CC", VA = "0xD925CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xD92638", Offset = "0xD92638", VA = "0xD92638", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xD926E8", Offset = "0xD926E8", VA = "0xD926E8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3484C", Offset = "0xA3484C")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016D8")]
				[Address(RVA = "0xD92378", Offset = "0xD92378", VA = "0xD92378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016DA")]
				[Address(RVA = "0xD923E4", Offset = "0xD923E4", VA = "0xD923E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xD91494", Offset = "0xD91494", VA = "0xD91494")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xD92184", Offset = "0xD92184", VA = "0xD92184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xD921F8", Offset = "0xD921F8", VA = "0xD921F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xD921A0", Offset = "0xD921A0", VA = "0xD921A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xD92380", Offset = "0xD92380", VA = "0xD92380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170000CB")]
		public override JSONNode Item
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xD90BBC", Offset = "0xD90BBC", VA = "0xD90BBC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xD90CB0", Offset = "0xD90CB0", VA = "0xD90CB0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public override JSONNode Item
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xD90D74", Offset = "0xD90D74", VA = "0xD90D74", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xD90E0C", Offset = "0xD90E0C", VA = "0xD90E0C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public override int Count
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xD90ED4", Offset = "0xD90ED4", VA = "0xD90ED4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CE")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xD91364", Offset = "0xD91364", VA = "0xD91364", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F084", Offset = "0xA3F084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xD90F2C", Offset = "0xD90F2C", VA = "0xD90F2C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xD9105C", Offset = "0xD9105C", VA = "0xD9105C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xD91120", Offset = "0xD91120", VA = "0xD91120", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xD911DC", Offset = "0xD911DC", VA = "0xD911DC", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xD91420", Offset = "0xD91420", VA = "0xD91420", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F0E8", Offset = "0xA3F0E8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xD914C0", Offset = "0xD914C0", VA = "0xD914C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xD919E8", Offset = "0xD919E8", VA = "0xD919E8", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xD91DF0", Offset = "0xD91DF0", VA = "0xD91DF0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xD91FB4", Offset = "0xD91FB4", VA = "0xD91FB4")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170000CF")]
		public override string Value
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xD926EC", Offset = "0xD926EC", VA = "0xD926EC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xD926F4", Offset = "0xD926F4", VA = "0xD926F4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xD926FC", Offset = "0xD926FC", VA = "0xD926FC")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xD92728", Offset = "0xD92728", VA = "0xD92728")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xD9276C", Offset = "0xD9276C", VA = "0xD9276C")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xD927B0", Offset = "0xD927B0", VA = "0xD927B0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xD927EC", Offset = "0xD927EC", VA = "0xD927EC")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xD92828", Offset = "0xD92828", VA = "0xD92828", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xD9288C", Offset = "0xD9288C", VA = "0xD9288C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xD928F0", Offset = "0xD928F0", VA = "0xD928F0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA33BB8", Offset = "0xA33BB8")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170000D0")]
		public override JSONNode Item
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xD92C10", Offset = "0xD92C10", VA = "0xD92C10", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xD92C74", Offset = "0xD92C74", VA = "0xD92C74", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public override JSONNode Item
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xD92D00", Offset = "0xD92D00", VA = "0xD92D00", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xD92D70", Offset = "0xD92D70", VA = "0xD92D70", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public override int AsInt
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xD9300C", Offset = "0xD9300C", VA = "0xD9300C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xD93090", Offset = "0xD93090", VA = "0xD93090", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public override float AsFloat
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xD93118", Offset = "0xD93118", VA = "0xD93118", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xD9319C", Offset = "0xD9319C", VA = "0xD9319C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public override double AsDouble
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xD93224", Offset = "0xD93224", VA = "0xD93224", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xD932A8", Offset = "0xD932A8", VA = "0xD932A8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public override bool AsBool
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xD93330", Offset = "0xD93330", VA = "0xD93330", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xD933B4", Offset = "0xD933B4", VA = "0xD933B4", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xD9343C", Offset = "0xD9343C", VA = "0xD9343C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0xD934A4", Offset = "0xD934A4", VA = "0xD934A4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xD8FCB4", Offset = "0xD8FCB4", VA = "0xD8FCB4")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xD90C78", Offset = "0xD90C78", VA = "0xD90C78")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xD92BB0", Offset = "0xD92BB0", VA = "0xD92BB0")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xD92E04", Offset = "0xD92E04", VA = "0xD92E04", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xD92E90", Offset = "0xD92E90", VA = "0xD92E90", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xD92F24", Offset = "0xD92F24", VA = "0xD92F24")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xD92F3C", Offset = "0xD92F3C", VA = "0xD92F3C")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xD92F54", Offset = "0xD92F54", VA = "0xD92F54", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xD92F6C", Offset = "0xD92F6C", VA = "0xD92F6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xD92F7C", Offset = "0xD92F7C", VA = "0xD92F7C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xD92FC4", Offset = "0xD92FC4", VA = "0xD92FC4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public static class JSON
	{
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xD8F570", Offset = "0xD8F570", VA = "0xD8F570")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000138")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3485C", Offset = "0xA3485C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xD159F8", Offset = "0xD159F8", VA = "0xD159F8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xD161C0", Offset = "0xD161C0", VA = "0xD161C0")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xD161DC", Offset = "0xD161DC", VA = "0xD161DC")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3486C", Offset = "0xA3486C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xD15B40", Offset = "0xD15B40", VA = "0xD15B40")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xD161F8", Offset = "0xD161F8", VA = "0xD161F8")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xD16214", Offset = "0xD16214", VA = "0xD16214")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3487C", Offset = "0xA3487C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xD15C8C", Offset = "0xD15C8C", VA = "0xD15C8C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xD16230", Offset = "0xD16230", VA = "0xD16230")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xD16270", Offset = "0xD16270", VA = "0xD16270")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xD15890", Offset = "0xD15890", VA = "0xD15890")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xD15A00", Offset = "0xD15A00", VA = "0xD15A00")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xD15B48", Offset = "0xD15B48", VA = "0xD15B48")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xD15C94", Offset = "0xD15C94", VA = "0xD15C94")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xD15D0C", Offset = "0xD15D0C", VA = "0xD15D0C")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xD15D84", Offset = "0xD15D84", VA = "0xD15D84")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xD15DEC", Offset = "0xD15DEC", VA = "0xD15DEC")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xD15E74", Offset = "0xD15E74", VA = "0xD15E74")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xD15EDC", Offset = "0xD15EDC", VA = "0xD15EDC")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xD15F44", Offset = "0xD15F44", VA = "0xD15F44")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xD15FAC", Offset = "0xD15FAC", VA = "0xD15FAC")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xD16014", Offset = "0xD16014", VA = "0xD16014")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xD16084", Offset = "0xD16084", VA = "0xD16084")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xD160F0", Offset = "0xD160F0", VA = "0xD160F0")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xD16158", Offset = "0xD16158", VA = "0xD16158")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000139")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3488C", Offset = "0xA3488C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xD16408", Offset = "0xD16408", VA = "0xD16408")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xD177CC", Offset = "0xD177CC", VA = "0xD177CC")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3489C", Offset = "0xA3489C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xD1659C", Offset = "0xD1659C", VA = "0xD1659C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xD17910", Offset = "0xD17910", VA = "0xD17910")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348AC", Offset = "0xA348AC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xD16730", Offset = "0xD16730", VA = "0xD16730")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xD1792C", Offset = "0xD1792C", VA = "0xD1792C")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348BC", Offset = "0xA348BC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xD168C4", Offset = "0xD168C4", VA = "0xD168C4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xD17948", Offset = "0xD17948", VA = "0xD17948")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348CC", Offset = "0xA348CC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD16A3C", Offset = "0xD16A3C", VA = "0xD16A3C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xD17964", Offset = "0xD17964", VA = "0xD17964")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348DC", Offset = "0xA348DC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xD16C2C", Offset = "0xD16C2C", VA = "0xD16C2C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xD17980", Offset = "0xD17980", VA = "0xD17980")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348EC", Offset = "0xA348EC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xD170AC", Offset = "0xD170AC", VA = "0xD170AC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xD1799C", Offset = "0xD1799C", VA = "0xD1799C")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD179B8", Offset = "0xD179B8", VA = "0xD179B8")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xD179EC", Offset = "0xD179EC", VA = "0xD179EC")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xD17A08", Offset = "0xD17A08", VA = "0xD17A08")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xD17A24", Offset = "0xD17A24", VA = "0xD17A24")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA348FC", Offset = "0xA348FC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xD172A4", Offset = "0xD172A4", VA = "0xD172A4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xD17AE8", Offset = "0xD17AE8", VA = "0xD17AE8")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3490C", Offset = "0xA3490C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xD174B0", Offset = "0xD174B0", VA = "0xD174B0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xD17B04", Offset = "0xD17B04", VA = "0xD17B04")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xD17B20", Offset = "0xD17B20", VA = "0xD17B20")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3491C", Offset = "0xA3491C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xD17634", Offset = "0xD17634", VA = "0xD17634")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xD17C2C", Offset = "0xD17C2C", VA = "0xD17C2C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3492C", Offset = "0xA3492C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xD177C4", Offset = "0xD177C4", VA = "0xD177C4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xD177E8", Offset = "0xD177E8", VA = "0xD177E8")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xD17804", Offset = "0xD17804", VA = "0xD17804")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xD16294", Offset = "0xD16294", VA = "0xD16294")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xD16410", Offset = "0xD16410", VA = "0xD16410")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xD165A4", Offset = "0xD165A4", VA = "0xD165A4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xD16738", Offset = "0xD16738", VA = "0xD16738")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xD168CC", Offset = "0xD168CC", VA = "0xD168CC")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xD16A44", Offset = "0xD16A44", VA = "0xD16A44")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xD16C34", Offset = "0xD16C34", VA = "0xD16C34")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xD170B4", Offset = "0xD170B4", VA = "0xD170B4")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xD172AC", Offset = "0xD172AC", VA = "0xD172AC")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xD174B8", Offset = "0xD174B8", VA = "0xD174B8")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xD1763C", Offset = "0xD1763C", VA = "0xD1763C")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200013A")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3493C", Offset = "0xA3493C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001700")]
			[Address(RVA = "0xD17DB4", Offset = "0xD17DB4", VA = "0xD17DB4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001701")]
			[Address(RVA = "0xD1858C", Offset = "0xD1858C", VA = "0xD1858C")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3494C", Offset = "0xA3494C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001702")]
			[Address(RVA = "0xD17F34", Offset = "0xD17F34", VA = "0xD17F34")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001703")]
			[Address(RVA = "0xD185A8", Offset = "0xD185A8", VA = "0xD185A8")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3495C", Offset = "0xA3495C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001704")]
			[Address(RVA = "0xD180B4", Offset = "0xD180B4", VA = "0xD180B4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0xD185C4", Offset = "0xD185C4", VA = "0xD185C4")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3496C", Offset = "0xA3496C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001706")]
			[Address(RVA = "0xD18200", Offset = "0xD18200", VA = "0xD18200")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0xD185E0", Offset = "0xD185E0", VA = "0xD185E0")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3497C", Offset = "0xA3497C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x6001708")]
			[Address(RVA = "0xD18584", Offset = "0xD18584", VA = "0xD18584")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0xD185FC", Offset = "0xD185FC", VA = "0xD185FC")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0xD18618", Offset = "0xD18618", VA = "0xD18618")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0xD18634", Offset = "0xD18634", VA = "0xD18634")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0xD18668", Offset = "0xD18668", VA = "0xD18668")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0xD18684", Offset = "0xD18684", VA = "0xD18684")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0xD186A0", Offset = "0xD186A0", VA = "0xD186A0")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xD17C48", Offset = "0xD17C48", VA = "0xD17C48")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xD17DBC", Offset = "0xD17DBC", VA = "0xD17DBC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xD17F3C", Offset = "0xD17F3C", VA = "0xD17F3C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xD180BC", Offset = "0xD180BC", VA = "0xD180BC")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xD18208", Offset = "0xD18208", VA = "0xD18208")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3498C", Offset = "0xA3498C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x600170F")]
			[Address(RVA = "0xD18934", Offset = "0xD18934", VA = "0xD18934")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0xD18E4C", Offset = "0xD18E4C", VA = "0xD18E4C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xD18E68", Offset = "0xD18E68", VA = "0xD18E68")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3499C", Offset = "0xA3499C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xD18A7C", Offset = "0xD18A7C", VA = "0xD18A7C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0xD18E84", Offset = "0xD18E84", VA = "0xD18E84")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xD18EA0", Offset = "0xD18EA0", VA = "0xD18EA0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349AC", Offset = "0xA349AC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6001715")]
			[Address(RVA = "0xD18E44", Offset = "0xD18E44", VA = "0xD18E44")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0xD18EBC", Offset = "0xD18EBC", VA = "0xD18EBC")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001717")]
			[Address(RVA = "0xD18EC8", Offset = "0xD18EC8", VA = "0xD18EC8")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xD187CC", Offset = "0xD187CC", VA = "0xD187CC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xD1893C", Offset = "0xD1893C", VA = "0xD1893C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xD18A84", Offset = "0xD18A84", VA = "0xD18A84")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xD18C4C", Offset = "0xD18C4C", VA = "0xD18C4C")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000335")]
		public static class Utils
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xC3F1FC", Offset = "0xC3F1FC", VA = "0xC3F1FC")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349BC", Offset = "0xA349BC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6001719")]
			[Address(RVA = "0xD190B8", Offset = "0xD190B8", VA = "0xD190B8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0xD1CC40", Offset = "0xD1CC40", VA = "0xD1CC40")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600171B")]
			[Address(RVA = "0xD1CC5C", Offset = "0xD1CC5C", VA = "0xD1CC5C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349CC", Offset = "0xA349CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600171C")]
			[Address(RVA = "0xD19228", Offset = "0xD19228", VA = "0xD19228")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0xD1CEBC", Offset = "0xD1CEBC", VA = "0xD1CEBC")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600171E")]
			[Address(RVA = "0xD1CEE0", Offset = "0xD1CEE0", VA = "0xD1CEE0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349DC", Offset = "0xA349DC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600171F")]
			[Address(RVA = "0xC3E91C", Offset = "0xC3E91C", VA = "0xC3E91C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0xC3E924", Offset = "0xC3E924", VA = "0xC3E924")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0xC3E948", Offset = "0xC3E948", VA = "0xC3E948")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349EC", Offset = "0xA349EC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001722")]
			[Address(RVA = "0xC3EE6C", Offset = "0xC3EE6C", VA = "0xC3EE6C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xC3EE74", Offset = "0xC3EE74", VA = "0xC3EE74")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0xC3EE98", Offset = "0xC3EE98", VA = "0xC3EE98")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA349FC", Offset = "0xA349FC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001725")]
			[Address(RVA = "0xC3EEBC", Offset = "0xC3EEBC", VA = "0xC3EEBC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0xC3EEC4", Offset = "0xC3EEC4", VA = "0xC3EEC4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001727")]
			[Address(RVA = "0xC3EEE8", Offset = "0xC3EEE8", VA = "0xC3EEE8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A0C", Offset = "0xA34A0C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001728")]
			[Address(RVA = "0xC3EF0C", Offset = "0xC3EF0C", VA = "0xC3EF0C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001729")]
			[Address(RVA = "0xC3EF14", Offset = "0xC3EF14", VA = "0xC3EF14")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0xC3EF34", Offset = "0xC3EF34", VA = "0xC3EF34")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A1C", Offset = "0xA34A1C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600172B")]
			[Address(RVA = "0xC3EF50", Offset = "0xC3EF50", VA = "0xC3EF50")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600172C")]
			[Address(RVA = "0xC3EF58", Offset = "0xC3EF58", VA = "0xC3EF58")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600172D")]
			[Address(RVA = "0xC3EFD8", Offset = "0xC3EFD8", VA = "0xC3EFD8")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A2C", Offset = "0xA34A2C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600172E")]
			[Address(RVA = "0xC3F034", Offset = "0xC3F034", VA = "0xC3F034")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600172F")]
			[Address(RVA = "0xC3F03C", Offset = "0xC3F03C", VA = "0xC3F03C")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001730")]
			[Address(RVA = "0xC3F0BC", Offset = "0xC3F0BC", VA = "0xC3F0BC")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A3C", Offset = "0xA34A3C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001731")]
			[Address(RVA = "0xC3F118", Offset = "0xC3F118", VA = "0xC3F118")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0xC3F120", Offset = "0xC3F120", VA = "0xC3F120")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001733")]
			[Address(RVA = "0xC3F1A0", Offset = "0xC3F1A0", VA = "0xC3F1A0")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A4C", Offset = "0xA34A4C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001734")]
			[Address(RVA = "0xD19ED4", Offset = "0xD19ED4", VA = "0xD19ED4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001735")]
			[Address(RVA = "0xD1CC78", Offset = "0xD1CC78", VA = "0xD1CC78")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001736")]
			[Address(RVA = "0xD1CC9C", Offset = "0xD1CC9C", VA = "0xD1CC9C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A5C", Offset = "0xA34A5C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001737")]
			[Address(RVA = "0xD1A01C", Offset = "0xD1A01C", VA = "0xD1A01C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0xD1CCB8", Offset = "0xD1CCB8", VA = "0xD1CCB8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001739")]
			[Address(RVA = "0xD1CCDC", Offset = "0xD1CCDC", VA = "0xD1CCDC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A6C", Offset = "0xA34A6C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600173A")]
			[Address(RVA = "0xD1A174", Offset = "0xD1A174", VA = "0xD1A174")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600173B")]
			[Address(RVA = "0xD1CCF8", Offset = "0xD1CCF8", VA = "0xD1CCF8")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0xD1CD18", Offset = "0xD1CD18", VA = "0xD1CD18")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A7C", Offset = "0xA34A7C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600173D")]
			[Address(RVA = "0xD1A2DC", Offset = "0xD1A2DC", VA = "0xD1A2DC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600173E")]
			[Address(RVA = "0xD1CD34", Offset = "0xD1CD34", VA = "0xD1CD34")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600173F")]
			[Address(RVA = "0xD1CD50", Offset = "0xD1CD50", VA = "0xD1CD50")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A8C", Offset = "0xA34A8C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001740")]
			[Address(RVA = "0xD1A458", Offset = "0xD1A458", VA = "0xD1A458")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0xD1CD6C", Offset = "0xD1CD6C", VA = "0xD1CD6C")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001742")]
			[Address(RVA = "0xD1CD88", Offset = "0xD1CD88", VA = "0xD1CD88")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34A9C", Offset = "0xA34A9C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001743")]
			[Address(RVA = "0xD1A5D4", Offset = "0xD1A5D4", VA = "0xD1A5D4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0xD1CDA4", Offset = "0xD1CDA4", VA = "0xD1CDA4")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0xD1CDC0", Offset = "0xD1CDC0", VA = "0xD1CDC0")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34AAC", Offset = "0xA34AAC")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001746")]
			[Address(RVA = "0xD1A744", Offset = "0xD1A744", VA = "0xD1A744")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0xD1CDDC", Offset = "0xD1CDDC", VA = "0xD1CDDC")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001748")]
			[Address(RVA = "0xD1CDF8", Offset = "0xD1CDF8", VA = "0xD1CDF8")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34ABC", Offset = "0xA34ABC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001749")]
			[Address(RVA = "0xD1A8CC", Offset = "0xD1A8CC", VA = "0xD1A8CC")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600174A")]
			[Address(RVA = "0xD1CE14", Offset = "0xD1CE14", VA = "0xD1CE14")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600174B")]
			[Address(RVA = "0xD1CE30", Offset = "0xD1CE30", VA = "0xD1CE30")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34ACC", Offset = "0xA34ACC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600174C")]
			[Address(RVA = "0xD1AA54", Offset = "0xD1AA54", VA = "0xD1AA54")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xD1CE4C", Offset = "0xD1CE4C", VA = "0xD1CE4C")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0xD1CE68", Offset = "0xD1CE68", VA = "0xD1CE68")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34ADC", Offset = "0xA34ADC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600174F")]
			[Address(RVA = "0xD1ABDC", Offset = "0xD1ABDC", VA = "0xD1ABDC")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001750")]
			[Address(RVA = "0xD1CE84", Offset = "0xD1CE84", VA = "0xD1CE84")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0xD1CEA0", Offset = "0xD1CEA0", VA = "0xD1CEA0")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34AEC", Offset = "0xA34AEC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001752")]
			[Address(RVA = "0xD1AD44", Offset = "0xD1AD44", VA = "0xD1AD44")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0xD1CF04", Offset = "0xD1CF04", VA = "0xD1CF04")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001754")]
			[Address(RVA = "0xD1CF20", Offset = "0xD1CF20", VA = "0xD1CF20")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34AFC", Offset = "0xA34AFC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001755")]
			[Address(RVA = "0xD1AEAC", Offset = "0xD1AEAC", VA = "0xD1AEAC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0xD1CF3C", Offset = "0xD1CF3C", VA = "0xD1CF3C")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0xD1CF58", Offset = "0xD1CF58", VA = "0xD1CF58")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B0C", Offset = "0xA34B0C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001758")]
			[Address(RVA = "0xD1B004", Offset = "0xD1B004", VA = "0xD1B004")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0xD1CF74", Offset = "0xD1CF74", VA = "0xD1CF74")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600175A")]
			[Address(RVA = "0xD1CF90", Offset = "0xD1CF90", VA = "0xD1CF90")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B1C", Offset = "0xA34B1C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xD1B174", Offset = "0xD1B174", VA = "0xD1B174")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0xD1CFAC", Offset = "0xD1CFAC", VA = "0xD1CFAC")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0xD1CFC8", Offset = "0xD1CFC8", VA = "0xD1CFC8")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B2C", Offset = "0xA34B2C")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600175E")]
			[Address(RVA = "0xD1B2E4", Offset = "0xD1B2E4", VA = "0xD1B2E4")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0xD1CFE4", Offset = "0xD1CFE4", VA = "0xD1CFE4")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001760")]
			[Address(RVA = "0xD1D000", Offset = "0xD1D000", VA = "0xD1D000")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B3C", Offset = "0xA34B3C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xD1B44C", Offset = "0xD1B44C", VA = "0xD1B44C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xD1D01C", Offset = "0xD1D01C", VA = "0xD1D01C")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xD1D038", Offset = "0xD1D038", VA = "0xD1D038")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B4C", Offset = "0xA34B4C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001764")]
			[Address(RVA = "0xD1B608", Offset = "0xD1B608", VA = "0xD1B608")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xD1D054", Offset = "0xD1D054", VA = "0xD1D054")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0xD1D0E4", Offset = "0xD1D0E4", VA = "0xD1D0E4")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B5C", Offset = "0xA34B5C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xD1B794", Offset = "0xD1B794", VA = "0xD1B794")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0xD1D18C", Offset = "0xD1D18C", VA = "0xD1D18C")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0xD1D21C", Offset = "0xD1D21C", VA = "0xD1D21C")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B6C", Offset = "0xA34B6C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600176A")]
			[Address(RVA = "0xD1B96C", Offset = "0xD1B96C", VA = "0xD1B96C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0xD1D2C4", Offset = "0xD1D2C4", VA = "0xD1D2C4")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0xD1D354", Offset = "0xD1D354", VA = "0xD1D354")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B7C", Offset = "0xA34B7C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x600176D")]
			[Address(RVA = "0xD1BCF4", Offset = "0xD1BCF4", VA = "0xD1BCF4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0xD1D3FC", Offset = "0xD1D3FC", VA = "0xD1D3FC")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0xD1D418", Offset = "0xD1D418", VA = "0xD1D418")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001770")]
			[Address(RVA = "0xD1D434", Offset = "0xD1D434", VA = "0xD1D434")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6001771")]
			[Address(RVA = "0xD1D468", Offset = "0xD1D468", VA = "0xD1D468")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001772")]
			[Address(RVA = "0xD1D484", Offset = "0xD1D484", VA = "0xD1D484")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001773")]
			[Address(RVA = "0xD1D4A0", Offset = "0xD1D4A0", VA = "0xD1D4A0")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B8C", Offset = "0xA34B8C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001774")]
			[Address(RVA = "0xC3E96C", Offset = "0xC3E96C", VA = "0xC3E96C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0xC3E974", Offset = "0xC3E974", VA = "0xC3E974")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001776")]
			[Address(RVA = "0xC3E9E4", Offset = "0xC3E9E4", VA = "0xC3E9E4")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34B9C", Offset = "0xA34B9C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001777")]
			[Address(RVA = "0xC3EA30", Offset = "0xC3EA30", VA = "0xC3EA30")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001778")]
			[Address(RVA = "0xC3EA38", Offset = "0xC3EA38", VA = "0xC3EA38")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001779")]
			[Address(RVA = "0xC3EA54", Offset = "0xC3EA54", VA = "0xC3EA54")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BAC", Offset = "0xA34BAC")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600177A")]
			[Address(RVA = "0xC3EA70", Offset = "0xC3EA70", VA = "0xC3EA70")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600177B")]
			[Address(RVA = "0xC3EA78", Offset = "0xC3EA78", VA = "0xC3EA78")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600177C")]
			[Address(RVA = "0xC3EA94", Offset = "0xC3EA94", VA = "0xC3EA94")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BBC", Offset = "0xA34BBC")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x600177D")]
			[Address(RVA = "0xC3EAB0", Offset = "0xC3EAB0", VA = "0xC3EAB0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x600177E")]
			[Address(RVA = "0xC3EAB8", Offset = "0xC3EAB8", VA = "0xC3EAB8")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600177F")]
			[Address(RVA = "0xC3EADC", Offset = "0xC3EADC", VA = "0xC3EADC")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BCC", Offset = "0xA34BCC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001780")]
			[Address(RVA = "0xC3EB00", Offset = "0xC3EB00", VA = "0xC3EB00")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001781")]
			[Address(RVA = "0xC3EB08", Offset = "0xC3EB08", VA = "0xC3EB08")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001782")]
			[Address(RVA = "0xC3EB2C", Offset = "0xC3EB2C", VA = "0xC3EB2C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BDC", Offset = "0xA34BDC")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001783")]
			[Address(RVA = "0xC3EB50", Offset = "0xC3EB50", VA = "0xC3EB50")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0xC3EB58", Offset = "0xC3EB58", VA = "0xC3EB58")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001785")]
			[Address(RVA = "0xC3EB7C", Offset = "0xC3EB7C", VA = "0xC3EB7C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BEC", Offset = "0xA34BEC")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001786")]
			[Address(RVA = "0xC3EBA0", Offset = "0xC3EBA0", VA = "0xC3EBA0")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001787")]
			[Address(RVA = "0xC3EBA8", Offset = "0xC3EBA8", VA = "0xC3EBA8")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001788")]
			[Address(RVA = "0xC3EBCC", Offset = "0xC3EBCC", VA = "0xC3EBCC")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34BFC", Offset = "0xA34BFC")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6001789")]
			[Address(RVA = "0xC3EBF0", Offset = "0xC3EBF0", VA = "0xC3EBF0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0xC3EBF8", Offset = "0xC3EBF8", VA = "0xC3EBF8")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600178B")]
			[Address(RVA = "0xC3EC04", Offset = "0xC3EC04", VA = "0xC3EC04")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C0C", Offset = "0xA34C0C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x600178C")]
			[Address(RVA = "0xC3ECC4", Offset = "0xC3ECC4", VA = "0xC3ECC4")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600178D")]
			[Address(RVA = "0xC3ECCC", Offset = "0xC3ECCC", VA = "0xC3ECCC")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600178E")]
			[Address(RVA = "0xC3ECD8", Offset = "0xC3ECD8", VA = "0xC3ECD8")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C1C", Offset = "0xA34C1C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x600178F")]
			[Address(RVA = "0xC3ED98", Offset = "0xC3ED98", VA = "0xC3ED98")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001790")]
			[Address(RVA = "0xC3EDA0", Offset = "0xC3EDA0", VA = "0xC3EDA0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001791")]
			[Address(RVA = "0xC3EDAC", Offset = "0xC3EDAC", VA = "0xC3EDAC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xD18F78", Offset = "0xD18F78", VA = "0xD18F78")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xD190C0", Offset = "0xD190C0", VA = "0xD190C0")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xD19230", Offset = "0xD19230", VA = "0xD19230")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xD19370", Offset = "0xD19370", VA = "0xD19370")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xD194D8", Offset = "0xD194D8", VA = "0xD194D8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xD19618", Offset = "0xD19618", VA = "0xD19618")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xD1977C", Offset = "0xD1977C", VA = "0xD1977C")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xD1994C", Offset = "0xD1994C", VA = "0xD1994C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xD19AAC", Offset = "0xD19AAC", VA = "0xD19AAC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xD19C0C", Offset = "0xD19C0C", VA = "0xD19C0C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xD19D6C", Offset = "0xD19D6C", VA = "0xD19D6C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xD19EDC", Offset = "0xD19EDC", VA = "0xD19EDC")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xD1A024", Offset = "0xD1A024", VA = "0xD1A024")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xD1A17C", Offset = "0xD1A17C", VA = "0xD1A17C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xD1A2E4", Offset = "0xD1A2E4", VA = "0xD1A2E4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xD1A460", Offset = "0xD1A460", VA = "0xD1A460")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xD1A5DC", Offset = "0xD1A5DC", VA = "0xD1A5DC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xD1A74C", Offset = "0xD1A74C", VA = "0xD1A74C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xD1A8D4", Offset = "0xD1A8D4", VA = "0xD1A8D4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xD1AA5C", Offset = "0xD1AA5C", VA = "0xD1AA5C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xD1ABE4", Offset = "0xD1ABE4", VA = "0xD1ABE4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xD1AD4C", Offset = "0xD1AD4C", VA = "0xD1AD4C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xD1AEB4", Offset = "0xD1AEB4", VA = "0xD1AEB4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xD1B00C", Offset = "0xD1B00C", VA = "0xD1B00C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xD1B17C", Offset = "0xD1B17C", VA = "0xD1B17C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xD1B2EC", Offset = "0xD1B2EC", VA = "0xD1B2EC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xD1B454", Offset = "0xD1B454", VA = "0xD1B454")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xD1B610", Offset = "0xD1B610", VA = "0xD1B610")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xD1B79C", Offset = "0xD1B79C", VA = "0xD1B79C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xD1B974", Offset = "0xD1B974", VA = "0xD1B974")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xD1BCFC", Offset = "0xD1BCFC", VA = "0xD1BCFC")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xD1BE50", Offset = "0xD1BE50", VA = "0xD1BE50")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xD1BF94", Offset = "0xD1BF94", VA = "0xD1BF94")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xD1C0D8", Offset = "0xD1C0D8", VA = "0xD1C0D8")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xD1C228", Offset = "0xD1C228", VA = "0xD1C228")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xD1C390", Offset = "0xD1C390", VA = "0xD1C390")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xD1C4D0", Offset = "0xD1C4D0", VA = "0xD1C4D0")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xD1C640", Offset = "0xD1C640", VA = "0xD1C640")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD1C840", Offset = "0xD1C840", VA = "0xD1C840")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD1CA40", Offset = "0xD1CA40", VA = "0xD1CA40")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C2C", Offset = "0xA34C2C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6001792")]
			[Address(RVA = "0xC3FE08", Offset = "0xC3FE08", VA = "0xC3FE08")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001793")]
			[Address(RVA = "0xC3FFB8", Offset = "0xC3FFB8", VA = "0xC3FFB8")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001794")]
			[Address(RVA = "0xC3FFDC", Offset = "0xC3FFDC", VA = "0xC3FFDC")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C3C", Offset = "0xA34C3C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6001795")]
			[Address(RVA = "0xC3FFB0", Offset = "0xC3FFB0", VA = "0xC3FFB0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001796")]
			[Address(RVA = "0xC40000", Offset = "0xC40000", VA = "0xC40000")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001797")]
			[Address(RVA = "0xC40024", Offset = "0xC40024", VA = "0xC40024")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xC3F4AC", Offset = "0xC3F4AC", VA = "0xC3F4AC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xC3F678", Offset = "0xC3F678", VA = "0xC3F678")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xC3F858", Offset = "0xC3F858", VA = "0xC3F858")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xC3F900", Offset = "0xC3F900", VA = "0xC3F900")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xC3F9A8", Offset = "0xC3F9A8", VA = "0xC3F9A8")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xC3FA50", Offset = "0xC3FA50", VA = "0xC3FA50")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xC3FB08", Offset = "0xC3FB08", VA = "0xC3FB08")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xC3FBC0", Offset = "0xC3FBC0", VA = "0xC3FBC0")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xC3FC68", Offset = "0xC3FC68", VA = "0xC3FC68")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC3FE10", Offset = "0xC3FE10", VA = "0xC3FE10")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200035F")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700028D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0xD155C8", Offset = "0xD155C8", VA = "0xD155C8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001799")]
			[Address(RVA = "0xD155FC", Offset = "0xD155FC", VA = "0xD155FC")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000360")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700028E")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600179A")]
				[Address(RVA = "0xD1579C", Offset = "0xD1579C", VA = "0xD1579C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600179B")]
			[Address(RVA = "0xD15800", Offset = "0xD15800", VA = "0xD15800")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000361")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700028F")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600179C")]
				[Address(RVA = "0xD156B0", Offset = "0xD156B0", VA = "0xD156B0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600179D")]
			[Address(RVA = "0xD156D0", Offset = "0xD156D0", VA = "0xD156D0")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000362")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x17000290")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600179E")]
				[Address(RVA = "0xD15628", Offset = "0xD15628", VA = "0xD15628", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600179F")]
			[Address(RVA = "0xD15674", Offset = "0xD15674", VA = "0xD15674")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000363")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x17000291")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60017A0")]
				[Address(RVA = "0xD156FC", Offset = "0xD156FC", VA = "0xD156FC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xD15760", Offset = "0xD15760", VA = "0xD15760")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000364")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000292")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60017A2")]
				[Address(RVA = "0xD1582C", Offset = "0xD1582C", VA = "0xD1582C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xD15864", Offset = "0xD15864", VA = "0xD15864")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200013F")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000365")]
		public static class Physics
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xC4018C", Offset = "0xC4018C", VA = "0xC4018C")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xC402C4", Offset = "0xC402C4", VA = "0xC402C4")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xC40358", Offset = "0xC40358", VA = "0xC40358")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xC403EC", Offset = "0xC403EC", VA = "0xC403EC")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xC40048", Offset = "0xC40048", VA = "0xC40048")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xC400EC", Offset = "0xC400EC", VA = "0xC400EC")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Empyrean.HouseFlipper2
{
	[Token(Token = "0x2000140")]
	public static class GameContentDatabase
	{
		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C4C", Offset = "0xA34C4C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string jobName;

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xC44904", Offset = "0xC44904", VA = "0xC44904")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xC44B40", Offset = "0xC44B40", VA = "0xC44B40")]
			internal bool <FindJobAsset>b__0(JobAsset x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C5C", Offset = "0xA34C5C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xC44A64", Offset = "0xC44A64", VA = "0xC44A64")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xC44B7C", Offset = "0xC44B7C", VA = "0xC44B7C")]
			internal bool <FindSceneAsset>b__0(HouseAsset x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Item> items;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<HouseAsset> houses;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<JobAsset> jobs;

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xC445F4", Offset = "0xC445F4", VA = "0xC445F4")]
		public static void Initialize(GameContentMapper gameContentMapper)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xC44818", Offset = "0xC44818", VA = "0xC44818")]
		public static JobAsset FindJobAsset(string jobName)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xC4490C", Offset = "0xC4490C", VA = "0xC4490C")]
		public static SceneAsset FindSceneAsset(string sceneName)
		{
			return null;
		}
	}
}
namespace Assets._Code.Miscellaneous
{
	[Token(Token = "0x2000141")]
	public class POReader : IDisposable
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StreamReader reader;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParserState readingState;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string multilineTarget;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string line;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lineNumber;

		[Token(Token = "0x40006EB")]
		private const string MsgidStr = "msgid";

		[Token(Token = "0x40006EC")]
		private const string MsgstrStr = "msgstr";

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xD08DA4", Offset = "0xD08DA4", VA = "0xD08DA4")]
		public POReader(StreamReader reader)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xD08DD0", Offset = "0xD08DD0", VA = "0xD08DD0")]
		public List<PORecord> GetRecords(int langIndex)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xD09014", Offset = "0xD09014", VA = "0xD09014")]
		private bool ParseSource(ref PORecord record)
		{
			return default(bool);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xD091D4", Offset = "0xD091D4", VA = "0xD091D4")]
		private bool ParseTarget(ref PORecord record, ref List<PORecord> result, int langIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xD09550", Offset = "0xD09550", VA = "0xD09550")]
		private bool ParseMultilineTarget(ref PORecord record, ref List<PORecord> result, int langIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xD097BC", Offset = "0xD097BC", VA = "0xD097BC")]
		private void AddRecordAndSetupForSourceParsing(ref PORecord record, ref List<PORecord> result)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xD08FBC", Offset = "0xD08FBC", VA = "0xD08FBC")]
		private void ResetState()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xD09850", Offset = "0xD09850", VA = "0xD09850")]
		private bool IsEncapsulatedInDoubleQuotes(string val)
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xD098B8", Offset = "0xD098B8", VA = "0xD098B8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class PORecord
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA383B0", Offset = "0xA383B0")]
		private string <source>k__BackingField;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA383C0", Offset = "0xA383C0")]
		private string <target>k__BackingField;

		[Token(Token = "0x170000D8")]
		public string source
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xD098BC", Offset = "0xD098BC", VA = "0xD098BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F6BC", Offset = "0xA3F6BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000933")]
			[Address(RVA = "0xD098C4", Offset = "0xD098C4", VA = "0xD098C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F6CC", Offset = "0xA3F6CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public string target
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xD098CC", Offset = "0xD098CC", VA = "0xD098CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F6DC", Offset = "0xA3F6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xD098D4", Offset = "0xD098D4", VA = "0xD098D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F6EC", Offset = "0xA3F6EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD08FB4", Offset = "0xD08FB4", VA = "0xD08FB4")]
		public PORecord()
		{
		}
	}
	[Token(Token = "0x2000143")]
	internal enum ParserState
	{
		[Token(Token = "0x40006F0")]
		ParsingSource,
		[Token(Token = "0x40006F1")]
		ParsingTarget,
		[Token(Token = "0x40006F2")]
		ParsingMultilineTarget
	}
	[Token(Token = "0x2000144")]
	public static class Watchtower2
	{
		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, string> watchedValues;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xD098DC", Offset = "0xD098DC", VA = "0xD098DC")]
		public static void Watch(string key, string value)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD09970", Offset = "0xD09970", VA = "0xD09970")]
		public static void Watch(string key, object obj)
		{
		}
	}
}
namespace Assets._Code.Basketball
{
	[Token(Token = "0x2000145")]
	public class BasketballBallPickapable : SimplePickapable, ICanBeSold
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA383D0", Offset = "0xA383D0")]
		private bool <CanBeSold>k__BackingField;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private ItemSceneSystem itemSystem;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private BasketballShield shield;

		[Token(Token = "0x170000DA")]
		public bool CanBeSold
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xD07D74", Offset = "0xD07D74", VA = "0xD07D74", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F6FC", Offset = "0xA3F6FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xD07D7C", Offset = "0xD07D7C", VA = "0xD07D7C", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F70C", Offset = "0xA3F70C")]
			set
			{
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xD07D88", Offset = "0xD07D88", VA = "0xD07D88", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xD07DC8", Offset = "0xD07DC8", VA = "0xD07DC8", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xD07E08", Offset = "0xD07E08", VA = "0xD07E08", Slot = "14")]
		public override void PickUp(global::_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xD07E1C", Offset = "0xD07E1C", VA = "0xD07E1C", Slot = "8")]
		public override void TurnOnPhysicsForFiveSeconds()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xD07E50", Offset = "0xD07E50", VA = "0xD07E50")]
		public void AssignShieldReference(BasketballShield shield)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xD07E58", Offset = "0xD07E58", VA = "0xD07E58", Slot = "31")]
		public void HandleSell()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xD07EC8", Offset = "0xD07EC8", VA = "0xD07EC8")]
		public BasketballBallPickapable()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class BasketballShield : Item
	{
		[Token(Token = "0x2000368")]
		private struct Body
		{
			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Collider collider;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Transform transform;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector3 enterPosition;

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xAECFB8", Offset = "0xAECFB8", VA = "0xAECFB8")]
			public Body(Collider collider)
			{
			}
		}

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA383F0", Offset = "0xA383F0")]
		[SerializeField]
		private Collider detectionCollider;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private Transform enterPointTransform;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private Transform exitPointTransform;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private BasketballBallPickapable ball;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private RenderItemContainer ballRenderItemContainer;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private LayerMask ballLayer;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private Fx goalFX;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		private AudioClip[] goalAudioClips;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Collider[] detectedColliders;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private readonly List<Body> bodies;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float currentOverlappedObjectsCount;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private bool isBallInside;

		[Token(Token = "0x1400001C")]
		public event Action OnDunk
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xD07ED8", Offset = "0xD07ED8", VA = "0xD07ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F71C", Offset = "0xA3F71C")]
			add
			{
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xD07F80", Offset = "0xD07F80", VA = "0xD07F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F72C", Offset = "0xA3F72C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xD08028", Offset = "0xD08028", VA = "0xD08028", Slot = "32")]
		public override void InitItem(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, MovingObjectsConfiguration movingConfig, CollisionDetectionConfiguration config, bool onSceneLoaded = false)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xD081D0", Offset = "0xD081D0", VA = "0xD081D0")]
		private void AddBallToRenderingSystem()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xD08280", Offset = "0xD08280", VA = "0xD08280")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xD08744", Offset = "0xD08744", VA = "0xD08744")]
		private void HandlePickedUp()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xD082D4", Offset = "0xD082D4", VA = "0xD082D4")]
		private void OverlapAndCheckForNewBodies()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xD08528", Offset = "0xD08528", VA = "0xD08528")]
		private void CheckForBodyExit()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xD08980", Offset = "0xD08980", VA = "0xD08980", Slot = "14")]
		public override void PickUp(global::_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xD08A48", Offset = "0xD08A48", VA = "0xD08A48", Slot = "16")]
		public override void PutDown(global::_Code.Tools.Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xD088EC", Offset = "0xD088EC", VA = "0xD088EC")]
		private void DoGoalEffect()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xD08B2C", Offset = "0xD08B2C", VA = "0xD08B2C", Slot = "7")]
		public override void SelfDisable(bool skipAnimation = false)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xD08C60", Offset = "0xD08C60", VA = "0xD08C60", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xD08D14", Offset = "0xD08D14", VA = "0xD08D14")]
		public BasketballShield()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xD0884C", Offset = "0xD0884C", VA = "0xD0884C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F73C", Offset = "0xA3F73C")]
		private bool <CheckForBodyExit>g__IsEnterUp|21_0(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xD0879C", Offset = "0xD0879C", VA = "0xD0879C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F74C", Offset = "0xA3F74C")]
		private bool <CheckForBodyExit>g__IsExitDown|21_1(int i)
		{
			return default(bool);
		}
	}
}
namespace Assets._Code.Audio
{
	[Token(Token = "0x2000147")]
	[DisallowMultipleComponent]
	public class CollisionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA384BC", Offset = "0xA384BC")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isRandomMode;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float timeDelay;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38528", Offset = "0xA38528")]
		[SerializeField]
		private bool checkMyVelocity;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Rigidbody rigidbody;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float myMinVelocityToPlay;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38594", Offset = "0xA38594")]
		[SerializeField]
		private bool checkCollidingBodyVelocity;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float minVelocityToPlay;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Action<Collision> ActionOnCollision;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentIndex;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastTimeSoundPlayed;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float myMinSqrVelocity;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float minSqrVelocity;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected ItemSceneSystem itemSceneSystem;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSceneSystem audioSys;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform pickupable;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool initialised;

		[Token(Token = "0x170000DB")]
		private bool IsVelocityLow
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xD079FC", Offset = "0xD079FC", VA = "0xD079FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		private bool IsTimeToPlay
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0xD07A5C", Offset = "0xD07A5C", VA = "0xD07A5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xD07A94", Offset = "0xD07A94", VA = "0xD07A94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xD07AAC", Offset = "0xD07AAC", VA = "0xD07AAC")]
		public void Initialise(SceneSystems sceneSystems, Transform pickupable)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xD07AE0", Offset = "0xD07AE0", VA = "0xD07AE0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xD07C7C", Offset = "0xD07C7C", VA = "0xD07C7C")]
		private bool IsDynamicRigidbodyVelocityLow(Rigidbody body)
		{
			return default(bool);
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xD07D4C", Offset = "0xD07D4C", VA = "0xD07D4C")]
		public CollisionTrigger()
		{
		}
	}
}
namespace _Code
{
	[Token(Token = "0x2000148")]
	public class DebugPopup : MonoBehaviour
	{
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C6C", Offset = "0xA34C6C")]
		private sealed class <WriteLogTick>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugPopup <>4__this;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017B0")]
				[Address(RVA = "0xC1D224", Offset = "0xC1D224", VA = "0xC1D224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B2")]
				[Address(RVA = "0xC1D290", Offset = "0xC1D290", VA = "0xC1D290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xC1C5BC", Offset = "0xC1C5BC", VA = "0xC1C5BC")]
			[DebuggerHidden]
			public <WriteLogTick>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xC1CED4", Offset = "0xC1CED4", VA = "0xC1CED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xC1CED8", Offset = "0xC1CED8", VA = "0xC1CED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xC1D22C", Offset = "0xC1D22C", VA = "0xC1D22C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject fullPopupContainer;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text fullPopupText;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> logs;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string currentLogFilePath;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string currentFrameLogs;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hidden;

		[Token(Token = "0x400071C")]
		private const string ERROR_COLOR = "#a52a2aff";

		[Token(Token = "0x400071D")]
		private const string REGULAR_COLOR = "#c0c0c0ff";

		[Token(Token = "0x400071E")]
		private const string WARNING_COLOR = "#ffa500ff";

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugPopup instance;

		[Token(Token = "0x170000DD")]
		public static string LogsFolderPath
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0xC1C068", Offset = "0xC1C068", VA = "0xC1C068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public static DebugPopup Instance
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0xC1C0BC", Offset = "0xC1C0BC", VA = "0xC1C0BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xC1C188", Offset = "0xC1C188", VA = "0xC1C188")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xC1C288", Offset = "0xC1C288", VA = "0xC1C288")]
		private void CreateLogFile()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xC1C548", Offset = "0xC1C548", VA = "0xC1C548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F75C", Offset = "0xA3F75C")]
		private IEnumerator WriteLogTick()
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xC1C5E8", Offset = "0xC1C5E8", VA = "0xC1C5E8")]
		private void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xC1C830", Offset = "0xC1C830", VA = "0xC1C830")]
		private void WriteLogToFile(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xC1C618", Offset = "0xC1C618", VA = "0xC1C618")]
		public static void Log(string message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xC1C9F0", Offset = "0xC1C9F0", VA = "0xC1C9F0")]
		public static void Log(object message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xC1CADC", Offset = "0xC1CADC", VA = "0xC1CADC")]
		public static void LogWarning(string message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xC1CBA8", Offset = "0xC1CBA8", VA = "0xC1CBA8")]
		public static void LogWarning(object message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xC1C724", Offset = "0xC1C724", VA = "0xC1C724")]
		public static void LogError(string message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xC1CC94", Offset = "0xC1CC94", VA = "0xC1CC94")]
		public static void LogError(object message, bool logToConsole = false)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xC1C8E0", Offset = "0xC1C8E0", VA = "0xC1C8E0")]
		private void LogMessage(string message, bool logToConsole, string color)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xC1CD80", Offset = "0xC1CD80", VA = "0xC1CD80")]
		private void OrderLogsAndSetText()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xC1CE58", Offset = "0xC1CE58", VA = "0xC1CE58")]
		public DebugPopup()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public static class Consts
	{
		[Token(Token = "0x200036A")]
		public static class Tags
		{
			[Token(Token = "0x400132F")]
			public const string SPAWN_POINT = "SpawnPoint";

			[Token(Token = "0x4001330")]
			public const string ROOM_COLLIDER = "RoomCollider";

			[Token(Token = "0x4001331")]
			public const string LIGHT = "Light";

			[Token(Token = "0x4001332")]
			public const string MAIN_COLLIDER = "MainCollider";

			[Token(Token = "0x4001333")]
			public const string BORDER = "border";

			[Token(Token = "0x4001334")]
			public const string INTERSECTION_COLLIDERS = "IntersectionColliders";

			[Token(Token = "0x4001335")]
			public const string STICK = "Stick";
		}

		[Token(Token = "0x200036B")]
		public static class Physics
		{
			[Token(Token = "0x4001336")]
			public const float RAY_LENGTH = 5f;

			[Token(Token = "0x4001337")]
			public const float OVERLAP_RADIUS = 0.5f;

			[Token(Token = "0x4001338")]
			public const float PRESS_IN_RANGE_OVERLAP_RADIUS = 0.5f;

			[Token(Token = "0x4001339")]
			public const int CURVE_VERTEX_COUNT = 45;

			[Token(Token = "0x400133A")]
			public const float INTERACTION_OVERLAP_RADIUS = 0.8f;
		}

		[Token(Token = "0x200036C")]
		public static class Layers
		{
			[Token(Token = "0x400133B")]
			public const string DEFAULT = "Default";

			[Token(Token = "0x400133C")]
			public const string WALLS = "Wall";

			[Token(Token = "0x400133D")]
			public const string TRASH = "Trash";

			[Token(Token = "0x400133E")]
			public const string CEILING = "Ceiling";

			[Token(Token = "0x400133F")]
			public const string TELEPORT_BLOCKER = "TeleportBlocker";

			[Token(Token = "0x4001340")]
			public const string INTERACTABLE = "Interactable";

			[Token(Token = "0x4001341")]
			public const string PLAYER = "Player";

			[Token(Token = "0x4001342")]
			public const string TELEPORT = "Teleport";

			[Token(Token = "0x4001343")]
			public const string DIRT = "Dirt";

			[Token(Token = "0x4001344")]
			public const string SNAP = "AssemblySnap";

			[Token(Token = "0x4001345")]
			public const string COLLISION_FREE = "CollisionFree";

			[Token(Token = "0x4001346")]
			public const string CARRIED_ITEM = "CarriedItem";

			[Token(Token = "0x4001347")]
			public const string ITEM_COLLISION = "ItemCollision";

			[Token(Token = "0x4001348")]
			public const string TOOL_IN_TOOLBELT = "ToolInToolbelt";
		}

		[Token(Token = "0x200036D")]
		public static class SortingLayers
		{
			[Token(Token = "0x4001349")]
			public const string DEFAULT = "Default";

			[Token(Token = "0x400134A")]
			public const string WORLD_SPACE_TEXT = "WorldSpaceText";

			[Token(Token = "0x400134B")]
			public const string OVERLAY_BACKGROUND = "OverlayBackground";

			[Token(Token = "0x400134C")]
			public const string OVERLAY_CONTENT = "OverlayContent";
		}

		[Token(Token = "0x200036E")]
		public static class VRApiNames
		{
			[Token(Token = "0x400134D")]
			public const string OCULUS = "Oculus";

			[Token(Token = "0x400134E")]
			public const string OPEN_VR = "OpenVR";
		}

		[Token(Token = "0x200036F")]
		public static class VRFamilyNames
		{
			[Token(Token = "0x400134F")]
			public const string OCULUS_RIFT = "oculus rift";

			[Token(Token = "0x4001350")]
			public const string OCULUS_RIFT_S = "oculus rift s";

			[Token(Token = "0x4001351")]
			public const string VIVE = "vive";
		}

		[Token(Token = "0x2000370")]
		public static class DataFolders
		{
			[Token(Token = "0x4001352")]
			public const string ITEMS = "Items";

			[Token(Token = "0x4001353")]
			public const string HOUSES = "Houses";

			[Token(Token = "0x4001354")]
			public const string JOBS = "Jobs";
		}

		[Token(Token = "0x2000371")]
		public static class Audio
		{
			[Token(Token = "0x4001355")]
			public const string AMBIENT_VOLUME = "ambientVolume";

			[Token(Token = "0x4001356")]
			public const string SOUNDS_VOLUME = "soundsVolume";

			[Token(Token = "0x4001357")]
			public const string NARRATOR_VOLUME = "narratorVolume";
		}

		[Token(Token = "0x2000372")]
		public static class Misc
		{
			[Token(Token = "0x4001358")]
			public const string MAIN_MENU_SCENE_NAME = "_MainMenuScene";

			[Token(Token = "0x4001359")]
			public const string OFFICE_SCENE_NAME = "00_FirstOffice";

			[Token(Token = "0x400135A")]
			public const float SCENE_LOAD_DELAY = 1.4f;

			[Token(Token = "0x400135B")]
			public const int ALL_JOBS_DONE = -1;

			[Token(Token = "0x400135C")]
			public const int MIN_PROGRESS_TO_FINISH_JOB = 70;
		}

		[Token(Token = "0x2000373")]
		public static class Vibrations
		{
			[Token(Token = "0x400135D")]
			public const float VERY_SOFT_AMPLITUDE = 0.15f;

			[Token(Token = "0x400135E")]
			public const float SOFT_AMPLITUDE = 0.3f;

			[Token(Token = "0x400135F")]
			public const float MEDIUM_AMPLITUDE = 0.6f;

			[Token(Token = "0x4001360")]
			public const float STRONG_AMPLITUDE = 1f;

			[Token(Token = "0x4001361")]
			public const float SINGLE_TIME = 0.05f;

			[Token(Token = "0x4001362")]
			public const float VERY_SHORT_TIME = 0.1f;

			[Token(Token = "0x4001363")]
			public const float SHORT_TIME = 0.3f;

			[Token(Token = "0x4001364")]
			public const float MEDIUM_TIME = 0.6f;

			[Token(Token = "0x4001365")]
			public const float LONG_TIME = 1f;

			[Token(Token = "0x4001366")]
			public const float SHORT_BREAK_TIME = 0.15f;

			[Token(Token = "0x4001367")]
			public const float MEDIUM_BREAK_TIME = 0.25f;
		}
	}
}
namespace _Code.VR
{
	[Serializable]
	[Token(Token = "0x200014A")]
	public class ObjectsReferenceHandler
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform rig;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform headset;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftController;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightController;

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1E5D1F4", Offset = "0x1E5D1F4", VA = "0x1E5D1F4")]
		public ObjectsReferenceHandler()
		{
		}
	}
}
namespace _Code.VR.InputSystem
{
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33C60", Offset = "0xA33C60")]
	public class InputBindings : ScriptableObject
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusInputBindings oculusBindings;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenVRInputBindings openVRBindings;

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xDE6C48", Offset = "0xDE6C48", VA = "0xDE6C48")]
		public InputBindings()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class InputSystem : MonoBehaviour
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputBindings inputBindings;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vibration vibration;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputAction rightInteraction;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputAction leftInteraction;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggerAction rightTrigger;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TriggerAction leftTrigger;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputAction rightGrip;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputAction leftGrip;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StickAction rightStick;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public StickAction leftStick;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InputAction leftSell;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputAction rightSell;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InputAction rightToggleGrid;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InputAction leftToggleGrid;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputAction[] actions;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isAllActionsLocked;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool virtualButtonsLocked;

		[Token(Token = "0x170000DF")]
		public bool VirtualButtonsLocked
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0xDE6C50", Offset = "0xDE6C50", VA = "0xDE6C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xDE6C58", Offset = "0xDE6C58", VA = "0xDE6C58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xDE6D48", Offset = "0xDE6D48", VA = "0xDE6D48")]
		private void AssignButtons()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xDE72D8", Offset = "0xDE72D8", VA = "0xDE72D8")]
		private void AssignOpenVRActions()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xDE7060", Offset = "0xDE7060", VA = "0xDE7060")]
		private void AssignOculusActions()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xDE7588", Offset = "0xDE7588", VA = "0xDE7588")]
		private void Update()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xDE7614", Offset = "0xDE7614", VA = "0xDE7614")]
		public void SetActionLockState(InputAction action, bool newState)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xDE7634", Offset = "0xDE7634", VA = "0xDE7634")]
		public void LockAllExceptActions(List<InputAction> actionsToLock)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xDE7800", Offset = "0xDE7800", VA = "0xDE7800")]
		public void UnlockAllActions()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xDE7868", Offset = "0xDE7868", VA = "0xDE7868")]
		public bool TouchingTrigger(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xDE7984", Offset = "0xDE7984", VA = "0xDE7984")]
		public bool HasAnyButtonPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xDE7B08", Offset = "0xDE7B08", VA = "0xDE7B08")]
		public Vector3 GetLocalControllerVelocity(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xDE7C40", Offset = "0xDE7C40", VA = "0xDE7C40")]
		public void SetLockInputsState(bool value)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xDE7C4C", Offset = "0xDE7C4C", VA = "0xDE7C4C")]
		public void SetLockVirtualButtonState(bool value)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xDE7AF8", Offset = "0xDE7AF8", VA = "0xDE7AF8")]
		public SteamVR_Input_Sources HandToSteamVRHand(Hand hand)
		{
			return default(SteamVR_Input_Sources);
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xDE7C58", Offset = "0xDE7C58", VA = "0xDE7C58")]
		public InputSystem()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public enum Hand
	{
		[Token(Token = "0x4000738")]
		None,
		[Token(Token = "0x4000739")]
		Right,
		[Token(Token = "0x400073A")]
		Left,
		[Token(Token = "0x400073B")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200014E")]
	public class OculusInputBindings
	{
		[Serializable]
		[Token(Token = "0x2000374")]
		public class ButtonBinding
		{
			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Hand hand;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public OVRInput.RawTouch touch;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRInput.RawButton button;

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xDE7E80", Offset = "0xDE7E80", VA = "0xDE7E80")]
			public ButtonBinding()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000375")]
		public class TriggerBinding : ButtonBinding
		{
			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OVRInput.RawAxis1D axis;

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xDE7E88", Offset = "0xDE7E88", VA = "0xDE7E88")]
			public TriggerBinding()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000376")]
		public class StickBinding : ButtonBinding
		{
			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OVRInput.RawAxis2D axis;

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xDE7E90", Offset = "0xDE7E90", VA = "0xDE7E90")]
			public StickBinding()
			{
			}
		}

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38630", Offset = "0xA38630")]
		public ButtonBinding leftSell;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonBinding rightSell;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonBinding leftToggleGrid;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonBinding rightToggleGrid;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38668", Offset = "0xA38668")]
		public TriggerBinding rightTrigger;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggerBinding leftTrigger;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TriggerBinding rightGrip;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TriggerBinding leftGrip;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA386A0", Offset = "0xA386A0")]
		public StickBinding rightStick;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StickBinding leftStick;

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xDE7C60", Offset = "0xDE7C60", VA = "0xDE7C60")]
		public OculusInputBindings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014F")]
	public class OpenVRInputBindings
	{
		[Serializable]
		[Token(Token = "0x2000377")]
		public class ButtonBinding
		{
			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SteamVR_Action_Boolean button;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SteamVR_Action_Boolean touch;

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xDE7EA0", Offset = "0xDE7EA0", VA = "0xDE7EA0")]
			public ButtonBinding()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000378")]
		public class TriggerBinding : ButtonBinding
		{
			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Action_Single axis;

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xDE7EB0", Offset = "0xDE7EB0", VA = "0xDE7EB0")]
			public TriggerBinding()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000379")]
		public class StickBinding : ButtonBinding
		{
			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Action_Vector2 axis;

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xDE7EA8", Offset = "0xDE7EA8", VA = "0xDE7EA8")]
			public StickBinding()
			{
			}
		}

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SteamVR_Action_Pose pose;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonBinding sell;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonBinding grip;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonBinding interaction;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonBinding toggleGrid;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggerBinding trigger;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StickBinding stick;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xDE7E98", Offset = "0xDE7E98", VA = "0xDE7E98")]
		public OpenVRInputBindings()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class Vibration
	{
		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C7C", Offset = "0xA34C7C")]
		private sealed class <StopVibrationCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Hand hand;

			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vibration <>4__this;

			[Token(Token = "0x17000295")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017BC")]
				[Address(RVA = "0xDE8928", Offset = "0xDE8928", VA = "0xDE8928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017BE")]
				[Address(RVA = "0xDE8994", Offset = "0xDE8994", VA = "0xDE8994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xDE8730", Offset = "0xDE8730", VA = "0xDE8730")]
			[DebuggerHidden]
			public <StopVibrationCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xDE8858", Offset = "0xDE8858", VA = "0xDE8858", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xDE885C", Offset = "0xDE885C", VA = "0xDE885C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xDE8930", Offset = "0xDE8930", VA = "0xDE8930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C8C", Offset = "0xA34C8C")]
		private sealed class <VibrateTwiceSpecificHandCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float frequency;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float amplitude;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Hand hand;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float time;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float breakTime;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C2")]
				[Address(RVA = "0x1E5D180", Offset = "0x1E5D180", VA = "0x1E5D180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C4")]
				[Address(RVA = "0x1E5D1EC", Offset = "0x1E5D1EC", VA = "0x1E5D1EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x1E5CF00", Offset = "0x1E5CF00", VA = "0x1E5CF00")]
			[DebuggerHidden]
			public <VibrateTwiceSpecificHandCoroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x1E5CF2C", Offset = "0x1E5CF2C", VA = "0x1E5CF2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x1E5CF30", Offset = "0x1E5CF30", VA = "0x1E5CF30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x1E5D188", Offset = "0x1E5D188", VA = "0x1E5D188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34C9C", Offset = "0xA34C9C")]
		private sealed class <VibrateTwiceCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float amplitude;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float breakTime;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C8")]
				[Address(RVA = "0x1E5CE8C", Offset = "0x1E5CE8C", VA = "0x1E5CE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017CA")]
				[Address(RVA = "0x1E5CEF8", Offset = "0x1E5CEF8", VA = "0x1E5CEF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x1E5CBF0", Offset = "0x1E5CBF0", VA = "0x1E5CBF0")]
			[DebuggerHidden]
			public <VibrateTwiceCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x1E5CC1C", Offset = "0x1E5CC1C", VA = "0x1E5CC1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x1E5CC20", Offset = "0x1E5CC20", VA = "0x1E5CC20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x1E5CE94", Offset = "0x1E5CE94", VA = "0x1E5CE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Coroutine stopAllVibrationCoroutine;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine stopRightVibrationCoroutine;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine stopLeftVibrationCoroutine;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine doubleAllVibrationCoroutine;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine doubleRightVibrationCoroutine;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine doubleLeftVibrationCoroutine;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly InputSystem inputSystem;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameSettings gameSettings;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xDE6CBC", Offset = "0xDE6CBC", VA = "0xDE6CBC")]
		public Vibration(InputSystem inputSystem)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xDD7530", Offset = "0xDD7530", VA = "0xDD7530")]
		public void Vibrate(float amplitude, float time, Hand hand)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xDE7FC8", Offset = "0xDE7FC8", VA = "0xDE7FC8")]
		public void VibrateTwice(float amplitude, float time, float breakTime)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xDE8200", Offset = "0xDE8200", VA = "0xDE8200")]
		public void VibrateTwice(float amplitude, float time, float breakTime, Hand hand)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xDE7EC8", Offset = "0xDE7EC8", VA = "0xDE7EC8")]
		private void ResetAndStartSpecificHandStopVibrationCoroutine(Hand hand, float time)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xDE8438", Offset = "0xDE8438", VA = "0xDE8438")]
		private void ResetAndStartStopVibrationCoroutine(ref Coroutine coroutine, Hand hand = Hand.Any, float time = 1f)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xDE818C", Offset = "0xDE818C", VA = "0xDE818C")]
		private void ResetAndStartTwiceVibrationCoroutine(ref Coroutine coroutine, float amplitude, float time, float breakTime)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xDE83F8", Offset = "0xDE83F8", VA = "0xDE83F8")]
		private void ResetAndStartSpecificHandTwiceVibrationCoroutine(float frequency, float amplitude, float time, float breakTime, Hand hand)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xDE8608", Offset = "0xDE8608", VA = "0xDE8608")]
		private void ResetAndStartSpecificHandTwiceVibrationCoroutine(ref Coroutine coroutine, float frequency, float amplitude, float time, float breakTime, Hand hand)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xDE84A8", Offset = "0xDE84A8", VA = "0xDE84A8")]
		private void ResetCoroutine(ref Coroutine coroutine)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xDE84E4", Offset = "0xDE84E4", VA = "0xDE84E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F7C0", Offset = "0xA3F7C0")]
		private IEnumerator StopVibrationCoroutine(Hand hand = Hand.Any, float time = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xDE8694", Offset = "0xDE8694", VA = "0xDE8694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F824", Offset = "0xA3F824")]
		private IEnumerator VibrateTwiceSpecificHandCoroutine(float frequency, float amplitude, float time, float breakTime, Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xDE8578", Offset = "0xDE8578", VA = "0xDE8578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F888", Offset = "0xA3F888")]
		private IEnumerator VibrateTwiceCoroutine(float amplitude, float time, float breakTime)
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xDE875C", Offset = "0xDE875C", VA = "0xDE875C")]
		private void StopSpecificHandVibrations(Hand hand)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xDE87D8", Offset = "0xDE87D8", VA = "0xDE87D8")]
		private void StopAllVibrations()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xDE7EB8", Offset = "0xDE7EB8", VA = "0xDE7EB8")]
		private static OVRInput.Controller GetSpecificHandController(Hand hand)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xDE7F08", Offset = "0xDE7F08", VA = "0xDE7F08")]
		private static float GetOpenVRAmplitude(float amplitude)
		{
			return default(float);
		}
	}
}
namespace _Code.VR.InputSystem.InputActions
{
	[Token(Token = "0x2000151")]
	public struct GeneralArgs
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float triggerPosition;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector2 stickPosition;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Hand hand;

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xAEECFC", Offset = "0xAEECFC", VA = "0xAEECFC")]
		public GeneralArgs(Hand hand, float triggerPosition)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xAEED04", Offset = "0xAEED04", VA = "0xAEED04")]
		public GeneralArgs(Hand hand, Vector2 stickPosition)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xAEED14", Offset = "0xAEED14", VA = "0xAEED14")]
		public GeneralArgs(Hand hand)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000152")]
	public class InputAction
	{
		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isLocked;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		protected bool isOculus;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected readonly Hand hand;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly SteamVR_Input_Sources steamHand;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected readonly OVRInput.RawTouch oculusTouch;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly OVRInput.RawButton oculusButton;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly SteamVR_Action_Boolean steamTouch;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly SteamVR_Action_Boolean steamButton;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool possessTouchAction;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool isTouched;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		protected bool isPressed;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool clicked;

		[Token(Token = "0x170000E0")]
		public OVRInput.RawTouch OculusTouch
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xDE600C", Offset = "0xDE600C", VA = "0xDE600C")]
			get
			{
				return default(OVRInput.RawTouch);
			}
		}

		[Token(Token = "0x170000E1")]
		public OVRInput.RawButton OculusButton
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xDE6014", Offset = "0xDE6014", VA = "0xDE6014")]
			get
			{
				return default(OVRInput.RawButton);
			}
		}

		[Token(Token = "0x170000E2")]
		public SteamVR_Action_Boolean SteamTouch
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0xDE601C", Offset = "0xDE601C", VA = "0xDE601C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public SteamVR_Action_Boolean SteamButton
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xDE6024", Offset = "0xDE6024", VA = "0xDE6024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public Hand Hand
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xDE602C", Offset = "0xDE602C", VA = "0xDE602C")]
			get
			{
				return default(Hand);
			}
		}

		[Token(Token = "0x170000E5")]
		public bool IsTouched
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xDE6034", Offset = "0xDE6034", VA = "0xDE6034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		public bool IsPressed
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xDE603C", Offset = "0xDE603C", VA = "0xDE603C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<GeneralArgs> Pressed
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xDD7068", Offset = "0xDD7068", VA = "0xDD7068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F8EC", Offset = "0xA3F8EC")]
			add
			{
			}
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xDE5CD8", Offset = "0xDE5CD8", VA = "0xDE5CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F8FC", Offset = "0xA3F8FC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<GeneralArgs> Up
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xDE5D7C", Offset = "0xDE5D7C", VA = "0xDE5D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F90C", Offset = "0xA3F90C")]
			add
			{
			}
			[Token(Token = "0x6000995")]
			[Address(RVA = "0xDE5E20", Offset = "0xDE5E20", VA = "0xDE5E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F91C", Offset = "0xA3F91C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<GeneralArgs> Down
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xDD6FC4", Offset = "0xDD6FC4", VA = "0xDD6FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F92C", Offset = "0xA3F92C")]
			add
			{
			}
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xDE5EC4", Offset = "0xDE5EC4", VA = "0xDE5EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F93C", Offset = "0xA3F93C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action Clicked
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xDD8034", Offset = "0xDD8034", VA = "0xDD8034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F94C", Offset = "0xA3F94C")]
			add
			{
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xDE5F68", Offset = "0xDE5F68", VA = "0xDE5F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3F95C", Offset = "0xA3F95C")]
			remove
			{
			}
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xDE6044", Offset = "0xDE6044", VA = "0xDE6044")]
		public InputAction(OculusInputBindings.ButtonBinding binding)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xDE6098", Offset = "0xDE6098", VA = "0xDE6098")]
		public InputAction(OpenVRInputBindings.ButtonBinding binding, Hand hand)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xDE616C", Offset = "0xDE616C", VA = "0xDE616C", Slot = "4")]
		public virtual void Check()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xDE61B0", Offset = "0xDE61B0", VA = "0xDE61B0")]
		protected void CheckPressAndTouch()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xDE625C", Offset = "0xDE625C", VA = "0xDE625C", Slot = "5")]
		protected virtual void CheckSteamPressAndTouch()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xDE62BC", Offset = "0xDE62BC", VA = "0xDE62BC", Slot = "6")]
		protected virtual void CheckOculusPressAndTouch()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xDE61F8", Offset = "0xDE61F8", VA = "0xDE61F8")]
		protected void InvokeClickEvents(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xDE6444", Offset = "0xDE6444", VA = "0xDE6444")]
		private void InvokeSteamClickEvents(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xDE6354", Offset = "0xDE6354", VA = "0xDE6354")]
		private void InvokeOculusClickEvents(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xDE64D0", Offset = "0xDE64D0", VA = "0xDE64D0")]
		private void OnPressed(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xDE65DC", Offset = "0xDE65DC", VA = "0xDE65DC")]
		private void OnUp(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xDE6560", Offset = "0xDE6560", VA = "0xDE6560")]
		private void OnDown(GeneralArgs args)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xDE6658", Offset = "0xDE6658", VA = "0xDE6658", Slot = "7")]
		public virtual float GetTriggerPosition()
		{
			return default(float);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xDE66C8", Offset = "0xDE66C8", VA = "0xDE66C8", Slot = "8")]
		public virtual Vector2 GetStickPosition()
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public class StickAction : InputAction
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private readonly OVRInput.RawAxis2D oculusAxis;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly SteamVR_Action_Vector2 steamAxis;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 position;

		[Token(Token = "0x170000E7")]
		public Vector2 Position
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xDE6738", Offset = "0xDE6738", VA = "0xDE6738")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xDE6740", Offset = "0xDE6740", VA = "0xDE6740")]
		public StickAction(OculusInputBindings.StickBinding binding)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xDE6778", Offset = "0xDE6778", VA = "0xDE6778")]
		public StickAction(OpenVRInputBindings.StickBinding binding, Hand hand)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xDE67B0", Offset = "0xDE67B0", VA = "0xDE67B0", Slot = "4")]
		public override void Check()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xDE6868", Offset = "0xDE6868", VA = "0xDE6868", Slot = "6")]
		protected override void CheckOculusPressAndTouch()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xDE6914", Offset = "0xDE6914", VA = "0xDE6914", Slot = "5")]
		protected override void CheckSteamPressAndTouch()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xDE6988", Offset = "0xDE6988", VA = "0xDE6988")]
		private void UnlockStick()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xDE6990", Offset = "0xDE6990", VA = "0xDE6990", Slot = "7")]
		public override float GetTriggerPosition()
		{
			return default(float);
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xDE6A00", Offset = "0xDE6A00", VA = "0xDE6A00", Slot = "8")]
		public override Vector2 GetStickPosition()
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	public class TriggerAction : InputAction
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected readonly OVRInput.RawAxis1D oculusAxis;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly SteamVR_Action_Single steamAxis;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float position;

		[Token(Token = "0x170000E8")]
		public float Position
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0xDE6A7C", Offset = "0xDE6A7C", VA = "0xDE6A7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xDE6A84", Offset = "0xDE6A84", VA = "0xDE6A84")]
		public TriggerAction(OculusInputBindings.TriggerBinding binding)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xDE6ABC", Offset = "0xDE6ABC", VA = "0xDE6ABC")]
		public TriggerAction(OpenVRInputBindings.TriggerBinding binding, Hand hand)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xDE6AF4", Offset = "0xDE6AF4", VA = "0xDE6AF4", Slot = "4")]
		public override void Check()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xDE6BC0", Offset = "0xDE6BC0", VA = "0xDE6BC0", Slot = "7")]
		public override float GetTriggerPosition()
		{
			return default(float);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xDE6BD8", Offset = "0xDE6BD8", VA = "0xDE6BD8", Slot = "8")]
		public override Vector2 GetStickPosition()
		{
			return default(Vector2);
		}
	}
}
namespace _Code.UI_Tablet_Screens
{
	[Token(Token = "0x2000155")]
	public class ChangeMovementScreen : TabletScreen
	{
		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CAC", Offset = "0xA34CAC")]
		private sealed class <GetVirtualButtons>d__43 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChangeMovementScreen <>4__this;

			[Token(Token = "0x1700029B")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x60017CE")]
				[Address(RVA = "0xDDB100", Offset = "0xDDB100", VA = "0xDDB100", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D0")]
				[Address(RVA = "0xDDB16C", Offset = "0xDDB16C", VA = "0xDDB16C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017CB")]
			[Address(RVA = "0xDDAEE4", Offset = "0xDDAEE4", VA = "0xDDAEE4")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xDDAF24", Offset = "0xDDAF24", VA = "0xDDAF24", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xDDAF28", Offset = "0xDDAF28", VA = "0xDDAF28", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xDDB108", Offset = "0xDDB108", VA = "0xDDB108", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xDDB174", Offset = "0xDDB174", VA = "0xDDB174", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xDDB224", Offset = "0xDDB224", VA = "0xDDB224", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VirtualButton toggleVignetteButton;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VirtualButton toggleSeatedModeButton;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualButton nextPlayAreaButton;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VirtualButton prevPlayAreaButton;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VirtualButton nextSnapAngleButton;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VirtualButton prevSnapAngleButton;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VirtualButton nextElevationButton;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VirtualButton prevElevationButton;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshPro vignetteLabel;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro playAreaLabel;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshPro playAreaValueLabel;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshPro snapAngleLabel;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshPro snapAngleValueLabel;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshPro elevationLabel;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshPro elevationValueLabel;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextMeshPro seatedLabel;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro areaModeDescription;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform vignetteOption;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform snapAngleOption;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 vignetteStartPos;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private Vector3 snapAngleStartPos;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int currentPlayAreaMode;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int playAreaModesCount;

		[Token(Token = "0x170000E9")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xDD954C", Offset = "0xDD954C", VA = "0xDD954C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public override string ScreenTitle
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xDD956C", Offset = "0xDD956C", VA = "0xDD956C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xDD95B8", Offset = "0xDD95B8", VA = "0xDD95B8", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xDD9D98", Offset = "0xDD9D98", VA = "0xDD9D98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3F96C", Offset = "0xA3F96C")]
		private void CollectData()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xDD97D4", Offset = "0xDD97D4", VA = "0xDD97D4")]
		private void SetButtonsCallback()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xDD9DE8", Offset = "0xDD9DE8", VA = "0xDD9DE8", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xDDA4DC", Offset = "0xDDA4DC", VA = "0xDDA4DC")]
		private void ToggleVignette()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xDDA5D0", Offset = "0xDDA5D0", VA = "0xDDA5D0")]
		private void ToggleSeatedMode()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xDD9A28", Offset = "0xDD9A28", VA = "0xDD9A28")]
		private void LoadUIValues()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xDDA6C4", Offset = "0xDDA6C4", VA = "0xDDA6C4")]
		private void CycleForwardPlayAreaMode()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xDDA7E8", Offset = "0xDDA7E8", VA = "0xDDA7E8")]
		private void CycleBackwardPlayAreaMode()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xDDA204", Offset = "0xDDA204", VA = "0xDDA204")]
		private void SetupVignetteAndSnapOptions()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xDDA3F8", Offset = "0xDDA3F8", VA = "0xDDA3F8")]
		private void UpdateMovementModeDesc()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xDDA898", Offset = "0xDDA898", VA = "0xDDA898")]
		private void CycleForwardSnapAngle()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xDDAA24", Offset = "0xDDAA24", VA = "0xDDAA24")]
		private void CycleBackwardSnapAngle()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xDDABB0", Offset = "0xDDABB0", VA = "0xDDABB0")]
		private void CycleForwardElevation()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xDDAD08", Offset = "0xDDAD08", VA = "0xDDAD08")]
		private void CycleBackwardElevation()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xDD9E14", Offset = "0xDD9E14", VA = "0xDD9E14")]
		public void TranslateLabels()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xDDAE60", Offset = "0xDDAE60", VA = "0xDDAE60", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F9A4", Offset = "0xA3F9A4")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xDDAF1C", Offset = "0xDDAF1C", VA = "0xDDAF1C")]
		public ChangeMovementScreen()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class DevScreen : TabletScreen
	{
		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro keyText;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro valueText;

		[Token(Token = "0x170000EB")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0xDDB228", Offset = "0xDDB228", VA = "0xDDB228", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public override string ScreenTitle
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0xDDB248", Offset = "0xDDB248", VA = "0xDDB248", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xDDB290", Offset = "0xDDB290", VA = "0xDDB290", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xDDB4A0", Offset = "0xDDB4A0", VA = "0xDDB4A0")]
		public DevScreen()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class HomeScreen : TabletScreen
	{
		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CBC", Offset = "0xA34CBC")]
		private sealed class <GetVirtualButtons>d__25 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HomeScreen <>4__this;

			[Token(Token = "0x1700029D")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x60017D6")]
				[Address(RVA = "0xDDBD1C", Offset = "0xDDBD1C", VA = "0xDDBD1C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D8")]
				[Address(RVA = "0xDDBD88", Offset = "0xDDBD88", VA = "0xDDBD88", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xDDBBDC", Offset = "0xDDBBDC", VA = "0xDDBBDC")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xDDBC1C", Offset = "0xDDBC1C", VA = "0xDDBC1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xDDBC20", Offset = "0xDDBC20", VA = "0xDDBC20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xDDBD24", Offset = "0xDDBD24", VA = "0xDDBD24", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xDDBD90", Offset = "0xDDBD90", VA = "0xDDBD90", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xDDBE40", Offset = "0xDDBE40", VA = "0xDDBE40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VirtualButton shopButton;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VirtualButton jobsButton;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VirtualButton housesButton;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VirtualButton optionsButton;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VirtualButton tutorialsButton;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VirtualButton skillTreeButton;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VirtualButton returnToMainButton;

		[Token(Token = "0x170000ED")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xDDB4A8", Offset = "0xDDB4A8", VA = "0xDDB4A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		public override string ScreenTitle
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xDDB4B0", Offset = "0xDDB4B0", VA = "0xDDB4B0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public override bool ShowScreenTitle
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xDDB4FC", Offset = "0xDDB4FC", VA = "0xDDB4FC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xDDB504", Offset = "0xDDB504", VA = "0xDDB504")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xDDB5E4", Offset = "0xDDB5E4", VA = "0xDDB5E4", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xDDB834", Offset = "0xDDB834", VA = "0xDDB834")]
		public void BlockShopTutorialButtons()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xDDB8A4", Offset = "0xDDB8A4", VA = "0xDDB8A4")]
		public void BlockJobTutorialButtons()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xDDB914", Offset = "0xDDB914", VA = "0xDDB914")]
		public void UnlockAllTutorialButtons()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xDDB984", Offset = "0xDDB984", VA = "0xDDB984")]
		private void ShopButtonHandler()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xDDB9A0", Offset = "0xDDB9A0", VA = "0xDDB9A0")]
		private void JobsButtonHandler()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xDDB9BC", Offset = "0xDDB9BC", VA = "0xDDB9BC")]
		private void HousesButtonHandler()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xDDB9D8", Offset = "0xDDB9D8", VA = "0xDDB9D8")]
		private void OptionsButtonHandler()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xDDB9F4", Offset = "0xDDB9F4", VA = "0xDDB9F4")]
		private void TutorialsButtonHandler()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xDDBA10", Offset = "0xDDBA10", VA = "0xDDBA10")]
		private void SkillTreeButtonHandler()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xDDBA2C", Offset = "0xDDBA2C", VA = "0xDDBA2C")]
		private void ReturnToMainMenuHandler()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xDDBB58", Offset = "0xDDBB58", VA = "0xDDBB58", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FA08", Offset = "0xA3FA08")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xDDBC14", Offset = "0xDDBC14", VA = "0xDDBC14")]
		public HomeScreen()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class HouseSellDialogueScreen : TabletScreen
	{
		[Serializable]
		[Token(Token = "0x200037F")]
		private class HouseSellDialogueScreenMoneyLine
		{
			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro label;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro value;

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xDDD690", Offset = "0xDDD690", VA = "0xDDD690")]
			public HouseSellDialogueScreenMoneyLine()
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CCC", Offset = "0xA34CCC")]
		private sealed class <AuctionCor>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HouseSellDialogueScreen <>4__this;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <minAuctionEndTime>5__2;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017DF")]
				[Address(RVA = "0xDDD470", Offset = "0xDDD470", VA = "0xDDD470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E1")]
				[Address(RVA = "0xDDD4DC", Offset = "0xDDD4DC", VA = "0xDDD4DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xDDC908", Offset = "0xDDC908", VA = "0xDDC908")]
			[DebuggerHidden]
			public <AuctionCor>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xDDD000", Offset = "0xDDD000", VA = "0xDDD000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xDDD004", Offset = "0xDDD004", VA = "0xDDD004", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xDDD478", Offset = "0xDDD478", VA = "0xDDD478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CDC", Offset = "0xA34CDC")]
		private sealed class <GetVirtualButtons>d__36 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HouseSellDialogueScreen <>4__this;

			[Token(Token = "0x170002A1")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x60017E5")]
				[Address(RVA = "0xDDD568", Offset = "0xDDD568", VA = "0xDDD568", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E7")]
				[Address(RVA = "0xDDD5D4", Offset = "0xDDD5D4", VA = "0xDDD5D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xDDCB60", Offset = "0xDDCB60", VA = "0xDDCB60")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xDDD4E4", Offset = "0xDDD4E4", VA = "0xDDD4E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xDDD4E8", Offset = "0xDDD4E8", VA = "0xDDD4E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xDDD570", Offset = "0xDDD570", VA = "0xDDD570", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xDDD5DC", Offset = "0xDDD5DC", VA = "0xDDD5DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xDDD68C", Offset = "0xDDD68C", VA = "0xDDD68C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CEC", Offset = "0xA34CEC")]
		private sealed class <<HandleActionStarted>g__LoadingCor|30_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HouseSellDialogueScreen <>4__this;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lastIncrementTime>5__2;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017ED")]
				[Address(RVA = "0xDDCF8C", Offset = "0xDDCF8C", VA = "0xDDCF8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EF")]
				[Address(RVA = "0xDDCFF8", Offset = "0xDDCFF8", VA = "0xDDCFF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xDDCBA0", Offset = "0xDDCBA0", VA = "0xDDCBA0")]
			[DebuggerHidden]
			public <<HandleActionStarted>g__LoadingCor|30_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xDDCE00", Offset = "0xDDCE00", VA = "0xDDCE00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xDDCE04", Offset = "0xDDCE04", VA = "0xDDCE04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xDDCF94", Offset = "0xDDCF94", VA = "0xDDCF94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34CFC", Offset = "0xA34CFC")]
		private sealed class <<HandleActionStarted>g__AppraiserShowTimeCor|30_1>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HouseSellDialogueScreen <>4__this;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <photoShowTime>5__2;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Sprite[] <appraiserPhotos>5__3;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <showTime>5__4;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <appraiserIndex>5__5;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F3")]
				[Address(RVA = "0xDDCD8C", Offset = "0xDDCD8C", VA = "0xDDCD8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F5")]
				[Address(RVA = "0xDDCDF8", Offset = "0xDDCDF8", VA = "0xDDCDF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xDDCBCC", Offset = "0xDDCBCC", VA = "0xDDCBCC")]
			[DebuggerHidden]
			public <<HandleActionStarted>g__AppraiserShowTimeCor|30_1>d(int <>1__state)
			{
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xDDCBF8", Offset = "0xDDCBF8", VA = "0xDDCBF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xDDCBFC", Offset = "0xDDCBFC", VA = "0xDDCBFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xDDCD94", Offset = "0xDDCD94", VA = "0xDDCD94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro title;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HouseSellDialogueScreenMoneyLine buyLine;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HouseSellDialogueScreenMoneyLine sellLine;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HouseSellDialogueScreenMoneyLine profitLine;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VirtualButton startAuctionButton;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VirtualButton sellButton;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpriteRenderer appraiserPhoto;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite nooneInterestedSprite;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VirtualButton[] buttonsInactiveDuringAuction;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HouseAsset houseAsset;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HouseState houseState;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool houseDataAssigned;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AppraiserSystem appraiserSystem;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool auctionFinished;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool auctionCorRunning;

		[Token(Token = "0x170000F0")]
		public override bool ShowScreenTitle
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xDDBE44", Offset = "0xDDBE44", VA = "0xDDBE44", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xDDBE4C", Offset = "0xDDBE4C", VA = "0xDDBE4C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private static string SellText
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xDDBE6C", Offset = "0xDDBE6C", VA = "0xDDBE6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private static string StartAuctionText
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xDDBEB8", Offset = "0xDDBEB8", VA = "0xDDBEB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xDDBF04", Offset = "0xDDBF04", VA = "0xDDBF04", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xDD4B30", Offset = "0xDD4B30", VA = "0xDD4B30")]
		public void DeclareSubsystems(Subsystems subsystems)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xDD4C7C", Offset = "0xDD4C7C", VA = "0xDD4C7C")]
		public void DeclareSceneSystems(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xDDBF98", Offset = "0xDDBF98", VA = "0xDDBF98")]
		private void HQOnPlayerMoneyChangedEvent()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xDDC218", Offset = "0xDDC218", VA = "0xDDC218")]
		public void AssignCurrentHouseAssetAndState(HouseAsset house, HouseState state)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xDDC228", Offset = "0xDDC228", VA = "0xDDC228", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xDDC4A0", Offset = "0xDDC4A0", VA = "0xDDC4A0")]
		private void ResetScreen()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xDDC698", Offset = "0xDDC698", VA = "0xDDC698")]
		private void HandleActionStarted()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xDDC7AC", Offset = "0xDDC7AC", VA = "0xDDC7AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FA6C", Offset = "0xA3FA6C")]
		private IEnumerator AuctionCor()
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xDDC034", Offset = "0xDDC034", VA = "0xDDC034")]
		private void UpdatePriceValues()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xDDC934", Offset = "0xDDC934", VA = "0xDDC934")]
		private static string GetProfitPrefix(int profit)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xDDC998", Offset = "0xDDC998", VA = "0xDDC998")]
		private void BackToHouseScreen()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xDDC9B4", Offset = "0xDDC9B4", VA = "0xDDC9B4")]
		private void SellHouse()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xDDCADC", Offset = "0xDDCADC", VA = "0xDDCADC", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FAD0", Offset = "0xA3FAD0")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xDDCB98", Offset = "0xDDCB98", VA = "0xDDCB98")]
		public HouseSellDialogueScreen()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xDDC820", Offset = "0xDDC820", VA = "0xDDC820")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FB34", Offset = "0xA3FB34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FB34", Offset = "0xA3FB34")]
		private IEnumerator <HandleActionStarted>g__LoadingCor|30_0()
		{
			return null;
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xDDC894", Offset = "0xDDC894", VA = "0xDDC894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FBA8", Offset = "0xA3FBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FBA8", Offset = "0xA3FBA8")]
		private IEnumerator <HandleActionStarted>g__AppraiserShowTimeCor|30_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class HousesScreen : TabletScreen
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D0C", Offset = "0xA34D0C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HouseAsset house;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HousesScreen <>4__this;

			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xDDE080", Offset = "0xDDE080", VA = "0xDDE080")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xDDE834", Offset = "0xDDE834", VA = "0xDDE834")]
			internal void <LoadCurrentPageGrid>b__0()
			{
			}
		}

		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D1C", Offset = "0xA34D1C")]
		private sealed class <GetVirtualButtons>d__20 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HousesScreen <>4__this;

			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HouseVirtualButton[] <>7__wrap1;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x170002A7")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x60017FB")]
				[Address(RVA = "0xDDE934", Offset = "0xDDE934", VA = "0xDDE934", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FD")]
				[Address(RVA = "0xDDE9A0", Offset = "0xDDE9A0", VA = "0xDDE9A0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xDDE7EC", Offset = "0xDDE7EC", VA = "0xDDE7EC")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xDDE858", Offset = "0xDDE858", VA = "0xDDE858", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xDDE85C", Offset = "0xDDE85C", VA = "0xDDE85C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xDDE93C", Offset = "0xDDE93C", VA = "0xDDE93C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xDDE9A8", Offset = "0xDDE9A8", VA = "0xDDE9A8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xDDEA58", Offset = "0xDDEA58", VA = "0xDDEA58", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HouseVirtualButton[] buttons;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject slider;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<HouseAsset> sortedHousesByPrice;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int housesOwnedByPlayer;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<HouseAsset> filteredHouses;

		[Token(Token = "0x170000F4")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xDDD698", Offset = "0xDDD698", VA = "0xDDD698", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		public override string ScreenTitle
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xDDD6B8", Offset = "0xDDD6B8", VA = "0xDDD6B8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xDDD704", Offset = "0xDDD704", VA = "0xDDD704", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xDDD794", Offset = "0xDDD794", VA = "0xDDD794", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xDDDA94", Offset = "0xDDDA94", VA = "0xDDDA94")]
		private void FilterAssets()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xDDD87C", Offset = "0xDDD87C", VA = "0xDDD87C")]
		private void SetCurrentHouseHighlight()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xDDDFCC", Offset = "0xDDDFCC", VA = "0xDDDFCC", Slot = "13")]
		public override void OnHide()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xDDE07C", Offset = "0xDDE07C", VA = "0xDDE07C")]
		private void SetPage(int page)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xDDDDC0", Offset = "0xDDDDC0", VA = "0xDDDDC0")]
		private void LoadCurrentPageGrid()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xDDE088", Offset = "0xDDE088", VA = "0xDDE088")]
		private void ShowHouse(HouseAsset asset)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xDDD708", Offset = "0xDDD708", VA = "0xDDD708")]
		private void SortHouseAssets()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xDDE21C", Offset = "0xDDE21C", VA = "0xDDE21C")]
		private void QuickSortHouseAssetsByPrice(IList<HouseAsset> collection, int low, int high)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xDDE290", Offset = "0xDDE290", VA = "0xDDE290")]
		private int PricePartition(IList<HouseAsset> collection, int low, int high)
		{
			return default(int);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xDDE768", Offset = "0xDDE768", VA = "0xDDE768", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FC1C", Offset = "0xA3FC1C")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xDDE824", Offset = "0xDDE824", VA = "0xDDE824")]
		public HousesScreen()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class ItemCategoriesScreen : TabletScreen
	{
		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D2C", Offset = "0xA34D2C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemCategory category;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemCategoriesScreen <>4__this;

			[Token(Token = "0x6001800")]
			[Address(RVA = "0xDDF234", Offset = "0xDDF234", VA = "0xDDF234")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0xDDF554", Offset = "0xDDF554", VA = "0xDDF554")]
			internal void <GetParameters>b__1()
			{
			}
		}

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ItemCategory> displayableCategories;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite bedsCategorySprite;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite chairsCategorySprite;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite electronicsCategorySprite;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite foodCategorySprite;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite installationsCategorySprite;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite lightingCategorySprite;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite otherCategorySprite;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Sprite paintCansCategorySprite;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Sprite paintingsCategorySprite;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Sprite plantsCategorySprite;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Sprite sofasCategorySprite;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Sprite storageCategorySprite;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Sprite tablesCategorySprite;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Sprite toysCategorySprite;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Sprite carpetCategorySprite;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Sprite chimneyCategorySprite;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Sprite christmasCategorySprite;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Sprite curtainsCategorySprite;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Sprite musicalInstrumentsCategorySprite;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Sprite repairShopCategorySprite;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Sprite japaneseCategorySprite;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Sprite gymCategorySprite;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Sprite hairdresserCategorySprite;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<ItemCategory, Sprite> categoryToSprite;

		[Token(Token = "0x170000F6")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xDDEA5C", Offset = "0xDDEA5C", VA = "0xDDEA5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xDDEA7C", Offset = "0xDDEA7C", VA = "0xDDEA7C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xDDEAC8", Offset = "0xDDEAC8", VA = "0xDDEAC8", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xDDEEE8", Offset = "0xDDEEE8", VA = "0xDDEEE8", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xDDEF1C", Offset = "0xDDEF1C", VA = "0xDDEF1C")]
		private List<VirtualButtonCallbackParameters> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xDDF23C", Offset = "0xDDF23C", VA = "0xDDF23C")]
		private void ShowCategory(ItemCategory cat)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xDDF4DC", Offset = "0xDDF4DC", VA = "0xDDF4DC")]
		public ItemCategoriesScreen()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xDDF54C", Offset = "0xDDF54C", VA = "0xDDF54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FC80", Offset = "0xA3FC80")]
		private void <GetParameters>b__31_0()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class ItemsListScreen : TabletScreen
	{
		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D3C", Offset = "0xA34D3C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemsListScreen <>4__this;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Item filteredItem;

			[Token(Token = "0x6001802")]
			[Address(RVA = "0xDDF868", Offset = "0xDDF868", VA = "0xDDF868")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0xDDF974", Offset = "0xDDF974", VA = "0xDDF974")]
			internal void <GetParameters>b__0()
			{
			}

			[Token(Token = "0x6001804")]
			[Address(RVA = "0xDDF998", Offset = "0xDDF998", VA = "0xDDF998")]
			internal void <GetParameters>b__1()
			{
			}
		}

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private ItemCategory activeCategory;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Item> filteredItems;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VirtualButtonCallbackParameters> showFilteredItemActions;

		[Token(Token = "0x170000F8")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0xDDF578", Offset = "0xDDF578", VA = "0xDDF578", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xDDF598", Offset = "0xDDF598", VA = "0xDDF598", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xDDF280", Offset = "0xDDF280", VA = "0xDDF280")]
		public void LoadCategory(ItemCategory category)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xDDF5A4", Offset = "0xDDF5A4", VA = "0xDDF5A4")]
		private VirtualButtonCallbackParameters GetParameters(Item filteredItem)
		{
			return null;
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xDDF870", Offset = "0xDDF870", VA = "0xDDF870", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xDDF894", Offset = "0xDDF894", VA = "0xDDF894")]
		private void ShowItem(Item item)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xDDF8DC", Offset = "0xDDF8DC", VA = "0xDDF8DC")]
		public ItemsListScreen()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class JobsScreen : TabletScreen
	{
		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D4C", Offset = "0xA34D4C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JobsScreen <>4__this;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JobAsset jobAsset;

			[Token(Token = "0x6001805")]
			[Address(RVA = "0xDE01A4", Offset = "0xDE01A4", VA = "0xDE01A4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xDE0270", Offset = "0xDE0270", VA = "0xDE0270")]
			internal void <GetShowJobScreenAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D5C", Offset = "0xA34D5C")]
		private sealed class <GetVirtualButtons>d__16 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JobsScreen <>4__this;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MailBoxVirtualButton[] <>7__wrap1;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x170002A9")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x600180A")]
				[Address(RVA = "0xDE0358", Offset = "0xDE0358", VA = "0xDE0358", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180C")]
				[Address(RVA = "0xDE03C4", Offset = "0xDE03C4", VA = "0xDE03C4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0xDE0230", Offset = "0xDE0230", VA = "0xDE0230")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001808")]
			[Address(RVA = "0xDE0294", Offset = "0xDE0294", VA = "0xDE0294", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001809")]
			[Address(RVA = "0xDE0298", Offset = "0xDE0298", VA = "0xDE0298", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0xDE0360", Offset = "0xDE0360", VA = "0xDE0360", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0xDE03CC", Offset = "0xDE03CC", VA = "0xDE03CC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600180E")]
			[Address(RVA = "0xDE047C", Offset = "0xDE047C", VA = "0xDE047C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VirtualSlider slider;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MailBoxVirtualButton[] buttons;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int pagesCount;

		[Token(Token = "0x170000FA")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xDDFA04", Offset = "0xDDFA04", VA = "0xDDFA04", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public VirtualSlider Slider
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0xDDFA24", Offset = "0xDDFA24", VA = "0xDDFA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xDDFA2C", Offset = "0xDDFA2C", VA = "0xDDFA2C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xDDFA78", Offset = "0xDDFA78", VA = "0xDDFA78", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xDDFEA4", Offset = "0xDDFEA4", VA = "0xDDFEA4", Slot = "13")]
		public override void OnHide()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xDDFF38", Offset = "0xDDFF38", VA = "0xDDFF38")]
		public void ChangePage(int p)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xDDFC1C", Offset = "0xDDFC1C", VA = "0xDDFC1C")]
		private void LoadButtons()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xDDFF64", Offset = "0xDDFF64", VA = "0xDDFF64")]
		private void SetButtonCallback(MailBoxVirtualButton button, int jobIndex)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xDE00FC", Offset = "0xDE00FC", VA = "0xDE00FC")]
		private Action GetShowJobScreenAction(JobAsset jobAsset)
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xDDFBE4", Offset = "0xDDFBE4", VA = "0xDDFBE4")]
		private void ShowJobScreen(JobAsset jobAsset)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xDE01AC", Offset = "0xDE01AC", VA = "0xDE01AC", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FC90", Offset = "0xA3FC90")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xDE0268", Offset = "0xDE0268", VA = "0xDE0268")]
		public JobsScreen()
		{
		}
	}
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33C9C", Offset = "0xA33C9C")]
	public class LanguageActivator : ScriptableObject, IHasSprite
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite flag;

		[Token(Token = "0x170000FD")]
		public Sprite Sprite
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xDE0480", Offset = "0xDE0480", VA = "0xDE0480", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xDE0488", Offset = "0xDE0488", VA = "0xDE0488")]
		public LanguageActivator()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class OptionsScreen : TabletScreen
	{
		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D6C", Offset = "0xA34D6C")]
		private sealed class <GetVirtualButtons>d__52 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OptionsScreen <>4__this;

			[Token(Token = "0x170002AB")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001812")]
				[Address(RVA = "0xDE1B80", Offset = "0xDE1B80", VA = "0xDE1B80", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0xDE1BEC", Offset = "0xDE1BEC", VA = "0xDE1BEC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0xDE1960", Offset = "0xDE1960", VA = "0xDE1960")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001810")]
			[Address(RVA = "0xDE1A08", Offset = "0xDE1A08", VA = "0xDE1A08", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0xDE1A0C", Offset = "0xDE1A0C", VA = "0xDE1A0C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0xDE1B88", Offset = "0xDE1B88", VA = "0xDE1B88", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0xDE1BF4", Offset = "0xDE1BF4", VA = "0xDE1BF4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001816")]
			[Address(RVA = "0xDE1CA4", Offset = "0xDE1CA4", VA = "0xDE1CA4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixer masterMixer;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VirtualButton selectLanguageButton;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualButton changeMovementButton;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VirtualButton toggleVibrationsButton;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VirtualButton toggleRoachesButton;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VirtualButton increasePlayerHeightButton;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VirtualButton decreasePlayerHeightButton;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VirtualButton increaseAmbientVolume;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VirtualButton decreaseAmbientVolume;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VirtualButton increaseSoundsVolume;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VirtualButton decreaseSoundsVolume;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VirtualButton leftHandedButton;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VirtualButton rightHandedButton;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshPro vibrationsLabel;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshPro roachesLabel;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextMeshPro playerHeightLabel;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro playerHeightValueLabel;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshPro ambientVolumeLabel;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TextMeshPro soundsVolumeLabel;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshPro ambientVolumeValueLabel;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextMeshPro soundsVolumeValueLabel;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Mesh regularButtonMesh;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Mesh prominentButtonMesh;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MeshFilter leftHandedMeshFilter;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MeshFilter rightHandedMeshFilter;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Color prominentButtonLabelColor;

		[Token(Token = "0x170000FE")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0xDE0490", Offset = "0xDE0490", VA = "0xDE0490", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0xDE04B0", Offset = "0xDE04B0", VA = "0xDE04B0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xDE04FC", Offset = "0xDE04FC", VA = "0xDE04FC", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xDE0640", Offset = "0xDE0640", VA = "0xDE0640")]
		private void SetButtonsCallback()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xDE0BF4", Offset = "0xDE0BF4", VA = "0xDE0BF4", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xDE0ED0", Offset = "0xDE0ED0", VA = "0xDE0ED0")]
		private void ToggleVibrations()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xDE0FA4", Offset = "0xDE0FA4", VA = "0xDE0FA4")]
		private void ToggleRoaches()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xDE1098", Offset = "0xDE1098", VA = "0xDE1098")]
		private void SetLeftHanded()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xDE1118", Offset = "0xDE1118", VA = "0xDE1118")]
		private void SetRightHanded()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xDE0994", Offset = "0xDE0994", VA = "0xDE0994")]
		private void LoadUIValues()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xDE1194", Offset = "0xDE1194", VA = "0xDE1194")]
		private void LoadHandValues()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xDE12D0", Offset = "0xDE12D0", VA = "0xDE12D0")]
		private void DecreasePlayerHeight()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xDE1380", Offset = "0xDE1380", VA = "0xDE1380")]
		private void IncreasePlayerHeight()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xDE1430", Offset = "0xDE1430", VA = "0xDE1430")]
		private void IncreaseAmbientVolume()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xDE1580", Offset = "0xDE1580", VA = "0xDE1580")]
		private void DecreaseAmbientVolume()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xDE16D4", Offset = "0xDE16D4", VA = "0xDE16D4")]
		private void IncreaseSoundsVolume()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xDE1760", Offset = "0xDE1760", VA = "0xDE1760")]
		private void DecreaseSoundsVolume()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xDE14BC", Offset = "0xDE14BC", VA = "0xDE14BC")]
		private void IncreaseVolume(ref float volume, string parameterName)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xDE160C", Offset = "0xDE160C", VA = "0xDE160C")]
		private void DecreaseVolume(ref float volume, string parameterName)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xDE17EC", Offset = "0xDE17EC", VA = "0xDE17EC")]
		private void UpdateMixerVolume(float uiVolumeValue, string parameterName)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xDE1828", Offset = "0xDE1828", VA = "0xDE1828")]
		private float GetVolumeFromUIValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xDE18A4", Offset = "0xDE18A4", VA = "0xDE18A4")]
		private void HandleSelectLanguage()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xDE18C0", Offset = "0xDE18C0", VA = "0xDE18C0")]
		private void HandleChangeMovement()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xDE0BF8", Offset = "0xDE0BF8", VA = "0xDE0BF8")]
		public void TranslateLabels()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xDE18DC", Offset = "0xDE18DC", VA = "0xDE18DC", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FCF4", Offset = "0xA3FCF4")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xDE1998", Offset = "0xDE1998", VA = "0xDE1998")]
		public OptionsScreen()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class SelectLanguageScreen : TabletScreen
	{
		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D7C", Offset = "0xA34D7C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageData language;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectLanguageScreen <>4__this;

			[Token(Token = "0x6001817")]
			[Address(RVA = "0xDE201C", Offset = "0xDE201C", VA = "0xDE201C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001818")]
			[Address(RVA = "0xDE2100", Offset = "0xDE2100", VA = "0xDE2100")]
			internal void <GetParameters>b__0()
			{
			}
		}

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageDataBase languageDataBase;

		[Token(Token = "0x17000100")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xDE1DF0", Offset = "0xDE1DF0", VA = "0xDE1DF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xDE1E10", Offset = "0xDE1E10", VA = "0xDE1E10", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<LanguageData> OnLanguageChanged
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0xDE1CA8", Offset = "0xDE1CA8", VA = "0xDE1CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FD58", Offset = "0xA3FD58")]
			add
			{
			}
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xDE1D4C", Offset = "0xDE1D4C", VA = "0xDE1D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FD68", Offset = "0xA3FD68")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xDE1E5C", Offset = "0xDE1E5C", VA = "0xDE1E5C", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xDE1E90", Offset = "0xDE1E90", VA = "0xDE1E90")]
		private List<VirtualButtonCallbackParameters> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xDE2024", Offset = "0xDE2024", VA = "0xDE2024")]
		private void ChangeLanguage(LanguageData languageData)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xDE20F8", Offset = "0xDE20F8", VA = "0xDE20F8")]
		public SelectLanguageScreen()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class SingleHouseScreen : TabletScreen
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D8C", Offset = "0xA34D8C")]
		private sealed class <GetVirtualButtons>d__42 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SingleHouseScreen <>4__this;

			[Token(Token = "0x170002AD")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x600181C")]
				[Address(RVA = "0xDE2C40", Offset = "0xDE2C40", VA = "0xDE2C40", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600181E")]
				[Address(RVA = "0xDE2CAC", Offset = "0xDE2CAC", VA = "0xDE2CAC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0xDE2B7C", Offset = "0xDE2B7C", VA = "0xDE2B7C")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x600181A")]
			[Address(RVA = "0xDE2BBC", Offset = "0xDE2BBC", VA = "0xDE2BBC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0xDE2BC0", Offset = "0xDE2BC0", VA = "0xDE2BC0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600181D")]
			[Address(RVA = "0xDE2C48", Offset = "0xDE2C48", VA = "0xDE2C48", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600181F")]
			[Address(RVA = "0xDE2CB4", Offset = "0xDE2CB4", VA = "0xDE2CB4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001820")]
			[Address(RVA = "0xDE2D64", Offset = "0xDE2D64", VA = "0xDE2D64", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro descLabel;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VirtualButton buyOrSellButton;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualButton visitOrReturnButton;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HouseState.Status houseStatus;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HouseAsset houseAsset;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HouseState houseState;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isHere;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isHouseOwned;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool enoughMoneyToBuyHouse;

		[Token(Token = "0x17000102")]
		private bool IsHouseOwnedSometime
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xDE214C", Offset = "0xDE214C", VA = "0xDE214C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000103")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xDE2160", Offset = "0xDE2160", VA = "0xDE2160", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xDE2180", Offset = "0xDE2180", VA = "0xDE2180", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public override bool ShowBottomBar
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xDE219C", Offset = "0xDE219C", VA = "0xDE219C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public override bool IsGridPage
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xDE21A4", Offset = "0xDE21A4", VA = "0xDE21A4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		private static string SellText
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xDE21AC", Offset = "0xDE21AC", VA = "0xDE21AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private static string BuyText
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xDE21F8", Offset = "0xDE21F8", VA = "0xDE21F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private static string ReturnText
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xDE2244", Offset = "0xDE2244", VA = "0xDE2244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private static string VisitText
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xDE2290", Offset = "0xDE2290", VA = "0xDE2290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private static VirtualButtonCallbackParameters.ColorButtonDecoration DesaturatedDecoration
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xDE22DC", Offset = "0xDE22DC", VA = "0xDE22DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private static VirtualButtonCallbackParameters.ColorButtonDecoration DefaultColorDecoration
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xDE2380", Offset = "0xDE2380", VA = "0xDE2380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xDE2424", Offset = "0xDE2424", VA = "0xDE2424", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xDE2578", Offset = "0xDE2578", VA = "0xDE2578", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xDE265C", Offset = "0xDE265C", VA = "0xDE265C")]
		private void HQOnPlayerMoneyChangedEvent()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xDE26A4", Offset = "0xDE26A4", VA = "0xDE26A4")]
		private void CheckIsEnoughMoneyToBuyHouse()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xDDE0CC", Offset = "0xDDE0CC", VA = "0xDDE0CC")]
		public void LoadHouse(HouseAsset asset)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xDE257C", Offset = "0xDE257C", VA = "0xDE257C")]
		private void UpdateVisualElements()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xDE2840", Offset = "0xDE2840", VA = "0xDE2840")]
		private void UpdateVisitOrReturnButton()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xDE272C", Offset = "0xDE272C", VA = "0xDE272C")]
		private void UpdateBuyOrSellButton()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xDE28CC", Offset = "0xDE28CC", VA = "0xDE28CC", Slot = "13")]
		public override void OnHide()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xDE28D0", Offset = "0xDE28D0", VA = "0xDE28D0")]
		private void HandleBuyOrSell()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xDE29E4", Offset = "0xDE29E4", VA = "0xDE29E4")]
		private void HandleVisit()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xDE2AF8", Offset = "0xDE2AF8", VA = "0xDE2AF8", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FD78", Offset = "0xA3FD78")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xDE2BB4", Offset = "0xDE2BB4", VA = "0xDE2BB4")]
		public SingleHouseScreen()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class SingleJobScreen : TabletScreen
	{
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34D9C", Offset = "0xA34D9C")]
		private sealed class <GetVirtualButtons>d__42 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SingleJobScreen <>4__this;

			[Token(Token = "0x170002AF")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001824")]
				[Address(RVA = "0xDE3F0C", Offset = "0xDE3F0C", VA = "0xDE3F0C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001826")]
				[Address(RVA = "0xDE3F78", Offset = "0xDE3F78", VA = "0xDE3F78", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0xDE3E48", Offset = "0xDE3E48", VA = "0xDE3E48")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001822")]
			[Address(RVA = "0xDE3E88", Offset = "0xDE3E88", VA = "0xDE3E88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001823")]
			[Address(RVA = "0xDE3E8C", Offset = "0xDE3E8C", VA = "0xDE3E8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001825")]
			[Address(RVA = "0xDE3F14", Offset = "0xDE3F14", VA = "0xDE3F14", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001827")]
			[Address(RVA = "0xDE3F80", Offset = "0xDE3F80", VA = "0xDE3F80", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0xDE4030", Offset = "0xDE4030", VA = "0xDE4030", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VirtualButton startOrFinishButton;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VirtualButton resetProgressButton;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro jobDescription;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro rewardAmountText;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshPro rewardText;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private JobSlider progressSlider;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private JobAsset job;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkillSystem skillSystem;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int jobProgress;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isOnJob;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool jobCanBeAccepted;

		[Token(Token = "0x1700010D")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0xDE2D68", Offset = "0xDE2D68", VA = "0xDE2D68", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xDE2E48", Offset = "0xDE2E48", VA = "0xDE2E48", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public override bool ShowBottomBar
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xDE2E64", Offset = "0xDE2E64", VA = "0xDE2E64", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		private bool IsJobFullyComplete
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xDE2E6C", Offset = "0xDE2E6C", VA = "0xDE2E6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		private bool JobAwaitsRewardReception
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xDE2FA0", Offset = "0xDE2FA0", VA = "0xDE2FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xDE30D4", Offset = "0xDE30D4", VA = "0xDE30D4", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xDD4B90", Offset = "0xDD4B90", VA = "0xDD4B90")]
		public void AssignSceneSystems(SceneSystems systems)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xDD4B10", Offset = "0xDD4B10", VA = "0xDD4B10")]
		public void AssignSubsystems(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xDE31A8", Offset = "0xDE31A8", VA = "0xDE31A8")]
		public void SetCurrentJob(JobAsset jobAsset)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xDE31B0", Offset = "0xDE31B0", VA = "0xDE31B0", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xDE32BC", Offset = "0xDE32BC", VA = "0xDE32BC")]
		private void UpdateContent()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xDE32D0", Offset = "0xDE32D0", VA = "0xDE32D0")]
		private void UpdateOutJobContent()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xDE32CC", Offset = "0xDE32CC", VA = "0xDE32CC")]
		private void UpdateInJobContent()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xDE3574", Offset = "0xDE3574", VA = "0xDE3574")]
		private void UpdateProgressContent()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xDE3244", Offset = "0xDE3244", VA = "0xDE3244")]
		private void UpdateReward()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xDE3494", Offset = "0xDE3494", VA = "0xDE3494")]
		private void ShowEstimateReward()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xDE3694", Offset = "0xDE3694", VA = "0xDE3694")]
		private void ShowReward()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xDE3780", Offset = "0xDE3780", VA = "0xDE3780")]
		private void HandleStartOrFinish()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xDE3C30", Offset = "0xDE3C30", VA = "0xDE3C30")]
		private void HandleResetProgress()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xDE39A0", Offset = "0xDE39A0", VA = "0xDE39A0")]
		private void HandleFinish()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xDE3BB8", Offset = "0xDE3BB8", VA = "0xDE3BB8")]
		private void ReattemptJob()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xDE38B8", Offset = "0xDE38B8", VA = "0xDE38B8")]
		private void UnsubscribeFromUpdateReward()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xDE3AD4", Offset = "0xDE3AD4", VA = "0xDE3AD4")]
		private void SaveAndReturnToOffice()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xDE3B4C", Offset = "0xDE3B4C", VA = "0xDE3B4C")]
		private void GotoJob()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xDE3D24", Offset = "0xDE3D24", VA = "0xDE3D24")]
		private void FinishJob(int progress)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xDE3DC4", Offset = "0xDE3DC4", VA = "0xDE3DC4", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FDDC", Offset = "0xA3FDDC")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xDE3E80", Offset = "0xDE3E80", VA = "0xDE3E80")]
		public SingleJobScreen()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class SingleTutorialScreen : TabletScreen
	{
		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DAC", Offset = "0xA34DAC")]
		private sealed class <ShowTutorialCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SingleTutorialScreen <>4__this;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Sprite[] <>7__wrap1;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182C")]
				[Address(RVA = "0xDE4628", Offset = "0xDE4628", VA = "0xDE4628", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600182E")]
				[Address(RVA = "0xDE4694", Offset = "0xDE4694", VA = "0xDE4694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001829")]
			[Address(RVA = "0xDE4240", Offset = "0xDE4240", VA = "0xDE4240")]
			[DebuggerHidden]
			public <ShowTutorialCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0xDE4518", Offset = "0xDE4518", VA = "0xDE4518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600182B")]
			[Address(RVA = "0xDE451C", Offset = "0xDE451C", VA = "0xDE451C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182D")]
			[Address(RVA = "0xDE4630", Offset = "0xDE4630", VA = "0xDE4630", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DBC", Offset = "0xA34DBC")]
		private sealed class <GetVirtualButtons>d__14 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SingleTutorialScreen <>4__this;

			[Token(Token = "0x170002B3")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001832")]
				[Address(RVA = "0xDE43F0", Offset = "0xDE43F0", VA = "0xDE43F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001834")]
				[Address(RVA = "0xDE445C", Offset = "0xDE445C", VA = "0xDE445C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0xDE42F0", Offset = "0xDE42F0", VA = "0xDE42F0")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0xDE4394", Offset = "0xDE4394", VA = "0xDE4394", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0xDE4398", Offset = "0xDE4398", VA = "0xDE4398", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0xDE43F8", Offset = "0xDE43F8", VA = "0xDE43F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0xDE4464", Offset = "0xDE4464", VA = "0xDE4464", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0xDE4514", Offset = "0xDE4514", VA = "0xDE4514", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VirtualButton replayButton;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine showTutorialCoroutine;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TutorialData tutorialData;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly WaitForSeconds waitForSecond;

		[Token(Token = "0x17000112")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xDE4034", Offset = "0xDE4034", VA = "0xDE4034", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xDE404C", Offset = "0xDE404C", VA = "0xDE404C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xDE406C", Offset = "0xDE406C", VA = "0xDE406C")]
		public void LoadTutorial(TutorialData data)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xDE4080", Offset = "0xDE4080", VA = "0xDE4080", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xDE4210", Offset = "0xDE4210", VA = "0xDE4210")]
		private void RestartShowCoroutine()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xDE4144", Offset = "0xDE4144", VA = "0xDE4144")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FE40", Offset = "0xA3FE40")]
		private IEnumerator ShowTutorialCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xDE41B8", Offset = "0xDE41B8", VA = "0xDE41B8")]
		private void RestartCoroutine(ref Coroutine coroutine, IEnumerator routine)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xDE426C", Offset = "0xDE426C", VA = "0xDE426C", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FEA4", Offset = "0xA3FEA4")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xDE4328", Offset = "0xDE4328", VA = "0xDE4328")]
		public SingleTutorialScreen()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class SkillTreeScreen : TabletScreen
	{
		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DCC", Offset = "0xA34DCC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkillTreeButton skillTreeButton;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkillTreeScreen <>4__this;

			[Token(Token = "0x6001837")]
			[Address(RVA = "0xDE4B84", Offset = "0xDE4B84", VA = "0xDE4B84")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0xDE5040", Offset = "0xDE5040", VA = "0xDE5040")]
			internal void <OnInitialize>b__0()
			{
			}
		}

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DDC", Offset = "0xA34DDC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkillType type;

			[Token(Token = "0x6001839")]
			[Address(RVA = "0xDE4F74", Offset = "0xDE4F74", VA = "0xDE4F74")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0xDE5064", Offset = "0xDE5064", VA = "0xDE5064")]
			internal bool <HandleSkillStateChanged>b__0(SkillTreeButton x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DEC", Offset = "0xA34DEC")]
		private sealed class <GetVirtualButtons>d__29 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SkillTreeScreen <>4__this;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SkillTreeButton[] <>7__wrap1;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x170002B5")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x600183E")]
				[Address(RVA = "0xDE516C", Offset = "0xDE516C", VA = "0xDE516C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001840")]
				[Address(RVA = "0xDE51D8", Offset = "0xDE51D8", VA = "0xDE51D8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600183B")]
			[Address(RVA = "0xDE5000", Offset = "0xDE5000", VA = "0xDE5000")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0xDE508C", Offset = "0xDE508C", VA = "0xDE508C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183D")]
			[Address(RVA = "0xDE5090", Offset = "0xDE5090", VA = "0xDE5090", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183F")]
			[Address(RVA = "0xDE5174", Offset = "0xDE5174", VA = "0xDE5174", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001841")]
			[Address(RVA = "0xDE51E0", Offset = "0xDE51E0", VA = "0xDE51E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0xDE5290", Offset = "0xDE5290", VA = "0xDE5290", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VirtualButton obtainButton;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject obtainButtonLabel;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject obtainButtonCircle;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject skillPointsPlate;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkillTreeButton[] buttons;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro skillPoints;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro skillPointsAvailable;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshPro skillDescription;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro obtainButtonText;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform buttonSelectFrame;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color unlockedColor;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color lockedColor;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color acquiredColor;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SkillTreeButton currentSkillButton;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool obtainableSkillSelected;

		[Token(Token = "0x17000114")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xDE46BC", Offset = "0xDE46BC", VA = "0xDE46BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xDE46DC", Offset = "0xDE46DC", VA = "0xDE46DC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xDE4728", Offset = "0xDE4728", VA = "0xDE4728", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xDE48D0", Offset = "0xDE48D0", VA = "0xDE48D0", Slot = "11")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xDE4B8C", Offset = "0xDE4B8C", VA = "0xDE4B8C")]
		private void ObtainSelectedSkillPoint()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xDE4D8C", Offset = "0xDE4D8C", VA = "0xDE4D8C")]
		public void AssignSkillSystem(SkillSystem skillSystem)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xDE4D94", Offset = "0xDE4D94", VA = "0xDE4D94")]
		private void SelectSkill(SkillTreeButton skillTreeButton)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xDE4C18", Offset = "0xDE4C18", VA = "0xDE4C18")]
		private void DisplayAndSetCallbackToObtainedButton(SkillTreeButton skillTreeButton)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xDE4E4C", Offset = "0xDE4E4C", VA = "0xDE4E4C")]
		private void DisplayDescription(SkillTreeButton skillTreeButton)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xDE4E8C", Offset = "0xDE4E8C", VA = "0xDE4E8C")]
		private void HandleSkillStateChanged(SkillType type, SkillState state)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xDE4888", Offset = "0xDE4888", VA = "0xDE4888")]
		private void HandleSkillPointsChanged(int amount)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xDE4F7C", Offset = "0xDE4F7C", VA = "0xDE4F7C", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FF08", Offset = "0xA3FF08")]
		public override IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xDE5038", Offset = "0xDE5038", VA = "0xDE5038")]
		public SkillTreeScreen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public struct SkillTreeButton
	{
		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VirtualButton button;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SkillButton skillButton;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xAEEC64", Offset = "0xAEEC64", VA = "0xAEEC64")]
		public void RemoveCallBack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public struct TutorialData
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TutorialSubSystem.TutorialType type;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Sprite tabletIcon;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool showInTablet;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool appraiser;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DelayBetweenImages;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ShowLastSpriteForAdditionalSeconds;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlayNoMatterIfPlayerIsLookingOrNot;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool ShouldDisplayOnceThroughoutTheGame;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite[] tutorialSpriteElements;

		[Token(Token = "0x17000116")]
		public TutorialSubSystem.TutorialType Type
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xAEECC8", Offset = "0xAEECC8", VA = "0xAEECC8")]
			get
			{
				return default(TutorialSubSystem.TutorialType);
			}
		}

		[Token(Token = "0x17000117")]
		public Sprite Sprite
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xAEECD0", Offset = "0xAEECD0", VA = "0xAEECD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public string LocName
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xAEECD8", Offset = "0xAEECD8", VA = "0xAEECD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public string LocalizedName
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xAEECE0", Offset = "0xAEECE0", VA = "0xAEECE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private string AppraiserLocName
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xAEECE8", Offset = "0xAEECE8", VA = "0xAEECE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public Sprite[] TutorialSpriteElements
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xAEECEC", Offset = "0xAEECEC", VA = "0xAEECEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public bool ShowInTablet
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xAEECF4", Offset = "0xAEECF4", VA = "0xAEECF4")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33CE8", Offset = "0xA33CE8")]
	internal class TutorialsData : ScriptableObject
	{
		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite noiseSprite;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialData[] tutorials;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite itemImagePlaceholder;

		[Token(Token = "0x1700011D")]
		public TutorialData[] Tutorials
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xDE53B8", Offset = "0xDE53B8", VA = "0xDE53B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public Sprite NoiseSprite
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xDE53C0", Offset = "0xDE53C0", VA = "0xDE53C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public Sprite ItemImagePlaceholder
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xDE53C8", Offset = "0xDE53C8", VA = "0xDE53C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xDE53D0", Offset = "0xDE53D0", VA = "0xDE53D0")]
		public TutorialData GetDataByType(TutorialSubSystem.TutorialType type)
		{
			return default(TutorialData);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xDE5544", Offset = "0xDE5544", VA = "0xDE5544")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3FF6C", Offset = "0xA3FF6C")]
		private void ResetAndFillTutorialsArray()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xDE561C", Offset = "0xDE561C", VA = "0xDE561C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA3FFA4", Offset = "0xA3FFA4")]
		private void PrintTabletIconsNames()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xDE58AC", Offset = "0xDE58AC", VA = "0xDE58AC")]
		public TutorialsData()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class TutorialsScreen : TabletScreen
	{
		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34DFC", Offset = "0xA34DFC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialData tutorial;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TutorialsScreen <>4__this;

			[Token(Token = "0x6001843")]
			[Address(RVA = "0xDE5AE8", Offset = "0xDE5AE8", VA = "0xDE5AE8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0xDE5B68", Offset = "0xDE5B68", VA = "0xDE5B68")]
			internal void <GetParameters>b__0()
			{
			}
		}

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TutorialsData tutorialsData;

		[Token(Token = "0x17000120")]
		public override TabletScreen BackScreen
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xDE58B4", Offset = "0xDE58B4", VA = "0xDE58B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public override string ScreenTitle
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xDE58D4", Offset = "0xDE58D4", VA = "0xDE58D4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xDE5920", Offset = "0xDE5920", VA = "0xDE5920", Slot = "12")]
		public override void OnShow()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xDE5954", Offset = "0xDE5954", VA = "0xDE5954")]
		private List<VirtualButtonCallbackParameters> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xDE5AF0", Offset = "0xDE5AF0", VA = "0xDE5AF0")]
		private void ShowTutorial(TutorialData data)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xDE5B60", Offset = "0xDE5B60", VA = "0xDE5B60")]
		public TutorialsScreen()
		{
		}
	}
}
namespace _Code.UI
{
	[Token(Token = "0x2000168")]
	public class JobSlider : MonoBehaviour
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject sliderGameObject;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject acceptBorder;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer fillRenderer;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock lengthBlock;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lengthID;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xCFDFD4", Offset = "0xCFDFD4", VA = "0xCFDFD4")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xCFE060", Offset = "0xCFE060", VA = "0xCFE060")]
		public void SetPercent(float percent)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xCFE17C", Offset = "0xCFE17C", VA = "0xCFE17C")]
		public JobSlider()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class QuestDataUI : MonoBehaviour, IRequirePlayerSubsystems
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform myTransform;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool constantVisibility;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38BE8", Offset = "0xA38BE8")]
		private int <TASK_FINISHED_PROGRESS_CAP>k__BackingField;

		[Token(Token = "0x400081F")]
		private const float LINE_STEP = 0.06f;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform questInfoVerticalGroup;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QuestInfoLineCache infoLineCache;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FontComponent[] initialLineFontComponents;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<QuestInfoLine> lineInstances;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hardHidden;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UserInterfaceController userInterfaceController;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialised;

		[Token(Token = "0x17000122")]
		public int TASK_FINISHED_PROGRESS_CAP
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xD04754", Offset = "0xD04754", VA = "0xD04754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FFDC", Offset = "0xA3FFDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xD0475C", Offset = "0xD0475C", VA = "0xD0475C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FFEC", Offset = "0xA3FFEC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xCEF654", Offset = "0xCEF654", VA = "0xCEF654")]
		public void DisplayData(QuestsData data, bool orderedInfo = true)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xD04764", Offset = "0xD04764", VA = "0xD04764")]
		private void EnsureInitialised()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xD0498C", Offset = "0xD0498C", VA = "0xD0498C")]
		public void DisplayJobIsDone()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xD047B4", Offset = "0xD047B4", VA = "0xD047B4")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xCFCCAC", Offset = "0xCFCCAC", VA = "0xCFCCAC")]
		public void HideHard()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xCFCD80", Offset = "0xCFCD80", VA = "0xCFCD80")]
		public void DisplayHard()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xD04828", Offset = "0xD04828", VA = "0xD04828")]
		private void ShowInfoLine(DisplayQuestInfoLineArgs args)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xD04DB4", Offset = "0xD04DB4", VA = "0xD04DB4")]
		public void ToggleConstantVisibility()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xCEF584", Offset = "0xCEF584", VA = "0xCEF584")]
		public void SetVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xD04DCC", Offset = "0xD04DCC", VA = "0xD04DCC", Slot = "4")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xD04DEC", Offset = "0xD04DEC", VA = "0xD04DEC")]
		public QuestDataUI()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class QuestInfoLine : MonoBehaviour
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FontComponent fontComponent;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer[] spriteRenderers;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer paintColorRenderer;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform percentageBar;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject progressPanel;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject itemDisplayPanel;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject questFinishOverlay;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro info;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro progress;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform myTransform;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject tickGameObject;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform itemPanelParent;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform itemLeftSidePanel;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform itemRightSidePanel;

		[Token(Token = "0x17000123")]
		public FontComponent FontComponent
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xD04E64", Offset = "0xD04E64", VA = "0xD04E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xD04A40", Offset = "0xD04A40", VA = "0xD04A40")]
		public void DisplayInfo(DisplayQuestInfoLineArgs args)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xD04E6C", Offset = "0xD04E6C", VA = "0xD04E6C")]
		private void SetProgressPanelEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xD051F0", Offset = "0xD051F0", VA = "0xD051F0")]
		private void SetQuestFinishedOverlayEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xD04E8C", Offset = "0xD04E8C", VA = "0xD04E8C")]
		private void SetItemDisplayPanelEnabled(DisplayQuestInfoLineArgs args)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xD05120", Offset = "0xD05120", VA = "0xD05120")]
		private void TryToMarkAsFinished(DisplayQuestInfoLineArgs args)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xD05068", Offset = "0xD05068", VA = "0xD05068")]
		private void DisplayProgress(DisplayQuestInfoLineArgs args)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xD05210", Offset = "0xD05210", VA = "0xD05210")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD052F4", Offset = "0xD052F4", VA = "0xD052F4")]
		public QuestInfoLine()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public struct DisplayQuestInfoLineArgs
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string infoText;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int progress;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string progressText;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool taskFinished;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool containingSprites;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerable<Sprite> sprites;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool wallModQuest;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool paintRequired;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool progressPanelDisabled;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite paintCanItemImage;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rightMargin;
	}
	[Token(Token = "0x200016C")]
	public class ToolUI : MonoBehaviour
	{
		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform uiParent;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject colorUIParent;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image colorDisplay;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text colorNameText;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xD052FC", Offset = "0xD052FC", VA = "0xD052FC")]
		public void ShowColorUI(Transform hand)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD05410", Offset = "0xD05410", VA = "0xD05410")]
		public void HideColorUI()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD05430", Offset = "0xD05430", VA = "0xD05430")]
		public void SetCurrentColor(Color color, PaintingConfiguration.PaletteColor colorKey)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD05330", Offset = "0xD05330", VA = "0xD05330")]
		private void RelocateInto(Transform hand)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xD0554C", Offset = "0xD0554C", VA = "0xD0554C")]
		public ToolUI()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class WallColorMarker : MonoBehaviour
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject hammerIcon;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject spatulaIcon;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject paintIcon;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer renderer;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int colorPropertyName;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material material;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xD05554", Offset = "0xD05554", VA = "0xD05554")]
		public void Setup(Vertex vertex, WallModificationQuest.WallModQuestType taskType, WallModificationQuest.WallSurface targetSurface, Color color)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xD05788", Offset = "0xD05788", VA = "0xD05788")]
		private void ApplyEulerAnglesBasedOn(Vector3 normal)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xD0594C", Offset = "0xD0594C", VA = "0xD0594C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xD059FC", Offset = "0xD059FC", VA = "0xD059FC")]
		public WallColorMarker()
		{
		}
	}
}
namespace _Code.UI.MainMenu
{
	[Token(Token = "0x200016E")]
	public class ConfirmationPopup : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		public class Args
		{
			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string confirmButtonLabel;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string cancelButtonLabel;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action confirmAction;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action cancelAction;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C984", Offset = "0xA3C984")]
			private bool <hasCancelActions>k__BackingField;

			[Token(Token = "0x170002B7")]
			public bool hasCancelActions
			{
				[Token(Token = "0x6001845")]
				[Address(RVA = "0xCFEE5C", Offset = "0xCFEE5C", VA = "0xCFEE5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45E38", Offset = "0xA45E38")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001846")]
				[Address(RVA = "0xCFEE64", Offset = "0xCFEE64", VA = "0xCFEE64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45E48", Offset = "0xA45E48")]
				private set
				{
				}
			}

			[Token(Token = "0x6001847")]
			[Address(RVA = "0xCFEE70", Offset = "0xCFEE70", VA = "0xCFEE70")]
			public Args(string title, string confirmButtonLabel, string cancelButtonLabel, Action confirmAction)
			{
			}

			[Token(Token = "0x6001848")]
			[Address(RVA = "0xCFEEC0", Offset = "0xCFEEC0", VA = "0xCFEEC0")]
			public Args(string title, string confirmButtonLabel, string cancelButtonLabel, Action confirmAction, Action cancelAction)
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E0C", Offset = "0xA34E0C")]
		private sealed class <GetAllButtons>d__16 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ConfirmationPopup <>4__this;

			[Token(Token = "0x170002B8")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x600184C")]
				[Address(RVA = "0xCFED34", Offset = "0xCFED34", VA = "0xCFED34", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600184E")]
				[Address(RVA = "0xCFEDA0", Offset = "0xCFEDA0", VA = "0xCFEDA0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0xCFE9E4", Offset = "0xCFE9E4", VA = "0xCFE9E4")]
			[DebuggerHidden]
			public <GetAllButtons>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600184A")]
			[Address(RVA = "0xCFECB0", Offset = "0xCFECB0", VA = "0xCFECB0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600184B")]
			[Address(RVA = "0xCFECB4", Offset = "0xCFECB4", VA = "0xCFECB4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184D")]
			[Address(RVA = "0xCFED3C", Offset = "0xCFED3C", VA = "0xCFED3C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600184F")]
			[Address(RVA = "0xCFEDA8", Offset = "0xCFEDA8", VA = "0xCFEDA8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001850")]
			[Address(RVA = "0xCFEE58", Offset = "0xCFEE58", VA = "0xCFEE58", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro label;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected VirtualButton confirmButton;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected VirtualButton cancelButton;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action confirmButtonAction;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action cancelButtonAction;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UserInterfaceController userInterfaceController;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isActive;

		[Token(Token = "0x17000124")]
		public bool IsActive
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xCFE1E8", Offset = "0xCFE1E8", VA = "0xCFE1E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xCFE1F0", Offset = "0xCFE1F0", VA = "0xCFE1F0")]
		public void Initialise(UserInterfaceController uiController)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xCFE1F8", Offset = "0xCFE1F8", VA = "0xCFE1F8")]
		public void Show(Args args)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xCFE538", Offset = "0xCFE538", VA = "0xCFE538")]
		private void UpdateContent(Args args)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xCFE65C", Offset = "0xCFE65C", VA = "0xCFE65C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xCFE924", Offset = "0xCFE924", VA = "0xCFE924")]
		private void HandleConfirmButtonClick()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xCFE984", Offset = "0xCFE984", VA = "0xCFE984")]
		private void HandleCancelButtonClick()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xCFE4B4", Offset = "0xCFE4B4", VA = "0xCFE4B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FFFC", Offset = "0xA3FFFC")]
		public IEnumerable<VirtualButton> GetAllButtons()
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xCFEA1C", Offset = "0xCFEA1C", VA = "0xCFEA1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xCFECA8", Offset = "0xCFECA8", VA = "0xCFECA8")]
		public ConfirmationPopup()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class MainMenuOptionsScreen : MonoBehaviour
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E1C", Offset = "0xA34E1C")]
		private sealed class <GetAllButtons>d__86 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenuOptionsScreen <>4__this;

			[Token(Token = "0x170002BA")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001854")]
				[Address(RVA = "0xD02F88", Offset = "0xD02F88", VA = "0xD02F88", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001856")]
				[Address(RVA = "0xD02FF4", Offset = "0xD02FF4", VA = "0xD02FF4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001851")]
			[Address(RVA = "0xD02B2C", Offset = "0xD02B2C", VA = "0xD02B2C")]
			[DebuggerHidden]
			public <GetAllButtons>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0xD02B6C", Offset = "0xD02B6C", VA = "0xD02B6C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001853")]
			[Address(RVA = "0xD02B70", Offset = "0xD02B70", VA = "0xD02B70", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0xD02F90", Offset = "0xD02F90", VA = "0xD02F90", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0xD02FFC", Offset = "0xD02FFC", VA = "0xD02FFC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0xD030AC", Offset = "0xD030AC", VA = "0xD030AC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VirtualButton backButton;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OptionGroup roachesGroup;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OptionGroup heightGroup;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OptionGroup handGroup;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private OptionGroup vibrationsGroup;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OptionGroup vignetteGroup;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OptionGroup snapAngleGroup;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private OptionGroup languageGroup;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private OptionGroup playAreaModeGroup;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private OptionGroup seatedModeGroup;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OptionGroup elevationGroup;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38E88", Offset = "0xA38E88")]
		[SerializeField]
		private OptionGroup ambientGroup;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private OptionGroup soundGroup;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioMixer masterMixer;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LanguageDataBase languageDataBase;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int currentLanguage;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int currentPlayAreaMode;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int playAreaModesCount;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UserInterfaceController userInterfaceController;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MainMenuUI mainMenuUI;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool languageMenuIsActive;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool isActive;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 startVignettePosition;

		[Token(Token = "0x17000125")]
		public bool IsActive
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xCFEF1C", Offset = "0xCFEF1C", VA = "0xCFEF1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		private static string AmbientVolumeText
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xCFEF24", Offset = "0xCFEF24", VA = "0xCFEF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private static string SoundsVolumeText
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xCFEFDC", Offset = "0xCFEFDC", VA = "0xCFEFDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private static string VibrationsValueText
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xCFF094", Offset = "0xCFF094", VA = "0xCFF094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private static string VignetteValueText
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xCFF12C", Offset = "0xCFF12C", VA = "0xCFF12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private static string SeatedModeValueText
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xCFF1C4", Offset = "0xCFF1C4", VA = "0xCFF1C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private static string SnapAngleValueText
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xCFF25C", Offset = "0xCFF25C", VA = "0xCFF25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private static string HandValueText
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xCFF2D0", Offset = "0xCFF2D0", VA = "0xCFF2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private static string HeightValueText
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xCFF368", Offset = "0xCFF368", VA = "0xCFF368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private string CurrentLanguageNativeName
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xCFF414", Offset = "0xCFF414", VA = "0xCFF414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xCFF468", Offset = "0xCFF468", VA = "0xCFF468")]
		public void Initialise(MainMenuUI owner, UserInterfaceController uiController)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xD005C0", Offset = "0xD005C0", VA = "0xD005C0")]
		private void InitialiseRoachesGroup()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xD003B4", Offset = "0xD003B4", VA = "0xD003B4")]
		private void InitialisePlayAreaModeGroup()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xD0005C", Offset = "0xD0005C", VA = "0xD0005C")]
		private void InitialiseSeatedModeGroup()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD001D0", Offset = "0xD001D0", VA = "0xD001D0")]
		private void InitialiseElevationGroup()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xCFFD9C", Offset = "0xCFFD9C", VA = "0xCFFD9C")]
		private void InitialiseSnapAngleGroup()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xCFFED8", Offset = "0xCFFED8", VA = "0xCFFED8")]
		private void InitialiseLanguageGroup()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xD00870", Offset = "0xD00870", VA = "0xD00870")]
		public void SetVolumeFromSettings()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xCFFB24", Offset = "0xCFFB24", VA = "0xCFFB24")]
		private void InitialiseVibrationGroup()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xCFFC60", Offset = "0xCFFC60", VA = "0xCFFC60")]
		private void InitialiseVignetteGroup()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xCFF9E8", Offset = "0xCFF9E8", VA = "0xCFF9E8")]
		private void InitialiseHandGroup()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xCFF5A0", Offset = "0xCFF5A0", VA = "0xCFF5A0")]
		private void InitialiseHeight()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xCFF74C", Offset = "0xCFF74C", VA = "0xCFF74C")]
		private void InitialiseVolumeGroup()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xD00750", Offset = "0xD00750", VA = "0xD00750")]
		private void SetupVignetteAndSnapGroups()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xD00A18", Offset = "0xD00A18", VA = "0xD00A18")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xD00CC8", Offset = "0xD00CC8", VA = "0xD00CC8")]
		public void Show()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xD00A28", Offset = "0xD00A28", VA = "0xD00A28")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xD00FF0", Offset = "0xD00FF0", VA = "0xD00FF0")]
		private void BackToMainMenu()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xD0106C", Offset = "0xD0106C", VA = "0xD0106C")]
		private void ToggleVibrations()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xD01110", Offset = "0xD01110", VA = "0xD01110")]
		private void ToggleSeatedMode()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xD011B4", Offset = "0xD011B4", VA = "0xD011B4")]
		private void ToggleVignette()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xD01260", Offset = "0xD01260", VA = "0xD01260")]
		private void ToggleDominantHand()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xD0130C", Offset = "0xD0130C", VA = "0xD0130C")]
		private void DecreasePlayerHeight()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD013EC", Offset = "0xD013EC", VA = "0xD013EC")]
		private void IncreasePlayerHeight()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xD014CC", Offset = "0xD014CC", VA = "0xD014CC")]
		private void IncreaseAmbientVolume()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xD01640", Offset = "0xD01640", VA = "0xD01640")]
		private void DecreaseAmbientVolume()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xD017B8", Offset = "0xD017B8", VA = "0xD017B8")]
		private void IncreaseSoundsVolume()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xD01868", Offset = "0xD01868", VA = "0xD01868")]
		private void DecreaseSoundsVolume()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xD0157C", Offset = "0xD0157C", VA = "0xD0157C")]
		private void IncreaseVolume(ref float volume, string parameterName)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xD016F0", Offset = "0xD016F0", VA = "0xD016F0")]
		private void DecreaseVolume(ref float volume, string parameterName)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xD00924", Offset = "0xD00924", VA = "0xD00924")]
		private void UpdateMixerVolume(float uiVolumeValue, string parameterName)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xD01918", Offset = "0xD01918", VA = "0xD01918")]
		private float GetVolumeFromUIValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD01994", Offset = "0xD01994", VA = "0xD01994")]
		private void CycleForwardPlayAreaMode()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xD01AA4", Offset = "0xD01AA4", VA = "0xD01AA4")]
		private void ToggleRoaches()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD01B98", Offset = "0xD01B98", VA = "0xD01B98")]
		private void CycleBackwardPlayAreaMode()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD01CB4", Offset = "0xD01CB4", VA = "0xD01CB4")]
		private void CycleForwardElevation()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xD01E24", Offset = "0xD01E24", VA = "0xD01E24")]
		private void CycleBackwardElevation()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xD01F94", Offset = "0xD01F94", VA = "0xD01F94")]
		private void CycleForwardSnapAngle()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xD0215C", Offset = "0xD0215C", VA = "0xD0215C")]
		private void CycleBackwardSnapAngle()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xD02324", Offset = "0xD02324", VA = "0xD02324")]
		private void CycleForwardLanguages()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xD02A40", Offset = "0xD02A40", VA = "0xD02A40")]
		private void CycleBackwardLanguages()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xD0240C", Offset = "0xD0240C", VA = "0xD0240C")]
		public void TranslateLabels()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xD00F6C", Offset = "0xD00F6C", VA = "0xD00F6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40060", Offset = "0xA40060")]
		public IEnumerable<VirtualButton> GetAllButtons()
		{
			return null;
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xD02B64", Offset = "0xD02B64", VA = "0xD02B64")]
		public MainMenuOptionsScreen()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class MainMenuUI : MonoBehaviour
	{
		[Token(Token = "0x2000397")]
		private enum ActiveScreen
		{
			[Token(Token = "0x40013E4")]
			Main,
			[Token(Token = "0x40013E5")]
			Options,
			[Token(Token = "0x40013E6")]
			Popup
		}

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E2C", Offset = "0xA34E2C")]
		private sealed class <GetAllButtons>d__24 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenuUI <>4__this;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<VirtualButton> <>7__wrap1;

			[Token(Token = "0x170002BC")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0xD043F0", Offset = "0xD043F0", VA = "0xD043F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001861")]
				[Address(RVA = "0xD0445C", Offset = "0xD0445C", VA = "0xD0445C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0xD03A04", Offset = "0xD03A04", VA = "0xD03A04")]
			[DebuggerHidden]
			public <GetAllButtons>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0xD03B00", Offset = "0xD03B00", VA = "0xD03B00", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xD03D94", Offset = "0xD03D94", VA = "0xD03D94", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0xD03B54", Offset = "0xD03B54", VA = "0xD03B54")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0xD03C14", Offset = "0xD03C14", VA = "0xD03C14")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0xD03CD4", Offset = "0xD03CD4", VA = "0xD03CD4")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0xD043F8", Offset = "0xD043F8", VA = "0xD043F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0xD04464", Offset = "0xD04464", VA = "0xD04464", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD04514", Offset = "0xD04514", VA = "0xD04514", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E3C", Offset = "0xA34E3C")]
		private sealed class <GetMainScreenButtons>d__25 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenuUI <>4__this;

			[Token(Token = "0x170002BE")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001867")]
				[Address(RVA = "0xD045E8", Offset = "0xD045E8", VA = "0xD045E8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001869")]
				[Address(RVA = "0xD04654", Offset = "0xD04654", VA = "0xD04654", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0xD03AC0", Offset = "0xD03AC0", VA = "0xD03AC0")]
			[DebuggerHidden]
			public <GetMainScreenButtons>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001865")]
			[Address(RVA = "0xD04518", Offset = "0xD04518", VA = "0xD04518", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001866")]
			[Address(RVA = "0xD0451C", Offset = "0xD0451C", VA = "0xD0451C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001868")]
			[Address(RVA = "0xD045F0", Offset = "0xD045F0", VA = "0xD045F0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600186A")]
			[Address(RVA = "0xD0465C", Offset = "0xD0465C", VA = "0xD0465C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600186B")]
			[Address(RVA = "0xD0470C", Offset = "0xD0470C", VA = "0xD0470C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject buttonsGroup;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject gameTitle;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VirtualButton continueButton;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VirtualButton startGameButton;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VirtualButton optionsButton;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VirtualButton creditsButton;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VirtualButton quitGameButton;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MainMenuOptionsScreen optionsScreen;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ConfirmationPopup confirmationPopup;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UserInterfaceController uiController;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ActiveScreen activeScreen;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xD030B0", Offset = "0xD030B0", VA = "0xD030B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xD030C8", Offset = "0xD030C8", VA = "0xD030C8")]
		public void Initialise(MainMenuSceneSystem menuSystem, UserInterfaceController uiController)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xD032F8", Offset = "0xD032F8", VA = "0xD032F8")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xD03318", Offset = "0xD03318", VA = "0xD03318")]
		public void EnableContinueButton()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xD03338", Offset = "0xD03338", VA = "0xD03338")]
		public void DisableContinueButton()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xD0101C", Offset = "0xD0101C", VA = "0xD0101C")]
		public void ShowMainScreen()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xD035E4", Offset = "0xD035E4", VA = "0xD035E4")]
		private void ShowOptions()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xD0367C", Offset = "0xD0367C", VA = "0xD0367C")]
		public void ShowPopup(ConfirmationPopup.Args args)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD03644", Offset = "0xD03644", VA = "0xD03644")]
		public void HideMainScreen()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD03954", Offset = "0xD03954", VA = "0xD03954")]
		public void HidePopup()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD028F8", Offset = "0xD028F8", VA = "0xD028F8")]
		public void TranslateLabels()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xD03980", Offset = "0xD03980", VA = "0xD03980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA400C4", Offset = "0xA400C4")]
		public IEnumerable<VirtualButton> GetAllButtons()
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD03A3C", Offset = "0xD03A3C", VA = "0xD03A3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40128", Offset = "0xA40128")]
		private IEnumerable<VirtualButton> GetMainScreenButtons()
		{
			return null;
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xD03358", Offset = "0xD03358", VA = "0xD03358")]
		private void EnableMainScreenButtons()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xD036C8", Offset = "0xD036C8", VA = "0xD036C8")]
		private void DisableMainScreenButtons()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xD03AF8", Offset = "0xD03AF8", VA = "0xD03AF8")]
		public MainMenuUI()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class OptionGroup : MonoBehaviour
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 startPosition;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro label;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro valueLabel;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualButton increaseButton;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VirtualButton decreaseButton;

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xD04710", Offset = "0xD04710", VA = "0xD04710")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4018C", Offset = "0xA4018C")]
		private void Collect()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xD00960", Offset = "0xD00960", VA = "0xD00960")]
		public void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xD009CC", Offset = "0xD009CC", VA = "0xD009CC")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xD00994", Offset = "0xD00994", VA = "0xD00994")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xD0474C", Offset = "0xD0474C", VA = "0xD0474C")]
		public OptionGroup()
		{
		}
	}
}
namespace _Code.Trash
{
	[Token(Token = "0x2000172")]
	public class TrashPart : PhysicalObject
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCFB9E8", Offset = "0xCFB9E8", VA = "0xCFB9E8")]
		public void SetUnDisposed_Tutorial()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xCFBA9C", Offset = "0xCFBA9C", VA = "0xCFBA9C")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xCFBBB4", Offset = "0xCFBBB4", VA = "0xCFBBB4")]
		public TrashPart()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class TrashSet : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E4C", Offset = "0xA34E4C")]
		private sealed class <GetTrashPartsAtPosition>d__6 : IEnumerable<TrashPart>, IEnumerable, IEnumerator<TrashPart>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TrashPart <>2__current;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrashSet <>4__this;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 toolPosition;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 <>3__toolPosition;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x170002C0")]
			private TrashPart System.Collections.Generic.IEnumerator<_Code.Trash.TrashPart>.Current
			{
				[Token(Token = "0x600186F")]
				[Address(RVA = "0xCFC4F8", Offset = "0xCFC4F8", VA = "0xCFC4F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001871")]
				[Address(RVA = "0xCFC564", Offset = "0xCFC564", VA = "0xCFC564", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600186C")]
			[Address(RVA = "0xCFBE0C", Offset = "0xCFBE0C", VA = "0xCFBE0C")]
			[DebuggerHidden]
			public <GetTrashPartsAtPosition>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600186D")]
			[Address(RVA = "0xCFC350", Offset = "0xCFC350", VA = "0xCFC350", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600186E")]
			[Address(RVA = "0xCFC354", Offset = "0xCFC354", VA = "0xCFC354", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001870")]
			[Address(RVA = "0xCFC500", Offset = "0xCFC500", VA = "0xCFC500", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001872")]
			[Address(RVA = "0xCFC56C", Offset = "0xCFC56C", VA = "0xCFC56C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TrashPart> System.Collections.Generic.IEnumerable<_Code.Trash.TrashPart>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0xCFC62C", Offset = "0xCFC62C", VA = "0xCFC62C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E5C", Offset = "0xA34E5C")]
		private sealed class <>c
		{
			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrashPart, bool> <>9__9_0;

			[Token(Token = "0x6001875")]
			[Address(RVA = "0xCFC324", Offset = "0xCFC324", VA = "0xCFC324")]
			public <>c()
			{
			}

			[Token(Token = "0x6001876")]
			[Address(RVA = "0xCFC32C", Offset = "0xCFC32C", VA = "0xCFC32C")]
			internal bool <GetNumberOfNotDisposedTrash>b__9_0(TrashPart x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400087C")]
		private const int INCREASED_RANGE_MULTIPLIER = 3;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxDistanceToRemovePart;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool manualBounds;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds bounds;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<TrashPart> trashList;

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xCFBC1C", Offset = "0xCFBC1C", VA = "0xCFBC1C")]
		public TrashPart GetTrashPartAtPosition(Vector3 toolPosition)
		{
			return null;
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xCFBD64", Offset = "0xCFBD64", VA = "0xCFBD64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA401C4", Offset = "0xA401C4")]
		public IEnumerable<TrashPart> GetTrashPartsAtPosition(Vector3 toolPosition)
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xCFBE44", Offset = "0xCFBE44", VA = "0xCFBE44")]
		public void DestroyPart(TrashPart part)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xCFBFD4", Offset = "0xCFBFD4", VA = "0xCFBFD4")]
		public void CollectData()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xCFBFD8", Offset = "0xCFBFD8", VA = "0xCFBFD8")]
		public int GetNumberOfNotDisposedTrash()
		{
			return default(int);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xCFBED4", Offset = "0xCFBED4", VA = "0xCFBED4")]
		private void ReloadTrashPhysics()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xCFC0C8", Offset = "0xCFC0C8", VA = "0xCFC0C8")]
		private void CacheBounds()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xCFC244", Offset = "0xCFC244", VA = "0xCFC244")]
		private void CollectTrashInChildren()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xCFC2AC", Offset = "0xCFC2AC", VA = "0xCFC2AC")]
		public TrashSet()
		{
		}
	}
}
namespace _Code.VertexPainting
{
	[Token(Token = "0x2000174")]
	public class PaintCan : MonoBehaviour
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E6C", Offset = "0xA34E6C")]
		private sealed class <RestorePickingUpCor>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PaintCan <>4__this;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600187A")]
				[Address(RVA = "0x1E5F7DC", Offset = "0x1E5F7DC", VA = "0x1E5F7DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187C")]
				[Address(RVA = "0x1E5F848", Offset = "0x1E5F848", VA = "0x1E5F848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x1E5F43C", Offset = "0x1E5F43C", VA = "0x1E5F43C")]
			[DebuggerHidden]
			public <RestorePickingUpCor>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0x1E5F724", Offset = "0x1E5F724", VA = "0x1E5F724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0x1E5F728", Offset = "0x1E5F728", VA = "0x1E5F728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0x1E5F7E4", Offset = "0x1E5F7E4", VA = "0x1E5F7E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000881")]
		private const float PAINT_LOSS_RATE_SPEED = 0.025f;

		[Token(Token = "0x4000882")]
		private const float DAMPENED_PAINT_LOSS_RATE_SPEED = 0.0075f;

		[Token(Token = "0x4000883")]
		private const float MIN_FILL_AMOUNT = 0.468f;

		[Token(Token = "0x4000884")]
		private const float MAX_FILL_AMOUNT = 0.545f;

		[Token(Token = "0x4000885")]
		private const int PICKING_UP_DISABLED_DURATION = 2;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintingConfiguration.PaletteColor color;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PaintingConfiguration config;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer renderer;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Item item;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int canBaseColor;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WallsSceneSystem wallSys;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FxSceneSystem fxSys;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderingSceneSystem renderingSys;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ItemSceneSystem itemSys;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material paintMat;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PaintTool paintTool;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _paintAmount;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float MaxWobble;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float WobbleSpeed;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float RecoveryRate;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 prevPos;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 prevRot;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float wobbleAmountToAddX;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float wobbleAmountToAddZ;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool inPaintTool;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TutorialSubSystem tutorialSys;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SkillSystem skillSystem;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine restorePickingUpCor;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool explosionsUnlocked;

		[Token(Token = "0x1700012F")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x1E5E608", Offset = "0x1E5E608", VA = "0x1E5E608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public bool IsPickedUp
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x1E5E628", Offset = "0x1E5E628", VA = "0x1E5E628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public float PaintAmount
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x1E5E644", Offset = "0x1E5E644", VA = "0x1E5E644")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x1E5E64C", Offset = "0x1E5E64C", VA = "0x1E5E64C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1E5E714", Offset = "0x1E5E714", VA = "0x1E5E714")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1E5E8E4", Offset = "0x1E5E8E4", VA = "0x1E5E8E4")]
		public void SetPaintAmount(float amount)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1E5E9E0", Offset = "0x1E5E9E0", VA = "0x1E5E9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1E5ECCC", Offset = "0x1E5ECCC", VA = "0x1E5ECCC")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1E5F0DC", Offset = "0x1E5F0DC", VA = "0x1E5F0DC")]
		public void OnCanLoaded(PaintTool paintTool)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1E5EE94", Offset = "0x1E5EE94", VA = "0x1E5EE94")]
		private bool CanExplode()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1E5F1CC", Offset = "0x1E5F1CC", VA = "0x1E5F1CC")]
		private void OnInitialise(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config, bool onSceneLoad)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1E5F314", Offset = "0x1E5F314", VA = "0x1E5F314")]
		public void RemovePhysics()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1E5F338", Offset = "0x1E5F338", VA = "0x1E5F338")]
		public void MarkAsPhysicsNotReloadable()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1E5F358", Offset = "0x1E5F358", VA = "0x1E5F358")]
		public void MarkAsPhysicsReloadable()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1E5F37C", Offset = "0x1E5F37C", VA = "0x1E5F37C")]
		public Pickupable GetPickupable()
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1E5F384", Offset = "0x1E5F384", VA = "0x1E5F384")]
		public void UsePaint()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1E5F42C", Offset = "0x1E5F42C", VA = "0x1E5F42C")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1E5F158", Offset = "0x1E5F158", VA = "0x1E5F158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40228", Offset = "0xA40228")]
		private IEnumerator RestorePickingUpCor()
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1E5E924", Offset = "0x1E5E924", VA = "0x1E5E924")]
		private void VisualisePaintAmount(float amount)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1E5F468", Offset = "0x1E5F468", VA = "0x1E5F468")]
		private void OnPickedUp()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1E5F2EC", Offset = "0x1E5F2EC", VA = "0x1E5F2EC")]
		private void ReloadBoughtItemPhysics()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1E5E818", Offset = "0x1E5E818", VA = "0x1E5E818")]
		private void ColorPaint(Material mat)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1E5F514", Offset = "0x1E5F514", VA = "0x1E5F514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1E5F5D4", Offset = "0x1E5F5D4", VA = "0x1E5F5D4")]
		public void TransferColorToItem()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1E5F6AC", Offset = "0x1E5F6AC", VA = "0x1E5F6AC")]
		public PaintCan()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public static class MeshPlaneSplitter
	{
		[Serializable]
		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E7C", Offset = "0xA34E7C")]
		private sealed class <>c
		{
			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlaneGroup, bool> <>9__1_0;

			[Token(Token = "0x600187E")]
			[Address(RVA = "0x1E5E474", Offset = "0x1E5E474", VA = "0x1E5E474")]
			public <>c()
			{
			}

			[Token(Token = "0x600187F")]
			[Address(RVA = "0x1E5E47C", Offset = "0x1E5E47C", VA = "0x1E5E47C")]
			internal bool <SplitMeshIntoPlaneGroups>b__1_0(PlaneGroup x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E8C", Offset = "0xA34E8C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vertex vertex;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Vertex, bool> <>9__0;

			[Token(Token = "0x6001880")]
			[Address(RVA = "0x1E5E400", Offset = "0x1E5E400", VA = "0x1E5E400")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001881")]
			[Address(RVA = "0x1E5E5D0", Offset = "0x1E5E5D0", VA = "0x1E5E5D0")]
			internal bool <AddVertexToExistingRowIfExists>b__0(Vertex x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1E5D1FC", Offset = "0x1E5D1FC", VA = "0x1E5D1FC")]
		public static void Execute(MeshPlaneSplitterArgs args, out List<PlaneManagement> subWalls)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1E5D554", Offset = "0x1E5D554", VA = "0x1E5D554")]
		private static void SplitMeshIntoPlaneGroups(IReadOnlyList<Vertex> vertices, MeshPlaneSplitterArgs args, out List<PlaneGroup> planeGroups)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1E5D88C", Offset = "0x1E5D88C", VA = "0x1E5D88C")]
		private static void CreateVertexArrays(MeshPlaneSplitterArgs args, IReadOnlyList<PlaneGroup> planeGroups, out List<PlaneManagement> subWalls, int verticesLength)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1E5DC6C", Offset = "0x1E5DC6C", VA = "0x1E5DC6C")]
		private static IEnumerable<PlaneManagement> TryToSplitMore(MeshPlaneSplitterArgs args, PlaneGroup planeGroup, int verticesLength)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1E5DF7C", Offset = "0x1E5DF7C", VA = "0x1E5DF7C")]
		private static Vertex[][] GetVertexArrayFromVertices(IReadOnlyList<Vertex> vertices)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1E5E144", Offset = "0x1E5E144", VA = "0x1E5E144")]
		private static void ResizeAndAppend2DArray(Vertex vertex, ref Vertex[][] vertexArray)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1E5E248", Offset = "0x1E5E248", VA = "0x1E5E248")]
		private static bool AddVertexToExistingRowIfExists(int vertex2DArrayLength, Vertex vertex, ref Vertex[][] vertexArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1E5D340", Offset = "0x1E5D340", VA = "0x1E5D340")]
		public static void TranslateVerticesToWorldPosition(MeshPlaneSplitterArgs args, out List<Vertex> vertices)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class PlaneGroup
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vertex> vertices;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionValue;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 normal;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1E5DBBC", Offset = "0x1E5DBBC", VA = "0x1E5DBBC")]
		public PlaneGroup(List<Vertex> vertices, MeshPlaneSplitterArgs args)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1E5DB34", Offset = "0x1E5DB34", VA = "0x1E5DB34")]
		public bool TryToAppendGroupIfBelongsTo(Vertex vertex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1E5FCB0", Offset = "0x1E5FCB0", VA = "0x1E5FCB0")]
		private bool DoesBelongToTheGroup(Vertex vertex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1E5FF24", Offset = "0x1E5FF24", VA = "0x1E5FF24")]
		private bool CloseToPositionValue(float number)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1E5FA2C", Offset = "0x1E5FA2C", VA = "0x1E5FA2C")]
		private float CalculatePositionValue(IReadOnlyList<Vertex> vertices, MeshPlaneSplitterArgs args, out Vector3 vertexNormal)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000177")]
	public struct PlaneManagement
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly WallVerticesManagement management;

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xB29318", Offset = "0xB29318", VA = "0xB29318")]
		public PlaneManagement(VertexPaintingConfiguration config, Vertex[][] vertices, int verticesCount, float positionValue)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1E5FFB8", Offset = "0x1E5FFB8", VA = "0x1E5FFB8")]
		private static WallVerticesManagement GetVerticesManagementByWallOrientation(VertexPaintingConfiguration config, Vertex[][] vertices, int verticesCount, float positionValue)
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public struct MeshPlaneSplitterArgs
	{
		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform wallTransform;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VertexPaintingConfiguration wallConfiguration;
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33CF8", Offset = "0xA33CF8")]
	public class PaintingConfiguration : ScriptableObject
	{
		[Token(Token = "0x200039F")]
		public enum PaletteColor
		{
			[Token(Token = "0x4001401")]
			White,
			[Token(Token = "0x4001402")]
			AmaranthSatin,
			[Token(Token = "0x4001403")]
			RipePear,
			[Token(Token = "0x4001404")]
			GrapeMacaron,
			[Token(Token = "0x4001405")]
			GobiDesert,
			[Token(Token = "0x4001406")]
			BrightLavender,
			[Token(Token = "0x4001407")]
			MandarinOrange,
			[Token(Token = "0x4001408")]
			RoyalBlue,
			[Token(Token = "0x4001409")]
			OceanWave,
			[Token(Token = "0x400140A")]
			IceLatte,
			[Token(Token = "0x400140B")]
			MountainFog,
			[Token(Token = "0x400140C")]
			SilverGlacier,
			[Token(Token = "0x400140D")]
			AzureBliss,
			[Token(Token = "0x400140E")]
			PalePink,
			[Token(Token = "0x400140F")]
			Cocoa,
			[Token(Token = "0x4001410")]
			HeavyGreen,
			[Token(Token = "0x4001411")]
			Frost,
			[Token(Token = "0x4001412")]
			PurpleLily,
			[Token(Token = "0x4001413")]
			Cobalt,
			[Token(Token = "0x4001414")]
			CarrotCake,
			[Token(Token = "0x4001415")]
			MeyerLemon,
			[Token(Token = "0x4001416")]
			Marceline,
			[Token(Token = "0x4001417")]
			RaspberryAura,
			[Token(Token = "0x4001418")]
			CopperCoin,
			[Token(Token = "0x4001419")]
			Peppermint,
			[Token(Token = "0x400141A")]
			Gray,
			[Token(Token = "0x400141B")]
			Black,
			[Token(Token = "0x400141C")]
			LightOrange,
			[Token(Token = "0x400141D")]
			PaleRed,
			[Token(Token = "0x400141E")]
			Pink,
			[Token(Token = "0x400141F")]
			BrightYellow,
			[Token(Token = "0x4001420")]
			BrightGreen
		}

		[Serializable]
		[Token(Token = "0x20003A0")]
		public struct PaletteElement
		{
			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PaletteColor colorKey;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;
		}

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34E9C", Offset = "0xA34E9C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PaletteColor paletteColor;

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x1E5F850", Offset = "0x1E5F850", VA = "0x1E5F850")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x1E5F960", Offset = "0x1E5F960", VA = "0x1E5F960")]
			internal bool <GetPaletteColor>b__0(PaletteElement x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34EAC", Offset = "0xA34EAC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PaletteColor paletteColor;

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x1E5F930", Offset = "0x1E5F930", VA = "0x1E5F930")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x1E5F974", Offset = "0x1E5F974", VA = "0x1E5F974")]
			internal bool <GetPaletteColorName>b__0(PaletteElement x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39024", Offset = "0xA39024")]
		[SerializeField]
		private PaletteElement[] paletteElements;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1E5EEC0", Offset = "0x1E5EEC0", VA = "0x1E5EEC0")]
		public Color GetPaletteColor(PaletteColor paletteColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1E5F858", Offset = "0x1E5F858", VA = "0x1E5F858")]
		public string GetPaletteColorName(PaletteColor paletteColor)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1E5F938", Offset = "0x1E5F938", VA = "0x1E5F938")]
		public int GetPaletteSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1E5F958", Offset = "0x1E5F958", VA = "0x1E5F958")]
		public PaintingConfiguration()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33D34", Offset = "0xA33D34")]
	public class VertexPaintingConfiguration : ScriptableObject
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39070", Offset = "0xA39070")]
		[SerializeField]
		private AnimationCurve distanceToColorLerpWeight;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve fastDistanceToColorLerpWeight;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve alphaForRadius;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VertexPaintingParameters brushParameters;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA390EC", Offset = "0xA390EC")]
		[SerializeField]
		private Color defaultWallTint;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VertexPaintingParameters hammerParameters;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39148", Offset = "0xA39148")]
		[SerializeField]
		private Color spatulaWallTint;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VertexPaintingParameters spatulaParameters;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Dictionary<Vector3, Wall.WallOrientation> axisToDirection;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1E604B4", Offset = "0x1E604B4", VA = "0x1E604B4")]
		public int EvaluateBrushSize(Wall.ModificationType modType, float distance)
		{
			return default(int);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1E60530", Offset = "0x1E60530", VA = "0x1E60530")]
		public float EvaluateAlphaForRadius(float distanceFromMiddle)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1E6054C", Offset = "0x1E6054C", VA = "0x1E6054C")]
		public float EvaluateColorLerpWeight(float distance, bool speedSkillAcquired)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1E60134", Offset = "0x1E60134", VA = "0x1E60134")]
		public bool EvaluateWallAxis(Vector3 normal, out Wall.WallOrientation wallOrientation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1E60578", Offset = "0x1E60578", VA = "0x1E60578")]
		public Color GetTint(Wall.ModificationType modType)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1E605B8", Offset = "0x1E605B8", VA = "0x1E605B8")]
		public float GetMaxDistance(Wall.ModificationType modType)
		{
			return default(float);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1E60508", Offset = "0x1E60508", VA = "0x1E60508")]
		private VertexPaintingParameters GetParameters(Wall.ModificationType modType)
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1E605F4", Offset = "0x1E605F4", VA = "0x1E605F4")]
		public Wall.ModificationShape GetModificationShape(Wall.ModificationType modType)
		{
			return default(Wall.ModificationShape);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1E60630", Offset = "0x1E60630", VA = "0x1E60630")]
		public VertexPaintingConfiguration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class VertexPaintingParameters
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve distanceToModSize;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxInteractionRange;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Wall.ModificationShape modShape;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1E6073C", Offset = "0x1E6073C", VA = "0x1E6073C")]
		public VertexPaintingParameters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class WallVerticesManagement
	{
		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34EBC", Offset = "0xA34EBC")]
		private sealed class <GetNeighbours>d__9 : IEnumerable<Vertex>, IEnumerable, IEnumerator<Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vertex <>2__current;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WallVerticesManagement <>4__this;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 toolPosition;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 <>3__toolPosition;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private VerticesToPaintArgs verticesToPaintArgs;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public VerticesToPaintArgs <>3__verticesToPaintArgs;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <rowIndex>5__2;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <columnIndex>5__3;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <i>5__4;

			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private int <j>5__5;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private float <alpha>5__6;

			[Token(Token = "0x170002C4")]
			private Vertex System.Collections.Generic.IEnumerator<_Code.VertexPainting.Vertex>.Current
			{
				[Token(Token = "0x6001889")]
				[Address(RVA = "0x1E649B0", Offset = "0x1E649B0", VA = "0x1E649B0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600188B")]
				[Address(RVA = "0x1E64A1C", Offset = "0x1E64A1C", VA = "0x1E64A1C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0x1E63E2C", Offset = "0x1E63E2C", VA = "0x1E63E2C")]
			[DebuggerHidden]
			public <GetNeighbours>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0x1E6471C", Offset = "0x1E6471C", VA = "0x1E6471C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0x1E64720", Offset = "0x1E64720", VA = "0x1E64720", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x1E649B8", Offset = "0x1E649B8", VA = "0x1E649B8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600188C")]
			[Address(RVA = "0x1E64A24", Offset = "0x1E64A24", VA = "0x1E64A24", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vertex> System.Collections.Generic.IEnumerable<_Code.VertexPainting.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x1E64B18", Offset = "0x1E64B18", VA = "0x1E64B18", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34ECC", Offset = "0xA34ECC")]
		private sealed class <GetNeighboursInRectShape>d__10 : IEnumerable<Vertex>, IEnumerable, IEnumerator<Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vertex <>2__current;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WallVerticesManagement <>4__this;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 toolPosition;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 <>3__toolPosition;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private VerticesToPaintArgs verticesToPaintArgs;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public VerticesToPaintArgs <>3__verticesToPaintArgs;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <rowIndex>5__2;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <columnIndex>5__3;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <i>5__4;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private int <j>5__5;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private float <alpha>5__6;

			[Token(Token = "0x170002C6")]
			private Vertex System.Collections.Generic.IEnumerator<_Code.VertexPainting.Vertex>.Current
			{
				[Token(Token = "0x6001891")]
				[Address(RVA = "0x1E64DB0", Offset = "0x1E64DB0", VA = "0x1E64DB0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001893")]
				[Address(RVA = "0x1E64E1C", Offset = "0x1E64E1C", VA = "0x1E64E1C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0x1E63E64", Offset = "0x1E63E64", VA = "0x1E63E64")]
			[DebuggerHidden]
			public <GetNeighboursInRectShape>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x1E64B1C", Offset = "0x1E64B1C", VA = "0x1E64B1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x1E64B20", Offset = "0x1E64B20", VA = "0x1E64B20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x1E64DB8", Offset = "0x1E64DB8", VA = "0x1E64DB8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0x1E64E24", Offset = "0x1E64E24", VA = "0x1E64E24", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vertex> System.Collections.Generic.IEnumerable<_Code.VertexPainting.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x1E64F18", Offset = "0x1E64F18", VA = "0x1E64F18", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34EDC", Offset = "0xA34EDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex[], float> <>9__14_0;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex[], Vertex> <>9__20_0;

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x1E6469C", Offset = "0x1E6469C", VA = "0x1E6469C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0x1E646A4", Offset = "0x1E646A4", VA = "0x1E646A4")]
			internal float <GroupFromUpperLeft>b__14_0(Vertex[] x)
			{
				return default(float);
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x1E646E4", Offset = "0x1E646E4", VA = "0x1E646E4")]
			internal Vertex <CacheRanges>b__20_0(Vertex[] x)
			{
				return null;
			}
		}

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WallManagementCacheParameters parameters;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1E63928", Offset = "0x1E63928", VA = "0x1E63928")]
		public WallVerticesManagement(WallVerticesManagementArgs args)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1E63C60", Offset = "0x1E63C60", VA = "0x1E63C60")]
		public WallVerticesManagement(WallManagementCacheParameters copyFrom)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1E60B54", Offset = "0x1E60B54", VA = "0x1E60B54")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1E6399C", Offset = "0x1E6399C", VA = "0x1E6399C")]
		private void CacheVertexList()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1E63C98", Offset = "0x1E63C98", VA = "0x1E63C98", Slot = "4")]
		public virtual void FillTheGaps()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1E63C9C", Offset = "0x1E63C9C", VA = "0x1E63C9C")]
		public Vector3 GetTopLeftCorner()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1E63CF4", Offset = "0x1E63CF4", VA = "0x1E63CF4")]
		public Vector3 GetBottomRightCorner()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1E63DAC", Offset = "0x1E63DAC", VA = "0x1E63DAC")]
		public bool IsCorrectlyCalculated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1E636F0", Offset = "0x1E636F0", VA = "0x1E636F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4028C", Offset = "0xA4028C")]
		public IEnumerable<Vertex> GetNeighbours(VerticesToPaintArgs verticesToPaintArgs, Vector3 toolPosition)
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1E63630", Offset = "0x1E63630", VA = "0x1E63630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA402F0", Offset = "0xA402F0")]
		public IEnumerable<Vertex> GetNeighboursInRectShape(VerticesToPaintArgs verticesToPaintArgs, Vector3 toolPosition)
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1E63E9C", Offset = "0x1E63E9C", VA = "0x1E63E9C")]
		protected Vertex[] GetRowGapFilled(List<Vertex> row, float step, Vertex[] firstRow)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1E641C4", Offset = "0x1E641C4", VA = "0x1E641C4", Slot = "5")]
		protected virtual float GetDistanceBetweenVertices(Vertex first, Vertex second)
		{
			return default(float);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1E641CC", Offset = "0x1E641CC", VA = "0x1E641CC", Slot = "6")]
		protected virtual Vector3 GetNextGapVertexPositionBasedOn(Vertex previous, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1E6422C", Offset = "0x1E6422C", VA = "0x1E6422C", Slot = "7")]
		protected virtual void GroupFromUpperLeft()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1E6433C", Offset = "0x1E6433C", VA = "0x1E6433C")]
		private static bool IsTooFarFromClosestVertex(int x, int y, int neighbours)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1E64364", Offset = "0x1E64364", VA = "0x1E64364", Slot = "8")]
		protected virtual int GetRowIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1E6436C", Offset = "0x1E6436C", VA = "0x1E6436C")]
		private int GetColumnIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1E6442C", Offset = "0x1E6442C", VA = "0x1E6442C")]
		private bool GetClosestIndex(int x, int y, out Vertex closestVertex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1E64514", Offset = "0x1E64514", VA = "0x1E64514")]
		private bool GetNeighbourByCoordinates(int x, int y, float alpha, out Vertex neighbour)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1E63A9C", Offset = "0x1E63A9C", VA = "0x1E63A9C")]
		private void CacheRanges()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public struct Row
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Vertex> rowVertices;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB29390", Offset = "0xB29390", VA = "0xB29390")]
		public Row(IReadOnlyList<Vertex> vertices)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public struct WallVerticesManagementArgs
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vertex[][] vertices2dArray;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int verticesCount;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Wall.WallOrientation orientation;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionValue;
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public struct WallManagementCacheParameters
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vertex[][] Vertices2DArray;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int verticesCount;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Row> serializableVertexRowList;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rowLength;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex[] rowRange;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int columnLength;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vertex[] columnRange;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Wall.WallOrientation orientation;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int uniqueIndex;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float positionValue;
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class XAxisVerticesManagement : WallVerticesManagement
	{
		[Serializable]
		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34EEC", Offset = "0xA34EEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, float> <>9__3_0;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, float> <>9__4_0;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, float> <>9__4_1;

			[Token(Token = "0x600189B")]
			[Address(RVA = "0x1E656E0", Offset = "0x1E656E0", VA = "0x1E656E0")]
			public <>c()
			{
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x1E656E8", Offset = "0x1E656E8", VA = "0x1E656E8")]
			internal float <GroupFromUpperLeft>b__3_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x1E65704", Offset = "0x1E65704", VA = "0x1E65704")]
			internal float <FillTheGaps>b__4_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x1E65720", Offset = "0x1E65720", VA = "0x1E65720")]
			internal float <FillTheGaps>b__4_1(Vertex x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1E60A24", Offset = "0x1E60A24", VA = "0x1E60A24")]
		public XAxisVerticesManagement(WallManagementCacheParameters args)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1E6021C", Offset = "0x1E6021C", VA = "0x1E6021C")]
		public XAxisVerticesManagement(WallVerticesManagementArgs args)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1E64F1C", Offset = "0x1E64F1C", VA = "0x1E64F1C", Slot = "8")]
		protected override int GetRowIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1E64FDC", Offset = "0x1E64FDC", VA = "0x1E64FDC", Slot = "7")]
		protected override void GroupFromUpperLeft()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1E65178", Offset = "0x1E65178", VA = "0x1E65178", Slot = "4")]
		public override void FillTheGaps()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1E6559C", Offset = "0x1E6559C", VA = "0x1E6559C", Slot = "5")]
		protected override float GetDistanceBetweenVertices(Vertex first, Vertex second)
		{
			return default(float);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1E65630", Offset = "0x1E65630", VA = "0x1E65630", Slot = "6")]
		protected override Vector3 GetNextGapVertexPositionBasedOn(Vertex previous, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1E65498", Offset = "0x1E65498", VA = "0x1E65498")]
		private float GetStep()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class XNegativeVerticesManagement : WallVerticesManagement
	{
		[Serializable]
		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34EFC", Offset = "0xA34EFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, float> <>9__3_0;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, float> <>9__4_0;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, float> <>9__4_1;

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1E65F00", Offset = "0x1E65F00", VA = "0x1E65F00")]
			public <>c()
			{
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x1E65F08", Offset = "0x1E65F08", VA = "0x1E65F08")]
			internal float <GroupFromUpperLeft>b__3_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x1E65F24", Offset = "0x1E65F24", VA = "0x1E65F24")]
			internal float <FillTheGaps>b__4_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x1E65F40", Offset = "0x1E65F40", VA = "0x1E65F40")]
			internal float <FillTheGaps>b__4_1(Vertex x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1E6027C", Offset = "0x1E6027C", VA = "0x1E6027C")]
		public XNegativeVerticesManagement(WallVerticesManagementArgs args)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1E60A70", Offset = "0x1E60A70", VA = "0x1E60A70")]
		public XNegativeVerticesManagement(WallManagementCacheParameters copyFrom)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1E6573C", Offset = "0x1E6573C", VA = "0x1E6573C", Slot = "8")]
		protected override int GetRowIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1E657FC", Offset = "0x1E657FC", VA = "0x1E657FC", Slot = "7")]
		protected override void GroupFromUpperLeft()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1E65998", Offset = "0x1E65998", VA = "0x1E65998", Slot = "4")]
		public override void FillTheGaps()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1E65DBC", Offset = "0x1E65DBC", VA = "0x1E65DBC", Slot = "5")]
		protected override float GetDistanceBetweenVertices(Vertex first, Vertex second)
		{
			return default(float);
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1E65E50", Offset = "0x1E65E50", VA = "0x1E65E50", Slot = "6")]
		protected override Vector3 GetNextGapVertexPositionBasedOn(Vertex previous, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1E65CB8", Offset = "0x1E65CB8", VA = "0x1E65CB8")]
		private float GetStep()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class ZAxisVerticesManagement : WallVerticesManagement
	{
		[Serializable]
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F0C", Offset = "0xA34F0C")]
		private sealed class <>c
		{
			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, float> <>9__3_0;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, float> <>9__4_0;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, float> <>9__4_1;

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x1E66724", Offset = "0x1E66724", VA = "0x1E66724")]
			public <>c()
			{
			}

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x1E6672C", Offset = "0x1E6672C", VA = "0x1E6672C")]
			internal float <GroupFromUpperLeft>b__3_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x1E66748", Offset = "0x1E66748", VA = "0x1E66748")]
			internal float <FillTheGaps>b__4_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x1E66764", Offset = "0x1E66764", VA = "0x1E66764")]
			internal float <FillTheGaps>b__4_1(Vertex x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1E60ABC", Offset = "0x1E60ABC", VA = "0x1E60ABC")]
		public ZAxisVerticesManagement(WallManagementCacheParameters args)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1E6024C", Offset = "0x1E6024C", VA = "0x1E6024C")]
		public ZAxisVerticesManagement(WallVerticesManagementArgs args)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1E65F5C", Offset = "0x1E65F5C", VA = "0x1E65F5C", Slot = "8")]
		protected override int GetRowIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1E6601C", Offset = "0x1E6601C", VA = "0x1E6601C", Slot = "7")]
		protected override void GroupFromUpperLeft()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1E661B8", Offset = "0x1E661B8", VA = "0x1E661B8", Slot = "4")]
		public override void FillTheGaps()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1E665DC", Offset = "0x1E665DC", VA = "0x1E665DC", Slot = "5")]
		protected override float GetDistanceBetweenVertices(Vertex first, Vertex second)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1E66670", Offset = "0x1E66670", VA = "0x1E66670", Slot = "6")]
		protected override Vector3 GetNextGapVertexPositionBasedOn(Vertex previous, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1E664D8", Offset = "0x1E664D8", VA = "0x1E664D8")]
		private float GetStep()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class ZNegativeVerticesManagement : WallVerticesManagement
	{
		[Serializable]
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F1C", Offset = "0xA34F1C")]
		private sealed class <>c
		{
			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, float> <>9__3_0;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, float> <>9__4_0;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, float> <>9__4_1;

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x1E66F48", Offset = "0x1E66F48", VA = "0x1E66F48")]
			public <>c()
			{
			}

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x1E66F50", Offset = "0x1E66F50", VA = "0x1E66F50")]
			internal float <GroupFromUpperLeft>b__3_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x1E66F6C", Offset = "0x1E66F6C", VA = "0x1E66F6C")]
			internal float <FillTheGaps>b__4_0(Vertex x)
			{
				return default(float);
			}

			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x1E66F88", Offset = "0x1E66F88", VA = "0x1E66F88")]
			internal float <FillTheGaps>b__4_1(Vertex x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1E602AC", Offset = "0x1E602AC", VA = "0x1E602AC")]
		public ZNegativeVerticesManagement(WallVerticesManagementArgs args)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1E60B08", Offset = "0x1E60B08", VA = "0x1E60B08")]
		public ZNegativeVerticesManagement(WallManagementCacheParameters copyFrom)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1E66780", Offset = "0x1E66780", VA = "0x1E66780", Slot = "8")]
		protected override int GetRowIndex(Vector3 toolPosition)
		{
			return default(int);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1E66840", Offset = "0x1E66840", VA = "0x1E66840", Slot = "7")]
		protected override void GroupFromUpperLeft()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1E669DC", Offset = "0x1E669DC", VA = "0x1E669DC", Slot = "4")]
		public override void FillTheGaps()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1E66E00", Offset = "0x1E66E00", VA = "0x1E66E00", Slot = "5")]
		protected override float GetDistanceBetweenVertices(Vertex first, Vertex second)
		{
			return default(float);
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1E66E94", Offset = "0x1E66E94", VA = "0x1E66E94", Slot = "6")]
		protected override Vector3 GetNextGapVertexPositionBasedOn(Vertex previous, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1E66CFC", Offset = "0x1E66CFC", VA = "0x1E66CFC")]
		private float GetStep()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000184")]
	public class Wall : MonoBehaviour
	{
		[Token(Token = "0x20003AA")]
		public enum WallOrientation
		{
			[Token(Token = "0x4001454")]
			X,
			[Token(Token = "0x4001455")]
			XNegative,
			[Token(Token = "0x4001456")]
			Z,
			[Token(Token = "0x4001457")]
			ZNegative
		}

		[Token(Token = "0x20003AB")]
		public enum ModificationShape
		{
			[Token(Token = "0x4001459")]
			Square,
			[Token(Token = "0x400145A")]
			Circle,
			[Token(Token = "0x400145B")]
			Rectangle
		}

		[Token(Token = "0x20003AC")]
		public enum ModificationType
		{
			[Token(Token = "0x400145D")]
			Brush,
			[Token(Token = "0x400145E")]
			Spatula,
			[Token(Token = "0x400145F")]
			Hammer
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F2C", Offset = "0xA34F2C")]
		private sealed class <GetVerticesToPaint>d__19 : IEnumerable<Vertex>, IEnumerable, IEnumerator<Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vertex <>2__current;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private VerticesToPaintArgs verticesToPaintArgs;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public VerticesToPaintArgs <>3__verticesToPaintArgs;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 toolPosition;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 <>3__toolPosition;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private IEnumerator<Vertex> <>7__wrap1;

			[Token(Token = "0x170002C8")]
			private Vertex System.Collections.Generic.IEnumerator<_Code.VertexPainting.Vertex>.Current
			{
				[Token(Token = "0x60018B3")]
				[Address(RVA = "0x1E637B0", Offset = "0x1E637B0", VA = "0x1E637B0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B5")]
				[Address(RVA = "0x1E6381C", Offset = "0x1E6381C", VA = "0x1E6381C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x1E6150C", Offset = "0x1E6150C", VA = "0x1E6150C")]
			[DebuggerHidden]
			public <GetVerticesToPaint>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x1E62FF0", Offset = "0x1E62FF0", VA = "0x1E62FF0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x1E631A0", Offset = "0x1E631A0", VA = "0x1E631A0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x1E63020", Offset = "0x1E63020", VA = "0x1E63020")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x1E630E0", Offset = "0x1E630E0", VA = "0x1E630E0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60018B4")]
			[Address(RVA = "0x1E637B8", Offset = "0x1E637B8", VA = "0x1E637B8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x1E63824", Offset = "0x1E63824", VA = "0x1E63824", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vertex> System.Collections.Generic.IEnumerable<_Code.VertexPainting.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x1E6391C", Offset = "0x1E6391C", VA = "0x1E6391C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F3C", Offset = "0xA34F3C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<WallManagementCacheParameters, int> <>9__29_0;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<WallManagementCacheParameters, bool> <>9__36_0;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SubWall, bool> <>9__36_1;

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x1E62F4C", Offset = "0x1E62F4C", VA = "0x1E62F4C")]
			public <>c()
			{
			}

			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x1E62F54", Offset = "0x1E62F54", VA = "0x1E62F54")]
			internal int <Cache>b__29_0(WallManagementCacheParameters x)
			{
				return default(int);
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1E62F5C", Offset = "0x1E62F5C", VA = "0x1E62F5C")]
			internal bool <RemoveCorruptedData>b__36_0(WallManagementCacheParameters x)
			{
				return default(bool);
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x1E62F94", Offset = "0x1E62F94", VA = "0x1E62F94")]
			internal bool <RemoveCorruptedData>b__36_1(SubWall x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008C2")]
		private const float VERTEX_COLOR_APPROXIMATION_VALUE = 0.1f;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WallVerticesCache CacheAsset;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerable<Vertex> verticesToPaint;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SubWall> SubWalls;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string instanceId;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool drawGizmos;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VertexPaintingConfiguration configuration;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PaintingConfiguration colorsConfig;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshFilter meshFilter;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<Color> colors;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkillSystem skillSystem;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int[] wallsToColor;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PaintingConfiguration.PaletteColor color;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private ModificationType type;

		[Token(Token = "0x17000132")]
		public string InstanceID
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x1E60744", Offset = "0x1E60744", VA = "0x1E60744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x1E6074C", Offset = "0x1E6074C", VA = "0x1E6074C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1E60754", Offset = "0x1E60754", VA = "0x1E60754")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1E60C84", Offset = "0x1E60C84", VA = "0x1E60C84")]
		public void AssignSkillSystem(SkillSystem skillSystem)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1E60C8C", Offset = "0x1E60C8C", VA = "0x1E60C8C")]
		public void AssignMeshFilter()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1E60CE4", Offset = "0x1E60CE4", VA = "0x1E60CE4")]
		public void SetVertexConfiguration(VertexPaintingConfiguration config)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1E5EF9C", Offset = "0x1E5EF9C", VA = "0x1E5EF9C")]
		public void Color(ColoringArgs coloringArgs, out bool inRange)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1E60EEC", Offset = "0x1E60EEC", VA = "0x1E60EEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40354", Offset = "0xA40354")]
		private static IEnumerable<Vertex> GetVerticesToPaint(VerticesToPaintArgs verticesToPaintArgs, Vector3 toolPosition)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1E60CEC", Offset = "0x1E60CEC", VA = "0x1E60CEC")]
		private VerticesToPaintArgs GetVerticesToPaintArgs(ColoringArgs args)
		{
			return default(VerticesToPaintArgs);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1E60FB8", Offset = "0x1E60FB8", VA = "0x1E60FB8")]
		private void SetVertexColors(IEnumerable<Vertex> verticesToColor, ColoringArgs colorArgs, VerticesToPaintArgs args)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1E61544", Offset = "0x1E61544", VA = "0x1E61544")]
		private Color GetColorOfVertexWithIndex(ColoringArgs colorArgs, int vertexIndex = 0)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1E6167C", Offset = "0x1E6167C", VA = "0x1E6167C")]
		public List<Color> GetAllColors()
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1E61708", Offset = "0x1E61708", VA = "0x1E61708")]
		public List<Color> GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1E61794", Offset = "0x1E61794", VA = "0x1E61794")]
		public void LoadSaveData(List<Color> colorMatrix)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x1E61898", Offset = "0x1E61898", VA = "0x1E61898")]
		private Color GetVertexColorInEditor(ColoringArgs colorArgs, int vertexIndex = 0, int columnIndex = 0)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1E61AE0", Offset = "0x1E61AE0", VA = "0x1E61AE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA403B8", Offset = "0xA403B8")]
		private void PrintMeshReadability()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1E61B9C", Offset = "0x1E61B9C", VA = "0x1E61B9C")]
		public void InitialiseColorMatrix()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1E61E2C", Offset = "0x1E61E2C", VA = "0x1E61E2C")]
		public void Cache()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1E62108", Offset = "0x1E62108", VA = "0x1E62108")]
		public void SaveColors()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1E626FC", Offset = "0x1E626FC", VA = "0x1E626FC")]
		public void SaveMultipleColors()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1E62BF8", Offset = "0x1E62BF8", VA = "0x1E62BF8")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1E62CA0", Offset = "0x1E62CA0", VA = "0x1E62CA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA403F0", Offset = "0xA403F0")]
		private void RemoveCorruptedData()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1E62E78", Offset = "0x1E62E78", VA = "0x1E62E78")]
		public Wall()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000185")]
	public class SubWall
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Wall wall;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public WallVerticesManagement management;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showVertices;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PaintingConfiguration.PaletteColor color;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Wall.ModificationType modType;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool selectiveVertexModification;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SubWallColoring> subWallColoring;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool applyColor;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1E60474", Offset = "0x1E60474", VA = "0x1E60474")]
		public SubWall(Wall wall, WallVerticesManagement management)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class SubWallColoring
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startColumnNumber;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int endColumnNumber;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintingConfiguration.PaletteColor color;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1E604AC", Offset = "0x1E604AC", VA = "0x1E604AC")]
		public SubWallColoring()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class Vertex
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 worldPosition;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float alpha;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x1E5E408", Offset = "0x1E5E408", VA = "0x1E5E408")]
		public Vertex()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public struct VerticesToPaintArgs
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WallVerticesManagement management;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Wall.ModificationShape modShape;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VertexPaintingConfiguration config;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numberOfNeighbours;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float colorLerpWeight;
	}
	[Token(Token = "0x2000189")]
	public struct ColoringArgs
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SubWall subWall;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Wall.ModificationType modificationType;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 toolPosition;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float toolDistance;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool paintCanExplosion;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool hammerThrow;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkillType skill;
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33D70", Offset = "0xA33D70")]
	public class WallVerticesCache : ScriptableObject
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WallManagementCacheParameters> SubWallsParameters;

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x1E63920", Offset = "0x1E63920", VA = "0x1E63920")]
		public WallVerticesCache()
		{
		}
	}
}
namespace _Code.Teleport
{
	[Token(Token = "0x200018B")]
	public class MovementComponent : MonoBehaviour, IRequirePlayerSubsystems, IRequireVRObjects, IRequireSceneSystems
	{
		[Token(Token = "0x20003AF")]
		public enum SnapAngle
		{
			[Token(Token = "0x400146D")]
			Thirty,
			[Token(Token = "0x400146E")]
			Sixty,
			[Token(Token = "0x400146F")]
			Ninety,
			[Token(Token = "0x4001470")]
			Smooth,
			[Token(Token = "0x4001471")]
			FortyFive
		}

		[Token(Token = "0x20003B0")]
		private class TeleportingHand
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool teleportingEnabled;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StickAction stickAction;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public _Code.VR.InputSystem.Hand hand;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform controller;

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xBEC2C4", Offset = "0xBEC2C4", VA = "0xBEC2C4")]
			public TeleportingHand()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F4C", Offset = "0xA34F4C")]
		private struct <>c__DisplayClass88_0
		{
			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MovementComponent <>4__this;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 direction;
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F5C", Offset = "0xA34F5C")]
		private sealed class <VignetteDisableCor>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovementComponent <>4__this;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C1")]
				[Address(RVA = "0xBEF97C", Offset = "0xBEF97C", VA = "0xBEF97C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C3")]
				[Address(RVA = "0xBEF9E8", Offset = "0xBEF9E8", VA = "0xBEF9E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xBED9B0", Offset = "0xBED9B0", VA = "0xBED9B0")]
			[DebuggerHidden]
			public <VignetteDisableCor>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xBEF830", Offset = "0xBEF830", VA = "0xBEF830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xBEF834", Offset = "0xBEF834", VA = "0xBEF834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xBEF984", Offset = "0xBEF984", VA = "0xBEF984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F6C", Offset = "0xA34F6C")]
		private sealed class <ResumeTeleportingAudioLoop>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovementComponent <>4__this;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C7")]
				[Address(RVA = "0xBEF7BC", Offset = "0xBEF7BC", VA = "0xBEF7BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C9")]
				[Address(RVA = "0xBEF828", Offset = "0xBEF828", VA = "0xBEF828", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xBEEF9C", Offset = "0xBEEF9C", VA = "0xBEEF9C")]
			[DebuggerHidden]
			public <ResumeTeleportingAudioLoop>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xBEF6D8", Offset = "0xBEF6D8", VA = "0xBEF6D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xBEF6DC", Offset = "0xBEF6DC", VA = "0xBEF6DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xBEF7C4", Offset = "0xBEF7C4", VA = "0xBEF7C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F7C", Offset = "0xA34F7C")]
		private sealed class <ResetStateCor>d__116 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovementComponent <>4__this;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CD")]
				[Address(RVA = "0xBEF664", Offset = "0xBEF664", VA = "0xBEF664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CF")]
				[Address(RVA = "0xBEF6D0", Offset = "0xBEF6D0", VA = "0xBEF6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xBEF024", Offset = "0xBEF024", VA = "0xBEF024")]
			[DebuggerHidden]
			public <ResetStateCor>d__116(int <>1__state)
			{
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xBEF608", Offset = "0xBEF608", VA = "0xBEF608", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xBEF60C", Offset = "0xBEF60C", VA = "0xBEF60C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xBEF66C", Offset = "0xBEF66C", VA = "0xBEF66C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39244", Offset = "0xA39244")]
		private LineRenderer rayRenderer;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RaycasterConfiguration raycastConfig;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ReticleReferenceHandler reticleObjects;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SphereCollider sphereCollider;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip onTeleportActive;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip onTeleportFinish;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip onUnableToTeleport;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform parabolaStepObject;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform vignette;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] lineSegmentsTransforms;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool vignetteCorRunning;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float locomotionSpeed;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float vignetteDisableSpeed;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastQuestsUpdateTime;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float vignetteIntensityProgress;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool locomotionDisabled;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool mainMenuScene;

		[Token(Token = "0x4000900")]
		private const int SNAP_TURN_ANGLE = 45;

		[Token(Token = "0x4000901")]
		private const int RAY_SEGMENTS = 30;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39320", Offset = "0xA39320")]
		private bool <Teleporting>k__BackingField;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private InputSystem inputs;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private HandInteractions handInteractions;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderingSceneSystem renderingSceneSystem;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private QuestSceneSystem questSystem;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform rayTransform;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform rigTransform;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform headsetTransform;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private TeleportReticle reticle;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TeleportingHand activeHand;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private TeleportingHand leftHand;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private TeleportingHand rightHand;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine unableToTeleportCor;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RaycastHit lastTeleportHit;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private RaycastHit lastRaycastHit;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 newRigRotation;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float timeSinceLastSnapTurn;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int hitSegment;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int positionCount;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int teleportVisualFXColorID;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool teleportingPossible;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		private bool teleportEnabled;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		private bool isTeleportDimensionHit;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
		private bool isInactive;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool rotationModeActivated;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		private bool leftActivated;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		private bool rightActivated;

		[Token(Token = "0x400091E")]
		private const float VELOCITY = 7f;

		[Token(Token = "0x400091F")]
		private const float STICK_DEADZONE_VALUE = 0.65f;

		[Token(Token = "0x4000920")]
		private const float LOCOMOTION_DEADZONE_VALUE = 0.6f;

		[Token(Token = "0x4000921")]
		private const float JUST_LOCOMOTION_DEADZONE_VALUE = 0.05f;

		[Token(Token = "0x4000922")]
		private const float SNAP_TURN_DEADZONE_VALUE = 0.9f;

		[Token(Token = "0x4000923")]
		private const float SNAP_SMOOTH_DEADZONE_VALUE = 0.1f;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private readonly Vector3 gravity;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Vector3 disabledRayPosition;

		[Token(Token = "0x17000133")]
		public bool Teleporting
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xBEBA90", Offset = "0xBEBA90", VA = "0xBEBA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40428", Offset = "0xA40428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xBEBA98", Offset = "0xBEBA98", VA = "0xBEBA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40438", Offset = "0xA40438")]
			private set
			{
			}
		}

		[Token(Token = "0x17000134")]
		private Transform ActiveControllerTransform
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xBEBAA4", Offset = "0xBEBAA4", VA = "0xBEBAA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private float Angle
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xBEBAC4", Offset = "0xBEBAC4", VA = "0xBEBAC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000136")]
		private Vector3 Velocity3
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xBEBBA0", Offset = "0xBEBBA0", VA = "0xBEBBA0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000137")]
		private float ParabolaStep
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xBEBC50", Offset = "0xBEBC50", VA = "0xBEBC50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000138")]
		private float FlightTime
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xBEBC5C", Offset = "0xBEBC5C", VA = "0xBEBC5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000139")]
		private bool IsTeleportHitEmpty
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xBEBCFC", Offset = "0xBEBCFC", VA = "0xBEBCFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		private bool IsRaycastHitEmpty
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xBEBDD0", Offset = "0xBEBDD0", VA = "0xBEBDD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool TeleportEnabled
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xBEBEA4", Offset = "0xBEBEA4", VA = "0xBEBEA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xBEBEAC", Offset = "0xBEBEAC", VA = "0xBEBEAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xBEC070", Offset = "0xBEC070", VA = "0xBEC070")]
		public void SetTeleportingCapabilities(bool left, bool right)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xBEC0A8", Offset = "0xBEC0A8", VA = "0xBEC0A8", Slot = "6")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xBEC148", Offset = "0xBEC148", VA = "0xBEC148", Slot = "4")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xBEC43C", Offset = "0xBEC43C", VA = "0xBEC43C", Slot = "5")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xBE27E0", Offset = "0xBE27E0", VA = "0xBE27E0")]
		public (bool, Vector3) GetTeleportHitPosition()
		{
			return default((bool, Vector3));
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xBEC4EC", Offset = "0xBEC4EC", VA = "0xBEC4EC")]
		public void SetPlayerPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xBEC538", Offset = "0xBEC538", VA = "0xBEC538")]
		private float GetPlayerRigHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xBEC2D4", Offset = "0xBEC2D4", VA = "0xBEC2D4")]
		private void HandleGameSettingsChanged()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xBEC5C0", Offset = "0xBEC5C0", VA = "0xBEC5C0")]
		private bool IsMovementTriggerActivated(TeleportingHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xBEC854", Offset = "0xBEC854", VA = "0xBEC854")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xBECAF0", Offset = "0xBECAF0", VA = "0xBECAF0")]
		private void HandleSmoothLocomotion(out bool leftHandSnapTurnAvailable, out bool rightHandSnapTurnAvailable)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xBED93C", Offset = "0xBED93C", VA = "0xBED93C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40448", Offset = "0xA40448")]
		private IEnumerator VignetteDisableCor()
		{
			return null;
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xBECFF8", Offset = "0xBECFF8", VA = "0xBECFF8")]
		private void TryToPerformSnapTurn(bool leftHandSnapTurnAvailable, bool rightHandSnapTurnAvailable)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xBEDB04", Offset = "0xBEDB04", VA = "0xBEDB04")]
		private void PerformSnapTurn(TeleportingHand hand, float deadzone, float stickPosition)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xBEDDD4", Offset = "0xBEDDD4", VA = "0xBEDDD4")]
		private float GetSnapAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xBEDE68", Offset = "0xBEDE68", VA = "0xBEDE68")]
		private void RestoreHeadPositionFromBeforeTheSnap(Vector3 headPosBeforeSnap)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xBECEE4", Offset = "0xBECEE4", VA = "0xBECEE4")]
		private void UpdatePerHand(TeleportingHand hand, TeleportingHand otherHand)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xBEC444", Offset = "0xBEC444", VA = "0xBEC444")]
		private void CacheComponents()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xBEE094", Offset = "0xBEE094", VA = "0xBEE094")]
		private void UpdateTeleport()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xBEE3B0", Offset = "0xBEE3B0", VA = "0xBEE3B0")]
		private void UpdateTeleportPossibility()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xBEDFF4", Offset = "0xBEDFF4", VA = "0xBEDFF4")]
		private void DisableTeleport()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xBED688", Offset = "0xBED688", VA = "0xBED688")]
		private bool LocomotionEnabled(TeleportingHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xBEE98C", Offset = "0xBEE98C", VA = "0xBEE98C")]
		private bool TeleportingEnabled(TeleportingHand teleportingHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xBED9DC", Offset = "0xBED9DC", VA = "0xBED9DC")]
		private bool SnapTurnsEnabled(TeleportingHand hand, bool snapTurnAvailable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xBEE020", Offset = "0xBEE020", VA = "0xBEE020")]
		private void HandleTriggerTeleport(_Code.VR.InputSystem.Hand hand)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xBEEA00", Offset = "0xBEEA00", VA = "0xBEEA00")]
		private void PerformTeleportation()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xBEE3E0", Offset = "0xBEE3E0", VA = "0xBEE3E0")]
		private void CheckAndUpdateRotation()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xBEE61C", Offset = "0xBEE61C", VA = "0xBEE61C")]
		private bool NoRoomForPlayerInReticlePosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xBEDF70", Offset = "0xBEDF70", VA = "0xBEDF70")]
		private void EnableTeleport(TeleportingHand hand)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xBEEEBC", Offset = "0xBEEEBC", VA = "0xBEEEBC")]
		private void PlayTeleportingAudioLoop()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xBEEDD4", Offset = "0xBEEDD4", VA = "0xBEEDD4")]
		private void PlayTeleportingFinishedAudio()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xBEE9C4", Offset = "0xBEE9C4", VA = "0xBEE9C4")]
		private void PlayUnableToTeleportAudio()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xBEEF28", Offset = "0xBEEF28", VA = "0xBEEF28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA404AC", Offset = "0xA404AC")]
		private IEnumerator ResumeTeleportingAudioLoop()
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xBEEED4", Offset = "0xBEEED4", VA = "0xBEEED4")]
		private void PlayClip(AudioClip clip, bool loop)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xBEE968", Offset = "0xBEE968", VA = "0xBEE968")]
		private void DisableAudio()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xBEE724", Offset = "0xBEE724", VA = "0xBEE724")]
		private void DisplayProperTeleportVisual(bool canTeleport)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xBEEFC8", Offset = "0xBEEFC8", VA = "0xBEEFC8")]
		private void SetArrowActiveState(bool state)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xBEEB5C", Offset = "0xBEEB5C", VA = "0xBEEB5C")]
		private Vector3 GetDestinationRotation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xBEEE10", Offset = "0xBEEE10", VA = "0xBEEE10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40510", Offset = "0xA40510")]
		private IEnumerator ResetStateCor()
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xBEC95C", Offset = "0xBEC95C", VA = "0xBEC95C")]
		private void CastParabola()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xBEF19C", Offset = "0xBEF19C", VA = "0xBEF19C")]
		private void AssignLastTeleportHit(RaycastHit teleportHit)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xBEE108", Offset = "0xBEE108", VA = "0xBEE108")]
		private void DrawParabola()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xBEEEC8", Offset = "0xBEEEC8", VA = "0xBEEEC8")]
		private void SetSegmentCount()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xBEF328", Offset = "0xBEF328", VA = "0xBEF328")]
		private void HideLineSegments()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xBEE248", Offset = "0xBEE248", VA = "0xBEE248")]
		private void UpdateReticles()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xBEE984", Offset = "0xBEE984", VA = "0xBEE984")]
		private void ResetRaySegmentCounts()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xBEC020", Offset = "0xBEC020", VA = "0xBEC020")]
		private void DisableRayAndReticle()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xBEF050", Offset = "0xBEF050", VA = "0xBEF050")]
		private float GetParabolaSegmentLerpValue(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xBEF080", Offset = "0xBEF080", VA = "0xBEF080")]
		private Vector3 GetParabolaSegmentPosition(Vector3 position, Vector3 velocityVector, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xBEECA8", Offset = "0xBEECA8", VA = "0xBEECA8")]
		private Vector3 GetDestinationPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xBEF414", Offset = "0xBEF414", VA = "0xBEF414")]
		private Vector3 GetHmdReticlePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xBEF470", Offset = "0xBEF470", VA = "0xBEF470")]
		private Vector3 GetRelativeHmdPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xBEF574", Offset = "0xBEF574", VA = "0xBEF574")]
		public MovementComponent()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xBED474", Offset = "0xBED474", VA = "0xBED474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40574", Offset = "0xA40574")]
		private void <HandleSmoothLocomotion>g__OnLocomotionStopped|88_0(ref <>c__DisplayClass88_0 P_0)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xBED578", Offset = "0xBED578", VA = "0xBED578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40584", Offset = "0xA40584")]
		private void <HandleSmoothLocomotion>g__BroadcastPositionUpdate|88_1(ref <>c__DisplayClass88_0 P_0)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xBED730", Offset = "0xBED730", VA = "0xBED730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40594", Offset = "0xA40594")]
		private void <HandleSmoothLocomotion>g__UpdateVignetteOverlay|88_2(ref <>c__DisplayClass88_0 P_0)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xBED7F0", Offset = "0xBED7F0", VA = "0xBED7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA405A4", Offset = "0xA405A4")]
		private bool <HandleSmoothLocomotion>g__ObstacleAhead|88_3(ref <>c__DisplayClass88_0 P_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xBED294", Offset = "0xBED294", VA = "0xBED294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA405B4", Offset = "0xA405B4")]
		private void <HandleSmoothLocomotion>g__IsAnyActivated|88_4(ref <>c__DisplayClass88_0 P_0)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class ReticleReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39330", Offset = "0xA39330")]
		public GameObject reticleContainer;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject positionReticle;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform directionIndicator;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform teleportVisual;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material teleportVisualMat;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform teleportVisualFX;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material teleportVisualFXMat;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject particleEffect;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject wrongSurfaceReticle;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject arrow;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpriteRenderer arrowRenderer;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39368", Offset = "0xA39368")]
		public Transform positionReticleTransform;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform wrongSurfaceReticleTransform;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA393A0", Offset = "0xA393A0")]
		public Color canTeleportColor;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color cannotTeleportColor;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xBEF9F0", Offset = "0xBEF9F0", VA = "0xBEF9F0")]
		public ReticleReferenceHandler()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class TeleportReticle
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReticleReferenceHandler reticleObjects;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xBEE0DC", Offset = "0xBEE0DC", VA = "0xBEE0DC")]
		public TeleportReticle(ReticleReferenceHandler reticleObjects)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xBEF3E4", Offset = "0xBEF3E4", VA = "0xBEF3E4")]
		public void SetActiveReticleContainer(bool value)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xBEF468", Offset = "0xBEF468", VA = "0xBEF468")]
		public void UpdatePosition(Vector3 hmdReticlePosition, Quaternion hmdReticleRotation, Vector3 boundReticlePosition)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xBEF3A4", Offset = "0xBEF3A4", VA = "0xBEF3A4")]
		public void ShowWarning(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xBEEE84", Offset = "0xBEEE84", VA = "0xBEEE84")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xBEFAF4", Offset = "0xBEFAF4", VA = "0xBEFAF4")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xBEFA5C", Offset = "0xBEFA5C", VA = "0xBEFA5C")]
		private void EnableWarningReticles()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xBEF9F8", Offset = "0xBEF9F8", VA = "0xBEF9F8")]
		private void SetHeadReticleTransform(Vector3 hmdReticlePosition, Quaternion hmdReticleRotation, float floorPosition)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xBEFA94", Offset = "0xBEFA94", VA = "0xBEFA94")]
		private void SetActiveWarningReticles(bool value)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xBEFAC4", Offset = "0xBEFAC4", VA = "0xBEFAC4")]
		private void SetActiveReticles(bool value)
		{
		}
	}
}
namespace _Code.Achievement
{
	[Token(Token = "0x200018E")]
	public enum Achievement
	{
		[Token(Token = "0x4000937")]
		CONTENT_CLIENT,
		[Token(Token = "0x4000938")]
		FIRST_FLIP,
		[Token(Token = "0x4000939")]
		PLATES_POPPER,
		[Token(Token = "0x400093A")]
		DARTS_DUDE,
		[Token(Token = "0x400093B")]
		RAPID_RIDER,
		[Token(Token = "0x400093C")]
		DEFT_DETECTIVE,
		[Token(Token = "0x400093D")]
		PURE_PURELY,
		[Token(Token = "0x400093E")]
		REVEALED_RENOVATOR,
		[Token(Token = "0x400093F")]
		EGGS_EXECUTOR,
		[Token(Token = "0x4000940")]
		SUPER_SELLER,
		[Token(Token = "0x4000941")]
		REMOTE_RIDE,
		[Token(Token = "0x4000942")]
		BASIC_BOOMERANGING,
		[Token(Token = "0x4000943")]
		NICE_N_SHOT,
		[Token(Token = "0x4000944")]
		RICH_RENOVATOR,
		[Token(Token = "0x4000945")]
		TEDDY_TIME,
		[Token(Token = "0x4000946")]
		FISH_FATE,
		[Token(Token = "0x4000947")]
		ALEX,
		[Token(Token = "0x4000948")]
		ARTIST,
		[Token(Token = "0x4000949")]
		BUSINESSMAN,
		[Token(Token = "0x400094A")]
		JELO,
		[Token(Token = "0x400094B")]
		KAMIL,
		[Token(Token = "0x400094C")]
		MYSTERY,
		[Token(Token = "0x400094D")]
		PATRYK,
		[Token(Token = "0x400094E")]
		STUDENT,
		[Token(Token = "0x400094F")]
		TAIA,
		[Token(Token = "0x4000950")]
		YURII
	}
	[Token(Token = "0x200018F")]
	public class AchievementSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireSceneSystems
	{
		[Serializable]
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F8C", Offset = "0xA34F8C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JobState, bool> <>9__10_0;

			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xC17580", Offset = "0xC17580", VA = "0xC17580")]
			public <>c()
			{
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xC17588", Offset = "0xC17588", VA = "0xC17588")]
			internal bool <AssignRequiredObject>b__10_0(JobState x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AchievementUnLocker[] achievementUnLockers;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DirtSceneSystem dirtSceneSystem;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA393F8", Offset = "0xA393F8")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementSystem achievementSystem;

		[Token(Token = "0x1700013C")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xC17188", Offset = "0xC17188", VA = "0xC17188", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA405C4", Offset = "0xA405C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xC17190", Offset = "0xC17190", VA = "0xC17190", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA405D4", Offset = "0xA405D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xC17198", Offset = "0xC17198", VA = "0xC17198", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xC1719C", Offset = "0xC1719C", VA = "0xC1719C")]
		public void Unlock(Achievement achievement)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xC17244", Offset = "0xC17244", VA = "0xC17244")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xC1729C", Offset = "0xC1729C", VA = "0xC1729C", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xC174EC", Offset = "0xC174EC", VA = "0xC174EC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xC174F4", Offset = "0xC174F4", VA = "0xC174F4", Slot = "9")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xC17514", Offset = "0xC17514", VA = "0xC17514")]
		public AchievementSceneSystem()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class AchievementSystem : MonoBehaviour, IInitialiseFirst
	{
		[Token(Token = "0x4000955")]
		private const int RICH_RENOVATOR_MONEY_AMOUNT = 300000;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Achievement, string> achievementToName;

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xC175AC", Offset = "0xC175AC", VA = "0xC175AC", Slot = "4")]
		public void InitialiseFirst()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC17640", Offset = "0xC17640", VA = "0xC17640")]
		private void HQOnPlayerMoneyChangedEvent()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xC171B8", Offset = "0xC171B8", VA = "0xC171B8")]
		public void Unlock(Achievement achievement)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC176C4", Offset = "0xC176C4", VA = "0xC176C4")]
		public AchievementSystem()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class AchievementUnLocker : MonoBehaviour
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Achievement achievement;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool initialised;

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xC17A2C", Offset = "0xC17A2C", VA = "0xC17A2C", Slot = "4")]
		public virtual void Initialise(AchievementSceneSystem achievementSystem, DirtSceneSystem dirtSystem)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xC17A58", Offset = "0xC17A58", VA = "0xC17A58")]
		public AchievementUnLocker()
		{
		}
	}
}
namespace _Code.SceneLoad
{
	[Token(Token = "0x2000192")]
	public class LoadingScreenCameraFade : MonoBehaviour, IRequireVRObjects, IRequirePlayerSubsystems
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34F9C", Offset = "0xA34F9C")]
		private sealed class <MovePopup>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenCameraFade <>4__this;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D6")]
				[Address(RVA = "0xC00AB0", Offset = "0xC00AB0", VA = "0xC00AB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D8")]
				[Address(RVA = "0xC00B1C", Offset = "0xC00B1C", VA = "0xC00B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xBFFB7C", Offset = "0xBFFB7C", VA = "0xBFFB7C")]
			[DebuggerHidden]
			public <MovePopup>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xC007A8", Offset = "0xC007A8", VA = "0xC007A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xC007AC", Offset = "0xC007AC", VA = "0xC007AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xC00AB8", Offset = "0xC00AB8", VA = "0xC00AB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FAC", Offset = "0xA34FAC")]
		private sealed class <FadeInCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenCameraFade <>4__this;

			[Token(Token = "0x170002D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DC")]
				[Address(RVA = "0xC00350", Offset = "0xC00350", VA = "0xC00350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DE")]
				[Address(RVA = "0xC003BC", Offset = "0xC003BC", VA = "0xC003BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xBFFBA8", Offset = "0xBFFBA8", VA = "0xBFFBA8")]
			[DebuggerHidden]
			public <FadeInCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xC0027C", Offset = "0xC0027C", VA = "0xC0027C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xC00280", Offset = "0xC00280", VA = "0xC00280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xC00358", Offset = "0xC00358", VA = "0xC00358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FBC", Offset = "0xA34FBC")]
		private sealed class <FadeInOverlayCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenCameraFade <>4__this;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018E2")]
				[Address(RVA = "0xC0048C", Offset = "0xC0048C", VA = "0xC0048C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E4")]
				[Address(RVA = "0xC004F8", Offset = "0xC004F8", VA = "0xC004F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xBFFC48", Offset = "0xBFFC48", VA = "0xBFFC48")]
			[DebuggerHidden]
			public <FadeInOverlayCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xC003C4", Offset = "0xC003C4", VA = "0xC003C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xC003C8", Offset = "0xC003C8", VA = "0xC003C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xC00494", Offset = "0xC00494", VA = "0xC00494", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FCC", Offset = "0xA34FCC")]
		private sealed class <FadeOutCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenCameraFade <>4__this;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018E8")]
				[Address(RVA = "0xC005EC", Offset = "0xC005EC", VA = "0xC005EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018EA")]
				[Address(RVA = "0xC00658", Offset = "0xC00658", VA = "0xC00658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xBFFC74", Offset = "0xBFFC74", VA = "0xBFFC74")]
			[DebuggerHidden]
			public <FadeOutCoroutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xC00500", Offset = "0xC00500", VA = "0xC00500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xC00504", Offset = "0xC00504", VA = "0xC00504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xC005F4", Offset = "0xC005F4", VA = "0xC005F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FDC", Offset = "0xA34FDC")]
		private sealed class <FadeOutOverlayCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreenCameraFade <>4__this;

			[Token(Token = "0x170002D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018EE")]
				[Address(RVA = "0xC00734", Offset = "0xC00734", VA = "0xC00734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F0")]
				[Address(RVA = "0xC007A0", Offset = "0xC007A0", VA = "0xC007A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xBFFD14", Offset = "0xBFFD14", VA = "0xBFFD14")]
			[DebuggerHidden]
			public <FadeOutOverlayCoroutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60018EC")]
			[Address(RVA = "0xC00660", Offset = "0xC00660", VA = "0xC00660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xC00664", Offset = "0xC00664", VA = "0xC00664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xC0073C", Offset = "0xC0073C", VA = "0xC0073C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FontComponent[] fontComponents;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneLoadTexts sceneLoadTexts;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39438", Offset = "0xA39438")]
		[SerializeField]
		private GameObject overlay;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform overlayTransform;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer overlayRenderer;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float fadeSpeed;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA394B4", Offset = "0xA394B4")]
		[SerializeField]
		private GameObject loadingPopup;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform loadingPopupTransform;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform loadingPopupLookPoint;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39520", Offset = "0xA39520")]
		[SerializeField]
		private TMP_Text headerText;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_Text hintText;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3957C", Offset = "0xA3957C")]
		[SerializeField]
		private GameObject batteryLevelContainer;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SpriteRenderer headsetBatteryLevel;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SpriteRenderer leftControllerBatteryLevel;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SpriteRenderer rightControllerBatteryLevel;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA395F8", Offset = "0xA395F8")]
		[SerializeField]
		private Sprite fullLevel;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Sprite highLevel;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Sprite midLevel;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Sprite lowLevel;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRObjects vrObjects;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputSystem inputSystem;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine moveCoroutine;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine fadeInCoroutine;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine fadeOutCoroutine;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material material;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Color blackOverlayColor;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int colorId;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool firstFadeTriggered;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly WaitForSeconds waitShowTextDelay;

		[Token(Token = "0x1700013D")]
		public bool FirstFadeTriggered
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xBFF710", Offset = "0xBFF710", VA = "0xBFF710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xBFF718", Offset = "0xBFF718", VA = "0xBFF718", Slot = "4")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xBFF720", Offset = "0xBFF720", VA = "0xBFF720")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xBFF7C8", Offset = "0xBFF7C8", VA = "0xBFF7C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA405E4", Offset = "0xA405E4")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xBFF8E4", Offset = "0xBFF8E4", VA = "0xBFF8E4")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xBFF9A0", Offset = "0xBFF9A0", VA = "0xBFF9A0")]
		private void SetupPopupPosition()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xBFFA7C", Offset = "0xBFFA7C", VA = "0xBFFA7C")]
		private void SetupOverlayPosition()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xBFFAC8", Offset = "0xBFFAC8", VA = "0xBFFAC8")]
		private void StopAndDisablePopupMovement()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xBFFB08", Offset = "0xBFFB08", VA = "0xBFFB08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4061C", Offset = "0xA4061C")]
		private IEnumerator MovePopup()
		{
			return null;
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xBFF818", Offset = "0xBFF818", VA = "0xBFF818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40680", Offset = "0xA40680")]
		private IEnumerator FadeInCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xBFFBD4", Offset = "0xBFFBD4", VA = "0xBFFBD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA406E4", Offset = "0xA406E4")]
		private IEnumerator FadeInOverlayCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xBFF92C", Offset = "0xBFF92C", VA = "0xBFF92C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40748", Offset = "0xA40748")]
		private IEnumerator FadeOutCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xBFFCA0", Offset = "0xBFFCA0", VA = "0xBFFCA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA407AC", Offset = "0xA407AC")]
		private IEnumerator FadeOutOverlayCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xBFFD40", Offset = "0xBFFD40", VA = "0xBFFD40")]
		private void SetOverlayAlpha(float alpha)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xBFFD78", Offset = "0xBFFD78", VA = "0xBFFD78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA40810", Offset = "0xA40810")]
		private void SetupTexts()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xC00000", Offset = "0xC00000", VA = "0xC00000")]
		private void SetupBatteryLevelTexts()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xC000DC", Offset = "0xC000DC", VA = "0xC000DC")]
		private void ChangeBatteryLevelImage(float batteryLevel, SpriteRenderer img)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xBFF88C", Offset = "0xBFF88C", VA = "0xBFF88C")]
		private void RestartCoroutine(ref Coroutine coroutine, IEnumerator routine)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xC00158", Offset = "0xC00158", VA = "0xC00158", Slot = "5")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xC00198", Offset = "0xC00198", VA = "0xC00198")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xC00204", Offset = "0xC00204", VA = "0xC00204")]
		public LoadingScreenCameraFade()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33DBC", Offset = "0xA33DBC")]
	public class SceneLoadTexts : ScriptableObject
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string headerLocKey;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] hintLocKeys;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] funLineLocKeys;

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xBFFE04", Offset = "0xBFFE04", VA = "0xBFFE04")]
		public string GetHeaderText()
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xBFFE10", Offset = "0xBFFE10", VA = "0xBFFE10")]
		public string GetHintText()
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xC00B24", Offset = "0xC00B24", VA = "0xC00B24")]
		public void AssignHintLocKeys(string[] newHintLocKeys)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xC00B2C", Offset = "0xC00B2C", VA = "0xC00B2C")]
		public void AssignFunLineLocKeys(string[] newFunLineLocKeys)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xC00B34", Offset = "0xC00B34", VA = "0xC00B34")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xA40848", Offset = "0xA40848")]
		private void PrintHintKeys()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xC00C14", Offset = "0xC00C14", VA = "0xC00C14")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xA40858", Offset = "0xA40858")]
		private void PrintFunLineKeys()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xC00CF4", Offset = "0xC00CF4", VA = "0xC00CF4")]
		public SceneLoadTexts()
		{
		}
	}
}
namespace _Code.Raycaster
{
	[Token(Token = "0x2000194")]
	public class Raycaster : MonoBehaviour
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RaycasterConfiguration config;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int resultLength;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly RaycastHit[] hitResults;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xBFF184", Offset = "0xBFF184", VA = "0xBFF184")]
		public bool GetWallHit(Wall.ModificationType modType, Transform raycastOrigin, out RaycastHit wallHit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xBFF418", Offset = "0xBFF418", VA = "0xBFF418")]
		public bool GetDirt(Transform raycastOrigin, out RaycastHit dirtHit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xBFF5B0", Offset = "0xBFF5B0", VA = "0xBFF5B0")]
		public bool GetNearestInteractableCollider(Vector3 rayPosition, Vector3 rayDir, LayerMask mask, float radius, out Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xBFF68C", Offset = "0xBFF68C", VA = "0xBFF68C")]
		public Raycaster()
		{
		}
	}
}
namespace _Code.Quests
{
	[Token(Token = "0x2000195")]
	public class BasketballQuest : Quest, ISimpleActivityQuest
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BasketballShield basket;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool dunked;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xBF6938", Offset = "0xBF6938", VA = "0xBF6938", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xBF69CC", Offset = "0xBF69CC", VA = "0xBF69CC", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xBF6A70", Offset = "0xBF6A70", VA = "0xBF6A70")]
		private void HandleDunk()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xBF6A98", Offset = "0xBF6A98", VA = "0xBF6A98", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xBF6B20", Offset = "0xBF6B20", VA = "0xBF6B20", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xBF6B34", Offset = "0xBF6B34", VA = "0xBF6B34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xBF6BDC", Offset = "0xBF6BDC", VA = "0xBF6BDC", Slot = "10")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xBF6BE8", Offset = "0xBF6BE8", VA = "0xBF6BE8")]
		public BasketballQuest()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class CarTrackQuest : Quest, ISimpleActivityQuest
	{
		[Token(Token = "0x400097F")]
		private const float CHECKPOINT_RADIUS = 0.6f;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RemoteCarController remoteCarController;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform carInitialPosition;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] checkPoints;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer[] checkPointsMarkersRenderer;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int numberOfCheckPoints;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoxCollider[] disallowedAreas;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material goodCheckpointMaterial;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material wrongCheckpoingMaterial;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform carSpawnPoint;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform car;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RemoteCarPickapable carPickupable;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nextExpectedCheckPoint;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool carSpawned;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xBF6C08", Offset = "0xBF6C08", VA = "0xBF6C08", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xBF6CA4", Offset = "0xBF6CA4", VA = "0xBF6CA4", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xBF6EFC", Offset = "0xBF6EFC", VA = "0xBF6EFC")]
		private void HandleCarSpawned(Pickupable car)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xBF711C", Offset = "0xBF711C", VA = "0xBF711C")]
		private void HandleControllerPickUp(Item item)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xBF71A4", Offset = "0xBF71A4", VA = "0xBF71A4")]
		private void HandleControllerPutDown(Item item)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xBF722C", Offset = "0xBF722C", VA = "0xBF722C")]
		private void ResetScore()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xBF72AC", Offset = "0xBF72AC", VA = "0xBF72AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xBF7598", Offset = "0xBF7598", VA = "0xBF7598", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xBF7674", Offset = "0xBF7674", VA = "0xBF7674", Slot = "8")]
		public override float GetRewardAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xBF7680", Offset = "0xBF7680", VA = "0xBF7680", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xBF73D0", Offset = "0xBF73D0", VA = "0xBF73D0")]
		private void HandleCarNearCheckpoint()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xBF7308", Offset = "0xBF7308", VA = "0xBF7308")]
		private void ResetMinigameIfCarIsInsideDisallowedArea()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xBF7698", Offset = "0xBF7698", VA = "0xBF7698")]
		private void AdvanceMinigame(int currentCheckpoint)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xBF7788", Offset = "0xBF7788", VA = "0xBF7788")]
		private void ResetMinigame()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xBF6E18", Offset = "0xBF6E18", VA = "0xBF6E18")]
		private void ResetCheckpointsMaterials(bool setActive)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xBF70A0", Offset = "0xBF70A0", VA = "0xBF70A0")]
		private void PlaceCarAtSpawnPoint()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xBF77AC", Offset = "0xBF77AC", VA = "0xBF77AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xBF7954", Offset = "0xBF7954", VA = "0xBF7954")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xBF79E8", Offset = "0xBF79E8", VA = "0xBF79E8", Slot = "10")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xBF79F4", Offset = "0xBF79F4", VA = "0xBF79F4")]
		public CarTrackQuest()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class DartQuest : Quest, ISimpleActivityQuest
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Board board;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool bullsEyed;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xBF7A04", Offset = "0xBF7A04", VA = "0xBF7A04", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xBF7A98", Offset = "0xBF7A98", VA = "0xBF7A98", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xBF7B5C", Offset = "0xBF7B5C", VA = "0xBF7B5C")]
		private void HandleDartShot()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xBF7B84", Offset = "0xBF7B84", VA = "0xBF7B84", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xBF7B98", Offset = "0xBF7B98", VA = "0xBF7B98", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xBF7C20", Offset = "0xBF7C20", VA = "0xBF7C20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xBF7CE4", Offset = "0xBF7CE4", VA = "0xBF7CE4", Slot = "10")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xBF7CF0", Offset = "0xBF7CF0", VA = "0xBF7CF0")]
		public DartQuest()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class DirtQuest : Quest
	{
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FEC", Offset = "0xA34FEC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0xBF7ED8", Offset = "0xBF7ED8", VA = "0xBF7ED8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xBF81EC", Offset = "0xBF81EC", VA = "0xBF81EC")]
			internal bool <CollectRefs>b__0(DirtSet x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34FFC", Offset = "0xA34FFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DirtSet, bool> <>9__5_0;

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xBF81A8", Offset = "0xBF81A8", VA = "0xBF81A8")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xBF81B0", Offset = "0xBF81B0", VA = "0xBF81B0")]
			internal bool <GetProgress>b__5_0(DirtSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<DirtSet> dirtPartsToClean;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numberOfDefinedDirts;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int finished;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xBF7D00", Offset = "0xBF7D00", VA = "0xBF7D00")]
		public void NotifyAboutDirtCleaned(DirtSet partCleaned)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xBF7D98", Offset = "0xBF7D98", VA = "0xBF7D98", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xBF7EE0", Offset = "0xBF7EE0", VA = "0xBF7EE0", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xBF8040", Offset = "0xBF8040", VA = "0xBF8040", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xBF8134", Offset = "0xBF8134", VA = "0xBF8134")]
		public DirtQuest()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class FindCluesQuest : Quest
	{
		[Serializable]
		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3500C", Offset = "0xA3500C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, bool> <>9__6_0;

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xBF8950", Offset = "0xBF8950", VA = "0xBF8950")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xBF8958", Offset = "0xBF8958", VA = "0xBF8958")]
			internal bool <HandleAfterSceneLoaded>b__6_0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Item> cluesToFind;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int totalItemsToFind;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int cluesFound;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xBF8238", Offset = "0xBF8238", VA = "0xBF8238", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xBF82A0", Offset = "0xBF82A0", VA = "0xBF82A0", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xBF8300", Offset = "0xBF8300", VA = "0xBF8300")]
		private void HandleAfterSceneLoaded()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xBF859C", Offset = "0xBF859C", VA = "0xBF859C")]
		private void HandleItemPickedUp(Item item)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xBF8668", Offset = "0xBF8668", VA = "0xBF8668", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xBF875C", Offset = "0xBF875C", VA = "0xBF875C", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xBF8774", Offset = "0xBF8774", VA = "0xBF8774")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xBF88DC", Offset = "0xBF88DC", VA = "0xBF88DC")]
		public FindCluesQuest()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class FindItemQuest : Quest, IContainSprites, ISimpleActivityQuest
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3501C", Offset = "0xA3501C")]
		private sealed class <GetSprites>d__8 : IEnumerable<Sprite>, IEnumerable, IEnumerator<Sprite>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Sprite <>2__current;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FindItemQuest <>4__this;

			[Token(Token = "0x170002DA")]
			private Sprite System.Collections.Generic.IEnumerator<UnityEngine.Sprite>.Current
			{
				[Token(Token = "0x60018FC")]
				[Address(RVA = "0xBF8E00", Offset = "0xBF8E00", VA = "0xBF8E00", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018FE")]
				[Address(RVA = "0xBF8E6C", Offset = "0xBF8E6C", VA = "0xBF8E6C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0xBF8C60", Offset = "0xBF8C60", VA = "0xBF8C60")]
			[DebuggerHidden]
			public <GetSprites>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xBF8D80", Offset = "0xBF8D80", VA = "0xBF8D80", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xBF8D84", Offset = "0xBF8D84", VA = "0xBF8D84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xBF8E08", Offset = "0xBF8E08", VA = "0xBF8E08", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xBF8E74", Offset = "0xBF8E74", VA = "0xBF8E74", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Sprite> System.Collections.Generic.IEnumerable<UnityEngine.Sprite>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0xBF8F24", Offset = "0xBF8F24", VA = "0xBF8F24", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item itemToFind;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool found;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xBF89EC", Offset = "0xBF89EC", VA = "0xBF89EC", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xBF89F4", Offset = "0xBF89F4", VA = "0xBF89F4", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xBF8A94", Offset = "0xBF8A94", VA = "0xBF8A94")]
		private void HandleItemPickedUp(Item item)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xBF8B40", Offset = "0xBF8B40", VA = "0xBF8B40", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xBF8BC8", Offset = "0xBF8BC8", VA = "0xBF8BC8", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xBF8BDC", Offset = "0xBF8BDC", VA = "0xBF8BDC", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40868", Offset = "0xA40868")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xBF8C98", Offset = "0xBF8C98", VA = "0xBF8C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xBF8D48", Offset = "0xBF8D48", VA = "0xBF8D48", Slot = "11")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xBF8D70", Offset = "0xBF8D70", VA = "0xBF8D70")]
		public FindItemQuest()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class FlushToiletQuest : Quest, IContainSprites, ISimpleActivityQuest
	{
		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3502C", Offset = "0xA3502C")]
		private sealed class <GetSprites>d__5 : IEnumerable<Sprite>, IEnumerable, IEnumerator<Sprite>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Sprite <>2__current;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlushToiletQuest <>4__this;

			[Token(Token = "0x170002DC")]
			private Sprite System.Collections.Generic.IEnumerator<UnityEngine.Sprite>.Current
			{
				[Token(Token = "0x6001904")]
				[Address(RVA = "0xBF9170", Offset = "0xBF9170", VA = "0xBF9170", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001906")]
				[Address(RVA = "0xBF91DC", Offset = "0xBF91DC", VA = "0xBF91DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0xBF8FD0", Offset = "0xBF8FD0", VA = "0xBF8FD0")]
			[DebuggerHidden]
			public <GetSprites>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001902")]
			[Address(RVA = "0xBF9100", Offset = "0xBF9100", VA = "0xBF9100", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001903")]
			[Address(RVA = "0xBF9104", Offset = "0xBF9104", VA = "0xBF9104", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0xBF9178", Offset = "0xBF9178", VA = "0xBF9178", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0xBF91E4", Offset = "0xBF91E4", VA = "0xBF91E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Sprite> System.Collections.Generic.IEnumerable<UnityEngine.Sprite>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0xBF9294", Offset = "0xBF9294", VA = "0xBF9294", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item toiletItem;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool flushDone;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xBF8F28", Offset = "0xBF8F28", VA = "0xBF8F28", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xBF8F2C", Offset = "0xBF8F2C", VA = "0xBF8F2C")]
		public void NotifyAboutFlushedToilet()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xBF8F38", Offset = "0xBF8F38", VA = "0xBF8F38", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xBF8F4C", Offset = "0xBF8F4C", VA = "0xBF8F4C", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA408CC", Offset = "0xA408CC")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xBF9008", Offset = "0xBF9008", VA = "0xBF9008", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xBF900C", Offset = "0xBF900C", VA = "0xBF900C", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xBF90E4", Offset = "0xBF90E4", VA = "0xBF90E4", Slot = "11")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xBF90F0", Offset = "0xBF90F0", VA = "0xBF90F0")]
		public FlushToiletQuest()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class FurnitureQuest : Quest, IContainSprites
	{
		[Serializable]
		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3503C", Offset = "0xA3503C")]
		private sealed class <>c
		{
			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, Sprite> <>9__11_0;

			[Token(Token = "0x600190A")]
			[Address(RVA = "0xBF998C", Offset = "0xBF998C", VA = "0xBF998C")]
			public <>c()
			{
			}

			[Token(Token = "0x600190B")]
			[Address(RVA = "0xBF9994", Offset = "0xBF9994", VA = "0xBF9994")]
			internal Sprite <GetSprites>b__11_0(Item x)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3504C", Offset = "0xA3504C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x600190C")]
			[Address(RVA = "0xBF970C", Offset = "0xBF970C", VA = "0xBF970C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0xBF99BC", Offset = "0xBF99BC", VA = "0xBF99BC")]
			internal bool <NotifyAboutItemRemoval>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3505C", Offset = "0xA3505C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x600190E")]
			[Address(RVA = "0xBF9888", Offset = "0xBF9888", VA = "0xBF9888")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600190F")]
			[Address(RVA = "0xBF9A00", Offset = "0xBF9A00", VA = "0xBF9A00")]
			internal bool <NotifyAboutItemPlaced>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item[] itemsToPlace;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numberOfQuestItemsToPlace;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Item> itemsLeftToPlace;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Item> placedItems;

		[Token(Token = "0x1700013E")]
		public Item[] ItemsToPlace
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xBF9298", Offset = "0xBF9298", VA = "0xBF9298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xBF92A0", Offset = "0xBF92A0", VA = "0xBF92A0", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xBF9300", Offset = "0xBF9300", VA = "0xBF9300", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xBF9314", Offset = "0xBF9314", VA = "0xBF9314", Slot = "5")]
		public override int GetExpense()
		{
			return default(int);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xBF9390", Offset = "0xBF9390", VA = "0xBF9390", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xBF93F4", Offset = "0xBF93F4", VA = "0xBF93F4", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xBF94E0", Offset = "0xBF94E0", VA = "0xBF94E0", Slot = "10")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xBF95D0", Offset = "0xBF95D0", VA = "0xBF95D0")]
		public void NotifyAboutItemRemoval(Item item, out bool itemFoundInQuest)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xBF9714", Offset = "0xBF9714", VA = "0xBF9714")]
		public void NotifyAboutItemPlaced(Item item, out bool itemFoundInQuest)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xBF9890", Offset = "0xBF9890", VA = "0xBF9890")]
		public FurnitureQuest()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class GrillChickenQuest : Quest, IContainSprites, ISimpleActivityQuest
	{
		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3506C", Offset = "0xA3506C")]
		private sealed class <GetSprites>d__5 : IEnumerable<Sprite>, IEnumerable, IEnumerator<Sprite>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Sprite <>2__current;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GrillChickenQuest <>4__this;

			[Token(Token = "0x170002DE")]
			private Sprite System.Collections.Generic.IEnumerator<UnityEngine.Sprite>.Current
			{
				[Token(Token = "0x6001913")]
				[Address(RVA = "0xBF9C78", Offset = "0xBF9C78", VA = "0xBF9C78", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001915")]
				[Address(RVA = "0xBF9CE4", Offset = "0xBF9CE4", VA = "0xBF9CE4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001910")]
			[Address(RVA = "0xBF9AEC", Offset = "0xBF9AEC", VA = "0xBF9AEC")]
			[DebuggerHidden]
			public <GetSprites>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001911")]
			[Address(RVA = "0xBF9C1C", Offset = "0xBF9C1C", VA = "0xBF9C1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001912")]
			[Address(RVA = "0xBF9C20", Offset = "0xBF9C20", VA = "0xBF9C20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0xBF9C80", Offset = "0xBF9C80", VA = "0xBF9C80", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0xBF9CEC", Offset = "0xBF9CEC", VA = "0xBF9CEC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Sprite> System.Collections.Generic.IEnumerable<UnityEngine.Sprite>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001917")]
			[Address(RVA = "0xBF9D9C", Offset = "0xBF9D9C", VA = "0xBF9D9C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite chickenImage;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool grillingDone;

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xBF9A44", Offset = "0xBF9A44", VA = "0xBF9A44", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xBF9A48", Offset = "0xBF9A48", VA = "0xBF9A48")]
		public void NotifyAboutCookedChicken(Cooker cooker)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xBF9A54", Offset = "0xBF9A54", VA = "0xBF9A54", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xBF9A68", Offset = "0xBF9A68", VA = "0xBF9A68", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40930", Offset = "0xA40930")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xBF9B24", Offset = "0xBF9B24", VA = "0xBF9B24", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xBF9B28", Offset = "0xBF9B28", VA = "0xBF9B28", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xBF9C00", Offset = "0xBF9C00", VA = "0xBF9C00", Slot = "11")]
		public void MarkAsFinished()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xBF9C0C", Offset = "0xBF9C0C", VA = "0xBF9C0C")]
		public GrillChickenQuest()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class InstallationQuest : Quest, IContainSprites
	{
		[Serializable]
		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3507C", Offset = "0xA3507C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Magnet, bool> <>9__6_0;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Magnet, Sprite> <>9__12_0;

			[Token(Token = "0x6001919")]
			[Address(RVA = "0xBFA564", Offset = "0xBFA564", VA = "0xBFA564")]
			public <>c()
			{
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0xBFA56C", Offset = "0xBFA56C", VA = "0xBFA56C")]
			internal bool <HandleSaveLoaded>b__6_0(Magnet x)
			{
				return default(bool);
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0xBFA590", Offset = "0xBFA590", VA = "0xBFA590")]
			internal Sprite <GetSprites>b__12_0(Magnet x)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3508C", Offset = "0xA3508C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x600191C")]
			[Address(RVA = "0xBFA1A0", Offset = "0xBFA1A0", VA = "0xBFA1A0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600191D")]
			[Address(RVA = "0xBFA5C0", Offset = "0xBFA5C0", VA = "0xBFA5C0")]
			internal bool <CollectRefs>b__0(Magnet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Magnet> magnetsLeft;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Item[] installations;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int numberOfMagnetsToInstallDeviceIn;

		[Token(Token = "0x1700013F")]
		public List<Magnet> MagnetsLeft
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xBF9DA0", Offset = "0xBF9DA0", VA = "0xBF9DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xBF9DA8", Offset = "0xBF9DA8", VA = "0xBF9DA8", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xBF9E3C", Offset = "0xBF9E3C", VA = "0xBF9E3C")]
		private void HandleSaveLoaded()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xBF9F4C", Offset = "0xBF9F4C", VA = "0xBF9F4C", Slot = "5")]
		public override int GetExpense()
		{
			return default(int);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xBF9FC8", Offset = "0xBF9FC8", VA = "0xBF9FC8")]
		public void NotifyAboutDeviceInstalledInMagnet(Magnet magnet)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xBFA060", Offset = "0xBFA060", VA = "0xBFA060", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xBFA1A8", Offset = "0xBFA1A8", VA = "0xBFA1A8", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xBFA21C", Offset = "0xBFA21C", VA = "0xBFA21C", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xBFA36C", Offset = "0xBFA36C", VA = "0xBFA36C", Slot = "10")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xBFA45C", Offset = "0xBFA45C", VA = "0xBFA45C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xBFA4F0", Offset = "0xBFA4F0", VA = "0xBFA4F0")]
		public InstallationQuest()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class InteractionQuest : Quest
	{
		[Serializable]
		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3509C", Offset = "0xA3509C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DragInteraction, bool> <>9__4_0;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<DragInteraction, bool> <>9__5_0;

			[Token(Token = "0x600191F")]
			[Address(RVA = "0xBFAAC0", Offset = "0xBFAAC0", VA = "0xBFAAC0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001920")]
			[Address(RVA = "0xBFAAC8", Offset = "0xBFAAC8", VA = "0xBFAAC8")]
			internal bool <CollectRefs>b__4_0(DragInteraction x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0xBFAAE8", Offset = "0xBFAAE8", VA = "0xBFAAE8")]
			internal bool <GetProgress>b__5_0(DragInteraction x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<DragInteraction> dragInteractions;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numberOfDefinedTasks;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int finished;

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xBFA60C", Offset = "0xBFA60C", VA = "0xBFA60C")]
		public void NotifyAboutDrawerClosed(DragInteraction interaction)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xBFA6A4", Offset = "0xBFA6A4", VA = "0xBFA6A4", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xBFA804", Offset = "0xBFA804", VA = "0xBFA804", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xBFA964", Offset = "0xBFA964", VA = "0xBFA964", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xBFAA4C", Offset = "0xBFAA4C", VA = "0xBFAA4C")]
		public InteractionQuest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public struct QuestData
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string questText;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string progressRatio;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int progress;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xAEB99C", Offset = "0xAEB99C", VA = "0xAEB99C")]
		public QuestData(QuestData data)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public interface ISimpleActivityQuest
	{
		[Token(Token = "0x6000C9A")]
		void MarkAsFinished();
	}
	[Token(Token = "0x20001A2")]
	public class ItemRemovalQuest : Quest, IContainSprites
	{
		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350AC", Offset = "0xA350AC")]
		private sealed class <GetSprites>d__9 : IEnumerable<Sprite>, IEnumerable, IEnumerator<Sprite>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Sprite <>2__current;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ItemRemovalQuest <>4__this;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170002E0")]
			private Sprite System.Collections.Generic.IEnumerator<UnityEngine.Sprite>.Current
			{
				[Token(Token = "0x6001925")]
				[Address(RVA = "0xBFB370", Offset = "0xBFB370", VA = "0xBFB370", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001927")]
				[Address(RVA = "0xBFB3DC", Offset = "0xBFB3DC", VA = "0xBFB3DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0xBFB028", Offset = "0xBFB028", VA = "0xBFB028")]
			[DebuggerHidden]
			public <GetSprites>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0xBFB210", Offset = "0xBFB210", VA = "0xBFB210", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0xBFB214", Offset = "0xBFB214", VA = "0xBFB214", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001926")]
			[Address(RVA = "0xBFB378", Offset = "0xBFB378", VA = "0xBFB378", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0xBFB3E4", Offset = "0xBFB3E4", VA = "0xBFB3E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Sprite> System.Collections.Generic.IEnumerable<UnityEngine.Sprite>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001929")]
			[Address(RVA = "0xBFB494", Offset = "0xBFB494", VA = "0xBFB494", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Item> itemsToRemove;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numberOfQuestItemsToPlace;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xBFAB24", Offset = "0xBFAB24", VA = "0xBFAB24", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xBFAB84", Offset = "0xBFAB84", VA = "0xBFAB84", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xBFABEC", Offset = "0xBFABEC", VA = "0xBFABEC", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xBFAD9C", Offset = "0xBFAD9C", VA = "0xBFAD9C")]
		public void NotifyAboutItemRemoval(Item item, out bool itemFoundInQuest)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xBFAE38", Offset = "0xBFAE38", VA = "0xBFAE38")]
		private void HandleItemSell(Item item)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xBFAEB0", Offset = "0xBFAEB0", VA = "0xBFAEB0", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xBFAFA4", Offset = "0xBFAFA4", VA = "0xBFAFA4", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40994", Offset = "0xA40994")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xBFB060", Offset = "0xBFB060", VA = "0xBFB060")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xBFB200", Offset = "0xBFB200", VA = "0xBFB200")]
		public ItemRemovalQuest()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class PlaceItemInAreaQuest : Quest, IContainSprites
	{
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350BC", Offset = "0xA350BC")]
		private sealed class <HandleItemPutDownDelayedCor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaceItemInAreaQuest <>4__this;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Item item;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600192D")]
				[Address(RVA = "0xBFBD04", Offset = "0xBFBD04", VA = "0xBFBD04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600192F")]
				[Address(RVA = "0xBFBD70", Offset = "0xBFBD70", VA = "0xBFBD70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0xBFB730", Offset = "0xBFB730", VA = "0xBFB730")]
			[DebuggerHidden]
			public <HandleItemPutDownDelayedCor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600192B")]
			[Address(RVA = "0xBFBB54", Offset = "0xBFBB54", VA = "0xBFBB54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600192C")]
			[Address(RVA = "0xBFBB58", Offset = "0xBFBB58", VA = "0xBFBB58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600192E")]
			[Address(RVA = "0xBFBD0C", Offset = "0xBFBD0C", VA = "0xBFBD0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350CC", Offset = "0xA350CC")]
		private sealed class <>c
		{
			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, Sprite> <>9__10_0;

			[Token(Token = "0x6001931")]
			[Address(RVA = "0xBFBB24", Offset = "0xBFBB24", VA = "0xBFBB24")]
			public <>c()
			{
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0xBFBB2C", Offset = "0xBFBB2C", VA = "0xBFBB2C")]
			internal Sprite <GetSprites>b__10_0(Item x)
			{
				return null;
			}
		}

		[Token(Token = "0x40009AF")]
		private const float QUEST_REFRESH_DELAY = 2f;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Item> itemsToPlaceInArea;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform placementCenter;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int numberOfItemsToPlace;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Item, bool> itemsToCorrectPlacement;

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xBFB498", Offset = "0xBFB498", VA = "0xBFB498", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xBFB4F0", Offset = "0xBFB4F0", VA = "0xBFB4F0", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xBFB684", Offset = "0xBFB684", VA = "0xBFB684")]
		private void HandleItemPutDown(Item item)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xBFB6B0", Offset = "0xBFB6B0", VA = "0xBFB6B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA409F8", Offset = "0xA409F8")]
		private IEnumerator HandleItemPutDownDelayedCor(Item item)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xBFB75C", Offset = "0xBFB75C", VA = "0xBFB75C", Slot = "10")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xBFB84C", Offset = "0xBFB84C", VA = "0xBFB84C", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xBFB940", Offset = "0xBFB940", VA = "0xBFB940", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xBFB9A8", Offset = "0xBFB9A8", VA = "0xBFB9A8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xBFBA48", Offset = "0xBFBA48", VA = "0xBFBA48")]
		public PlaceItemInAreaQuest()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class PutItemsInTheFridge : Quest, IContainSprites
	{
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350DC", Offset = "0xA350DC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x6001933")]
			[Address(RVA = "0xBFBFFC", Offset = "0xBFBFFC", VA = "0xBFBFFC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001934")]
			[Address(RVA = "0xBFC504", Offset = "0xBFC504", VA = "0xBFC504")]
			internal bool <NotifyAboutItemPlaced>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350EC", Offset = "0xA350EC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x6001935")]
			[Address(RVA = "0xBFC548", Offset = "0xBFC548", VA = "0xBFC548")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0xBFC550", Offset = "0xBFC550", VA = "0xBFC550")]
			internal bool <NotifyAboutItemPlacedDelayed>b__0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA350FC", Offset = "0xA350FC")]
		private sealed class <NotifyAboutItemPlacedDelayed>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Item item;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PutItemsInTheFridge <>4__this;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass12_0 <>8__1;

			[Token(Token = "0x170002E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600193A")]
				[Address(RVA = "0xBFC7C8", Offset = "0xBFC7C8", VA = "0xBFC7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600193C")]
				[Address(RVA = "0xBFC834", Offset = "0xBFC834", VA = "0xBFC834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0xBFC084", Offset = "0xBFC084", VA = "0xBFC084")]
			[DebuggerHidden]
			public <NotifyAboutItemPlacedDelayed>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001938")]
			[Address(RVA = "0xBFC594", Offset = "0xBFC594", VA = "0xBFC594", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001939")]
			[Address(RVA = "0xBFC598", Offset = "0xBFC598", VA = "0xBFC598", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600193B")]
			[Address(RVA = "0xBFC7D0", Offset = "0xBFC7D0", VA = "0xBFC7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3510C", Offset = "0xA3510C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, Sprite> <>9__14_0;

			[Token(Token = "0x600193E")]
			[Address(RVA = "0xBFC4D4", Offset = "0xBFC4D4", VA = "0xBFC4D4")]
			public <>c()
			{
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0xBFC4DC", Offset = "0xBFC4DC", VA = "0xBFC4DC")]
			internal Sprite <GetSprites>b__14_0(Item x)
			{
				return null;
			}
		}

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item fridge;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Item> itemsLeft;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Item> placedItems;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform areaCenter;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 boundsSize;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int numberOfItemsToPlace;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private QuestSceneSystem questSceneSystem;

		[Token(Token = "0x17000140")]
		public List<Item> ItemsLeft
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xBFBD78", Offset = "0xBFBD78", VA = "0xBFBD78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xBFBD80", Offset = "0xBFBD80", VA = "0xBFBD80", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xBFBDA8", Offset = "0xBFBDA8", VA = "0xBFBDA8", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xBFBE10", Offset = "0xBFBE10", VA = "0xBFBE10")]
		public void NotifyAboutItemPlaced(Item item, out bool itemFoundInQuest)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xBFC004", Offset = "0xBFC004", VA = "0xBFC004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40A5C", Offset = "0xA40A5C")]
		private IEnumerator NotifyAboutItemPlacedDelayed(Item item)
		{
			return null;
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xBFC0B0", Offset = "0xBFC0B0", VA = "0xBFC0B0")]
		public void NotifyAboutItemRemoval(Item item, out bool itemFoundInQuest)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xBFC168", Offset = "0xBFC168", VA = "0xBFC168", Slot = "10")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xBFC258", Offset = "0xBFC258", VA = "0xBFC258", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xBFC34C", Offset = "0xBFC34C", VA = "0xBFC34C", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xBFC3B4", Offset = "0xBFC3B4", VA = "0xBFC3B4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xBFC458", Offset = "0xBFC458", VA = "0xBFC458")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xBFC460", Offset = "0xBFC460", VA = "0xBFC460")]
		public PutItemsInTheFridge()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public abstract class Quest : MonoBehaviour
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool initialised;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int rewardAmount;

		[Token(Token = "0x17000141")]
		public int Reward
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xBFC83C", Offset = "0xBFC83C", VA = "0xBFC83C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xBFC844", Offset = "0xBFC844", VA = "0xBFC844")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xBFC84C", Offset = "0xBFC84C", VA = "0xBFC84C")]
		public bool IsFullyCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xBF6A64", Offset = "0xBF6A64", VA = "0xBF6A64", Slot = "4")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xBFC870", Offset = "0xBFC870", VA = "0xBFC870", Slot = "5")]
		public virtual int GetExpense()
		{
			return default(int);
		}

		[Token(Token = "0x6000CBE")]
		public abstract void CollectRefs(Bounds bounds, QuestSceneSystem questSys);

		[Token(Token = "0x6000CBF")]
		protected abstract int GetProgress();

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xBFC878", Offset = "0xBFC878", VA = "0xBFC878", Slot = "8")]
		public virtual float GetRewardAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xBFC8B8", Offset = "0xBFC8B8", VA = "0xBFC8B8")]
		public float GetFullRewardAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC2")]
		public abstract QuestData GetData();

		[Token(Token = "0x6000CC3")]
		protected T GetFirstComponentInBounds<T>(Bounds bounds) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xBF6BF8", Offset = "0xBF6BF8", VA = "0xBF6BF8")]
		protected Quest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class QuestsData
	{
		[Serializable]
		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3511C", Offset = "0xA3511C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuestInfo, int> <>9__8_0;

			[Token(Token = "0x6001941")]
			[Address(RVA = "0xBFD158", Offset = "0xBFD158", VA = "0xBFD158")]
			public <>c()
			{
			}

			[Token(Token = "0x6001942")]
			[Address(RVA = "0xBFD160", Offset = "0xBFD160", VA = "0xBFD160")]
			internal int <GetQuestInfos>b__8_0(QuestInfo x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<QuestInfo> questInfos;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool shouldNotifyAboutQuestUpdateByVibration;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool anyQuestUpdated;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Type> orderedQuestTypes;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xBFC8F8", Offset = "0xBFC8F8", VA = "0xBFC8F8")]
		public void UpdateData(Quest[] quests)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xBFC974", Offset = "0xBFC974", VA = "0xBFC974")]
		public void UpdateData(Quest quest)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xBFCC3C", Offset = "0xBFCC3C", VA = "0xBFCC3C")]
		public bool AnyQuestUpdated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xBFCC4C", Offset = "0xBFCC4C", VA = "0xBFCC4C")]
		public bool ShouldNotifyAboutQuestUpdateByVibration()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xBFCB88", Offset = "0xBFCB88", VA = "0xBFCB88")]
		private void Add(Quest quest)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xBFCC5C", Offset = "0xBFCC5C", VA = "0xBFCC5C")]
		public IEnumerable<QuestInfo> GetQuestInfos(bool orderedInfo)
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xBFCD68", Offset = "0xBFCD68", VA = "0xBFCD68")]
		private static int GetPriority(Quest q)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xBFCE04", Offset = "0xBFCE04", VA = "0xBFCE04")]
		public QuestsData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public struct QuestInfo
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public QuestData data;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quest quest;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xAEB9F4", Offset = "0xAEB9F4", VA = "0xAEB9F4")]
		public QuestInfo(Quest quest, QuestData newData)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class StraighteningItemsQuest : Quest, IContainSprites
	{
		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3512C", Offset = "0xA3512C")]
		private sealed class <HandleItemPutDownDelayedCor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StraighteningItemsQuest <>4__this;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Item item;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001946")]
				[Address(RVA = "0xBFDDEC", Offset = "0xBFDDEC", VA = "0xBFDDEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001948")]
				[Address(RVA = "0xBFDE58", Offset = "0xBFDE58", VA = "0xBFDE58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001943")]
			[Address(RVA = "0xBFD76C", Offset = "0xBFD76C", VA = "0xBFD76C")]
			[DebuggerHidden]
			public <HandleItemPutDownDelayedCor>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001944")]
			[Address(RVA = "0xBFDD28", Offset = "0xBFDD28", VA = "0xBFDD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001945")]
			[Address(RVA = "0xBFDD2C", Offset = "0xBFDD2C", VA = "0xBFDD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001947")]
			[Address(RVA = "0xBFDDF4", Offset = "0xBFDDF4", VA = "0xBFDDF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3513C", Offset = "0xA3513C")]
		private sealed class <GetSprites>d__15 : IEnumerable<Sprite>, IEnumerable, IEnumerator<Sprite>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Sprite <>2__current;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StraighteningItemsQuest <>4__this;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<Item, bool>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002E8")]
			private Sprite System.Collections.Generic.IEnumerator<UnityEngine.Sprite>.Current
			{
				[Token(Token = "0x600194D")]
				[Address(RVA = "0xBFDC00", Offset = "0xBFDC00", VA = "0xBFDC00", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600194F")]
				[Address(RVA = "0xBFDC6C", Offset = "0xBFDC6C", VA = "0xBFDC6C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001949")]
			[Address(RVA = "0xBFD940", Offset = "0xBFD940", VA = "0xBFD940")]
			[DebuggerHidden]
			public <GetSprites>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0xBFD9F0", Offset = "0xBFD9F0", VA = "0xBFD9F0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600194B")]
			[Address(RVA = "0xBFDA64", Offset = "0xBFDA64", VA = "0xBFDA64", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600194C")]
			[Address(RVA = "0xBFDA0C", Offset = "0xBFDA0C", VA = "0xBFDA0C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600194E")]
			[Address(RVA = "0xBFDC08", Offset = "0xBFDC08", VA = "0xBFDC08", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001950")]
			[Address(RVA = "0xBFDC74", Offset = "0xBFDC74", VA = "0xBFDC74", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Sprite> System.Collections.Generic.IEnumerable<UnityEngine.Sprite>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001951")]
			[Address(RVA = "0xBFDD24", Offset = "0xBFDD24", VA = "0xBFDD24", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40009C4")]
		private const int STRAIGHT_ANGLE_ERROR_LIMIT = 25;

		[Token(Token = "0x40009C5")]
		private const float QUEST_REFRESH_DELAY = 1f;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item[] itemsToStraighten;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<Item, bool> itemsToCorrectPlacement;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int numberOfStraightenedItems;

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xBFD1C8", Offset = "0xBFD1C8", VA = "0xBFD1C8", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xBFD1D0", Offset = "0xBFD1D0", VA = "0xBFD1D0", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xBFD308", Offset = "0xBFD308", VA = "0xBFD308")]
		private void HandleItemPutDown(Item item)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xBFD3C8", Offset = "0xBFD3C8", VA = "0xBFD3C8")]
		private void RefreshDictOnStart()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xBFD4BC", Offset = "0xBFD4BC", VA = "0xBFD4BC")]
		private void RefreshFor(Item item)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xBFD348", Offset = "0xBFD348", VA = "0xBFD348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40AC0", Offset = "0xA40AC0")]
		private IEnumerator HandleItemPutDownDelayedCor(Item item)
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xBFD798", Offset = "0xBFD798", VA = "0xBFD798", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xBFD65C", Offset = "0xBFD65C", VA = "0xBFD65C")]
		private void RefreshProgress()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xBFD88C", Offset = "0xBFD88C", VA = "0xBFD88C", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xBFD8BC", Offset = "0xBFD8BC", VA = "0xBFD8BC", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40B24", Offset = "0xA40B24")]
		public IEnumerable<Sprite> GetSprites()
		{
			return null;
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xBFD978", Offset = "0xBFD978", VA = "0xBFD978")]
		public StraighteningItemsQuest()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class TrashQuest : Quest
	{
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3514C", Offset = "0xA3514C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x6001952")]
			[Address(RVA = "0xBFDFA0", Offset = "0xBFDFA0", VA = "0xBFDFA0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001953")]
			[Address(RVA = "0xBFE1AC", Offset = "0xBFE1AC", VA = "0xBFE1AC")]
			internal bool <CollectRefs>b__0(TrashPart x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TrashPart> trashParts;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numberOfTrashPartsToRemove;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xBFDE60", Offset = "0xBFDE60", VA = "0xBFDE60", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xBFDFA8", Offset = "0xBFDFA8", VA = "0xBFDFA8")]
		public void NotifyAboutTrashPartRemoval(TrashPart removedTrash)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xBFE040", Offset = "0xBFE040", VA = "0xBFE040", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xBFE134", Offset = "0xBFE134", VA = "0xBFE134", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xBFE19C", Offset = "0xBFE19C", VA = "0xBFE19C")]
		public TrashQuest()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class WallModificationQuest : Quest
	{
		[Token(Token = "0x20003D2")]
		public enum WallModQuestType
		{
			[Token(Token = "0x40014CF")]
			ApplyColorAndWallSurface,
			[Token(Token = "0x40014D0")]
			SurfaceOnly,
			[Token(Token = "0x40014D1")]
			ColorOnly
		}

		[Token(Token = "0x20003D3")]
		public enum WallSurface
		{
			[Token(Token = "0x40014D3")]
			BareWall,
			[Token(Token = "0x40014D4")]
			PlasterFinish
		}

		[Token(Token = "0x40009CC")]
		private const int QUEST_FINISHED_CAP = 90;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WallColorMarker markerPrefab;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PaintingConfiguration config;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Wall wallToModify;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PaintingConfiguration.PaletteColor paletteColor;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Item paintCan;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int[] subWallIndexesToModify;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WallModQuestType taskType;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private WallSurface targetSurface;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int allVerticesToModify;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[SerializeField]
		private Color targetColor;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int numberOfAlreadyModifiedVertices;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<WallColorMarker> markerInstances;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int currentProgress;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool justFinishedQuest;

		[Token(Token = "0x17000142")]
		public WallModQuestType TaskType
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xBFE1E8", Offset = "0xBFE1E8", VA = "0xBFE1E8")]
			get
			{
				return default(WallModQuestType);
			}
		}

		[Token(Token = "0x17000143")]
		public Item PaintCan
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xBFE1F0", Offset = "0xBFE1F0", VA = "0xBFE1F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xBFE1F8", Offset = "0xBFE1F8", VA = "0xBFE1F8", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xBFE3D0", Offset = "0xBFE3D0", VA = "0xBFE3D0", Slot = "5")]
		public override int GetExpense()
		{
			return default(int);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xBFE474", Offset = "0xBFE474", VA = "0xBFE474")]
		public (bool, Item) GetColorArgs()
		{
			return default((bool, Item));
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xBFE4EC", Offset = "0xBFE4EC", VA = "0xBFE4EC", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xBFE770", Offset = "0xBFE770", VA = "0xBFE770", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xBFEA2C", Offset = "0xBFEA2C", VA = "0xBFEA2C", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xBFEBA8", Offset = "0xBFEBA8", VA = "0xBFEBA8")]
		public WallModificationQuest()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class WaterPlantsQuest : Quest
	{
		[Serializable]
		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3515C", Offset = "0xA3515C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlantToWater, bool> <>9__2_0;

			[Token(Token = "0x6001955")]
			[Address(RVA = "0xBFF0EC", Offset = "0xBFF0EC", VA = "0xBFF0EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001956")]
			[Address(RVA = "0xBFF0F4", Offset = "0xBFF0F4", VA = "0xBFF0F4")]
			internal bool <Initialise>b__2_0(PlantToWater x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3516C", Offset = "0xA3516C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x6001957")]
			[Address(RVA = "0xBFEF7C", Offset = "0xBFEF7C", VA = "0xBFEF7C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001958")]
			[Address(RVA = "0xBFF118", Offset = "0xBFF118", VA = "0xBFF118")]
			internal bool <CollectRefs>b__0(PlantToWater plant)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<PlantToWater> plantsToWater;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int initialNumberOfPlantsToWater;

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xBFEC20", Offset = "0xBFEC20", VA = "0xBFEC20", Slot = "4")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xBFED30", Offset = "0xBFED30", VA = "0xBFED30")]
		public void NotifyAboutWateredPlant(PlantToWater wateredPlant)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xBFEDC8", Offset = "0xBFEDC8", VA = "0xBFEDC8", Slot = "7")]
		protected override int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xBFEE3C", Offset = "0xBFEE3C", VA = "0xBFEE3C", Slot = "6")]
		public override void CollectRefs(Bounds bounds, QuestSceneSystem questSys)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xBFEF84", Offset = "0xBFEF84", VA = "0xBFEF84", Slot = "9")]
		public override QuestData GetData()
		{
			return default(QuestData);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xBFF078", Offset = "0xBFF078", VA = "0xBFF078")]
		public WaterPlantsQuest()
		{
		}
	}
}
namespace _Code.Plants
{
	[Token(Token = "0x20001AC")]
	[SelectionBase]
	public class Vessel : Item
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private Vector3 TARGET_IN_HAND_POSITION;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private Vector3 TARGET_IN_HAND_ANGLES;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Transform parent;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private LayerMask interactableCollisionLayers;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private _Code.Tools.Hand leftHand;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private _Code.Tools.Hand rightHand;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xBF6774", Offset = "0xBF6774", VA = "0xBF6774", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xBF6800", Offset = "0xBF6800", VA = "0xBF6800", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xBF6864", Offset = "0xBF6864", VA = "0xBF6864", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xBF689C", Offset = "0xBF689C", VA = "0xBF689C")]
		public Vessel()
		{
		}
	}
}
namespace _Code.Pickupables
{
	[Token(Token = "0x20001AD")]
	[SelectionBase]
	public class Boomerang : Item
	{
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3517C", Offset = "0xA3517C")]
		private sealed class <Fly>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Boomerang <>4__this;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float forceMagnitude;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x170002EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195C")]
				[Address(RVA = "0xBF57C4", Offset = "0xBF57C4", VA = "0xBF57C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600195E")]
				[Address(RVA = "0xBF5830", Offset = "0xBF5830", VA = "0xBF5830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001959")]
			[Address(RVA = "0xBF5030", Offset = "0xBF5030", VA = "0xBF5030")]
			[DebuggerHidden]
			public <Fly>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600195A")]
			[Address(RVA = "0xBF557C", Offset = "0xBF557C", VA = "0xBF557C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600195B")]
			[Address(RVA = "0xBF5580", Offset = "0xBF5580", VA = "0xBF5580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600195D")]
			[Address(RVA = "0xBF57CC", Offset = "0xBF57CC", VA = "0xBF57CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private AnimationCurve timeToSpeed;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private ParticleSystem hitParticles;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x40009E6")]
		private const float MIN_FORCE_TO_THROW = 12f;

		[Token(Token = "0x40009E7")]
		private const float FLIGHT_HORIZONTAL_TRANSLATION = 2f;

		[Token(Token = "0x40009E8")]
		private const float FENCE_HEIGHT = 2f;

		[Token(Token = "0x40009E9")]
		private const float FLY_TIME = 5f;

		[Token(Token = "0x40009EA")]
		private const float PICKUP_ASSIST_MAX_DISTANCE = 0.25f;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private readonly Vector3 BOOMERANG_TARGET_IN_HAND_POSITION;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private readonly Vector3 BOOMERANG_TARGET_IN_HAND_ANGLES;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector3 rotationOrientationVector;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float angle;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Transform handTransform;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private Coroutine flyCor;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Vector3 forwardDirectionInThrowTime;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Vector3 rightDirectionInThrowTime;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private _Code.Tools.Hand leftHand;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private _Code.Tools.Hand rightHand;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private bool handAssistSubscriptionActive;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Transform parent;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private LayerMask interactableCollisionLayers;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xBF4694", Offset = "0xBF4694", VA = "0xBF4694", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xBF4720", Offset = "0xBF4720", VA = "0xBF4720", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xBF48E0", Offset = "0xBF48E0", VA = "0xBF48E0", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xBF4D04", Offset = "0xBF4D04", VA = "0xBF4D04", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xBF4D68", Offset = "0xBF4D68", VA = "0xBF4D68", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xBF4DA0", Offset = "0xBF4DA0", VA = "0xBF4DA0")]
		private void HandleLeftGrip(GeneralArgs obj)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xBF4EE8", Offset = "0xBF4EE8", VA = "0xBF4EE8")]
		private void HandleRightGrip(GeneralArgs obj)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xBF4BF4", Offset = "0xBF4BF4", VA = "0xBF4BF4")]
		private void EnablePickupAssist()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xBF47D4", Offset = "0xBF47D4", VA = "0xBF47D4")]
		private void DisablePickupAssist()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xBF4B24", Offset = "0xBF4B24", VA = "0xBF4B24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40B88", Offset = "0xA40B88")]
		private IEnumerator Fly(float forceMagnitude)
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xBF505C", Offset = "0xBF505C", VA = "0xBF505C")]
		private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p3, float forceMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xBF52A8", Offset = "0xBF52A8", VA = "0xBF52A8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xBF5410", Offset = "0xBF5410", VA = "0xBF5410")]
		private void OnCollisionExit(Collision other)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xBF4788", Offset = "0xBF4788", VA = "0xBF4788")]
		private void StopFlyCor()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xBF54CC", Offset = "0xBF54CC", VA = "0xBF54CC")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xBF54D0", Offset = "0xBF54D0", VA = "0xBF54D0")]
		public Boomerang()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33E18", Offset = "0xA33E18")]
	public class CollisionDetectionConfiguration : ScriptableObject
	{
		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask interactableLayer;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask toolBeltLayer;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask itemCollisionLayers;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask pickupableCollisionLayers;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask physicsReloadObjectsLayers;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask carpetCollisionLayers;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask pickupableLayers;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask collisionFreeLayer;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask itemAndCarriedLayer;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask interactionElementsLayer;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask distanceGrabBlockLayers;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LayerMask dirtLayer;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float overlapSphereRadius;

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xBF5838", Offset = "0xBF5838", VA = "0xBF5838")]
		public LayerMask GetDirtLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xBF5840", Offset = "0xBF5840", VA = "0xBF5840")]
		public CollisionDetectionConfiguration()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class CollisionDetector : MonoBehaviour
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CollisionDetectionConfiguration config;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] colliders;

		[Token(Token = "0x6000D04")]
		public T GetInteractable<T>(Transform collisionOrigin, [Optional] Pickupable exception) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		public T GetInteractable<T>(Vector3 collisionPoint, [Optional] Pickupable exception) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		public T GetInteractionElement<T>(Transform collisionOrigin) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xBF5848", Offset = "0xBF5848", VA = "0xBF5848")]
		public bool GetDirtsToClean(Vector3 position, float radius, out int count, out Collider[] dirtCollidersBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xBF5934", Offset = "0xBF5934", VA = "0xBF5934")]
		public CollisionDetector()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[SelectionBase]
	public class ConfettiGun : Item
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private Vector3 TARGET_IN_HAND_POSITION;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private Vector3 TARGET_IN_HAND_ANGLES;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private AudioClip triggerSound;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private AudioClip pickupSound;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private ConfettiFx confetti;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private Transform barrelEnd;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Transform parent;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xBF59A0", Offset = "0xBF59A0", VA = "0xBF59A0", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xBF59EC", Offset = "0xBF59EC", VA = "0xBF59EC", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xBF5A64", Offset = "0xBF5A64", VA = "0xBF5A64", Slot = "27")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA40BEC", Offset = "0xA40BEC")]
		public override void UseOneTime()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xBF5B24", Offset = "0xBF5B24", VA = "0xBF5B24", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xBF5B5C", Offset = "0xBF5B5C", VA = "0xBF5B5C")]
		public ConfettiGun()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class DeadZoneSystem : MonoBehaviour
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CollisionDetectionConfiguration config;

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xBF5BF8", Offset = "0xBF5BF8", VA = "0xBF5BF8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xBF5D54", Offset = "0xBF5D54", VA = "0xBF5D54")]
		public DeadZoneSystem()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public interface ICanBeSold
	{
		[Token(Token = "0x17000144")]
		bool CanBeSold
		{
			[Token(Token = "0x6000D12")]
			get;
			[Token(Token = "0x6000D13")]
			set;
		}

		[Token(Token = "0x6000D11")]
		void HandleSell();
	}
	[Token(Token = "0x20001B3")]
	public class SimplePickapable : Pickupable
	{
		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3518C", Offset = "0xA3518C")]
		private sealed class <DistanceGrabCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimplePickapable <>4__this;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform t;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x170002EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001962")]
				[Address(RVA = "0xBF6700", Offset = "0xBF6700", VA = "0xBF6700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001964")]
				[Address(RVA = "0xBF676C", Offset = "0xBF676C", VA = "0xBF676C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600195F")]
			[Address(RVA = "0xBF607C", Offset = "0xBF607C", VA = "0xBF607C")]
			[DebuggerHidden]
			public <DistanceGrabCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001960")]
			[Address(RVA = "0xBF6444", Offset = "0xBF6444", VA = "0xBF6444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001961")]
			[Address(RVA = "0xBF6448", Offset = "0xBF6448", VA = "0xBF6448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001963")]
			[Address(RVA = "0xBF6708", Offset = "0xBF6708", VA = "0xBF6708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		[SerializeField]
		private bool clampAngularVelocity;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform itemSocket;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Coroutine distanceGrabCoroutine;

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xBF5D5C", Offset = "0xBF5D5C", VA = "0xBF5D5C", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xBF5DA0", Offset = "0xBF5DA0", VA = "0xBF5DA0", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xBF5F48", Offset = "0xBF5F48", VA = "0xBF5F48", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xBF5EC8", Offset = "0xBF5EC8", VA = "0xBF5EC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40C24", Offset = "0xA40C24")]
		private IEnumerator DistanceGrabCoroutine(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xBF60A8", Offset = "0xBF60A8", VA = "0xBF60A8", Slot = "24")]
		public override void RefreshIntersections()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xBF60E0", Offset = "0xBF60E0", VA = "0xBF60E0", Slot = "23")]
		protected override void AddForce(_Code.Tools.Hand controller)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xBF62CC", Offset = "0xBF62CC", VA = "0xBF62CC", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xBF6304", Offset = "0xBF6304", VA = "0xBF6304", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xBF6430", Offset = "0xBF6430", VA = "0xBF6430", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xBF6434", Offset = "0xBF6434", VA = "0xBF6434")]
		public SimplePickapable()
		{
		}
	}
}
namespace _Code.Miscellaneous
{
	[Token(Token = "0x20001B4")]
	public static class OverlapUtils
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int RESULT_LENGTH;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Collider[] results;

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xE20F58", Offset = "0xE20F58", VA = "0xE20F58")]
		public static int OverlapNonAlloc(Collider collider, out Collider[] overlapColliders, Quaternion objectsRotation, int layerMask = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xE216D0", Offset = "0xE216D0", VA = "0xE216D0")]
		public static int OverlapBoxNonAlloc(Transform objectTransform, Bounds bounds, float boundsScale, out Collider[] overlapColliders, LayerMask mask)
		{
			return default(int);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xE2192C", Offset = "0xE2192C", VA = "0xE2192C")]
		public static Collider[] OverlapBoxNonAllocTranslated(Vector3 boundsSize, Vector3 center, Quaternion rotation, LayerMask mask)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xE21AA8", Offset = "0xE21AA8", VA = "0xE21AA8")]
		public static int OverlapNonAlloc(Collider collider, out Collider[] overlapColliders, Quaternion objectsRotation, float sizeMultiplier, int layerMask = -1, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(int);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xE21058", Offset = "0xE21058", VA = "0xE21058")]
		public static int OverlapNonAlloc(Collider collider, out Collider[] overlapColliders, Quaternion objectsRotation, Vector3 sizeMultiplier, int layerMask = -1, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(int);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xE21BB8", Offset = "0xE21BB8", VA = "0xE21BB8")]
		public static Collider GetClosestColliderInsideSphere(Vector3 pos, float radius, LayerMask mask)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xE21860", Offset = "0xE21860", VA = "0xE21860")]
		private static void ClearResults()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class PoissonSampler
	{
		[Serializable]
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3519C", Offset = "0xA3519C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Vector3> <>9__2_0;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Vector3> <>9__3_0;

			[Token(Token = "0x6001966")]
			[Address(RVA = "0xBF409C", Offset = "0xBF409C", VA = "0xBF409C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001967")]
			[Address(RVA = "0xBF40A4", Offset = "0xBF40A4", VA = "0xBF40A4")]
			internal void <.ctor>b__2_0(Vector3 samplePosition)
			{
			}

			[Token(Token = "0x6001968")]
			[Address(RVA = "0xBF4170", Offset = "0xBF4170", VA = "0xBF4170")]
			internal void <.ctor>b__3_0(Vector3 samplePosition)
			{
			}
		}

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<Vector3> sampleAction;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Vector3> defaultSampleAction;

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xBF3818", Offset = "0xBF3818", VA = "0xBF3818")]
		public PoissonSampler()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xBF3914", Offset = "0xBF3914", VA = "0xBF3914")]
		public PoissonSampler(Action<Vector3> sampleAction)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xBF3A18", Offset = "0xBF3A18", VA = "0xBF3A18")]
		public void SetSampleAction(Action<Vector3> sampleAction)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xBF3A20", Offset = "0xBF3A20", VA = "0xBF3A20")]
		public void Sample(Vector3 originPosition, float areaWidth, float sampleRadiusFromOtherSamples = 0.4f)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class RandomSoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] audioClips;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xBF423C", Offset = "0xBF423C", VA = "0xBF423C")]
		public void PlayRandomSoundIfNotPlaying()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xBF4344", Offset = "0xBF4344", VA = "0xBF4344")]
		public void StopPrevAndPlayRandomSound()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xBF4280", Offset = "0xBF4280", VA = "0xBF4280")]
		private void PlayRandom()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xBF438C", Offset = "0xBF438C", VA = "0xBF438C")]
		public RandomSoundPlayer()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ToolTriggerAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform trigger;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Quaternion pressedRotation;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Quaternion unpressedRotation;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xBF4394", Offset = "0xBF4394", VA = "0xBF4394")]
		public void SetRotation(float t)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xBF4480", Offset = "0xBF4480", VA = "0xBF4480")]
		public ToolTriggerAnimator()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class TreeAnimated : MonoBehaviour
	{
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351AC", Offset = "0xA351AC")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TreeAnimated <>4__this;

			[Token(Token = "0x170002EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600196C")]
				[Address(RVA = "0xBF4620", Offset = "0xBF4620", VA = "0xBF4620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600196E")]
				[Address(RVA = "0xBF468C", Offset = "0xBF468C", VA = "0xBF468C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0xBF44FC", Offset = "0xBF44FC", VA = "0xBF44FC")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600196A")]
			[Address(RVA = "0xBF4530", Offset = "0xBF4530", VA = "0xBF4530", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600196B")]
			[Address(RVA = "0xBF4534", Offset = "0xBF4534", VA = "0xBF4534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600196D")]
			[Address(RVA = "0xBF4628", Offset = "0xBF4628", VA = "0xBF4628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xBF4488", Offset = "0xBF4488", VA = "0xBF4488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40C88", Offset = "0xA40C88")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xBF4528", Offset = "0xBF4528", VA = "0xBF4528")]
		public TreeAnimated()
		{
		}
	}
}
namespace _Code.Tutorial
{
	[Token(Token = "0x20001B9")]
	public class TutorialSubSystem : MonoBehaviour, IRequirePlayerSubsystems, IRequireVRObjects
	{
		[Token(Token = "0x20003DA")]
		public enum TutorialType
		{
			[Token(Token = "0x40014EA")]
			Spatuling = 0,
			[Token(Token = "0x40014EB")]
			Painting = 1,
			[Token(Token = "0x40014EC")]
			Hammering = 2,
			[Token(Token = "0x40014ED")]
			TrashPicking = 3,
			[Token(Token = "0x40014EE")]
			Cleaning = 4,
			[Token(Token = "0x40014EF")]
			PaintCanRefill = 5,
			[Token(Token = "0x40014F0")]
			ToolBelt = 6,
			[Token(Token = "0x40014F1")]
			ToolBeltCall = 14,
			[Token(Token = "0x40014F2")]
			Teleport = 7,
			[Token(Token = "0x40014F3")]
			GrabbingAndPlacingItems = 8,
			[Token(Token = "0x40014F4")]
			Interactions = 9,
			[Token(Token = "0x40014F5")]
			TabletOpen = 10,
			[Token(Token = "0x40014F6")]
			TaskListOpen = 11,
			[Token(Token = "0x40014F7")]
			NewMail = 12,
			[Token(Token = "0x40014F8")]
			NewItem = 13,
			[Token(Token = "0x40014F9")]
			SkillPoint = 15,
			[Token(Token = "0x40014FA")]
			TabletButtonPress = 19,
			[Token(Token = "0x40014FB")]
			BasicTutorialGrab = 16,
			[Token(Token = "0x40014FC")]
			BasicTutorialTrashPicker = 17,
			[Token(Token = "0x40014FD")]
			BasicTutorialInteractionUsage = 18,
			[Token(Token = "0x40014FE")]
			AlexAppraiser = 20,
			[Token(Token = "0x40014FF")]
			KamilAppraiser = 21,
			[Token(Token = "0x4001500")]
			YuriiAppraiser = 22,
			[Token(Token = "0x4001501")]
			TaiaAppraiser = 23,
			[Token(Token = "0x4001502")]
			PatrykAppraiser = 24,
			[Token(Token = "0x4001503")]
			BusinessmanAppraiser = 25,
			[Token(Token = "0x4001504")]
			StudentAppraiser = 26,
			[Token(Token = "0x4001505")]
			JeloAppraiser = 27,
			[Token(Token = "0x4001506")]
			Mystery = 28,
			[Token(Token = "0x4001507")]
			Artist = 29
		}

		[Serializable]
		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351BC", Offset = "0xA351BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, Sprite> <>9__37_0;

			[Token(Token = "0x6001970")]
			[Address(RVA = "0xCFDA5C", Offset = "0xCFDA5C", VA = "0xCFDA5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001971")]
			[Address(RVA = "0xCFDA64", Offset = "0xCFDA64", VA = "0xCFDA64")]
			internal Sprite <GetNewItemSprites>b__37_0(Item x)
			{
				return null;
			}
		}

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351CC", Offset = "0xA351CC")]
		private sealed class <DisplayCor>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialSubSystem <>4__this;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialType tutorialType;

			[Token(Token = "0x170002F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001975")]
				[Address(RVA = "0xCFDD0C", Offset = "0xCFDD0C", VA = "0xCFDD0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001977")]
				[Address(RVA = "0xCFDD78", Offset = "0xCFDD78", VA = "0xCFDD78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001972")]
			[Address(RVA = "0xCFD7CC", Offset = "0xCFD7CC", VA = "0xCFD7CC")]
			[DebuggerHidden]
			public <DisplayCor>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001973")]
			[Address(RVA = "0xCFDA8C", Offset = "0xCFDA8C", VA = "0xCFDA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0xCFDA90", Offset = "0xCFDA90", VA = "0xCFDA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0xCFDD14", Offset = "0xCFDD14", VA = "0xCFDD14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351DC", Offset = "0xA351DC")]
		private sealed class <PlayTutorial>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialSubSystem <>4__this;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialData tutorialData;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <tutorialSpriteIndex>5__2;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__3;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600197B")]
				[Address(RVA = "0xCFDF60", Offset = "0xCFDF60", VA = "0xCFDF60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600197D")]
				[Address(RVA = "0xCFDFCC", Offset = "0xCFDFCC", VA = "0xCFDFCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xCFD91C", Offset = "0xCFD91C", VA = "0xCFD91C")]
			[DebuggerHidden]
			public <PlayTutorial>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0xCFDD80", Offset = "0xCFDD80", VA = "0xCFDD80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600197A")]
			[Address(RVA = "0xCFDD84", Offset = "0xCFDD84", VA = "0xCFDD84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600197C")]
			[Address(RVA = "0xCFDF68", Offset = "0xCFDF68", VA = "0xCFDF68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderItemContainer group;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialsData tutorialsData;

		[Token(Token = "0x4000A1F")]
		private const float QUEUE_DELAY = 1f;

		[Token(Token = "0x4000A20")]
		private const string HOLOGRAM_DISPLAY_TRIGGER = "show";

		[Token(Token = "0x4000A21")]
		private const string HOLOGRAM_HIDE_TRIGGER = "hide";

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform myTransform;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool enable;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform parentTransform;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject itemRendererParent;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator hologramAnimator;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform center;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpriteRenderer renderer;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteRenderer[] newItemRenderers;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material hologramSpriteMat;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int index;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool paused;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Queue<TutorialType> statementQueue;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private QuestAndMascotPositioner positioner;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool corRunning;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InputSystem input;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private _Code.VR.InputSystem.Hand handType;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TutorialData currentTutorialData;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool opened;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int transitionBlendShaderID;

		[Token(Token = "0x17000145")]
		public bool IsTutorialPlaying
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xCFD484", Offset = "0xCFD484", VA = "0xCFD484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<TutorialType> tutorialFinished
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xCFD33C", Offset = "0xCFD33C", VA = "0xCFD33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40CEC", Offset = "0xA40CEC")]
			add
			{
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xCFD3E0", Offset = "0xCFD3E0", VA = "0xCFD3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40CFC", Offset = "0xA40CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xCFC6CC", Offset = "0xCFC6CC", VA = "0xCFC6CC")]
		public void Initialise(QuestAndMascotPositioner positioner)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCFD48C", Offset = "0xCFD48C", VA = "0xCFD48C")]
		public void Reset(bool displayQuestUiHard = true)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCFD5D0", Offset = "0xCFD5D0", VA = "0xCFD5D0")]
		private void ResetOnSceneLoad()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xCFD564", Offset = "0xCFD564", VA = "0xCFD564")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xCFD5D8", Offset = "0xCFD5D8", VA = "0xCFD5D8")]
		public void SetCurrentHandType(_Code.VR.InputSystem.Hand type)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xCFD5E0", Offset = "0xCFD5E0", VA = "0xCFD5E0")]
		private static IEnumerable<Sprite> GetNewItemSprites()
		{
			return null;
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xCEEAF8", Offset = "0xCEEAF8", VA = "0xCEEAF8")]
		public void Display(TutorialType tutorialType)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xCF9628", Offset = "0xCF9628", VA = "0xCF9628")]
		public void DisplayToolUsage(ToolBelt.ToolType type)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xCFD748", Offset = "0xCFD748", VA = "0xCFD748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40D0C", Offset = "0xA40D0C")]
		private IEnumerator DisplayCor(TutorialType tutorialType)
		{
			return null;
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xCFD7F8", Offset = "0xCFD7F8", VA = "0xCFD7F8", Slot = "4")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xCFD818", Offset = "0xCFD818", VA = "0xCFD818", Slot = "5")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xCFD820", Offset = "0xCFD820", VA = "0xCFD820")]
		private bool IsPlayerLookingAway(TutorialData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xCFD828", Offset = "0xCFD828", VA = "0xCFD828")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xCFD844", Offset = "0xCFD844", VA = "0xCFD844")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xCFD888", Offset = "0xCFD888", VA = "0xCFD888")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40D70", Offset = "0xA40D70")]
		private IEnumerator PlayTutorial(TutorialData tutorialData)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xCFD948", Offset = "0xCFD948", VA = "0xCFD948")]
		private void SetItemRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xCFD968", Offset = "0xCFD968", VA = "0xCFD968")]
		private void SetMainRendererEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xCFD988", Offset = "0xCFD988", VA = "0xCFD988")]
		public TutorialSubSystem()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class TutorialSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireSceneSystems
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialSubSystem.TutorialType[] tutorialStatementsToDisplay;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool jobScene;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TutorialSubSystem tutorialSys;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39D1C", Offset = "0xA39D1C")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RenderingSceneSystem renderingSys;

		[Token(Token = "0x17000146")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xCFCF28", Offset = "0xCFCF28", VA = "0xCFCF28", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40DD4", Offset = "0xA40DD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xCFCF30", Offset = "0xCFCF30", VA = "0xCFCF30", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40DE4", Offset = "0xA40DE4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xCFCF38", Offset = "0xCFCF38", VA = "0xCFCF38", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xCFD154", Offset = "0xCFD154", VA = "0xCFD154")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xCFD234", Offset = "0xCFD234", VA = "0xCFD234")]
		private void AddRenderItems()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xCFD2E8", Offset = "0xCFD2E8", VA = "0xCFD2E8")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xCFD2EC", Offset = "0xCFD2EC", VA = "0xCFD2EC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xCFD2F4", Offset = "0xCFD2F4", VA = "0xCFD2F4", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xCFD314", Offset = "0xCFD314", VA = "0xCFD314", Slot = "9")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xCFD334", Offset = "0xCFD334", VA = "0xCFD334")]
		public TutorialSceneSystem()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class QuestAndMascotPositioner : MonoBehaviour, IRequireVRObjects, IInitialise
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialSubSystem tutorialSystem;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39D4C", Offset = "0xA39D4C")]
		private Transform <Watch>k__BackingField;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39D5C", Offset = "0xA39D5C")]
		private Transform <CurrentUi>k__BackingField;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuestDataUI questDataUi;

		[Token(Token = "0x4000A41")]
		private const float QUEST_HAND_MAX_ANGLE_DEVIATION_TO_ENABLE = 25f;

		[Token(Token = "0x4000A42")]
		private const float QUEST_HAND_MAX_ANGLE_DEVIATION_TO_DISABLE = 75f;

		[Token(Token = "0x4000A43")]
		private const float QUEST_UI_FORWARD_OFFSET = 0.125f;

		[Token(Token = "0x4000A44")]
		private const float MASCOT_FORWARD_OFFSET = 0f;

		[Token(Token = "0x4000A45")]
		private const float QUEST_UI_UP_OFFSET = 0.11f;

		[Token(Token = "0x4000A46")]
		private const float MASCOT_UP_OFFSET = 0f;

		[Token(Token = "0x4000A47")]
		private const float ANDROID_POSITION_LERP_SPEED = 0.125f;

		[Token(Token = "0x4000A48")]
		private const float POSITION_LERP_SPEED = 9f;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float upOffset;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float forwardOffset;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float angle;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool trackingTutorialHologram;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform watchLocalUpDir;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool questVisible;

		[Token(Token = "0x17000147")]
		public Transform Watch
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xCFC630", Offset = "0xCFC630", VA = "0xCFC630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40DF4", Offset = "0xA40DF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xCFC638", Offset = "0xCFC638", VA = "0xCFC638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E04", Offset = "0xA40E04")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Transform CurrentUi
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xCFC640", Offset = "0xCFC640", VA = "0xCFC640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E14", Offset = "0xA40E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xCFC648", Offset = "0xCFC648", VA = "0xCFC648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E24", Offset = "0xA40E24")]
			set
			{
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xCFC650", Offset = "0xCFC650", VA = "0xCFC650", Slot = "5")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xCFC7B8", Offset = "0xCFC7B8", VA = "0xCFC7B8")]
		public void SetCurrentHand(UIHand hand, _Code.VR.InputSystem.Hand type)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xCFC7F0", Offset = "0xCFC7F0", VA = "0xCFC7F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xCFCC6C", Offset = "0xCFCC6C", VA = "0xCFCC6C")]
		public void PositionTutorialHologram()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xCFCD40", Offset = "0xCFCD40", VA = "0xCFCD40")]
		public void PositionQuestUi(bool displayHard = true)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xCFCC1C", Offset = "0xCFCC1C", VA = "0xCFCC1C")]
		private void UpdateQuestDataConstantVisibility()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xCFC814", Offset = "0xCFC814", VA = "0xCFC814")]
		private void UpdateCurrentUiPosition()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xCFCE00", Offset = "0xCFCE00", VA = "0xCFCE00")]
		private bool HandRotationIsCorrect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xCFCF04", Offset = "0xCFCF04", VA = "0xCFCF04", Slot = "4")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xCFCEFC", Offset = "0xCFCEFC", VA = "0xCFCEFC")]
		private static float GetMovementSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xCFCF0C", Offset = "0xCFCF0C", VA = "0xCFCF0C")]
		public QuestAndMascotPositioner()
		{
		}
	}
}
namespace _Code.Interactions
{
	[Token(Token = "0x20001BC")]
	public class AssemblySinkInteractionHandler : RotationInteraction
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AssemblyManager assemblyManager;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39D7C", Offset = "0xA39D7C")]
		private TapWaterFxHandler sinkFX;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Item sinkItem;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float flowingWaterAngle;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool sinkIsOpen;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hasItem;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		private bool isInited;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xE14F38", Offset = "0xE14F38", VA = "0xE14F38", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xE151F4", Offset = "0xE151F4", VA = "0xE151F4")]
		public void SetInited()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xE15288", Offset = "0xE15288", VA = "0xE15288", Slot = "8")]
		protected override void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xE153B0", Offset = "0xE153B0", VA = "0xE153B0")]
		public AssemblySinkInteractionHandler()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class DoorRotationInteraction : RotationInteraction
	{
		[Token(Token = "0x17000149")]
		public bool IsClosed
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xE15400", Offset = "0xE15400", VA = "0xE15400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xE15414", Offset = "0xE15414", VA = "0xE15414", Slot = "8")]
		protected override void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xE15714", Offset = "0xE15714", VA = "0xE15714")]
		public DoorRotationInteraction()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class DragInteraction : Interaction
	{
		[Serializable]
		[Token(Token = "0x20003DE")]
		public struct SnapSettings
		{
			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float percentage;
		}

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform objectToMove;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PressInRangeActionOverlap interactionTrigger;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 startPosition;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 endPosition;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SnapSettings onStartSnap;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SnapSettings onEndSnap;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool useSounds;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip openClip;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip closeClip;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool drawPath;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LinearTranslationProgress translationProgressChecker;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float interactionProgress;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform thisTransform;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vibration vibration;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 offset;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool snapVibrationTriggered;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool alreadyClosedOnce;

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xE1573C", Offset = "0xE1573C", VA = "0xE1573C", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xE15930", Offset = "0xE15930", VA = "0xE15930", Slot = "5")]
		public override void BreakInteraction()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xE1594C", Offset = "0xE1594C", VA = "0xE1594C")]
		public bool IsOpened()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xE15840", Offset = "0xE15840", VA = "0xE15840")]
		private void InitialiseAndSetInteractionTriggerActions(Subsystems playerSubsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xE1599C", Offset = "0xE1599C", VA = "0xE1599C")]
		private void UpdateProgressAndMove(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xE15C68", Offset = "0xE15C68", VA = "0xE15C68")]
		private void VibrateAndPlaySound(_Code.VR.InputSystem.Hand hand)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xE15D1C", Offset = "0xE15D1C", VA = "0xE15D1C")]
		private void OnStartInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xE15CC8", Offset = "0xE15CC8", VA = "0xE15CC8")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xE15AA8", Offset = "0xE15AA8", VA = "0xE15AA8")]
		private void UpdateProgress(_Code.VR.InputSystem.Hand hand)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xE15E2C", Offset = "0xE15E2C", VA = "0xE15E2C")]
		private Vector3 CalculateAndReturnControllerLocalPosition(_Code.VR.InputSystem.Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xE15D2C", Offset = "0xE15D2C", VA = "0xE15D2C")]
		private void CalculateControllerPositionOffset(GeneralArgs hand)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xE15E90", Offset = "0xE15E90", VA = "0xE15E90")]
		private float GetLerpTimeWithSnap(Vector3 controllerPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xE15F00", Offset = "0xE15F00", VA = "0xE15F00")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xE16010", Offset = "0xE16010", VA = "0xE16010")]
		public DragInteraction()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class GrabWithSnap : MonoBehaviour
	{
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xE16034", Offset = "0xE16034", VA = "0xE16034")]
		public GrabWithSnap()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class PhysicalObject : MonoBehaviour
	{
		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351EC", Offset = "0xA351EC")]
		private sealed class <TurnOnPhysicsCor>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhysicalObject <>4__this;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x170002F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001981")]
				[Address(RVA = "0xE1E58C", Offset = "0xE1E58C", VA = "0xE1E58C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001983")]
				[Address(RVA = "0xE1E5F8", Offset = "0xE1E5F8", VA = "0xE1E5F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600197E")]
			[Address(RVA = "0xE1DAF4", Offset = "0xE1DAF4", VA = "0xE1DAF4")]
			[DebuggerHidden]
			public <TurnOnPhysicsCor>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600197F")]
			[Address(RVA = "0xE1E3F0", Offset = "0xE1E3F0", VA = "0xE1E3F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001980")]
			[Address(RVA = "0xE1E3F4", Offset = "0xE1E3F4", VA = "0xE1E3F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001982")]
			[Address(RVA = "0xE1E594", Offset = "0xE1E594", VA = "0xE1E594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA351FC", Offset = "0xA351FC")]
		private sealed class <DelayedDisablePhysicsCor>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhysicalObject <>4__this;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001987")]
				[Address(RVA = "0xE1E37C", Offset = "0xE1E37C", VA = "0xE1E37C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001989")]
				[Address(RVA = "0xE1E3E8", Offset = "0xE1E3E8", VA = "0xE1E3E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001984")]
			[Address(RVA = "0xE1DCFC", Offset = "0xE1DCFC", VA = "0xE1DCFC")]
			[DebuggerHidden]
			public <DelayedDisablePhysicsCor>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001985")]
			[Address(RVA = "0xE1E2BC", Offset = "0xE1E2BC", VA = "0xE1E2BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001986")]
			[Address(RVA = "0xE1E2C0", Offset = "0xE1E2C0", VA = "0xE1E2C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0xE1E384", Offset = "0xE1E384", VA = "0xE1E384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3520C", Offset = "0xA3520C")]
		private sealed class <DelayedDisableGameObjectCor>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhysicalObject <>4__this;

			[Token(Token = "0x170002F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198D")]
				[Address(RVA = "0xE1E248", Offset = "0xE1E248", VA = "0xE1E248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198F")]
				[Address(RVA = "0xE1E2B4", Offset = "0xE1E2B4", VA = "0xE1E2B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198A")]
			[Address(RVA = "0xE1DD28", Offset = "0xE1DD28", VA = "0xE1DD28")]
			[DebuggerHidden]
			public <DelayedDisableGameObjectCor>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600198B")]
			[Address(RVA = "0xE1E1D0", Offset = "0xE1E1D0", VA = "0xE1E1D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0xE1E1D4", Offset = "0xE1E1D4", VA = "0xE1E1D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0xE1E250", Offset = "0xE1E250", VA = "0xE1E250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3521C", Offset = "0xA3521C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__37_0;

			[Token(Token = "0x6001991")]
			[Address(RVA = "0xE1E168", Offset = "0xE1E168", VA = "0xE1E168")]
			public <>c()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0xE1E170", Offset = "0xE1E170", VA = "0xE1E170")]
			internal bool <SetupBounds>b__37_0(Collider x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A6B")]
		private const float DISABLE_ANIMATION_DURATION = 0.3f;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxCollider mainCollider;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform myTransform;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39E88", Offset = "0xA39E88")]
		private bool <IsDisposed>k__BackingField;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39E98", Offset = "0xA39E98")]
		private bool <IsPhysicsActive>k__BackingField;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Rigidbody rb;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine delayedDisablePhysicsCor;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool shouldReloadPhysics;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly WaitForSeconds waitForFiveSeconds;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds waitForAnimationEnd;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine simulatePhysicsCoroutine;

		[Token(Token = "0x1700014A")]
		public Vector3 CentralPoint
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xE1AA44", Offset = "0xE1AA44", VA = "0xE1AA44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014B")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xE1D9C8", Offset = "0xE1D9C8", VA = "0xE1D9C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E34", Offset = "0xA40E34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xE1D9D0", Offset = "0xE1D9D0", VA = "0xE1D9D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E44", Offset = "0xA40E44")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		protected bool IsPhysicsActive
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xE1D9DC", Offset = "0xE1D9DC", VA = "0xE1D9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E54", Offset = "0xA40E54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xE1D9E4", Offset = "0xE1D9E4", VA = "0xE1D9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40E64", Offset = "0xA40E64")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xE0EF90", Offset = "0xE0EF90", VA = "0xE0EF90", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xE1D9F0", Offset = "0xE1D9F0", VA = "0xE1D9F0", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xE1D9F8", Offset = "0xE1D9F8", VA = "0xE1D9F8")]
		public void MarkAsPhysicsReloadCandidate(bool toggle)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xE1DA04", Offset = "0xE1DA04", VA = "0xE1DA04", Slot = "6")]
		public virtual bool ShouldReloadPhysics()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE17DF8", Offset = "0xE17DF8", VA = "0xE17DF8", Slot = "7")]
		public virtual void SelfDisable(bool skipAnimation = false)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xE1B4D4", Offset = "0xE1B4D4", VA = "0xE1B4D4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA40E74", Offset = "0xA40E74")]
		public virtual void TurnOnPhysicsForFiveSeconds()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE1B444", Offset = "0xE1B444", VA = "0xE1B444")]
		public void StopPhysicsReloadCor()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xE1DA80", Offset = "0xE1DA80", VA = "0xE1DA80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40EAC", Offset = "0xA40EAC")]
		private IEnumerator TurnOnPhysicsCor()
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xE1DB20", Offset = "0xE1DB20", VA = "0xE1DB20")]
		public void ReloadPositionByTemporaryEnablingPhysics()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xE1DB50", Offset = "0xE1DB50", VA = "0xE1DB50")]
		private void DelayedDisablePhysics()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xE1AC10", Offset = "0xE1AC10", VA = "0xE1AC10")]
		protected void CancelDelayedDisablePhysics()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xE1DC30", Offset = "0xE1DC30", VA = "0xE1DC30", Slot = "9")]
		public virtual void SetPhysicsEnabled(bool value)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xE1DBBC", Offset = "0xE1DBBC", VA = "0xE1DBBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40F10", Offset = "0xA40F10")]
		private IEnumerator DelayedDisablePhysicsCor()
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xE1DA0C", Offset = "0xE1DA0C", VA = "0xE1DA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40F74", Offset = "0xA40F74")]
		private IEnumerator DelayedDisableGameObjectCor()
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xE1AA50", Offset = "0xE1AA50", VA = "0xE1AA50")]
		public Vector3 GetWorldSpaceCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xE1DD54", Offset = "0xE1DD54", VA = "0xE1DD54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA40FD8", Offset = "0xA40FD8")]
		public void SetupCenterAndBounds()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xE1DDB4", Offset = "0xE1DDB4", VA = "0xE1DDB4")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xE1DF40", Offset = "0xE1DF40", VA = "0xE1DF40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41010", Offset = "0xA41010")]
		protected void SetupBounds()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE1E084", Offset = "0xE1E084", VA = "0xE1E084")]
		public PhysicalObject()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class RotationAngleController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E3")]
		public enum Orientation
		{
			[Token(Token = "0x4001523")]
			X,
			[Token(Token = "0x4001524")]
			Y,
			[Token(Token = "0x4001525")]
			Z,
			[Token(Token = "0x4001526")]
			XNegative,
			[Token(Token = "0x4001527")]
			YNegative,
			[Token(Token = "0x4001528")]
			ZNegative
		}

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Orientation rotationOrientation;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 rotationOrientationVector;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform thisTransform;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float angle;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float tmpAngle;

		[Token(Token = "0x1700014D")]
		public float Angle
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xE1EE9C", Offset = "0xE1EE9C", VA = "0xE1EE9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014E")]
		public Orientation RotationOrientation
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xE1EEA4", Offset = "0xE1EEA4", VA = "0xE1EEA4")]
			get
			{
				return default(Orientation);
			}
		}

		[Token(Token = "0x1700014F")]
		public Vector3 RotationOrientationVector
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xE1EEAC", Offset = "0xE1EEAC", VA = "0xE1EEAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000150")]
		private bool isXOrientated
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xE1EEB8", Offset = "0xE1EEB8", VA = "0xE1EEB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xE1EED4", Offset = "0xE1EED4", VA = "0xE1EED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE154F4", Offset = "0xE154F4", VA = "0xE154F4")]
		public float GetDeltaAngle(Vector3 controllerPosition, bool cacheAngle = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xE1F1DC", Offset = "0xE1F1DC", VA = "0xE1F1DC")]
		public void CacheAngle()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xE1F1E8", Offset = "0xE1F1E8", VA = "0xE1F1E8")]
		private void NormalizeAngle()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xE1F218", Offset = "0xE1F218", VA = "0xE1F218")]
		public void CheckControllerRotationAndLog(Vector3 controllerPosition)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xE1F088", Offset = "0xE1F088", VA = "0xE1F088")]
		private float GetAngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xE1EF0C", Offset = "0xE1EF0C", VA = "0xE1EF0C")]
		private Vector3 GetGlobalOrientationVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xE1F4A0", Offset = "0xE1F4A0", VA = "0xE1F4A0")]
		private Vector3 GetLocalOrientationVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xE1F648", Offset = "0xE1F648", VA = "0xE1F648")]
		public RotationAngleController()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class RotationInteraction : Interaction
	{
		[Token(Token = "0x20003E4")]
		private enum ComparisonMethod
		{
			[Token(Token = "0x400152A")]
			Greater,
			[Token(Token = "0x400152B")]
			Lesser,
			[Token(Token = "0x400152C")]
			Approximately
		}

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3522C", Offset = "0xA3522C")]
		private sealed class <RotateToCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotationInteraction <>4__this;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float targetAngle;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public ComparisonMethod comp;

			[Token(Token = "0x170002FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001996")]
				[Address(RVA = "0xE1FFFC", Offset = "0xE1FFFC", VA = "0xE1FFFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001998")]
				[Address(RVA = "0xE20068", Offset = "0xE20068", VA = "0xE20068", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001993")]
			[Address(RVA = "0xE1FD28", Offset = "0xE1FD28", VA = "0xE1FD28")]
			[DebuggerHidden]
			public <RotateToCoroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0xE1FE64", Offset = "0xE1FE64", VA = "0xE1FE64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001995")]
			[Address(RVA = "0xE1FE68", Offset = "0xE1FE68", VA = "0xE1FE68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001997")]
			[Address(RVA = "0xE20004", Offset = "0xE20004", VA = "0xE20004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA39ED8", Offset = "0xA39ED8")]
		protected RotationAngleController rotationAngleController;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PressInRangeActionOverlap interactionTrigger;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Transform objectToAnimate;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Transform objectToTakeOffset;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39F54", Offset = "0xA39F54")]
		private float minRotation;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39F9C", Offset = "0xA39F9C")]
		private float maxRotation;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39FE4", Offset = "0xA39FE4")]
		protected float openRotation;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A02C", Offset = "0xA3A02C")]
		private bool useSounds;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip openClip;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip closeClip;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA3A0A8", Offset = "0xA3A0A8")]
		[SerializeField]
		private bool isOpenOnStart;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private GeneralArgs dummyArgs;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine finishMoveCoroutine;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRObjects vrObjects;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vibration vibration;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 offset;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		protected Quaternion localStartRotation;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected _Code.VR.InputSystem.Hand currentHand;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float rotation;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float deltaAngle;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float startAngle;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected bool closeEffectTriggered;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		protected bool isInitialised;

		[Token(Token = "0x4000A95")]
		protected const float CLOSE_ANGLE_TOLERANCE = 2f;

		[Token(Token = "0x4000A96")]
		protected const float DRAG_ANGLE_TOLERANCE = 0.5f;

		[Token(Token = "0x4000A97")]
		protected const float DRAG_ROTATION_SPEED = 72f;

		[Token(Token = "0x4000A98")]
		protected const float DELTA_TIME = 0.0138f;

		[Token(Token = "0x17000151")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xE1F798", Offset = "0xE1F798", VA = "0xE1F798")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public bool IsOpenOnStart
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xE1F7A0", Offset = "0xE1F7A0", VA = "0xE1F7A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public float StartAngle
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xE1F7A8", Offset = "0xE1F7A8", VA = "0xE1F7A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnCompletedEvent
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xE1F650", Offset = "0xE1F650", VA = "0xE1F650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41048", Offset = "0xA41048")]
			add
			{
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xE1F6F4", Offset = "0xE1F6F4", VA = "0xE1F6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41058", Offset = "0xA41058")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE15034", Offset = "0xE15034", VA = "0xE15034", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE1F7B0", Offset = "0xE1F7B0", VA = "0xE1F7B0")]
		public bool IsCorrectlySetUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE1F88C", Offset = "0xE1F88C", VA = "0xE1F88C", Slot = "5")]
		public override void BreakInteraction()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE15700", Offset = "0xE15700", VA = "0xE15700")]
		public void BroadcastOnCompletedEvent()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE1F8A8", Offset = "0xE1F8A8", VA = "0xE1F8A8", Slot = "6")]
		protected virtual void OnInteractionStarted(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE1F9D0", Offset = "0xE1F9D0", VA = "0xE1F9D0", Slot = "7")]
		protected virtual void OnInteractionCompleted(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE1FB6C", Offset = "0xE1FB6C", VA = "0xE1FB6C")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xE15398", Offset = "0xE15398", VA = "0xE15398", Slot = "8")]
		protected virtual void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xE15698", Offset = "0xE15698", VA = "0xE15698")]
		protected void TriggerCloseEffects(bool triggerVibration)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xE1FBC0", Offset = "0xE1FBC0", VA = "0xE1FBC0")]
		protected void Rotate(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xE1FAD8", Offset = "0xE1FAD8", VA = "0xE1FAD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41068", Offset = "0xA41068")]
		private IEnumerator RotateToCoroutine(float targetAngle, ComparisonMethod comp)
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xE1FD54", Offset = "0xE1FD54", VA = "0xE1FD54")]
		private bool Compare(float first, float second, ComparisonMethod method)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xE153D8", Offset = "0xE153D8", VA = "0xE153D8")]
		public RotationInteraction()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class SinkInteractionHandler : RotationInteraction
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A104", Offset = "0xA3A104")]
		private TapWaterFxHandler sinkFX;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Item sinkItem;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float flowingWaterAngle;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool sinkIsOpen;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool hasItem;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xE20070", Offset = "0xE20070", VA = "0xE20070")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xE200F0", Offset = "0xE200F0", VA = "0xE200F0", Slot = "8")]
		protected override void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xE201F8", Offset = "0xE201F8", VA = "0xE201F8")]
		public SinkInteractionHandler()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	internal class TutorialDoorRotationInteraction : DoorRotationInteraction
	{
		[Token(Token = "0x14000024")]
		public event Action onOpen
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xE20220", Offset = "0xE20220", VA = "0xE20220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA410CC", Offset = "0xA410CC")]
			add
			{
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xE202C4", Offset = "0xE202C4", VA = "0xE202C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA410DC", Offset = "0xA410DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xE20368", Offset = "0xE20368", VA = "0xE20368", Slot = "6")]
		protected override void OnInteractionStarted(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xE2036C", Offset = "0xE2036C", VA = "0xE2036C", Slot = "8")]
		protected override void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE2042C", Offset = "0xE2042C", VA = "0xE2042C")]
		public TutorialDoorRotationInteraction()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public interface IHasLocalizedDescription
	{
		[Token(Token = "0x17000154")]
		string LocalizedDescription
		{
			[Token(Token = "0x6000DB6")]
			get;
		}
	}
	[Token(Token = "0x20001C6")]
	public interface IHasLocalizedName
	{
		[Token(Token = "0x17000155")]
		string LocalizedName
		{
			[Token(Token = "0x6000DB7")]
			get;
		}
	}
	[Token(Token = "0x20001C7")]
	public interface IHasSprite
	{
		[Token(Token = "0x17000156")]
		Sprite Sprite
		{
			[Token(Token = "0x6000DB8")]
			get;
		}
	}
	[Token(Token = "0x20001C8")]
	[AssetMappedComponent]
	[SelectionBase]
	public class Item : Pickupable, IHasSprite
	{
		[Token(Token = "0x20003E6")]
		protected enum SnapMode
		{
			[Token(Token = "0x4001533")]
			None,
			[Token(Token = "0x4001534")]
			Wall,
			[Token(Token = "0x4001535")]
			Floor,
			[Token(Token = "0x4001536")]
			Ceiling
		}

		[Token(Token = "0x20003E7")]
		public struct RaycastArgs
		{
			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform raycastOrigin;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LayerMask wallLayerMask;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public LayerMask wallAndDefaultMask;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayerMask cellingLayerMask;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float wallRaycastLength;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float cellingRaycastLength;

			[Token(Token = "0x6001999")]
			[Address(RVA = "0xAEEEA4", Offset = "0xAEEEA4", VA = "0xAEEEA4")]
			public RaycastArgs(MovingObjectsConfiguration movingObjectsConfiguration)
			{
			}
		}

		[Token(Token = "0x20003E8")]
		public struct SnapArgs
		{
			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RaycastArgs raycastArgs;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastHit wallHit;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool wallHitValid;

			[Token(Token = "0x600199A")]
			[Address(RVA = "0xAEEEF0", Offset = "0xAEEEF0", VA = "0xAEEEF0")]
			public SnapArgs(RaycastArgs raycastArgs, RaycastHit wallHit, bool wallHitValid)
			{
			}
		}

		[Token(Token = "0x4000A9F")]
		private const float MIN_DIAGONAL_TO_HARD_LINK_PICKUP = 1f;

		[Token(Token = "0x4000AA0")]
		private const float MIN_DIAGONAL_TO_BE_A_STORAGE_ITEM = 0.9f;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Interaction[] interactions;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A190", Offset = "0xA3A190")]
		private bool <ExcludedFromSaving>k__BackingField;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public ItemData itemData;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public bool HardLinkOnly;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float distanceFromController;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected bool hardLinked;

		[NonSerialized]
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		public bool isNotBoughtYet;

		[NonSerialized]
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected ItemSceneSystem itemsSystem;

		[NonSerialized]
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private QuestSceneSystem questSceneSystem;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float startPrice;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private bool pickedUpFromAnotherHand;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
		private bool isCellingLamp;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private MovingObjectsConfiguration movingObjectsConfig;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected HandInteractions handInteractions;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected Vector3 lastProperPosition;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		protected Quaternion lastProperRotation;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected bool properlyPlacedInThePast;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		private bool snappedWhenPickedUp;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine finalizeLerpCor;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected Subsystems subsystems;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public AttachmentSurface attachmentSurface;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		private bool canBeSold;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		public bool DefaultHouseItem;

		[Token(Token = "0x4000ABC")]
		protected const float one8th = 0.125f;

		[Token(Token = "0x4000ABD")]
		private const float one16th = 0.0625f;

		[Token(Token = "0x4000ABE")]
		private const float ceilingHeight = 2.75f;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected SnapMode snapMode;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Transform handTransformToFollow;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Quaternion rawTargetRotation;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		protected Vector3 targetPosition;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private Vector3 homePositionInHandSpace;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private Vector3 handInLocalSpace;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion homeRotationInHandSpace;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public bool snappedAndNotPhysicsReloadCandidate;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
		protected bool initialised;

		[Token(Token = "0x17000157")]
		public InputSystem InputSystem
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xE1918C", Offset = "0xE1918C", VA = "0xE1918C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public bool ExcludedFromSaving
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xE19194", Offset = "0xE19194", VA = "0xE19194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA410EC", Offset = "0xA410EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xE1919C", Offset = "0xE1919C", VA = "0xE1919C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA410FC", Offset = "0xA410FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool CanBeSold
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xE194F0", Offset = "0xE194F0", VA = "0xE194F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xE194F8", Offset = "0xE194F8", VA = "0xE194F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public override bool PickingUpBlocked
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xE19504", Offset = "0xE19504", VA = "0xE19504", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xE19590", Offset = "0xE19590", VA = "0xE19590", Slot = "11")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public bool CanAttachToWall
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xE1959C", Offset = "0xE1959C", VA = "0xE1959C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		public bool CanAttachToFloor
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xE195AC", Offset = "0xE195AC", VA = "0xE195AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public bool AttachesToCeiling
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xE195BC", Offset = "0xE195BC", VA = "0xE195BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015E")]
		private bool IsSnappedToWall
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xE195CC", Offset = "0xE195CC", VA = "0xE195CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015F")]
		public Sprite Sprite
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xE195DC", Offset = "0xE195DC", VA = "0xE195DC", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<VRObjects, SceneSystems, Subsystems, CollisionDetectionConfiguration, bool> OnInitialise
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xE185B0", Offset = "0xE185B0", VA = "0xE185B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4110C", Offset = "0xA4110C")]
			add
			{
			}
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xE191A8", Offset = "0xE191A8", VA = "0xE191A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4111C", Offset = "0xA4111C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<Item> OnPutDownEvent
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xE1876C", Offset = "0xE1876C", VA = "0xE1876C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4112C", Offset = "0xA4112C")]
			add
			{
			}
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xE18BE8", Offset = "0xE18BE8", VA = "0xE18BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4113C", Offset = "0xA4113C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<Item> OnPickedUpEvent
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xE19250", Offset = "0xE19250", VA = "0xE19250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4114C", Offset = "0xA4114C")]
			add
			{
			}
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xE192F8", Offset = "0xE192F8", VA = "0xE192F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4115C", Offset = "0xA4115C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<Item> OnSoldEvent
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xE193A0", Offset = "0xE193A0", VA = "0xE193A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4116C", Offset = "0xA4116C")]
			add
			{
			}
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xE19448", Offset = "0xE19448", VA = "0xE19448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4117C", Offset = "0xA4117C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE10A30", Offset = "0xE10A30", VA = "0xE10A30", Slot = "32")]
		public virtual void InitItem(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, MovingObjectsConfiguration movingObjectsConfig, CollisionDetectionConfiguration config, bool onSceneLoaded = false)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE19668", Offset = "0xE19668", VA = "0xE19668")]
		public void SetVariant(int variantIndex)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE196F0", Offset = "0xE196F0", VA = "0xE196F0")]
		public void SetVariantEditor(int variantIndex)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE197A8", Offset = "0xE197A8", VA = "0xE197A8")]
		public void LowerPriceBasedOn(float multiplier)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE197D4", Offset = "0xE197D4", VA = "0xE197D4")]
		public void MarkAsNotForSale()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xE197DC", Offset = "0xE197DC", VA = "0xE197DC")]
		public void MarkAsForSale()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xE197E8", Offset = "0xE197E8", VA = "0xE197E8")]
		public void ExcludeFromSaving()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE197F4", Offset = "0xE197F4", VA = "0xE197F4", Slot = "24")]
		public override void RefreshIntersections()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE19874", Offset = "0xE19874", VA = "0xE19874", Slot = "21")]
		protected override (Vector3, Quaternion) GetEstimatedPosRot()
		{
			return default((Vector3, Quaternion));
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE195FC", Offset = "0xE195FC", VA = "0xE195FC")]
		private bool IsAStorageItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE11798", Offset = "0xE11798", VA = "0xE11798", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE19AAC", Offset = "0xE19AAC", VA = "0xE19AAC")]
		private bool GetSnapState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE1A930", Offset = "0xE1A930", VA = "0xE1A930")]
		private bool IsShopPreviewItemSmallEnoughToHardLinkPickup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE11B48", Offset = "0xE11B48", VA = "0xE11B48", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE1AC24", Offset = "0xE1AC24", VA = "0xE1AC24")]
		private void ManagePostPutDownTranslationAndRotation()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE1ACA8", Offset = "0xE1ACA8", VA = "0xE1ACA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4118C", Offset = "0xA4118C")]
		private void RestoreItemsInsidePosition()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE1AF28", Offset = "0xE1AF28", VA = "0xE1AF28", Slot = "18")]
		protected override void HandleIntersectionPutDown()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE1B124", Offset = "0xE1B124", VA = "0xE1B124", Slot = "22")]
		protected override bool ShouldEnablePhysicsOnTweenCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE1B25C", Offset = "0xE1B25C", VA = "0xE1B25C")]
		private void RestoreItemsOnTopToPreviousPositions()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE1B48C", Offset = "0xE1B48C", VA = "0xE1B48C", Slot = "8")]
		public override void TurnOnPhysicsForFiveSeconds()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xE199A0", Offset = "0xE199A0", VA = "0xE199A0")]
		private bool IsAttachedToSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xE1B51C", Offset = "0xE1B51C", VA = "0xE1B51C", Slot = "28")]
		public override void MoveAndRotate(RaycastArgs args)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xE1BAB8", Offset = "0xE1BAB8", VA = "0xE1BAB8", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xE1B86C", Offset = "0xE1B86C", VA = "0xE1B86C")]
		private void Move(SnapArgs args, Vector2 stickPosition)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xE1BABC", Offset = "0xE1BABC", VA = "0xE1BABC")]
		private void MoveWithStick(Vector2 stickPosition)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xE1BCC0", Offset = "0xE1BCC0", VA = "0xE1BCC0")]
		private void HardLinkMove()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xE1BF40", Offset = "0xE1BF40", VA = "0xE1BF40", Slot = "6")]
		public override bool ShouldReloadPhysics()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xE1B7C8", Offset = "0xE1B7C8", VA = "0xE1B7C8")]
		private void HandleGizmoAndInputs()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xE19CBC", Offset = "0xE19CBC", VA = "0xE19CBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA411C4", Offset = "0xA411C4")]
		public void SaveAttachedItemsAndSimulatePhysicsForThem(bool thisObjectIsPickedUp = true)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xE1BF88", Offset = "0xE1BF88", VA = "0xE1BF88", Slot = "19")]
		public override void OnTween()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xE1C168", Offset = "0xE1C168", VA = "0xE1C168", Slot = "20")]
		protected override void OnTweenCompleted()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xE1BD0C", Offset = "0xE1BD0C", VA = "0xE1BD0C")]
		private void SoftLinkMoveAndSnap(SnapArgs args, Vector2 stickPosition)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xE1C1C4", Offset = "0xE1C1C4", VA = "0xE1C1C4", Slot = "33")]
		protected virtual void Snap(SnapArgs snapArgs, Vector3 vertOffset)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xE1B8EC", Offset = "0xE1B8EC", VA = "0xE1B8EC")]
		private void Rotate(Vector3 wallHitNormal, Vector2 stickPosition)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xE1CC0C", Offset = "0xE1CC0C", VA = "0xE1CC0C")]
		private void RotateWithStick(Vector3 stickPosition)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xE1CD58", Offset = "0xE1CD58", VA = "0xE1CD58")]
		private void LerpToTargetRotation()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xE1CE7C", Offset = "0xE1CE7C", VA = "0xE1CE7C")]
		private void RoundRawTargetRotationIntoTargetRotation()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xE1AE28", Offset = "0xE1AE28", VA = "0xE1AE28")]
		private void FastLerpToTargetPosition()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xE1C9F0", Offset = "0xE1C9F0", VA = "0xE1C9F0")]
		private void PerformCeilingSnapping(SnapArgs args)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xE1CFBC", Offset = "0xE1CFBC", VA = "0xE1CFBC")]
		private bool IsUnderCellingCollider(Collider cellingCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xE1C890", Offset = "0xE1C890", VA = "0xE1C890")]
		private void PerformFloorSnapping()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xE1C44C", Offset = "0xE1C44C", VA = "0xE1C44C")]
		private void PerformWallSnapping(RaycastHit wallHit, Vector3 vertOffset)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xE1D0F0", Offset = "0xE1D0F0", VA = "0xE1D0F0")]
		private void PerformWallSnappingToGrid(Vector3 wallNormal)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xE1CF38", Offset = "0xE1CF38", VA = "0xE1CF38")]
		private Vector3 Round(Vector3 value, float precision = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE1D29C", Offset = "0xE1D29C", VA = "0xE1D29C")]
		protected Vector3 RoundXZ(Vector3 value, float precision = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE1D1B4", Offset = "0xE1D1B4", VA = "0xE1D1B4")]
		private float Round(float value, float precision = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xE1A97C", Offset = "0xE1A97C", VA = "0xE1A97C")]
		private void EstablishSoftLink()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xE1AB00", Offset = "0xE1AB00", VA = "0xE1AB00")]
		private void EstablishHardLink(Transform weakParent)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xE1D310", Offset = "0xE1D310", VA = "0xE1D310", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xE1D314", Offset = "0xE1D314", VA = "0xE1D314")]
		public void BreakInteractions()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE121B4", Offset = "0xE121B4", VA = "0xE121B4", Slot = "7")]
		public override void SelfDisable(bool skipAnimation = false)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xE1D390", Offset = "0xE1D390", VA = "0xE1D390")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xE19C88", Offset = "0xE19C88", VA = "0xE19C88")]
		private void CancelFinalizeLerp()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xE1228C", Offset = "0xE1228C", VA = "0xE1228C")]
		public Item()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public enum ItemCategory
	{
		[Token(Token = "0x4000ACA")]
		None = -1,
		[Token(Token = "0x4000ACB")]
		Other = 0,
		[Token(Token = "0x4000ACC")]
		Electronics = 1,
		[Token(Token = "0x4000ACD")]
		Installations = 2,
		[Token(Token = "0x4000ACE")]
		PaintCans = 3,
		[Token(Token = "0x4000ACF")]
		Chairs = 4,
		[Token(Token = "0x4000AD0")]
		Tables = 5,
		[Token(Token = "0x4000AD1")]
		Storage = 6,
		[Token(Token = "0x4000AD2")]
		Plants = 7,
		[Token(Token = "0x4000AD3")]
		Sofas = 8,
		[Token(Token = "0x4000AD4")]
		Lighting = 9,
		[Token(Token = "0x4000AD5")]
		FoodAndBeverages = 10,
		[Token(Token = "0x4000AD6")]
		Beds = 11,
		[Token(Token = "0x4000AD7")]
		Paintings = 12,
		[Token(Token = "0x4000AD8")]
		Toys = 13,
		[Token(Token = "0x4000AD9")]
		Chimneys = 14,
		[Token(Token = "0x4000ADA")]
		Curtains = 15,
		[Token(Token = "0x4000ADB")]
		Carpets = 16,
		[Token(Token = "0x4000ADC")]
		Christmas = 17,
		[Token(Token = "0x4000ADD")]
		MusicalInstruments = 19,
		[Token(Token = "0x4000ADE")]
		Japanese = 20,
		[Token(Token = "0x4000ADF")]
		RepairShop = 21,
		[Token(Token = "0x4000AE0")]
		Hairdresser = 22,
		[Token(Token = "0x4000AE1")]
		Gym = 23,
		[Token(Token = "0x4000AE2")]
		All = 24
	}
	[Token(Token = "0x20001CA")]
	public enum ItemTag
	{
		[Token(Token = "0x4000AE4")]
		Sport,
		[Token(Token = "0x4000AE5")]
		Expensive,
		[Token(Token = "0x4000AE6")]
		Bathroom,
		[Token(Token = "0x4000AE7")]
		Kitchen,
		[Token(Token = "0x4000AE8")]
		LivingRoom,
		[Token(Token = "0x4000AE9")]
		Bedroom,
		[Token(Token = "0x4000AEA")]
		Nerdy,
		[Token(Token = "0x4000AEB")]
		Office,
		[Token(Token = "0x4000AEC")]
		JunkFood,
		[Token(Token = "0x4000AED")]
		Decorations,
		[Token(Token = "0x4000AEE")]
		Nature,
		[Token(Token = "0x4000AEF")]
		Vintage,
		[Token(Token = "0x4000AF0")]
		Music,
		[Token(Token = "0x4000AF1")]
		Children,
		[Token(Token = "0x4000AF2")]
		Heating,
		[Token(Token = "0x4000AF3")]
		Bulb
	}
	[Token(Token = "0x20001CB")]
	public static class ItemCategoryExtensions
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xE1D818", Offset = "0xE1D818", VA = "0xE1D818")]
		public static string Translate(this ItemCategory cat)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class ItemData
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string seriesName;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite image;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int price;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ItemCategory category;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ItemTag[] tags;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool isStorageItem;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A200", Offset = "0xA3A200")]
		private bool <AvailableInShop>k__BackingField;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A210", Offset = "0xA3A210")]
		private bool <WasSeenInShop>k__BackingField;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool hasVariants;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int CurrentVariantIndex;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VariantColorSetup colorSetup;

		[Token(Token = "0x17000160")]
		public bool IsStorageItem
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xE1D8D4", Offset = "0xE1D8D4", VA = "0xE1D8D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public bool AvailableInShop
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xE1D8DC", Offset = "0xE1D8DC", VA = "0xE1D8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4120C", Offset = "0xA4120C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xE1D8E4", Offset = "0xE1D8E4", VA = "0xE1D8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4121C", Offset = "0xA4121C")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public bool WasSeenInShop
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xE1D8F0", Offset = "0xE1D8F0", VA = "0xE1D8F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4122C", Offset = "0xA4122C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xE1D8F8", Offset = "0xE1D8F8", VA = "0xE1D8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4123C", Offset = "0xA4123C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xE1D904", Offset = "0xE1D904", VA = "0xE1D904")]
		public bool HasItemTag(ItemTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xE1D9B8", Offset = "0xE1D9B8", VA = "0xE1D9B8")]
		public ItemData()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33EBC", Offset = "0xA33EBC")]
	public abstract class Pickupable : PhysicalObject
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CollisionTrigger collisionTrigger;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A240", Offset = "0xA3A240")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA3A240", Offset = "0xA3A240")]
		[SerializeField]
		protected Collider[] intersectionColliders;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A2B0", Offset = "0xA3A2B0")]
		[SerializeField]
		public Collider[] collisionColliders;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A2FC", Offset = "0xA3A2FC")]
		protected bool pickingUpBlocked;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool distanceGrabBlocked;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected readonly List<CollidersIntersectionDetector.AttachedItem> itemsOnTop;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected readonly List<CollidersIntersectionDetector.AttachedItem> itemsInside;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected FxSceneSystem fxSys;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected RenderingSceneSystem renderingSys;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VRObjects vrObjs;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected _Code.Tools.Hand holdingHand;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected InputSystem inputSystem;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected CollidersIntersectionDetector intersectionDetector;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int itemCollisionLayers;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AudioSceneSystem audioSys;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine layerChangeCor;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion rotationLastFrameForVelocityCalculations;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion rotationThisFrameForVelocityCalculations;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Vector3 beforePickupPosition;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected Quaternion beforePickupRotation;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float velocity;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool wasVisited;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform initialParent;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A358", Offset = "0xA3A358")]
		private bool <IsIntersecting>k__BackingField;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A368", Offset = "0xA3A368")]
		private RenderItemContainer <ToonRenderGroup>k__BackingField;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A378", Offset = "0xA3A378")]
		private bool <HasToonItem>k__BackingField;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Vector3 lastValidPosition;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Quaternion lastValidRotation;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected bool physicsEnabledWhenPickedUp;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		public bool tweeningToMomentOfPickUp;

		[Token(Token = "0x17000163")]
		public bool DistanceGrabBlocked
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xE1E748", Offset = "0xE1E748", VA = "0xE1E748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public bool IsPickedUp
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xE10CA4", Offset = "0xE10CA4", VA = "0xE10CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public bool IsIntersecting
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xE1E750", Offset = "0xE1E750", VA = "0xE1E750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4128C", Offset = "0xA4128C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xE1E758", Offset = "0xE1E758", VA = "0xE1E758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4129C", Offset = "0xA4129C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public RenderItemContainer ToonRenderGroup
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xE1E764", Offset = "0xE1E764", VA = "0xE1E764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA412AC", Offset = "0xA412AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xE1E76C", Offset = "0xE1E76C", VA = "0xE1E76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA412BC", Offset = "0xA412BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public virtual bool PickingUpBlocked
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xE1E774", Offset = "0xE1E774", VA = "0xE1E774", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xE1E77C", Offset = "0xE1E77C", VA = "0xE1E77C", Slot = "11")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public float Diagonal
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xE19A74", Offset = "0xE19A74", VA = "0xE19A74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public bool HasToonItem
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xE1E788", Offset = "0xE1E788", VA = "0xE1E788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA412CC", Offset = "0xA412CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xE1E790", Offset = "0xE1E790", VA = "0xE1E790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA412DC", Offset = "0xA412DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action OnUsedEvent
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xE1E600", Offset = "0xE1E600", VA = "0xE1E600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4124C", Offset = "0xA4124C")]
			add
			{
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xE1E6A4", Offset = "0xE1E6A4", VA = "0xE1E6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4125C", Offset = "0xA4125C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action PrePickUpEvent
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xE0F008", Offset = "0xE0F008", VA = "0xE0F008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4126C", Offset = "0xA4126C")]
			add
			{
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xE103AC", Offset = "0xE103AC", VA = "0xE103AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4127C", Offset = "0xA4127C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xE1E79C", Offset = "0xE1E79C", VA = "0xE1E79C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA412EC", Offset = "0xA412EC")]
		private void SwapColliderRefs()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE1E7A8", Offset = "0xE1E7A8", VA = "0xE1E7A8", Slot = "12")]
		public virtual void SimpleInit(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xE0F1B4", Offset = "0xE0F1B4", VA = "0xE0F1B4", Slot = "13")]
		public virtual void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xE19AE0", Offset = "0xE19AE0", VA = "0xE19AE0", Slot = "14")]
		public virtual void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xE1E82C", Offset = "0xE1E82C", VA = "0xE1E82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xE123F0", Offset = "0xE123F0", VA = "0xE123F0")]
		protected void PrePickedUpEvent()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xE167A0", Offset = "0xE167A0", VA = "0xE167A0", Slot = "15")]
		protected virtual void OnTick()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xE0FCC0", Offset = "0xE0FCC0", VA = "0xE0FCC0", Slot = "16")]
		public virtual void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xE1E848", Offset = "0xE1E848", VA = "0xE1E848", Slot = "17")]
		public virtual void PutDownOnSell()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xE1BF68", Offset = "0xE1BF68", VA = "0xE1BF68", Slot = "6")]
		public override bool ShouldReloadPhysics()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xE0F6A0", Offset = "0xE0F6A0", VA = "0xE0F6A0")]
		public void BlockPickingUp()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xE17C04", Offset = "0xE17C04", VA = "0xE17C04")]
		public void BlockDistanceGrab()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xE1E8B0", Offset = "0xE1E8B0", VA = "0xE1E8B0")]
		public void UnlockDistanceGrab()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xE0CF98", Offset = "0xE0CF98", VA = "0xE0CF98")]
		public void UnlockPickingUp()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xE1E8B8", Offset = "0xE1E8B8", VA = "0xE1E8B8")]
		private bool HasMultipleMainColliders()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xE1EA40", Offset = "0xE1EA40", VA = "0xE1EA40")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE124E8", Offset = "0xE124E8", VA = "0xE124E8")]
		public void SetLayer(int layer)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xE1EAC0", Offset = "0xE1EAC0", VA = "0xE1EAC0", Slot = "9")]
		public override void SetPhysicsEnabled(bool value)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xE12404", Offset = "0xE12404", VA = "0xE12404")]
		protected void CacheBeforePickupTransform()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xE1AF9C", Offset = "0xE1AF9C", VA = "0xE1AF9C", Slot = "18")]
		protected virtual void HandleIntersectionPutDown()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xE1BFAC", Offset = "0xE1BFAC", VA = "0xE1BFAC", Slot = "19")]
		public virtual void OnTween()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xE127F4", Offset = "0xE127F4", VA = "0xE127F4", Slot = "20")]
		protected virtual void OnTweenCompleted()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xE199F0", Offset = "0xE199F0", VA = "0xE199F0", Slot = "21")]
		protected virtual (Vector3, Quaternion) GetEstimatedPosRot()
		{
			return default((Vector3, Quaternion));
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xE1B15C", Offset = "0xE1B15C", VA = "0xE1B15C", Slot = "22")]
		protected virtual bool ShouldEnablePhysicsOnTweenCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xE1EAD8", Offset = "0xE1EAD8", VA = "0xE1EAD8")]
		public void PutDownOnSceneSwitch()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xE1EB40", Offset = "0xE1EB40", VA = "0xE1EB40", Slot = "23")]
		protected virtual void AddForce(_Code.Tools.Hand controller)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE0FEC4", Offset = "0xE0FEC4", VA = "0xE0FEC4")]
		protected Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xE1ED20", Offset = "0xE1ED20", VA = "0xE1ED20")]
		public Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xE1ED28", Offset = "0xE1ED28", VA = "0xE1ED28")]
		protected IReadOnlyList<Collider> GetColliders()
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE1ED30", Offset = "0xE1ED30", VA = "0xE1ED30", Slot = "24")]
		public virtual void RefreshIntersections()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xE1ED68", Offset = "0xE1ED68", VA = "0xE1ED68", Slot = "25")]
		protected virtual void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xE12C34", Offset = "0xE12C34", VA = "0xE12C34", Slot = "26")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xE1EE48", Offset = "0xE1EE48", VA = "0xE1EE48", Slot = "27")]
		public virtual void UseOneTime()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xE1B7C4", Offset = "0xE1B7C4", VA = "0xE1B7C4", Slot = "28")]
		public virtual void MoveAndRotate(Item.RaycastArgs args)
		{
		}

		[Token(Token = "0x6000E3C")]
		public abstract void Use();

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xE1EE5C", Offset = "0xE1EE5C", VA = "0xE1EE5C", Slot = "30")]
		public virtual void StopUsage()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xE10458", Offset = "0xE10458", VA = "0xE10458")]
		protected Pickupable()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public abstract class Puppet<T> : Puppet where T : PuppetData
	{
		[Token(Token = "0x6000E3F")]
		protected abstract T SaveInternal();

		[Token(Token = "0x6000E40")]
		protected abstract void LoadInternal(T data);

		[Token(Token = "0x6000E41")]
		public override PuppetData Save()
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		public override void Load(PuppetData data)
		{
		}

		[Token(Token = "0x6000E43")]
		protected Puppet()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AssetMappedComponent]
	public abstract class Puppet : MonoBehaviour
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A388", Offset = "0xA3A388")]
		private string <InstanceID>k__BackingField;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A398", Offset = "0xA3A398")]
		private string <PrefabID>k__BackingField;

		[Token(Token = "0x1700016A")]
		public string InstanceID
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xE1EE60", Offset = "0xE1EE60", VA = "0xE1EE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41324", Offset = "0xA41324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xE1EE68", Offset = "0xE1EE68", VA = "0xE1EE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41334", Offset = "0xA41334")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public string PrefabID
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xE1EE70", Offset = "0xE1EE70", VA = "0xE1EE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41344", Offset = "0xA41344")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xE1EE78", Offset = "0xE1EE78", VA = "0xE1EE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41354", Offset = "0xA41354")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000E48")]
		public abstract PuppetData Save();

		[Token(Token = "0x6000E49")]
		public abstract void Load(PuppetData data);

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xE1EE80", Offset = "0xE1EE80", VA = "0xE1EE80", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000E4B")]
		public T MakeInstance<T>() where T : Puppet
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xE1EE84", Offset = "0xE1EE84", VA = "0xE1EE84", Slot = "7")]
		public virtual void AssignInstanceID(string id)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE1EE8C", Offset = "0xE1EE8C", VA = "0xE1EE8C")]
		protected Puppet()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class PuppetData
	{
		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string prefabId;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string instanceId;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 eulerAngles;

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE1EE94", Offset = "0xE1EE94", VA = "0xE1EE94")]
		public PuppetData()
		{
		}
	}
}
namespace _Code.Interactions.Installations
{
	[Token(Token = "0x20001D1")]
	public class AssemblyPart : Pickupable, ICanBeSold
	{
		[Token(Token = "0x20003E9")]
		private enum State
		{
			[Token(Token = "0x4001541")]
			None,
			[Token(Token = "0x4001542")]
			Grabbed,
			[Token(Token = "0x4001543")]
			Snapped
		}

		[Token(Token = "0x20003EA")]
		public enum SnapToMagnetType
		{
			[Token(Token = "0x4001545")]
			None,
			[Token(Token = "0x4001546")]
			Upper,
			[Token(Token = "0x4001547")]
			Lower,
			[Token(Token = "0x4001548")]
			Leftmost,
			[Token(Token = "0x4001549")]
			Rightmost
		}

		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3523C", Offset = "0xA3523C")]
		private sealed class <DistanceGrabCoroutine>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssemblyPart <>4__this;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform t;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x170002FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600199E")]
				[Address(RVA = "0xE18270", Offset = "0xE18270", VA = "0xE18270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A0")]
				[Address(RVA = "0xE182DC", Offset = "0xE182DC", VA = "0xE182DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600199B")]
			[Address(RVA = "0xE16628", Offset = "0xE16628", VA = "0xE16628")]
			[DebuggerHidden]
			public <DistanceGrabCoroutine>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x600199C")]
			[Address(RVA = "0xE17FB4", Offset = "0xE17FB4", VA = "0xE17FB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0xE17FB8", Offset = "0xE17FB8", VA = "0xE17FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0xE18278", Offset = "0xE18278", VA = "0xE18278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Collider myCollider;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private bool hasAdditionalColliders;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private List<Collider> additionalColliders;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private SnapToMagnetType snapToMagnetType;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Snap[] snaps;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AssemblyPart[] dependsOnParts;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3A408", Offset = "0xA3A408")]
		private float distanceToSnap;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3A44C", Offset = "0xA3A44C")]
		private float snapRotationTolerance;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A490", Offset = "0xA3A490")]
		[SerializeField]
		private bool useSounds;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		[SerializeField]
		private bool isRandomMode;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private RandomSoundPlayer randomSoundPlayer;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected AudioSource audioSource;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AudioClip completeClip;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA3A51C", Offset = "0xA3A51C")]
		private bool useFinishAnimation;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		protected Animation animationComponent;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected AnimationClip finishAnimation;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Transform parentTransform;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private AssemblyPart attachedToObject;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform oscillatingParent;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private AssemblyManager assemblyManager;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Vibration vibration;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Coroutine distanceGrabCoroutine;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Magnet currentMagnet;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<SnapGearPair> gearSnapPairs;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 positionInCrate;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion rotationInCrate;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private State currentState;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private float sqrDistanceToSnap;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool isCompleteTriggered;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25D")]
		private bool noMagnetsThisType;

		[Token(Token = "0x4000B45")]
		private const float SHOW_GEAR_HINT_DISTANCE_MULTIPLIER = 5f;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A5C0", Offset = "0xA3A5C0")]
		private bool <IsAssembled>k__BackingField;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A5D0", Offset = "0xA3A5D0")]
		private bool <CanBeSold>k__BackingField;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Snap currentSnap;

		[Token(Token = "0x1700016C")]
		public AssemblyPart AttachedToObject
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xE16140", Offset = "0xE16140", VA = "0xE16140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public bool IsAssembled
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xE16148", Offset = "0xE16148", VA = "0xE16148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41384", Offset = "0xA41384")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xE16150", Offset = "0xE16150", VA = "0xE16150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41394", Offset = "0xA41394")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public bool CanBeSold
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xE1615C", Offset = "0xE1615C", VA = "0xE1615C", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA413A4", Offset = "0xA413A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xE16164", Offset = "0xE16164", VA = "0xE16164", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA413B4", Offset = "0xA413B4")]
			set
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<AssemblyPart> onPartAssembled
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xE139C0", Offset = "0xE139C0", VA = "0xE139C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41364", Offset = "0xA41364")]
			add
			{
			}
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xE14A98", Offset = "0xE14A98", VA = "0xE14A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41374", Offset = "0xA41374")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xE1393C", Offset = "0xE1393C", VA = "0xE1393C")]
		public void InitialiseAssemblyPart(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, AssemblyManager assemblyManager)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xE16170", Offset = "0xE16170", VA = "0xE16170")]
		private void ApplyDifficult(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xE161C4", Offset = "0xE161C4", VA = "0xE161C4", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xE13CE0", Offset = "0xE13CE0", VA = "0xE13CE0")]
		public void EnablePickUp()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xE1640C", Offset = "0xE1640C", VA = "0xE1640C", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xE16260", Offset = "0xE16260", VA = "0xE16260")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA413C4", Offset = "0xA413C4")]
		private IEnumerator DistanceGrabCoroutine(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xE162E0", Offset = "0xE162E0", VA = "0xE162E0")]
		private void AttachToHand(Transform hand)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xE16654", Offset = "0xE16654", VA = "0xE16654", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xE16678", Offset = "0xE16678", VA = "0xE16678", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xE1667C", Offset = "0xE1667C", VA = "0xE1667C", Slot = "15")]
		protected override void OnTick()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xE16B6C", Offset = "0xE16B6C", VA = "0xE16B6C")]
		private bool AreAllDependenciesAssembled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xE168F8", Offset = "0xE168F8", VA = "0xE168F8")]
		private void LookForClosestSnapPointAndSnap()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE16C04", Offset = "0xE16C04", VA = "0xE16C04")]
		private void ShowGearHints(Snap snap, float sqrDistance, bool isInRotationRange, bool areAllDependenciesAssembled)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xE16BE0", Offset = "0xE16BE0", VA = "0xE16BE0")]
		private void HideGearHints(Snap snap)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE16CC0", Offset = "0xE16CC0", VA = "0xE16CC0")]
		private void ReleaseAllGears()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE16488", Offset = "0xE16488", VA = "0xE16488")]
		private void HideAllGears()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE17268", Offset = "0xE17268", VA = "0xE17268")]
		public void ReleaseSnapGear(AssemblyPart part)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE17128", Offset = "0xE17128", VA = "0xE17128")]
		private void ShowGearHint(Snap snap, float sqrDistance, bool isInRotationRange, bool areAllDependenciesAssembled)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE16FE4", Offset = "0xE16FE4", VA = "0xE16FE4")]
		private void ShowMultiGearHint(Snap snap, float sqrDistance, bool isInRotationRange, bool areAllDependenciesAssembled)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE17240", Offset = "0xE17240", VA = "0xE17240")]
		private void HideGearHint(Snap snap)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE171C4", Offset = "0xE171C4", VA = "0xE171C4")]
		private void HideMultiGearHint(Snap snap)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE17468", Offset = "0xE17468", VA = "0xE17468")]
		private SnapGearPair GetCurrentSnapGear(Snap snap)
		{
			return null;
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE17924", Offset = "0xE17924", VA = "0xE17924")]
		private SnapGearPair GetCurrentSnapMultiGear(Snap snap)
		{
			return null;
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE16C38", Offset = "0xE16C38", VA = "0xE16C38")]
		private void Snap(Snap snap)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE17C10", Offset = "0xE17C10", VA = "0xE17C10")]
		private void SetAssembled()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE13B74", Offset = "0xE13B74", VA = "0xE13B74")]
		public void SaveInCratePosition(Transform parent)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE17D24", Offset = "0xE17D24", VA = "0xE17D24")]
		public void ReturnToCrate()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE16E7C", Offset = "0xE16E7C", VA = "0xE16E7C")]
		public void TriggerCompleteAssemblyEffects()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE17D90", Offset = "0xE17D90", VA = "0xE17D90", Slot = "31")]
		public void HandleSell()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xE17DC8", Offset = "0xE17DC8", VA = "0xE17DC8", Slot = "7")]
		public override void SelfDisable(bool skipAnimation = false)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xE17F2C", Offset = "0xE17F2C", VA = "0xE17F2C", Slot = "24")]
		public override void RefreshIntersections()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE17F30", Offset = "0xE17F30", VA = "0xE17F30")]
		public AssemblyPart()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class SnapGearPair
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Snap snap;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly GearHint gear;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly GearHint[] gears;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xE17B90", Offset = "0xE17B90", VA = "0xE17B90")]
		public SnapGearPair(Snap snap, GearHint gear)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xE17BC8", Offset = "0xE17BC8", VA = "0xE17BC8")]
		public SnapGearPair(Snap snap, GearHint[] gears)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class GearHint : MonoBehaviour
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color closeColor;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color dependingColor;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject myGameObject;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform myTransform;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer myRenderer;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform parent;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock colorBlock;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isActive;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float rotationSpeed;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float maxScale;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float percent;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorPropertyID;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xE182E4", Offset = "0xE182E4", VA = "0xE182E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xE17B88", Offset = "0xE17B88", VA = "0xE17B88")]
		public void Setup(float rotationSpeed, float maxScale)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xE1835C", Offset = "0xE1835C", VA = "0xE1835C")]
		private void AssignColorAndColorProperties()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE17634", Offset = "0xE17634", VA = "0xE17634")]
		public void SetVisibilityState(float currentDistance, float distanceToSnap, float multiplier, bool areAllDependenciesAssembled)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE18410", Offset = "0xE18410", VA = "0xE18410")]
		private void ScaleByDistance(float currentDistance, float distanceToSnap, float distanceToShow)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE149C0", Offset = "0xE149C0", VA = "0xE149C0")]
		public void SetVisibilityState(bool value)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE176DC", Offset = "0xE176DC", VA = "0xE176DC")]
		public void UpdateParent(Transform target)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE17818", Offset = "0xE17818", VA = "0xE17818")]
		public void ShowGearRotationHint(bool value)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xE18514", Offset = "0xE18514", VA = "0xE18514")]
		public GearHint()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class InstallationBox : Interaction
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3524C", Offset = "0xA3524C")]
		private sealed class <Drop>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstallationBox <>4__this;

			[Token(Token = "0x170002FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019A4")]
				[Address(RVA = "0xE18DCC", Offset = "0xE18DCC", VA = "0xE18DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A6")]
				[Address(RVA = "0xE18E38", Offset = "0xE18E38", VA = "0xE18E38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xE18A80", Offset = "0xE18A80", VA = "0xE18A80")]
			[DebuggerHidden]
			public <Drop>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xE18D00", Offset = "0xE18D00", VA = "0xE18D00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xE18D04", Offset = "0xE18D04", VA = "0xE18D04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xE18DD4", Offset = "0xE18DD4", VA = "0xE18DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A610", Offset = "0xA3A610")]
		[SerializeField]
		private Item item;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator oscillationAnimator;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssemblyManager assemblyManager;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A67C", Offset = "0xA3A67C")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform thisTransform;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Collider thisCollider;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform bottomPoint;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Fx openFx;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip audioClip;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Animation animationComponent;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HandInteractions handInteractions;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly WaitForFixedUpdate waitForFixedUpdate;

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xE1851C", Offset = "0xE1851C", VA = "0xE1851C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xE18658", Offset = "0xE18658", VA = "0xE18658", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xE18814", Offset = "0xE18814", VA = "0xE18814")]
		private void OnItemInitialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config, bool onSceneLoad)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xE18950", Offset = "0xE18950", VA = "0xE18950", Slot = "5")]
		public override void BreakInteraction()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE18954", Offset = "0xE18954", VA = "0xE18954")]
		private void DisableBox()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE18978", Offset = "0xE18978", VA = "0xE18978")]
		private void OnItemPutDown(Item item)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE18A0C", Offset = "0xE18A0C", VA = "0xE18A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41428", Offset = "0xA41428")]
		private IEnumerator Drop()
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE18824", Offset = "0xE18824", VA = "0xE18824")]
		private void UnPack(bool useAnimation = true)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xE18AAC", Offset = "0xE18AAC", VA = "0xE18AAC")]
		private void DisablePhysicsAndColliders()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xE18B68", Offset = "0xE18B68", VA = "0xE18B68")]
		private void HideImmediate()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xE18B18", Offset = "0xE18B18", VA = "0xE18B18")]
		private void HideUsingAnimation()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xE18C90", Offset = "0xE18C90", VA = "0xE18C90")]
		public InstallationBox()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class Magnet : MonoBehaviour
	{
		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MagnetType type;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Item installationItem;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CompleteInstallationReferenceHandler completeInstallationPrefab;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform installationSlot;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Snap lowerSnap;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Snap upperSnap;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Snap rightmostSnap;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Snap leftmostSnap;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject[] objectsToDisableOnComplete;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] objectsToEnableOnComplete;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA3A7D8", Offset = "0xA3A7D8")]
		private bool useFinishAnimation;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Animation animationComponent;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected AnimationClip finishAnimation;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform myTransform;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A834", Offset = "0xA3A834")]
		private bool <DeviceInstalled>k__BackingField;

		[Token(Token = "0x1700016F")]
		public bool DeviceInstalled
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xE18E40", Offset = "0xE18E40", VA = "0xE18E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4148C", Offset = "0xA4148C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xE18E48", Offset = "0xE18E48", VA = "0xE18E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4149C", Offset = "0xA4149C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public Item InstallationItem
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xE18E54", Offset = "0xE18E54", VA = "0xE18E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public Transform InstallationSlot
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xE18E5C", Offset = "0xE18E5C", VA = "0xE18E5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public bool UseFinishAnimation
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xE18E64", Offset = "0xE18E64", VA = "0xE18E64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public float FinishAnimationLength
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xE14CB8", Offset = "0xE14CB8", VA = "0xE14CB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE18E6C", Offset = "0xE18E6C", VA = "0xE18E6C")]
		public void Initialise(VRObjects vrObjects, Subsystems playerSubsystems, SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE141D8", Offset = "0xE141D8", VA = "0xE141D8")]
		public void NotifyDeviceIsInstalled()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE143EC", Offset = "0xE143EC", VA = "0xE143EC")]
		public void ToggleModels()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE18E9C", Offset = "0xE18E9C", VA = "0xE18E9C")]
		public void InstallDeviceInside()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE18F3C", Offset = "0xE18F3C", VA = "0xE18F3C")]
		public bool IsType(MagnetType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE19000", Offset = "0xE19000", VA = "0xE19000")]
		public new string GetType()
		{
			return null;
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE167FC", Offset = "0xE167FC", VA = "0xE167FC")]
		public Snap GetSnap(AssemblyPart.SnapToMagnetType snapType)
		{
			return null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE19094", Offset = "0xE19094", VA = "0xE19094")]
		public float GetSqrDistanceFrom(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xE1917C", Offset = "0xE1917C", VA = "0xE1917C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE19184", Offset = "0xE19184", VA = "0xE19184")]
		public Magnet()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public enum MagnetType
	{
		[Token(Token = "0x4000B79")]
		Radiator,
		[Token(Token = "0x4000B7A")]
		Shower,
		[Token(Token = "0x4000B7B")]
		Toilet,
		[Token(Token = "0x4000B7C")]
		Bathtub,
		[Token(Token = "0x4000B7D")]
		Sink
	}
}
namespace _Code.Interactions.Initialisers
{
	[Token(Token = "0x20001D7")]
	public abstract class Interaction : MonoBehaviour
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool isEnabled;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool hasParentItem;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected Item parentItem;

		[Token(Token = "0x6000E9D")]
		public abstract void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems);

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE1603C", Offset = "0xE1603C", VA = "0xE1603C")]
		public void SetEnabled(bool value)
		{
		}

		[Token(Token = "0x6000E9F")]
		public abstract void BreakInteraction();

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE16048", Offset = "0xE16048", VA = "0xE16048")]
		public (bool, Item) GetParentItem()
		{
			return default((bool, Item));
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE160B4", Offset = "0xE160B4", VA = "0xE160B4")]
		public void AssignParentItem(Item item)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE16024", Offset = "0xE16024", VA = "0xE16024")]
		protected Interaction()
		{
		}
	}
}
namespace _Code.Interactions.Assembly
{
	[Token(Token = "0x20001D8")]
	public abstract class AssemblyInteraction : MonoBehaviour
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A88C", Offset = "0xA3A88C")]
		[SerializeField]
		protected bool overrideInputAction;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected InteractionAction interactionAction;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssemblyInteraction[] dependingOnAssembledParts;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] objectsToEnableAfterComplete;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3A908", Offset = "0xA3A908")]
		[SerializeField]
		private bool useSounds;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected AudioSource audioSource;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip completeClip;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA3A974", Offset = "0xA3A974")]
		private bool useFinishAnimation;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected Animation animationComponent;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected AnimationClip finishAnimation;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A9D0", Offset = "0xA3A9D0")]
		private bool <Success>k__BackingField;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A9E0", Offset = "0xA3A9E0")]
		private bool <IsCompleteTriggered>k__BackingField;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRObjects vrObjects;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected InputSystem inputSystem;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected FxSceneSystem fxSystem;

		[Token(Token = "0x17000174")]
		public bool Success
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xE13144", Offset = "0xE13144", VA = "0xE13144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414AC", Offset = "0xA414AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xE1314C", Offset = "0xE1314C", VA = "0xE1314C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414BC", Offset = "0xA414BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool IsCompleteTriggered
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xE13158", Offset = "0xE13158", VA = "0xE13158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414CC", Offset = "0xA414CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xE13160", Offset = "0xE13160", VA = "0xE13160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414DC", Offset = "0xA414DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE1316C", Offset = "0xE1316C", VA = "0xE1316C", Slot = "4")]
		public virtual void Initialise(Subsystems playerSubsystems, VRObjects vrObjects, FxSceneSystem fxSystem)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE13244", Offset = "0xE13244", VA = "0xE13244")]
		public void SetCheckInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE13438", Offset = "0xE13438", VA = "0xE13438")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE13364", Offset = "0xE13364", VA = "0xE13364")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE13444", Offset = "0xE13444", VA = "0xE13444")]
		private void TriggerDefaultAnimations()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE134A4", Offset = "0xE134A4", VA = "0xE134A4")]
		private void FinishAndTriggerOnComplete()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE132B0", Offset = "0xE132B0", VA = "0xE132B0")]
		protected bool IsAllDependenciesAssembled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE13528", Offset = "0xE13528", VA = "0xE13528")]
		protected void TriggerDefaultEffects()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE1354C", Offset = "0xE1354C", VA = "0xE1354C")]
		protected void TriggerDefaultVibration()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE1359C", Offset = "0xE1359C", VA = "0xE1359C")]
		protected void TriggerDefaultSound()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE13550", Offset = "0xE13550", VA = "0xE13550")]
		protected void TriggerDefaultParticle()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE13324", Offset = "0xE13324", VA = "0xE13324")]
		private void OverrideInputAndSetAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x6000EB3")]
		protected abstract void OverrideInput(InputAction inputAction);

		[Token(Token = "0x6000EB4")]
		protected abstract void SetAction();

		[Token(Token = "0x6000EB5")]
		protected abstract void ClearAction();

		[Token(Token = "0x6000EB6")]
		protected abstract void Check(GeneralArgs args);

		[Token(Token = "0x6000EB7")]
		protected abstract void OnInteractionComplete();

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE135F0", Offset = "0xE135F0", VA = "0xE135F0")]
		protected AssemblyInteraction()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class AssemblyManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003ED")]
		public class SingleMeshModelData
		{
			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CompleteInstallationReferenceHandler referenceHandler;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform copyPositionFrom;

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xE14D48", Offset = "0xE14D48", VA = "0xE14D48")]
			public SingleMeshModelData()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3525C", Offset = "0xA3525C")]
		private sealed class <SwapToSingleMeshCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssemblyManager <>4__this;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AB")]
				[Address(RVA = "0xE14CD4", Offset = "0xE14CD4", VA = "0xE14CD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AD")]
				[Address(RVA = "0xE14D40", Offset = "0xE14D40", VA = "0xE14D40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xE144BC", Offset = "0xE144BC", VA = "0xE144BC")]
			[DebuggerHidden]
			public <SwapToSingleMeshCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xE14BAC", Offset = "0xE14BAC", VA = "0xE14BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xE14BB0", Offset = "0xE14BB0", VA = "0xE14BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xE14CDC", Offset = "0xE14CDC", VA = "0xE14CDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MagnetType magnetType;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssemblyPart manual;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<AssemblyPart> assemblyParts;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SingleMeshModelData singleMeshModelData;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Magnet currentMagnet;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Item item;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isCompleteTriggered;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool installationFinished;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool attachedToMagnet;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly WaitForSeconds waitForSecond;

		[Token(Token = "0x1400002C")]
		public event Action onCompete
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xE135F8", Offset = "0xE135F8", VA = "0xE135F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414EC", Offset = "0xA414EC")]
			add
			{
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xE1369C", Offset = "0xE1369C", VA = "0xE1369C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA414FC", Offset = "0xA414FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE13740", Offset = "0xE13740", VA = "0xE13740")]
		public void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems, Item item)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE13A68", Offset = "0xE13A68", VA = "0xE13A68")]
		public void SaveInCratePositions(Transform oscillationParent)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE13BD8", Offset = "0xE13BD8", VA = "0xE13BD8")]
		public void EnablePartPickUp()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xE13E00", Offset = "0xE13E00", VA = "0xE13E00")]
		public void HandleSell()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE13F68", Offset = "0xE13F68", VA = "0xE13F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE13FB0", Offset = "0xE13FB0", VA = "0xE13FB0")]
		private bool AreAllPartsAssembled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE140C0", Offset = "0xE140C0", VA = "0xE140C0")]
		private void Complete()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE14170", Offset = "0xE14170", VA = "0xE14170")]
		private void NotifyAndSwapObject()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE14344", Offset = "0xE14344", VA = "0xE14344")]
		private void SwapToSingleMesh()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE142D0", Offset = "0xE142D0", VA = "0xE142D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4150C", Offset = "0xA4150C")]
		private IEnumerator SwapToSingleMeshCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE144E8", Offset = "0xE144E8", VA = "0xE144E8")]
		private bool IsPlayerLookingAway()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE143AC", Offset = "0xE143AC", VA = "0xE143AC")]
		private void SetupSingleMeshObject()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE14808", Offset = "0xE14808", VA = "0xE14808")]
		public (bool, Magnet) GetClosestSnapByType(Vector3 currentPosition)
		{
			return default((bool, Magnet));
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE14934", Offset = "0xE14934", VA = "0xE14934")]
		public void SetAttachedToMagnet(Magnet magnet)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE14944", Offset = "0xE14944", VA = "0xE14944")]
		public GearHint GetFreeGearHint()
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xE14970", Offset = "0xE14970", VA = "0xE14970")]
		public void ReleaseGearHint(GearHint gearHint)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE149E8", Offset = "0xE149E8", VA = "0xE149E8")]
		private void ReleasePartFromHand(AssemblyPart assemblyPart)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xE14B40", Offset = "0xE14B40", VA = "0xE14B40")]
		public AssemblyManager()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class CompleteInstallationReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject thisGameObject;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform thisTransform;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderItemContainer toonGroup;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionAction[] actions;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Interaction[] interactions;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xE14648", Offset = "0xE14648", VA = "0xE14648")]
		public void Initialise(VRObjects vrObjects, Subsystems playerSubsystems, SceneSystems sceneSystems, Transform newParent)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE14D50", Offset = "0xE14D50", VA = "0xE14D50")]
		public CompleteInstallationReferenceHandler()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class Snap : MonoBehaviour
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform placeToSnap;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssemblyPart attachedObject;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3AA60", Offset = "0xA3AA60")]
		private bool hasMultipleGearSockets;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform gearHintSlot;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] multipleGearHintSlots;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float maxGearHintScale;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform objectInSnap;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform objectInSnapPrevParent;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3AAEC", Offset = "0xA3AAEC")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x17000176")]
		public bool IsOccupied
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xE14D58", Offset = "0xE14D58", VA = "0xE14D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41570", Offset = "0xA41570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xE14D60", Offset = "0xE14D60", VA = "0xE14D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41580", Offset = "0xA41580")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool HasMultipleGearSockets
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xE14D6C", Offset = "0xE14D6C", VA = "0xE14D6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public Transform PlaceToSnap
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xE14D74", Offset = "0xE14D74", VA = "0xE14D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public Transform GearHintSlot
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xE14D7C", Offset = "0xE14D7C", VA = "0xE14D7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public Transform[] MultipleGearHintSlots
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xE14D84", Offset = "0xE14D84", VA = "0xE14D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public AssemblyPart AttachedObject
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xE14D8C", Offset = "0xE14D8C", VA = "0xE14D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public float RotationSpeed
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xE14D94", Offset = "0xE14D94", VA = "0xE14D94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017D")]
		public float MaxGearHintScale
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xE14D9C", Offset = "0xE14D9C", VA = "0xE14D9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE14DA4", Offset = "0xE14DA4", VA = "0xE14DA4")]
		public void SnapObject(Transform t)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE14EA8", Offset = "0xE14EA8", VA = "0xE14EA8")]
		public void UnsnapObject()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE14ED4", Offset = "0xE14ED4", VA = "0xE14ED4")]
		public void HandleSnappedPartSell()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE14EDC", Offset = "0xE14EDC", VA = "0xE14EDC")]
		public Snap()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class SnapAssembly : AssemblyInteraction
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE14EF4", Offset = "0xE14EF4", VA = "0xE14EF4", Slot = "5")]
		protected override void OverrideInput(InputAction inputAction)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE14EF8", Offset = "0xE14EF8", VA = "0xE14EF8", Slot = "6")]
		protected override void SetAction()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE14F04", Offset = "0xE14F04", VA = "0xE14F04", Slot = "7")]
		protected override void ClearAction()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE14F08", Offset = "0xE14F08", VA = "0xE14F08", Slot = "8")]
		protected override void Check(GeneralArgs args)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE14F0C", Offset = "0xE14F0C", VA = "0xE14F0C", Slot = "9")]
		protected override void OnInteractionComplete()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE14F30", Offset = "0xE14F30", VA = "0xE14F30")]
		public SnapAssembly()
		{
		}
	}
}
namespace _Code.Tools
{
	[Token(Token = "0x20001DD")]
	public abstract class TriggeredFx : MonoBehaviour
	{
		[Token(Token = "0x6000EE2")]
		public abstract void Display();

		[Token(Token = "0x6000EE3")]
		public abstract void UpdateEffect(float distance);

		[Token(Token = "0x6000EE4")]
		public abstract void Hide();

		[Token(Token = "0x6000EE5")]
		public abstract void SetColor(Color color);

		[Token(Token = "0x6000EE6")]
		public abstract void PutInSocket(Transform socket);

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xCFB72C", Offset = "0xCFB72C", VA = "0xCFB72C")]
		protected TriggeredFx()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class CleaningSprayTool : Tool
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3AAFC", Offset = "0xA3AAFC")]
		private Transform raycastOrigin;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float raycastDistance;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3AB58", Offset = "0xA3AB58")]
		private Transform reticle;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private RandomSoundPlayer soundPlayer;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private ToolTriggerAnimator triggerAnimator;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Collider[] overlappedColliders;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private RaycastHit[] hits;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private GameObject reticleGameObject;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private TriggeredFx fx;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private DirtSceneSystem dirtSceneSystem;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private SkillSystem skillSys;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RaycastHit closestHit;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool hitFound;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int dirtLayer;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private int dirtMask;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private bool hitWasFound;

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xCF12D8", Offset = "0xCF12D8", VA = "0xCF12D8", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xCF14A4", Offset = "0xCF14A4", VA = "0xCF14A4", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xCF14A8", Offset = "0xCF14A8", VA = "0xCF14A8", Slot = "27")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41590", Offset = "0xA41590")]
		public override void UseOneTime()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xCF1778", Offset = "0xCF1778", VA = "0xCF1778", Slot = "16")]
		public override void PutDown(Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xCF1668", Offset = "0xCF1668", VA = "0xCF1668")]
		private void OverlapAndMakeDirtsSofter()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xCF1540", Offset = "0xCF1540", VA = "0xCF1540")]
		private bool RaycastAndFindClosestHit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xCF19D8", Offset = "0xCF19D8", VA = "0xCF19D8")]
		public bool TryGetClosestHit(out RaycastHit closestHit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xCF1848", Offset = "0xCF1848", VA = "0xCF1848")]
		private (bool, RaycastHit) FindClosestHit(RaycastHit[] hits, int hitsLength)
		{
			return default((bool, RaycastHit));
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xCF19F8", Offset = "0xCF19F8", VA = "0xCF19F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xCF1B68", Offset = "0xCF1B68", VA = "0xCF1B68")]
		private void AnimateTrigger()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xCF1A38", Offset = "0xCF1A38", VA = "0xCF1A38")]
		private void RaycastAndUpdateReticle()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCF1BD4", Offset = "0xCF1BD4", VA = "0xCF1BD4")]
		private void SetReticleTransform(RaycastHit[] hits, int length)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xCF1CE4", Offset = "0xCF1CE4", VA = "0xCF1CE4")]
		private void RotateReticle(RaycastHit hit)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xCF1E7C", Offset = "0xCF1E7C", VA = "0xCF1E7C")]
		public CleaningSprayTool()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class CleaningTool : Tool
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private GameObject brushRegular;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GameObject brushLong;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Collider cleaningColliderSeatedMode;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Collider cleaningCollider;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3AC04", Offset = "0xA3AC04")]
		private Vector3 inRightHandRotationVector;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private Vector3 inLeftHandRotationVector;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3AC60", Offset = "0xA3AC60")]
		private Transform hairPartToAnimate;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private RandomSoundPlayer soundPlayer;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Transform brushTransform;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3ACCC", Offset = "0xA3ACCC")]
		[SerializeField]
		private bool debugMode;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Collider overlap;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Collider[] overlappedColliders;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Transform hairPartToAnimateParent;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private DirtSceneSystem dirtSceneSystem;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Quaternion inRightHandRotation;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Quaternion inLeftHandRotation;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private Vector3 partToAnimateStartLocalPosition;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Vector3 controllerVelocity;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int dirtLayer;

		[Token(Token = "0x4000BD0")]
		private const float MAX_BRUSH_MOVABLE_PART_DISTANCE = 0.05f;

		[Token(Token = "0x4000BD1")]
		private const float VELOCITY_DIVIDER = 50f;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Vector3 longBrushInBeltPosition;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private Vector3 longBrushInBeltAngles;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private readonly Vector3 longBrushInHandPosition;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private readonly Vector3 longBrushInHandAngles;

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xCF1EFC", Offset = "0xCF1EFC", VA = "0xCF1EFC", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xCF2104", Offset = "0xCF2104", VA = "0xCF2104")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA415C8", Offset = "0xA415C8")]
		private void xd()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xCF2118", Offset = "0xCF2118", VA = "0xCF2118", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xCF229C", Offset = "0xCF229C", VA = "0xCF229C", Slot = "16")]
		public override void PutDown(Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xCF20F8", Offset = "0xCF20F8", VA = "0xCF20F8")]
		private void RefreshBrushModel()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xCF2318", Offset = "0xCF2318", VA = "0xCF2318")]
		public Transform GetBrushTransform()
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xCF2320", Offset = "0xCF2320", VA = "0xCF2320")]
		private void Clean()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xCF24D8", Offset = "0xCF24D8", VA = "0xCF24D8")]
		private void TriggerAudioVisuals(bool dirtWasCleaned)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xCF2558", Offset = "0xCF2558", VA = "0xCF2558")]
		private void PlaySound(bool dirtWasCleaned)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xCF250C", Offset = "0xCF250C", VA = "0xCF250C")]
		private void UpdateControllerVelocity()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xCF26B0", Offset = "0xCF26B0", VA = "0xCF26B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xCF257C", Offset = "0xCF257C", VA = "0xCF257C")]
		private void AnimateBrushCleaning()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xCF26F4", Offset = "0xCF26F4", VA = "0xCF26F4", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xCF27F4", Offset = "0xCF27F4", VA = "0xCF27F4", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xCF27F8", Offset = "0xCF27F8", VA = "0xCF27F8", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xCF2898", Offset = "0xCF2898", VA = "0xCF2898")]
		public CleaningTool()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class HammerTool : WallModificationTool
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3526C", Offset = "0xA3526C")]
		private sealed class <VisualiseToHandAttraction>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HammerTool <>4__this;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform t;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <distance>5__2;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <progress>5__3;

			[Token(Token = "0x17000302")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B1")]
				[Address(RVA = "0xCF38E4", Offset = "0xCF38E4", VA = "0xCF38E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B3")]
				[Address(RVA = "0xCF3950", Offset = "0xCF3950", VA = "0xCF3950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xCF3310", Offset = "0xCF3310", VA = "0xCF3310")]
			[DebuggerHidden]
			public <VisualiseToHandAttraction>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xCF3544", Offset = "0xCF3544", VA = "0xCF3544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xCF3548", Offset = "0xCF3548", VA = "0xCF3548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xCF38EC", Offset = "0xCF38EC", VA = "0xCF38EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3527C", Offset = "0xA3527C")]
		private sealed class <CooldownCor>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool hammerThrow;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HammerTool <>4__this;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B7")]
				[Address(RVA = "0xCF34D0", Offset = "0xCF34D0", VA = "0xCF34D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B9")]
				[Address(RVA = "0xCF353C", Offset = "0xCF353C", VA = "0xCF353C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xCF333C", Offset = "0xCF333C", VA = "0xCF333C")]
			[DebuggerHidden]
			public <CooldownCor>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xCF343C", Offset = "0xCF343C", VA = "0xCF343C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xCF3440", Offset = "0xCF3440", VA = "0xCF3440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xCF34D8", Offset = "0xCF34D8", VA = "0xCF34D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD7")]
		private const float LERP_SPEED = 0.3f;

		[Token(Token = "0x4000BD8")]
		private const float MIN_VELOCITY_TO_IMPACT_WALL = 0.044f;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private RandomSoundPlayer soundPlayer;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private ParticleSystem pickedUpParticles;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private ParticleSystem[] rotationParticles;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private RaycastHit wallHit;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private readonly WaitForSeconds hammerThrowHitCooldown;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private readonly WaitForSeconds normalHammerHitCooldown;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private bool cooldownActive;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
		private bool needsToProcessCollisionEnter;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Vector3 positionLastFrame;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Vector3 collisionHitPoint;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Coroutine lerpCor;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool distanceGrabbed;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private float movementVectorMagnitude;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Hand lastHandAttached;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Vibration vibration;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SubWall foundSubWall;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xCF2940", Offset = "0xCF2940", VA = "0xCF2940", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCF298C", Offset = "0xCF298C", VA = "0xCF298C")]
		private new void Use()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xCF2D74", Offset = "0xCF2D74", VA = "0xCF2D74")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xCF2BD8", Offset = "0xCF2BD8", VA = "0xCF2BD8")]
		private bool TryToHitWall(Vector3 toolPosition, float toolDistance, bool hammerThrow)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xCF2F08", Offset = "0xCF2F08", VA = "0xCF2F08", Slot = "15")]
		protected override void OnTick()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xCF2F5C", Offset = "0xCF2F5C", VA = "0xCF2F5C", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xCF3080", Offset = "0xCF3080", VA = "0xCF3080", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xCF3090", Offset = "0xCF3090", VA = "0xCF3090", Slot = "16")]
		public override void PutDown(Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xCF3178", Offset = "0xCF3178", VA = "0xCF3178", Slot = "32")]
		protected override void TryToPutBackInToolbelt(Hand hand)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xCF2FEC", Offset = "0xCF2FEC", VA = "0xCF2FEC")]
		private void StopLerpCor()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xCF3000", Offset = "0xCF3000", VA = "0xCF3000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41600", Offset = "0xA41600")]
		private IEnumerator VisualiseToHandAttraction(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xCF2E80", Offset = "0xCF2E80", VA = "0xCF2E80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41664", Offset = "0xA41664")]
		private IEnumerator CooldownCor(bool hammerThrow)
		{
			return null;
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xCF30E4", Offset = "0xCF30E4", VA = "0xCF30E4")]
		private void SetRotationParticlesEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xCF2A78", Offset = "0xCF2A78", VA = "0xCF2A78")]
		private bool EnoughForceIsUsed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xCF3368", Offset = "0xCF3368", VA = "0xCF3368")]
		public HammerTool()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xCF3434", Offset = "0xCF3434", VA = "0xCF3434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA416C8", Offset = "0xA416C8")]
		[DebuggerHidden]
		private void <>n__0(Transform t)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class Hand
	{
		[Token(Token = "0x20003F1")]
		public enum HandState
		{
			[Token(Token = "0x4001562")]
			Free,
			[Token(Token = "0x4001563")]
			OccupiedWithPickapable,
			[Token(Token = "0x4001564")]
			OccupiedWithInteraction
		}

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform handSocket;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform raycastOrigin;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pickupable pickupable;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PressInRangeActionOverlap interactionElement;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public _Code.VR.InputSystem.Hand type;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GeneralArgs interactionArguments;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool highlightingRed;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pickupable raycastedPickupable;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vibration vibration;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform controllerTransform;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentPosition;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HandState state;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MovingObjectsConfiguration movingObjectsConfig;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float remotePickupProgress;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool snappingToSomething;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool raycastedPickupableFound;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Transform placementGrid;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly GameObject placementGridGameObject;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly AudioSource snapToGridSFX;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly MeshRenderer placementGridRenderer;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly RemoteGrabGizmo remoteGrabGizmo;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly MaterialPropertyBlock placementGridPropertyBlock;

		[Token(Token = "0x4000C02")]
		private const float HAND_MOVE_TOLERANCE = 0.001f;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int offsetID;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int radiusID;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private LayerMask raycastLayerMask;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3AD58", Offset = "0xA3AD58")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3AD68", Offset = "0xA3AD68")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x1700017E")]
		public HandState State
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xCF3958", Offset = "0xCF3958", VA = "0xCF3958")]
			get
			{
				return default(HandState);
			}
		}

		[Token(Token = "0x1700017F")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xCF3960", Offset = "0xCF3960", VA = "0xCF3960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41700", Offset = "0xA41700")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xCF396C", Offset = "0xCF396C", VA = "0xCF396C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41710", Offset = "0xA41710")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool IsMoving
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xCF3978", Offset = "0xCF3978", VA = "0xCF3978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41720", Offset = "0xA41720")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xCF3980", Offset = "0xCF3980", VA = "0xCF3980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41730", Offset = "0xA41730")]
			private set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public bool SnappingToSomething
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xCF398C", Offset = "0xCF398C", VA = "0xCF398C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xCF3994", Offset = "0xCF3994", VA = "0xCF3994")]
		public Hand(_Code.VR.InputSystem.Hand type, VRObjects vrObjects, OneHandInteractionRefs handRefs, Vibration vibration, CollisionDetectionConfiguration config, MovingObjectsConfiguration movingObjectsConfig)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xCF3B2C", Offset = "0xCF3B2C", VA = "0xCF3B2C")]
		public void PlaySnapSound()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xCF3B98", Offset = "0xCF3B98", VA = "0xCF3B98")]
		public void SetPlacementGridVisibility(bool snappingToSomething)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xCF3BF8", Offset = "0xCF3BF8", VA = "0xCF3BF8")]
		public void SetPlacementGridTransform(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xCF3C64", Offset = "0xCF3C64", VA = "0xCF3C64")]
		public void SetItemOnGridParams(Vector3 position, float radius)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xCF3DA8", Offset = "0xCF3DA8", VA = "0xCF3DA8")]
		public (bool, Pickupable) GetRemoteGripObjects()
		{
			return default((bool, Pickupable));
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xCF3FE4", Offset = "0xCF3FE4", VA = "0xCF3FE4")]
		private bool TryToGetNewRaycastedPickapable(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xCF40B0", Offset = "0xCF40B0", VA = "0xCF40B0")]
		private void ShowLineVisuals(bool raycastValid, RaycastHit hit)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xCF4130", Offset = "0xCF4130", VA = "0xCF4130")]
		private void ShowRay(bool raycastValid, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xCF3FBC", Offset = "0xCF3FBC", VA = "0xCF3FBC")]
		public void ResetRemoteGripProgress()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xCF425C", Offset = "0xCF425C", VA = "0xCF425C")]
		public void UpdatePositionAndVelocity()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xCF4384", Offset = "0xCF4384", VA = "0xCF4384")]
		public void SetState(HandState newState)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class HandInteractions : MonoBehaviour, IRequirePlayerSubsystems, IRequireVRObjects, IRequireSceneSystems
	{
		[StructLayout(3)]
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3528C", Offset = "0xA3528C")]
		private struct <>c__DisplayClass76_0
		{
			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HandHighlightInfo handInfo;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Hand hand;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandInteractions <>4__this;

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HandHighlightInfo otherHandInfo;

			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 dir;
		}

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MovementComponent teleport;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MovingObjectsConfiguration config;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CollisionDetectionConfiguration collisionConfig;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private _Code.Raycaster.Raycaster raycaster;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rayLengthForPointingInteractable;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private OneHandInteractionRefs leftHandRefs;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OneHandInteractionRefs rightHandRefs;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputSystem inputSystem;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CollisionDetector collisionDetector;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NarratorSubsystem narratorSubsystem;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderingSceneSystem renderSys;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderItemContainer itemOutlinedLastFrame;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Collider lastCollider;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Item.RaycastArgs raycastArgs;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly HandHighlightInfo leftHandHighlightInfo;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly HandHighlightInfo rightHandHighlightInfo;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool gridEnabled;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3ADE8", Offset = "0xA3ADE8")]
		private Hand <leftHand>k__BackingField;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3ADF8", Offset = "0xA3ADF8")]
		private Hand <rightHand>k__BackingField;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color highlightColor;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Color interactionHighlightColor;

		[Token(Token = "0x17000182")]
		public Hand leftHand
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xCF4418", Offset = "0xCF4418", VA = "0xCF4418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41740", Offset = "0xA41740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xCF4420", Offset = "0xCF4420", VA = "0xCF4420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41750", Offset = "0xA41750")]
			private set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public Hand rightHand
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xCF4428", Offset = "0xCF4428", VA = "0xCF4428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41760", Offset = "0xA41760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xCF4430", Offset = "0xCF4430", VA = "0xCF4430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41770", Offset = "0xA41770")]
			private set
			{
			}
		}

		[Token(Token = "0x17000184")]
		private bool IsToggleGrabMode
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0xCF4438", Offset = "0xCF4438", VA = "0xCF4438")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCF44E4", Offset = "0xCF44E4", VA = "0xCF44E4", Slot = "5")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCF4558", Offset = "0xCF4558", VA = "0xCF4558", Slot = "6")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCF4578", Offset = "0xCF4578", VA = "0xCF4578", Slot = "4")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCF4EA8", Offset = "0xCF4EA8", VA = "0xCF4EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCF4F34", Offset = "0xCF4F34", VA = "0xCF4F34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCF5414", Offset = "0xCF5414", VA = "0xCF5414")]
		public bool IsGridSnapEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCF541C", Offset = "0xCF541C", VA = "0xCF541C")]
		public void PickUpPickupable(_Code.VR.InputSystem.Hand handType, Pickupable pickupable, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCF5814", Offset = "0xCF5814", VA = "0xCF5814")]
		public void ForcePickup(_Code.VR.InputSystem.Hand handType, Pickupable pickupable, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCF58F4", Offset = "0xCF58F4", VA = "0xCF58F4")]
		public void ReleaseItemInHand(Pickupable pickupable)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCF5A1C", Offset = "0xCF5A1C", VA = "0xCF5A1C")]
		public Pickupable GetPickapable(_Code.VR.InputSystem.Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCF5A50", Offset = "0xCF5A50", VA = "0xCF5A50")]
		public void FreeHands()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xCF4F08", Offset = "0xCF4F08", VA = "0xCF4F08")]
		private void UpdateHandsGrips()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xCF5B1C", Offset = "0xCF5B1C", VA = "0xCF5B1C")]
		private void HandleLeftGripUp(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xCF5B28", Offset = "0xCF5B28", VA = "0xCF5B28")]
		public void HandleRightGripUp(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xCF59A0", Offset = "0xCF59A0", VA = "0xCF59A0")]
		private void HandleGripUp(Hand hand, bool ignoreIntersections = false)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCF5BD0", Offset = "0xCF5BD0", VA = "0xCF5BD0")]
		public void HandleLeftGripDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCF5D74", Offset = "0xCF5D74", VA = "0xCF5D74")]
		public void HandleRightGripDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xCF5D7C", Offset = "0xCF5D7C", VA = "0xCF5D7C")]
		public bool CanManipulateItem(_Code.VR.InputSystem.Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCF5BD8", Offset = "0xCF5BD8", VA = "0xCF5BD8")]
		private void HandleGripDown(Hand hand)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCF5E04", Offset = "0xCF5E04", VA = "0xCF5E04")]
		public void ShowItemManipulationGizmo(Hand hand, Item item)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xCF5E4C", Offset = "0xCF5E4C", VA = "0xCF5E4C")]
		public void HideItemManipulationGizmo(Hand hand)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCF5E98", Offset = "0xCF5E98", VA = "0xCF5E98")]
		private void ResetHandAdditionalVisualizations(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCF5EB4", Offset = "0xCF5EB4", VA = "0xCF5EB4")]
		private void HandleToggleGripDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xCF5F04", Offset = "0xCF5F04", VA = "0xCF5F04")]
		private void HandleGripDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCF6114", Offset = "0xCF6114", VA = "0xCF6114")]
		private void HandleGripPressed(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCF6560", Offset = "0xCF6560", VA = "0xCF6560")]
		private void HandleTriggerUp(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xCF65BC", Offset = "0xCF65BC", VA = "0xCF65BC")]
		private void HandleTriggerDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCF6618", Offset = "0xCF6618", VA = "0xCF6618")]
		private void HandleTriggerPressed(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCF6674", Offset = "0xCF6674", VA = "0xCF6674")]
		private void HandleInteractionUp(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCF6858", Offset = "0xCF6858", VA = "0xCF6858")]
		private void EndInteraction(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xCF694C", Offset = "0xCF694C", VA = "0xCF694C")]
		private void HandleInteractionDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xCF6A90", Offset = "0xCF6A90", VA = "0xCF6A90")]
		private void HandleInteractionPressed(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xCF6B0C", Offset = "0xCF6B0C", VA = "0xCF6B0C")]
		private void HandleToggleGridDown(GeneralArgs generalArgs)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCF54B8", Offset = "0xCF54B8", VA = "0xCF54B8")]
		private void RedirectIfAssemblyPart(ref Pickupable pickupable)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xCF5708", Offset = "0xCF5708", VA = "0xCF5708")]
		private void SetHandsTeleportingCapabilities()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xCF680C", Offset = "0xCF680C", VA = "0xCF680C")]
		private void CompleteHandInteraction(Hand hand)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xCF6B28", Offset = "0xCF6B28", VA = "0xCF6B28")]
		private void ToggleGridVisibility(Hand hand)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xCF6C48", Offset = "0xCF6C48", VA = "0xCF6C48")]
		private void HandDistanceGrab(Hand hand)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xCF6428", Offset = "0xCF6428", VA = "0xCF6428")]
		private void UpdateGrabbedItem(Hand hand)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xCF5AB4", Offset = "0xCF5AB4", VA = "0xCF5AB4")]
		private void UpdateHandGrip(Hand hand)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xCF655C", Offset = "0xCF655C", VA = "0xCF655C")]
		private void HandleDistanceGrab(Hand hand)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xCF55E0", Offset = "0xCF55E0", VA = "0xCF55E0")]
		private void SetPickupableInHand(_Code.VR.InputSystem.Hand controller, Pickupable pickupable)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xCF5B6C", Offset = "0xCF5B6C", VA = "0xCF5B6C")]
		private void ReleaseHandPickupable(Hand hand, bool ignoreIntersections)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCF5B34", Offset = "0xCF5B34", VA = "0xCF5B34")]
		private void ResetHandAdditionalVisualizations(Hand hand)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xCF5A7C", Offset = "0xCF5A7C", VA = "0xCF5A7C")]
		private void FreeHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xCF6D40", Offset = "0xCF6D40", VA = "0xCF6D40")]
		private void RemovePickupableFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xCF4FB0", Offset = "0xCF4FB0", VA = "0xCF4FB0")]
		private void OutlineInteractablesFor(Hand hand, HandHighlightInfo handInfo, HandHighlightInfo otherHandInfo)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCF718C", Offset = "0xCF718C", VA = "0xCF718C")]
		private void HighlightEntireRenderGroup(Pickupable pickupable, ref HandHighlightInfo handInfo, ref HandHighlightInfo otherHandInfo)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xCF7000", Offset = "0xCF7000", VA = "0xCF7000")]
		private void HighlightInteractablePart(ref HandHighlightInfo handInfo, ref HandHighlightInfo otherHandInfo, RenderItemSubmeshIndexData submeshData)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCF71D0", Offset = "0xCF71D0", VA = "0xCF71D0")]
		private void SwitchLastHighlightedRenderGroup(RenderItemContainer rI, ref HandHighlightInfo handInfo, ref HandHighlightInfo otherHandInfo)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCF72F0", Offset = "0xCF72F0", VA = "0xCF72F0")]
		private void StartHighlighting(Pickupable pickupable, ref HandHighlightInfo highlightInfo)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCF60D0", Offset = "0xCF60D0", VA = "0xCF60D0")]
		private void StopHighlightingCloseItem(RenderItemContainer rI, HandHighlightInfo highlightInfo)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCF6F14", Offset = "0xCF6F14", VA = "0xCF6F14")]
		private void ClearHandInfoHighlightData(ref HandHighlightInfo highlightInfo)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xCF4DC4", Offset = "0xCF4DC4", VA = "0xCF4DC4")]
		private void SubscribeToAdditionalButtonsEvents()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xCF4BE0", Offset = "0xCF4BE0", VA = "0xCF4BE0")]
		private void SubscribeToTriggerEvents()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xCF49F4", Offset = "0xCF49F4", VA = "0xCF49F4")]
		private void SubscribeToGripEvents()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xCF4810", Offset = "0xCF4810", VA = "0xCF4810")]
		private void SubscribeToInteractionEvents()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xCF73C8", Offset = "0xCF73C8", VA = "0xCF73C8")]
		public HandInteractions()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xCF6F74", Offset = "0xCF6F74", VA = "0xCF6F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41780", Offset = "0xA41780")]
		private void <OutlineInteractablesFor>g__HighlightInteractionElementIfItCanInteract|76_0(ref <>c__DisplayClass76_0 P_0)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xCF6DB0", Offset = "0xCF6DB0", VA = "0xCF6DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41790", Offset = "0xA41790")]
		private bool <OutlineInteractablesFor>g__HandIsNotInFrustum|76_1(ref <>c__DisplayClass76_0 P_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xCF6E98", Offset = "0xCF6E98", VA = "0xCF6E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417A0", Offset = "0xA417A0")]
		private bool <OutlineInteractablesFor>g__PickupableWasFound|76_2(out Collider collider, ref <>c__DisplayClass76_0 P_1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E3")]
	public class HandHighlightInfo
	{
		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RenderItemContainer renderGroupHighlightedLastFrame;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider previousFoundCollider;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PressInRangeActionOverlap interactionElement;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionAction closeInteractionTrigger;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isHighlighting;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool foundInteraction;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public _Code.VR.InputSystem.Hand handType;

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xCF4410", Offset = "0xCF4410", VA = "0xCF4410")]
		public HandHighlightInfo()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class OneHandInteractionRefs : MonoBehaviour
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform toolSocket;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform placementGrid;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource snapToGridSFX;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RemoteGrabGizmo remoteGrabGizmo;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ItemManipulationGizmo itemManipulationGizmo;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xCF7548", Offset = "0xCF7548", VA = "0xCF7548")]
		public OneHandInteractionRefs()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class PaintTool : WallModificationTool
	{
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3529C", Offset = "0xA3529C")]
		private sealed class <LerpCanToSocket>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PaintCan can;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PaintTool <>4__this;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <canTransform>5__2;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Quaternion <startRot>5__4;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <progress>5__5;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019BD")]
				[Address(RVA = "0xCF8D64", Offset = "0xCF8D64", VA = "0xCF8D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019BF")]
				[Address(RVA = "0xCF8DD0", Offset = "0xCF8DD0", VA = "0xCF8DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xCF7E88", Offset = "0xCF7E88", VA = "0xCF7E88")]
			[DebuggerHidden]
			public <LerpCanToSocket>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xCF8A58", Offset = "0xCF8A58", VA = "0xCF8A58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xCF8A5C", Offset = "0xCF8A5C", VA = "0xCF8A5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xCF8D6C", Offset = "0xCF8D6C", VA = "0xCF8D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352AC", Offset = "0xA352AC")]
		private sealed class <MarkToolAsReadyToLoad>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PaintTool <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C3")]
				[Address(RVA = "0xCF8E90", Offset = "0xCF8E90", VA = "0xCF8E90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C5")]
				[Address(RVA = "0xCF8EFC", Offset = "0xCF8EFC", VA = "0xCF8EFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xCF8064", Offset = "0xCF8064", VA = "0xCF8064")]
			[DebuggerHidden]
			public <MarkToolAsReadyToLoad>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xCF8DD8", Offset = "0xCF8DD8", VA = "0xCF8DD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xCF8DDC", Offset = "0xCF8DDC", VA = "0xCF8DDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xCF8E98", Offset = "0xCF8E98", VA = "0xCF8E98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C2A")]
		private const float CAN_LOADING_COOLDOWN = 1f;

		[Token(Token = "0x4000C2B")]
		private const float CAN_LOADING_SPEED = 8f;

		[Token(Token = "0x4000C2C")]
		private const float RETICLE_ALPHA = 0.125f;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Transform fxSocket;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private ToolTriggerAnimator triggerAnimator;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Transform reticle;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Renderer reticleRenderer;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Transform canSlot;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private Collider slotTrigger;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private AudioClip emptyCanSound;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private AudioClip loadPaintCanSound;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private TriggeredFx paintFx;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private DirtSceneSystem dirtSystem;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private ItemSceneSystem itemSceneSystem;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private TutorialSubSystem tutorialSubsystem;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private SubWall subWallToPaint;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RaycastHit wallHit;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Color currentRegularColor;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float reticleDiameter;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ReticleBaseColor;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private HandInteractions handInteractions;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Vibration vibration;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Coroutine markAsReadyToLoadCor;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private Coroutine canLerpCor;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private bool readyToLoad;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float reticleSizeMultiplier;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private PaintCan loadedCan;

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xCF7550", Offset = "0xCF7550", VA = "0xCF7550", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subSystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xCF7678", Offset = "0xCF7678", VA = "0xCF7678", Slot = "27")]
		public override void UseOneTime()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xCF778C", Offset = "0xCF778C", VA = "0xCF778C", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xCF77D4", Offset = "0xCF77D4", VA = "0xCF77D4")]
		private bool TryToPaintWall()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xCF7A1C", Offset = "0xCF7A1C", VA = "0xCF7A1C", Slot = "15")]
		protected override void OnTick()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xCF7BB8", Offset = "0xCF7BB8", VA = "0xCF7BB8")]
		private bool ReadyToLoad()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xCF7C60", Offset = "0xCF7C60", VA = "0xCF7C60")]
		private void LoadPaintCan(PaintCan can)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xCF7E08", Offset = "0xCF7E08", VA = "0xCF7E08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA417B0", Offset = "0xA417B0")]
		private IEnumerator LerpCanToSocket(PaintCan can)
		{
			return null;
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCF7EB4", Offset = "0xCF7EB4", VA = "0xCF7EB4")]
		public void RemoveCan(PaintCan can)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCF7FF0", Offset = "0xCF7FF0", VA = "0xCF7FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41814", Offset = "0xA41814")]
		private IEnumerator MarkToolAsReadyToLoad()
		{
			return null;
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCF795C", Offset = "0xCF795C", VA = "0xCF795C")]
		private ColoringArgs GetColoringArgsByWallHit(SubWall subWall, RaycastHit wallHit)
		{
			return default(ColoringArgs);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCF8090", Offset = "0xCF8090", VA = "0xCF8090")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xCF8208", Offset = "0xCF8208", VA = "0xCF8208")]
		private void UpdateReticle(RaycastHit wallHit)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xCF8364", Offset = "0xCF8364", VA = "0xCF8364")]
		private void ChangeReticleColor()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xCF842C", Offset = "0xCF842C", VA = "0xCF842C")]
		private void ScaleReticle()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xCF8658", Offset = "0xCF8658", VA = "0xCF8658")]
		private bool FindAndSetCurrentDirtColor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCF84C8", Offset = "0xCF84C8", VA = "0xCF84C8")]
		private void RotateReticle()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCF819C", Offset = "0xCF819C", VA = "0xCF819C")]
		private void AnimateTrigger()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xCF8724", Offset = "0xCF8724", VA = "0xCF8724", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCF87B4", Offset = "0xCF87B4", VA = "0xCF87B4", Slot = "16")]
		public override void PutDown(Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xCF886C", Offset = "0xCF886C", VA = "0xCF886C", Slot = "30")]
		public override void StopUsage()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xCF8980", Offset = "0xCF8980", VA = "0xCF8980")]
		public PaintTool()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SpatulaTool : WallModificationTool
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Transform fxSocket;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private Transform raycastOriginForSeatedMode;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private TriggeredFx spatulaFx;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private RandomSoundPlayer soundPlayer;

		[Token(Token = "0x17000185")]
		private Transform RaycastOrigin
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xCF8F04", Offset = "0xCF8F04", VA = "0xCF8F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xCF8F94", Offset = "0xCF8F94", VA = "0xCF8F94", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subSystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xCF8FF0", Offset = "0xCF8FF0", VA = "0xCF8FF0", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xCF91A8", Offset = "0xCF91A8", VA = "0xCF91A8", Slot = "30")]
		public override void StopUsage()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xCF91DC", Offset = "0xCF91DC", VA = "0xCF91DC", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xCF9238", Offset = "0xCF9238", VA = "0xCF9238", Slot = "16")]
		public override void PutDown(Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xCF92B4", Offset = "0xCF92B4", VA = "0xCF92B4")]
		public SpatulaTool()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public abstract class Tool : Pickupable
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Action OnInitialise;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Action OnPickedUp;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Action OnPutDown;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3AEC8", Offset = "0xA3AEC8")]
		private bool <IsInToolBelt>k__BackingField;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private ToolBelt.ToolType type;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected _Code.Raycaster.Raycaster raycaster;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected CollisionDetector collisionDetector;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected VertexPaintingConfiguration vertexPaintingConfiguration;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected CollisionDetectionConfiguration collisionConfig;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected ToolBelt toolBelt;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private TutorialSubSystem tutorialSys;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private ToolSceneSystem toolSys;

		[Token(Token = "0x17000186")]
		public bool IsInToolBelt
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xCF9324", Offset = "0xCF9324", VA = "0xCF9324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41878", Offset = "0xA41878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xCF932C", Offset = "0xCF932C", VA = "0xCF932C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41888", Offset = "0xA41888")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xCF1444", Offset = "0xCF1444", VA = "0xCF1444", Slot = "31")]
		public virtual void InitTool(SceneSystems sceneSystems, Subsystems subsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xCF9338", Offset = "0xCF9338", VA = "0xCF9338")]
		public void Setup(ToolBelt toolBelt, VertexPaintingConfiguration vertexPaintingConfiguration, CollisionDetectionConfiguration collisionConfig)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xCF9344", Offset = "0xCF9344", VA = "0xCF9344")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41898", Offset = "0xA41898")]
		private void SimulatePickup()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCF21F4", Offset = "0xCF21F4", VA = "0xCF21F4", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCF17C4", Offset = "0xCF17C4", VA = "0xCF17C4", Slot = "16")]
		public override void PutDown(Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCF32F0", Offset = "0xCF32F0", VA = "0xCF32F0", Slot = "32")]
		protected virtual void TryToPutBackInToolbelt(Hand hand)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCF9730", Offset = "0xCF9730", VA = "0xCF9730")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA418D0", Offset = "0xA418D0")]
		public void RestoreInBeltSlot()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCF9880", Offset = "0xCF9880", VA = "0xCF9880")]
		public ToolBelt.ToolType GetToolType()
		{
			return default(ToolBelt.ToolType);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCF9888", Offset = "0xCF9888", VA = "0xCF9888", Slot = "24")]
		public override void RefreshIntersections()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCF9890", Offset = "0xCF9890", VA = "0xCF9890", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCF9358", Offset = "0xCF9358", VA = "0xCF9358")]
		public void SetCollidersLayer(string layerName)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCF1EF4", Offset = "0xCF1EF4", VA = "0xCF1EF4")]
		protected Tool()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class ToolBelt : MonoBehaviour, IRequireSceneSystems
	{
		[Token(Token = "0x20003F5")]
		private class ToolLerpBackToSocketParameters
		{
			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform socket;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 startPosition;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion startRotation;

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xCFB038", Offset = "0xCFB038", VA = "0xCFB038")]
			public ToolLerpBackToSocketParameters()
			{
			}
		}

		[Token(Token = "0x20003F6")]
		public enum ToolType
		{
			[Token(Token = "0x4001579")]
			Paint,
			[Token(Token = "0x400157A")]
			Spatula,
			[Token(Token = "0x400157B")]
			Hammer,
			[Token(Token = "0x400157C")]
			CleaningBrush,
			[Token(Token = "0x400157D")]
			CleaningSpray,
			[Token(Token = "0x400157E")]
			TrashPicker,
			[Token(Token = "0x400157F")]
			SellerTool
		}

		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352BC", Offset = "0xA352BC")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tool tool;

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xCFAA98", Offset = "0xCFAA98", VA = "0xCFAA98")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xCFAC50", Offset = "0xCFAC50", VA = "0xCFAC50")]
			internal bool <GetSlotFor>b__0(ToolSlot x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352CC", Offset = "0xA352CC")]
		private sealed class <LerpToolsIntoSocketsCor>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolBelt <>4__this;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tool tool;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool setUppingToolsOnStart;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ToolLerpBackToSocketParameters <toolLerpParameters>5__2;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <progress>5__3;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019CC")]
				[Address(RVA = "0xCFB040", Offset = "0xCFB040", VA = "0xCFB040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019CE")]
				[Address(RVA = "0xCFB0AC", Offset = "0xCFB0AC", VA = "0xCFB0AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xCFAAA0", Offset = "0xCFAAA0", VA = "0xCFAAA0")]
			[DebuggerHidden]
			public <LerpToolsIntoSocketsCor>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xCFAC94", Offset = "0xCFAC94", VA = "0xCFAC94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xCFAC98", Offset = "0xCFAC98", VA = "0xCFAC98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xCFB048", Offset = "0xCFB048", VA = "0xCFB048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve heightToDownOffset;

		[Token(Token = "0x4000C58")]
		private const float HIPS_TO_HEAD_DECREASE_MULTIPLIER = 0.0035f;

		[Token(Token = "0x4000C59")]
		private const float SEATED_MODE_HEIGHT_MULTIPLIER = 0.7f;

		[Token(Token = "0x4000C5A")]
		private const float SEATED_MODE_BACK_MULTIPLIER = 0.13f;

		[Token(Token = "0x4000C5B")]
		private const float MAX_HEAD_TILT_TO_UPDATE_BELT_POSITION_AND_ROTATION = 0.9f;

		[Token(Token = "0x4000C5C")]
		private const float ANDROID_MOVEMENT_SPEED = 0.08f;

		[Token(Token = "0x4000C5D")]
		private const float ANDROID_ROTATION_SPEED = 0.125f;

		[Token(Token = "0x4000C5E")]
		private const float MOVEMENT_SPEED = 5.75f;

		[Token(Token = "0x4000C5F")]
		private const float ROTATION_SPEED = 9f;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 center;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve beltSlowDownCurve;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve toolReturnSpeedCurve;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ToolSlot[] slots;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform head;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VertexPaintingConfiguration vertexPaintingConfiguration;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CollisionDetectionConfiguration collisionConfiguration;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource putInSocketAudio;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 lastProperPositionOffset;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform myTransform;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tool[] toolInstances;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool notHandledHeadRotationCaseJustEntered;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<ToolType, bool> toolToLerpState;

		[Token(Token = "0x17000187")]
		public Vector3 Center
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xCF98DC", Offset = "0xCF98DC", VA = "0xCF98DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000188")]
		public float Radius
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xCF98E8", Offset = "0xCF98E8", VA = "0xCF98E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000189")]
		public Tool[] ToolInstances
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xCF98F0", Offset = "0xCF98F0", VA = "0xCF98F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCF98F8", Offset = "0xCF98F8", VA = "0xCF98F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xCF9BE4", Offset = "0xCF9BE4", VA = "0xCF9BE4")]
		public void Setup(IEnumerable<Tool> tools, bool setUppingToolsOnStart = false)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xCFA02C", Offset = "0xCFA02C", VA = "0xCFA02C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xCFA3D4", Offset = "0xCFA3D4", VA = "0xCFA3D4")]
		public void RemovePreviousToolInstances()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xCFA3C0", Offset = "0xCFA3C0", VA = "0xCFA3C0")]
		private static float GetMovementSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xCFA3CC", Offset = "0xCFA3CC", VA = "0xCFA3CC")]
		private static float GetRotationSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xCF9ED4", Offset = "0xCF9ED4", VA = "0xCF9ED4")]
		private Vector3 GetNewPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xCFA4DC", Offset = "0xCFA4DC", VA = "0xCFA4DC")]
		private Vector3 GetBeltWithOffsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xCF9F9C", Offset = "0xCF9F9C", VA = "0xCF9F9C")]
		private Quaternion GetNewRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xCFA66C", Offset = "0xCFA66C", VA = "0xCFA66C")]
		private Vector3 GetBackOffsetBasedOnPlayerLeanAndHeight()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xCF966C", Offset = "0xCF966C", VA = "0xCF966C")]
		public void PutInSlotLerped(Tool tool)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xCF9754", Offset = "0xCF9754", VA = "0xCF9754")]
		public void PutInSlot(Tool tool, bool setUppingToolsOnStart = false)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xCFA9F0", Offset = "0xCFA9F0", VA = "0xCFA9F0")]
		public void PutInSlot(List<Tool> tools, bool settingUpToolsOnStart = false)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCFA920", Offset = "0xCFA920", VA = "0xCFA920")]
		private Transform GetSlotFor(Tool tool)
		{
			return null;
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCFA894", Offset = "0xCFA894", VA = "0xCFA894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41908", Offset = "0xA41908")]
		private IEnumerator LerpToolsIntoSocketsCor(Tool tool, bool setUppingToolsOnStart = false)
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xCFAACC", Offset = "0xCFAACC", VA = "0xCFAACC", Slot = "4")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCFAB10", Offset = "0xCFAB10", VA = "0xCFAB10")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xCFABE0", Offset = "0xCFABE0", VA = "0xCFABE0")]
		public ToolBelt()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class ToolsInSocketsReturnButton : MonoBehaviour
	{
		[Token(Token = "0x4000C6E")]
		private const float MAX_INTERACTION_RANGE = 0.1f;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ToolBelt toolBelt;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform myTransform;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HandInteractions handInteractions;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCFB13C", Offset = "0xCFB13C", VA = "0xCFB13C")]
		public void Initialise(ToolBelt toolBelt, VRObjects vrObjects, HandInteractions handInteractions, InputSystem inputSystem)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xCFB148", Offset = "0xCFB148", VA = "0xCFB148")]
		public ToolsInSocketsReturnButton()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class ToolSlot : MonoBehaviour
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToolBelt.ToolType type;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform slotTransform;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xCFB0B4", Offset = "0xCFB0B4", VA = "0xCFB0B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCFB0DC", Offset = "0xCFB0DC", VA = "0xCFB0DC")]
		public Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xCFAC84", Offset = "0xCFAC84", VA = "0xCFAC84")]
		public bool IsDestinedFor(ToolBelt.ToolType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xCFB0E4", Offset = "0xCFB0E4", VA = "0xCFB0E4")]
		public ToolSlot()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class ToolSlotsCache : Cache<ToolSlot>
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xCFB0EC", Offset = "0xCFB0EC", VA = "0xCFB0EC")]
		public ToolSlotsCache()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class TrashTool : Tool
	{
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352DC", Offset = "0xA352DC")]
		private sealed class <LayerTransitionCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrashTool <>4__this;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 startPosition;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <progress>5__2;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D2")]
				[Address(RVA = "0xCFB6B8", Offset = "0xCFB6B8", VA = "0xCFB6B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D4")]
				[Address(RVA = "0xCFB724", Offset = "0xCFB724", VA = "0xCFB724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xCFB528", Offset = "0xCFB528", VA = "0xCFB528")]
			[DebuggerHidden]
			public <LayerTransitionCor>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60019D0")]
			[Address(RVA = "0xCFB55C", Offset = "0xCFB55C", VA = "0xCFB55C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xCFB560", Offset = "0xCFB560", VA = "0xCFB560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xCFB6C0", Offset = "0xCFB6C0", VA = "0xCFB6C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C75")]
		private const string LONG_STATE_LAYER_NAME = "Long";

		[Token(Token = "0x4000C76")]
		private const string USE_TRIGGER_NAME = "Use";

		[Token(Token = "0x4000C77")]
		private const float PULL_OUT_SPEED = 2f;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private Transform pickerTransform;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AudioSource audio;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private RandomSoundPlayer trashRemovedSoundPlayer;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private ToolTriggerAnimator triggerAnim;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Transform toolPullOutTransform;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Vector3 inPosition;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private Vector3 outPosition;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private TrashSceneSystem trashSystem;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Hand hand;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Coroutine pullOutCor;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xCFB150", Offset = "0xCFB150", VA = "0xCFB150", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xCFB1A8", Offset = "0xCFB1A8", VA = "0xCFB1A8", Slot = "27")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4196C", Offset = "0xA4196C")]
		public override void UseOneTime()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCFB29C", Offset = "0xCFB29C", VA = "0xCFB29C", Slot = "15")]
		protected override void OnTick()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCFB2D4", Offset = "0xCFB2D4", VA = "0xCFB2D4")]
		private void AnimateTrigger()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCFB340", Offset = "0xCFB340", VA = "0xCFB340", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xCFB344", Offset = "0xCFB344", VA = "0xCFB344", Slot = "14")]
		public override void PickUp(Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCFB3D0", Offset = "0xCFB3D0", VA = "0xCFB3D0", Slot = "16")]
		public override void PutDown(Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xCFB36C", Offset = "0xCFB36C", VA = "0xCFB36C")]
		private void PullOut()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xCFB400", Offset = "0xCFB400", VA = "0xCFB400")]
		private void PullIn()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xCFB464", Offset = "0xCFB464", VA = "0xCFB464")]
		private void StopLerpCoroutine()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xCFB478", Offset = "0xCFB478", VA = "0xCFB478")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA419A4", Offset = "0xA419A4")]
		private IEnumerator LayerTransitionCor(Vector3 startPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCFB240", Offset = "0xCFB240", VA = "0xCFB240")]
		private void PlayUseAnim()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCFB554", Offset = "0xCFB554", VA = "0xCFB554")]
		public TrashTool()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class WallModificationTool : Tool
	{
		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352EC", Offset = "0xA352EC")]
		private sealed class <UpdateQuestCor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WallModificationTool <>4__this;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D8")]
				[Address(RVA = "0xCFB974", Offset = "0xCFB974", VA = "0xCFB974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019DA")]
				[Address(RVA = "0xCFB9E0", Offset = "0xCFB9E0", VA = "0xCFB9E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xCFB7AC", Offset = "0xCFB7AC", VA = "0xCFB7AC")]
			[DebuggerHidden]
			public <UpdateQuestCor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xCFB848", Offset = "0xCFB848", VA = "0xCFB848", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xCFB84C", Offset = "0xCFB84C", VA = "0xCFB84C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xCFB97C", Offset = "0xCFB97C", VA = "0xCFB97C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected PaintingConfiguration.PaletteColor currentColor;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected WallsSceneSystem wallSystem;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected PaintingConfiguration config;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		protected Transform raycastOrigin;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly WaitForSeconds wallQuestUpdateInterval;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool initialised;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCF7600", Offset = "0xCF7600", VA = "0xCF7600", Slot = "31")]
		public override void InitTool(SceneSystems sceneSystems, Subsystems subSystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCFB7A8", Offset = "0xCFB7A8", VA = "0xCFB7A8", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCFB734", Offset = "0xCFB734", VA = "0xCFB734")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41A08", Offset = "0xA41A08")]
		private IEnumerator UpdateQuestCor()
		{
			return null;
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCF88C0", Offset = "0xCF88C0", VA = "0xCF88C0", Slot = "30")]
		public override void StopUsage()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xCF3424", Offset = "0xCF3424", VA = "0xCF3424")]
		public WallModificationTool()
		{
		}
	}
}
namespace _Code.FX
{
	[Token(Token = "0x20001EE")]
	public class HighlightManager
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B038", Offset = "0xA3B038")]
		private List<RenderGroupHighlightData> <highlightGroups>k__BackingField;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B048", Offset = "0xA3B048")]
		private List<RenderItemHighlightData> <highlightRenderItems>k__BackingField;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderingSceneSystem renderingSceneSystem;

		[Token(Token = "0x1700018A")]
		public List<RenderGroupHighlightData> highlightGroups
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xC1EEB8", Offset = "0xC1EEB8", VA = "0xC1EEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A6C", Offset = "0xA41A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xC1EEC0", Offset = "0xC1EEC0", VA = "0xC1EEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A7C", Offset = "0xA41A7C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public List<RenderItemHighlightData> highlightRenderItems
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xC1EEC8", Offset = "0xC1EEC8", VA = "0xC1EEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A8C", Offset = "0xA41A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xC1EED0", Offset = "0xC1EED0", VA = "0xC1EED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A9C", Offset = "0xA41A9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xC1EED8", Offset = "0xC1EED8", VA = "0xC1EED8")]
		public void Initialize(RenderingSceneSystem renderingSceneSystem)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xC1EF78", Offset = "0xC1EF78", VA = "0xC1EF78")]
		public bool IsHighlightingNow(RenderItemContainer group)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xC1F05C", Offset = "0xC1F05C", VA = "0xC1F05C")]
		public void StartHighlighting(Pickupable pickupable, Color highlightColor, float minLerpVal = 0f, float maxLerpVal = 1f, float flashingSpeed = 1f)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xC1F174", Offset = "0xC1F174", VA = "0xC1F174")]
		public void StartHighlighting(RenderItemContainer group, Color highlightColor, float minLerpVal = 0f, float maxLerpVal = 1f, float flashingSpeed = 1f, bool desaturate = false)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xC1F8D0", Offset = "0xC1F8D0", VA = "0xC1F8D0")]
		public void StartHighlighting(RenderItem renderItem, Color highlightColor, float minLerpVal = 0f, float maxLerpVal = 1f, float flashingSpeed = 1f, bool desaturate = false, int submeshIndex = -1)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xC1FCF4", Offset = "0xC1FCF4", VA = "0xC1FCF4")]
		public void StopHighlighting(Pickupable pickupable)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xC1F568", Offset = "0xC1F568", VA = "0xC1F568")]
		public void StopHighlighting(RenderItemContainer group)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xC1FC38", Offset = "0xC1FC38", VA = "0xC1FC38")]
		public void StopHighlighting(RenderItem renderItem)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xC1FDB0", Offset = "0xC1FDB0", VA = "0xC1FDB0")]
		private void StopHighlightingRenderItemAtIndex(RenderItem renderItem, int index)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xC1FF34", Offset = "0xC1FF34", VA = "0xC1FF34")]
		public void UpdateHighlights()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC1FF58", Offset = "0xC1FF58", VA = "0xC1FF58")]
		private void UpdateGroupHighlights()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xC20110", Offset = "0xC20110", VA = "0xC20110")]
		private void UpdateIndividualRenderItemHighlights()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xC202AC", Offset = "0xC202AC", VA = "0xC202AC")]
		private float GetHighlightBlendValue(ref HighlightData data)
		{
			return default(float);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xC20350", Offset = "0xC20350", VA = "0xC20350")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class RenderGroupHighlightData
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RenderItemContainer group;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Color[]> renderItemsOriginalColors;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float[]> renderItemsOriginalTextureBlend;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HighlightData renderItemsSharedData;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xC1F8C8", Offset = "0xC1F8C8", VA = "0xC1F8C8")]
		public RenderGroupHighlightData()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class RenderItemHighlightData
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RenderItem renderItem;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int submeshIndex;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] originalColors;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] originalTextureBlends;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HighlightData sharedData;

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xC1FCEC", Offset = "0xC1FCEC", VA = "0xC1FCEC")]
		public RenderItemHighlightData()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public struct HighlightData
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color highlightColor;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minLerpValue;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxLerpValue;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool desaturatedHighlight;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float counter;
	}
}
namespace _Code.Systems
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33F80", Offset = "0xA33F80")]
	public class RaycasterConfiguration : ScriptableObject
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask wallLayer;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask dirtLayer;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask teleportLayers;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask teleportColllisionLayers;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask locomotionCollisionLayers;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float defaultRayLength;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float paintingRayLength;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float spatulaRayLength;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float hammeringRayLength;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cleaningRayLength;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float sprayingDirtRayLength;

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC08C8C", Offset = "0xC08C8C", VA = "0xC08C8C")]
		public LayerMask GetWallLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC08C94", Offset = "0xC08C94", VA = "0xC08C94")]
		public LayerMask GetDirtLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC08C9C", Offset = "0xC08C9C", VA = "0xC08C9C")]
		public LayerMask GetTeleportLayers()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC08CA4", Offset = "0xC08CA4", VA = "0xC08CA4")]
		public LayerMask GetTeleportCollisionLayers()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC08CAC", Offset = "0xC08CAC", VA = "0xC08CAC")]
		public LayerMask GetLocomotionCollisionLayers()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xBFF33C", Offset = "0xBFF33C", VA = "0xBFF33C")]
		public float GetRayLength(Wall.ModificationType modType)
		{
			return default(float);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC08CB4", Offset = "0xC08CB4", VA = "0xC08CB4")]
		public float GetCleaningRayLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xC08CBC", Offset = "0xC08CBC", VA = "0xC08CBC")]
		public float GetSprayingDirtRayLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xC08CC4", Offset = "0xC08CC4", VA = "0xC08CC4")]
		public float GetDefaultRayLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xC08CCC", Offset = "0xC08CCC", VA = "0xC08CCC")]
		public RaycasterConfiguration()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class DirtSaveData
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string instanceID;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool cleaned;

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xC017E0", Offset = "0xC017E0", VA = "0xC017E0")]
		public DirtSaveData()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class GameSaveData
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xC022C4", Offset = "0xC022C4", VA = "0xC022C4")]
		public GameSaveData()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class ItemSaveData
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string prefabID;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string instanceID;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 eulerAngles;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disposed;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float paintAmount;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int variantIndex;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xC04164", Offset = "0xC04164", VA = "0xC04164")]
		public ItemSaveData()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class TrashSaveData
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string instanceID;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 eulerAngles;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xBE983C", Offset = "0xBE983C", VA = "0xBE983C")]
		public TrashSaveData()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class WallsSaveData
	{
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Color> colors;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xBEAB3C", Offset = "0xBEAB3C", VA = "0xBEAB3C")]
		public WallsSaveData()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class AudioSceneSystem : MonoBehaviour, ISystem
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA352FC", Offset = "0xA352FC")]
		private sealed class <RestoreElementCor>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float useDuration;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioSceneSystem <>4__this;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioSource element;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019DE")]
				[Address(RVA = "0xC0176C", Offset = "0xC0176C", VA = "0xC0176C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E0")]
				[Address(RVA = "0xC017D8", Offset = "0xC017D8", VA = "0xC017D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019DB")]
			[Address(RVA = "0xC01210", Offset = "0xC01210", VA = "0xC01210")]
			[DebuggerHidden]
			public <RestoreElementCor>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xC01668", Offset = "0xC01668", VA = "0xC01668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xC0166C", Offset = "0xC0166C", VA = "0xC0166C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xC01774", Offset = "0xC01774", VA = "0xC01774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3530C", Offset = "0xA3530C")]
		private sealed class <PlayClipsCor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startIndex;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioSceneSystem <>4__this;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip[] clips;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E4")]
				[Address(RVA = "0xC015F4", Offset = "0xC015F4", VA = "0xC015F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E6")]
				[Address(RVA = "0xC01660", Offset = "0xC01660", VA = "0xC01660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xC013DC", Offset = "0xC013DC", VA = "0xC013DC")]
			[DebuggerHidden]
			public <PlayClipsCor>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xC01498", Offset = "0xC01498", VA = "0xC01498", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xC0149C", Offset = "0xC0149C", VA = "0xC0149C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xC015FC", Offset = "0xC015FC", VA = "0xC015FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioConfiguration config;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource[] initialOneShotSources;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Stack<AudioSource> cachedOneShotSources;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioClip[] clipsToPlay;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentAudioClipIndex;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine playClipsCor;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B138", Offset = "0xA3B138")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x1700018C")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xC00CFC", Offset = "0xC00CFC", VA = "0xC00CFC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41AAC", Offset = "0xA41AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xC00D04", Offset = "0xC00D04", VA = "0xC00D04", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41ABC", Offset = "0xA41ABC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xC00D0C", Offset = "0xC00D0C", VA = "0xC00D0C", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xC00E24", Offset = "0xC00E24", VA = "0xC00E24")]
		public void PlayOneShot(Vector3 position, Sound sound, float volume = 1f, float minPitch = 1f, float maxPitch = 1f, float useDuration = 1f)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC0107C", Offset = "0xC0107C", VA = "0xC0107C")]
		public void Play(AudioClip clip, Vector3 position, float useDuration = 1f)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC00FEC", Offset = "0xC00FEC", VA = "0xC00FEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41ACC", Offset = "0xA41ACC")]
		private IEnumerator RestoreElementCor(AudioSource element, float useDuration)
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC0123C", Offset = "0xC0123C", VA = "0xC0123C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41B30", Offset = "0xA41B30")]
		public void SkipClip()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC01310", Offset = "0xC01310", VA = "0xC01310")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC01350", Offset = "0xC01350", VA = "0xC01350")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC00DC8", Offset = "0xC00DC8", VA = "0xC00DC8")]
		private void PlayClipsRandomly()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC012D4", Offset = "0xC012D4", VA = "0xC012D4")]
		private void ContinuePlayingFromClipIndex(int index)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC01354", Offset = "0xC01354", VA = "0xC01354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41B68", Offset = "0xA41B68")]
		private IEnumerator PlayClipsCor(AudioClip[] clips, int startIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC01408", Offset = "0xC01408", VA = "0xC01408")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xC012C0", Offset = "0xC012C0", VA = "0xC012C0")]
		private void StopPlayCoroutine()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xC0141C", Offset = "0xC0141C", VA = "0xC0141C")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xC01420", Offset = "0xC01420", VA = "0xC01420", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xC01428", Offset = "0xC01428", VA = "0xC01428")]
		public AudioSceneSystem()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public enum Sound
	{
		[Token(Token = "0x4000CBE")]
		ItemPlaced,
		[Token(Token = "0x4000CBF")]
		ItemPickedUp
	}
	[Token(Token = "0x20001FA")]
	public class ItemSceneSystem : MonoBehaviour, ISystem, IRequireSceneSystems, IRequireVRObjects, ISavableSystem<List<ItemSaveData>>, IRequirePlayerSubsystems
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3531C", Offset = "0xA3531C")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemSaveData itemSave;

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xC064A0", Offset = "0xC064A0", VA = "0xC064A0")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60019E8")]
			[Address(RVA = "0xC06AA4", Offset = "0xC06AA4", VA = "0xC06AA4")]
			internal bool <LoadItem>b__0(SceneItemEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3532C", Offset = "0xA3532C")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Item item;

			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xC06574", Offset = "0xC06574", VA = "0xC06574")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xC06AD4", Offset = "0xC06AD4", VA = "0xC06AD4")]
			internal bool <GetEntry>b__0(SceneItemEntry x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3533C", Offset = "0xA3533C")]
		private sealed class <>c
		{
			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Item, bool> <>9__53_0;

			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xC06A44", Offset = "0xC06A44", VA = "0xC06A44")]
			public <>c()
			{
			}

			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xC06A4C", Offset = "0xC06A4C", VA = "0xC06A4C")]
			internal bool <SnapItemsToGrid>b__53_0(Item x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnHouseStateDisturbed;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionDetectionConfiguration collisionConfiguration;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MovingObjectsConfiguration movingObjectsConfiguration;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<SceneItemEntry> items;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numberOfPhysicsReloadOperations;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform newItemsParent;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subsystems subsystems;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B188", Offset = "0xA3B188")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> roomIndexToNumberOfItems;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<int, List<Item>> roomIndexToItems;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int platesBroken;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int eggsBroken;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int boomerangThrown;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int nerfShots;

		[Token(Token = "0x1700018D")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xC04174", Offset = "0xC04174", VA = "0xC04174", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41BCC", Offset = "0xA41BCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xC0417C", Offset = "0xC0417C", VA = "0xC0417C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41BDC", Offset = "0xA41BDC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xC04184", Offset = "0xC04184", VA = "0xC04184", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xC04290", Offset = "0xC04290", VA = "0xC04290")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xC04298", Offset = "0xC04298", VA = "0xC04298")]
		public int GetItemsValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xC043D0", Offset = "0xC043D0", VA = "0xC043D0")]
		public int GetItemValueForSell()
		{
			return default(int);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xC04B08", Offset = "0xC04B08", VA = "0xC04B08")]
		public void RegisterPhysicsReloadOperation()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xC04B18", Offset = "0xC04B18", VA = "0xC04B18")]
		public void ResetPhysicsReloadsRegistry()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC04B20", Offset = "0xC04B20", VA = "0xC04B20")]
		public bool TooManyPhysicsReloadOperations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xC04B30", Offset = "0xC04B30", VA = "0xC04B30")]
		public void RegisterPlateCollision()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xBF4BA8", Offset = "0xBF4BA8", VA = "0xBF4BA8")]
		public void RegisterBoomerangThrow()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xC04B7C", Offset = "0xC04B7C", VA = "0xC04B7C")]
		public void RegisterEggCollision()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xC04BC8", Offset = "0xC04BC8", VA = "0xC04BC8")]
		public void RegisterNerfShot()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xC04C14", Offset = "0xC04C14", VA = "0xC04C14")]
		public List<SceneItemEntry> GetItems()
		{
			return null;
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xC04C1C", Offset = "0xC04C1C", VA = "0xC04C1C")]
		public Dictionary<int, List<Item>> GetRoomsIndexToItems()
		{
			return null;
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xC04C24", Offset = "0xC04C24", VA = "0xC04C24", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xC04C2C", Offset = "0xC04C2C", VA = "0xC04C2C", Slot = "8")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xC04C34", Offset = "0xC04C34", VA = "0xC04C34")]
		public Item SpawnPreviewItem(Item prefab, Transform pivot)
		{
			return null;
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xC04F40", Offset = "0xC04F40", VA = "0xC04F40")]
		public Item SpawnSceneItem(Item prefab, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xC051F8", Offset = "0xC051F8", VA = "0xC051F8")]
		public void ConvertPreviewItemToSceneItem(Item prefab, Item instance)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xC04E28", Offset = "0xC04E28", VA = "0xC04E28")]
		private Item InstantiateItem(Item prefab, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xC051BC", Offset = "0xC051BC", VA = "0xC051BC")]
		private void InitItem(Item itemInstance)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xC05448", Offset = "0xC05448", VA = "0xC05448")]
		private void NotifyQuestSystemAboutItemRemoval(Item itemInstance)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xC050F8", Offset = "0xC050F8", VA = "0xC050F8")]
		private SceneItemEntry AddNewSceneItemEntry(Item prefab, Item instance)
		{
			return null;
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xC05504", Offset = "0xC05504", VA = "0xC05504")]
		private SceneItemEntry AddSceneItemEntry(Item prefab, Item instance, string instanceID)
		{
			return null;
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xC055DC", Offset = "0xC055DC", VA = "0xC055DC")]
		public void SpendMoneyOnItem(Item item)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC0570C", Offset = "0xC0570C", VA = "0xC0570C")]
		public void DisposeItem(Item item, bool hardDisposal = false)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xC05BEC", Offset = "0xC05BEC", VA = "0xC05BEC", Slot = "10")]
		public List<ItemSaveData> GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xC05D80", Offset = "0xC05D80", VA = "0xC05D80")]
		private static ItemSaveData SaveItem(SceneItemEntry item, bool disposed)
		{
			return null;
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC05F00", Offset = "0xC05F00", VA = "0xC05F00", Slot = "11")]
		public void LoadSaveData(List<ItemSaveData> itemsSaveData)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC0605C", Offset = "0xC0605C", VA = "0xC0605C")]
		private SceneItemEntry LoadItem(ItemSaveData itemSave)
		{
			return null;
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC064A8", Offset = "0xC064A8", VA = "0xC064A8")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC064AC", Offset = "0xC064AC", VA = "0xC064AC")]
		private SceneItemEntry GetEntry(Item item)
		{
			return null;
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC0657C", Offset = "0xC0657C", VA = "0xC0657C", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC06584", Offset = "0xC06584", VA = "0xC06584", Slot = "12")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC0658C", Offset = "0xC0658C", VA = "0xC0658C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41BEC", Offset = "0xA41BEC")]
		private void DisablePickingUpItems()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC06590", Offset = "0xC06590", VA = "0xC06590")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41C24", Offset = "0xA41C24")]
		public void SnapItemsToGrid()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC06970", Offset = "0xC06970", VA = "0xC06970")]
		public ItemSceneSystem()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class RenderingSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireVRObjects
	{
		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3534C", Offset = "0xA3534C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderItem renderItem;

			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xBDC300", Offset = "0xBDC300", VA = "0xBDC300")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xBDC308", Offset = "0xBDC308", VA = "0xBDC308")]
			internal bool <RemoveRenderItems>b__0(RenderItem x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3535C", Offset = "0xA3535C")]
		private struct <>c__DisplayClass37_0
		{
			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer itemRenderer;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MaterialPropertyBlock propertyBlock;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MaterialPropertyType propertyType;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderingSceneSystem <>4__this;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderItem item;
		}

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3B198", Offset = "0xA3B198")]
		private List<RenderItem> renderItems;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RenderItemContainer> renderItemContainers;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ShaderIDGroup shaderIdentifierGroup;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private Subsystems subsystems;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private VRObjects vrObjects;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3B274", Offset = "0xA3B274")]
		public RoomLightSceneManager roomLightManager;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HighlightManager highlightManager;

		[Token(Token = "0x4000CD7")]
		public const MaterialPropertyType ALL_MATERIAL_PROPERTIES_FLAG = MaterialPropertyType.COLOR | MaterialPropertyType.COLOR_TEXTURE_BLEND | MaterialPropertyType.LIGHT_POSITION;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B2D0", Offset = "0xA3B2D0")]
		private bool <isInitialised>k__BackingField;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B2E0", Offset = "0xA3B2E0")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x1700018E")]
		public bool isInitialised
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xC08E24", Offset = "0xC08E24", VA = "0xC08E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C7C", Offset = "0xA41C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xC08E2C", Offset = "0xC08E2C", VA = "0xC08E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C8C", Offset = "0xA41C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xC08ED8", Offset = "0xC08ED8", VA = "0xC08ED8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C9C", Offset = "0xA41C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xC08EE0", Offset = "0xC08EE0", VA = "0xC08EE0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41CAC", Offset = "0xA41CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action AfterInit
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0xC08CDC", Offset = "0xC08CDC", VA = "0xC08CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C5C", Offset = "0xA41C5C")]
			add
			{
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xC08D80", Offset = "0xC08D80", VA = "0xC08D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C6C", Offset = "0xA41C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xC08E38", Offset = "0xC08E38", VA = "0xC08E38")]
		private void CacheShaderVariableIDs()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xC08EE8", Offset = "0xC08EE8", VA = "0xC08EE8", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xC09064", Offset = "0xC09064", VA = "0xC09064")]
		private void CheckForNulls()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xC093A8", Offset = "0xC093A8", VA = "0xC093A8")]
		public void Update()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xC052D0", Offset = "0xC052D0", VA = "0xC052D0")]
		public void Add(Component newObject, bool addToRoomLightManager = true)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xC093FC", Offset = "0xC093FC", VA = "0xC093FC")]
		public void Add(RenderItemContainer group, bool addToRoomLightManager = true, bool renderItemsCanBeStationary = true)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xC05988", Offset = "0xC05988", VA = "0xC05988")]
		public void RemoveRenderItems(Component renderItemsOwner)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xC09278", Offset = "0xC09278", VA = "0xC09278")]
		private void CreateMaterialPropertyBlocksAndAssignThemToAllRenderItems()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xC09598", Offset = "0xC09598", VA = "0xC09598")]
		private void CreateAndSetPropertyBlockOnRenderItem(RenderItem renderItem)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xC0930C", Offset = "0xC0930C", VA = "0xC0930C")]
		private void CreateAndInitManagers()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xC096CC", Offset = "0xC096CC", VA = "0xC096CC")]
		public void ChangeColorInsideGroup(RenderItemContainer group, Color newColor)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xC0977C", Offset = "0xC0977C", VA = "0xC0977C")]
		public void ChangeColorInsideItem(RenderItem item, Color newColor)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC097FC", Offset = "0xC097FC", VA = "0xC097FC")]
		public void ChangeColorInsideItem(RenderItem item, Color newColor, int colorIndex)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC09868", Offset = "0xC09868", VA = "0xC09868")]
		public void ChangeColorInsideItemHard(RenderItem item, Color newColor, int colorIndex)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xC093A0", Offset = "0xC093A0", VA = "0xC093A0")]
		public void UpdateAllMaterialProperties()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC098C4", Offset = "0xC098C4", VA = "0xC098C4")]
		private void UpdateSelectedPropertiesInAllRenderItems(MaterialPropertyType propertiesToUpdate)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC09B9C", Offset = "0xC09B9C", VA = "0xC09B9C")]
		private void UpdateSinglePropertyInAllRenderItems(MaterialPropertyType propertyToUpdate)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xC09C40", Offset = "0xC09C40", VA = "0xC09C40")]
		public void UpdateLightOffset(RenderItem item, int materialIndex, float lightOffset)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xC09604", Offset = "0xC09604", VA = "0xC09604")]
		public void UpdateDisplayedMaterialProperty(RenderItem item, MaterialPropertyType propertyType, int selectedMaterialIndexToUpdate = -1)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xC09EB4", Offset = "0xC09EB4", VA = "0xC09EB4")]
		private bool CheckBeforeUpdatingMaterialParameters(RenderItem item, int materialIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xC09EBC", Offset = "0xC09EBC", VA = "0xC09EBC")]
		public List<RenderItem> GetRenderItems()
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xC09EC4", Offset = "0xC09EC4", VA = "0xC09EC4")]
		public List<RenderItemContainer> GetRenderItemContainers()
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xC09ECC", Offset = "0xC09ECC", VA = "0xC09ECC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xC09ED4", Offset = "0xC09ED4", VA = "0xC09ED4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41CBC", Offset = "0xA41CBC")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xC09B8C", Offset = "0xC09B8C", VA = "0xC09B8C")]
		private bool HasFlag(MaterialPropertyType e, MaterialPropertyType flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xC09ED8", Offset = "0xC09ED8", VA = "0xC09ED8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41CF4", Offset = "0xA41CF4")]
		public void GenerateColorTextureBlendValuePropertiesOnAllSceneItems()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC09EDC", Offset = "0xC09EDC", VA = "0xC09EDC", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC09EE4", Offset = "0xC09EE4", VA = "0xC09EE4", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC09EEC", Offset = "0xC09EEC", VA = "0xC09EEC")]
		public RenderingSceneSystem()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xC09D04", Offset = "0xC09D04", VA = "0xC09D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D2C", Offset = "0xA41D2C")]
		private void <UpdateDisplayedMaterialProperty>g__SetPropertyBlockParameter|37_0(int materialToUpdateIndex, ref <>c__DisplayClass37_0 P_1)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	[Flags]
	public enum MaterialPropertyType : byte
	{
		[Token(Token = "0x4000CDC")]
		COLOR = 1,
		[Token(Token = "0x4000CDD")]
		COLOR_TEXTURE_BLEND = 2,
		[Token(Token = "0x4000CDE")]
		LIGHT_POSITION = 4,
		[Token(Token = "0x4000CDF")]
		LIGHT_OFFSET = 8
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	internal struct ShaderIDGroup
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int color;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public int colorTextureBlend;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public int lightPosition;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public int lightOffset;
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public enum ShaderType
	{
		[Token(Token = "0x4000CE5")]
		Generic,
		[Token(Token = "0x4000CE6")]
		Wall,
		[Token(Token = "0x4000CE7")]
		Floor,
		[Token(Token = "0x4000CE8")]
		Ceiling,
		[Token(Token = "0x4000CE9")]
		None,
		[Token(Token = "0x4000CEA")]
		Count
	}
	[Token(Token = "0x20001FF")]
	public class RoomLightSceneManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3536C", Offset = "0xA3536C")]
		private struct <>c__DisplayClass40_0
		{
			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RenderItemContainer renderItemContainer;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RenderItemStationaryData stationaryData;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomLightSceneManager <>4__this;
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3537C", Offset = "0xA3537C")]
		private sealed class <>c__DisplayClass40_1
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemIndexMaterialIndexPair itemIndexMaterialIndexPair;

			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xBDF80C", Offset = "0xBDF80C", VA = "0xBDF80C")]
			public <>c__DisplayClass40_1()
			{
			}

			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xBDF814", Offset = "0xBDF814", VA = "0xBDF814")]
			internal bool <AddStationaryItem>b__1(ItemIndexMaterialIndexPair e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RenderingSceneSystem renderingSystem;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private short currentPlayerRoomIndex;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private short roomCount;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractiveLamp[] interactiveLamps;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] lights;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3[] lightPreviousPositions;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider[] lightBoundingBoxes;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Pickupable> pickupables;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector4 defaultLightPosition;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector4 lightPositionToSend;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private InputSystem inputSystem;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RoomStationaryItems[] roomStationaryItems;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<RenderItem> trackedItemIndices;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ItemIndices[] roomItemIndices;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IDictionary<RenderItem, short> itemIndexRoomIndexDictionary;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Pickupable, RenderItem[]> pickupableRenderItemsDictionary;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<RenderItem, Pickupable> renderItemIndexPickupableDictionary;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Transform, InteractiveLamp> lampToInteractiveComponent;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HandInteractions handInteractionsSubsystem;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B3D0", Offset = "0xA3B3D0")]
		private bool <isInitialised>k__BackingField;

		[Token(Token = "0x17000190")]
		public bool isInitialised
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xBDC4E4", Offset = "0xBDC4E4", VA = "0xBDC4E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D5C", Offset = "0xA41D5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xBDC4EC", Offset = "0xBDC4EC", VA = "0xBDC4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D6C", Offset = "0xA41D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action AfterInit
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xBDC39C", Offset = "0xBDC39C", VA = "0xBDC39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D3C", Offset = "0xA41D3C")]
			add
			{
			}
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xBDC440", Offset = "0xBDC440", VA = "0xBDC440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D4C", Offset = "0xA41D4C")]
			remove
			{
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xBDC4F8", Offset = "0xBDC4F8", VA = "0xBDC4F8")]
		public void Initialise(RenderingSceneSystem renderingSystem, Subsystems subsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xBDC988", Offset = "0xBDC988", VA = "0xBDC988")]
		public BoxCollider[] GetRoomBoxes()
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xBDC698", Offset = "0xBDC698", VA = "0xBDC698")]
		private void CreateListsAndDictionaries()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xBDC990", Offset = "0xBDC990", VA = "0xBDC990")]
		private void InitStationaryItemsList()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xBDC6C4", Offset = "0xBDC6C4", VA = "0xBDC6C4")]
		private void InitRenderItems()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xBDCA84", Offset = "0xBDCA84", VA = "0xBDCA84")]
		private void InitRoomItemIndicesDictionary()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xBDCDFC", Offset = "0xBDCDFC", VA = "0xBDCDFC")]
		public void UpdateEverything()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xBDD1DC", Offset = "0xBDD1DC", VA = "0xBDD1DC")]
		public void Tick()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xBDD268", Offset = "0xBDD268", VA = "0xBDD268")]
		private bool ArePickupablesGathered()
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xBDD2C4", Offset = "0xBDD2C4", VA = "0xBDD2C4")]
		public void Add(Pickupable pickupable)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xBDD394", Offset = "0xBDD394", VA = "0xBDD394")]
		private void AddPickupable(RenderItemContainer group, Pickupable pickupable)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xBDD490", Offset = "0xBDD490", VA = "0xBDD490")]
		public void Add(Transform newObject)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xBDCC08", Offset = "0xBDCC08", VA = "0xBDCC08")]
		public void Add(RenderItemContainer group, bool renderItemsCanBeStationary = false)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xBDD54C", Offset = "0xBDD54C", VA = "0xBDD54C")]
		public void AddRenderItem(RenderItemContainer renderItemContainer, RenderItem renderItem, bool renderItemCanBeStationary = false)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xBDD810", Offset = "0xBDD810", VA = "0xBDD810")]
		private void AddStationaryItem(RenderItemContainer renderItemContainer, RenderItemStationaryData stationaryData)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xBDDFB8", Offset = "0xBDDFB8", VA = "0xBDDFB8")]
		public void RemoveItem(Item item)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xBDE2CC", Offset = "0xBDE2CC", VA = "0xBDE2CC")]
		private bool InitLights()
		{
			return default(bool);
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xBDE594", Offset = "0xBDE594", VA = "0xBDE594")]
		private BoxCollider[] FindAndReturnRoomColliders()
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xBDE6B4", Offset = "0xBDE6B4", VA = "0xBDE6B4")]
		private Transform[] FindAndReturnLights()
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xBDCB78", Offset = "0xBDCB78", VA = "0xBDCB78")]
		private void InitPickupableDictionaries()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xBDE9B4", Offset = "0xBDE9B4", VA = "0xBDE9B4")]
		private bool InitPlayerPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xBDEBA0", Offset = "0xBDEBA0", VA = "0xBDEBA0")]
		private bool IsPositionInBoundingBox(ref Vector3 position, BoxCollider box)
		{
			return default(bool);
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xBDE930", Offset = "0xBDE930", VA = "0xBDE930")]
		private bool IsPositionInBoundingBox(Vector3 position, BoxCollider box)
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xBDEB18", Offset = "0xBDEB18", VA = "0xBDEB18")]
		private short TryToGetBoundingBoxIndexContainingPosition(ref Vector3 position)
		{
			return default(short);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xBDDB28", Offset = "0xBDDB28", VA = "0xBDDB28")]
		private short TryToGetBoundingBoxIndexContainingPosition(Vector3 position)
		{
			return default(short);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xBDEC10", Offset = "0xBDEC10", VA = "0xBDEC10")]
		public void StartTrackingItem(RenderItem item)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xBDECA8", Offset = "0xBDECA8", VA = "0xBDECA8")]
		public void StartTrackingItems(Pickupable pickupable)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xBDEDAC", Offset = "0xBDEDAC", VA = "0xBDEDAC")]
		public void UpdateLightRoomSystemAfterChangingPositionOfPlayer(Vector3 newPlayerPosition)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xBDF428", Offset = "0xBDF428", VA = "0xBDF428")]
		private void ChangeItemRoomResidence(RenderItem item, short newRoomIndex)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xBDC984", Offset = "0xBDC984", VA = "0xBDC984")]
		public void UpdateRoomResidenceOfAllItems()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xBDEE90", Offset = "0xBDEE90", VA = "0xBDEE90")]
		private void UpdateRoomResidenceOfTrackedItems()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xBDC898", Offset = "0xBDC898", VA = "0xBDC898")]
		private void UpdateMaterialsInBoundingBox(int roomIndex)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xBDCF34", Offset = "0xBDCF34", VA = "0xBDCF34")]
		private void UpdateStationaryItemsInBoundingBox(int lightIndex)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xBDF24C", Offset = "0xBDF24C", VA = "0xBDF24C")]
		private void UpdateMaterialsOfTrackedObjects()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xBDDBBC", Offset = "0xBDDBBC", VA = "0xBDDBBC")]
		private void SetAndDisplayLightPosition(RenderItem renderItem, ref Vector4 lightPosition, int materialIndex = -1)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xBDDC48", Offset = "0xBDDC48", VA = "0xBDDC48")]
		private void SetLightPositionInRenderItem(RenderItem item, Transform light)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xBDF618", Offset = "0xBDF618", VA = "0xBDF618")]
		private void SetLightPositionInRenderItemMaterial(RenderItem item, short materialIndex, ref Transform light)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xBDF6C8", Offset = "0xBDF6C8", VA = "0xBDF6C8")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xBDF6D0", Offset = "0xBDF6D0", VA = "0xBDF6D0")]
		public RoomLightSceneManager()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xBDDCE8", Offset = "0xBDDCE8", VA = "0xBDDCE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D7C", Offset = "0xA41D7C")]
		private void <AddStationaryItem>g__InitAndAddStationaryRenderItemInternal|40_0(short stationaryDataSlotIndex, int sceneLightIndex, ref <>c__DisplayClass40_0 P_2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	internal struct RoomStationaryItems
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public List<ItemIndexMaterialIndexPair> items;
	}
	[Serializable]
	[Token(Token = "0x2000201")]
	internal struct ItemIndexMaterialIndexPair
	{
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public RenderItem item;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public short materialIndex;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public float lightOffset;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int sceneLightIndex;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool hasLightOffset;
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	internal struct ItemIndices
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public List<RenderItem> items;
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class SceneItemEntry
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item item;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string instanceID;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string prefabID;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disposed;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xBDF840", Offset = "0xBDF840", VA = "0xBDF840")]
		public SceneItemEntry()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xBDF848", Offset = "0xBDF848", VA = "0xBDF848")]
		public SceneItemEntry(Item item, string instanceId, string prefabId, bool disposed, bool hasVariants, int variantIndex)
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class SceneSaveData
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneName;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ItemSaveData> itemsSaveData;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CockroachSaveData> cockroachSaveData;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WallsSaveData WallsSaveData;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TrashSaveData> TrashSaveData;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<DirtSaveData> DirtSaveData;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<InstallationSaveData> InstallationSaveData;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PlantSaveData> PlantSaveData;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DartSaveData DartSaveData;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public QuestsSaveData QuestsSaveData;

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xBDF89C", Offset = "0xBDF89C", VA = "0xBDF89C")]
		public SceneSaveData()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class ToolSceneSystem : MonoBehaviour, IRequirePlayerSubsystems, IRequireSceneSystems, IRequireVRObjects, ISystem
	{
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3538C", Offset = "0xA3538C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<ToolBelt.ToolType> alreadyUnlocked;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ToolSceneSystem <>4__this;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Tool, bool> <>9__1;

			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xBE9460", Offset = "0xBE9460", VA = "0xBE9460")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60019F3")]
			[Address(RVA = "0xBE9628", Offset = "0xBE9628", VA = "0xBE9628")]
			internal bool <Initialise>b__1(Tool x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3539C", Offset = "0xA3539C")]
		private sealed class <>c__DisplayClass15_1
		{
			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tool newTool;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass15_0 CS$<>8__locals1;

			[Token(Token = "0x60019F4")]
			[Address(RVA = "0xBE9538", Offset = "0xBE9538", VA = "0xBE9538")]
			public <>c__DisplayClass15_1()
			{
			}

			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xBE96A4", Offset = "0xBE96A4", VA = "0xBE96A4")]
			internal void <Initialise>b__2()
			{
			}

			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xBE9710", Offset = "0xBE9710", VA = "0xBE9710")]
			internal void <Initialise>b__3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353AC", Offset = "0xA353AC")]
		private sealed class <>c
		{
			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Tool, ToolBelt.ToolType> <>9__15_0;

			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xBE9604", Offset = "0xBE9604", VA = "0xBE9604")]
			public <>c()
			{
			}

			[Token(Token = "0x60019F9")]
			[Address(RVA = "0xBE960C", Offset = "0xBE960C", VA = "0xBE960C")]
			internal ToolBelt.ToolType <Initialise>b__15_0(Tool x)
			{
				return default(ToolBelt.ToolType);
			}
		}

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CollisionDetectionConfiguration config;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToolTypeToPrefabConfig toolConfig;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Tool> availableTools;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform toolsParent;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Subsystems subSystems;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRObjects vrObjects;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<ToolBelt.ToolType> toolsRequiredOnScene;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ToolBelt toolBelt;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B4C0", Offset = "0xA3B4C0")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x17000191")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xBE8C14", Offset = "0xBE8C14", VA = "0xBE8C14", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D8C", Offset = "0xA41D8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xBE8C1C", Offset = "0xBE8C1C", VA = "0xBE8C1C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D9C", Offset = "0xA41D9C")]
			set
			{
			}
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xBE8B00", Offset = "0xBE8B00", VA = "0xBE8B00")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xBE8B84", Offset = "0xBE8B84", VA = "0xBE8B84")]
		public Transform GetToolsParent()
		{
			return null;
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xBE8C24", Offset = "0xBE8C24", VA = "0xBE8C24", Slot = "9")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xBE9540", Offset = "0xBE9540", VA = "0xBE9540", Slot = "10")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xBE9548", Offset = "0xBE9548", VA = "0xBE9548", Slot = "4")]
		public void AssignRequiredObject(Subsystems subSystems)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xBE956C", Offset = "0xBE956C", VA = "0xBE956C", Slot = "5")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xBE9574", Offset = "0xBE9574", VA = "0xBE9574", Slot = "6")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xBE957C", Offset = "0xBE957C", VA = "0xBE957C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xBE9598", Offset = "0xBE9598", VA = "0xBE9598")]
		public ToolSceneSystem()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class WallsSceneSystem : MonoBehaviour, ISystem, ISavableSystem<WallsSaveData>, IRequirePlayerSubsystems
	{
		[Serializable]
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353BC", Offset = "0xA353BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<SubWall, Bound>, SubWall> <>9__13_0;

			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xBEBA44", Offset = "0xBEBA44", VA = "0xBEBA44")]
			public <>c()
			{
			}

			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xBEBA4C", Offset = "0xBEBA4C", VA = "0xBEBA4C")]
			internal SubWall <GetSubWalls>b__13_0(KeyValuePair<SubWall, Bound> x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VertexPaintingConfiguration wallConfiguration;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Wall[] walls;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<SubWall, Bound> wallToInteractionRanges;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkillSystem skillSys;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 ADDITIONAL_BOUNDS_EXPANSION_TO_ENSURE_COVERED_SPACE;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B4F0", Offset = "0xA3B4F0")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x17000192")]
		public Wall Wall
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xBEAB44", Offset = "0xBEAB44", VA = "0xBEAB44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xBEAD7C", Offset = "0xBEAD7C", VA = "0xBEAD7C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41DAC", Offset = "0xA41DAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xBEAD84", Offset = "0xBEAD84", VA = "0xBEAD84", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41DBC", Offset = "0xA41DBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xBEAB80", Offset = "0xBEAB80", VA = "0xBEAB80")]
		private void CacheWallBounds(SubWall subWall)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xBEAD8C", Offset = "0xBEAD8C", VA = "0xBEAD8C", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xBEAED0", Offset = "0xBEAED0", VA = "0xBEAED0")]
		public SubWall[] GetSubWalls()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xBEAFD0", Offset = "0xBEAFD0", VA = "0xBEAFD0")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xBEB0D0", Offset = "0xBEB0D0", VA = "0xBEB0D0", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xBEB0D8", Offset = "0xBEB0D8", VA = "0xBEB0D8")]
		public SubWall GetWallToPaint(RaycastHit raycastHit)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xBEB234", Offset = "0xBEB234", VA = "0xBEB234")]
		public SubWall GetWallToPaint(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xBEB39C", Offset = "0xBEB39C", VA = "0xBEB39C")]
		public SubWall GetWallToPaint(Vector3 position, float errorLimit)
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xBEB574", Offset = "0xBEB574", VA = "0xBEB574")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xBEB740", Offset = "0xBEB740", VA = "0xBEB740", Slot = "8")]
		public WallsSaveData GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xBEB7E4", Offset = "0xBEB7E4", VA = "0xBEB7E4", Slot = "9")]
		public void LoadSaveData(WallsSaveData saveData)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xBEB8C8", Offset = "0xBEB8C8", VA = "0xBEB8C8", Slot = "10")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xBEB8E8", Offset = "0xBEB8E8", VA = "0xBEB8E8")]
		public WallsSceneSystem()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public struct Bound
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool correct;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Bounds bounds;
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33FCC", Offset = "0xA33FCC")]
	public class SkillsConfig : ScriptableObject
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkillDependency[] skillDependencies;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkillCost[] skillCosts;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int totalSkillPoints;

		[Token(Token = "0x17000194")]
		public int TotalSkillPoints
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0xBE79BC", Offset = "0xBE79BC", VA = "0xBE79BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000195")]
		public SkillCost[] SkillCosts
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0xBE79C4", Offset = "0xBE79C4", VA = "0xBE79C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xBE79CC", Offset = "0xBE79CC", VA = "0xBE79CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA41DCC", Offset = "0xA41DCC")]
		private void CacheTotalSkillPoints()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xBE7A3C", Offset = "0xBE7A3C", VA = "0xBE7A3C")]
		public SkillsConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public struct SkillDependency
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SkillType unlocks;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SkillType after;
	}
	[Token(Token = "0x200020A")]
	public enum SkillType
	{
		[Token(Token = "0x4000D2D")]
		PaintDrainRate,
		[Token(Token = "0x4000D2E")]
		LongerTrashPicker,
		[Token(Token = "0x4000D2F")]
		FasterCleaning,
		[Token(Token = "0x4000D30")]
		FasterPainting,
		[Token(Token = "0x4000D31")]
		TrashPickingRange,
		[Token(Token = "0x4000D32")]
		SpatulingRange,
		[Token(Token = "0x4000D33")]
		Mjonlir,
		[Token(Token = "0x4000D34")]
		PaintTool,
		[Token(Token = "0x4000D35")]
		TrashPicker,
		[Token(Token = "0x4000D36")]
		CleaningTool,
		[Token(Token = "0x4000D37")]
		PaintingRange,
		[Token(Token = "0x4000D38")]
		HammeringRange,
		[Token(Token = "0x4000D39")]
		Hammer,
		[Token(Token = "0x4000D3A")]
		Spatula,
		[Token(Token = "0x4000D3B")]
		FasterSpray
	}
	[Token(Token = "0x200020B")]
	public enum SkillState
	{
		[Token(Token = "0x4000D3D")]
		Locked,
		[Token(Token = "0x4000D3E")]
		Unlocked,
		[Token(Token = "0x4000D3F")]
		Acquired
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public struct SkillCost
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SkillType type;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int cost;
	}
	[Token(Token = "0x200020D")]
	public class SkillSystem : MonoBehaviour, IInitialise
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353CC", Offset = "0xA353CC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkillType enumValue;

			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xBE7784", Offset = "0xBE7784", VA = "0xBE7784")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xBE7910", Offset = "0xBE7910", VA = "0xBE7910")]
			internal bool <BuildSkillsToStateDict>b__1(SkillDependency x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353DC", Offset = "0xA353DC")]
		private struct <>c__DisplayClass15_0
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int progress;
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353EC", Offset = "0xA353EC")]
		private sealed class <<BuildSkillsToStateDict>g__GetUnlockedSkills|8_0>d : IEnumerable<int>, IEnumerable, IEnumerator<int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <>2__current;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkillSystem <>4__this;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <>7__wrap1;

			[Token(Token = "0x17000314")]
			private int System.Collections.Generic.IEnumerator<System.Int32>.Current
			{
				[Token(Token = "0x6001A03")]
				[Address(RVA = "0xBE778C", Offset = "0xBE778C", VA = "0xBE778C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A05")]
				[Address(RVA = "0xBE77F8", Offset = "0xBE77F8", VA = "0xBE77F8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xBE7288", Offset = "0xBE7288", VA = "0xBE7288")]
			[DebuggerHidden]
			public <<BuildSkillsToStateDict>g__GetUnlockedSkills|8_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xBE72C0", Offset = "0xBE72C0", VA = "0xBE72C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xBE73A8", Offset = "0xBE73A8", VA = "0xBE73A8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xBE72DC", Offset = "0xBE72DC", VA = "0xBE72DC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xBE7794", Offset = "0xBE7794", VA = "0xBE7794", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xBE785C", Offset = "0xBE785C", VA = "0xBE785C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<int> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xBE790C", Offset = "0xBE790C", VA = "0xBE790C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialSubSystem tutorialSubSystem;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<int> OnSkillPointsChanged;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SkillType, SkillState> OnSkillStateChanged;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SkillsConfig config;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, SkillState> skillsToState;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SkillType, int> skillToCost;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xBE66CC", Offset = "0xBE66CC", VA = "0xBE66CC", Slot = "4")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xBE6768", Offset = "0xBE6768", VA = "0xBE6768")]
		private void CreateSkillsDictionary()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xBE6880", Offset = "0xBE6880", VA = "0xBE6880")]
		private void BuildSkillsToStateDict()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xBE6CA0", Offset = "0xBE6CA0", VA = "0xBE6CA0")]
		private void UnlockSkillsDependentOn(SkillType skillType)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xBE6DC0", Offset = "0xBE6DC0", VA = "0xBE6DC0")]
		public bool HasSkill(SkillType skillType)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xBE6E34", Offset = "0xBE6E34", VA = "0xBE6E34")]
		public int GetCostOf(SkillType skillType)
		{
			return default(int);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xBE6E9C", Offset = "0xBE6E9C", VA = "0xBE6E9C")]
		public bool HasPoints(SkillType skillType)
		{
			return default(bool);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xBE6F28", Offset = "0xBE6F28", VA = "0xBE6F28")]
		public bool NotAllSkillsAcquired()
		{
			return default(bool);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xBE7024", Offset = "0xBE7024", VA = "0xBE7024")]
		public void SpendSkillPoint(SkillType skillType)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xBE7170", Offset = "0xBE7170", VA = "0xBE7170")]
		public void AddSkillPointsBasedOnProgress(int progress)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xBE7280", Offset = "0xBE7280", VA = "0xBE7280")]
		public SkillSystem()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xBE6C1C", Offset = "0xBE6C1C", VA = "0xBE6C1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41E04", Offset = "0xA41E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E04", Offset = "0xA41E04")]
		private IEnumerable<int> <BuildSkillsToStateDict>g__GetUnlockedSkills|8_0()
		{
			return null;
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xBE725C", Offset = "0xBE725C", VA = "0xBE725C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E78", Offset = "0xA41E78")]
		internal static int <AddSkillPointsBasedOnProgress>g__GetPointsRewardForJobCompleted|15_0(ref <>c__DisplayClass15_0 P_0)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA34018", Offset = "0xA34018")]
	public class ToolTypeToPrefabConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200040B")]
		public class ToolPrefabAndType
		{
			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tool prefab;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ToolBelt.ToolType type;

			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xBE9834", Offset = "0xBE9834", VA = "0xBE9834")]
			public ToolPrefabAndType()
			{
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA353FC", Offset = "0xA353FC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ToolBelt.ToolType type;

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xBE975C", Offset = "0xBE975C", VA = "0xBE975C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xBE976C", Offset = "0xBE976C", VA = "0xBE976C")]
			internal bool <GetPrefabFromType>b__0(ToolPrefabAndType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToolPrefabAndType[] toolPrefabsToTypes;

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xBE9468", Offset = "0xBE9468", VA = "0xBE9468")]
		public Tool GetPrefabFromType(ToolBelt.ToolType type)
		{
			return null;
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xBE9764", Offset = "0xBE9764", VA = "0xBE9764")]
		public ToolTypeToPrefabConfig()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class TrashSceneSystem : MonoBehaviour, ISystem, IRequireSceneSystems, IRequirePlayerSubsystems, ISavableSystem<List<TrashSaveData>>
	{
		[Serializable]
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3540C", Offset = "0xA3540C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrashPart, bool> <>9__8_0;

			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xBEA948", Offset = "0xBEA948", VA = "0xBEA948")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xBEA950", Offset = "0xBEA950", VA = "0xBEA950")]
			internal bool <GetTrashRemovedRatio>b__8_0(TrashPart x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3541C", Offset = "0xA3541C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrashPart trashPart;

			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0xBE9EFC", Offset = "0xBE9EFC", VA = "0xBE9EFC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xBEAAB0", Offset = "0xBEAAB0", VA = "0xBEAAB0")]
			internal bool <RemoveTrashPart>b__0(SceneTrashPartEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3542C", Offset = "0xA3542C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrashPart trashPart;

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xBEA0AC", Offset = "0xBEA0AC", VA = "0xBEA0AC")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xBEA96C", Offset = "0xBEA96C", VA = "0xBEA96C")]
			internal bool <GetEntry>b__0(SceneTrashPartEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3543C", Offset = "0xA3543C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrashSaveData trashSave;

			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xBEA88C", Offset = "0xBEA88C", VA = "0xBEA88C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xBEA9F8", Offset = "0xBEA9F8", VA = "0xBEA9F8")]
			internal bool <LoadTrash>b__0(SceneTrashPartEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrashSet[] trashSets;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TrashPart> trashParts;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<SceneTrashPartEntry> trashPartsSceneEntries;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RenderingSceneSystem renderingSys;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkillSystem skillSystem;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B5A0", Offset = "0xA3B5A0")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x17000196")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xBE9F04", Offset = "0xBE9F04", VA = "0xBE9F04", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E88", Offset = "0xA41E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xBE9F0C", Offset = "0xBE9F0C", VA = "0xBE9F0C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E98", Offset = "0xA41E98")]
			set
			{
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xBE9844", Offset = "0xBE9844", VA = "0xBE9844")]
		public void TryToPickUpTrashAtPosition(Vector3 toolPosition, out bool trashRemoved)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xBE9DC8", Offset = "0xBE9DC8", VA = "0xBE9DC8")]
		public TrashSet[] GetTrashes()
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xBE9DD0", Offset = "0xBE9DD0", VA = "0xBE9DD0")]
		public float GetTrashRemovedRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xBE9C24", Offset = "0xBE9C24", VA = "0xBE9C24")]
		private void RemoveTrashPart(out bool trashRemoved, TrashPart trashPart, TrashSet trashSet)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xBE9F14", Offset = "0xBE9F14", VA = "0xBE9F14", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xBE9F18", Offset = "0xBE9F18", VA = "0xBE9F18")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xBE9FE4", Offset = "0xBE9FE4", VA = "0xBE9FE4")]
		private SceneTrashPartEntry GetEntry(TrashPart trashPart)
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBEA0B4", Offset = "0xBEA0B4", VA = "0xBEA0B4", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBEA0BC", Offset = "0xBEA0BC", VA = "0xBEA0BC", Slot = "10")]
		public List<TrashSaveData> GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBEA208", Offset = "0xBEA208", VA = "0xBEA208")]
		private static TrashSaveData SaveTrash(SceneTrashPartEntry trashEntry)
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xBEA2C8", Offset = "0xBEA2C8", VA = "0xBEA2C8", Slot = "11")]
		public void LoadSaveData(List<TrashSaveData> saveData)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xBEA760", Offset = "0xBEA760", VA = "0xBEA760")]
		private SceneTrashPartEntry LoadTrash(TrashSaveData trashSave)
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBEA894", Offset = "0xBEA894", VA = "0xBEA894", Slot = "8")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xBEA8BC", Offset = "0xBEA8BC", VA = "0xBEA8BC", Slot = "9")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xBEA8DC", Offset = "0xBEA8DC", VA = "0xBEA8DC")]
		public TrashSceneSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class SceneTrashPartEntry
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrashPart trashPart;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string instanceId;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xBDF934", Offset = "0xBDF934", VA = "0xBDF934")]
		public SceneTrashPartEntry()
		{
		}
	}
}
namespace _Code.Systems.Sub_Systems.Narrator
{
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA34054", Offset = "0xA34054")]
	public class NarratorAudioLines : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000411")]
		public struct LineData
		{
			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private int id;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public NarratorLine line;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip clip;

			[Token(Token = "0x17000316")]
			public int ID
			{
				[Token(Token = "0x6001A14")]
				[Address(RVA = "0xAEB7A0", Offset = "0xAEB7A0", VA = "0xAEB7A0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xAEB7A8", Offset = "0xAEB7A8", VA = "0xAEB7A8")]
			public LineData(int id)
			{
			}

			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xAEB7B0", Offset = "0xAEB7B0", VA = "0xAEB7B0")]
			public LineData(int id, NarratorLine line, AudioClip clip)
			{
			}
		}

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip notificationSound;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<LineData> linesData;

		[Token(Token = "0x17000197")]
		public AudioClip NotificationSound
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xBE7A44", Offset = "0xBE7A44", VA = "0xBE7A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xBE7A4C", Offset = "0xBE7A4C", VA = "0xBE7A4C")]
		public (bool, AudioClip) GetLine(NarratorLine line)
		{
			return default((bool, AudioClip));
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xBE7B14", Offset = "0xBE7B14", VA = "0xBE7B14")]
		public NarratorAudioLines()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public enum NarratorLine
	{
		[Token(Token = "0x4000D55")]
		AllJobsDone = 0,
		[Token(Token = "0x4000D56")]
		Assembling = 1,
		[Token(Token = "0x4000D57")]
		BuyingItems = 2,
		[Token(Token = "0x4000D58")]
		DirtCleaning = 3,
		[Token(Token = "0x4000D59")]
		EnoughMoneyToBuyHouse = 4,
		[Token(Token = "0x4000D5A")]
		FirstJobFinished = 5,
		[Token(Token = "0x4000D5B")]
		FirstJobIntro = 6,
		[Token(Token = "0x4000D5C")]
		Grid = 7,
		[Token(Token = "0x4000D5D")]
		Hammering = 8,
		[Token(Token = "0x4000D5E")]
		JobCompletionRequirements = 9,
		[Token(Token = "0x4000D5F")]
		ModifyingWalls = 10,
		[Token(Token = "0x4000D60")]
		NewFewSkillpoints = 11,
		[Token(Token = "0x4000D61")]
		NewItems = 12,
		[Token(Token = "0x4000D62")]
		NewSkillpoint = 13,
		[Token(Token = "0x4000D63")]
		NoMoney = 14,
		[Token(Token = "0x4000D64")]
		PaintingWalls = 15,
		[Token(Token = "0x4000D65")]
		PurchasingFirstHouse = 16,
		[Token(Token = "0x4000D66")]
		Spatuling = 17,
		[Token(Token = "0x4000D67")]
		ToolbeltButton = 18,
		[Token(Token = "0x4000D68")]
		Trashpicking = 19,
		[Token(Token = "0x4000D69")]
		TutorialFinishedEnterFirstJob = 20,
		[Token(Token = "0x4000D6A")]
		WateringPlants = 21,
		[Token(Token = "0x4000D6B")]
		BasicTutorialWelcome = 22,
		[Token(Token = "0x4000D6C")]
		BasicTutorialTeleport = 23,
		[Token(Token = "0x4000D6D")]
		BasicTutorialGrab = 24,
		[Token(Token = "0x4000D6E")]
		BasicTutorialDisposeTrash = 25,
		[Token(Token = "0x4000D6F")]
		BasicTutorialToolbelt = 26,
		[Token(Token = "0x4000D70")]
		BasicTutorialOpenDoor = 27,
		[Token(Token = "0x4000D71")]
		BasicTutorialOpenTabletAndPickItem = 32,
		[Token(Token = "0x4000D72")]
		BasicTutorialEnterItemManipulationMode = 33,
		[Token(Token = "0x4000D73")]
		BasicTutorialItemManipulating = 34,
		[Token(Token = "0x4000D74")]
		BasicTutorialTabletJob = 35,
		[Token(Token = "0x4000D75")]
		CannotSellItems = 28,
		[Token(Token = "0x4000D76")]
		NoMoneyForItem = 29,
		[Token(Token = "0x4000D77")]
		TaskList = 30,
		[Token(Token = "0x4000D78")]
		BlueButton = 31
	}
	[Serializable]
	[Token(Token = "0x2000213")]
	public struct NarratorLineArguments
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NarratorLine line;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float transitionTime;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool playNotification;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool startTransitionEnabled;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool endTransitionEnabled;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xAEB830", Offset = "0xAEB830", VA = "0xAEB830")]
		public NarratorLineArguments(NarratorLine line)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xAEB84C", Offset = "0xAEB84C", VA = "0xAEB84C")]
		public NarratorLineArguments(NarratorLine line, float transitionTime)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xAEB868", Offset = "0xAEB868", VA = "0xAEB868")]
		public NarratorLineArguments(NarratorLine line, bool playNotification)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xAEB884", Offset = "0xAEB884", VA = "0xAEB884")]
		public NarratorLineArguments(NarratorLine line, float transitionTime, bool playNotification)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xAEB8A0", Offset = "0xAEB8A0", VA = "0xAEB8A0")]
		public NarratorLineArguments(NarratorLine line, bool playNotification, bool startTransitionEnabled, bool endTransitionEnabled)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xAEB8C4", Offset = "0xAEB8C4", VA = "0xAEB8C4")]
		public NarratorLineArguments(NarratorLine line, float transitionTime, bool playNotification, bool startTransitionEnabled, bool endTransitionEnabled)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class NarratorSubsystem : MonoBehaviour, IRequireSceneSystems
	{
		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3544C", Offset = "0xA3544C")]
		private sealed class <PlayCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NarratorSubsystem <>4__this;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NarratorLineArguments args;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AudioClip <clip>5__2;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <ambientVolumeNormal>5__3;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <soundVolumeNormal>5__4;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <ambientVolumeQuiet>5__5;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <soundVolumeQuiet>5__6;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A1A")]
				[Address(RVA = "0xBE8A8C", Offset = "0xBE8A8C", VA = "0xBE8A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A1C")]
				[Address(RVA = "0xBE8AF8", Offset = "0xBE8AF8", VA = "0xBE8AF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xBE81DC", Offset = "0xBE81DC", VA = "0xBE81DC")]
			[DebuggerHidden]
			public <PlayCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xBE8748", Offset = "0xBE8748", VA = "0xBE8748", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xBE874C", Offset = "0xBE874C", VA = "0xBE874C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xBE8A94", Offset = "0xBE8A94", VA = "0xBE8A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3545C", Offset = "0xA3545C")]
		private sealed class <FadeOutMusicAndSounds>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float transitionTime;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NarratorSubsystem <>4__this;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float ambientVolume;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float targetAmbientVolume;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float soundVolume;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float targetSoundVolume;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__2;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <finishTime>5__3;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A20")]
				[Address(RVA = "0xBE86D4", Offset = "0xBE86D4", VA = "0xBE86D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A22")]
				[Address(RVA = "0xBE8740", Offset = "0xBE8740", VA = "0xBE8740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xBE82E0", Offset = "0xBE82E0", VA = "0xBE82E0")]
			[DebuggerHidden]
			public <FadeOutMusicAndSounds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xBE855C", Offset = "0xBE855C", VA = "0xBE855C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xBE8560", Offset = "0xBE8560", VA = "0xBE8560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xBE86DC", Offset = "0xBE86DC", VA = "0xBE86DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixer masterMixer;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NarratorAudioLines audioLinesBase;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<NarratorLineArguments> queue;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QuestSceneSystem questSys;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine playCoroutine;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPlayCoroutineRunning;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float cheapestHousePrice;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float pausedOnTime;

		[Token(Token = "0x4000D87")]
		private const float QUIET_VOLUME_MULTIPLIER = 0.25f;

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xBE7C80", Offset = "0xBE7C80", VA = "0xBE7C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xBE7E10", Offset = "0xBE7E10", VA = "0xBE7E10")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xBE7F24", Offset = "0xBE7F24", VA = "0xBE7F24")]
		public void Stop()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xBE1BF4", Offset = "0xBE1BF4", VA = "0xBE1BF4")]
		public void Play(NarratorLineArguments args)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xBE8084", Offset = "0xBE8084", VA = "0xBE8084")]
		public void RemoveTutorialLinesFromPlayed()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xBE3118", Offset = "0xBE3118", VA = "0xBE3118")]
		public float GetClipLengthFor(NarratorLine line)
		{
			return default(float);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xBE7FFC", Offset = "0xBE7FFC", VA = "0xBE7FFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41EA8", Offset = "0xA41EA8")]
		private IEnumerator PlayCoroutine(NarratorLineArguments args)
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xBE7FF0", Offset = "0xBE7FF0", VA = "0xBE7FF0")]
		private void MarkCoroutineFinished()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xBE8208", Offset = "0xBE8208", VA = "0xBE8208")]
		private bool LineFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xBE8234", Offset = "0xBE8234", VA = "0xBE8234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41F0C", Offset = "0xA41F0C")]
		private IEnumerator FadeOutMusicAndSounds(float transitionTime, float ambientVolume, float targetAmbientVolume, float soundVolume, float targetSoundVolume)
		{
			return null;
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xBE7F74", Offset = "0xBE7F74", VA = "0xBE7F74")]
		private static float GetMixerVolume(float volume)
		{
			return default(float);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xBE830C", Offset = "0xBE830C", VA = "0xBE830C")]
		private void CheckMoneyLines()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xBE8330", Offset = "0xBE8330", VA = "0xBE8330")]
		private void CheckEnoughMoneyToBuyHouse()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xBE83DC", Offset = "0xBE83DC", VA = "0xBE83DC")]
		private void CheckNoMoney()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xBE84C0", Offset = "0xBE84C0", VA = "0xBE84C0", Slot = "4")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xBE84E0", Offset = "0xBE84E0", VA = "0xBE84E0")]
		public NarratorSubsystem()
		{
		}
	}
}
namespace _Code.Systems.Scene_Systems
{
	[Token(Token = "0x2000215")]
	public class DirtSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireSceneSystems, ISavableSystem<List<DirtSaveData>>
	{
		[Serializable]
		[Token(Token = "0x2000414")]
		public class SceneDirtPartEntry
		{
			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DirtSet dirtSet;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string instanceId;

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xBE0A1C", Offset = "0xBE0A1C", VA = "0xBE0A1C")]
			public SceneDirtPartEntry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3546C", Offset = "0xA3546C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DirtSet, bool> <>9__15_0;

			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xBE08B4", Offset = "0xBE08B4", VA = "0xBE08B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xBE08BC", Offset = "0xBE08BC", VA = "0xBE08BC")]
			internal bool <GetDirtsCleanedRatio>b__15_0(DirtSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3547C", Offset = "0xA3547C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DirtSaveData dirtSave;

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xBE0570", Offset = "0xBE0570", VA = "0xBE0570")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xBE08D8", Offset = "0xBE08D8", VA = "0xBE08D8")]
			internal bool <LoadDirt>b__0(SceneDirtPartEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3548C", Offset = "0xA3548C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DirtSet dirtSet;

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xBE0640", Offset = "0xBE0640", VA = "0xBE0640")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xBE0990", Offset = "0xBE0990", VA = "0xBE0990")]
			internal bool <GetEntry>b__0(SceneDirtPartEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DirtSet[] dirtSets;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<SceneDirtPartEntry> dirtEntries;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float cullingDistance;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subsystems subsystems;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int dirtsCleaned;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B650", Offset = "0xA3B650")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x17000198")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xBDFA94", Offset = "0xBDFA94", VA = "0xBDFA94", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F90", Offset = "0xA41F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xBDFA9C", Offset = "0xBDFA9C", VA = "0xBDFA9C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41FA0", Offset = "0xA41FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnAllDirtsCleanedEvent
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xBDF94C", Offset = "0xBDF94C", VA = "0xBDF94C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F70", Offset = "0xA41F70")]
			add
			{
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xBDF9F0", Offset = "0xBDF9F0", VA = "0xBDF9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F80", Offset = "0xA41F80")]
			remove
			{
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xBDFAA4", Offset = "0xBDFAA4", VA = "0xBDFAA4", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xBDFB2C", Offset = "0xBDFB2C", VA = "0xBDFB2C")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xBDFBA0", Offset = "0xBDFBA0", VA = "0xBDFBA0")]
		public float GetDirtsCleanedRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xBDFCCC", Offset = "0xBDFCCC", VA = "0xBDFCCC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xBDFCD4", Offset = "0xBDFCD4", VA = "0xBDFCD4")]
		public void Clean(int count, Collider[] collidersBuffer, Vector3 position, _Code.VR.InputSystem.Hand hand, bool fasterCleaningEnabled, out bool wasAnySetCleaned, out bool currentlyCleaning)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xBDFFB4", Offset = "0xBDFFB4", VA = "0xBDFFB4")]
		public void ResetCollisionStatusForAllDirts()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xBE0028", Offset = "0xBE0028", VA = "0xBE0028")]
		public DirtSet[] GetDirts()
		{
			return null;
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xBE0030", Offset = "0xBE0030", VA = "0xBE0030")]
		public void Soften(int count, Collider[] dirtCollidersBuffer, float multiplier)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xBE00CC", Offset = "0xBE00CC", VA = "0xBE00CC")]
		public void ChangeColorWithoutAlpha(int count, Collider[] dirtCollidersBuffer, Color color)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xBE0188", Offset = "0xBE0188", VA = "0xBE0188", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xBE0190", Offset = "0xBE0190", VA = "0xBE0190", Slot = "9")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xBE0198", Offset = "0xBE0198", VA = "0xBE0198", Slot = "10")]
		public List<DirtSaveData> GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xBE02E4", Offset = "0xBE02E4", VA = "0xBE02E4")]
		private static DirtSaveData SaveDirt(SceneDirtPartEntry dirt)
		{
			return null;
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xBE036C", Offset = "0xBE036C", VA = "0xBE036C", Slot = "11")]
		public void LoadSaveData(List<DirtSaveData> saveData)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xBE0470", Offset = "0xBE0470", VA = "0xBE0470")]
		private SceneDirtPartEntry LoadDirt(DirtSaveData dirtSave)
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xBE0578", Offset = "0xBE0578", VA = "0xBE0578")]
		private SceneDirtPartEntry GetEntry(DirtSet dirtSet)
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xBDFECC", Offset = "0xBDFECC", VA = "0xBDFECC")]
		private void HandleDirtCleaned(DirtSet dirtSet)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xBE0648", Offset = "0xBE0648", VA = "0xBE0648")]
		private void NotifyQuestSystemAboutDirtCleaned(DirtSet dirtSet)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xBE0840", Offset = "0xBE0840", VA = "0xBE0840")]
		public DirtSceneSystem()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class FxSceneSystem : MonoBehaviour, ISystem
	{
		[Token(Token = "0x2000418")]
		public enum FxType
		{
			[Token(Token = "0x40015E0")]
			WallHit,
			[Token(Token = "0x40015E1")]
			ItemPlaced,
			[Token(Token = "0x40015E2")]
			PartAssembled,
			[Token(Token = "0x40015E3")]
			BrushClean,
			[Token(Token = "0x40015E4")]
			PaintExplosion,
			[Token(Token = "0x40015E5")]
			CarCrash
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3549C", Offset = "0xA3549C")]
		private sealed class <HideFx>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Cache<_Code.Systems.Fx.Fx> cache;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public _Code.Systems.Fx.Fx fx;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A2E")]
				[Address(RVA = "0xBE111C", Offset = "0xBE111C", VA = "0xBE111C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A30")]
				[Address(RVA = "0xBE1188", Offset = "0xBE1188", VA = "0xBE1188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xBE1024", Offset = "0xBE1024", VA = "0xBE1024")]
			[DebuggerHidden]
			public <HideFx>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xBE1058", Offset = "0xBE1058", VA = "0xBE1058", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xBE105C", Offset = "0xBE105C", VA = "0xBE105C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xBE1124", Offset = "0xBE1124", VA = "0xBE1124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D90")]
		private const int PAINT_EXPLOSION_LIFETIME = 3;

		[Token(Token = "0x4000D91")]
		private const int MAX_EXPLOSION_TIME_INTERVAL = 1;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FxCache wallHitCache;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FxCache itemPlacedCache;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FxCache partAssembledCache;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FxCache cleanCache;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FxCache paintCanExplosionCache;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FxCache carCrashCache;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TriggeredFx paintingFx;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TriggeredFx spatulingFx;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TriggeredFx cleanSprayFx;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TriggeredFx cleanStarsFx;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastCanExplosionTime;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B700", Offset = "0xA3B700")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x17000199")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xBE0A24", Offset = "0xBE0A24", VA = "0xBE0A24", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41FB0", Offset = "0xA41FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xBE0A2C", Offset = "0xBE0A2C", VA = "0xBE0A2C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41FC0", Offset = "0xA41FC0")]
			set
			{
			}
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xBE0A34", Offset = "0xBE0A34", VA = "0xBE0A34", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xBE0A38", Offset = "0xBE0A38", VA = "0xBE0A38")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xBE0A3C", Offset = "0xBE0A3C", VA = "0xBE0A3C", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xBE0A44", Offset = "0xBE0A44", VA = "0xBE0A44")]
		public bool ReadyForCanExplosion()
		{
			return default(bool);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xBE0A78", Offset = "0xBE0A78", VA = "0xBE0A78")]
		public void ShowFx(FxType type, Vector3 position)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xBE0D10", Offset = "0xBE0D10", VA = "0xBE0D10")]
		public void ShowPaintExplosionFx(Vector3 position, Color color)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xBE0E54", Offset = "0xBE0E54", VA = "0xBE0E54")]
		public TriggeredFx SpawnAndGetPaintingFxInstance()
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xBE0EC8", Offset = "0xBE0EC8", VA = "0xBE0EC8")]
		public TriggeredFx SpawnAndGetSpatulingFxInstance()
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xBE0F3C", Offset = "0xBE0F3C", VA = "0xBE0F3C")]
		public TriggeredFx SpawnAndGetCleaningSprayFxInstance()
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xBE0FB0", Offset = "0xBE0FB0", VA = "0xBE0FB0")]
		public TriggeredFx SpawnAndGetCleanStarsFxInstance()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xBE0C80", Offset = "0xBE0C80", VA = "0xBE0C80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41FD0", Offset = "0xA41FD0")]
		private IEnumerator HideFx(Cache<_Code.Systems.Fx.Fx> cache, _Code.Systems.Fx.Fx fx, float delay = 1f)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xBE0B74", Offset = "0xBE0B74", VA = "0xBE0B74")]
		private FxCache GetCacheByType(FxType type)
		{
			return null;
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xBE1050", Offset = "0xBE1050", VA = "0xBE1050")]
		public FxSceneSystem()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class InstallationSceneSystem : MonoBehaviour, ISystem, IRequireSceneSystems, IRequireVRObjects, IRequirePlayerSubsystems, ISavableSystem<List<InstallationSaveData>>
	{
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354AC", Offset = "0xA354AC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InstallationSaveData data;

			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xBE169C", Offset = "0xBE169C", VA = "0xBE169C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xBE1860", Offset = "0xBE1860", VA = "0xBE1860")]
			internal bool <LoadSaveData>b__0(MagnetEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CollisionDetectionConfiguration collisionConfiguration;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GearHint gearPrefab;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Magnet[] magnets;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<MagnetEntry> magnetEntries;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssemblyDifficult sceneAssemblyDifficult;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subsystems subsystems;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Stack<GearHint> gearHintsPull;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B770", Offset = "0xA3B770")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x1700019A")]
		public AssemblyDifficult SceneAssemblyDifficult
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xBE1190", Offset = "0xBE1190", VA = "0xBE1190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xBE1198", Offset = "0xBE1198", VA = "0xBE1198", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42034", Offset = "0xA42034")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xBE11A0", Offset = "0xBE11A0", VA = "0xBE11A0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42044", Offset = "0xA42044")]
			set
			{
			}
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBE11A8", Offset = "0xBE11A8", VA = "0xBE11A8", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBE1224", Offset = "0xBE1224", VA = "0xBE1224")]
		public Magnet GetNearestMagnet(Vector3 position, MagnetType type)
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xBE1308", Offset = "0xBE1308", VA = "0xBE1308")]
		public Magnet[] GetMagnets()
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xBE1310", Offset = "0xBE1310", VA = "0xBE1310", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xBE1318", Offset = "0xBE1318", VA = "0xBE1318", Slot = "11")]
		public List<InstallationSaveData> GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xBE1440", Offset = "0xBE1440", VA = "0xBE1440", Slot = "12")]
		public void LoadSaveData(List<InstallationSaveData> saveData)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBE16A4", Offset = "0xBE16A4", VA = "0xBE16A4")]
		public GearHint GetGearHint()
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBE1748", Offset = "0xBE1748", VA = "0xBE1748")]
		public void ReleaseGearHint(GearHint gearHint)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBE17B0", Offset = "0xBE17B0", VA = "0xBE17B0", Slot = "8")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xBE17B8", Offset = "0xBE17B8", VA = "0xBE17B8", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xBE17C0", Offset = "0xBE17C0", VA = "0xBE17C0", Slot = "10")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xBE17C8", Offset = "0xBE17C8", VA = "0xBE17C8")]
		public InstallationSceneSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class MagnetEntry
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string instanceId;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Magnet magnet;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xBE2058", Offset = "0xBE2058", VA = "0xBE2058")]
		public MagnetEntry()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public struct InstallationSaveData
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string magnetInstanceId;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool deviceInstalled;
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class AssemblyDifficult
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3B780", Offset = "0xA3B780")]
		public float snapDistanceToleranceMultiplier;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3B79C", Offset = "0xA3B79C")]
		public float snapRotationToleranceMultiplier;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xBDF93C", Offset = "0xBDF93C", VA = "0xBDF93C")]
		public AssemblyDifficult()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class MainMenuSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireVRObjects
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MainMenuUI mainMenuUi;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider teleportAreaCollider;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TeleportMarkerReferenceHandler teleportMarker;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B7E8", Offset = "0xA3B7E8")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x1700019C")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xBE2060", Offset = "0xBE2060", VA = "0xBE2060", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42054", Offset = "0xA42054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xBE2068", Offset = "0xBE2068", VA = "0xBE2068", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42064", Offset = "0xA42064")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		private static string NewGameCancelText
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xBE2070", Offset = "0xBE2070", VA = "0xBE2070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private static string NewGameConfirmText
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xBE20BC", Offset = "0xBE20BC", VA = "0xBE20BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private static string NewGameTitleText
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xBE2108", Offset = "0xBE2108", VA = "0xBE2108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xBE2154", Offset = "0xBE2154", VA = "0xBE2154", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xBE25A4", Offset = "0xBE25A4", VA = "0xBE25A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xBE25A8", Offset = "0xBE25A8", VA = "0xBE25A8")]
		private void ShowTeleportReticle()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xBE26D4", Offset = "0xBE26D4", VA = "0xBE26D4")]
		private bool IsInsideHorizontalColliderBounds(Collider collider, Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xBE2488", Offset = "0xBE2488", VA = "0xBE2488")]
		private void LockInputs()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xBE2858", Offset = "0xBE2858", VA = "0xBE2858")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xBE28B8", Offset = "0xBE28B8", VA = "0xBE28B8")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xBE28E4", Offset = "0xBE28E4", VA = "0xBE28E4")]
		public void StartNewGame()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xBE2AD4", Offset = "0xBE2AD4", VA = "0xBE2AD4")]
		private void HidePopup()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xBE2AF0", Offset = "0xBE2AF0", VA = "0xBE2AF0")]
		private void NewGame()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xBE2B7C", Offset = "0xBE2B7C", VA = "0xBE2B7C")]
		public void ContinueGame()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xBE2A64", Offset = "0xBE2A64", VA = "0xBE2A64")]
		private void GotoOffice()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xBE2B80", Offset = "0xBE2B80", VA = "0xBE2B80")]
		private void UnlockPlayerStuff()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xBE24DC", Offset = "0xBE24DC", VA = "0xBE24DC")]
		private void DisableWatches()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xBE2E4C", Offset = "0xBE2E4C", VA = "0xBE2E4C")]
		private void EnableWatches()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xBE2F14", Offset = "0xBE2F14", VA = "0xBE2F14")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xBE2FDC", Offset = "0xBE2FDC", VA = "0xBE2FDC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xBE2FE4", Offset = "0xBE2FE4", VA = "0xBE2FE4", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xBE2FEC", Offset = "0xBE2FEC", VA = "0xBE2FEC", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xBE2FF4", Offset = "0xBE2FF4", VA = "0xBE2FF4")]
		public MainMenuSceneSystem()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class NarratorSceneSystem : MonoBehaviour, IRequirePlayerSubsystems, IRequireSceneSystems, IRequireVRObjects
	{
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354BC", Offset = "0xA354BC")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NarratorSceneSystem <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A36")]
				[Address(RVA = "0xBE3484", Offset = "0xBE3484", VA = "0xBE3484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A38")]
				[Address(RVA = "0xBE34F0", Offset = "0xBE34F0", VA = "0xBE34F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xBE3070", Offset = "0xBE3070", VA = "0xBE3070")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xBE32B0", Offset = "0xBE32B0", VA = "0xBE32B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xBE32B4", Offset = "0xBE32B4", VA = "0xBE32B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xBE348C", Offset = "0xBE348C", VA = "0xBE348C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NarratorLineCondition[] startCases;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NarratorLineCondition[] updateCases;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000DB9")]
		private const float START_CHECK_DELAY = 1.7f;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly WaitForSeconds updateInterval;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xBE2FFC", Offset = "0xBE2FFC", VA = "0xBE2FFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42074", Offset = "0xA42074")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xBE309C", Offset = "0xBE309C", VA = "0xBE309C")]
		public void PlayNarration(NarratorLine line)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xBE30F0", Offset = "0xBE30F0", VA = "0xBE30F0")]
		public float GetClipLengthFor(NarratorLine line)
		{
			return default(float);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xBE314C", Offset = "0xBE314C", VA = "0xBE314C")]
		private void InitialiseConditions()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xBE322C", Offset = "0xBE322C", VA = "0xBE322C", Slot = "4")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xBE3234", Offset = "0xBE3234", VA = "0xBE3234", Slot = "5")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xBE323C", Offset = "0xBE323C", VA = "0xBE323C", Slot = "6")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xBE3244", Offset = "0xBE3244", VA = "0xBE3244")]
		public NarratorSceneSystem()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class QuestSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireVRObjects, ISavableSystem<QuestsSaveData>
	{
		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354CC", Offset = "0xA354CC")]
		private sealed class <Start>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestSceneSystem <>4__this;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3C")]
				[Address(RVA = "0xBE6658", Offset = "0xBE6658", VA = "0xBE6658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0xBE66C4", Offset = "0xBE66C4", VA = "0xBE66C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xBE3950", Offset = "0xBE3950", VA = "0xBE3950")]
			[DebuggerHidden]
			public <Start>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xBE6544", Offset = "0xBE6544", VA = "0xBE6544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xBE6548", Offset = "0xBE6548", VA = "0xBE6548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xBE6660", Offset = "0xBE6660", VA = "0xBE6660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354DC", Offset = "0xA354DC")]
		private sealed class <>c
		{
			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Quest, bool> <>9__42_0;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Quest, bool> <>9__43_0;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<QuestArea, bool> <>9__55_0;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<float, Quest, float> <>9__64_1;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<float, QuestArea, float> <>9__64_0;

			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xBE62DC", Offset = "0xBE62DC", VA = "0xBE62DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xBE62E4", Offset = "0xBE62E4", VA = "0xBE62E4")]
			internal bool <NotifyAboutItemPlaced>b__42_0(Quest x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xBE6364", Offset = "0xBE6364", VA = "0xBE6364")]
			internal bool <NotifyAboutItemRemoved>b__43_0(Quest x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xBE63E4", Offset = "0xBE63E4", VA = "0xBE63E4")]
			internal bool <GetAreaToOverride>b__55_0(QuestArea x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xBE6400", Offset = "0xBE6400", VA = "0xBE6400")]
			internal float <GetFullRewardAmount>b__64_0(float current1, QuestArea t1)
			{
				return default(float);
			}

			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xBE650C", Offset = "0xBE650C", VA = "0xBE650C")]
			internal float <GetFullRewardAmount>b__64_1(float current, Quest t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds Bounds;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B838", Offset = "0xA3B838")]
		private bool <Initialised>k__BackingField;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private JobAsset jobAsset;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private QuestArea[] questAreas;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource taskCompletedAudio;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputSystem inputSys;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private QuestDataUI questUi;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private QuestsData data;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private QuestArea currentArea;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int numberOfFinishedQuests;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TutorialSubSystem tutorialSys;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NarratorSubsystem narratorSys;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private QuestAndMascotPositioner uiPositioner;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AchievementSystem achievementSystem;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B888", Offset = "0xA3B888")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FontSystem fontSystem;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool initialised;

		[Token(Token = "0x170001A0")]
		public bool Initialised
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0xBE3848", Offset = "0xBE3848", VA = "0xBE3848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA420F8", Offset = "0xA420F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xBE3850", Offset = "0xBE3850", VA = "0xBE3850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42108", Offset = "0xA42108")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		private bool IsJobScene
		{
			[Token(Token = "0x600112C")]
			[Address(RVA = "0xBE385C", Offset = "0xBE385C", VA = "0xBE385C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0xBE38CC", Offset = "0xBE38CC", VA = "0xBE38CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42118", Offset = "0xA42118")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0xBE38D4", Offset = "0xBE38D4", VA = "0xBE38D4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42128", Offset = "0xA42128")]
			set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnAnyQuestUpdated
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0xBE3700", Offset = "0xBE3700", VA = "0xBE3700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA420D8", Offset = "0xA420D8")]
			add
			{
			}
			[Token(Token = "0x6001129")]
			[Address(RVA = "0xBE37A4", Offset = "0xBE37A4", VA = "0xBE37A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA420E8", Offset = "0xA420E8")]
			remove
			{
			}
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xBE38DC", Offset = "0xBE38DC", VA = "0xBE38DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42138", Offset = "0xA42138")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xBE397C", Offset = "0xBE397C", VA = "0xBE397C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xBE3A68", Offset = "0xBE3A68", VA = "0xBE3A68", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xBE3C7C", Offset = "0xBE3C7C", VA = "0xBE3C7C")]
		public void RefreshQuestsData()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBE3E88", Offset = "0xBE3E88", VA = "0xBE3E88")]
		public void HardRefreshData()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xBE3F08", Offset = "0xBE3F08", VA = "0xBE3F08")]
		public bool HasQuestThatRequireMoney()
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xBE409C", Offset = "0xBE409C", VA = "0xBE409C")]
		private void HandleLanguageChanged(FontSetting languageFont)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xBE40A0", Offset = "0xBE40A0", VA = "0xBE40A0")]
		public void NotifyAboutCarQuestFinished()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xBE3BA0", Offset = "0xBE3BA0", VA = "0xBE3BA0")]
		private void AddAdvancePayment()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xBE40C0", Offset = "0xBE40C0", VA = "0xBE40C0")]
		private int GetExpenses()
		{
			return default(int);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xBE41A0", Offset = "0xBE41A0", VA = "0xBE41A0")]
		public float GetRewardAmount()
		{
			return default(float);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xBE4288", Offset = "0xBE4288", VA = "0xBE4288")]
		public void RefreshWallQuestData(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xBE44EC", Offset = "0xBE44EC", VA = "0xBE44EC")]
		public void NotifyAboutDeviceInstalledInMagnet(Magnet magnet)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xBE45F4", Offset = "0xBE45F4", VA = "0xBE45F4")]
		public void NotifyAboutItemPlaced(Item item)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xBE4A84", Offset = "0xBE4A84", VA = "0xBE4A84")]
		public void NotifyAboutItemRemoved(Item item)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBE4F94", Offset = "0xBE4F94", VA = "0xBE4F94")]
		public void NotifyAboutTrashRemoved(TrashPart partRemoved)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBE50A4", Offset = "0xBE50A4", VA = "0xBE50A4")]
		public void NotifyAboutDrawerClosed(DragInteraction interaction)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xBE0700", Offset = "0xBE0700", VA = "0xBE0700")]
		public void NotifyAboutDirtCleaned(DirtSet partRemoved)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xBE51AC", Offset = "0xBE51AC", VA = "0xBE51AC")]
		public void NotifyAboutWateredPlant(PlantToWater wateredPlant)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xBE52EC", Offset = "0xBE52EC", VA = "0xBE52EC")]
		public void NotifyAboutGrilledChicken(Cooker cooker)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xBE53F4", Offset = "0xBE53F4", VA = "0xBE53F4")]
		public void NotifyAboutFlushedToilet(Transform toilet)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xBE54EC", Offset = "0xBE54EC", VA = "0xBE54EC")]
		public void NotifyAboutRoachesExtermination(CockroachNest nest)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xBE3CD8", Offset = "0xBE3CD8", VA = "0xBE3CD8")]
		public void RefreshQuestsData(Vector3 playerPosition, bool hardRefresh = false, bool teleported = false)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xBE57C4", Offset = "0xBE57C4", VA = "0xBE57C4")]
		private void RefreshMarkersVisibility(QuestArea currentQuestArea)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xBE58D4", Offset = "0xBE58D4", VA = "0xBE58D4")]
		public void AddNewArea(Bounds bounds)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xBE59E0", Offset = "0xBE59E0", VA = "0xBE59E0")]
		public void OverrideArea(Bounds bounds)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xBE5A30", Offset = "0xBE5A30", VA = "0xBE5A30")]
		public QuestArea GetAreaToOverride()
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xBE42E4", Offset = "0xBE42E4", VA = "0xBE42E4")]
		private QuestArea GetQuestAreaAtPosition(Vector3 playerPosition)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xBE4398", Offset = "0xBE4398", VA = "0xBE4398")]
		private void DisplayDataInUi(bool teleported = false)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBE5C44", Offset = "0xBE5C44", VA = "0xBE5C44")]
		private void DisplayData()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xBE5B20", Offset = "0xBE5B20", VA = "0xBE5B20")]
		private (bool, bool, bool) EvaluateQuestUpdates()
		{
			return default((bool, bool, bool));
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xBE5CC4", Offset = "0xBE5CC4", VA = "0xBE5CC4")]
		private void Vibrate()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xBE5844", Offset = "0xBE5844", VA = "0xBE5844")]
		private QuestsData GetAreaQuestsData(QuestArea area)
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xBE5D70", Offset = "0xBE5D70", VA = "0xBE5D70")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xBE5D74", Offset = "0xBE5D74", VA = "0xBE5D74")]
		private void AddItemToQuestItems(Item itemToPlace)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xBE5DB8", Offset = "0xBE5DB8", VA = "0xBE5DB8")]
		private float GetFullRewardAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xBE1990", Offset = "0xBE1990", VA = "0xBE1990")]
		public int GetProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xBE5EAC", Offset = "0xBE5EAC", VA = "0xBE5EAC")]
		public bool JobCanBeAccepted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xBE5EFC", Offset = "0xBE5EFC", VA = "0xBE5EFC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xBE5F04", Offset = "0xBE5F04", VA = "0xBE5F04", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xBE5F6C", Offset = "0xBE5F6C", VA = "0xBE5F6C", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xBE5F7C", Offset = "0xBE5F7C", VA = "0xBE5F7C", Slot = "10")]
		public QuestsSaveData GetSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBE60DC", Offset = "0xBE60DC", VA = "0xBE60DC", Slot = "11")]
		public void LoadSaveData(QuestsSaveData saveData)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xBE6270", Offset = "0xBE6270", VA = "0xBE6270")]
		public QuestSceneSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class QuestArea
	{
		[Serializable]
		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354EC", Offset = "0xA354EC")]
		private sealed class <>c__8<T> where T : class
		{
			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__8<T> <>9;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Quest, bool> <>9__8_0;

			[Token(Token = "0x6001A47")]
			public <>c__8()
			{
			}

			[Token(Token = "0x6001A48")]
			internal bool <GetQuestTypeOf>b__8_0(Quest x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DCE")]
		private const float MARKER_Y_POS = 0.5f;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quest[] quests;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool toOverride;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject marker;

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xBE34F8", Offset = "0xBE34F8", VA = "0xBE34F8")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xBE35B8", Offset = "0xBE35B8", VA = "0xBE35B8")]
		public QuestArea(Bounds bounds)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xBE35F0", Offset = "0xBE35F0", VA = "0xBE35F0")]
		public void TryToRemoveMarkerIfAllQuestsAreDone(QuestArea currentArea)
		{
		}

		[Token(Token = "0x600115E")]
		public T GetQuestTypeOf<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		public IEnumerable<T> GetQuestTypesOf<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xBE36A0", Offset = "0xBE36A0", VA = "0xBE36A0")]
		public WallModificationQuest[] GetWallQuests()
		{
			return null;
		}
	}
}
namespace _Code.Systems.Scene_Systems.LineConditions
{
	[Token(Token = "0x200021F")]
	public class AllJobsDoneLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0xBE1890", Offset = "0xBE1890", VA = "0xBE1890", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xBE1908", Offset = "0xBE1908", VA = "0xBE1908")]
		public AllJobsDoneLineCondition()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class AnyQuestUpdatedLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int startProgress;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xBE1918", Offset = "0xBE1918", VA = "0xBE1918", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, Subsystems playerSubsystems, SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xBE19D8", Offset = "0xBE19D8", VA = "0xBE19D8", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xBE1A48", Offset = "0xBE1A48", VA = "0xBE1A48")]
		public AnyQuestUpdatedLineCondition()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class AwakeAfterJobLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int jobIndex;

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xBE1A50", Offset = "0xBE1A50", VA = "0xBE1A50", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xBE1B4C", Offset = "0xBE1B4C", VA = "0xBE1B4C")]
		public AwakeAfterJobLineCondition()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class AwakeLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xBE1B54", Offset = "0xBE1B54", VA = "0xBE1B54", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xBE1B5C", Offset = "0xBE1B5C", VA = "0xBE1B5C")]
		public AwakeLineCondition()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class NarratorLineCondition : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041F")]
		public class NarratorLineInspectorArguments
		{
			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NarratorLine line;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3C9A4", Offset = "0xA3C9A4")]
			public float transitionTime;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool playNotification;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool startTransitionEnabled;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool endTransitionEnabled;

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xBE1BD8", Offset = "0xBE1BD8", VA = "0xBE1BD8")]
			public NarratorLineArguments GetNarratorLineArguments()
			{
				return default(NarratorLineArguments);
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xBE1D70", Offset = "0xBE1D70", VA = "0xBE1D70")]
			public NarratorLineInspectorArguments()
			{
			}
		}

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected NarratorLineInspectorArguments lineArguments;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRObjects vrObjects;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Subsystems playerSubsystems;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected SceneSystems sceneSystems;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool wasTriggered;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xBE1984", Offset = "0xBE1984", VA = "0xBE1984", Slot = "4")]
		public virtual void Initialise(VRObjects vrObjects, Subsystems playerSubsystems, SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xBE1B64", Offset = "0xBE1B64", VA = "0xBE1B64")]
		public bool CheckNotTriggered()
		{
			return default(bool);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xBE1B80", Offset = "0xBE1B80", VA = "0xBE1B80", Slot = "5")]
		protected virtual bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xBE1B88", Offset = "0xBE1B88", VA = "0xBE1B88", Slot = "6")]
		public virtual void Trigger()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xBE1910", Offset = "0xBE1910", VA = "0xBE1910")]
		public NarratorLineCondition()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class PickUpLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Pickupable[] pickupables;

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xBE1D90", Offset = "0xBE1D90", VA = "0xBE1D90", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xBE1E18", Offset = "0xBE1E18", VA = "0xBE1E18")]
		public PickUpLineCondition()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class PickUpToolLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ToolBelt.ToolType toolType;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tool tool;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xBE1E20", Offset = "0xBE1E20", VA = "0xBE1E20", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, Subsystems playerSubsystems, SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xBE1FA8", Offset = "0xBE1FA8", VA = "0xBE1FA8", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xBE1EB0", Offset = "0xBE1EB0", VA = "0xBE1EB0")]
		private void FindTool(Tool tool)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xBE1FC4", Offset = "0xBE1FC4", VA = "0xBE1FC4")]
		public PickUpToolLineCondition()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class TriggerLineCondition : NarratorLineCondition
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Collider trigger;

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xBE1FCC", Offset = "0xBE1FCC", VA = "0xBE1FCC", Slot = "5")]
		protected override bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xBE2050", Offset = "0xBE2050", VA = "0xBE2050")]
		public TriggerLineCondition()
		{
		}
	}
}
namespace _Code.Systems.MasterSystem
{
	[Token(Token = "0x2000227")]
	public class InitialiseComment
	{
		[Token(Token = "0x2000420")]
		public enum Type
		{
			[Token(Token = "0x4001600")]
			None,
			[Token(Token = "0x4001601")]
			Message,
			[Token(Token = "0x4001602")]
			Warning,
			[Token(Token = "0x4001603")]
			Error
		}

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type type;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string comment;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC06C88", Offset = "0xC06C88", VA = "0xC06C88")]
		public InitialiseComment(Type type, string comment)
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class JobState
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xA3B8E8", Offset = "0xA3B8E8")]
		private int id;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xA3B8F8", Offset = "0xA3B8F8")]
		private bool isComplete;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xA3B908", Offset = "0xA3B908")]
		private int progress;

		[Token(Token = "0x170001A3")]
		[JsonIgnore]
		public int Id
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xC06CD4", Offset = "0xC06CD4", VA = "0xC06CD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A4")]
		[JsonIgnore]
		public bool IsComplete
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0xC06CDC", Offset = "0xC06CDC", VA = "0xC06CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		[JsonIgnore]
		public int Progress
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xC06CE4", Offset = "0xC06CE4", VA = "0xC06CE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xC06CEC", Offset = "0xC06CEC", VA = "0xC06CEC")]
		public JobState(int id)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xC06D18", Offset = "0xC06D18", VA = "0xC06D18")]
		public void SaveProgress(int progress)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC06D20", Offset = "0xC06D20", VA = "0xC06D20")]
		public void Complete(int progress)
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class MasterSystem : MonoBehaviour
	{
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA354FC", Offset = "0xA354FC")]
		private sealed class <SetPlayerStartPositionAndRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MasterSystem <>4__this;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <spawnPoint>5__2;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A4E")]
				[Address(RVA = "0xC08508", Offset = "0xC08508", VA = "0xC08508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A50")]
				[Address(RVA = "0xC08574", Offset = "0xC08574", VA = "0xC08574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xC07CD4", Offset = "0xC07CD4", VA = "0xC07CD4")]
			[DebuggerHidden]
			public <SetPlayerStartPositionAndRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xC08064", Offset = "0xC08064", VA = "0xC08064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xC08068", Offset = "0xC08068", VA = "0xC08068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xC08510", Offset = "0xC08510", VA = "0xC08510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3550C", Offset = "0xA3550C")]
		private sealed class <LoadSceneDelayed>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MasterSystem <>4__this;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A54")]
				[Address(RVA = "0xC07FF0", Offset = "0xC07FF0", VA = "0xC07FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A56")]
				[Address(RVA = "0xC0805C", Offset = "0xC0805C", VA = "0xC0805C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xC07D24", Offset = "0xC07D24", VA = "0xC07D24")]
			[DebuggerHidden]
			public <LoadSceneDelayed>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xC07F68", Offset = "0xC07F68", VA = "0xC07F68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xC07F6C", Offset = "0xC07F6C", VA = "0xC07F6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xC07FF8", Offset = "0xC07FF8", VA = "0xC07FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3551C", Offset = "0xA3551C")]
		private sealed class <DisableFadeDelayed>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MasterSystem <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A5A")]
				[Address(RVA = "0xC07EF4", Offset = "0xC07EF4", VA = "0xC07EF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A5C")]
				[Address(RVA = "0xC07F60", Offset = "0xC07F60", VA = "0xC07F60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xC07DC4", Offset = "0xC07DC4", VA = "0xC07DC4")]
			[DebuggerHidden]
			public <DisableFadeDelayed>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xC07E60", Offset = "0xC07E60", VA = "0xC07E60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xC07E64", Offset = "0xC07E64", VA = "0xC07E64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xC07EFC", Offset = "0xC07EFC", VA = "0xC07EFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA3B918", Offset = "0xA3B918")]
		[SerializeField]
		private PlayerReferenceHandler oculusPlayerPrefab;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameContentMapper mapper;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerReferenceHandler playerReferences;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SceneSystemsInitialiser currentSceneSystemsInitialiser;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly WaitForSeconds waitForSceneLoad;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine loadSceneDelayedCoroutine;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine disableFadeDelayedCoroutine;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MasterSystem masterMasterSystem;

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC06D30", Offset = "0xC06D30", VA = "0xC06D30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC075B8", Offset = "0xC075B8", VA = "0xC075B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC0753C", Offset = "0xC0753C", VA = "0xC0753C")]
		private void SubscribeToSceneLoadEvents()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC075BC", Offset = "0xC075BC", VA = "0xC075BC")]
		private void UnsubscribeFromSceneLoadEvents()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC07638", Offset = "0xC07638", VA = "0xC07638")]
		private void HandleSceneLoaded(Scene arg0, LoadSceneMode arg1)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC07A00", Offset = "0xC07A00", VA = "0xC07A00")]
		public void StartLoadScene(string sceneName, bool performSave)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC07924", Offset = "0xC07924", VA = "0xC07924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4219C", Offset = "0xA4219C")]
		private IEnumerator SetPlayerStartPositionAndRotation()
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xC077EC", Offset = "0xC077EC", VA = "0xC077EC")]
		private void SetSceneSystemsIntoPlayer()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xC076CC", Offset = "0xC076CC", VA = "0xC076CC")]
		private void FindAndInitializeSceneManager()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xC0749C", Offset = "0xC0749C", VA = "0xC0749C")]
		private void SetDontDestroyStatus()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xC06FB0", Offset = "0xC06FB0", VA = "0xC06FB0")]
		private void CreateAndAssignPlayer()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC06F44", Offset = "0xC06F44", VA = "0xC06F44")]
		private void LoadContent()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xC07BC8", Offset = "0xC07BC8", VA = "0xC07BC8")]
		private void FreeHandsInteraction()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC07BFC", Offset = "0xC07BFC", VA = "0xC07BFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42200", Offset = "0xA42200")]
		private IEnumerator LoadSceneDelayed(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC07998", Offset = "0xC07998", VA = "0xC07998")]
		private void DisableFade()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC07D50", Offset = "0xC07D50", VA = "0xC07D50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42264", Offset = "0xA42264")]
		private IEnumerator DisableFadeDelayed()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC07C7C", Offset = "0xC07C7C", VA = "0xC07C7C")]
		private void RestartCoroutine(ref Coroutine coroutine, IEnumerator routine)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC07DF0", Offset = "0xC07DF0", VA = "0xC07DF0")]
		public MasterSystem()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public enum VR_SDK
	{
		[Token(Token = "0x4000DEC")]
		Oculus,
		[Token(Token = "0x4000DED")]
		OpenVR
	}
	[Token(Token = "0x200022B")]
	public enum VRDevice
	{
		[Token(Token = "0x4000DEF")]
		Quest,
		[Token(Token = "0x4000DF0")]
		OculusRiftS,
		[Token(Token = "0x4000DF1")]
		OculusRift,
		[Token(Token = "0x4000DF2")]
		Vive,
		[Token(Token = "0x4000DF3")]
		Index
	}
	[Token(Token = "0x200022C")]
	public class SceneSystemsInitialiser : MonoBehaviour
	{
		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform playerStartPositionTransform;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isOfficeScene;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isMainMenuScene;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerable<ISystem> systems;

		[Token(Token = "0x170001A6")]
		public SceneSystems SceneSystems
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xC0857C", Offset = "0xC0857C", VA = "0xC0857C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC07D00", Offset = "0xC07D00", VA = "0xC07D00")]
		public void Initialise(PlayerReferenceHandler playerReferences)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC08584", Offset = "0xC08584", VA = "0xC08584")]
		private void AssignReferences(PlayerReferenceHandler playerReferences)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xC08844", Offset = "0xC08844", VA = "0xC08844")]
		private void InitialiseSceneSystems()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xC08C84", Offset = "0xC08C84", VA = "0xC08C84")]
		public SceneSystemsInitialiser()
		{
		}
	}
}
namespace _Code.Systems.MasterSystem.Interfaces
{
	[Token(Token = "0x200022D")]
	public interface IInitialise
	{
		[Token(Token = "0x6001195")]
		void Initialise();
	}
	[Token(Token = "0x200022E")]
	public interface IInitialiseFirst
	{
		[Token(Token = "0x6001196")]
		void InitialiseFirst();
	}
	[Token(Token = "0x200022F")]
	public interface IRequire<in T> where T : class
	{
		[Token(Token = "0x6001197")]
		void AssignRequiredObject(T _object);
	}
	[Token(Token = "0x2000230")]
	public interface IRequirePlayerSubsystems
	{
		[Token(Token = "0x6001198")]
		void AssignRequiredObject(Subsystems subsystems);
	}
	[Token(Token = "0x2000231")]
	public interface IRequireSceneSystems
	{
		[Token(Token = "0x6001199")]
		void AssignRequiredObject(SceneSystems sceneSystems);
	}
	[Token(Token = "0x2000232")]
	public interface IRequireTools
	{
		[Token(Token = "0x600119A")]
		void AssignRequiredObject(_Code.Systems.MasterSystem.Handlers.Tools tools);
	}
	[Token(Token = "0x2000233")]
	public interface IRequireVRObjects
	{
		[Token(Token = "0x600119B")]
		void AssignRequiredObject(VRObjects vrObjects);
	}
	[Token(Token = "0x2000234")]
	internal interface ISystem
	{
		[Token(Token = "0x170001A7")]
		SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x600119C")]
			get;
			[Token(Token = "0x600119D")]
			set;
		}

		[Token(Token = "0x600119E")]
		void Initialise();

		[Token(Token = "0x600119F")]
		GameObject GetGameObject();
	}
}
namespace _Code.Systems.MasterSystem.Handlers
{
	[Token(Token = "0x2000235")]
	public class PlayerReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRObjects vrObjects;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Subsystems subsystems;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tools tools;

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC06B60", Offset = "0xC06B60", VA = "0xC06B60")]
		public PlayerReferenceHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000236")]
	public class SceneSystems
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WallsSceneSystem wallsSystem;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DirtSceneSystem dirtSystem;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToolSceneSystem toolSystem;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public _Code.Systems.InteractionSystem.InteractionSystem interactionSystem;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FxSceneSystem fxSceneSystem;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ItemSceneSystem itemSystem;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TrashSceneSystem trashSystem;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public QuestSceneSystem questSystem;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderingSceneSystem renderingSystem;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InstallationSceneSystem installationSystem;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSceneSystem audioSystem;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TutorialSceneSystem tutorialSystem;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public DartSceneSystem dartSystem;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PlantSceneSystem plantSystem;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BasicTutorialSceneSystem basicTutorialSystem;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CockroachSceneSystem cockroachSceneSystem;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC06B68", Offset = "0xC06B68", VA = "0xC06B68")]
		public SceneSystems()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class Subsystems
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public _Code.Raycaster.Raycaster raycaster;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MovementComponent teleport;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollisionDetector collisionDetector;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputSystem inputSystem;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ToolBelt toolBelt;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HandInteractions handsInteractions;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UserInterfaceController UserInterfaceController;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public QuestDataUI questDataUi;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TutorialSubSystem tutorialSystem;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SkillSystem skillSystem;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CreditsOverlay creditsOverlay;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public QuestAndMascotPositioner uiPositioner;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NarratorSubsystem narratorSubsystem;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AppraiserSystem appraiserSystem;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AchievementSystem achievementSystem;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC06B70", Offset = "0xC06B70", VA = "0xC06B70")]
		public Subsystems()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	public class Tools
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WallModificationTool wallModificationTool;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform paintToolTransform;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xC06B78", Offset = "0xC06B78", VA = "0xC06B78")]
		public Tools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000239")]
	public class VRObjects
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		public class Controller
		{
			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider collider;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform raycastOrigin;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LineRenderer distanceGrabRay;

			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform fingertip;

			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform watchTransform;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public VirtualButton wristButton;

			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform wristCenter;

			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform[] dartSockets;

			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xC0357C", Offset = "0xC0357C", VA = "0xC0357C")]
			public bool IsThisMyCollider(Collider collider)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xC06C80", Offset = "0xC06C80", VA = "0xC06C80")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform rig;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform headset;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreenCameraFade loadingScreenCameraFade;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Controller rightController;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Controller leftController;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer[] handRenderers;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xC02C58", Offset = "0xC02C58", VA = "0xC02C58")]
		public Controller GetControllerByHand(_Code.VR.InputSystem.Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC06B80", Offset = "0xC06B80", VA = "0xC06B80")]
		public void ShowHands()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC06BFC", Offset = "0xC06BFC", VA = "0xC06BFC")]
		public void HideHands()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC06C78", Offset = "0xC06C78", VA = "0xC06C78")]
		public VRObjects()
		{
		}
	}
}
namespace _Code.Systems.InteractionSystem
{
	[Token(Token = "0x200023A")]
	public class InteractionSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireVRObjects, IRequireSceneSystems
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Interaction[] interactions;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractionAction[] interactionActions;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subsystems subsystems;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B9B4", Offset = "0xA3B9B4")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x170001A8")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xC036B8", Offset = "0xC036B8", VA = "0xC036B8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA422C8", Offset = "0xA422C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xC036C0", Offset = "0xC036C0", VA = "0xC036C0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA422D8", Offset = "0xA422D8")]
			set
			{
			}
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC036C8", Offset = "0xC036C8", VA = "0xC036C8", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC03758", Offset = "0xC03758", VA = "0xC03758")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC0375C", Offset = "0xC0375C", VA = "0xC0375C", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC03764", Offset = "0xC03764", VA = "0xC03764", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC0376C", Offset = "0xC0376C", VA = "0xC0376C", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC03774", Offset = "0xC03774", VA = "0xC03774", Slot = "10")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC0377C", Offset = "0xC0377C", VA = "0xC0377C")]
		public InteractionSystem()
		{
		}
	}
}
namespace _Code.Systems.InteractionSystem.ProgressHandlers
{
	[Token(Token = "0x200023B")]
	public class LinearTranslationProgress
	{
		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3 startPosition;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly Vector3 endPosition;

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC03DF8", Offset = "0xC03DF8", VA = "0xC03DF8")]
		public LinearTranslationProgress(Vector3 startPosition, Vector3 endPosition)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC03E58", Offset = "0xC03E58", VA = "0xC03E58")]
		public float CalculateAndReturnProgress(Vector3 currentPosition)
		{
			return default(float);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC03FF4", Offset = "0xC03FF4", VA = "0xC03FF4")]
		private float GetInteractionLineLerpTime(Vector3 projection)
		{
			return default(float);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xC03E7C", Offset = "0xC03E7C", VA = "0xC03E7C")]
		private Vector3 ProjectControllerPositionOnInteractionLine(Vector3 controllerPosition)
		{
			return default(Vector3);
		}
	}
}
namespace _Code.Systems.InteractionSystem.Actions
{
	[Token(Token = "0x200023C")]
	public class ClickInTriggerAction : InteractionAction
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform thisTransform;

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC022CC", Offset = "0xC022CC", VA = "0xC022CC", Slot = "4")]
		public override void Initialise(Subsystems playerSubsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xC023B4", Offset = "0xC023B4", VA = "0xC023B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xC023C4", Offset = "0xC023C4", VA = "0xC023C4")]
		private void CompleteInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xC024DC", Offset = "0xC024DC", VA = "0xC024DC")]
		private bool IsControllerInRange(_Code.VR.InputSystem.Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xC026BC", Offset = "0xC026BC", VA = "0xC026BC", Slot = "9")]
		protected override void SubscribeToInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xC02760", Offset = "0xC02760", VA = "0xC02760", Slot = "10")]
		protected override void UnsubscribeFromInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xC02808", Offset = "0xC02808", VA = "0xC02808")]
		public ClickInTriggerAction()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public abstract class InteractionAction : MonoBehaviour
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Collider interactionCollider;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool highlightDataExists;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B9E4", Offset = "0xA3B9E4")]
		private State <State>k__BackingField;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Interaction interaction;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderItemSubmeshIndexData highlightData;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected InputAction inputAction;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Action<GeneralArgs> interactionStart;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Action<GeneralArgs> interactionComplete;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Action<GeneralArgs> onInteractionAction;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Action<GeneralArgs> onInteractionReleasedAction;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRObjects vrObjects;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool subscribed;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string INTERACTABLE_RENDER_ITEM_NAME;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int playerLayer;

		[Token(Token = "0x170001A9")]
		public State State
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xC02888", Offset = "0xC02888", VA = "0xC02888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA422E8", Offset = "0xA422E8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xC02890", Offset = "0xC02890", VA = "0xC02890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA422F8", Offset = "0xA422F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Collider InteractionCollider
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xC02898", Offset = "0xC02898", VA = "0xC02898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public bool HasHighlightData
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xC028A0", Offset = "0xC028A0", VA = "0xC028A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		protected int PlayerLayer
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xC02650", Offset = "0xC02650", VA = "0xC02650")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC02338", Offset = "0xC02338", VA = "0xC02338")]
		protected bool ShouldUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC028A8", Offset = "0xC028A8", VA = "0xC028A8")]
		public void OverrideInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xC02328", Offset = "0xC02328", VA = "0xC02328", Slot = "4")]
		public virtual void Initialise(Subsystems playerSubsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xC028EC", Offset = "0xC028EC", VA = "0xC028EC")]
		public void SetInteractionStartAction(Action<GeneralArgs> action)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC028F4", Offset = "0xC028F4", VA = "0xC028F4")]
		public void SetInteractionAction(Action<GeneralArgs> action)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xC028FC", Offset = "0xC028FC", VA = "0xC028FC")]
		public void SetInteractionCompleteAction(Action<GeneralArgs> action)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xC02904", Offset = "0xC02904", VA = "0xC02904")]
		public void SetInteractionReleasedAction(Action<GeneralArgs> action)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xC0290C", Offset = "0xC0290C", VA = "0xC0290C")]
		public void ClearInteractionStartAction()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xC02914", Offset = "0xC02914", VA = "0xC02914")]
		public void ClearInteractionAction()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xC0291C", Offset = "0xC0291C", VA = "0xC0291C")]
		public void ClearInteractionCompleteAction()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xC02924", Offset = "0xC02924", VA = "0xC02924", Slot = "5")]
		protected virtual void OnInteractionStart(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xC029A0", Offset = "0xC029A0", VA = "0xC029A0", Slot = "6")]
		protected virtual void OnInteractionComplete(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xC02A1C", Offset = "0xC02A1C", VA = "0xC02A1C", Slot = "7")]
		protected virtual void OnInteractionReleased(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xC02A98", Offset = "0xC02A98", VA = "0xC02A98", Slot = "8")]
		protected virtual void OnInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011CF")]
		protected abstract void SubscribeToInputAction(InputAction inputAction);

		[Token(Token = "0x60011D0")]
		protected abstract void UnsubscribeFromInputAction(InputAction inputAction);

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xC02878", Offset = "0xC02878", VA = "0xC02878")]
		protected InteractionAction()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public enum State
	{
		[Token(Token = "0x4000E3B")]
		None,
		[Token(Token = "0x4000E3C")]
		Active,
		[Token(Token = "0x4000E3D")]
		Locked
	}
	[Token(Token = "0x200023F")]
	public class PressInRangeActionOverlap : InteractionAction
	{
		[Serializable]
		[Token(Token = "0x2000425")]
		private enum RangeCheckType
		{
			[Token(Token = "0x400161A")]
			None,
			[Token(Token = "0x400161B")]
			Sphere,
			[Token(Token = "0x400161C")]
			Bounds
		}

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RangeCheckType type;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3BA04", Offset = "0xA3BA04")]
		private float size;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector3 boxBoundsSizeMultiplier;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool interactionStarted;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool isBoxBounds;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] overlapColliders;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRObjects.Controller currentController;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC02B70", Offset = "0xC02B70", VA = "0xC02B70", Slot = "4")]
		public override void Initialise(Subsystems playerSubsystems, VRObjects vrObjects)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC02C18", Offset = "0xC02C18", VA = "0xC02C18")]
		public void StartInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC02C70", Offset = "0xC02C70", VA = "0xC02C70")]
		public bool CanInteract(GeneralArgs args)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC02FA4", Offset = "0xC02FA4", VA = "0xC02FA4")]
		public void Interact(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xC0327C", Offset = "0xC0327C", VA = "0xC0327C")]
		public void CompleteInteraction(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xC033E8", Offset = "0xC033E8", VA = "0xC033E8")]
		public void BreakInteraction()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xC0316C", Offset = "0xC0316C", VA = "0xC0316C")]
		private bool CheckIsCurrentControllerInRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xC033FC", Offset = "0xC033FC", VA = "0xC033FC")]
		private bool CheckBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xC02DC8", Offset = "0xC02DC8", VA = "0xC02DC8")]
		public bool IsPointInRange(Vector3 point, float range)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xC03240", Offset = "0xC03240", VA = "0xC03240")]
		private bool IsThisCurrentHand(_Code.VR.InputSystem.Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xC02F00", Offset = "0xC02F00", VA = "0xC02F00")]
		private bool IsAnyOverlapColliderControllers(VRObjects.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xC0359C", Offset = "0xC0359C", VA = "0xC0359C", Slot = "5")]
		protected override void OnInteractionStart(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xC035C4", Offset = "0xC035C4", VA = "0xC035C4", Slot = "6")]
		protected override void OnInteractionComplete(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xC03604", Offset = "0xC03604", VA = "0xC03604", Slot = "9")]
		protected override void SubscribeToInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xC03608", Offset = "0xC03608", VA = "0xC03608", Slot = "10")]
		protected override void UnsubscribeFromInputAction(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xC0360C", Offset = "0xC0360C", VA = "0xC0360C")]
		public PressInRangeActionOverlap()
		{
		}
	}
}
namespace _Code.Systems.InteractionSystem.Interactions
{
	[Token(Token = "0x2000240")]
	public class ClickAssembly : AssemblyInteraction
	{
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xC03784", Offset = "0xC03784", VA = "0xC03784", Slot = "8")]
		protected override void Check(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xC03810", Offset = "0xC03810", VA = "0xC03810", Slot = "5")]
		protected override void OverrideInput(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xC03868", Offset = "0xC03868", VA = "0xC03868", Slot = "6")]
		protected override void SetAction()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xC038FC", Offset = "0xC038FC", VA = "0xC038FC", Slot = "7")]
		protected override void ClearAction()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xC0391C", Offset = "0xC0391C", VA = "0xC0391C", Slot = "9")]
		protected override void OnInteractionComplete()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xC03924", Offset = "0xC03924", VA = "0xC03924")]
		public ClickAssembly()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class RotationAssembly : AssemblyInteraction
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RotationAngleController interaction;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform partToAnimate;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float anglesToCompleteInteraction;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 positionToMove;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip onRotation;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 onAssemblyStartPosition;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 startPartToAnimatePosition;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float rotation;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xC03958", Offset = "0xC03958", VA = "0xC03958")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xC03990", Offset = "0xC03990", VA = "0xC03990")]
		public bool CheckAndReturnSuccess(Vector3 controllerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC03A34", Offset = "0xC03A34", VA = "0xC03A34", Slot = "8")]
		protected override void Check(GeneralArgs args)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC03C28", Offset = "0xC03C28", VA = "0xC03C28")]
		private void PlayRotationClip()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC03B10", Offset = "0xC03B10", VA = "0xC03B10")]
		private void AnimatePart(float deltaAngle)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC03CA8", Offset = "0xC03CA8", VA = "0xC03CA8", Slot = "5")]
		protected override void OverrideInput(InputAction inputAction)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC03D00", Offset = "0xC03D00", VA = "0xC03D00", Slot = "6")]
		protected override void SetAction()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC03D94", Offset = "0xC03D94", VA = "0xC03D94", Slot = "7")]
		protected override void ClearAction()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC03DE8", Offset = "0xC03DE8", VA = "0xC03DE8", Slot = "9")]
		protected override void OnInteractionComplete()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC03DF0", Offset = "0xC03DF0", VA = "0xC03DF0")]
		public RotationAssembly()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class ClickInteraction : Interaction
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Interaction interactionAction;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC0392C", Offset = "0xC0392C", VA = "0xC0392C", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC0394C", Offset = "0xC0394C", VA = "0xC0394C", Slot = "5")]
		public override void BreakInteraction()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC03950", Offset = "0xC03950", VA = "0xC03950")]
		public ClickInteraction()
		{
		}
	}
}
namespace _Code.Systems.Fx
{
	[Token(Token = "0x2000243")]
	public class CleanSprayFx : TriggeredFx
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3552C", Offset = "0xA3552C")]
		private sealed class <HideAfterSeconds>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CleanSprayFx <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A62")]
				[Address(RVA = "0xC01B28", Offset = "0xC01B28", VA = "0xC01B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A64")]
				[Address(RVA = "0xC01B94", Offset = "0xC01B94", VA = "0xC01B94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xC0193C", Offset = "0xC0193C", VA = "0xC0193C")]
			[DebuggerHidden]
			public <HideAfterSeconds>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xC01A58", Offset = "0xC01A58", VA = "0xC01A58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xC01A5C", Offset = "0xC01A5C", VA = "0xC01A5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xC01B30", Offset = "0xC01B30", VA = "0xC01B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem particle;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform thisTransform;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine hideCoroutine;

		[Token(Token = "0x4000E53")]
		private const float TIME_TO_HIDE = 0.2f;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC017E8", Offset = "0xC017E8", VA = "0xC017E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC01810", Offset = "0xC01810", VA = "0xC01810", Slot = "4")]
		public override void Display()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC01920", Offset = "0xC01920", VA = "0xC01920", Slot = "6")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC0189C", Offset = "0xC0189C", VA = "0xC0189C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42308", Offset = "0xA42308")]
		private IEnumerator HideAfterSeconds(float seconds)
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC01968", Offset = "0xC01968", VA = "0xC01968", Slot = "8")]
		public override void PutInSocket(Transform socket)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC01A48", Offset = "0xC01A48", VA = "0xC01A48", Slot = "5")]
		public override void UpdateEffect(float distance)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xC01A4C", Offset = "0xC01A4C", VA = "0xC01A4C", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xC01A50", Offset = "0xC01A50", VA = "0xC01A50")]
		public CleanSprayFx()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class Fx : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] particlesToColor;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource sound;

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xC01B9C", Offset = "0xC01B9C", VA = "0xC01B9C")]
		public void Show()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xC01C84", Offset = "0xC01C84", VA = "0xC01C84")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xC01D6C", Offset = "0xC01D6C", VA = "0xC01D6C")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xC01E14", Offset = "0xC01E14", VA = "0xC01E14")]
		public Fx()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class WallModificationFx : TriggeredFx
	{
		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem particle;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform fxTransform;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer renderer;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool displayed;

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC01E1C", Offset = "0xC01E1C", VA = "0xC01E1C", Slot = "4")]
		public override void Display()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xC01ED8", Offset = "0xC01ED8", VA = "0xC01ED8", Slot = "5")]
		public override void UpdateEffect(float distance)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC01F48", Offset = "0xC01F48", VA = "0xC01F48", Slot = "6")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xC01FF8", Offset = "0xC01FF8", VA = "0xC01FF8", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xC02114", Offset = "0xC02114", VA = "0xC02114", Slot = "8")]
		public override void PutInSocket(Transform socket)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xC021F4", Offset = "0xC021F4", VA = "0xC021F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xC022BC", Offset = "0xC022BC", VA = "0xC022BC")]
		public WallModificationFx()
		{
		}
	}
}
namespace _Code.FunMechanics
{
	[Token(Token = "0x2000246")]
	public class Board : MonoBehaviour
	{
		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3553C", Offset = "0xA3553C")]
		private sealed class <PressButtonCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Board <>4__this;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A68")]
				[Address(RVA = "0xE0E904", Offset = "0xE0E904", VA = "0xE0E904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6A")]
				[Address(RVA = "0xE0E970", Offset = "0xE0E970", VA = "0xE0E970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xE0E0E8", Offset = "0xE0E0E8", VA = "0xE0E0E8")]
			[DebuggerHidden]
			public <PressButtonCoroutine>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xE0E774", Offset = "0xE0E774", VA = "0xE0E774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xE0E778", Offset = "0xE0E778", VA = "0xE0E778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xE0E90C", Offset = "0xE0E90C", VA = "0xE0E90C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3554C", Offset = "0xA3554C")]
		private sealed class <PreventFromMoving>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Board <>4__this;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6E")]
				[Address(RVA = "0xE0EAB8", Offset = "0xE0EAB8", VA = "0xE0EAB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A70")]
				[Address(RVA = "0xE0EB24", Offset = "0xE0EB24", VA = "0xE0EB24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xE0E114", Offset = "0xE0E114", VA = "0xE0E114")]
			[DebuggerHidden]
			public <PreventFromMoving>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xE0E978", Offset = "0xE0E978", VA = "0xE0E978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xE0E97C", Offset = "0xE0E97C", VA = "0xE0E97C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xE0EAC0", Offset = "0xE0EAC0", VA = "0xE0EAC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3555C", Offset = "0xA3555C")]
		private sealed class <BlinkScoreCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Board <>4__this;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <currentText>5__2;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A74")]
				[Address(RVA = "0xE0E700", Offset = "0xE0E700", VA = "0xE0E700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A76")]
				[Address(RVA = "0xE0E76C", Offset = "0xE0E76C", VA = "0xE0E76C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xE0E1B4", Offset = "0xE0E1B4", VA = "0xE0E1B4")]
			[DebuggerHidden]
			public <BlinkScoreCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xE0E5CC", Offset = "0xE0E5CC", VA = "0xE0E5CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xE0E5D0", Offset = "0xE0E5D0", VA = "0xE0E5D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xE0E708", Offset = "0xE0E708", VA = "0xE0E708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3556C", Offset = "0xA3556C")]
		private sealed class <ShowFireworks>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Board <>4__this;

			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A7A")]
				[Address(RVA = "0xE0ED58", Offset = "0xE0ED58", VA = "0xE0ED58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7C")]
				[Address(RVA = "0xE0EDC4", Offset = "0xE0EDC4", VA = "0xE0EDC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xE0E254", Offset = "0xE0E254", VA = "0xE0E254")]
			[DebuggerHidden]
			public <ShowFireworks>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xE0EB2C", Offset = "0xE0EB2C", VA = "0xE0EB2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xE0EB30", Offset = "0xE0EB30", VA = "0xE0EB30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xE0ED60", Offset = "0xE0ED60", VA = "0xE0ED60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E5B")]
		public const int DART_COUNT = 5;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dart[] darts;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BB24", Offset = "0xA3BB24")]
		private bool <minigameIsActive>k__BackingField;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool updatePaused;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action OnDartShot;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float minigameTime;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DartParameters dartParameters;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform button;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform boardCenter;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform[] dartHitSlots;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BoxCollider dartHitAreaCollider;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private RandomSoundPlayer soundPlayer;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject dartPrefab;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Rigidbody rb;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Fx effect;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Fx[] fireworks;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform fireworksTransform;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioSource buttonClickSound;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioSource newHighscoreSound;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BoxCollider buttonArea;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3BC24", Offset = "0xA3BC24")]
		private float autoAimStrength;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TMP_Text gameScoreText;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Transform scoreTextParent;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TMP_Text buttonText;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private BoardItem boardItem;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Coroutine blinkScoreCor;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine pressButtonCor;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine fireworksCor;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private WaitForSeconds waitForSomeTime;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 defaultLocalButtonPosition;

		[Token(Token = "0x4000E79")]
		private const float TAU = (float)Math.PI * 2f;

		[Token(Token = "0x4000E7A")]
		private const float wristDartSocketCircleRadius = 0.13f;

		[Token(Token = "0x4000E7B")]
		private const string textFormat = "{0:0.0}";

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool buttonIsPressed;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		private bool fingerIsOnButton;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		private bool needsToGoOffButton;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float minigameTimeElepsed;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int gameScore;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int dartsInBoard;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int thrownDarts;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private WristDartSlotsInfo wristDartSlotsInfo;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private VRObjects vrObjs;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private VRObjects.Controller dartSocketsController;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Subsystems subsystems;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SceneSystems systems;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int bullsEyeShotsInARow;

		[Token(Token = "0x170001AD")]
		public bool minigameIsActive
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xE0BBA8", Offset = "0xE0BBA8", VA = "0xE0BBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4236C", Offset = "0xA4236C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xE0BBB0", Offset = "0xE0BBB0", VA = "0xE0BBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4237C", Offset = "0xA4237C")]
			private set
			{
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xE0BBBC", Offset = "0xE0BBBC", VA = "0xE0BBBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xE0BCEC", Offset = "0xE0BCEC", VA = "0xE0BCEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xE0BDF8", Offset = "0xE0BDF8", VA = "0xE0BDF8")]
		private bool MoveSlotPositions()
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xE0C3B4", Offset = "0xE0C3B4", VA = "0xE0C3B4")]
		private void UpdateDartSlotPosition(int slotIndex, int dartIndex)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xE0C52C", Offset = "0xE0C52C", VA = "0xE0C52C")]
		public void InitDarts(BoardItem boardItem, VRObjects objects, SceneSystems systems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xE0CB24", Offset = "0xE0CB24", VA = "0xE0CB24")]
		public void NotifyAboutDartThrow()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xE0CB78", Offset = "0xE0CB78", VA = "0xE0CB78")]
		public void NotifyAboutDartTakenFromWristSlot(Transform slotTransform)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xE0CD98", Offset = "0xE0CD98", VA = "0xE0CD98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xE0CE2C", Offset = "0xE0CE2C", VA = "0xE0CE2C")]
		private void SetDartsToWristSockets()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xE0D18C", Offset = "0xE0D18C", VA = "0xE0D18C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4238C", Offset = "0xA4238C")]
		private void StartMinigame()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xE0D334", Offset = "0xE0D334", VA = "0xE0D334")]
		public void EndMinigameInstantly(bool animate = false)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xE0BDC8", Offset = "0xE0BDC8", VA = "0xE0BDC8")]
		public void EndMinigame()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xE0D270", Offset = "0xE0D270", VA = "0xE0D270")]
		public void ResetDarts(bool setActive, bool animateScaleChange)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xE0CC70", Offset = "0xE0CC70", VA = "0xE0CC70")]
		private void CalculateDartSlotTargetAngles(bool moveToTargetAngleInstantly = false)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xE0D7AC", Offset = "0xE0D7AC", VA = "0xE0D7AC")]
		private bool IsDartFacingBoard(Transform dart)
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xE0D8A8", Offset = "0xE0D8A8", VA = "0xE0D8A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xE0BF64", Offset = "0xE0BF64", VA = "0xE0BF64")]
		private void HandleButton()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xE0E074", Offset = "0xE0E074", VA = "0xE0E074")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA423C4", Offset = "0xA423C4")]
		private IEnumerator PressButtonCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xE0DED0", Offset = "0xE0DED0", VA = "0xE0DED0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42428", Offset = "0xA42428")]
		private IEnumerator PreventFromMoving()
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xE0E140", Offset = "0xE0E140", VA = "0xE0E140")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4248C", Offset = "0xA4248C")]
		private IEnumerator BlinkScoreCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xE0D680", Offset = "0xE0D680", VA = "0xE0D680")]
		private void BlinkScore()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xE0BCAC", Offset = "0xE0BCAC", VA = "0xE0BCAC")]
		private void UpdateDisplayedText()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xE0C928", Offset = "0xE0C928", VA = "0xE0C928")]
		private void UpdateSpawningDartHand()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xE0E1E0", Offset = "0xE0E1E0", VA = "0xE0E1E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA424F0", Offset = "0xA424F0")]
		private IEnumerator ShowFireworks()
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xE0D62C", Offset = "0xE0D62C", VA = "0xE0D62C")]
		private void ShowNewHighscoreFX()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xE0E280", Offset = "0xE0E280", VA = "0xE0E280")]
		private bool CheckIfStuffIsProperlySerialized(SceneSystems systems)
		{
			return default(bool);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xE0D6CC", Offset = "0xE0D6CC", VA = "0xE0D6CC")]
		public void StopFireworksCoroutine()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xE0E544", Offset = "0xE0E544", VA = "0xE0E544")]
		public Board()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public struct WristDartSlotsInfo
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<DartSlot> currentSlots;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] currentAngles;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] targetAngles;
	}
	[Serializable]
	[Token(Token = "0x2000248")]
	public struct DartSlot
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int dartIndex;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform transform;
	}
	[Token(Token = "0x2000249")]
	public class Dart : Pickupable
	{
		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3557C", Offset = "0xA3557C")]
		private sealed class <PutDownAfterSomeTimeCoroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dart <>4__this;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A80")]
				[Address(RVA = "0xE108C8", Offset = "0xE108C8", VA = "0xE108C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A82")]
				[Address(RVA = "0xE10934", Offset = "0xE10934", VA = "0xE10934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xE0F958", Offset = "0xE0F958", VA = "0xE0F958")]
			[DebuggerHidden]
			public <PutDownAfterSomeTimeCoroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xE10710", Offset = "0xE10710", VA = "0xE10710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xE10714", Offset = "0xE10714", VA = "0xE10714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xE108D0", Offset = "0xE108D0", VA = "0xE108D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3558C", Offset = "0xA3558C")]
		private sealed class <NotifyAboutThrownDartAfterSomeTime>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dart <>4__this;

			[Token(Token = "0x17000333")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A86")]
				[Address(RVA = "0xE1069C", Offset = "0xE1069C", VA = "0xE1069C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A88")]
				[Address(RVA = "0xE10708", Offset = "0xE10708", VA = "0xE10708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xE101CC", Offset = "0xE101CC", VA = "0xE101CC")]
			[DebuggerHidden]
			public <NotifyAboutThrownDartAfterSomeTime>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xE105DC", Offset = "0xE105DC", VA = "0xE105DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xE105E0", Offset = "0xE105E0", VA = "0xE105E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xE106A4", Offset = "0xE106A4", VA = "0xE106A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AudioSource audioFx;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject physicsCollider;

		[Token(Token = "0x4000E90")]
		private const float MIN_CONTROLLER_THROW_SPEED = 2f;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public DartParameters dartParameters;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Coroutine putDownAfterSomeTimeCor;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BCB8", Offset = "0xA3BCB8")]
		private bool <isThrown>k__BackingField;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BCC8", Offset = "0xA3BCC8")]
		private bool <isAttachedToBoard>k__BackingField;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BCD8", Offset = "0xA3BCD8")]
		private bool <isOnWrist>k__BackingField;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BCE8", Offset = "0xA3BCE8")]
		private bool <isInCoroutine>k__BackingField;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 hitPositionRelativeToBoard;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly WaitForSeconds WaitForOneSecond;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly WaitForSeconds WaitForShortTime;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly WaitForSeconds WaitForVeryShortTime;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SceneSystems sceneSystems;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int collisionFreeLayerID;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int interactableLayerID;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float throwTime;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private bool addedToAfterInit;

		[Token(Token = "0x170001AE")]
		public bool isThrown
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xE0EDCC", Offset = "0xE0EDCC", VA = "0xE0EDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42554", Offset = "0xA42554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xE0EDD4", Offset = "0xE0EDD4", VA = "0xE0EDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42564", Offset = "0xA42564")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public bool isAttachedToBoard
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xE0EDE0", Offset = "0xE0EDE0", VA = "0xE0EDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42574", Offset = "0xA42574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xE0EDE8", Offset = "0xE0EDE8", VA = "0xE0EDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42584", Offset = "0xA42584")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool isOnWrist
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xE0EDF4", Offset = "0xE0EDF4", VA = "0xE0EDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42594", Offset = "0xA42594")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xE0EDFC", Offset = "0xE0EDFC", VA = "0xE0EDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425A4", Offset = "0xA425A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public bool isInCoroutine
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xE0EE08", Offset = "0xE0EE08", VA = "0xE0EE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425B4", Offset = "0xA425B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xE0EE10", Offset = "0xE0EE10", VA = "0xE0EE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425C4", Offset = "0xA425C4")]
			private set
			{
			}
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xE0EE1C", Offset = "0xE0EE1C", VA = "0xE0EE1C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xE0F0AC", Offset = "0xE0F0AC", VA = "0xE0F0AC")]
		private void HandleNewSceneLoaded()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xE0C770", Offset = "0xE0C770", VA = "0xE0C770")]
		public void Initialise(DartParameters dartParameters, VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xE0F398", Offset = "0xE0F398", VA = "0xE0F398")]
		private void CorrectDartPositionSlightly(float deltaTime)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xE0F4E8", Offset = "0xE0F4E8", VA = "0xE0F4E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xE0DF78", Offset = "0xE0DF78", VA = "0xE0DF78")]
		public void HandleBoardHit(Vector3 hitPosition, bool minigameIsActive)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xE0D498", Offset = "0xE0D498", VA = "0xE0D498")]
		public void Reset(bool animateScaleChange = false)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xE0F6D4", Offset = "0xE0F6D4", VA = "0xE0F6D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA425D4", Offset = "0xA425D4")]
		public void OnPickedUp()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xE0F73C", Offset = "0xE0F73C", VA = "0xE0F73C")]
		private void PrePickup()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xE0F7F4", Offset = "0xE0F7F4", VA = "0xE0F7F4", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xE0CFC8", Offset = "0xE0CFC8", VA = "0xE0CFC8")]
		public void AttachToHand(VRObjects.Controller controller, int slotIndex)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xE0F7A0", Offset = "0xE0F7A0", VA = "0xE0F7A0")]
		private void SetOnWrist(bool val)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xE0F830", Offset = "0xE0F830", VA = "0xE0F830")]
		public void PutDownImmediately()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xE0F894", Offset = "0xE0F894", VA = "0xE0F894")]
		private void PutDownAfterSomeTime()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xE0F8E4", Offset = "0xE0F8E4", VA = "0xE0F8E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4260C", Offset = "0xA4260C")]
		private IEnumerator PutDownAfterSomeTimeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xE0F984", Offset = "0xE0F984", VA = "0xE0F984", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xE100D8", Offset = "0xE100D8", VA = "0xE100D8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xE0FE50", Offset = "0xE0FE50", VA = "0xE0FE50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42670", Offset = "0xA42670")]
		private IEnumerator NotifyAboutThrownDartAfterSomeTime()
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xE10058", Offset = "0xE10058", VA = "0xE10058")]
		private Vector3 CorrectVelocity(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE0DF44", Offset = "0xE0DF44", VA = "0xE0DF44")]
		public void ExitCoroutine()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xE0DEA4", Offset = "0xE0DEA4", VA = "0xE0DEA4")]
		public void StopThrow()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xE0F680", Offset = "0xE0F680", VA = "0xE0F680")]
		private void SetCollision(bool value)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xE101F8", Offset = "0xE101F8", VA = "0xE101F8")]
		private static void SetSceneSystem(SceneSystems sc)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE0F128", Offset = "0xE0F128", VA = "0xE0F128")]
		private void AddToRenderingSystem()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xE10264", Offset = "0xE10264", VA = "0xE10264")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE10450", Offset = "0xE10450", VA = "0xE10450", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE10454", Offset = "0xE10454", VA = "0xE10454")]
		public Dart()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024A")]
	public struct DartParameters
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Board board;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider dartHitAreaCollider;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform boardCenter;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform dartHitSlot;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform socketOnHand;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float autoAimStrength;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float speed;
	}
}
namespace _Code.FunMechanics.RemoteControlCar
{
	[Token(Token = "0x200024B")]
	public class CarReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3BCF8", Offset = "0xA3BCF8")]
		[SerializeField]
		private RenderItemContainer renderItemContainer;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new Transform transform;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoxCollider collider;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RemoteCarPickapable pickapable;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3BD94", Offset = "0xA3BD94")]
		[SerializeField]
		private WheelReferenceHandler frontRightWheel;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WheelReferenceHandler frontLeftWheel;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WheelReferenceHandler rearRightWheel;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WheelReferenceHandler rearLeftWheel;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3BE10", Offset = "0xA3BE10")]
		[SerializeField]
		private ParticleSystem rightWheelParticle;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem leftWheelParticle;

		[Token(Token = "0x170001B2")]
		public RenderItemContainer RenderItemContainer
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xE1093C", Offset = "0xE1093C", VA = "0xE1093C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public Transform Transform
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xE10944", Offset = "0xE10944", VA = "0xE10944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xE1094C", Offset = "0xE1094C", VA = "0xE1094C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public BoxCollider Collider
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xE10954", Offset = "0xE10954", VA = "0xE10954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public RemoteCarPickapable Pickapable
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xE1095C", Offset = "0xE1095C", VA = "0xE1095C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xE10964", Offset = "0xE10964", VA = "0xE10964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public WheelReferenceHandler FrontRightWheel
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xE1096C", Offset = "0xE1096C", VA = "0xE1096C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public WheelReferenceHandler FrontLeftWheel
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xE10974", Offset = "0xE10974", VA = "0xE10974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public WheelReferenceHandler RearRightWheel
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xE1097C", Offset = "0xE1097C", VA = "0xE1097C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public WheelReferenceHandler RearLeftWheel
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xE10984", Offset = "0xE10984", VA = "0xE10984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public ParticleSystem RightWheelParticle
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xE1098C", Offset = "0xE1098C", VA = "0xE1098C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public ParticleSystem LeftWheelParticle
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xE10994", Offset = "0xE10994", VA = "0xE10994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xE1099C", Offset = "0xE1099C", VA = "0xE1099C")]
		public CarReferenceHandler()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class RemoteCarController : Item
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Action<Pickupable> OnCarSpawned;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3BE6C", Offset = "0xA3BE6C")]
		[SerializeField]
		private CarReferenceHandler carPrefab;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private Transform attachPoint;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private AudioClip forwardMovingSound;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private AudioClip backwardMovingSound;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private AudioClip hitSound;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private CollisionDetectionConfiguration collisionConfig;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private CarReferenceHandler car;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private TriggerAction trigger;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private StickAction stick;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private AchievementSystem achievementSystem;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float maxSteerAngle;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private float angleLerpSpeed;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float motorForce;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private float currentSteeringAngle;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int direction;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private bool carSpawned;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
		private bool reset;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x306")]
		private bool particlesVisible;

		[Token(Token = "0x4000EC8")]
		private const float MIN_FORWARD_VELOCITY_TO_SHOW_PARTICLES = 3f;

		[Token(Token = "0x4000EC9")]
		private const float ZERO_TOLERANCE = 0.01f;

		[Token(Token = "0x4000ECA")]
		private const float CHANGE_DIRECTION_INPUT_TOLERANCE = 0.1f;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float drivingTime;

		[Token(Token = "0x170001BE")]
		private bool IsTriggerPressed
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xE109A4", Offset = "0xE109A4", VA = "0xE109A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xE109DC", Offset = "0xE109DC", VA = "0xE109DC", Slot = "32")]
		public override void InitItem(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystem, MovingObjectsConfiguration movingConfig, CollisionDetectionConfiguration config, bool onSceneLoaded = false)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xE10BF4", Offset = "0xE10BF4", VA = "0xE10BF4", Slot = "15")]
		protected override void OnTick()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xE110B8", Offset = "0xE110B8", VA = "0xE110B8")]
		public void StopForce()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xE11164", Offset = "0xE11164", VA = "0xE11164")]
		public void SetMotorForce(int force)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xE10CB4", Offset = "0xE10CB4", VA = "0xE10CB4")]
		private (float, bool, Vector3) CalculateSteeringAngleForceAndVelocity()
		{
			return default((float, bool, Vector3));
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE10E40", Offset = "0xE10E40", VA = "0xE10E40")]
		private void PerformMovement(float steeringAngle, bool drifting)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xE112E8", Offset = "0xE112E8", VA = "0xE112E8")]
		private void IncreaseSteeringAngleWhile(bool drifting)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE10F2C", Offset = "0xE10F2C", VA = "0xE10F2C")]
		private void PlayFx(Vector3 velocityInLocalSpace)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE11410", Offset = "0xE11410", VA = "0xE11410")]
		private static bool VelocityIsCloseToZero(Vector3 velocity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE11314", Offset = "0xE11314", VA = "0xE11314")]
		private void PlayEngineSound(float triggerPosition)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xE114B4", Offset = "0xE114B4", VA = "0xE114B4")]
		private void PlayCarSound(AudioClip soundClip, float pitch = 1f)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xE11558", Offset = "0xE11558", VA = "0xE11558")]
		public void PlayHitSound()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE11170", Offset = "0xE11170", VA = "0xE11170")]
		private void ChooseDirection()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE1158C", Offset = "0xE1158C", VA = "0xE1158C")]
		private void CheckAxisMarginAndChangeDirection(float yStick, int margin)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE111F8", Offset = "0xE111F8", VA = "0xE111F8")]
		private void Steer(float steeringAngle)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE115C8", Offset = "0xE115C8", VA = "0xE115C8")]
		private void SetSteer(float steeringAngle)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE11244", Offset = "0xE11244", VA = "0xE11244")]
		private void Accelerate(bool drifting)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE1163C", Offset = "0xE1163C", VA = "0xE1163C")]
		private void SetMotorTorqueToFrontWheels(float acceleration)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE10ECC", Offset = "0xE10ECC", VA = "0xE10ECC")]
		private void UpdateWheelPoses()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE116B0", Offset = "0xE116B0", VA = "0xE116B0")]
		private static void UpdateWheelPose(WheelReferenceHandler wheel)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE11718", Offset = "0xE11718", VA = "0xE11718", Slot = "28")]
		public override void MoveAndRotate(RaycastArgs args)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE1171C", Offset = "0xE1171C", VA = "0xE1171C", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE11B30", Offset = "0xE11B30", VA = "0xE11B30", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand controller, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE11AA4", Offset = "0xE11AA4", VA = "0xE11AA4")]
		private void SpawnCar()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE11DE0", Offset = "0xE11DE0", VA = "0xE11DE0")]
		private void SetCarPosition()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xE11CE8", Offset = "0xE11CE8", VA = "0xE11CE8")]
		private void InstantiateCar()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xE11F6C", Offset = "0xE11F6C", VA = "0xE11F6C", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xE12034", Offset = "0xE12034", VA = "0xE12034", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xE12090", Offset = "0xE12090", VA = "0xE12090", Slot = "7")]
		public override void SelfDisable(bool skipAnimation = false)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xE12264", Offset = "0xE12264", VA = "0xE12264")]
		public RemoteCarController()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class RemoteCarPickapable : Pickupable, ICanBeSold
	{
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3559C", Offset = "0xA3559C")]
		private sealed class <DistanceGrabCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RemoteCarPickapable <>4__this;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform t;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x17000335")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A8C")]
				[Address(RVA = "0xE130B8", Offset = "0xE130B8", VA = "0xE130B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A8E")]
				[Address(RVA = "0xE13124", Offset = "0xE13124", VA = "0xE13124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xE129E8", Offset = "0xE129E8", VA = "0xE129E8")]
			[DebuggerHidden]
			public <DistanceGrabCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xE12DFC", Offset = "0xE12DFC", VA = "0xE12DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xE12E00", Offset = "0xE12E00", VA = "0xE12E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xE130C0", Offset = "0xE130C0", VA = "0xE130C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		[SerializeField]
		private bool clampAngularVelocity;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Transform centerOfMass;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Coroutine distanceGrabCoroutine;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private RemoteCarController remote;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3BF18", Offset = "0xA3BF18")]
		private bool <CanBeSold>k__BackingField;

		[Token(Token = "0x170001BF")]
		public bool CanBeSold
		{
			[Token(Token = "0x6001285")]
			[Address(RVA = "0xE12DDC", Offset = "0xE12DDC", VA = "0xE12DDC", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42738", Offset = "0xA42738")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001286")]
			[Address(RVA = "0xE12DE4", Offset = "0xE12DE4", VA = "0xE12DE4", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42748", Offset = "0xA42748")]
			set
			{
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xE12298", Offset = "0xE12298", VA = "0xE12298", Slot = "13")]
		public override void Init(VRObjects objects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE122FC", Offset = "0xE122FC", VA = "0xE122FC")]
		public void BlockSelling()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE12304", Offset = "0xE12304", VA = "0xE12304")]
		public void AssignRemoteReference(RemoteCarController remote)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE1230C", Offset = "0xE1230C", VA = "0xE1230C", Slot = "14")]
		public override void PickUp(_Code.Tools.Hand hand, bool preferSoftLink)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE12630", Offset = "0xE12630", VA = "0xE12630")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xE126AC", Offset = "0xE126AC", VA = "0xE126AC", Slot = "16")]
		public override void PutDown(_Code.Tools.Hand hand, bool addForce = true, bool ignoreIntersections = false, bool ignorePhysicSimulation = false)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xE127C4", Offset = "0xE127C4", VA = "0xE127C4", Slot = "20")]
		protected override void OnTweenCompleted()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE129D0", Offset = "0xE129D0", VA = "0xE129D0")]
		public void StopForce()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE12468", Offset = "0xE12468", VA = "0xE12468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA426D4", Offset = "0xA426D4")]
		private IEnumerator DistanceGrabCoroutine(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE12A14", Offset = "0xE12A14", VA = "0xE12A14", Slot = "23")]
		protected override void AddForce(_Code.Tools.Hand controller)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xE12BFC", Offset = "0xE12BFC", VA = "0xE12BFC", Slot = "26")]
		protected override void Detach()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE12C38", Offset = "0xE12C38", VA = "0xE12C38", Slot = "25")]
		protected override void AttachTo(Transform t)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE12D64", Offset = "0xE12D64", VA = "0xE12D64", Slot = "29")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xE12D68", Offset = "0xE12D68", VA = "0xE12D68", Slot = "31")]
		public void HandleSell()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE12DF0", Offset = "0xE12DF0", VA = "0xE12DF0")]
		public RemoteCarPickapable()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class WheelReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform modelTransform;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WheelCollider wheelCollider;

		[Token(Token = "0x170001C0")]
		public Transform ModelTransform
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xE1312C", Offset = "0xE1312C", VA = "0xE1312C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public WheelCollider WheelCollider
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0xE13134", Offset = "0xE13134", VA = "0xE13134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE1313C", Offset = "0xE1313C", VA = "0xE1313C")]
		public WheelReferenceHandler()
		{
		}
	}
}
namespace _Code.Fonts
{
	[Token(Token = "0x200024F")]
	public class FontComponent : MonoBehaviour
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro textField;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float startSize;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool preferThinnerFont;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FontConfiguration fontConfig;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LanguageDataBase langDatabase;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool initialised;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xC20358", Offset = "0xC20358", VA = "0xC20358")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xC205C8", Offset = "0xC205C8", VA = "0xC205C8")]
		public void Initialise(FontSystem fontSystem, FontConfiguration config, LanguageDataBase database)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xC2078C", Offset = "0xC2078C", VA = "0xC2078C")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xC20554", Offset = "0xC20554", VA = "0xC20554")]
		private void HandleLanguageChanged(FontSetting languageFontSetting)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xC208A8", Offset = "0xC208A8", VA = "0xC208A8")]
		public FontComponent()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA34090", Offset = "0xA34090")]
	public class FontConfiguration : ScriptableObject
	{
		[Token(Token = "0x200042E")]
		public enum Language
		{
			[Token(Token = "0x400163C")]
			Czech,
			[Token(Token = "0x400163D")]
			English,
			[Token(Token = "0x400163E")]
			French,
			[Token(Token = "0x400163F")]
			German,
			[Token(Token = "0x4001640")]
			Japanese,
			[Token(Token = "0x4001641")]
			Korean,
			[Token(Token = "0x4001642")]
			Polish,
			[Token(Token = "0x4001643")]
			Spanish,
			[Token(Token = "0x4001644")]
			Turkish,
			[Token(Token = "0x4001645")]
			Russian,
			[Token(Token = "0x4001646")]
			ChineseSimplified,
			[Token(Token = "0x4001647")]
			ChineseTraditional
		}

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LanguageFontSetting[] fontSettings;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, FontSetting> LanguageToFontSetting;

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xC208B0", Offset = "0xC208B0", VA = "0xC208B0")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xC20420", Offset = "0xC20420", VA = "0xC20420")]
		public FontSetting GetSettingFor(int lang)
		{
			return default(FontSetting);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xC209F4", Offset = "0xC209F4", VA = "0xC209F4")]
		public FontConfiguration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000251")]
	public struct LanguageFontSetting
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontConfiguration.Language language;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FontSetting setting;
	}
	[Serializable]
	[Token(Token = "0x2000252")]
	public struct FontSetting
	{
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TMP_FontAsset font;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool sizeDependent;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fontSizeSwitchValue;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset thinnerFont;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sizeMultiplier;

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xAEBC68", Offset = "0xAEBC68", VA = "0xAEBC68")]
		public TMP_FontAsset GetFont(float fontSize, bool preferThinnerFont)
		{
			return null;
		}
	}
	[Token(Token = "0x2000253")]
	public class FontSystem : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FontConfiguration config;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectLanguageScreen languageScreen;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageDataBase database;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VirtualButton[] languageChangeButtons;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FontComponent[] fontComponents;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool initialised;

		[Token(Token = "0x14000031")]
		public event Action<FontSetting> OnLanguageChanged
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xC206E8", Offset = "0xC206E8", VA = "0xC206E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42758", Offset = "0xA42758")]
			add
			{
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xC20A64", Offset = "0xC20A64", VA = "0xC20A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42768", Offset = "0xA42768")]
			remove
			{
			}
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xC20B08", Offset = "0xC20B08", VA = "0xC20B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xC20C10", Offset = "0xC20C10", VA = "0xC20C10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xC20E40", Offset = "0xC20E40", VA = "0xC20E40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xC20C14", Offset = "0xC20C14", VA = "0xC20C14")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xC20F40", Offset = "0xC20F40", VA = "0xC20F40")]
		public void IncludeFontComponent(FontComponent fontComponent)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xC20F6C", Offset = "0xC20F6C", VA = "0xC20F6C")]
		public void IncludeFontComponents(IEnumerable<FontComponent> fontComponents)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xC211F0", Offset = "0xC211F0", VA = "0xC211F0")]
		private void HandleLanguageChanged(LanguageData languageData)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xC20B38", Offset = "0xC20B38", VA = "0xC20B38")]
		private void HandleLanguageChanged()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC212A4", Offset = "0xC212A4", VA = "0xC212A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA42778", Offset = "0xA42778")]
		private void CollectRefs()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xC212A8", Offset = "0xC212A8", VA = "0xC212A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA427B0", Offset = "0xA427B0")]
		private void AddFontComponents()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xC212AC", Offset = "0xC212AC", VA = "0xC212AC")]
		public FontSystem()
		{
		}
	}
}
namespace _Code.Dirts
{
	[Serializable]
	[Token(Token = "0x2000254")]
	[SelectionBase]
	public class DirtPart : MonoBehaviour
	{
		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355AC", Offset = "0xA355AC")]
		private sealed class <Scale>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DirtPart <>4__this;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 newScale;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <progress>5__3;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A92")]
				[Address(RVA = "0xC1DB10", Offset = "0xC1DB10", VA = "0xC1DB10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A94")]
				[Address(RVA = "0xC1DB7C", Offset = "0xC1DB7C", VA = "0xC1DB7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0xC1D700", Offset = "0xC1D700", VA = "0xC1D700")]
			[DebuggerHidden]
			public <Scale>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xC1D9AC", Offset = "0xC1D9AC", VA = "0xC1D9AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xC1D9B0", Offset = "0xC1D9B0", VA = "0xC1D9B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xC1DB18", Offset = "0xC1DB18", VA = "0xC1DB18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355BC", Offset = "0xA355BC")]
		private sealed class <MoveCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DirtPart <>4__this;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 newPosition;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startCoroutinePosition>5__2;

			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <progress>5__3;

			[Token(Token = "0x17000339")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A98")]
				[Address(RVA = "0xC1D938", Offset = "0xC1D938", VA = "0xC1D938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A9A")]
				[Address(RVA = "0xC1D9A4", Offset = "0xC1D9A4", VA = "0xC1D9A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xC1D72C", Offset = "0xC1D72C", VA = "0xC1D72C")]
			[DebuggerHidden]
			public <MoveCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xC1D7D4", Offset = "0xC1D7D4", VA = "0xC1D7D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xC1D7D8", Offset = "0xC1D7D8", VA = "0xC1D7D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xC1D940", Offset = "0xC1D940", VA = "0xC1D940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformToMove;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider thisCollider;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform colliderTransform;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3BFE8", Offset = "0xA3BFE8")]
		public float cleanSpeedLower;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cleanSpeedUpper;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C020", Offset = "0xA3C020")]
		public Color maxColor;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool isEntered;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public Vector3 startPosition;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine moveCoroutine;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine scaleCoroutine;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool softened;

		[Token(Token = "0x4000EF5")]
		private const float MIN_LOWER_SPEED = 0.3f;

		[Token(Token = "0x4000EF6")]
		private const float CLEANING_SPEED_CHANGE_DIVIDER = 2f;

		[Token(Token = "0x4000EF7")]
		private const float LERP_SPEED = 0.05f;

		[Token(Token = "0x170001C2")]
		public float CleaningT
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xC1D2A4", Offset = "0xC1D2A4", VA = "0xC1D2A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xC1D2C0", Offset = "0xC1D2C0", VA = "0xC1D2C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA427E8", Offset = "0xA427E8")]
		public void CollectReferences()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xC1D368", Offset = "0xC1D368", VA = "0xC1D368")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC1D39C", Offset = "0xC1D39C", VA = "0xC1D39C")]
		public void Soften(float multiplier)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xC1D468", Offset = "0xC1D468", VA = "0xC1D468")]
		public void MoveInCoroutine(Vector3 moveOffset)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC1D5F4", Offset = "0xC1D5F4", VA = "0xC1D5F4")]
		public void ScaleInCoroutine(Vector3 newScale)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC1D400", Offset = "0xC1D400", VA = "0xC1D400")]
		private void ChangeSpeed(float multiplier)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xC1D42C", Offset = "0xC1D42C", VA = "0xC1D42C")]
		private void CheckIfFullySoftenedAndClamp()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xC1D668", Offset = "0xC1D668", VA = "0xC1D668")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42820", Offset = "0xA42820")]
		private IEnumerator Scale(Vector3 newScale)
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xC1D55C", Offset = "0xC1D55C", VA = "0xC1D55C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42884", Offset = "0xA42884")]
		private IEnumerator MoveCoroutine(Vector3 newPosition)
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC1D758", Offset = "0xC1D758", VA = "0xC1D758")]
		public DirtPart()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class DirtSet : MonoBehaviour
	{
		[Token(Token = "0x2000431")]
		private enum Orientation
		{
			[Token(Token = "0x4001655")]
			X,
			[Token(Token = "0x4001656")]
			Y,
			[Token(Token = "0x4001657")]
			Z
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355CC", Offset = "0xA355CC")]
		private sealed class <DisableCleanFxAfterTime>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DirtSet <>4__this;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A9E")]
				[Address(RVA = "0xC1EE44", Offset = "0xC1EE44", VA = "0xC1EE44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AA0")]
				[Address(RVA = "0xC1EEB0", Offset = "0xC1EEB0", VA = "0xC1EEB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xC1ED4C", Offset = "0xC1ED4C", VA = "0xC1ED4C")]
			[DebuggerHidden]
			public <DisableCleanFxAfterTime>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xC1ED88", Offset = "0xC1ED88", VA = "0xC1ED88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xC1ED8C", Offset = "0xC1ED8C", VA = "0xC1ED8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xC1EE4C", Offset = "0xC1EE4C", VA = "0xC1EE4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DirtPart[] dirtParts;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Orientation up;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RenderItemContainer toonGroup;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform thisTransform;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C0A8", Offset = "0xA3C0A8")]
		private bool <Cleaned>k__BackingField;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int cleanedParts;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FxSceneSystem fxSystem;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private QuestSceneSystem questSceneSystem;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriggeredFx cleanedStarsFX;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vibration vibration;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderingSceneSystem renderingSceneSystem;

		[Token(Token = "0x4000F03")]
		private const float HALF_SCALE_STEP = 0.5f;

		[Token(Token = "0x4000F04")]
		private const float MIN_SCALE_TO_DISCARD_DIRT = 0.225f;

		[Token(Token = "0x4000F05")]
		private const float SCALE_TO_DISCARD_LAST_DIRT = 0.35f;

		[Token(Token = "0x4000F06")]
		private const float DIRT_COUNT_TO_EASY_MODE = 3f;

		[Token(Token = "0x4000F07")]
		private const float MAX_DIST = 0.125f;

		[Token(Token = "0x4000F08")]
		private const float DIRT_MOVING_SPEED = 0.1f;

		[Token(Token = "0x4000F09")]
		private const float OVERALL_DEFAULT_SPEED = 1f;

		[Token(Token = "0x4000F0A")]
		private const float OVERALL_FAST_SPEED = 2f;

		[Token(Token = "0x170001C3")]
		public bool Cleaned
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xC1DB84", Offset = "0xC1DB84", VA = "0xC1DB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428E8", Offset = "0xA428E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xC1DB8C", Offset = "0xC1DB8C", VA = "0xC1DB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428F8", Offset = "0xA428F8")]
			private set
			{
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC1DB98", Offset = "0xC1DB98", VA = "0xC1DB98")]
		public void Initialise(SceneSystems sceneSystems, Vibration vibration)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC1DC78", Offset = "0xC1DC78", VA = "0xC1DC78")]
		public void SetCleaned()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC1DCF8", Offset = "0xC1DCF8", VA = "0xC1DCF8")]
		public bool CleanIfAnyColliderIsMine(int count, Collider[] overlappedColliders, Vector3 controllerPosition, _Code.VR.InputSystem.Hand hand, bool fasterCleaningEnabled)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC1E1AC", Offset = "0xC1E1AC", VA = "0xC1E1AC")]
		public void ChangeCleanSpeed(int count, Collider[] overlappedColliders, float multiplier)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC1E348", Offset = "0xC1E348", VA = "0xC1E348")]
		public void ChangeDirtPartColor(RenderItem item, Color maxBright, float t)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC1E3C8", Offset = "0xC1E3C8", VA = "0xC1E3C8")]
		public void ChangeColorWithoutAlpha(int count, Collider[] overlappedColliders, Color color)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC1E528", Offset = "0xC1E528", VA = "0xC1E528")]
		public void ClearAllDirtPartsCollisionStatus()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC1DF20", Offset = "0xC1DF20", VA = "0xC1DF20")]
		private bool CleanOverlappedParts(int count, IReadOnlyList<Collider> overlappedColliders, _Code.VR.InputSystem.Hand hand, bool fasterCleaningEnabled, Vector3 controllerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC1DD74", Offset = "0xC1DD74", VA = "0xC1DD74")]
		private void CheckForOverlapExit(int count, IReadOnlyList<Collider> overlappedColliders)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC1E588", Offset = "0xC1E588", VA = "0xC1E588")]
		private void Clean(DirtPart dirtPart, Vector3 controllerPosition, _Code.VR.InputSystem.Hand hand, bool fasterCleaningEnabled)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC1E768", Offset = "0xC1E768", VA = "0xC1E768")]
		private float GetOverallSpeed(bool fastCleaning)
		{
			return default(float);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC1E944", Offset = "0xC1E944", VA = "0xC1E944")]
		private void Move(DirtPart dirtPart, Vector3 controllerPosition, float overallSpeed)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC1E804", Offset = "0xC1E804", VA = "0xC1E804")]
		private void ChangeSize(DirtPart dirtPart, float overallSpeed)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC1EB80", Offset = "0xC1EB80", VA = "0xC1EB80")]
		private static void MakeColliderSmaller(DirtPart dirtPart)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC1EB08", Offset = "0xC1EB08", VA = "0xC1EB08")]
		private void DisableIfExtraSmall(DirtPart dirtPart)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC1E68C", Offset = "0xC1E68C", VA = "0xC1E68C")]
		private void DisableLastIfSmall(DirtPart dirtPart)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xC1EC1C", Offset = "0xC1EC1C", VA = "0xC1EC1C")]
		private float ScaleRandom(DirtPart dirtPart)
		{
			return default(float);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xC1EC3C", Offset = "0xC1EC3C", VA = "0xC1EC3C")]
		private void CheckCleanedStatus()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC1ECD8", Offset = "0xC1ECD8", VA = "0xC1ECD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42908", Offset = "0xA42908")]
		private IEnumerator DisableCleanFxAfterTime()
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC1ED78", Offset = "0xC1ED78", VA = "0xC1ED78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC1ED80", Offset = "0xC1ED80", VA = "0xC1ED80")]
		public DirtSet()
		{
		}
	}
}
namespace _Code.DebugUI
{
	[Token(Token = "0x2000256")]
	public class DebugPopupSpawnerSubsystem : MonoBehaviour, IInitialiseFirst
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform spawnParent;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC1D298", Offset = "0xC1D298", VA = "0xC1D298", Slot = "4")]
		public void InitialiseFirst()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xC1D29C", Offset = "0xC1D29C", VA = "0xC1D29C")]
		public DebugPopupSpawnerSubsystem()
		{
		}
	}
}
namespace _Code.UI_Tablet
{
	[Token(Token = "0x2000257")]
	public class VariantButton : VirtualButton
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material leftSideMaterialInstance;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material rightSideMaterialInstance;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initialised;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xDD8BD8", Offset = "0xDD8BD8", VA = "0xDD8BD8")]
		private void EnsureInitialised()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xDD8C68", Offset = "0xDD8C68", VA = "0xDD8C68")]
		public void Color(ColorPreset[] colors)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xDD8D00", Offset = "0xDD8D00", VA = "0xDD8D00")]
		private void ColorLeftSide(Color color)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xDD8D8C", Offset = "0xDD8D8C", VA = "0xDD8D8C")]
		private void ColorRightSide(Color color)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xDD8E18", Offset = "0xDD8E18", VA = "0xDD8E18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xDD8EA4", Offset = "0xDD8EA4", VA = "0xDD8EA4")]
		public VariantButton()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class CircularLayoutElement : MonoBehaviour
	{
		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int position;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int positionsCount;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float circleRadius;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float zPosition;

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD05A68", Offset = "0xD05A68", VA = "0xD05A68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4296C", Offset = "0xA4296C")]
		public void SetupPosition()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD05A70", Offset = "0xD05A70", VA = "0xD05A70")]
		public void SetupPosition(bool inverse)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD05C00", Offset = "0xD05C00", VA = "0xD05C00")]
		public CircularLayoutElement()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class ColorableVirtualButton : MonoBehaviour
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer renderer;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x170001C4")]
		private Material Material
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xD05C14", Offset = "0xD05C14", VA = "0xD05C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD05C50", Offset = "0xD05C50", VA = "0xD05C50")]
		public void Color(string colorPropName, Color color)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD05CB0", Offset = "0xD05CB0", VA = "0xD05CB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD05D64", Offset = "0xD05D64", VA = "0xD05D64")]
		public ColorableVirtualButton()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class CreditsDeveloperDiv : MonoBehaviour
	{
		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject go;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text roleLabel;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text nameLabel;

		[Token(Token = "0x170001C5")]
		public TMP_Text RoleLabel
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xD05D6C", Offset = "0xD05D6C", VA = "0xD05D6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public TMP_Text NameLabel
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xD05D74", Offset = "0xD05D74", VA = "0xD05D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD05D7C", Offset = "0xD05D7C", VA = "0xD05D7C")]
		public void SetText(string role, string name)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD05DD8", Offset = "0xD05DD8", VA = "0xD05DD8")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD05DF8", Offset = "0xD05DF8", VA = "0xD05DF8")]
		public CreditsDeveloperDiv()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class GameContentMapper : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000433")]
		public class ItemMapping
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string path;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string theGuid;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Item item;

			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xDD3210", Offset = "0xDD3210", VA = "0xDD3210")]
			public ItemMapping(string theGuid, string path, Item item)
			{
			}
		}

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ItemMapping> items;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HouseAsset> houses;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<JobAsset> jobs;

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD05E00", Offset = "0xD05E00", VA = "0xD05E00")]
		public (bool, Item) TryToGetItem(string guid)
		{
			return default((bool, Item));
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD05F8C", Offset = "0xD05F8C", VA = "0xD05F8C")]
		public (bool, string) TryToGetGuid(Item item)
		{
			return default((bool, string));
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD06144", Offset = "0xD06144", VA = "0xD06144")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD061CC", Offset = "0xD061CC", VA = "0xD061CC")]
		public GameContentMapper()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class GridOrdnung : MonoBehaviour
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int columns;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cellSize;

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xDD3250", Offset = "0xDD3250", VA = "0xDD3250")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA429A4", Offset = "0xA429A4")]
		private void SetupButtonsGrid()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xDD345C", Offset = "0xDD345C", VA = "0xDD345C")]
		public GridOrdnung()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class HouseVirtualButton : VirtualButton
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C118", Offset = "0xA3C118")]
		private GameObject currencyIconGameObject;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xDD3464", Offset = "0xDD3464", VA = "0xDD3464")]
		public void SetCurrencyIconEnabled(bool value)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xDD3484", Offset = "0xDD3484", VA = "0xDD3484")]
		public HouseVirtualButton()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class MailBoxVirtualButton : VirtualButton
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject border;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject plate;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject percentLabelGameObject;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TextMeshPro percentLabel;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xDD34EC", Offset = "0xDD34EC", VA = "0xDD34EC")]
		public void ShowProgressVisuals(bool isComplete, float progress)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xDD35E4", Offset = "0xDD35E4", VA = "0xDD35E4")]
		public void ShowNewMailVisuals()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xDD363C", Offset = "0xDD363C", VA = "0xDD363C")]
		public MailBoxVirtualButton()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class PaginationControls : MonoBehaviour
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualButton prevButton;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VirtualButton nextButton;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text pagesLabel;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xDD36A4", Offset = "0xDD36A4", VA = "0xDD36A4")]
		public PaginationControls()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class PosRotTweener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000434")]
		public struct PosRot
		{
			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 euler;

			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xAEEC10", Offset = "0xAEEC10", VA = "0xAEEC10")]
			public PosRot(Vector3 pos, Vector3 euler)
			{
			}
		}

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PosRot> tweenTargets;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tweenDuration;

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xDD36AC", Offset = "0xDD36AC", VA = "0xDD36AC")]
		public void TweenToTarget(int i)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xDD37B0", Offset = "0xDD37B0", VA = "0xDD37B0")]
		public void GoToTarget(int i)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xDD38AC", Offset = "0xDD38AC", VA = "0xDD38AC")]
		public PosRotTweener()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class SkillButton : ColorableVirtualButton, IHasLocalizedName
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkillType type;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private SkillState state;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color unlockedColor;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color lockedColor;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color acquiredColor;

		[Token(Token = "0x170001C7")]
		public string LocalizedName
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xDD3D08", Offset = "0xDD3D08", VA = "0xDD3D08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xDD3938", Offset = "0xDD3938", VA = "0xDD3938")]
		public void Initialise(Color uColor, Color lColor, Color aColor)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xDD395C", Offset = "0xDD395C", VA = "0xDD395C")]
		public void SetButtonState(SkillState state)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xDD3CF0", Offset = "0xDD3CF0", VA = "0xDD3CF0")]
		public bool IsInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xDD3D00", Offset = "0xDD3D00", VA = "0xDD3D00")]
		public SkillState GetState()
		{
			return default(SkillState);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xDD3D98", Offset = "0xDD3D98", VA = "0xDD3D98")]
		public SkillButton()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class Tablet : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		public class SideSwappingElement
		{
			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform element;

			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool mirrorPosition;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool mirrorScale;

			[NonSerialized]
			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 homePosition;

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xDD4A8C", Offset = "0xDD4A8C", VA = "0xDD4A8C")]
			public void Setup()
			{
			}

			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xDD4E68", Offset = "0xDD4E68", VA = "0xDD4E68")]
			public void SetSwapped(bool swapped)
			{
			}

			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xDD6884", Offset = "0xDD6884", VA = "0xDD6884")]
			public SideSwappingElement()
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355DC", Offset = "0xA355DC")]
		private sealed class <GetVirtualButtons>d__80 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tablet <>4__this;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<VirtualButton> <>7__wrap1;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<VirtualButton>.Enumerator <>7__wrap2;

			[Token(Token = "0x1700033D")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001AAB")]
				[Address(RVA = "0xDD675C", Offset = "0xDD675C", VA = "0xDD675C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AAD")]
				[Address(RVA = "0xDD67C8", Offset = "0xDD67C8", VA = "0xDD67C8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xDD55E0", Offset = "0xDD55E0", VA = "0xDD55E0")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0xDD61C8", Offset = "0xDD61C8", VA = "0xDD61C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xDD6310", Offset = "0xDD6310", VA = "0xDD6310", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xDD61F8", Offset = "0xDD61F8", VA = "0xDD61F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xDD62B8", Offset = "0xDD62B8", VA = "0xDD62B8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xDD6764", Offset = "0xDD6764", VA = "0xDD6764", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xDD67D0", Offset = "0xDD67D0", VA = "0xDD67D0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0xDD6880", Offset = "0xDD6880", VA = "0xDD6880", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FontSystem fontSystem;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VirtualButton closeButton;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VirtualButton backButton;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VirtualButton devButton;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualButton pinButton;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PosRotTweener pinTweener;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform scaler;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VirtualSlider slider;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro moneyLabel;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshPro screenTitle;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIVariableWidthController screenTitlePlate;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject gridDiv;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject bottomBar;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<VirtualButton> buttons;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<SideSwappingElement> sideSwappingElements;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C1B4", Offset = "0xA3C1B4")]
		public HomeScreen homeScreen;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ItemCategoriesScreen itemCategories;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ItemsListScreen itemsList;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SingleItemScreen singleItem;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public JobsScreen jobsScreen;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SingleJobScreen singleJob;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HousesScreen housesScreen;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SingleHouseScreen singleHouse;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public HouseSellDialogueScreen houseSellDialogueScreen;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public DevScreen devScreen;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public OptionsScreen optionsScreen;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SelectLanguageScreen languagesScreen;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ChangeMovementScreen changeMovementScreen;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TutorialsScreen tutorialsScreen;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SkillTreeScreen skillTreeScreen;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public SingleTutorialScreen singleTutorialScreen;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C1EC", Offset = "0xA3C1EC")]
		public float tabletScale;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float verticalPitch;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float horizontalPitch;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float howFarFromHand;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float aboveHandHorizontalMode;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float aboveHandVerticalMode;

		[NonSerialized]
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UIHand holdingHand;

		[NonSerialized]
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UIHand pointingHand;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<VirtualButtonCallbackParameters> gridButtonParameterses;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TabletScreen activeScreen;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<TabletScreen> tabletScreens;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private InputSystem inputSys;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int pagesCount;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool isPinned;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 basePosition;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 baseDirection;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool usingCustomPagination;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C224", Offset = "0xA3C224")]
		private UserInterfaceController <UiController>k__BackingField;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C234", Offset = "0xA3C234")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private CircularLayoutElement[] rimButtons;

		[Token(Token = "0x4000F65")]
		private const float ANDROID_MOVEMENT_SPEED = 0.125f;

		[Token(Token = "0x4000F66")]
		private const float MOVEMENT_SPEED = 9f;

		[Token(Token = "0x170001C8")]
		public TabletScreen ActiveScreen
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xDD3DA0", Offset = "0xDD3DA0", VA = "0xDD3DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public UserInterfaceController UiController
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xDD3DA8", Offset = "0xDD3DA8", VA = "0xDD3DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA429DC", Offset = "0xA429DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xDD3DB0", Offset = "0xDD3DB0", VA = "0xDD3DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA429EC", Offset = "0xA429EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public bool IsVisible
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xDD3DB8", Offset = "0xDD3DB8", VA = "0xDD3DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA429FC", Offset = "0xA429FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xDD3DC0", Offset = "0xDD3DC0", VA = "0xDD3DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42A0C", Offset = "0xA42A0C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action AvailableButtonsChangedEvent
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xDD3DCC", Offset = "0xDD3DCC", VA = "0xDD3DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42A1C", Offset = "0xA42A1C")]
			add
			{
			}
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xDD3E74", Offset = "0xDD3E74", VA = "0xDD3E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42A2C", Offset = "0xA42A2C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xDD3F1C", Offset = "0xDD3F1C", VA = "0xDD3F1C")]
		public void Initialize(UserInterfaceController controller)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xDD4AC4", Offset = "0xDD4AC4", VA = "0xDD4AC4")]
		public void AssignSubsystems(Subsystems subSystems)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xDD4B50", Offset = "0xDD4B50", VA = "0xDD4B50")]
		public void AssignSceneSystemToSingleScreens(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xDD4D44", Offset = "0xDD4D44", VA = "0xDD4D44")]
		public void SetHands(UIHand holdingHand, UIHand pointingHand, bool swapped)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xDD4F38", Offset = "0xDD4F38", VA = "0xDD4F38")]
		public void PrepareToSceneChange()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xDD49B0", Offset = "0xDD49B0", VA = "0xDD49B0")]
		private void RefreshRimButtons()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xDD4F78", Offset = "0xDD4F78", VA = "0xDD4F78")]
		private void TogglePinState()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xDD4FCC", Offset = "0xDD4FCC", VA = "0xDD4FCC")]
		private void HandleDevButton()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xDD4868", Offset = "0xDD4868", VA = "0xDD4868")]
		private void RefreshMoneyLabel()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xDD4FD4", Offset = "0xDD4FD4", VA = "0xDD4FD4")]
		private void HandleBackButton()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xDD5010", Offset = "0xDD5010", VA = "0xDD5010")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xDD5554", Offset = "0xDD5554", VA = "0xDD5554")]
		private static float GetMovementSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xDD53F8", Offset = "0xDD53F8", VA = "0xDD53F8")]
		private void UpdatePositioningData()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xDD555C", Offset = "0xDD555C", VA = "0xDD555C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42A3C", Offset = "0xA42A3C")]
		public IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xDD4650", Offset = "0xDD4650", VA = "0xDD4650")]
		public void ShowScreen(TabletScreen newScreen)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xDD4488", Offset = "0xDD4488", VA = "0xDD4488")]
		public void SetVisible(bool value)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xDD58C0", Offset = "0xDD58C0", VA = "0xDD58C0")]
		public void ToggleVisible()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xDD59F4", Offset = "0xDD59F4", VA = "0xDD59F4")]
		private void SetInvisible()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xDD59FC", Offset = "0xDD59FC", VA = "0xDD59FC")]
		private void GameObjectSetActiveFalse()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xDD5618", Offset = "0xDD5618", VA = "0xDD5618")]
		public void ClearGridButtons()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xDD5B50", Offset = "0xDD5B50", VA = "0xDD5B50")]
		public void LoadGridObjects(List<VirtualButtonCallbackParameters> callbackParameters)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xDD5E9C", Offset = "0xDD5E9C", VA = "0xDD5E9C")]
		public void SetCustomPagination(int pageCount)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xDD5C18", Offset = "0xDD5C18", VA = "0xDD5C18")]
		private void LoadCurrentPage()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xDD60CC", Offset = "0xDD60CC", VA = "0xDD60CC")]
		private void HandlePageChanged(int page)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xDD6138", Offset = "0xDD6138", VA = "0xDD6138")]
		public Tablet()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public abstract class TabletScreen : MonoBehaviour
	{
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355EC", Offset = "0xA355EC")]
		private sealed class <GetVirtualButtons>d__23 : IEnumerable<VirtualButton>, IEnumerable, IEnumerator<VirtualButton>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VirtualButton <>2__current;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700033F")]
			private VirtualButton System.Collections.Generic.IEnumerator<VirtualButton>.Current
			{
				[Token(Token = "0x6001AB3")]
				[Address(RVA = "0xDD69E4", Offset = "0xDD69E4", VA = "0xDD69E4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000340")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB5")]
				[Address(RVA = "0xDD6A50", Offset = "0xDD6A50", VA = "0xDD6A50", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xDD6988", Offset = "0xDD6988", VA = "0xDD6988")]
			[DebuggerHidden]
			public <GetVirtualButtons>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xDD69C8", Offset = "0xDD69C8", VA = "0xDD69C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0xDD69CC", Offset = "0xDD69CC", VA = "0xDD69CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xDD69EC", Offset = "0xDD69EC", VA = "0xDD69EC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xDD6A58", Offset = "0xDD6A58", VA = "0xDD6A58", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<VirtualButton> System.Collections.Generic.IEnumerable<VirtualButton>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xDD6AF0", Offset = "0xDD6AF0", VA = "0xDD6AF0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Tablet tablet;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C254", Offset = "0xA3C254")]
		private int <ActivePage>k__BackingField;

		[Token(Token = "0x170001CB")]
		public abstract TabletScreen BackScreen
		{
			[Token(Token = "0x600130C")]
			get;
		}

		[Token(Token = "0x170001CC")]
		public virtual bool FlatDisplay
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xDD688C", Offset = "0xDD688C", VA = "0xDD688C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public virtual bool ShowBottomBar
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xDD6894", Offset = "0xDD6894", VA = "0xDD6894", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public virtual bool IsGridPage
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xDD689C", Offset = "0xDD689C", VA = "0xDD689C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CF")]
		public virtual bool ShowScreenTitle
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xDD68A4", Offset = "0xDD68A4", VA = "0xDD68A4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		public virtual string ScreenTitle
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xDD68AC", Offset = "0xDD68AC", VA = "0xDD68AC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public int ActivePage
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xDD68F4", Offset = "0xDD68F4", VA = "0xDD68F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42AA0", Offset = "0xA42AA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xDD68FC", Offset = "0xDD68FC", VA = "0xDD68FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42AB0", Offset = "0xA42AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xDD6904", Offset = "0xDD6904", VA = "0xDD6904", Slot = "10")]
		public virtual void SetActivePage(int page)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xDD460C", Offset = "0xDD460C", VA = "0xDD460C")]
		public void Initialize(Tablet owner)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xDD690C", Offset = "0xDD690C", VA = "0xDD690C", Slot = "11")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xDD6910", Offset = "0xDD6910", VA = "0xDD6910", Slot = "12")]
		public virtual void OnShow()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xDD6914", Offset = "0xDD6914", VA = "0xDD6914", Slot = "13")]
		public virtual void OnHide()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xDD461C", Offset = "0xDD461C", VA = "0xDD461C")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xDD6918", Offset = "0xDD6918", VA = "0xDD6918", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42AC0", Offset = "0xA42AC0")]
		public virtual IEnumerable<VirtualButton> GetVirtualButtons()
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xDD69C0", Offset = "0xDD69C0", VA = "0xDD69C0")]
		protected TabletScreen()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class UIHand
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VirtualButton winnerButton;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VirtualButton> targetableButtons;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputAction grip;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputAction trigger;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform controllerTransform;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform watchTransform;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform watchLocalUpDirection;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform fingertip;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer distanceGrabRay;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public _Code.VR.InputSystem.Hand hand;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool readyForFingerpress;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Camera centralEyeCamera;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string viewSpaceLabel;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string visibleLabel;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InputSystem inputSystem;

		[Token(Token = "0x14000033")]
		public event Action<VirtualButton, UIHand> VirtualButtonTriggeredEvent
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xDD6AF4", Offset = "0xDD6AF4", VA = "0xDD6AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42B24", Offset = "0xA42B24")]
			add
			{
			}
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xDD6B98", Offset = "0xDD6B98", VA = "0xDD6B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42B34", Offset = "0xA42B34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<Vector3> PointInSpaceActivatedEvent
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xDD6C3C", Offset = "0xDD6C3C", VA = "0xDD6C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42B44", Offset = "0xA42B44")]
			add
			{
			}
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xDD6CE0", Offset = "0xDD6CE0", VA = "0xDD6CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42B54", Offset = "0xA42B54")]
			remove
			{
			}
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xDD6D84", Offset = "0xDD6D84", VA = "0xDD6D84")]
		public UIHand(InputSystem inputSystem, VRObjects vrObjects, _Code.VR.InputSystem.Hand hand, Camera centralEyeCamera, Transform watchTransform, Transform upDir)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xDD710C", Offset = "0xDD710C", VA = "0xDD710C")]
		public void FindClosestButton()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xDD7450", Offset = "0xDD7450", VA = "0xDD7450")]
		private void TriggerButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xDD7758", Offset = "0xDD7758", VA = "0xDD7758")]
		private void HandleTriggerDown(GeneralArgs obj)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xDD77E4", Offset = "0xDD77E4", VA = "0xDD77E4")]
		private void HandleTriggerPressed(GeneralArgs obj)
		{
		}
	}
	[Token(Token = "0x2000265")]
	[ExecuteAlways]
	public class UIVariableWidthController : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject myGameObject;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float length;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer myRenderer;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lengthID;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro textToMatch;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xDD789C", Offset = "0xDD789C", VA = "0xDD789C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xDD5730", Offset = "0xDD5730", VA = "0xDD5730")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xDD78A0", Offset = "0xDD78A0", VA = "0xDD78A0")]
		private void RefreshPropBlock()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xDD5750", Offset = "0xDD5750", VA = "0xDD5750")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA42B64", Offset = "0xA42B64")]
		public void SetLengthAccordingToText()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xDD79C0", Offset = "0xDD79C0", VA = "0xDD79C0")]
		public UIVariableWidthController()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class UserInterfaceController : MonoBehaviour, IInitialise, IInitialiseFirst, IRequirePlayerSubsystems, IRequireVRObjects, IRequireSceneSystems
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tablet tablet;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FontSystem fontSystem;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C2B4", Offset = "0xA3C2B4")]
		private ItemSceneSystem <ItemsSys>k__BackingField;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuestAndMascotPositioner questAndMascotPositioner;

		[NonSerialized]
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputSystem inputSys;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HandInteractions interactor;

		[NonSerialized]
		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRObjects vrObjects;

		[NonSerialized]
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Subsystems playerSubsystems;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform leftWatchButton;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform rightWatchButton;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MeshRenderer rightWatchButtonRenderer;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MeshRenderer leftWatchButtonRenderer;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color questButtonColor;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color tabletButtonColor;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform leftWatchUpDirection;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform rightWatchUpDirection;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Tablet tabletPrefab;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UIHand leftHand;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private UIHand rightHand;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material tabletButtonMaterialInstance;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material questButtonMaterialInstance;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool initialised;

		[Token(Token = "0x170001D2")]
		public Tablet Tablet
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xDD7A34", Offset = "0xDD7A34", VA = "0xDD7A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public FontSystem FontSystem
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xDD7A3C", Offset = "0xDD7A3C", VA = "0xDD7A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public ItemSceneSystem ItemsSys
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xDD7A44", Offset = "0xDD7A44", VA = "0xDD7A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42B9C", Offset = "0xA42B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xDD7A4C", Offset = "0xDD7A4C", VA = "0xDD7A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BAC", Offset = "0xA42BAC")]
			private set
			{
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xDD7A54", Offset = "0xDD7A54", VA = "0xDD7A54", Slot = "6")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xDD7A80", Offset = "0xDD7A80", VA = "0xDD7A80", Slot = "7")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xDD7A88", Offset = "0xDD7A88", VA = "0xDD7A88", Slot = "8")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xDD7B3C", Offset = "0xDD7B3C", VA = "0xDD7B3C", Slot = "5")]
		public void InitialiseFirst()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xDD7BD0", Offset = "0xDD7BD0", VA = "0xDD7BD0", Slot = "4")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xDD80D8", Offset = "0xDD80D8", VA = "0xDD80D8")]
		private void CreateWatchButtonInstances()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xDD812C", Offset = "0xDD812C", VA = "0xDD812C")]
		private void SetupHands()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xDD82DC", Offset = "0xDD82DC", VA = "0xDD82DC")]
		private void HandleLeftWrist()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xDD83F8", Offset = "0xDD83F8", VA = "0xDD83F8")]
		private void HandleRightWrist()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xDD827C", Offset = "0xDD827C", VA = "0xDD827C")]
		private void UpdateAvailableButtons()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xDD8514", Offset = "0xDD8514", VA = "0xDD8514")]
		private void UpdateAvailableButtons(UIHand hand, VirtualButton wristButton)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xDD86DC", Offset = "0xDD86DC", VA = "0xDD86DC")]
		public void AddTemporalAvailableButton(_Code.VR.InputSystem.Hand hand, VirtualButton button)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xDD87AC", Offset = "0xDD87AC", VA = "0xDD87AC")]
		public void RemoveTemporalAvailableButton(_Code.VR.InputSystem.Hand hand, VirtualButton button)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xDD887C", Offset = "0xDD887C", VA = "0xDD887C")]
		private void Update()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xDD88C0", Offset = "0xDD88C0", VA = "0xDD88C0")]
		private void HandleVirtualButtonTriggered(VirtualButton button, UIHand uiHand)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xDD88E0", Offset = "0xDD88E0", VA = "0xDD88E0")]
		private void HandlePointInSpaceActivated(Vector3 point)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xDD8608", Offset = "0xDD8608", VA = "0xDD8608")]
		private void StopTrackingUIButtons(UIHand hand)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xDD8AC4", Offset = "0xDD8AC4", VA = "0xDD8AC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xDD8BD0", Offset = "0xDD8BD0", VA = "0xDD8BD0")]
		public UserInterfaceController()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class VirtualButtonCallbackParameters
	{
		[Token(Token = "0x2000438")]
		public class ButtonDecoration
		{
			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public readonly bool removeOnHover;

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xDD9048", Offset = "0xDD9048", VA = "0xDD9048")]
			public ButtonDecoration()
			{
			}

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xDD9184", Offset = "0xDD9184", VA = "0xDD9184")]
			public ButtonDecoration(bool removeOnHover)
			{
			}
		}

		[Token(Token = "0x2000439")]
		public class ColorButtonDecoration : ButtonDecoration
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Color color;

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xDD9070", Offset = "0xDD9070", VA = "0xDD9070")]
			public ColorButtonDecoration()
			{
			}

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xDD9260", Offset = "0xDD9260", VA = "0xDD9260")]
			public ColorButtonDecoration(Color color, bool removeOnHover)
			{
			}
		}

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C344", Offset = "0xA3C344")]
		private readonly Action <OnClickAction>k__BackingField;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C354", Offset = "0xA3C354")]
		private Action <OnHoverAction>k__BackingField;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C364", Offset = "0xA3C364")]
		private readonly string <Title>k__BackingField;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C374", Offset = "0xA3C374")]
		private readonly Sprite <Sprite>k__BackingField;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C384", Offset = "0xA3C384")]
		private ButtonDecoration <Highlight>k__BackingField;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C394", Offset = "0xA3C394")]
		private ButtonDecoration <DesaturateImage>k__BackingField;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C3A4", Offset = "0xA3C3A4")]
		private ColorButtonDecoration <ChangeColor>k__BackingField;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C3B4", Offset = "0xA3C3B4")]
		private readonly bool <HasTitle>k__BackingField;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C3C4", Offset = "0xA3C3C4")]
		private readonly bool <HasSprite>k__BackingField;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C3D4", Offset = "0xA3C3D4")]
		private bool <HasOnHoverAction>k__BackingField;

		[Token(Token = "0x170001D5")]
		public Action OnClickAction
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xDD8F0C", Offset = "0xDD8F0C", VA = "0xDD8F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BBC", Offset = "0xA42BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public Action OnHoverAction
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xDD8F14", Offset = "0xDD8F14", VA = "0xDD8F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BCC", Offset = "0xA42BCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xDD8F1C", Offset = "0xDD8F1C", VA = "0xDD8F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BDC", Offset = "0xA42BDC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public string Title
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xDD8F24", Offset = "0xDD8F24", VA = "0xDD8F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BEC", Offset = "0xA42BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public Sprite Sprite
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xDD8F2C", Offset = "0xDD8F2C", VA = "0xDD8F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42BFC", Offset = "0xA42BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public ButtonDecoration Highlight
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xDD8F34", Offset = "0xDD8F34", VA = "0xDD8F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C0C", Offset = "0xA42C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xDD8F3C", Offset = "0xDD8F3C", VA = "0xDD8F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C1C", Offset = "0xA42C1C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public ButtonDecoration DesaturateImage
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xDD8F44", Offset = "0xDD8F44", VA = "0xDD8F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C2C", Offset = "0xA42C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xDD8F4C", Offset = "0xDD8F4C", VA = "0xDD8F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C3C", Offset = "0xA42C3C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public ColorButtonDecoration ChangeColor
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xDD8F54", Offset = "0xDD8F54", VA = "0xDD8F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C4C", Offset = "0xA42C4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xDD8F5C", Offset = "0xDD8F5C", VA = "0xDD8F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C5C", Offset = "0xA42C5C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public bool HasTitle
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xDD8F64", Offset = "0xDD8F64", VA = "0xDD8F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C6C", Offset = "0xA42C6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public bool HasSprite
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xDD8F6C", Offset = "0xDD8F6C", VA = "0xDD8F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C7C", Offset = "0xA42C7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		public bool HasOnHoverAction
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xDD8F74", Offset = "0xDD8F74", VA = "0xDD8F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C8C", Offset = "0xA42C8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xDD8F7C", Offset = "0xDD8F7C", VA = "0xDD8F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42C9C", Offset = "0xA42C9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xDD8F88", Offset = "0xDD8F88", VA = "0xDD8F88")]
		public VirtualButtonCallbackParameters(Action onClickAction)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xDD9098", Offset = "0xDD9098", VA = "0xDD9098")]
		public VirtualButtonCallbackParameters(Action onClickAction, string title)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xDD90C8", Offset = "0xDD90C8", VA = "0xDD90C8")]
		public VirtualButtonCallbackParameters(Action onClickAction, Sprite sprite)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xDD90F8", Offset = "0xDD90F8", VA = "0xDD90F8")]
		public void SetOnHoverAction(Action onHoverAction)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xDD9108", Offset = "0xDD9108", VA = "0xDD9108")]
		public void EnableHighlight(bool removeOnHover)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xDD91BC", Offset = "0xDD91BC", VA = "0xDD91BC")]
		public void EnableChangeColor(Color color, bool removeOnHover)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xDD92C0", Offset = "0xDD92C0", VA = "0xDD92C0")]
		public void EnableImageDesaturation(bool removeOnHover)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class VirtualSlider : MonoBehaviour
	{
		[Token(Token = "0x200043A")]
		public enum Mode
		{
			[Token(Token = "0x4001671")]
			Horizontal,
			[Token(Token = "0x4001672")]
			Vertical
		}

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer thumb;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject track;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bounds interactionBounds;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mode mode;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaterialPropertyBlock thumbBlock;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool operational;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int pageCount;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int page;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lengthID;

		[Token(Token = "0x170001DF")]
		private int Axis
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xDD933C", Offset = "0xDD933C", VA = "0xDD933C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E0")]
		private float boundsMin
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0xDD9344", Offset = "0xDD9344", VA = "0xDD9344")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E1")]
		private float boundsMax
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0xDD9374", Offset = "0xDD9374", VA = "0xDD9374")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E2")]
		private float maxThumbScale
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0xDD93A4", Offset = "0xDD93A4", VA = "0xDD93A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<int> PageChangedEvent
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0xDD490C", Offset = "0xDD490C", VA = "0xDD490C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42CAC", Offset = "0xA42CAC")]
			add
			{
			}
			[Token(Token = "0x600135D")]
			[Address(RVA = "0xDD93D4", Offset = "0xDD93D4", VA = "0xDD93D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42CBC", Offset = "0xA42CBC")]
			remove
			{
			}
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xDD9478", Offset = "0xDD9478", VA = "0xDD9478")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xDD5A24", Offset = "0xDD5A24", VA = "0xDD5A24")]
		public void SetPageCount(int newPageCount)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xDD5EC0", Offset = "0xDD5EC0", VA = "0xDD5EC0")]
		public void SetPage(int page)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xDD8964", Offset = "0xDD8964", VA = "0xDD8964")]
		public void ActivateAtPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xDD94E0", Offset = "0xDD94E0", VA = "0xDD94E0")]
		public VirtualSlider()
		{
		}
	}
}
namespace _Code.ItemVariants
{
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA340EC", Offset = "0xA340EC")]
	public class ColorPreset : ScriptableObject
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xE20454", Offset = "0xE20454", VA = "0xE20454")]
		public ColorPreset()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA34138", Offset = "0xA34138")]
	public class VariantColorSetup : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200043B")]
		public struct ItemVariant
		{
			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorVariant[] slots;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C9BC", Offset = "0xA3C9BC")]
			public ColorPreset[] uiMarkerColors;
		}

		[Serializable]
		[Token(Token = "0x200043C")]
		public struct ColorVariant
		{
			[Token(Token = "0x2000455")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3571C", Offset = "0xA3571C")]
			private sealed class <>c__DisplayClass4_0
			{
				[Token(Token = "0x40016D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Color color;

				[Token(Token = "0x6001B0F")]
				[Address(RVA = "0xE20EF8", Offset = "0xE20EF8", VA = "0xE20EF8")]
				public <>c__DisplayClass4_0()
				{
				}

				[Token(Token = "0x6001B10")]
				[Address(RVA = "0xE20F0C", Offset = "0xE20F0C", VA = "0xE20F0C")]
				internal bool <.ctor>b__0(ColorPreset x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorPreset preset;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3C9F4", Offset = "0xA3C9F4")]
			public float atlasBlend;

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xAEEF90", Offset = "0xAEEF90", VA = "0xAEEF90")]
			[AttributeAttribute(Name = "ContextMenu", RVA = "0xA47598", Offset = "0xA47598")]
			private void CreatePreset()
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xAEEF94", Offset = "0xAEEF94", VA = "0xAEEF94")]
			public ColorVariant(Color color, float blend)
			{
			}

			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0xAEEF9C", Offset = "0xAEEF9C", VA = "0xAEEF9C")]
			public void SetPreviewColor(Color color)
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA355FC", Offset = "0xA355FC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color color;

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xE20D74", Offset = "0xE20D74", VA = "0xE20D74")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xE20D84", Offset = "0xE20D84", VA = "0xE20D84")]
			internal bool <GetPresetFor>b__0(ColorPreset x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C3F4", Offset = "0xA3C3F4")]
		public ItemVariant[] variants;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C42C", Offset = "0xA3C42C")]
		[SerializeField]
		private int startIndex;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int endIndex;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorPreset[] replaceThis;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ColorPreset[] withThis;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE2045C", Offset = "0xE2045C", VA = "0xE2045C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE205B4", Offset = "0xE205B4", VA = "0xE205B4")]
		public void DuplicateVariants()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE20B10", Offset = "0xE20B10", VA = "0xE20B10")]
		public void FillMissingPresets()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xE20C74", Offset = "0xE20C74", VA = "0xE20C74")]
		private ColorPreset GetPresetFor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xE20D7C", Offset = "0xE20D7C", VA = "0xE20D7C")]
		public VariantColorSetup()
		{
		}
	}
}
namespace _Code.Audio
{
	[Token(Token = "0x200026B")]
	public class Radio : Interaction
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ClickInteraction clickInteraction;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xC1B6C8", Offset = "0xC1B6C8", VA = "0xC1B6C8", Slot = "4")]
		public override void Initialise(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems playerSubsystems)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xC1B6E8", Offset = "0xC1B6E8", VA = "0xC1B6E8", Slot = "5")]
		public override void BreakInteraction()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xC1B6EC", Offset = "0xC1B6EC", VA = "0xC1B6EC")]
		public Radio()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class DrumKit : MusicalInstrumentSoundTrigger
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip kickClip;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem ps;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<SpeedTracker> speedTrackers;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DrumKitPlaySound[] playSounds;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subsystems subsystems;

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC1A7F8", Offset = "0xC1A7F8", VA = "0xC1A7F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC1A86C", Offset = "0xC1A86C", VA = "0xC1A86C", Slot = "4")]
		public override void Init(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC1A904", Offset = "0xC1A904", VA = "0xC1A904")]
		public void PlayKickSound()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xC1A928", Offset = "0xC1A928", VA = "0xC1A928")]
		private void CollectRefs()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC1A980", Offset = "0xC1A980", VA = "0xC1A980")]
		public bool TryGetSpeedTracker(Collider trackerCollider, out SpeedTracker tracker)
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC1AB2C", Offset = "0xC1AB2C", VA = "0xC1AB2C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC1AC28", Offset = "0xC1AC28", VA = "0xC1AC28")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC1ACB4", Offset = "0xC1ACB4", VA = "0xC1ACB4")]
		public DrumKit()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class DrumKitPlaySound : MonoBehaviour
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DrumKit DrumKit;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem ps;

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC1AD24", Offset = "0xC1AD24", VA = "0xC1AD24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xC1A864", Offset = "0xC1A864", VA = "0xC1A864")]
		public void Initialize(DrumKit DrumKit, ParticleSystem ps)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC1AE68", Offset = "0xC1AE68", VA = "0xC1AE68")]
		public DrumKitPlaySound()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class GuitarBassPlaySound : MusicalInstrumentSoundTrigger
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] bassclips;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] slapclips;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subsystems subsystems;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float rightHandSpeedSquared;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float leftHandSpeedSquared;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xC1AE70", Offset = "0xC1AE70", VA = "0xC1AE70", Slot = "4")]
		public override void Init(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xC1AEA8", Offset = "0xC1AEA8", VA = "0xC1AEA8")]
		private void Update()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC1AF4C", Offset = "0xC1AF4C", VA = "0xC1AF4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xC1B058", Offset = "0xC1B058", VA = "0xC1B058")]
		private void PlaySoundRightHand()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xC1B100", Offset = "0xC1B100", VA = "0xC1B100")]
		private void PlaySoundLeftHand()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xC1B204", Offset = "0xC1B204", VA = "0xC1B204")]
		private AudioClip GetBassNote()
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC1B1A8", Offset = "0xC1B1A8", VA = "0xC1B1A8")]
		private AudioClip GetSlapNote()
		{
			return null;
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC1B260", Offset = "0xC1B260", VA = "0xC1B260")]
		public GuitarBassPlaySound()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class GuitarElectricPlaySound : MusicalInstrumentSoundTrigger
	{
		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Subsystems subsystems;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xC1B268", Offset = "0xC1B268", VA = "0xC1B268", Slot = "4")]
		public override void Init(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC1B2A0", Offset = "0xC1B2A0", VA = "0xC1B2A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC1B398", Offset = "0xC1B398", VA = "0xC1B398")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC1B42C", Offset = "0xC1B42C", VA = "0xC1B42C")]
		private AudioClip GetChord()
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC1B488", Offset = "0xC1B488", VA = "0xC1B488")]
		public GuitarElectricPlaySound()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class GuitarPlaySound : MusicalInstrumentSoundTrigger
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private short index;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRObjects vrObjects;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subsystems subsystems;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xC1B490", Offset = "0xC1B490", VA = "0xC1B490", Slot = "4")]
		public override void Init(VRObjects vrObjects, SceneSystems sceneSystems, Subsystems subsystems, CollisionDetectionConfiguration config)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xC1B4C8", Offset = "0xC1B4C8", VA = "0xC1B4C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xC1B5C0", Offset = "0xC1B5C0", VA = "0xC1B5C0")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xC1B674", Offset = "0xC1B674", VA = "0xC1B674")]
		private AudioClip GetChord()
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xC1B6C0", Offset = "0xC1B6C0", VA = "0xC1B6C0")]
		public GuitarPlaySound()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class SpeedTracker : MonoBehaviour
	{
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Item item;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider _thisCollider;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _speed;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isPickedUp;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastposition;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DrumKit kit;

		[Token(Token = "0x170001E3")]
		public Item Item
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0xC1B6F4", Offset = "0xC1B6F4", VA = "0xC1B6F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public Collider Collider
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0xC1B6FC", Offset = "0xC1B6FC", VA = "0xC1B6FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public float Speed
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xC1B704", Offset = "0xC1B704", VA = "0xC1B704")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public bool IsPickdUp
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xC1B70C", Offset = "0xC1B70C", VA = "0xC1B70C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xC1B714", Offset = "0xC1B714", VA = "0xC1B714")]
		private void Start()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xC1B814", Offset = "0xC1B814", VA = "0xC1B814")]
		private void HandleTriggerDown(GeneralArgs obj)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC1AC08", Offset = "0xC1AC08", VA = "0xC1AC08")]
		public void SetKickEnabled(DrumKit kit, bool kickEnabled)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xC1B8B8", Offset = "0xC1B8B8", VA = "0xC1B8B8")]
		private void HandlePutDown(Item _)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xC1B8CC", Offset = "0xC1B8CC", VA = "0xC1B8CC")]
		private void HandlePickedUp(Item _)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xC1B8D8", Offset = "0xC1B8D8", VA = "0xC1B8D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xC1BA20", Offset = "0xC1BA20", VA = "0xC1BA20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xC1BAFC", Offset = "0xC1BAFC", VA = "0xC1BAFC")]
		public SpeedTracker()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class Xylophone : MonoBehaviour
	{
		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XylophonePlaySound[] buttons;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem ps;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<SpeedTracker> speedTrackers;

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xC1BB10", Offset = "0xC1BB10", VA = "0xC1BB10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xC1BB84", Offset = "0xC1BB84", VA = "0xC1BB84")]
		public void PlaySound(AudioClip clip, Vector3 position, float speed)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC1BC14", Offset = "0xC1BC14", VA = "0xC1BC14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC1BC1C", Offset = "0xC1BC1C", VA = "0xC1BC1C")]
		public bool TryGetSpeedTracker(Collider trackerCollider, out SpeedTracker tracker)
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC1BDC8", Offset = "0xC1BDC8", VA = "0xC1BDC8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC1BEA8", Offset = "0xC1BEA8", VA = "0xC1BEA8")]
		public Xylophone()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class XylophonePlaySound : MonoBehaviour
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Xylophone xylophone;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem ps;

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC1BF18", Offset = "0xC1BF18", VA = "0xC1BF18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC1BB7C", Offset = "0xC1BB7C", VA = "0xC1BB7C")]
		public void Initialize(Xylophone xylophone, ParticleSystem ps)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC1C060", Offset = "0xC1C060", VA = "0xC1C060")]
		public XylophonePlaySound()
		{
		}
	}
}
namespace _Code.Attributes
{
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA34184", Offset = "0xA34184")]
	public sealed class ButtonAttribute : Attribute
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int height;

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xC1A7B4", Offset = "0xC1A7B4", VA = "0xC1A7B4")]
		public ButtonAttribute()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xC1A7C4", Offset = "0xC1A7C4", VA = "0xC1A7C4")]
		public ButtonAttribute(int height)
		{
		}
	}
}
namespace _Code.Appraisers
{
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA34198", Offset = "0xA34198")]
	public class Appraiser : ScriptableObject
	{
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3560C", Offset = "0xA3560C")]
		private sealed class <GetProposition>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Appraiser <>4__this;

			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AppraiserData data;

			[Token(Token = "0x17000341")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AC4")]
				[Address(RVA = "0xC18D7C", Offset = "0xC18D7C", VA = "0xC18D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC6")]
				[Address(RVA = "0xC18DE8", Offset = "0xC18DE8", VA = "0xC18DE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0xC17CEC", Offset = "0xC17CEC", VA = "0xC17CEC")]
			[DebuggerHidden]
			public <GetProposition>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xC18480", Offset = "0xC18480", VA = "0xC18480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xC18484", Offset = "0xC18484", VA = "0xC18484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xC18D84", Offset = "0xC18D84", VA = "0xC18D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3561C", Offset = "0xA3561C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemInRoomRequirement itemInRoomRequirement;

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xC17EC4", Offset = "0xC17EC4", VA = "0xC17EC4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xC17ECC", Offset = "0xC17ECC", VA = "0xC17ECC")]
			internal bool <EvaluateSpecificItemsExistence>b__0(KeyValuePair<int, int> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3562C", Offset = "0xA3562C")]
		private sealed class <EvaluateSpecificItemsExistence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Appraiser <>4__this;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AppraiserData data;

			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Dictionary<int, int> <reqToNumberOfMatches>5__2;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ItemInRoomRequirement[] <>7__wrap2;

			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <>7__wrap3;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ACC")]
				[Address(RVA = "0xC1840C", Offset = "0xC1840C", VA = "0xC1840C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ACE")]
				[Address(RVA = "0xC18478", Offset = "0xC18478", VA = "0xC18478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xC17E98", Offset = "0xC17E98", VA = "0xC17E98")]
			[DebuggerHidden]
			public <EvaluateSpecificItemsExistence>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xC17F38", Offset = "0xC17F38", VA = "0xC17F38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xC17F3C", Offset = "0xC17F3C", VA = "0xC17F3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xC18414", Offset = "0xC18414", VA = "0xC18414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private _Code.Achievement.Achievement achievement;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool logAuction;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C618", Offset = "0xA3C618")]
		private float <Proposition>k__BackingField;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite photo;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected AppraiserTargetHouse targetHouse;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected AppraiserPreferencesAndValues preferencesAndValues;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected ItemInRoomRequirement[] itemsInRoomRequirements;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float dirtExistenceWeight;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected float trashExistenceWeight;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected PaintingConfiguration paintingConfiguration;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float moneyForAdditionalItems;

		[Token(Token = "0x170001E7")]
		public _Code.Achievement.Achievement Achievement
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xC17A60", Offset = "0xC17A60", VA = "0xC17A60")]
			get
			{
				return default(_Code.Achievement.Achievement);
			}
		}

		[Token(Token = "0x170001E8")]
		public float Proposition
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xC17A68", Offset = "0xC17A68", VA = "0xC17A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42CCC", Offset = "0xA42CCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xC17A70", Offset = "0xC17A70", VA = "0xC17A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42CDC", Offset = "0xA42CDC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public Sprite Photo
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xC17A78", Offset = "0xC17A78", VA = "0xC17A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xC17A80", Offset = "0xC17A80", VA = "0xC17A80")]
		private void ShowImage()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC17BBC", Offset = "0xC17BBC", VA = "0xC17BBC")]
		public void Initialise(PaintingConfiguration paintingConfig)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC17C58", Offset = "0xC17C58", VA = "0xC17C58", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42CEC", Offset = "0xA42CEC")]
		public virtual IEnumerator GetProposition(AppraiserData data)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC17D18", Offset = "0xC17D18", VA = "0xC17D18")]
		protected float GetBaseBid(AppraiserData data)
		{
			return default(float);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC17E04", Offset = "0xC17E04", VA = "0xC17E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42D50", Offset = "0xA42D50")]
		protected IEnumerator EvaluateSpecificItemsExistence(AppraiserData data)
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC0ECB0", Offset = "0xC0ECB0", VA = "0xC0ECB0")]
		public Appraiser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	public struct AppraiserTargetHouse
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HouseAsset house;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float maxBid;
	}
	[Serializable]
	[Token(Token = "0x2000277")]
	public struct AppraiserData
	{
		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HouseAsset houseAsset;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HouseState houseState;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, List<Item>> roomIndexToItems;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Wall wall;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubWall[] subWalls;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float trashRemovedPercentage;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dirtCleanedPercentage;
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class AppraiserPreferencesAndValues
	{
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3563C", Offset = "0xA3563C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<int, bool> <>9__0;

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xC1907C", Offset = "0xC1907C", VA = "0xC1907C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xC19084", Offset = "0xC19084", VA = "0xC19084")]
			internal bool <GetRoomRequirementsPayment>b__0(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3564C", Offset = "0xA3564C")]
		private sealed class <GetRoomRequirementsPayment>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppraiserPreferencesAndValues <>4__this;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<int, List<Item>> itemDict;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <requirementsMet>5__2;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__3;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Item>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AD5")]
				[Address(RVA = "0xC19A88", Offset = "0xC19A88", VA = "0xC19A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD7")]
				[Address(RVA = "0xC19AF4", Offset = "0xC19AF4", VA = "0xC19AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xC1901C", Offset = "0xC1901C", VA = "0xC1901C")]
			[DebuggerHidden]
			public <GetRoomRequirementsPayment>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xC19094", Offset = "0xC19094", VA = "0xC19094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xC19108", Offset = "0xC19108", VA = "0xC19108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xC190B0", Offset = "0xC190B0", VA = "0xC190B0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xC19A90", Offset = "0xC19A90", VA = "0xC19A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3565C", Offset = "0xA3565C")]
		private sealed class <GetWallSpecPercentage>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppraiserPreferencesAndValues <>4__this;

			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Wall wall;

			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SubWall[] subWalls;

			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PaintingConfiguration paintingConfiguration;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <requirementsMet>5__2;

			[Token(Token = "0x4001695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WallRequirement[] <>7__wrap2;

			[Token(Token = "0x4001696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap3;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ADB")]
				[Address(RVA = "0xC1A05C", Offset = "0xC1A05C", VA = "0xC1A05C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ADD")]
				[Address(RVA = "0xC1A0C8", Offset = "0xC1A0C8", VA = "0xC1A0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xC19048", Offset = "0xC19048", VA = "0xC19048")]
			[DebuggerHidden]
			public <GetWallSpecPercentage>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xC19AFC", Offset = "0xC19AFC", VA = "0xC19AFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xC19B00", Offset = "0xC19B00", VA = "0xC19B00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xC1A064", Offset = "0xC1A064", VA = "0xC1A064", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxBid;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C688", Offset = "0xA3C688")]
		private float <Penalty>k__BackingField;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C698", Offset = "0xA3C698")]
		private float <MaxPenalty>k__BackingField;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RoomRequirement[] roomRequirements;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WallRequirement[] wallRequirements;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, List<int>> roomIndexToRequirement;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C6C8", Offset = "0xA3C6C8")]
		private float <Percent>k__BackingField;

		[Token(Token = "0x170001EA")]
		public float Penalty
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xC18DF0", Offset = "0xC18DF0", VA = "0xC18DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42DB4", Offset = "0xA42DB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xC18DF8", Offset = "0xC18DF8", VA = "0xC18DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42DC4", Offset = "0xA42DC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float MaxPenalty
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xC18E00", Offset = "0xC18E00", VA = "0xC18E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42DD4", Offset = "0xA42DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xC18E08", Offset = "0xC18E08", VA = "0xC18E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42DE4", Offset = "0xA42DE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public float Percent
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xC18E10", Offset = "0xC18E10", VA = "0xC18E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42DF4", Offset = "0xA42DF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xC18E18", Offset = "0xC18E18", VA = "0xC18E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42E04", Offset = "0xA42E04")]
			private set
			{
			}
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC17BF0", Offset = "0xC17BF0", VA = "0xC17BF0")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xC18E20", Offset = "0xC18E20", VA = "0xC18E20")]
		private void EvaluateMaxBid()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC18C68", Offset = "0xC18C68", VA = "0xC18C68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42E14", Offset = "0xA42E14")]
		public IEnumerator GetRoomRequirementsPayment(Dictionary<int, List<Item>> itemDict)
		{
			return null;
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC18CE8", Offset = "0xC18CE8", VA = "0xC18CE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42E78", Offset = "0xA42E78")]
		public IEnumerator GetWallSpecPercentage(Wall wall, SubWall[] subWalls, PaintingConfiguration paintingConfiguration)
		{
			return null;
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xC19074", Offset = "0xC19074", VA = "0xC19074")]
		public AppraiserPreferencesAndValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class RoomRequirement
	{
		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numberOfMatchesRequired;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float moneyForRequirement;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool tag;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemTag[] itemTags;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool allTagsAreRequired;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool color;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColorPreset[] colorRequirements;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool category;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ItemCategory categoryRequirement;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool price;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float priceRequirement;

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xC19864", Offset = "0xC19864", VA = "0xC19864")]
		public bool MatchFound(Item item)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xC1A788", Offset = "0xC1A788", VA = "0xC1A788")]
		public RoomRequirement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public class ItemInRoomRequirement
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numberOfItemsInRoom;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numberOfRooms;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Item[] items;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float additionalMoney;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xC1A774", Offset = "0xC1A774", VA = "0xC1A774")]
		public ItemInRoomRequirement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class WallRequirement
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float moneyForRequirement;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int amount;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintingConfiguration.PaletteColor[] colors;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallModificationQuest.WallModQuestType taskType;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WallModificationQuest.WallSurface targetSurface;

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xC19C54", Offset = "0xC19C54", VA = "0xC19C54")]
		public float GetWallsCorrectlyModifiedPercent(Wall wall, SubWall[] subWalls, PaintingConfiguration paintingConfiguration)
		{
			return default(float);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xC1A7A0", Offset = "0xC1A7A0", VA = "0xC1A7A0")]
		public WallRequirement()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class AppraiserSystem : MonoBehaviour, IInitialise, IRequireSceneSystems
	{
		[Serializable]
		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3566C", Offset = "0xA3566C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Appraiser, Sprite> <>9__12_0;

			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xC1A480", Offset = "0xC1A480", VA = "0xC1A480")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xC1A488", Offset = "0xC1A488", VA = "0xC1A488")]
			internal Sprite <GetAppraiserPhotos>b__12_0(Appraiser x)
			{
				return null;
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3567C", Offset = "0xA3567C")]
		private sealed class <CalculateWinningAppraiser>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400169A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400169B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppraiserSystem <>4__this;

			[Token(Token = "0x400169C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HouseAsset houseAsset;

			[Token(Token = "0x400169D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HouseState houseState;

			[Token(Token = "0x400169E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxBid>5__2;

			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Appraiser[] <>7__wrap2;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap3;

			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Appraiser <appraiser>5__5;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AE4")]
				[Address(RVA = "0xC1A700", Offset = "0xC1A700", VA = "0xC1A700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AE6")]
				[Address(RVA = "0xC1A76C", Offset = "0xC1A76C", VA = "0xC1A76C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xC1A32C", Offset = "0xC1A32C", VA = "0xC1A32C")]
			[DebuggerHidden]
			public <CalculateWinningAppraiser>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xC1A4A4", Offset = "0xC1A4A4", VA = "0xC1A4A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xC1A4A8", Offset = "0xC1A4A8", VA = "0xC1A4A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xC1A708", Offset = "0xC1A708", VA = "0xC1A708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C6E8", Offset = "0xA3C6E8")]
		private Appraiser <Buyer>k__BackingField;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AchievementSystem achievementSystem;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Appraiser[] appraisers;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PaintingConfiguration paintingConfig;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Appraiser lastBuyer;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AppraiserData data;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SceneSystems sceneSystems;

		[Token(Token = "0x170001ED")]
		public Appraiser Buyer
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xC1A0D0", Offset = "0xC1A0D0", VA = "0xC1A0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EDC", Offset = "0xA42EDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xC1A0D8", Offset = "0xC1A0D8", VA = "0xC1A0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EEC", Offset = "0xA42EEC")]
			private set
			{
			}
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC1A0E0", Offset = "0xC1A0E0", VA = "0xC1A0E0", Slot = "4")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC1A174", Offset = "0xC1A174", VA = "0xC1A174")]
		public void SaveLastBuyer()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC1A1A4", Offset = "0xC1A1A4", VA = "0xC1A1A4")]
		public Sprite[] GetAppraiserPhotos()
		{
			return null;
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC1A2A4", Offset = "0xC1A2A4", VA = "0xC1A2A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42EFC", Offset = "0xA42EFC")]
		public IEnumerator CalculateWinningAppraiser(HouseAsset houseAsset, HouseState houseState)
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xC1A358", Offset = "0xC1A358", VA = "0xC1A358")]
		private void CollectData(HouseAsset houseAsset, HouseState houseState)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC1A400", Offset = "0xC1A400", VA = "0xC1A400")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC1A404", Offset = "0xC1A404", VA = "0xC1A404")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC1A40C", Offset = "0xC1A40C", VA = "0xC1A40C", Slot = "5")]
		public void AssignRequiredObject(SceneSystems sceneSystems)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC1A414", Offset = "0xC1A414", VA = "0xC1A414")]
		public AppraiserSystem()
		{
		}
	}
}
namespace _Code.TheFirstTutorialScene
{
	[Token(Token = "0x200027D")]
	public class BasicTutorialConfirmationPopup : ConfirmationPopup
	{
		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3568C", Offset = "0xA3568C")]
		private sealed class <UnlockButtonsRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BasicTutorialConfirmationPopup <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEA")]
				[Address(RVA = "0xBF00C8", Offset = "0xBF00C8", VA = "0xBF00C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEC")]
				[Address(RVA = "0xBF0134", Offset = "0xBF0134", VA = "0xBF0134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xBEFD18", Offset = "0xBEFD18", VA = "0xBEFD18")]
			[DebuggerHidden]
			public <UnlockButtonsRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xBEFFCC", Offset = "0xBEFFCC", VA = "0xBEFFCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xBEFFD0", Offset = "0xBEFFD0", VA = "0xBEFFD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xBF00D0", Offset = "0xBF00D0", VA = "0xBF00D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3569C", Offset = "0xA3569C")]
		private sealed class <DisplayCountdownRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BasicTutorialConfirmationPopup <>4__this;

			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string originalConfirmLabel;

			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string originalCancelLabel;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <time>5__2;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF0")]
				[Address(RVA = "0xBEFF58", Offset = "0xBEFF58", VA = "0xBEFF58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF2")]
				[Address(RVA = "0xBEFFC4", Offset = "0xBEFFC4", VA = "0xBEFFC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xBEFD44", Offset = "0xBEFD44", VA = "0xBEFD44")]
			[DebuggerHidden]
			public <DisplayCountdownRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xBEFD78", Offset = "0xBEFD78", VA = "0xBEFD78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xBEFD7C", Offset = "0xBEFD7C", VA = "0xBEFD7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xBEFF60", Offset = "0xBEFF60", VA = "0xBEFF60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Mesh buttonMesh;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Mesh inactiveButtonMesh;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MeshFilter confirmButtonMeshFilter;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MeshFilter cancelButtonMeshFilter;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int timeToUnlock;

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xBEFB2C", Offset = "0xBEFB2C", VA = "0xBEFB2C")]
		public void ShowAndLockButtonsForSeconds(MonoBehaviour owner, int seconds, Args args)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xBEFC24", Offset = "0xBEFC24", VA = "0xBEFC24")]
		public void LockButtonsForSeconds(MonoBehaviour owner)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xBEFCA4", Offset = "0xBEFCA4", VA = "0xBEFCA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42F60", Offset = "0xA42F60")]
		private IEnumerator UnlockButtonsRoutine()
		{
			return null;
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xBEFB9C", Offset = "0xBEFB9C", VA = "0xBEFB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42FC4", Offset = "0xA42FC4")]
		private IEnumerator DisplayCountdownRoutine(string originalConfirmLabel, string originalCancelLabel)
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xBEFD70", Offset = "0xBEFD70", VA = "0xBEFD70")]
		public BasicTutorialConfirmationPopup()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class BasicTutorialSceneSystem : MonoBehaviour, ISystem, IRequirePlayerSubsystems, IRequireVRObjects
	{
		[Token(Token = "0x2000448")]
		private enum SubTutorials
		{
			[Token(Token = "0x40016AC")]
			None,
			[Token(Token = "0x40016AD")]
			Movement,
			[Token(Token = "0x40016AE")]
			GeneralGrabTutorial,
			[Token(Token = "0x40016AF")]
			TrashPicking,
			[Token(Token = "0x40016B0")]
			ToolBelt,
			[Token(Token = "0x40016B1")]
			OpenDoor,
			[Token(Token = "0x40016B2")]
			OpenTabletShop,
			[Token(Token = "0x40016B3")]
			OpenShopTab,
			[Token(Token = "0x40016B4")]
			OpenCategory,
			[Token(Token = "0x40016B5")]
			OpenItemScreen,
			[Token(Token = "0x40016B6")]
			GrabPreviewItem,
			[Token(Token = "0x40016B7")]
			EnableItemManipulation,
			[Token(Token = "0x40016B8")]
			MoveItem,
			[Token(Token = "0x40016B9")]
			RotateItem,
			[Token(Token = "0x40016BA")]
			PlaceItem,
			[Token(Token = "0x40016BB")]
			OpenTabletJob,
			[Token(Token = "0x40016BC")]
			OpenJobsTab,
			[Token(Token = "0x40016BD")]
			OpenJob,
			[Token(Token = "0x40016BE")]
			GotoJob
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356AC", Offset = "0xA356AC")]
		private sealed class <StartTutorialCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF6")]
				[Address(RVA = "0xCEEE30", Offset = "0xCEEE30", VA = "0xCEEE30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF8")]
				[Address(RVA = "0xCEEE9C", Offset = "0xCEEE9C", VA = "0xCEEE9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xCEED04", Offset = "0xCEED04", VA = "0xCEED04")]
			[DebuggerHidden]
			public <StartTutorialCoroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xCEED30", Offset = "0xCEED30", VA = "0xCEED30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xCEED34", Offset = "0xCEED34", VA = "0xCEED34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xCEEE38", Offset = "0xCEEE38", VA = "0xCEEE38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356BC", Offset = "0xA356BC")]
		private sealed class <NotifyAboutTabletUsageAfter30Sec>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AFC")]
				[Address(RVA = "0xBF2678", Offset = "0xBF2678", VA = "0xBF2678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AFE")]
				[Address(RVA = "0xBF26E4", Offset = "0xBF26E4", VA = "0xBF26E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xBF0E60", Offset = "0xBF0E60", VA = "0xBF0E60")]
			[DebuggerHidden]
			public <NotifyAboutTabletUsageAfter30Sec>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xBF2534", Offset = "0xBF2534", VA = "0xBF2534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xBF2538", Offset = "0xBF2538", VA = "0xBF2538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xBF2680", Offset = "0xBF2680", VA = "0xBF2680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356CC", Offset = "0xA356CC")]
		private struct <>c__DisplayClass62_0
		{
			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public _Code.VR.InputSystem.Hand manipulatingHand;
		}

		[StructLayout(3)]
		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356DC", Offset = "0xA356DC")]
		private struct <>c__DisplayClass63_0
		{
			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public _Code.VR.InputSystem.Hand manipulatingHand;
		}

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356EC", Offset = "0xA356EC")]
		private sealed class <ShowTutorialDelayedCoroutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TutorialSubSystem.TutorialType type;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B02")]
				[Address(RVA = "0xCEEC90", Offset = "0xCEEC90", VA = "0xCEEC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B04")]
				[Address(RVA = "0xCEECFC", Offset = "0xCEECFC", VA = "0xCEECFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xCEEA00", Offset = "0xCEEA00", VA = "0xCEEA00")]
			[DebuggerHidden]
			public <ShowTutorialDelayedCoroutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xCEEA2C", Offset = "0xCEEA2C", VA = "0xCEEA2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xCEEA30", Offset = "0xCEEA30", VA = "0xCEEA30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xCEEC98", Offset = "0xCEEC98", VA = "0xCEEC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356FC", Offset = "0xA356FC")]
		private sealed class <PlayNarratorLineDelayedCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BasicTutorialSceneSystem <>4__this;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NarratorLine line;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B08")]
				[Address(RVA = "0xBF27A4", Offset = "0xBF27A4", VA = "0xBF27A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B0A")]
				[Address(RVA = "0xBF2810", Offset = "0xBF2810", VA = "0xBF2810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xBF2260", Offset = "0xBF2260", VA = "0xBF2260")]
			[DebuggerHidden]
			public <PlayNarratorLineDelayedCoroutine>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xBF26EC", Offset = "0xBF26EC", VA = "0xBF26EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xBF26F0", Offset = "0xBF26F0", VA = "0xBF26F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xBF27AC", Offset = "0xBF27AC", VA = "0xBF27AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spawnPoint;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BasicTutorialConfirmationPopup popup;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject tutorialObjects;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C788", Offset = "0xA3C788")]
		[SerializeField]
		private TeleportMarkerReferenceHandler teleportMarker;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject houseTeleportBlocker;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C7E4", Offset = "0xA3C7E4")]
		[SerializeField]
		private Tool tool;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform toolPlacePoint;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Rigidbody toolRigidbody;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C850", Offset = "0xA3C850")]
		[SerializeField]
		private TrashPart[] trashParts;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C89C", Offset = "0xA3C89C")]
		[SerializeField]
		private DoorRotationInteraction door;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject doorCross;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3C8F8", Offset = "0xA3C8F8")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip completeSound;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tablet tablet;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine showTutorialCoroutine;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Subsystems playerSubsystems;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRObjects vrObjects;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<InputAction> unlockedInputActions;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private QuestLineHelper questLineHelper;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Item shopItem;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SubTutorials currentTutorial;

		[Token(Token = "0x400102A")]
		private const float SHOW_TUTORIAL_DELAY = 5f;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C954", Offset = "0xA3C954")]
		private SceneSystemsInitialiser <SceneSystemsInitialiser>k__BackingField;

		[Token(Token = "0x170001EE")]
		private string replayPopupText
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xBF013C", Offset = "0xBF013C", VA = "0xBF013C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private string firstConfirmPopupText
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xBF0188", Offset = "0xBF0188", VA = "0xBF0188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private string firstCancelPopupText
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xBF01D4", Offset = "0xBF01D4", VA = "0xBF01D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private string secondConfirmPopupText
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xBF0220", Offset = "0xBF0220", VA = "0xBF0220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private string secondCancelPopupText
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xBF026C", Offset = "0xBF026C", VA = "0xBF026C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private string askLastTimePopupText
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xBF02B8", Offset = "0xBF02B8", VA = "0xBF02B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public SceneSystemsInitialiser SceneSystemsInitialiser
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xBF0304", Offset = "0xBF0304", VA = "0xBF0304", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44028", Offset = "0xA44028")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xBF030C", Offset = "0xBF030C", VA = "0xBF030C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44038", Offset = "0xA44038")]
			set
			{
			}
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xBF0314", Offset = "0xBF0314", VA = "0xBF0314", Slot = "9")]
		public void AssignRequiredObject(VRObjects vrObjects)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xBF04EC", Offset = "0xBF04EC", VA = "0xBF04EC", Slot = "8")]
		public void AssignRequiredObject(Subsystems subsystems)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xBF051C", Offset = "0xBF051C", VA = "0xBF051C", Slot = "6")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xBF094C", Offset = "0xBF094C", VA = "0xBF094C")]
		public void DisableQuestDataUI()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xBF070C", Offset = "0xBF070C", VA = "0xBF070C")]
		private void ShowReplayPopup()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xBF09A0", Offset = "0xBF09A0", VA = "0xBF09A0")]
		private void AskLastTime()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xBF0814", Offset = "0xBF0814", VA = "0xBF0814")]
		private void StartTutorial()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xBF0AA8", Offset = "0xBF0AA8", VA = "0xBF0AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA44048", Offset = "0xA44048")]
		private IEnumerator StartTutorialCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xBF0B1C", Offset = "0xBF0B1C", VA = "0xBF0B1C")]
		private void ShowAndPlayMovementTutorial()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xBF0BCC", Offset = "0xBF0BCC", VA = "0xBF0BCC")]
		public void ResetTutorials()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xBF0C98", Offset = "0xBF0C98", VA = "0xBF0C98")]
		private void FinishBasicTutorial()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xBF0DEC", Offset = "0xBF0DEC", VA = "0xBF0DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA440AC", Offset = "0xA440AC")]
		private IEnumerator NotifyAboutTabletUsageAfter30Sec()
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xBF0E8C", Offset = "0xBF0E8C", VA = "0xBF0E8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xBF1030", Offset = "0xBF1030", VA = "0xBF1030")]
		private void TeleportTutorial()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xBF12C0", Offset = "0xBF12C0", VA = "0xBF12C0")]
		private void GrabTutorial()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xBF1338", Offset = "0xBF1338", VA = "0xBF1338")]
		private void TrashPickTutorial()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xBF1400", Offset = "0xBF1400", VA = "0xBF1400")]
		private void ToolBeltTutorial()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xBF149C", Offset = "0xBF149C", VA = "0xBF149C")]
		private void OpenDoorTutorial()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xBF155C", Offset = "0xBF155C", VA = "0xBF155C")]
		private void OpenTabletShopTutorial()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xBF15A4", Offset = "0xBF15A4", VA = "0xBF15A4")]
		private void OpenShopTabTutorial()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xBF165C", Offset = "0xBF165C", VA = "0xBF165C")]
		private void OpenCategoryTabTutorial()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xBF1714", Offset = "0xBF1714", VA = "0xBF1714")]
		private void OpenItemScreenTutorial()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xBF17CC", Offset = "0xBF17CC", VA = "0xBF17CC")]
		private void GrabPreviewItemTutorial()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xBF1828", Offset = "0xBF1828", VA = "0xBF1828")]
		private void EnableItemManipulationModeTutorial()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xBF1884", Offset = "0xBF1884", VA = "0xBF1884")]
		private void MoveItemTutorial()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xBF18E8", Offset = "0xBF18E8", VA = "0xBF18E8")]
		private void RotateItemTutorial()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xBF194C", Offset = "0xBF194C", VA = "0xBF194C")]
		private void PlaceItemTutorial()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xBF1A3C", Offset = "0xBF1A3C", VA = "0xBF1A3C")]
		private void OpenTabletJobTutorial()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xBF1B04", Offset = "0xBF1B04", VA = "0xBF1B04")]
		private void OpenJobsTabTutorial()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xBF1BC4", Offset = "0xBF1BC4", VA = "0xBF1BC4")]
		private void OpenJobScreenTutorial()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xBF1C9C", Offset = "0xBF1C9C", VA = "0xBF1C9C")]
		private void GotoJobTutorial()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xBF1F54", Offset = "0xBF1F54", VA = "0xBF1F54")]
		private void HandleSceneLoadStarted()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xBF2044", Offset = "0xBF2044", VA = "0xBF2044")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xBF1E9C", Offset = "0xBF1E9C", VA = "0xBF1E9C")]
		private void AssignBoughtItem()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xBF1D64", Offset = "0xBF1D64", VA = "0xBF1D64")]
		private _Code.VR.InputSystem.Hand GetManipulatingHand()
		{
			return default(_Code.VR.InputSystem.Hand);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xBF1D10", Offset = "0xBF1D10", VA = "0xBF1D10")]
		private _Code.VR.InputSystem.Hand GetHoldingItemHand()
		{
			return default(_Code.VR.InputSystem.Hand);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xBF2084", Offset = "0xBF2084", VA = "0xBF2084")]
		private StickAction GetStickAction(_Code.VR.InputSystem.Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xBF20C0", Offset = "0xBF20C0", VA = "0xBF20C0")]
		private void ShowAndPlayTutorialDelayed(TutorialSubSystem.TutorialType tutorialType, NarratorLine line, float delay = 5f)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xBF0B60", Offset = "0xBF0B60", VA = "0xBF0B60")]
		private void ShowTutorialDelayed(TutorialSubSystem.TutorialType type, float delay = 5f)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xBF2138", Offset = "0xBF2138", VA = "0xBF2138")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA44110", Offset = "0xA44110")]
		private IEnumerator ShowTutorialDelayedCoroutine(TutorialSubSystem.TutorialType type, float delay)
		{
			return null;
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xBF210C", Offset = "0xBF210C", VA = "0xBF210C")]
		private void PlayNarratorLineDelayed(NarratorLine line, float delay = 5f)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xBF21CC", Offset = "0xBF21CC", VA = "0xBF21CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA44174", Offset = "0xA44174")]
		private IEnumerator PlayNarratorLineDelayedCoroutine(NarratorLine line, float delay)
		{
			return null;
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xBF1CD8", Offset = "0xBF1CD8", VA = "0xBF1CD8")]
		private void PlayNarratorLine(NarratorLine line)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xBF1CA0", Offset = "0xBF1CA0", VA = "0xBF1CA0")]
		private void HideAndMuteTutorialImmediate()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xBF228C", Offset = "0xBF228C", VA = "0xBF228C")]
		private void HideTutorialImmediate()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xBF03BC", Offset = "0xBF03BC", VA = "0xBF03BC")]
		private void SetActiveWristButtons(bool value)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xBF22F0", Offset = "0xBF22F0", VA = "0xBF22F0")]
		public void PlayCompleteSound()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xBF23FC", Offset = "0xBF23FC", VA = "0xBF23FC")]
		private void CompleteFromPopup()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xBF069C", Offset = "0xBF069C", VA = "0xBF069C")]
		private void Complete()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xBF2480", Offset = "0xBF2480", VA = "0xBF2480")]
		private void CompleteAsDeveloper()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xBF2518", Offset = "0xBF2518", VA = "0xBF2518")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xBF2520", Offset = "0xBF2520", VA = "0xBF2520")]
		public void CollectRefs()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xBF2524", Offset = "0xBF2524", VA = "0xBF2524", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xBF252C", Offset = "0xBF252C", VA = "0xBF252C")]
		public BasicTutorialSceneSystem()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xBF1DCC", Offset = "0xBF1DCC", VA = "0xBF1DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA441D8", Offset = "0xA441D8")]
		private bool <MoveItemTutorial>g__StickMovedVertically|62_0(ref <>c__DisplayClass62_0 P_0)
		{
			return default(bool);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xBF1E34", Offset = "0xBF1E34", VA = "0xBF1E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA441E8", Offset = "0xA441E8")]
		private bool <RotateItemTutorial>g__StickMovedHorizontally|63_0(ref <>c__DisplayClass63_0 P_0)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200027F")]
	public class QuestLineHelper
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Subsystems playerSubsystems;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuestsData questData;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasicTutorialSceneSystem owner;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool teleportTutorialStartShown;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool grabTutorialStartShown;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool trashPickTutorialStartShown;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool toolBeltTutorialStartShown;

		[Token(Token = "0x4001033")]
		private const float DISPLAY_UI_DELAY = 0f;

		[Token(Token = "0x4001034")]
		private const int NEW = 0;

		[Token(Token = "0x4001035")]
		private const int DONE = 100;

		[Token(Token = "0x170001F5")]
		private string tabletLine
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xCEEEA4", Offset = "0xCEEEA4", VA = "0xCEEEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private string movementLine
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xCEEEF0", Offset = "0xCEEEF0", VA = "0xCEEEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private string grabLine
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xCEEF88", Offset = "0xCEEF88", VA = "0xCEEF88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private string trashLine
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xCEEFD4", Offset = "0xCEEFD4", VA = "0xCEEFD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private string toolbeltLine
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xCEF020", Offset = "0xCEF020", VA = "0xCEF020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private string doorLine
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xCEF06C", Offset = "0xCEF06C", VA = "0xCEF06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private string openTabletLine
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xCEF0B8", Offset = "0xCEF0B8", VA = "0xCEF0B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private string openShopTabLine
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xCEF104", Offset = "0xCEF104", VA = "0xCEF104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private string choseCategoryLine
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xCEF150", Offset = "0xCEF150", VA = "0xCEF150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private string choseItemLine
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xCEF19C", Offset = "0xCEF19C", VA = "0xCEF19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private string grabItemLine
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xCEF1E8", Offset = "0xCEF1E8", VA = "0xCEF1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private string enableItemManipulationLine
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xCEF234", Offset = "0xCEF234", VA = "0xCEF234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private string moveItemLine
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xCEF280", Offset = "0xCEF280", VA = "0xCEF280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private string rotateItemLine
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xCEF2CC", Offset = "0xCEF2CC", VA = "0xCEF2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private string placeItemLine
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xCEF318", Offset = "0xCEF318", VA = "0xCEF318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private string openTabletJobLine
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0xCEF364", Offset = "0xCEF364", VA = "0xCEF364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private string openJobsTabLine
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xCEF3B0", Offset = "0xCEF3B0", VA = "0xCEF3B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private string openSingleJobLine
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xCEF3FC", Offset = "0xCEF3FC", VA = "0xCEF3FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private string gotoJobLine
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xCEF448", Offset = "0xCEF448", VA = "0xCEF448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xCEF494", Offset = "0xCEF494", VA = "0xCEF494")]
		public QuestLineHelper(Subsystems playerSubsystems, BasicTutorialSceneSystem owner)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xCEF518", Offset = "0xCEF518", VA = "0xCEF518")]
		private void DisplayQuestUI(bool playCompleteSound = true)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xCEFC2C", Offset = "0xCEFC2C", VA = "0xCEFC2C")]
		public void TeleportQuestLines()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xCEFD98", Offset = "0xCEFD98", VA = "0xCEFD98")]
		public void GrabQuestLines()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xCEFEA0", Offset = "0xCEFEA0", VA = "0xCEFEA0")]
		public void TrashPickQuestLine()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xCEFFD4", Offset = "0xCEFFD4", VA = "0xCEFFD4")]
		public void ToolBeltQuestLine()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xCF0134", Offset = "0xCF0134", VA = "0xCF0134")]
		public void DoorOpenQuestLine()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xCF02B0", Offset = "0xCF02B0", VA = "0xCF02B0")]
		public void OpenTabletShopQuestLine()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xCF037C", Offset = "0xCF037C", VA = "0xCF037C")]
		public void OpenShopTabQuestLine()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xCF0474", Offset = "0xCF0474", VA = "0xCF0474")]
		public void ChoseCategoryQuestLine()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xCF056C", Offset = "0xCF056C", VA = "0xCF056C")]
		public void ChoseItemQuestLine()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xCF0664", Offset = "0xCF0664", VA = "0xCF0664")]
		public void GrabItemQuestLine()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xCF075C", Offset = "0xCF075C", VA = "0xCF075C")]
		public void EnableItemManipulationQuestLine()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xCF0854", Offset = "0xCF0854", VA = "0xCF0854")]
		public void MoveItemQuestLine()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xCF094C", Offset = "0xCF094C", VA = "0xCF094C")]
		public void RotateItemQuestLine()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xCF0A44", Offset = "0xCF0A44", VA = "0xCF0A44")]
		public void PlaceItemQuestLine()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xCF0B3C", Offset = "0xCF0B3C", VA = "0xCF0B3C")]
		public void OpenTabletJobQuestLine()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xCF0C34", Offset = "0xCF0C34", VA = "0xCF0C34")]
		public void OpenJobsTabQuestLine()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xCF0D2C", Offset = "0xCF0D2C", VA = "0xCF0D2C")]
		public void DisplayGoToJobFinished()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xCF0DF8", Offset = "0xCF0DF8", VA = "0xCF0DF8")]
		public void OpenSingleJobQuestLine()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xCF0EF0", Offset = "0xCF0EF0", VA = "0xCF0EF0")]
		public void GotoJobQuestLine()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xCF0FE8", Offset = "0xCF0FE8", VA = "0xCF0FE8")]
		public void TeleportTutorialFinishQuestLines()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xCF10B4", Offset = "0xCF10B4", VA = "0xCF10B4")]
		public void GrabTutorialFinishQuestLine()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xCF11AC", Offset = "0xCF11AC", VA = "0xCF11AC")]
		public void TrashPickTutorialFinishQuestLine()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xCEFD08", Offset = "0xCEFD08", VA = "0xCEFD08")]
		private QuestInfo GetQuestInfo(string label, int progress)
		{
			return default(QuestInfo);
		}
	}
	[Token(Token = "0x2000280")]
	internal class TeleportMarkerReferenceHandler : MonoBehaviour
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject marker;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform markerTransform;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject arrow;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform arrowTransform;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator animator;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xCF12D0", Offset = "0xCF12D0", VA = "0xCF12D0")]
		public TeleportMarkerReferenceHandler()
		{
		}
	}
}
